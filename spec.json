{
    "ResourceTypes": {
        "AWS::SSM::MaintenanceWindowTask": {
            "ssm-maintenancewindowtask-description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-description",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-logginginfo": {
                "Required": "No",
                "Type": "LoggingInfo",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-logginginfo",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-logginginfo",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-maxconcurrency": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "7",
                "Pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-maxconcurrency",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-maxconcurrency",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-maxerrors": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "7",
                "Pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-maxerrors",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-maxerrors",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "128",
                "Pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-name",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-priority": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "0",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-priority",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-priority",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-servicerolearn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-servicerolearn",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-servicerolearn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-targets": {
                "Required": "Yes",
                "Type": "List of [Target",
                "Maximum": "5",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-targets",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-targets",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-taskarn": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1600",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-taskarn",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskarn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-taskinvocationparameters": {
                "Required": "No",
                "Type": "TaskInvocationParameters",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-taskinvocationparameters",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskinvocationparameters",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-taskparameters": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-taskparameters",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskparameters",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-tasktype": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "AUTOMATION",
                    "LAMBDA",
                    "RUN_COMMAND",
                    "STEP_FUNCTIONS"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-tasktype",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-tasktype",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-windowid": {
                "Required": "No",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "20",
                "Pattern": "^mw-[0-9a-f]{17}$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-windowid",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-windowid",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-description": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-description",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-logginginfo": {
            "Required": "No",
            "Type": "LoggingInfo",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-logginginfo",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-logginginfo",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-maxconcurrency": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "7",
            "Pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-maxconcurrency",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-maxconcurrency",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-maxerrors": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "7",
            "Pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-maxerrors",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-maxerrors",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "3",
            "Maximum": "128",
            "Pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-name",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-priority": {
            "Required": "Yes",
            "Type": "Integer",
            "Minimum": "0",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-priority",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-priority",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-servicerolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-servicerolearn",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-servicerolearn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-targets": {
            "Required": "Yes",
            "Type": "List of [Target",
            "Maximum": "5",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-targets",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-targets",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskarn": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-taskarn",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskarn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskinvocationparameters": {
            "Required": "No",
            "Type": "TaskInvocationParameters",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-taskinvocationparameters",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskinvocationparameters",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskparameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-taskparameters",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskparameters",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-tasktype": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "AUTOMATION",
                "LAMBDA",
                "RUN_COMMAND",
                "STEP_FUNCTIONS"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-tasktype",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-tasktype",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-windowid": {
            "Required": "No",
            "Type": "String",
            "Minimum": "20",
            "Maximum": "20",
            "Pattern": "^mw-[0-9a-f]{17}$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-windowid",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-windowid",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        }
    },
    "PropertyTypes": {
        "String": "example-string",
        "Boolean": "True",
        "Integer": "1",
        "Long": "123.4",
        "Double": "123.45",
        "Float": "1.23456789",
        "Json": {
            "todo": "json"
        },
        "Timestamp": "1970-01-01T01:02:30.070Z",
        "config.remediationconfiguration.staticvalue.Values": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "25",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.bytematchstatement.SearchStringBase64": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.bytematchstatement.FieldToMatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.bytematchstatement.SearchString": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.bytematchstatement.TextTransformations": {
            "Required": "Yes",
            "Type": [
                "TextTransformation"
            ],
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.bytematchstatement.PositionalConstraint": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.iotevents.InputName": {
            "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotevents.detectormodel.iotevents.Payload": {
            "Required": "No",
            "Type": "Payload",
            "UpdateRequires": "No interruption"
        },
        "applicationautoscaling.scalingpolicy.metricdimension.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalingpolicy.metricdimension.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.application.inputschema.RecordEncoding": {
            "Pattern": "UTF-8",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.application.inputschema.RecordColumns": {
            "Required": "Yes",
            "Type": [
                "RecordColumn"
            ],
            "Maximum": "1000",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.inputschema.RecordFormat": {
            "Required": "Yes",
            "Type": "RecordFormat",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.placementtype.AvailabilityZone": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "10280",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10280",
            "CompliantValues": "0...10280"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses.PrivateIpAddress": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses.Primary": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "datapipeline.pipeline.pipelineobjects.fields.Key": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "datapipeline.pipeline.pipelineobjects.fields.StringValue": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "0",
            "Required": "Conditional",
            "Maximum": "10240",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...10240",
            "CompliantValues": "0...10240"
        },
        "datapipeline.pipeline.pipelineobjects.fields.RefValue": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Conditional",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "pinpoint.campaign.metricdimension.Value": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "pinpoint.campaign.metricdimension.ComparisonOperator": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.resourcerequirement.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.resourcerequirement.Type": {
            "Allowed values": "GPU",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.capacityprovider.autoscalinggroupprovider.ManagedTerminationProtection": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.capacityprovider.autoscalinggroupprovider.ManagedScaling": {
            "Required": "No",
            "Type": "ManagedScaling",
            "UpdateRequires": "Replacement"
        },
        "ecs.capacityprovider.autoscalinggroupprovider.AutoScalingGroupArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "msk.cluster.encryptionintransit.InCluster": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "msk.cluster.encryptionintransit.ClientBroker": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.application.inputparallelism.Count": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "ses.configurationseteventdestination.eventdestination.CloudWatchDestination": {
            "Required": "No",
            "Type": "CloudWatchDestination",
            "UpdateRequires": "No interruption"
        },
        "ses.configurationseteventdestination.eventdestination.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.configurationseteventdestination.eventdestination.Enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ses.configurationseteventdestination.eventdestination.KinesisFirehoseDestination": {
            "Required": "No",
            "Type": "KinesisFirehoseDestination",
            "UpdateRequires": "No interruption"
        },
        "ses.configurationseteventdestination.eventdestination.MatchingEventTypes": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.channel.retentionperiod.Unlimited": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "iotanalytics.channel.retentionperiod.NumberOfDays": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "glue.securityconfiguration.jobbookmarksencryption.KmsKeyArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.securityconfiguration.jobbookmarksencryption.JobBookmarksEncryptionMode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.httptimeout.PerRequest": {
            "Required": "No",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.httptimeout.Idle": {
            "Required": "No",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.datasetcontentdeliveryrule.Destination": {
            "Required": "Yes",
            "Type": "DatasetContentDeliveryRuleDestination",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.datasetcontentdeliveryrule.EntryName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentconfig.minimumhealthyhosts.Type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentconfig.minimumhealthyhosts.Value": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.webacl.rulegroupreferencestatement.Arn": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "wafv2.webacl.rulegroupreferencestatement.ExcludedRules": {
            "Required": "No",
            "Type": [
                "ExcludedRule"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.classicloadbalancersconfig.ClassicLoadBalancers": {
            "Required": "Yes",
            "Type": [
                "ClassicLoadBalancer"
            ],
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "greengrass.resourcedefinition.localdeviceresourcedata.GroupOwnerSetting": {
            "Required": "No",
            "Type": "GroupOwnerSetting",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinition.localdeviceresourcedata.SourcePath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "groundstation.config.configdata.AntennaDownlinkDemodDecodeConfig": {
            "Required": "No",
            "Type": "AntennaDownlinkDemodDecodeConfig",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.configdata.UplinkEchoConfig": {
            "Required": "No",
            "Type": "UplinkEchoConfig",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.configdata.AntennaUplinkConfig": {
            "Required": "No",
            "Type": "AntennaUplinkConfig",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.configdata.DataflowEndpointConfig": {
            "Required": "No",
            "Type": "DataflowEndpointConfig",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.configdata.AntennaDownlinkConfig": {
            "Required": "No",
            "Type": "AntennaDownlinkConfig",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.configdata.TrackingConfig": {
            "Required": "No",
            "Type": "TrackingConfig",
            "UpdateRequires": "No interruption"
        },
        "config.conformancepack.conformancepackinputparameter.ParameterValue": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "4096",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...4096",
            "CompliantValues": "0...4096"
        },
        "config.conformancepack.conformancepackinputparameter.ParameterName": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...255",
            "CompliantValues": "0...255"
        },
        "waf.sqlinjectionmatchset.sqlinjectionmatchtuples.FieldToMatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "waf.sqlinjectionmatchset.sqlinjectionmatchtuples.TextTransformation": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.httprouteaction.WeightedTargets": {
            "Required": "Yes",
            "Type": [
                "WeightedTarget"
            ],
            "UpdateRequires": "No interruption"
        },
        "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.Cooldown": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.MetricAggregationType": {
            "Allowed values": "Average | Maximum | Minimum",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.StepAdjustments": {
            "Required": "No",
            "Type": [
                "StepAdjustment"
            ],
            "UpdateRequires": "No interruption"
        },
        "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.AdjustmentType": {
            "Allowed values": "ChangeInCapacity | ExactCapacity | PercentChangeInCapacity",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.MinAdjustmentMagnitude": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.MediumAction": {
            "Required": "No",
            "Type": "AccountTakeoverActionType",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.LowAction": {
            "Required": "No",
            "Type": "AccountTakeoverActionType",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.HighAction": {
            "Required": "No",
            "Type": "AccountTakeoverActionType",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.ratebasedstatementone.AggregateKeyType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.ratebasedstatementone.ScopeDownStatement": {
            "Required": "No",
            "Type": "StatementTwo",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.ratebasedstatementone.Limit": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "iotanalytics.dataset.filter.DeltaTime": {
            "Required": "No",
            "Type": "DeltaTime",
            "UpdateRequires": "No interruption"
        },
        "ec2.ec2fleet.placement.PartitionNumber": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ec2.ec2fleet.placement.Affinity": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.placement.Tenancy": {
            "Allowed values": "dedicated | default | host",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.placement.AvailabilityZone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.placement.GroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.placement.HostId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.placement.SpreadDomain": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.placement.HostResourceGroupArn": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ec2.security.group.Tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.security.group.GroupDescription": {
            "Required": "Yes",
            "UpdateRequires": "Replacement"
        },
        "ec2.security.group.SecurityGroupIngress": {
            "Required": "No",
            "Type": [
                "Ingress"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.security.group.GroupName": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ec2.security.group.VpcId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.security.group.SecurityGroupEgress": {
            "Required": "No",
            "Type": [
                "Egress"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.websiteconfiguration.routingrules.routingrulecondition.KeyPrefixEquals": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.websiteconfiguration.routingrules.routingrulecondition.HttpErrorCodeReturnedEquals": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "lambda.alias.provisionedconcurrencyconfiguration.ProvisionedConcurrentExecutions": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "s3.bucket.notificationconfiguration.config.filter.s3key.Rules": {
            "Required": "Yes",
            "Type": [
                "FilterRule"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.loggingconfig.DestinationBucketName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.loggingconfig.LogFilePrefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.storagedescriptor.StoredAsSubDirectories": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.partition.storagedescriptor.OutputFormat": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.storagedescriptor.Location": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.storagedescriptor.SkewedInfo": {
            "Required": "No",
            "Type": "SkewedInfo",
            "UpdateRequires": "No interruption"
        },
        "glue.partition.storagedescriptor.Compressed": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.partition.storagedescriptor.NumberOfBuckets": {
            "Required": "Conditional",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "glue.partition.storagedescriptor.SerdeInfo": {
            "Required": "No",
            "Type": "SerdeInfo",
            "UpdateRequires": "No interruption"
        },
        "glue.partition.storagedescriptor.SortColumns": {
            "Required": "No",
            "Type": [
                "Order"
            ],
            "UpdateRequires": "No interruption"
        },
        "glue.partition.storagedescriptor.InputFormat": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.storagedescriptor.Columns": {
            "Required": "No",
            "Type": [
                "Column"
            ],
            "UpdateRequires": "No interruption"
        },
        "glue.partition.storagedescriptor.BucketColumns": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.partition.storagedescriptor.Parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "ec2.elb.connectiondrainingpolicy.Timeout": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.elb.connectiondrainingpolicy.Enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "kinesisanalyticsv2.applicationreferencedatasource.recordformat.RecordFormatType": {
            "Allowed values": "CSV | JSON",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.recordformat.MappingParameters": {
            "Required": "No",
            "Type": "MappingParameters",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.grpctimeout.Idle": {
            "Required": "No",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.grpctimeout.PerRequest": {
            "Required": "No",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.videoselector.ColorSpace": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.videoselector.SelectorSettings": {
            "Required": "No",
            "Type": "VideoSelectorSettings",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.videoselector.ColorSpaceUsage": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinitionversion.environment.ResourceAccessPolicies": {
            "Required": "No",
            "Type": [
                "ResourceAccessPolicy"
            ],
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinitionversion.environment.Execution": {
            "Required": "No",
            "Type": "Execution",
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinitionversion.environment.Variables": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "Replacement",
            "SampleValue": {
                "todo": "json"
            }
        },
        "greengrass.functiondefinitionversion.environment.AccessSysfs": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.cors.CorsRules": {
            "Required": "Yes",
            "Type": [
                "CorsRule"
            ],
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.artifacts.ArtifactIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.artifacts.NamespaceType": {
            "Allowed values": "BUILD_ID | NONE",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.artifacts.Name": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.artifacts.Path": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.artifacts.Location": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.artifacts.OverrideArtifactName": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codebuild.project.artifacts.Packaging": {
            "Allowed values": "NONE | ZIP",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.artifacts.Type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.artifacts.EncryptionDisabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "lambda.eventsourcemapping.onfailure.Destination": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualservice.tagref.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualservice.tagref.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.encryptionconfiguration.KMSEncryptionConfig": {
            "Required": "No",
            "Type": "KMSEncryptionConfig",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.encryptionconfiguration.NoEncryptionConfig": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.storageclassanalysis.DataExport": {
            "Required": "No",
            "Type": "DataExport",
            "UpdateRequires": "No interruption"
        },
        "beanstalk.environment.tier.Version": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "beanstalk.environment.tier.Type": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "beanstalk.environment.tier.Name": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "groundstation.config.dataflowendpointconfig.DataflowEndpointName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.config.dataflowendpointconfig.DataflowEndpointRegion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.usageplan.apistage.ApiId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.usageplan.apistage.Throttle": {
            "Required": "No",
            "Type": "Map of [ThrottleSettings",
            "UpdateRequires": "No interruption"
        },
        "apigateway.usageplan.apistage.Stage": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.projectcache.Modes": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.projectcache.Type": {
            "Allowed values": "LOCAL | NO_CACHE | S3",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.projectcache.Location": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.applicationoutput.kinesisstreamsoutput.ResourceARN": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "ask.skill.overrides.Manifest": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "glue.crawler.catalogtarget.Tables": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.crawler.catalogtarget.DatabaseName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.applicationreferencedatasource.mappingparameters.CSVMappingParameters": {
            "Required": "No",
            "Type": "CSVMappingParameters",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationreferencedatasource.mappingparameters.JSONMappingParameters": {
            "Required": "No",
            "Type": "JSONMappingParameters",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwos.statementtwos": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-rulegroup-statementtwos-properties": {
            "StatementTwos": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2.spotfleet.classicloadbalancer.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "athena.workgroup.workgroupconfigurationupdates.PublishCloudWatchMetricsEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "athena.workgroup.workgroupconfigurationupdates.EnforceWorkGroupConfiguration": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "athena.workgroup.workgroupconfigurationupdates.RequesterPaysEnabled": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "athena.workgroup.workgroupconfigurationupdates.ResultConfigurationUpdates": {
            "Required": "No",
            "Type": "ResultConfigurationUpdates",
            "UpdateRequires": "No interruption"
        },
        "athena.workgroup.workgroupconfigurationupdates.RemoveBytesScannedCutoffPerQuery": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "athena.workgroup.workgroupconfigurationupdates.BytesScannedCutoffPerQuery": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualservice.virtualservicespec.Provider": {
            "Required": "No",
            "Type": "VirtualServiceProvider",
            "UpdateRequires": "No interruption"
        },
        "elasticfilesystem.filesystem.lifecyclepolicy.transitiontoia": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "AFTER_14_DAYS",
                "AFTER_30_DAYS",
                "AFTER_60_DAYS",
                "AFTER_7_DAYS",
                "AFTER_90_DAYS"
            ],
            "Allowed Values": "AFTER_14_DAYS | AFTER_30_DAYS | AFTER_60_DAYS | AFTER_7_DAYS | AFTER_90_DAYS",
            "UpdateRequires": "No interruption",
            "SampleValue": "AFTER_14_DAYS",
            "CompliantValues": [
                "AFTER_14_DAYS",
                "AFTER_30_DAYS",
                "AFTER_60_DAYS",
                "AFTER_7_DAYS",
                "AFTER_90_DAYS"
            ]
        },
        "medialive.channel.inputspecification.Codec": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.inputspecification.Resolution": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.inputspecification.MaximumBitrate": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpool.numberattributeconstraints.MaxValue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpool.numberattributeconstraints.MinValue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpointemail.dedicatedippool.tags.Key": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpointemail.dedicatedippool.tags.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinition.environment.AccessSysfs": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "greengrass.functiondefinition.environment.ResourceAccessPolicies": {
            "Required": "No",
            "Type": [
                "ResourceAccessPolicy"
            ],
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinition.environment.Execution": {
            "Required": "No",
            "Type": "Execution",
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinition.environment.Variables": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "Replacement",
            "SampleValue": {
                "todo": "json"
            }
        },
        "cloudfront.distribution.origingroups.Items": {
            "Required": "No",
            "Type": [
                "OriginGroup"
            ],
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origingroups.Quantity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ssm.maintenancewindowtask.maintenancewindowautomationparameters.DocumentVersion": {
            "Pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.maintenancewindowautomationparameters.Parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "kinesisanalytics.application.kinesisfirehoseinput.ResourceARN": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisanalytics.application.kinesisfirehoseinput.RoleARN": {
            "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "iotanalytics.datastore.customermanageds3.KeyPrefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.datastore.customermanageds3.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.datastore.customermanageds3.Bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.api.cors.MaxAge": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apigatewayv2.api.cors.AllowMethods": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "apigatewayv2.api.cors.AllowHeaders": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "apigatewayv2.api.cors.AllowOrigins": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "apigatewayv2.api.cors.AllowCredentials": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigatewayv2.api.cors.ExposeHeaders": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.PriceClass": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.Aliases": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.DefaultCacheBehavior": {
            "Required": "No",
            "Type": "DefaultCacheBehavior",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.ViewerCertificate": {
            "Required": "No",
            "Type": "ViewerCertificate",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.OriginGroups": {
            "Required": "No",
            "Type": "OriginGroups",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.Enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudfront.distribution.distributionconfig.Comment": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.distributionconfig.WebACLId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.distributionconfig.Restrictions": {
            "Required": "No",
            "Type": "Restrictions",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.HttpVersion": {
            "Allowed values": "http1.1 | http2",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.distributionconfig.Origins": {
            "Required": "No",
            "Type": [
                "Origin"
            ],
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.CustomErrorResponses": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.CacheBehaviors": {
            "Required": "No",
            "Type": [
                "CacheBehavior"
            ],
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.IPV6Enabled": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudfront.distribution.distributionconfig.Logging": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.DefaultRootObject": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.mappingparameters.JSONMappingParameters": {
            "Required": "No",
            "Type": "JSONMappingParameters",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.mappingparameters.CSVMappingParameters": {
            "Required": "No",
            "Type": "CSVMappingParameters",
            "UpdateRequires": "No interruption"
        },
        "events.rule.batchretrystrategy.Attempts": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "medialive.input.inputvpcrequest.SecurityGroupIds": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "medialive.input.inputvpcrequest.SubnetIds": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates.Longitude": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates.Latitude": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "ec2.spotfleet.launchtemplateconfig.LaunchTemplateSpecification": {
            "Required": "No",
            "Type": "FleetLaunchTemplateSpecification",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.launchtemplateconfig.Overrides": {
            "Required": "No",
            "Type": [
                "LaunchTemplateOverrides"
            ],
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.jsonmappingparameters.RecordRowPath": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.segment.segmentdimensions.location.Country": {
            "Required": "No",
            "Type": "SetDimension",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.location.GPSPoint": {
            "Required": "No",
            "Type": "GPSPoint",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.antennadownlinkconfig.SpectrumConfig": {
            "Required": "Yes",
            "Type": "SpectrumConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.keyvalue.Value": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "10280",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10280",
            "CompliantValues": "0...10280"
        },
        "elasticmapreduce.cluster.keyvalue.Key": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "10280",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10280",
            "CompliantValues": "0...10280"
        },
        "elasticsearch.domain.cognitooptions.RoleArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticsearch.domain.cognitooptions.UserPoolId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticsearch.domain.cognitooptions.Enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticsearch.domain.cognitooptions.IdentityPoolId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.targetcapacityspecificationrequest.SpotTargetCapacity": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.ec2fleet.targetcapacityspecificationrequest.TotalTargetCapacity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.ec2fleet.targetcapacityspecificationrequest.DefaultTargetCapacityType": {
            "Allowed values": "on-demand | spot",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.targetcapacityspecificationrequest.OnDemandTargetCapacity": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "eventschemas.registry.tagsentry.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "eventschemas.registry.tagsentry.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.cloudwatchloggingoptions.Enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "kinesisfirehose.deliverystream.cloudwatchloggingoptions.LogGroupName": {
            "Pattern": "[\\.\\-_/#A-Za-z0-9]*",
            "Required": "Conditional",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...512",
            "CompliantValues": "0...512"
        },
        "kinesisfirehose.deliverystream.cloudwatchloggingoptions.LogStreamName": {
            "Pattern": "[^:*]*",
            "Required": "Conditional",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...512",
            "CompliantValues": "0...512"
        },
        "batch.jobdefinition.containerproperties.Volumes": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.containerproperties.Ulimits": {
            "Required": "No",
            "Type": [
                "Ulimit"
            ],
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.containerproperties.User": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.containerproperties.Command": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.containerproperties.Memory": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.containerproperties.ResourceRequirements": {
            "Required": "No",
            "Type": [
                "ResourceRequirement"
            ],
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.containerproperties.LinuxParameters": {
            "Required": "No",
            "Type": "LinuxParameters",
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.containerproperties.InstanceType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.containerproperties.Vcpus": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "batch.jobdefinition.containerproperties.MountPoints": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.containerproperties.ReadonlyRootFilesystem": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "batch.jobdefinition.containerproperties.Image": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.containerproperties.JobRoleArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.containerproperties.Privileged": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "batch.jobdefinition.containerproperties.Environment": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.projecttriggers.FilterGroups": {
            "Required": "No",
            "Type": [
                "FilterGroup"
            ],
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.projecttriggers.Webhook": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "medialive.channel.videoselectorsettings.VideoSelectorPid": {
            "Required": "No",
            "Type": "VideoSelectorPid",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.videoselectorsettings.VideoSelectorProgramId": {
            "Required": "No",
            "Type": "VideoSelectorProgramId",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.s3destinationconfiguration.CloudWatchLoggingOptions": {
            "Required": "No",
            "Type": "CloudWatchLoggingOptions",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.s3destinationconfiguration.BufferingHints": {
            "Required": "No",
            "Type": "BufferingHints",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.s3destinationconfiguration.Prefix": {
            "Pattern": ".*",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...1024",
            "CompliantValues": "0...1024"
        },
        "kinesisfirehose.deliverystream.s3destinationconfiguration.BucketARN": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisfirehose.deliverystream.s3destinationconfiguration.ErrorOutputPrefix": {
            "Pattern": ".*",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...1024",
            "CompliantValues": "0...1024"
        },
        "kinesisfirehose.deliverystream.s3destinationconfiguration.RoleARN": {
            "Pattern": "arn:.*",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "kinesisfirehose.deliverystream.s3destinationconfiguration.EncryptionConfiguration": {
            "Required": "No",
            "Type": "EncryptionConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.s3destinationconfiguration.CompressionFormat": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "glue.crawler.schemachangepolicy.UpdateBehavior": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.crawler.schemachangepolicy.DeleteBehavior": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.targetgrouptuple.TargetGroupArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.targetgrouptuple.Weight": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "msk.cluster.configurationinfo.Arn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "msk.cluster.configurationinfo.Revision": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "iotevents.detectormodel.assetpropertyvariant.StringValue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.assetpropertyvariant.BooleanValue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.assetpropertyvariant.DoubleValue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.assetpropertyvariant.IntegerValue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinitionversion.functionconfiguration.EncodingType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinitionversion.functionconfiguration.MemorySize": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "greengrass.functiondefinitionversion.functionconfiguration.Pinned": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "greengrass.functiondefinitionversion.functionconfiguration.ExecArgs": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinitionversion.functionconfiguration.Executable": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinitionversion.functionconfiguration.Timeout": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "greengrass.functiondefinitionversion.functionconfiguration.Environment": {
            "Required": "No",
            "Type": "Environment",
            "UpdateRequires": "Replacement"
        },
        "s3.bucket.tagfilter.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.tagfilter.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.devicedefinition.devicedefinitionversion.Devices": {
            "Required": "Yes",
            "Type": [
                "Device"
            ],
            "UpdateRequires": "Replacement"
        },
        "kinesisfirehose.deliverystream.processorparameter.ParameterName": {
            "Allowed values": "BufferIntervalInSeconds | BufferSizeInMBs | LambdaArn | NumberOfRetries | RoleArn",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.processorparameter.ParameterValue": {
            "Pattern": "^(?!\\s*$).+",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "ecs.taskdefinition.dockervolumeconfiguration.Driver": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.dockervolumeconfiguration.Scope": {
            "Allowed values": "shared | task",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.dockervolumeconfiguration.DriverOpts": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.dockervolumeconfiguration.Labels": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.dockervolumeconfiguration.Autoprovision": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.security.group.ingress.CidrIp": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.security.group.ingress.GroupId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.security.group.ingress.FromPort": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ec2.security.group.ingress.SourceSecurityGroupOwnerId": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.security.group.ingress.CidrIpv6": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.security.group.ingress.SourceSecurityGroupId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.security.group.ingress.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.ingress.GroupName": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ec2.security.group.ingress.SourcePrefixListId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.security.group.ingress.ToPort": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ec2.security.group.ingress.SourceSecurityGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.security.group.ingress.IpProtocol": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "appstream.fleet.vpcconfig.SubnetIds": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "appstream.fleet.vpcconfig.SecurityGroupIds": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.destination.Format": {
            "Allowed values": "CSV",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.destination.Prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.destination.BucketArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.destination.BucketAccountId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dynamodb.projectionobject.ProjectionType": {
            "Allowed values": "ALL | INCLUDE | KEYS_ONLY",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dynamodb.projectionobject.NonKeyAttributes": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "20",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpool.schemaattribute.Name": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
            "Required": "No",
            "Maximum": "20",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...20",
            "CompliantValues": "1...20"
        },
        "cognito.userpool.schemaattribute.Required": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cognito.userpool.schemaattribute.NumberAttributeConstraints": {
            "Required": "No",
            "Type": "NumberAttributeConstraints",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpool.schemaattribute.DeveloperOnlyAttribute": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cognito.userpool.schemaattribute.AttributeDataType": {
            "Allowed values": "Boolean | DateTime | Number | String",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpool.schemaattribute.StringAttributeConstraints": {
            "Required": "No",
            "Type": "StringAttributeConstraints",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpool.schemaattribute.Mutable": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codepipeline.customactiontype.configurationproperties.Description": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "160",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...160",
            "CompliantValues": "1...160"
        },
        "codepipeline.customactiontype.configurationproperties.Secret": {
            "Required": "Yes",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codepipeline.customactiontype.configurationproperties.Required": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codepipeline.customactiontype.configurationproperties.Name": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "50",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...50",
            "CompliantValues": "1...50"
        },
        "codepipeline.customactiontype.configurationproperties.Type": {
            "Allowed values": "Boolean | Number | String",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.customactiontype.configurationproperties.Queryable": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codepipeline.customactiontype.configurationproperties.Key": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.service.networkconfiguration.AwsvpcConfiguration": {
            "Required": "No",
            "Type": "AwsVpcConfiguration",
            "UpdateRequires": "No interruption"
        },
        "wafregional.webacl.action.Type": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.capacityprovider.managedscaling.MaximumScalingStepSize": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "10000",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...10000",
            "CompliantValues": "1...10000"
        },
        "ecs.capacityprovider.managedscaling.MinimumScalingStepSize": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "10000",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...10000",
            "CompliantValues": "1...10000"
        },
        "ecs.capacityprovider.managedscaling.TargetCapacity": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "100",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "ecs.capacityprovider.managedscaling.Status": {
            "Allowed values": "DISABLED | ENABLED",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "codebuild.project.registrycredential.Credential": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.registrycredential.CredentialProvider": {
            "Allowed values": "SECRETS_MANAGER",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.skewedinfo.SkewedColumnValueLocationMaps": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "glue.partition.skewedinfo.SkewedColumnValues": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.partition.skewedinfo.SkewedColumnNames": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "athena.workgroup.resultconfigurationupdates.RemoveEncryptionConfiguration": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "athena.workgroup.resultconfigurationupdates.RemoveOutputLocation": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "athena.workgroup.resultconfigurationupdates.OutputLocation": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "athena.workgroup.resultconfigurationupdates.EncryptionConfiguration": {
            "Required": "No",
            "Type": "EncryptionConfiguration",
            "UpdateRequires": "No interruption"
        },
        "waf.webacl.action.Type": {
            "Allowed values": "ALLOW | BLOCK | COUNT",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.deployment.revision.RevisionType": {
            "Allowed values": "AppSpecContent | GitHub | S3 | String",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.deployment.revision.GitHubLocation": {
            "Required": "No",
            "Type": "GitHubLocation",
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.deployment.revision.S3Location": {
            "Required": "No",
            "Type": "S3Location",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.Issuer": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.UserInfoEndpoint": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.Scope": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.SessionTimeout": {
            "Required": "No",
            "Type": "Long",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.4"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.OnUnauthenticatedRequest": {
            "Allowed values": "allow | authenticate | deny",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.AuthenticationRequestExtraParams": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.ClientId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.ClientSecret": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.SessionCookieName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.AuthorizationEndpoint": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.TokenEndpoint": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticbeanstalk.application.maxagerule.MaxAgeInDays": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticbeanstalk.application.maxagerule.Enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticbeanstalk.application.maxagerule.DeleteSourceFromS3": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "greengrass.subscriptiondefinitionversion.subscription.Target": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.subscriptiondefinitionversion.subscription.Subject": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.subscriptiondefinitionversion.subscription.Source": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.subscriptiondefinitionversion.subscription.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.deserializer.HiveJsonSerDe": {
            "Required": "No",
            "Type": "HiveJsonSerDe",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.deserializer.OpenXJsonSerDe": {
            "Required": "No",
            "Type": "OpenXJsonSerDe",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.oninput.TransitionEvents": {
            "Required": "No",
            "Type": [
                "TransitionEvent"
            ],
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.oninput.Events": {
            "Required": "No",
            "Type": [
                "Event"
            ],
            "UpdateRequires": "No interruption"
        },
        "stepfunctions.statemachine.loggingconfiguration.IncludeExecutionData": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "stepfunctions.statemachine.loggingconfiguration.Level": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "stepfunctions.statemachine.loggingconfiguration.Destinations": {
            "Required": "No",
            "Type": [
                "LogDestination"
            ],
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.xssmatchstatement.FieldToMatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.xssmatchstatement.TextTransformations": {
            "Required": "Yes",
            "Type": [
                "TextTransformation"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.SessionCookieName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.UserPoolDomain": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.Scope": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.SessionTimeout": {
            "Required": "No",
            "Type": "Long",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.4"
        },
        "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.AuthenticationRequestExtraParams": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.OnUnauthenticatedRequest": {
            "Allowed values": "allow | authenticate | deny",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.UserPoolArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.UserPoolClientId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.segment.segmentdimensions.demographic.AppVersion": {
            "Required": "No",
            "Type": "SetDimension",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.demographic.Channel": {
            "Required": "No",
            "Type": "SetDimension",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.demographic.Make": {
            "Required": "No",
            "Type": "SetDimension",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.demographic.DeviceType": {
            "Required": "No",
            "Type": "SetDimension",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.demographic.Platform": {
            "Required": "No",
            "Type": "SetDimension",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.demographic.Model": {
            "Required": "No",
            "Type": "SetDimension",
            "UpdateRequires": "No interruption"
        },
        "redshift.cluster.loggingproperties.S3KeyPrefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "redshift.cluster.loggingproperties.BucketName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.variable.datasetcontentversionvalue.DatasetName": {
            "Pattern": "^[a-zA-Z0-9_]+$",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "lambda.function.filesystemconfig.LocalMountPath": {
            "Pattern": "^/mnt/[a-zA-Z0-9-_.]+$",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "160",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "lambda.function.filesystemconfig.Arn": {
            "Pattern": "arn:aws[a-zA-Z-]*:elasticfilesystem:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:access-point/fsap-[a-f0-9]{17}",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "200",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.andstatementone.Statements": {
            "Required": "Yes",
            "Type": [
                "StatementTwo"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.cloudwatchalarmdefinition.Threshold": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "elasticmapreduce.cluster.cloudwatchalarmdefinition.Namespace": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.cloudwatchalarmdefinition.Statistic": {
            "Allowed values": "AVERAGE | MAXIMUM | MINIMUM | SAMPLE_COUNT | SUM",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.cloudwatchalarmdefinition.Period": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.cloudwatchalarmdefinition.MetricName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.cloudwatchalarmdefinition.Dimensions": {
            "Required": "No",
            "Type": [
                "MetricDimension"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.cloudwatchalarmdefinition.Unit": {
            "Allowed values": "BITS | BITS_PER_SECOND | BYTES | BYTES_PER_SECOND | COUNT | COUNT_PER_SECOND | GIGA_BITS | GIGA_BITS_PER_SECOND | GIGA_BYTES | GIGA_BYTES_PER_SECOND | KILO_BITS | KILO_BITS_PER_SECOND | KILO_BYTES | KILO_BYTES_PER_SECOND | MEGA_BITS | MEGA_BITS_PER_SECOND | MEGA_BYTES | MEGA_BYTES_PER_SECOND | MICRO_SECONDS | MILLI_SECONDS | NONE | PERCENT | SECONDS | TERA_BITS | TERA_BITS_PER_SECOND | TERA_BYTES | TERA_BYTES_PER_SECOND",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.cloudwatchalarmdefinition.EvaluationPeriods": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.cloudwatchalarmdefinition.ComparisonOperator": {
            "Allowed values": "GREATER_THAN | GREATER_THAN_OR_EQUAL | LESS_THAN | LESS_THAN_OR_EQUAL",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.instanceipv6address.Ipv6Address": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.viewercertificate.IamCertificateId": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.viewercertificate.MinimumProtocolVersion": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.viewercertificate.SslSupportMethod": {
            "Allowed values": "sni-only | vip",
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.viewercertificate.AcmCertificateArn": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.viewercertificate.CloudFrontDefaultCertificate": {
            "Required": "Conditional",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.securityconfiguration.encryptionconfiguration.CloudWatchEncryption": {
            "Required": "No",
            "Type": "CloudWatchEncryption",
            "UpdateRequires": "No interruption"
        },
        "glue.securityconfiguration.encryptionconfiguration.JobBookmarksEncryption": {
            "Required": "No",
            "Type": "JobBookmarksEncryption",
            "UpdateRequires": "No interruption"
        },
        "glue.securityconfiguration.encryptionconfiguration.S3Encryptions": {
            "Required": "No",
            "Type": "S3Encryptions",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpool.accountrecoverysetting.RecoveryMechanisms": {
            "Required": "No",
            "Type": [
                "RecoveryOption"
            ],
            "Maximum": "2",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.networkinterface.Ipv6Addresses": {
            "Required": "No",
            "Type": [
                "Ipv6Add"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.networkinterface.PrivateIpAddress": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.networkinterface.DeviceIndex": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.launchtemplate.networkinterface.AssociatePublicIpAddress": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.launchtemplate.networkinterface.InterfaceType": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.networkinterface.NetworkInterfaceId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.networkinterface.Groups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.networkinterface.SubnetId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.networkinterface.PrivateIpAddresses": {
            "Required": "No",
            "Type": [
                "PrivateIpAdd"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.networkinterface.SecondaryPrivateIpAddressCount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.launchtemplate.networkinterface.Ipv6AddressCount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.launchtemplate.networkinterface.DeleteOnTermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.launchtemplate.networkinterface.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.sigv4authorization.SigningRegion": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.sigv4authorization.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.sigv4authorization.ServiceName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.stage.accesslogsettings.DestinationArn": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.stage.accesslogsettings.Format": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.elasticsearchbufferinghints.IntervalInSeconds": {
            "Minimum": "60",
            "Required": "No",
            "Maximum": "900",
            "UpdateRequires": "No interruption",
            "AllowedValues": "60...900",
            "CompliantValues": "60...900"
        },
        "kinesisfirehose.deliverystream.elasticsearchbufferinghints.SizeInMBs": {
            "Minimum": "1",
            "Required": "No",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "groundstation.config.decodeconfig.UnvalidatedJSON": {
            "Required": "Yes",
            "Type": "JSON",
            "UpdateRequires": "No interruption"
        },
        "appconfig.configurationprofile.tags.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appconfig.configurationprofile.tags.Key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.patchbaseline.rulegroup.PatchRules": {
            "Required": "No",
            "Type": [
                "Rule"
            ],
            "Maximum": "10",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.targetgroup.targetdescription.Port": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "65535",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...65535",
            "CompliantValues": "1...65535"
        },
        "elasticloadbalancingv2.targetgroup.targetdescription.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.targetgroup.targetdescription.AvailabilityZone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.recordset.SetIdentifier": {
            "Minimum": "1",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "route53.recordset.Name": {
            "Required": "Yes",
            "Maximum": "1024",
            "UpdateRequires": "Replacement"
        },
        "route53.recordset.Weight": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.HealthCheckId": {
            "UpdateRequires": "No interruption",
            "Required": "No",
            "Maximum": "64",
            "HealthCheckId`  <a name=\"cfn-route53-recordset-healthcheckid\"></a>\nIf you want Amazon Route 53 to return this resource record set in response to a DNS query only when the status of a health check is healthy, include the `HealthCheckId` element and specify the ID of the applicable health check\\.  \nRoute 53 determines whether a resource record set is healthy based on one of the following:  \n+ By periodically sending a request to the endpoint that is specified in the health check\n+ By aggregating the status of a specified group of health checks \\(calculated health checks\\)\n+ By determining the current state of a CloudWatch alarm \\(CloudWatch metric health checks\\)\nRoute 53 doesn't check the health of the endpoint that is specified in the resource record set, for example, the endpoint specified by the IP address in the `Value` element\\. When you add a `HealthCheckId` element to a resource record set, Route 53 checks the health of the endpoint that you specified in the health check\\. \nFor more information, see the following topics in the *Amazon Route 53 Developer Guide": "+  [How Amazon Route 53 Determines Whether an Endpoint Is Healthy](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html) \n+  [Route 53 Health Checks and DNS Failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html) \n **When to Specify HealthCheckId**   \nSpecifying a value for `HealthCheckId` is useful only when Route 53 is choosing between two or more resource record sets to respond to a DNS query, and you want Route 53 to base the choice in part on the status of a health check\\. Configuring health checks makes sense only in the following configurations:  \n+  **Non\\-alias resource record sets*"
        },
        "route53.recordset.HostedZoneName": {
            "Required": "No",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "route53.recordset.ResourceRecords": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.AliasTarget": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.MultiValueAnswer": {
            "UpdateRequires": "No interruption",
            "Required": "No",
            "Type": "Boolean",
            "MultiValueAnswer`  <a name=\"cfn-route53-recordset-multivalueanswer\"></a>\n *Multivalue answer resource record sets only": "To route traffic approximately randomly to multiple resources, such as web servers, create one multivalue answer record for each resource and specify `true` for `MultiValueAnswer`\\. Note the following:  \n+ If you associate a health check with a multivalue answer resource record set, Amazon Route 53 responds to DNS queries with the corresponding IP address only when the health check is healthy\\.\n+ If you don't associate a health check with a multivalue answer record, Route 53 always considers the record to be healthy\\.\n+ Route 53 responds to DNS queries with up to eight healthy records; if you have eight or fewer healthy records, Route 53 responds to all DNS queries with all the healthy records\\.\n+ If you have more than eight healthy records, Route 53 responds to different DNS resolvers with different combinations of healthy records\\.\n+ When all records are unhealthy, Route 53 responds to DNS queries with up to eight unhealthy records\\.\n+ If a resource becomes unavailable after a resolver caches a response, client software typically tries another of the IP addresses in the response\\.\nYou can't create multivalue answer alias records\\.",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "route53.recordset.GeoLocation": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.Region": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.Comment": {
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.Type": {
            "Type`  <a name=\"cfn-route53-recordset-type\"></a>\nThe DNS record type\\. For information about different record types and how data is encoded for them, see [Supported DNS Resource Record Types](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html) in the *Amazon Route 53 Developer Guide*\\.  \nValid values for basic resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `NS` \\| `PTR` \\| `SOA` \\| `SPF` \\| `SRV` \\| `TXT`   \nValues for weighted, latency, geolocation, and failover resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`\\. When creating a group of weighted, latency, geolocation, or failover resource record sets, specify the same value for all of the resource record sets in the group\\.  \nValid values for multivalue answer resource record sets: `A` \\| `AAAA` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`   \nSPF records were formerly used to verify the identity of the sender of email messages\\. However, we no longer recommend that you create resource record sets for which the value of `Type` is `SPF`\\. RFC 7208, *Sender Policy Framework \\(SPF\\) for Authorizing Use of Domains in Email, Version 1*, has been updated to say, \"\\.\\.\\.\\[I\\]ts existence and mechanism defined in \\[RFC4408\\] have led to some interoperability issues\\. Accordingly, its use is no longer appropriate for SPF version 1; implementations are not to use it\\.\" In RFC 7208, see section 14\\.1, [The SPF DNS Record Type](http://tools.ietf.org/html/rfc7208#section-14.1)\\.\nValues for alias resource record sets:  \n+  **Amazon API Gateway custom regional APIs and edge\\-optimized APIs:** `A` \n+  **CloudFront distributions:** `A` \n\n  If IPv6 is enabled for the distribution, create two resource record sets to route traffic to your distribution, one with a value of `A` and one with a value of `AAAA`\\. \n+  **Amazon API Gateway environment that has a regionalized subdomain*": "A` \n+  **ELB load balancers:** `A` \\| `AAAA` \n+  **Amazon S3 buckets:** `A` \n+  **Amazon Virtual Private Cloud interface VPC endpoints** `A` \n+  **Another resource record set in this hosted zone:** Specify the type of the resource record set that you're creating the alias for\\. All values are supported except `NS` and `SOA`\\.",
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.HostedZoneId": {
            "Required": "No",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "route53.recordset.Failover": {
            "Type": "String",
            "Required": "No",
            "Failover`  <a name=\"cfn-route53-recordset-failover\"></a>\n *Failover resource record sets only:* To configure failover, you add the `Failover` element to two resource record sets\\. For one resource record set, you specify `PRIMARY` as the value for `Failover`; for the other resource record set, you specify `SECONDARY`\\. In addition, you include the `HealthCheckId` element and specify the health check that you want Amazon Route 53 to perform for each resource record set\\.  \nExcept where noted, the following failover behaviors assume that you have included the `HealthCheckId` element in both resource record sets:  \n+ When the primary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the secondary resource record set\\.\n+ When the primary resource record set is unhealthy and the secondary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the secondary resource record set\\.\n+ When the secondary resource record set is unhealthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the primary resource record set\\.\n+ If you omit the `HealthCheckId` element for the secondary resource record set, and if the primary resource record set is unhealthy, Route 53 always responds to DNS queries with the applicable value from the secondary resource record set\\. This is true regardless of the health of the associated endpoint\\.\nYou can't create non\\-failover resource record sets that have the same values for the `Name` and `Type` elements as failover resource record sets\\.  \nFor failover alias resource record sets, you must also include the `EvaluateTargetHealth` element and set the value to true\\.  \nFor more information about configuring failover for Route 53, see the following topics in the *Amazon Route 53 Developer Guide": "+  [Route 53 Health Checks and DNS Failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html)",
            "UpdateRequires": "No interruption",
            "Allowed values": "PRIMARY | SECONDARY",
            "SampleValue": "example-string"
        },
        "route53.recordset.TTL": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.ondemandoptionsrequest.SingleInstanceType": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.ec2fleet.ondemandoptionsrequest.SingleAvailabilityZone": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.ec2fleet.ondemandoptionsrequest.MaxTotalPrice": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.ondemandoptionsrequest.MinTargetCapacity": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ec2.ec2fleet.ondemandoptionsrequest.AllocationStrategy": {
            "Allowed values": "lowest-price | prioritized",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.ondemandoptionsrequest.CapacityReservationOptions": {
            "Required": "No",
            "Type": "CapacityReservationOptionsRequest",
            "UpdateRequires": "Replacement"
        },
        "kinesisfirehose.deliverystream.inputformatconfiguration.Deserializer": {
            "Required": "No",
            "Type": "Deserializer",
            "UpdateRequires": "No interruption"
        },
        "appstream.imagebuilder.accessendpoint.EndpointType": {
            "Allowed values": "STREAMING",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.imagebuilder.accessendpoint.VpceId": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.datacatalogencryptionsettings.datacatalogencryptionsettings.EncryptionAtRest": {
            "Required": "No",
            "Type": "EncryptionAtRest",
            "UpdateRequires": "No interruption"
        },
        "glue.datacatalogencryptionsettings.datacatalogencryptionsettings.ConnectionPasswordEncryption": {
            "Required": "No",
            "Type": "ConnectionPasswordEncryption",
            "UpdateRequires": "No interruption"
        },
        "codestar.githubrepository.s3.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Updates are not supported\\.",
            "SampleValue": "example-string"
        },
        "codestar.githubrepository.s3.Bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Updates are not supported\\.",
            "SampleValue": "example-string"
        },
        "codestar.githubrepository.s3.ObjectVersion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Updates are not supported\\.",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.linuxparameters.InitProcessEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.taskdefinition.linuxparameters.Tmpfs": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.linuxparameters.MaxSwap": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.linuxparameters.Swappiness": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.linuxparameters.SharedMemorySize": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.linuxparameters.Capabilities": {
            "Required": "No",
            "Type": "KernelCapabilities",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.linuxparameters.Devices": {
            "Required": "No",
            "Type": [
                "Device"
            ],
            "UpdateRequires": "Replacement"
        },
        "cloudfront.streamingdistribution.s3origin.OriginAccessIdentity": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.streamingdistribution.s3origin.DomainName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iam.policy.2.PolicyName": {
            "Pattern": "[\\w+=,.@-]+",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iam.policy.2.PolicyDocument": {
            "Pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
            "Required": "Yes",
            "Maximum": "131072",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "Json",
            "AllowedValues": "1...131072",
            "CompliantValues": "1...131072"
        },
        "appmesh.route.grpcroute.Timeout": {
            "Required": "No",
            "Type": "GrpcTimeout",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.grpcroute.RetryPolicy": {
            "Required": "No",
            "Type": "GrpcRetryPolicy",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.grpcroute.Action": {
            "Required": "Yes",
            "Type": "GrpcRouteAction",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.grpcroute.Match": {
            "Required": "Yes",
            "Type": "GrpcRouteMatch",
            "UpdateRequires": "No interruption"
        },
        "greengrass.resourcedefinitionversion.resourcedatacontainer.LocalDeviceResourceData": {
            "Required": "No",
            "Type": "LocalDeviceResourceData",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinitionversion.resourcedatacontainer.S3MachineLearningModelResourceData": {
            "Required": "No",
            "Type": "S3MachineLearningModelResourceData",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinitionversion.resourcedatacontainer.SageMakerMachineLearningModelResourceData": {
            "Required": "No",
            "Type": "SageMakerMachineLearningModelResourceData",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinitionversion.resourcedatacontainer.SecretsManagerSecretResourceData": {
            "Required": "No",
            "Type": "SecretsManagerSecretResourceData",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinitionversion.resourcedatacontainer.LocalVolumeResourceData": {
            "Required": "No",
            "Type": "LocalVolumeResourceData",
            "UpdateRequires": "Replacement"
        },
        "elasticloadbalancingv2.listenerrule.conditions.QueryStringConfig": {
            "Required": "Conditional",
            "Type": "QueryStringConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.conditions.Field": {
            "Required": "No",
            "Type": "String",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.conditions.HttpHeaderConfig": {
            "Required": "Conditional",
            "Type": "HttpHeaderConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.conditions.SourceIpConfig": {
            "Required": "Conditional",
            "Type": "SourceIpConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.conditions.Values": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.conditions.HostHeaderConfig": {
            "Required": "No",
            "Type": "HostHeaderConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.conditions.HttpRequestMethodConfig": {
            "Required": "Conditional",
            "Type": "HttpRequestMethodConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.conditions.PathPatternConfig": {
            "Required": "No",
            "Type": "PathPatternConfig",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.demodulationconfig.UnvalidatedJSON": {
            "Required": "Yes",
            "Type": "JSON",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.mappingparameters.CSVMappingParameters": {
            "Required": "No",
            "Type": "CSVMappingParameters",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.mappingparameters.JSONMappingParameters": {
            "Required": "No",
            "Type": "JSONMappingParameters",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.audioselector.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.audioselector.SelectorSettings": {
            "Required": "No",
            "Type": "AudioSelectorSettings",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolresourceserver.resourceserverscopetype.ScopeDescription": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "cognito.userpoolresourceserver.resourceserverscopetype.ScopeName": {
            "Pattern": "[\\x21\\x23-\\x2E\\x30-\\x5B\\x5D-\\x7E]+",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "greengrass.resourcedefinition.groupownersetting.GroupOwner": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinition.groupownersetting.AutoAddGroupOwner": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.dataexport.Destination": {
            "Required": "Yes",
            "Type": "Destination",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.dataexport.OutputSchemaVersion": {
            "Allowed values": "V_1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appconfig.deploymentstrategy.tags.Key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appconfig.deploymentstrategy.tags.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpoolriskconfigurationattachment.compromisedcredentialsriskconfigurationtype.EventFilter": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolriskconfigurationattachment.compromisedcredentialsriskconfigurationtype.Actions": {
            "Required": "Yes",
            "Type": "CompromisedCredentialsActionsType",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.inventoryconfiguration.ScheduleFrequency": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.inventoryconfiguration.Enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.inventoryconfiguration.OptionalFields": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.inventoryconfiguration.Destination": {
            "Required": "Yes",
            "Type": "Destination",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.inventoryconfiguration.Prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.inventoryconfiguration.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.inventoryconfiguration.IncludedObjectVersions": {
            "Allowed values": "All | Current",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudtrail.trail.dataresource.Values": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudtrail.trail.dataresource.Type": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.ec2tagsetlistobject.Ec2TagGroup": {
            "Required": "No",
            "Type": [
                "EC2TagFilter"
            ],
            "UpdateRequires": "No interruption"
        },
        "lambda.function.vpcconfig.SubnetIds": {
            "Required": "Yes",
            "Type": "List of String",
            "Maximum": "16",
            "UpdateRequires": "No interruption"
        },
        "lambda.function.vpcconfig.SecurityGroupIds": {
            "Required": "Yes",
            "Type": "List of String",
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "iam.user.loginprofile.PasswordResetRequired": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "iam.user.loginprofile.Password": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "secretsmanager.rotationschedule.rotationrules.AutomaticallyAfterDays": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "route53resolver.resolverrule.targetaddress.Ip": {
            "Minimum": "7",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "36",
            "UpdateRequires": "No interruption",
            "AllowedValues": "7...36",
            "CompliantValues": "7...36"
        },
        "route53resolver.resolverrule.targetaddress.Port": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "65535",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...65535",
            "CompliantValues": "0...65535"
        },
        "wafv2.rulegroup.orstatementtwo.Statements": {
            "Required": "Yes",
            "Type": [
                "StatementThree"
            ],
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origingroupmember.OriginId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticache.security.group.ingress.EC2SecurityGroupName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticache.security.group.ingress.EC2SecurityGroupOwnerId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticache.security.group.ingress.CacheSecurityGroupName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.partitioninput.StorageDescriptor": {
            "Required": "No",
            "Type": "StorageDescriptor",
            "UpdateRequires": "No interruption"
        },
        "glue.partition.partitioninput.Values": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "glue.partition.partitioninput.Parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "kinesisanalytics.application.inputprocessingconfiguration.InputLambdaProcessor": {
            "Required": "No",
            "Type": "InputLambdaProcessor",
            "UpdateRequires": "No interruption"
        },
        "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.Parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.ServiceRoleArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.DocumentHash": {
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.OutputS3BucketName": {
            "Minimum": "3",
            "Required": "No",
            "Type": "String",
            "Maximum": "63",
            "UpdateRequires": "No interruption",
            "AllowedValues": "3...63",
            "CompliantValues": "3...63"
        },
        "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.TimeoutSeconds": {
            "Minimum": "30",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "2592000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "30...2592000",
            "CompliantValues": "30...2592000"
        },
        "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.DocumentHashType": {
            "Allowed values": "Sha1 | Sha256",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.Comment": {
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.OutputS3KeyPrefix": {
            "Required": "No",
            "Type": "String",
            "Maximum": "500",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.NotificationConfig": {
            "Required": "No",
            "Type": "NotificationConfig",
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.targettrackingconfiguration.ScaleOutCooldown": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "autoscalingplans.scalingplan.targettrackingconfiguration.EstimatedInstanceWarmup": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "autoscalingplans.scalingplan.targettrackingconfiguration.PredefinedScalingMetricSpecification": {
            "Required": "No",
            "Type": "PredefinedScalingMetricSpecification",
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.targettrackingconfiguration.ScaleInCooldown": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "autoscalingplans.scalingplan.targettrackingconfiguration.DisableScaleIn": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "autoscalingplans.scalingplan.targettrackingconfiguration.TargetValue": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "autoscalingplans.scalingplan.targettrackingconfiguration.CustomizedScalingMetricSpecification": {
            "Required": "No",
            "Type": "CustomizedScalingMetricSpecification",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile.Arn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.OperationName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.AuthorizationType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.AuthorizationScopes": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.AuthorizerId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.Target": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.applicationsettings.campaignhook.WebUrl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.applicationsettings.campaignhook.Mode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.applicationsettings.campaignhook.LambdaFunctionName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.imagebuilder.domainjoininfo.DirectoryName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.imagebuilder.domainjoininfo.OrganizationalUnitDistinguishedName": {
            "Required": "No",
            "Type": "String",
            "Maximum": "2000",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.inputlambdaprocessor.ResourceARN": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "appsync.datasource.lambdaconfig.LambdaFunctionArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.metricdimension.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.metricdimension.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.environmentproperties.PropertyGroups": {
            "Required": "No",
            "Type": [
                "PropertyGroup"
            ],
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.scalingaction.SimpleScalingPolicyConfiguration": {
            "Required": "Yes",
            "Type": "SimpleScalingPolicyConfiguration",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.scalingaction.Market": {
            "Allowed values": "ON_DEMAND | SPOT",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.blockdev.mapping.NoDevice": {
            "Required": "No",
            "Type": "NoDevice",
            "UpdateRequires": "No interruption"
        },
        "ec2.blockdev.mapping.DeviceName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.blockdev.mapping.Ebs": {
            "Required": "Conditional",
            "Type": "Ebs",
            "UpdateRequires": "No interruption"
        },
        "ec2.blockdev.mapping.VirtualName": {
            "VirtualName`  <a name=\"cfn-ec2-blockdev-mapping-virtualname\"></a>\nThe virtual device name \\(`ephemeral`N\\)\\. The name must be in the form `ephemeral`*X* where *X* is a number starting from zero \\(0\\)\\. For example, an instance type with 2 available instance store volumes can specify mappings for `ephemeral0` and `ephemeral1`\\. The number of available instance store volumes depends on the instance type\\. After you connect to the instance, you must mount the volume\\.  \nNVMe instance store volumes are automatically enumerated and assigned a device name\\. Including them in your block device mapping has no effect\\.  \nYou can specify either `VirtualName` or `Ebs`, but not both\\.  \n *Constraints": "For M3 instances, you must specify instance store volumes in the block device mapping for the instance\\. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI\\.",
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.kinesisaction.StreamName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.kinesisaction.PartitionKey": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.kinesisaction.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.localdeviceresourcedata.SourcePath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.localdeviceresourcedata.GroupOwnerSetting": {
            "Required": "No",
            "Type": "GroupOwnerSetting",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.instancefleetprovisioningspecifications.SpotSpecification": {
            "Required": "Yes",
            "Type": "SpotProvisioningSpecification",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.texttransformation.Priority": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.webacl.texttransformation.Type": {},
        "wafv2.webacl.texttransformation.COMPRESS_WHITE_SPACE": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.RegexPatternSetReferenceStatement": {
            "Required": "No",
            "Type": "RegexPatternSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.ByteMatchStatement": {
            "Required": "No",
            "Type": "ByteMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.IPSetReferenceStatement": {
            "Required": "No",
            "Type": "IPSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.RuleGroupReferenceStatement": {
            "Required": "No",
            "Type": "RuleGroupReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.ManagedRuleGroupStatement": {
            "Required": "No",
            "Type": "ManagedRuleGroupStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.NotStatement": {
            "Required": "No",
            "Type": "NotStatementTwo",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.XssMatchStatement": {
            "Required": "No",
            "Type": "XssMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.GeoMatchStatement": {
            "Required": "No",
            "Type": "GeoMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.SqliMatchStatement": {
            "Required": "No",
            "Type": "SqliMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.RateBasedStatement": {
            "Required": "No",
            "Type": "RateBasedStatementTwo",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.OrStatement": {
            "Required": "No",
            "Type": "OrStatementTwo",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.AndStatement": {
            "Required": "No",
            "Type": "AndStatementTwo",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.SizeConstraintStatement": {
            "Required": "No",
            "Type": "SizeConstraintStatement",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskdefinition.resourcerequirement.Type": {
            "Allowed values": "GPU | InferenceAccelerator",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.resourcerequirement.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.loadbalancer.loadbalancerattributes.Value": {
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.loadbalancer.loadbalancerattributes.Key": {
            "Pattern": "^[a-zA-Z0-9._]+$",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualservice.virtualserviceprovider.VirtualRouter": {
            "Required": "No",
            "Type": "VirtualRouterServiceProvider",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualservice.virtualserviceprovider.VirtualNode": {
            "Required": "No",
            "Type": "VirtualNodeServiceProvider",
            "UpdateRequires": "No interruption"
        },
        "ec2.clientvpnendpoint.clientauthenticationrequest.MutualAuthentication": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.clientvpnendpoint.clientauthenticationrequest.Type": {
            "Allowed values": "certificate-authentication | directory-service-authentication | federated-authentication",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.clientvpnendpoint.clientauthenticationrequest.ActiveDirectory": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.clientvpnendpoint.clientauthenticationrequest.FederatedAuthentication": {
            "Required": "No",
            "Type": "FederatedAuthenticationRequest",
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.customizedscalingmetricspecification.Statistic": {
            "Allowed values": "Average | Maximum | Minimum | SampleCount | Sum",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.customizedscalingmetricspecification.Dimensions": {
            "Required": "No",
            "Type": [
                "MetricDimension"
            ],
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.customizedscalingmetricspecification.Unit": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.customizedscalingmetricspecification.MetricName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.customizedscalingmetricspecification.Namespace": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.fleet.domainjoininfo.DirectoryName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.fleet.domainjoininfo.OrganizationalUnitDistinguishedName": {
            "Required": "No",
            "Type": "String",
            "Maximum": "2000",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.cognitouserpoolconfig.AwsRegion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.cognitouserpoolconfig.AppIdClientRegex": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.cognitouserpoolconfig.UserPoolId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "synthetics.canary.schedule.Expression": {
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "synthetics.canary.schedule.DurationInSeconds": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.storagedescriptor.BucketColumns": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.table.storagedescriptor.Location": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.storagedescriptor.SerdeInfo": {
            "Required": "No",
            "Type": "SerdeInfo",
            "UpdateRequires": "No interruption"
        },
        "glue.table.storagedescriptor.NumberOfBuckets": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "glue.table.storagedescriptor.SkewedInfo": {
            "Required": "No",
            "Type": "SkewedInfo",
            "UpdateRequires": "No interruption"
        },
        "glue.table.storagedescriptor.OutputFormat": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.storagedescriptor.InputFormat": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.storagedescriptor.Parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "glue.table.storagedescriptor.Columns": {
            "Required": "No",
            "Type": [
                "Column"
            ],
            "UpdateRequires": "No interruption"
        },
        "glue.table.storagedescriptor.StoredAsSubDirectories": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.table.storagedescriptor.Compressed": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.table.storagedescriptor.SortColumns": {
            "Required": "No",
            "Type": [
                "Order"
            ],
            "UpdateRequires": "No interruption"
        },
        "amplify.app.basicauthconfig.Password": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amplify.app.basicauthconfig.EnableBasicAuth": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "amplify.app.basicauthconfig.Username": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticbeanstalk.application.applicationversionlifecycleconfig.MaxAgeRule": {
            "Required": "No",
            "Type": "MaxAgeRule",
            "UpdateRequires": "No interruption"
        },
        "elasticbeanstalk.application.applicationversionlifecycleconfig.MaxCountRule": {
            "Required": "No",
            "Type": "MaxCountRule",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.singleheader.name": {
            "Pattern": ".*\\S.*",
            "Required": "No",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "wafv2-webacl-singleheader-properties": {
            "Name": {
                "Pattern": ".*\\S.*",
                "Required": "No",
                "Maximum": "64",
                "UpdateRequires": "No interruption",
                "Minimum": "1",
                "Type": "String",
                "AllowedValues": "1...64",
                "CompliantValues": "1...64"
            }
        },
        "medialive.inputsecuritygroup.inputwhitelistrulecidr.Cidr": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.audiopidselection.Pid": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "config.remediationconfiguration.ssmcontrols.ConcurrentExecutionRatePercentage": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "config.remediationconfiguration.ssmcontrols.ErrorPercentage": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "iotanalytics.pipeline.activity.AddAttributes": {
            "Required": "No",
            "Type": "AddAttributes",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.activity.Channel": {
            "Required": "No",
            "Type": "Channel",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.activity.Datastore": {
            "Required": "No",
            "Type": "Datastore",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.activity.RemoveAttributes": {
            "Required": "No",
            "Type": "RemoveAttributes",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.activity.DeviceRegistryEnrich": {
            "Required": "No",
            "Type": "DeviceRegistryEnrich",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.activity.Math": {
            "Required": "No",
            "Type": "Math",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.activity.SelectAttributes": {
            "Required": "No",
            "Type": "SelectAttributes",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.activity.DeviceShadowEnrich": {
            "Required": "No",
            "Type": "DeviceShadowEnrich",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.activity.Filter": {
            "Required": "No",
            "Type": "Filter",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.activity.Lambda": {
            "Required": "No",
            "Type": "Lambda",
            "UpdateRequires": "No interruption"
        },
        "sagemaker.endpointconfig.productionvariant.InitialVariantWeight": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "Replacement",
            "SampleValue": "123.45"
        },
        "sagemaker.endpointconfig.productionvariant.VariantName": {
            "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "63",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sagemaker.endpointconfig.productionvariant.AcceleratorType": {
            "Allowed values": "ml.eia1.large | ml.eia1.medium | ml.eia1.xlarge | ml.eia2.large | ml.eia2.medium | ml.eia2.xlarge",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sagemaker.endpointconfig.productionvariant.ModelName": {
            "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "63",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sagemaker.endpointconfig.productionvariant.InstanceType": {
            "Allowed values": "ml.c4.2xlarge | ml.c4.4xlarge | ml.c4.8xlarge | ml.c4.large | ml.c4.xlarge | ml.c5.18xlarge | ml.c5.2xlarge | ml.c5.4xlarge | ml.c5.9xlarge | ml.c5.large | ml.c5.xlarge | ml.c5d.18xlarge | ml.c5d.2xlarge | ml.c5d.4xlarge | ml.c5d.9xlarge | ml.c5d.large | ml.c5d.xlarge | ml.g4dn.12xlarge | ml.g4dn.16xlarge | ml.g4dn.2xlarge | ml.g4dn.4xlarge | ml.g4dn.8xlarge | ml.g4dn.xlarge | ml.inf1.24xlarge | ml.inf1.2xlarge | ml.inf1.6xlarge | ml.inf1.xlarge | ml.m4.10xlarge | ml.m4.16xlarge | ml.m4.2xlarge | ml.m4.4xlarge | ml.m4.xlarge | ml.m5.12xlarge | ml.m5.24xlarge | ml.m5.2xlarge | ml.m5.4xlarge | ml.m5.large | ml.m5.xlarge | ml.m5d.12xlarge | ml.m5d.24xlarge | ml.m5d.2xlarge | ml.m5d.4xlarge | ml.m5d.large | ml.m5d.xlarge | ml.p2.16xlarge | ml.p2.8xlarge | ml.p2.xlarge | ml.p3.16xlarge | ml.p3.2xlarge | ml.p3.8xlarge | ml.r5.12xlarge | ml.r5.24xlarge | ml.r5.2xlarge | ml.r5.4xlarge | ml.r5.large | ml.r5.xlarge | ml.r5d.12xlarge | ml.r5d.24xlarge | ml.r5d.2xlarge | ml.r5d.4xlarge | ml.r5d.large | ml.r5d.xlarge | ml.t2.2xlarge | ml.t2.large | ml.t2.medium | ml.t2.xlarge",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sagemaker.endpointconfig.productionvariant.InitialInstanceCount": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "appmesh.virtualnode.tagref.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.tagref.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "eks.nodegroup.remoteaccess.SourceSecurityGroups": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "eks.nodegroup.remoteaccess.Ec2SshKey": {
            "Required": "Yes",
            "UpdateRequires": "Replacement"
        },
        "pinpointemail.configurationseteventdestination.dimensionconfiguration.DimensionValueSource": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpointemail.configurationseteventdestination.dimensionconfiguration.DefaultDimensionValue": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpointemail.configurationseteventdestination.dimensionconfiguration.DimensionName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.source.ReportBuildStatus": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codebuild.project.source.GitCloneDepth": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "codebuild.project.source.GitSubmodulesConfig": {
            "Required": "No",
            "Type": "GitSubmodulesConfig",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.source.Location": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.source.BuildSpec": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.source.Type": {
            "Allowed values": "BITBUCKET | CODECOMMIT | CODEPIPELINE | GITHUB | GITHUB_ENTERPRISE | NO_SOURCE | S3",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.source.SourceIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.source.InsecureSsl": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codebuild.project.source.Auth": {
            "Required": "No",
            "Type": "SourceAuth",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.source.BuildStatusConfig": {
            "Required": "No",
            "Type": "BuildStatusConfig",
            "UpdateRequires": "No interruption"
        },
        "pinpointemail.configurationseteventdestination.cloudwatchdestination.DimensionConfigurations": {
            "Required": "No",
            "Type": [
                "DimensionConfiguration"
            ],
            "UpdateRequires": "No interruption"
        },
        "opsworks.stack.elasticip.Ip": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.elasticip.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waf.sizeconstraintset.sizeconstraint.TextTransformation": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "waf.sizeconstraintset.sizeconstraint.Size": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "waf.sizeconstraintset.sizeconstraint.FieldToMatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "waf.sizeconstraintset.sizeconstraint.ComparisonOperator": {
            "ComparisonOperator`  <a name=\"cfn-waf-sizeconstraintset-sizeconstraint-comparisonoperator\"></a>\nThe type of comparison you want AWS WAF to perform\\. AWS WAF uses this in combination with the provided `Size` and `FieldToMatch` to build an expression in the form of \"`Size` `ComparisonOperator` size in bytes of `FieldToMatch`\"\\. If that expression is true, the `SizeConstraint` is considered to match\\.  \n **EQ*": "Used to test if the `Size` is equal to the size of the `FieldToMatch`   \n **NE*",
            "Allowed values": "EQ | GE | GT | LE | LT | NE",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.systemcontrol.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.systemcontrol.Namespace": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "glue.job.jobcommand.ScriptLocation": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.job.jobcommand.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.job.jobcommand.PythonVersion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.regexpatternset.regex.regexstring": {
            "Pattern": ".*",
            "Required": "No",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "wafv2-regexpatternset-regex-properties": {
            "RegexString": {
                "Pattern": ".*",
                "Required": "No",
                "Maximum": "512",
                "UpdateRequires": "No interruption",
                "Minimum": "1",
                "Type": "String",
                "AllowedValues": "1...512",
                "CompliantValues": "1...512"
            }
        },
        "opsworkscm.server.engineattribute.Name": {
            "Pattern": "(?s).*",
            "Required": "No",
            "Maximum": "10000",
            "UpdateRequires": "No interruption"
        },
        "opsworkscm.server.engineattribute.Value": {
            "Pattern": "(?s).*",
            "Required": "No",
            "Maximum": "10000",
            "UpdateRequires": "No interruption"
        },
        "applicationautoscaling.scalingpolicy.customizedmetricspecification.MetricName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalingpolicy.customizedmetricspecification.Dimensions": {
            "Required": "No",
            "Type": [
                "MetricDimension"
            ],
            "UpdateRequires": "No interruption"
        },
        "applicationautoscaling.scalingpolicy.customizedmetricspecification.Unit": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalingpolicy.customizedmetricspecification.Statistic": {
            "Allowed values": "Average | Maximum | Minimum | SampleCount | Sum",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalingpolicy.customizedmetricspecification.Namespace": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.target.Key": {
            "Pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$|resource-groups:ResourceTypeFilters|resource-groups:Name",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "163",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...163",
            "CompliantValues": "1...163"
        },
        "ssm.maintenancewindowtask.target.Values": {
            "Required": "No",
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.campaigneventfilter.Dimensions": {
            "Required": "No",
            "Type": "EventDimensions",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.campaigneventfilter.FilterType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpool.verificationmessagetemplate.SmsMessage": {
            "Pattern": ".*\\{####\\}.*",
            "Required": "No",
            "Maximum": "140",
            "UpdateRequires": "No interruption",
            "Minimum": "6",
            "Type": "String",
            "AllowedValues": "6...140",
            "CompliantValues": "6...140"
        },
        "cognito.userpool.verificationmessagetemplate.EmailMessage": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{####\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
            "Required": "No",
            "Maximum": "20000",
            "UpdateRequires": "No interruption",
            "Minimum": "6",
            "Type": "String",
            "AllowedValues": "6...20000",
            "CompliantValues": "6...20000"
        },
        "cognito.userpool.verificationmessagetemplate.EmailMessageByLink": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{##[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*##\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
            "Required": "No",
            "Maximum": "20000",
            "UpdateRequires": "No interruption",
            "Minimum": "6",
            "Type": "String",
            "AllowedValues": "6...20000",
            "CompliantValues": "6...20000"
        },
        "cognito.userpool.verificationmessagetemplate.EmailSubject": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
            "Required": "No",
            "Maximum": "140",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...140",
            "CompliantValues": "1...140"
        },
        "cognito.userpool.verificationmessagetemplate.EmailSubjectByLink": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
            "Required": "No",
            "Maximum": "140",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...140",
            "CompliantValues": "1...140"
        },
        "cognito.userpool.verificationmessagetemplate.DefaultEmailOption": {
            "Allowed values": "CONFIRM_WITH_CODE | CONFIRM_WITH_LINK",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.config.trackingconfig.AutoTrack": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.column.Comment": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.column.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.column.Type": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.assetpropertytimestamp.TimeInSeconds": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.assetpropertytimestamp.OffsetInNanos": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.dataflowendpointgroup.dataflowendpoint.Address": {
            "Required": "No",
            "Type": "SocketAddress",
            "UpdateRequires": "No interruption"
        },
        "groundstation.dataflowendpointgroup.dataflowendpoint.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "sagemaker.workteam.cognitomemberdefinition.CognitoUserGroup": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "sagemaker.workteam.cognitomemberdefinition.CognitoUserPool": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sagemaker.workteam.cognitomemberdefinition.CognitoClientId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.layer.volumeconfiguration.Encrypted": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "opsworks.layer.volumeconfiguration.Iops": {
            "Required": "Conditional",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "opsworks.layer.volumeconfiguration.Size": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "opsworks.layer.volumeconfiguration.VolumeType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.layer.volumeconfiguration.MountPoint": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.layer.volumeconfiguration.RaidLevel": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "opsworks.layer.volumeconfiguration.NumberOfDisks": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.route.grpcroutemetadata.Match": {
            "Required": "No",
            "Type": "GrpcRouteMetadataMatchMethod",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.grpcroutemetadata.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.grpcroutemetadata.Invert": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticmapreduce.cluster.simplescalingpolicyconfiguration.AdjustmentType": {
            "Allowed values": "CHANGE_IN_CAPACITY | EXACT_CAPACITY | PERCENT_CHANGE_IN_CAPACITY",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.simplescalingpolicyconfiguration.ScalingAdjustment": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.simplescalingpolicyconfiguration.CoolDown": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "imagebuilder.imagepipeline.imagetestsconfiguration.ImageTestsEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "imagebuilder.imagepipeline.imagetestsconfiguration.TimeoutMinutes": {
            "Minimum": "60",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "1440",
            "UpdateRequires": "No interruption",
            "AllowedValues": "60...1440",
            "CompliantValues": "60...1440"
        },
        "as.tags.Value": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "as.tags.PropagateAtLaunch": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "as.tags.Key": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "elasticmapreduce.instancegroupconfig.scalingconstraints.MinCapacity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.instancegroupconfig.scalingconstraints.MaxCapacity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cognito.userpoolriskconfigurationattachment.accounttakeoveractiontype.Notify": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cognito.userpoolriskconfigurationattachment.accounttakeoveractiontype.EventAction": {
            "Allowed values": "BLOCK | MFA_IF_CONFIGURED | MFA_REQUIRED | NO_ACTION",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.authorizationconfig.AuthorizationType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "AuthorizationType`  <a name=\"cfn-appsync-datasource-authorizationconfig-authorizationtype\"></a>\nThe authorization type required by the HTTP endpoint\\.  \n+  **AWS\\_IAM*": "The authorization type is Sigv4\\.",
            "SampleValue": "example-string"
        },
        "appsync.datasource.authorizationconfig.AwsIamConfig": {
            "Required": "No",
            "Type": "AwsIamConfig",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.methodsetting.HttpMethod": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.deployment.stagedescription.methodsetting.ThrottlingRateLimit": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.methodsetting.CacheDataEncrypted": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigateway.deployment.stagedescription.methodsetting.ThrottlingBurstLimit": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.methodsetting.ResourcePath": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.deployment.stagedescription.methodsetting.CachingEnabled": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigateway.deployment.stagedescription.methodsetting.DataTraceEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigateway.deployment.stagedescription.methodsetting.CacheTtlInSeconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apigateway.deployment.stagedescription.methodsetting.LoggingLevel": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.methodsetting.MetricsEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "managedblockchain.member.memberconfiguration.Name": {
            "Pattern": "^(?!-)^[^0-9](?!.*--)[A-Za-z0-9-]+[^- ]$",
            "Required": "Yes",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "managedblockchain.member.memberconfiguration.MemberFrameworkConfiguration": {
            "Required": "No",
            "Type": "MemberFrameworkConfiguration",
            "UpdateRequires": "No interruption"
        },
        "managedblockchain.member.memberconfiguration.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.proxyconfiguration.ContainerName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.proxyconfiguration.ProxyConfigurationProperties": {
            "Required": "No",
            "Type": [
                "KeyValuePair"
            ],
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.proxyconfiguration.Type": {
            "Allowed values": "APPMESH",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "msk.cluster.clientauthentication.Tls": {
            "Required": "No",
            "Type": "Tls",
            "UpdateRequires": "Replacement"
        },
        "glue.table.skewedinfo.SkewedColumnValues": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.table.skewedinfo.SkewedColumnNames": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.table.skewedinfo.SkewedColumnValueLocationMaps": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "ecs.taskdefinition.secret.ValueFrom": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.secret.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "amplify.branch.basicauthconfig.Password": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amplify.branch.basicauthconfig.EnableBasicAuth": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "amplify.branch.basicauthconfig.Username": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpoolriskconfigurationattachment.compromisedcredentialsactionstype.EventAction": {
            "Allowed values": "BLOCK | NO_ACTION",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.autoscalingpolicy.Rules": {
            "Required": "Yes",
            "Type": [
                "ScalingRule"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.autoscalingpolicy.Constraints": {
            "Required": "Yes",
            "Type": "ScalingConstraints",
            "UpdateRequires": "No interruption"
        },
        "networkmanager.site.location.Latitude": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "networkmanager.site.location.Address": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "networkmanager.site.location.Longitude": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.managedrulegroupstatement.VendorName": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafv2.webacl.managedrulegroupstatement.ExcludedRules": {
            "Required": "No",
            "Type": [
                "ExcludedRule"
            ],
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.managedrulegroupstatement.Name": {
            "Pattern": "^[\\w\\-]+$",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "greengrass.resourcedefinitionversion.resourceinstance.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.resourceinstance.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.resourceinstance.ResourceDataContainer": {
            "Required": "Yes",
            "Type": "ResourceDataContainer",
            "UpdateRequires": "Replacement"
        },
        "events.rule.kinesisparameters.PartitionKeyPath": {
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption"
        },
        "ec2.ec2fleet.tagspecification.Tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "Replacement"
        },
        "ec2.ec2fleet.tagspecification.ResourceType": {
            "Allowed values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | elastic-gpu | elastic-ip | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | internet-gateway | key-pair | launch-template | local-gateway-route-table-vpc-association | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-flow-log | vpc-peering-connection | vpn-connection | vpn-gateway",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "glue.classifier.xmlclassifier.Classification": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.classifier.xmlclassifier.RowTag": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.classifier.xmlclassifier.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "glue.database.databaseinput.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "glue.database.databaseinput.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.database.databaseinput.Parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "glue.database.databaseinput.LocationUri": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.environment.RegistryCredential": {
            "Required": "No",
            "Type": "RegistryCredential",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.environment.- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codebuild.project.environment.ComputeType": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.environment.- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&": {},
        "codebuild.project.environment.Image": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.environment.Certificate": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.environment.PrivilegedMode": {},
        "codebuild.project.environment.Type": {
            "Allowed values": "ARM_CONTAINER | LINUX_CONTAINER | LINUX_GPU_CONTAINER | WINDOWS_CONTAINER",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.environment.EnvironmentVariables": {
            "Required": "No",
            "Type": [
                "EnvironmentVariable"
            ],
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.environment.- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"": {},
        "codebuild.project.environment.ImagePullCredentialsType": {
            "Allowed values": "CODEBUILD | SERVICE_ROLE",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.defaultpushnotificationtemplate.Sound": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.defaultpushnotificationtemplate.Body": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.defaultpushnotificationtemplate.Title": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.defaultpushnotificationtemplate.Url": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.defaultpushnotificationtemplate.Action": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.routespec.HttpRoute": {
            "Required": "No",
            "Type": "HttpRoute",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.routespec.GrpcRoute": {
            "Required": "No",
            "Type": "GrpcRoute",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.routespec.Http2Route": {
            "Required": "No",
            "Type": "HttpRoute",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.routespec.TcpRoute": {
            "Required": "No",
            "Type": "TcpRoute",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.routespec.Priority": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "codebuild.project.projectsourceversion.SourceVersion": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.projectsourceversion.SourceIdentifier": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.websiteconfiguration.routingrules.redirectrule.Protocol": {
            "Allowed values": "http | https",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.websiteconfiguration.routingrules.redirectrule.HttpRedirectCode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.websiteconfiguration.routingrules.redirectrule.HostName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.websiteconfiguration.routingrules.redirectrule.ReplaceKeyPrefixWith": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.websiteconfiguration.routingrules.redirectrule.ReplaceKeyWith": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.autoscalinggroup.instancesdistribution.SpotMaxPrice": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...255",
            "CompliantValues": "0...255"
        },
        "autoscaling.autoscalinggroup.instancesdistribution.OnDemandBaseCapacity": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "1"
        },
        "autoscaling.autoscalinggroup.instancesdistribution.SpotInstancePools": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "autoscaling.autoscalinggroup.instancesdistribution.SpotAllocationStrategy": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.autoscalinggroup.instancesdistribution.OnDemandAllocationStrategy": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.autoscalinggroup.instancesdistribution.OnDemandPercentageAboveBaseCapacity": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "1"
        },
        "wafv2.webacl.ratebasedstatementone.Limit": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.webacl.ratebasedstatementone.ScopeDownStatement": {
            "Required": "No",
            "Type": "StatementTwo",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.ratebasedstatementone.AggregateKeyType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.logsconfig.CloudWatchLogs": {
            "Required": "No",
            "Type": "CloudWatchLogsConfig",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.logsconfig.S3Logs": {
            "Required": "No",
            "Type": "S3LogsConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticbeanstalk.application.maxcountrule.MaxCount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticbeanstalk.application.maxcountrule.Enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticbeanstalk.application.maxcountrule.DeleteSourceFromS3": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "autoscaling.scalingpolicy.predefinedmetricspecification.PredefinedMetricType": {
            "Allowed values": "ALBRequestCountPerTarget | ASGAverageCPUUtilization | ASGAverageNetworkIn | ASGAverageNetworkOut",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.scalingpolicy.predefinedmetricspecification.ResourceLabel": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Conditional",
            "Maximum": "1023",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1023",
            "CompliantValues": "1...1023"
        },
        "appsync.datasource.rdshttpendpointconfig.DbClusterIdentifier": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.rdshttpendpointconfig.AwsRegion": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.rdshttpendpointconfig.DatabaseName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.rdshttpendpointconfig.Schema": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.rdshttpendpointconfig.AwsSecretStoreArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.domainname.domainnameconfiguration.CertificateArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.domainname.domainnameconfiguration.CertificateName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.domainname.domainnameconfiguration.EndpointType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.portmappings.ContainerPort": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.containerdefinitions.portmappings.HostPort": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.containerdefinitions.portmappings.Protocol": {
            "Allowed values": "tcp | udp",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.scalingtrigger.CloudWatchAlarmDefinition": {
            "Required": "Yes",
            "Type": "CloudWatchAlarmDefinition",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.geolocation.ContinentCode": {
            "Required": "No",
            "Maximum": "2",
            "UpdateRequires": "No interruption",
            "Minimum": "2",
            "ContinentCode`  <a name=\"cfn-route53-recordset-geolocation-continentcode\"></a>\nFor geolocation resource record sets, a two\\-letter abbreviation that identifies a continent\\. Route 53 supports the following continent codes:  \n+ **AF*": "Africa\n+ **AN*",
            "Type": "String",
            "AllowedValues": "2...2",
            "CompliantValues": "2...2"
        },
        "route53.recordset.geolocation.SubdivisionCode": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "3",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...3",
            "CompliantValues": "1...3"
        },
        "route53.recordset.geolocation.CountryCode": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "2",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2",
            "CompliantValues": "1...2"
        },
        "eks.nodegroup.scalingconfig.MinSize": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "eks.nodegroup.scalingconfig.DesiredSize": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "eks.nodegroup.scalingconfig.MaxSize": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "dynamodb.gsi.IndexName": {
            "Pattern": "[a-zA-Z0-9_.-]+",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...255",
            "CompliantValues": "3...255"
        },
        "dynamodb.gsi.KeySchema": {
            "Required": "Yes",
            "Maximum": "2",
            "UpdateRequires": "No interruption"
        },
        "dynamodb.gsi.Projection": {
            "Required": "Yes",
            "Type": "Projection",
            "UpdateRequires": "No interruption"
        },
        "dynamodb.gsi.ProvisionedThroughput": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.duration.Value": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.route.duration.Unit": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.regexpatternset.taglist.taglist": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-regexpatternset-taglist-properties": {
            "TagList": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents.detectormodel.detectormodeldefinition.InitialStateName": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotevents.detectormodel.detectormodeldefinition.States": {
            "Required": "No",
            "Type": [
                "State"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.kerberosattributes.ADDomainJoinUser": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.kerberosattributes.Realm": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.kerberosattributes.ADDomainJoinPassword": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.kerberosattributes.CrossRealmTrustPrincipalPassword": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.kerberosattributes.KdcAdminPassword": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "iotanalytics.channel.channelstorage.ServiceManagedS3": {
            "Required": "No",
            "Type": "ServiceManagedS3",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.channel.channelstorage.CustomerManagedS3": {
            "Required": "No",
            "Type": "CustomerManagedS3",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpool.stringattributeconstraints.MaxLength": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpool.stringattributeconstraints.MinLength": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.event.Actions": {
            "Required": "No",
            "Type": [
                "Action"
            ],
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.event.EventName": {
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.event.Condition": {
            "Required": "No",
            "Type": "String",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration.ExecutionTimeout": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration.DelayUntilElbConnectionsDrained": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "opsworks.stack.rdsdbinstance.RdsDbInstanceArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.rdsdbinstance.DbUser": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.rdsdbinstance.DbPassword": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "ssm.resourcedatasync.awsorganizationssource.OrganizationSourceType": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "64",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "ssm.resourcedatasync.awsorganizationssource.OrganizationalUnits": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "1000",
            "UpdateRequires": "No interruption"
        },
        "elasticsearch.domain.encryptionatrestoptions.KmsKeyId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticsearch.domain.encryptionatrestoptions.Enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "pinpoint.segment.attributedimension.Values": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.attributedimension.AttributeType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.segment.segmentdimensions.location.gpspoint.Coordinates": {
            "Required": "Yes",
            "Type": "Coordinates",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.location.gpspoint.RangeInKilometers": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "events.rule.networkconfiguration.AwsVpcConfiguration": {
            "Required": "No",
            "Type": "AwsVpcConfiguration",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.ipsetreferencestatement.Arn": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "elasticloadbalancingv2.listenerrule.sourceipconfig.Values": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.onpremisestagset.OnPremisesTagSetList": {
            "Required": "No",
            "Type": [
                "OnPremisesTagSetListObject"
            ],
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.captionselectorsettings.Scte27SourceSettings": {
            "Required": "No",
            "Type": "Scte27SourceSettings",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.captionselectorsettings.TeletextSourceSettings": {
            "Required": "No",
            "Type": "TeletextSourceSettings",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.captionselectorsettings.Scte20SourceSettings": {
            "Required": "No",
            "Type": "Scte20SourceSettings",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.captionselectorsettings.EmbeddedSourceSettings": {
            "Required": "No",
            "Type": "EmbeddedSourceSettings",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.captionselectorsettings.DvbSubSourceSettings": {
            "Required": "No",
            "Type": "DvbSubSourceSettings",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.captionselectorsettings.AribSourceSettings": {
            "Required": "No",
            "Type": "AribSourceSettings",
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.ec2tagset.Ec2TagSetList": {
            "Required": "No",
            "Type": [
                "EC2TagSetListObject"
            ],
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.XssMatchStatement": {
            "Required": "No",
            "Type": "XssMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.RegexPatternSetReferenceStatement": {
            "Required": "No",
            "Type": "RegexPatternSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.RateBasedStatement": {
            "Required": "No",
            "Type": "RateBasedStatementTwo",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.AndStatement": {
            "Required": "No",
            "Type": "AndStatementTwo",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.GeoMatchStatement": {
            "Required": "No",
            "Type": "GeoMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.OrStatement": {
            "Required": "No",
            "Type": "OrStatementTwo",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.IPSetReferenceStatement": {
            "Required": "No",
            "Type": "IPSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.NotStatement": {
            "Required": "No",
            "Type": "NotStatementTwo",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.SizeConstraintStatement": {
            "Required": "No",
            "Type": "SizeConstraintStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.ByteMatchStatement": {
            "Required": "No",
            "Type": "ByteMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.SqliMatchStatement": {
            "Required": "No",
            "Type": "SqliMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "lambda.alias.aliasroutingconfiguration.AdditionalVersionWeights": {
            "Required": "Yes",
            "Type": [
                "VersionWeight"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.targetgroup.Arn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.mesh.meshspec.EgressFilter": {
            "Required": "No",
            "Type": "EgressFilter",
            "UpdateRequires": "No interruption"
        },
        "wafregional.bytematchset.fieldtomatch.Data": {
            "Pattern": ".*\\S.*",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafregional.bytematchset.fieldtomatch.Type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.resettimer.TimerName": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "apigatewayv2.routeresponse.parameterconstraints.Required": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "kinesisfirehose.deliverystream.splunkdestinationconfiguration.ProcessingConfiguration": {
            "Required": "No",
            "Type": "ProcessingConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.splunkdestinationconfiguration.RetryOptions": {
            "Required": "No",
            "Type": "SplunkRetryOptions",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.splunkdestinationconfiguration.CloudWatchLoggingOptions": {
            "Required": "No",
            "Type": "CloudWatchLoggingOptions",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.splunkdestinationconfiguration.HECEndpointType": {
            "Allowed values": "Event | Raw",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.splunkdestinationconfiguration.HECToken": {
            "Pattern": ".*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...2048",
            "CompliantValues": "0...2048"
        },
        "kinesisfirehose.deliverystream.splunkdestinationconfiguration.HECEndpoint": {
            "Pattern": ".*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...2048",
            "CompliantValues": "0...2048"
        },
        "kinesisfirehose.deliverystream.splunkdestinationconfiguration.S3Configuration": {
            "Required": "Yes",
            "Type": "S3DestinationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.splunkdestinationconfiguration.S3BackupMode": {
            "Allowed values": "AllEvents | FailedEventsOnly",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.splunkdestinationconfiguration.HECAcknowledgmentTimeoutInSeconds": {
            "Minimum": "180",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "600",
            "UpdateRequires": "No interruption",
            "AllowedValues": "180...600",
            "CompliantValues": "180...600"
        },
        "greengrass.functiondefinition.functiondefinitionversion.Functions": {
            "Required": "Yes",
            "Type": [
                "Function"
            ],
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinition.functiondefinitionversion.DefaultConfig": {
            "Required": "No",
            "Type": "DefaultConfig",
            "UpdateRequires": "Replacement"
        },
        "ssm.maintenancewindowtask.maintenancewindowstepfunctionsparameters.Name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "80",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...80",
            "CompliantValues": "1...80"
        },
        "ssm.maintenancewindowtask.maintenancewindowstepfunctionsparameters.Input": {
            "Required": "No",
            "Type": "String",
            "Maximum": "4096",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.optiongroup.optionconfigurations.optionsettings.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.optiongroup.optionconfigurations.optionsettings.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "sns.topic.TopicName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sns.topic.FifoTopic": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "sns.topic.Tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "sns.topic.DisplayName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "sns.topic.KmsMasterKeyId": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "sns.topic.Subscription": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "sns.topic.ContentBasedDeduplication": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "appsync.resolver.syncconfig.ConflictDetection": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "ConflictDetection`  <a name=\"cfn-appsync-resolver-syncconfig-conflictdetection\"></a>\nThe Conflict Detection strategy to use\\.  \n+  **VERSION*": "Detect conflicts based on object versions for this resolver\\.\n+  **NONE*",
            "SampleValue": "example-string"
        },
        "appsync.resolver.syncconfig.ConflictHandler": {
            "ConflictHandler`  <a name=\"cfn-appsync-resolver-syncconfig-conflicthandler\"></a>\nThe Conflict Resolution strategy to perform in the event of a conflict\\.  \n+  **OPTIMISTIC\\_CONCURRENCY*": "Resolve conflicts by rejecting mutations when versions do not match the latest version at the server\\.\n+  **AUTOMERGE*",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.resolver.syncconfig.LambdaConflictHandlerConfig": {
            "Required": "No",
            "Type": "LambdaConflictHandlerConfig",
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.tagfilter.Key": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "autoscalingplans.scalingplan.tagfilter.Values": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.filter.Name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.filter.Next": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.filter.Filter": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "greengrass.resourcedefinition.localvolumeresourcedata.GroupOwnerSetting": {
            "Required": "No",
            "Type": "GroupOwnerSetting",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinition.localvolumeresourcedata.SourcePath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinition.localvolumeresourcedata.DestinationPath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "pinpointemail.identity.mailfromattributes.BehaviorOnMxFailure": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "pinpointemail.identity.mailfromattributes.MailFromDomain": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.stages.Blockers": {
            "Required": "No",
            "Type": [
                "BlockerDeclaration"
            ],
            "UpdateRequires": "No interruption"
        },
        "codepipeline.pipeline.stages.Actions": {
            "Required": "Yes",
            "Type": [
                "ActionDeclaration"
            ],
            "UpdateRequires": "No interruption"
        },
        "codepipeline.pipeline.stages.Name": {
            "Pattern": "[A-Za-z0-9.@\\-_]+",
            "Required": "Yes",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "pinpointemail.configurationseteventdestination.snsdestination.TopicArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "config.configrule.source.SourceDetails": {
            "Required": "No",
            "Type": [
                "SourceDetail"
            ],
            "Maximum": "25",
            "UpdateRequires": "No interruption"
        },
        "config.configrule.source.Owner": {
            "Allowed values": "AWS | CUSTOM_LAMBDA",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "config.configrule.source.SourceIdentifier": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "route53.aliastarget.1.DNSName": {
            "Alias records only:* The value that you specify depends on where you want to route queries:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the applicable domain name for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalDomainName`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionDomainName`\\. This is the name of the associated CloudFront distribution, such as `da1b2c3d4e5.cloudfront.net`\\.\nThe name of the record that you're creating must match a custom domain name for your API, such as `api.example.com`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nEnter the API endpoint for the interface endpoint, such as `vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com`\\. For edge\\-optimized APIs, this is the domain name for the corresponding CloudFront distribution\\. You can get the value of `DnsName` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify the domain name that CloudFront assigned when you created your distribution\\.  \nYour CloudFront distribution must include an alternate domain name that matches the name of the record\\. For example, if the name of the record is *acme\\.example\\.com*, your CloudFront distribution must include *acme\\.example\\.com* as one of the alternate domain names\\. For more information, see [Using Alternate Domain Names \\(CNAMEs\\)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html) in the *Amazon CloudFront Developer Guide*\\.  \nYou can't create a record in a private hosted zone to route traffic to a CloudFront distribution\\.  \nFor failover alias records, you can't specify a CloudFront distribution for both the primary and secondary records\\. A distribution must include an alternate domain name that matches the name of the record\\. However, the primary and secondary records have the same name, and you can't include the same alternate domain name in more than one distribution\\.   \nElastic Beanstalk environment  \nIf the domain name for your Elastic Beanstalk environment includes the region that you deployed the environment in, you can create an alias record that routes traffic to the environment\\. For example, the domain name `my-environment.us-west-2.elasticbeanstalk.com` is a regionalized domain name\\.   \nFor environments that were created before early 2016, the domain name doesn't include the region\\. To route traffic to these environments, you must create a CNAME record instead of an alias record\\. Note that you can't create a CNAME record for the root domain name\\. For example, if your domain name is example\\.com, you can create a record that routes traffic for acme\\.example\\.com to your Elastic Beanstalk environment, but you can't create a record that routes traffic for example\\.com to your Elastic Beanstalk environment\\.\nFor Elastic Beanstalk environments that have regionalized subdomains, specify the `CNAME` attribute for the environment\\. You can use the following methods to get the value of the CNAME attribute:  \n+ *AWS Management Console": "For information about how to get the value by using the console, see [Using Custom Domains with AWS Elastic Beanstalk](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customdomains.html) in the *AWS Elastic Beanstalk Developer Guide*\\.\n+ *Elastic Beanstalk API",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.aliastarget.1.HostedZoneId": {
            "UpdateRequires": "No interruption",
            "Required": "Yes",
            "Type": "String",
            "Alias resource records sets only": "The value used depends on where you want to route traffic:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the hosted zone ID for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalHostedZoneId`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionHostedZoneId`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nSpecify the hosted zone ID for your interface endpoint\\. You can get the value of `HostedZoneId` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify `Z2FDTNDATAQYW2`\\. This is always the hosted zone ID when you create an alias record that routes traffic to a CloudFront distribution\\.  \nAlias records for CloudFront can't be created in a private zone\\.  \nElastic Beanstalk environment  \nSpecify the hosted zone ID for the region that you created the environment in\\. The environment must have a regionalized subdomain\\. For a list of regions and the corresponding hosted zone IDs, see [AWS Elastic Beanstalk](https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region) in the \"AWS Regions and Endpoints\" chapter of the *Amazon Web Services General Reference*\\.  \nELB load balancer  \nSpecify the value of the hosted zone ID for the load balancer\\. Use the following methods to get the hosted zone ID:  \n+ [Service Endpoints](https://docs.aws.amazon.com/general/latest/gr/elb.html) table in the \"Elastic Load Balancing Endpoints and Quotas\" topic in the *Amazon Web Services General Reference",
            "Maximum": "32",
            "SampleValue": "example-string"
        },
        "route53.aliastarget.1.EvaluateTargetHealth": {
            "Type": "Boolean",
            "Required": "No",
            "EvaluateTargetHealth`  <a name=\"cfn-route53-aliastarget-evaluatetargethealth\"></a>\n *Applies only to alias, failover alias, geolocation alias, latency alias, and weighted alias resource record sets:* When `EvaluateTargetHealth` is `true`, an alias resource record set inherits the health of the referenced AWS resource, such as an ELB load balancer or another resource record set in the hosted zone\\.  \nNote the following:    \nCloudFront distributions  \nYou can't set `EvaluateTargetHealth` to `true` when the alias target is a CloudFront distribution\\.  \nElastic Beanstalk environments that have regionalized subdomains  \nIf you specify an Elastic Beanstalk environment in `DNSName` and the environment contains an ELB load balancer, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. \\(An environment automatically contains an ELB load balancer if it includes more than one Amazon EC2 instance\\.\\) If you set `EvaluateTargetHealth` to `true` and either no Amazon EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other available resources that are healthy, if any\\.   \nIf the environment contains a single Amazon EC2 instance, there are no special requirements\\.  \nELB load balancers  \nHealth checking behavior depends on the type of load balancer:  \n+  **Classic Load Balancers*": "If you specify an ELB Classic Load Balancer in `DNSName`, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. If you set `EvaluateTargetHealth` to `true` and either no EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other resources\\.\n+  **Application and Network Load Balancers*",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "backup.backupplan.copyactionresourcetype.DestinationBackupVaultArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "backup.backupplan.copyactionresourcetype.Lifecycle": {
            "Required": "No",
            "Type": "LifecycleResourceType",
            "UpdateRequires": "No interruption"
        },
        "glue.partition.order.Column": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.order.SortOrder": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "efs.filesystem.filesystemtags.key": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "efs.filesystem.filesystemtags.value": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.publicaccessblockconfiguration.RestrictPublicBuckets": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.publicaccessblockconfiguration.BlockPublicAcls": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.publicaccessblockconfiguration.BlockPublicPolicy": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.publicaccessblockconfiguration.IgnorePublicAcls": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "dynamodb.streamspecification.StreamViewType": {
            "Allowed values": "KEYS_ONLY | NEW_AND_OLD_IMAGES | NEW_IMAGE | OLD_IMAGE",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "efs.filesystem.lifecyclepolicy.TransitionToIA": {
            "Allowed values": "AFTER_14_DAYS | AFTER_30_DAYS | AFTER_60_DAYS | AFTER_7_DAYS | AFTER_90_DAYS",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dax.cluster.ssespecification.SSEEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.taskdefinition.repositorycredentials.CredentialsParameter": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "pinpointemail.identity.tags.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpointemail.identity.tags.Key": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "beanstalk.sourcebundle.S3Key": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "beanstalk.sourcebundle.S3Bucket": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.NoDevice": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.Ebs": {
            "Required": "Conditional",
            "Type": "EbsBlockDevice",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.VirtualName": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.DeviceName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.trigger.action.Arguments": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "glue.trigger.action.NotificationProperty": {
            "Required": "No",
            "Type": "NotificationProperty",
            "UpdateRequires": "No interruption"
        },
        "glue.trigger.action.Timeout": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "glue.trigger.action.CrawlerName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.trigger.action.SecurityConfiguration": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.trigger.action.JobName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.abortincompletemultipartupload.DaysAfterInitiation": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cognito.identitypoolroleattachment.mappingrule.MatchType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypoolroleattachment.mappingrule.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypoolroleattachment.mappingrule.Claim": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypoolroleattachment.mappingrule.RoleARN": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codecommit.repository.s3.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codecommit.repository.s3.Bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codecommit.repository.s3.ObjectVersion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.hadoopjarstepconfig.Args": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.hadoopjarstepconfig.MainClass": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "10280",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10280",
            "CompliantValues": "0...10280"
        },
        "elasticmapreduce.cluster.hadoopjarstepconfig.Jar": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "10280",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10280",
            "CompliantValues": "0...10280"
        },
        "elasticmapreduce.cluster.hadoopjarstepconfig.StepProperties": {
            "Required": "No",
            "Type": [
                "KeyValue"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.loadbalancer.subnetmapping.AllocationId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.loadbalancer.subnetmapping.PrivateIPv4Address": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.loadbalancer.subnetmapping.SubnetId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "imagebuilder.image.imagetestsconfiguration.TimeoutMinutes": {
            "Minimum": "60",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "1440",
            "UpdateRequires": "Replacement",
            "AllowedValues": "60...1440",
            "CompliantValues": "60...1440"
        },
        "imagebuilder.image.imagetestsconfiguration.ImageTestsEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.classifier.grokclassifier.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "glue.classifier.grokclassifier.CustomPatterns": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.classifier.grokclassifier.GrokPattern": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.classifier.grokclassifier.Classification": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "lakeformation.permissions.datalocationresource.S3Resource": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.alarm.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.broker.maintenancewindow.TimeOfDay": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.broker.maintenancewindow.DayOfWeek": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.broker.maintenancewindow.TimeZone": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.rule.sqsparameters.MessageGroupId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.scalingtrigger.CloudWatchAlarmDefinition": {
            "Required": "Yes",
            "Type": "CloudWatchAlarmDefinition",
            "UpdateRequires": "No interruption"
        },
        "imagebuilder.infrastructureconfiguration.s3logs.S3KeyPrefix": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "imagebuilder.infrastructureconfiguration.s3logs.S3BucketName": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "ec2.clientvpnendpoint.federatedauthenticationrequest.SAMLProviderArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.cookies.Forward": {
            "Allowed values": "all | none | whitelist",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.cookies.WhitelistedNames": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "glue.classifier.jsonclassifier.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "glue.classifier.jsonclassifier.JsonPath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.cachebehavior.Compress": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudfront.distribution.cachebehavior.ForwardedValues": {
            "Required": "Yes",
            "Type": "ForwardedValues",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.cachebehavior.PathPattern": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.cachebehavior.MaxTTL": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.cachebehavior.ViewerProtocolPolicy": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.cachebehavior.DefaultTTL": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.cachebehavior.CachedMethods": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.cachebehavior.MinTTL": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.cachebehavior.TargetOriginId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.cachebehavior.FieldLevelEncryptionId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.cachebehavior.AllowedMethods": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.cachebehavior.SmoothStreaming": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudfront.distribution.cachebehavior.TrustedSigners": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.cachebehavior.LambdaFunctionAssociations": {
            "Required": "No",
            "Type": [
                "LambdaFunctionAssociation"
            ],
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.schedule.Name": {
            "Pattern": "[\\p{all}]*",
            "Required": "No",
            "Maximum": "500",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...500",
            "CompliantValues": "0...500"
        },
        "dlm.lifecyclepolicy.schedule.CopyTags": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "dlm.lifecyclepolicy.schedule.CreateRule": {
            "Required": "No",
            "Type": "CreateRule",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.schedule.FastRestoreRule": {
            "Required": "No",
            "Type": "FastRestoreRule",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.schedule.RetainRule": {
            "Required": "No",
            "Type": "RetainRule",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.schedule.CrossRegionCopyRules": {
            "Required": "No",
            "Type": [
                "CrossRegionCopyRule"
            ],
            "Maximum": "3",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.schedule.TagsToAdd": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "Maximum": "45",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.schedule.VariableTags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "Maximum": "45",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.Firehose": {
            "Required": "No",
            "Type": "FirehoseAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.CloudwatchMetric": {
            "Required": "No",
            "Type": "CloudwatchMetricAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.Sns": {
            "Required": "No",
            "Type": "SnsAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.DynamoDBv2": {
            "Required": "No",
            "Type": "DynamoDBv2Action",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.Elasticsearch": {
            "Required": "No",
            "Type": "ElasticsearchAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.Sqs": {
            "Required": "No",
            "Type": "SqsAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.Lambda": {
            "Required": "No",
            "Type": "LambdaAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.Http": {
            "Required": "No",
            "Type": "HttpAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.Republish": {
            "Required": "No",
            "Type": "RepublishAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.StepFunctions": {
            "Required": "No",
            "Type": "StepFunctionsAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.IotSiteWise": {
            "Required": "No",
            "Type": "IotSiteWiseAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.IotAnalytics": {
            "Required": "No",
            "Type": "IotAnalyticsAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.IotEvents": {
            "Required": "No",
            "Type": "IotEventsAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.DynamoDB": {
            "Required": "No",
            "Type": "DynamoDBAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.Kinesis": {
            "Required": "No",
            "Type": "KinesisAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.S3": {
            "Required": "No",
            "Type": "S3Action",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.CloudwatchAlarm": {
            "Required": "No",
            "Type": "CloudwatchAlarmAction",
            "UpdateRequires": "No interruption"
        },
        "pinpointemail.configurationset.reputationoptions.ReputationMetricsEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "opsworks.layer.lifecycleeventconfiguration.ShutdownEventConfiguration": {
            "Required": "No",
            "Type": "ShutdownEventConfiguration",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskdefinition.containerdefinitions.mountpoints.ContainerPath": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.mountpoints.SourceVolume": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.mountpoints.ReadOnly": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "autoscaling.scalingpolicy.metricdimension.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.scalingpolicy.metricdimension.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.andstatementtwo.Statements": {
            "Required": "Yes",
            "Type": [
                "StatementThree"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.ebsconfiguration.EbsOptimized": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticmapreduce.cluster.ebsconfiguration.EbsBlockDeviceConfigs": {
            "Required": "No",
            "Type": [
                "EbsBlockDeviceConfig"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.serversideencryptionrule.ServerSideEncryptionByDefault": {
            "Required": "No",
            "Type": "ServerSideEncryptionByDefault",
            "UpdateRequires": "No interruption"
        },
        "amplify.app.environmentvariable.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amplify.app.environmentvariable.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.layer.recipes.Undeploy": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.layer.recipes.Shutdown": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.layer.recipes.Deploy": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.layer.recipes.Configure": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.layer.recipes.Setup": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.sqlapplicationconfiguration.Inputs": {
            "Required": "No",
            "Type": [
                "Input"
            ],
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.hivejsonserde.TimestampFormats": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.stopaction.TopicArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.stopaction.Scope": {
            "Allowed values": "RuleSet",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.httpaction.Url": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.httpaction.ConfirmationUrl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.httpaction.Auth": {
            "Required": "No",
            "Type": "HttpAuthorization",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.httpaction.Headers": {
            "Required": "No",
            "Type": [
                "HttpActionHeader"
            ],
            "UpdateRequires": "No interruption"
        },
        "route53.healthcheck.alarmidentifier.Name": {
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "route53.healthcheck.alarmidentifier.Region": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "s3.policy.PolicyDocument": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "s3.policy.Bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "appsync.datasource.deltasyncconfig.DeltaSyncTableName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.deltasyncconfig.BaseTableTTL": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.deltasyncconfig.DeltaSyncTableTTL": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.MaxPrice": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.SubnetId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.InstanceType": {
            "Allowed values": "a1.2xlarge | a1.4xlarge | a1.large | a1.medium | a1.metal | a1.xlarge | c1.medium | c1.xlarge | c3.2xlarge | c3.4xlarge | c3.8xlarge | c3.large | c3.xlarge | c4.2xlarge | c4.4xlarge | c4.8xlarge | c4.large | c4.xlarge | c5.12xlarge | c5.18xlarge | c5.24xlarge | c5.2xlarge | c5.4xlarge | c5.9xlarge | c5.large | c5.metal | c5.xlarge | c5a.12xlarge | c5a.16xlarge | c5a.24xlarge | c5a.2xlarge | c5a.4xlarge | c5a.8xlarge | c5a.large | c5a.xlarge | c5d.12xlarge | c5d.18xlarge | c5d.24xlarge | c5d.2xlarge | c5d.4xlarge | c5d.9xlarge | c5d.large | c5d.metal | c5d.xlarge | c5n.18xlarge | c5n.2xlarge | c5n.4xlarge | c5n.9xlarge | c5n.large | c5n.xlarge | c6g.12xlarge | c6g.16xlarge | c6g.2xlarge | c6g.4xlarge | c6g.8xlarge | c6g.large | c6g.medium | c6g.metal | c6g.xlarge | cc1.4xlarge | cc2.8xlarge | cg1.4xlarge | cr1.8xlarge | d2.2xlarge | d2.4xlarge | d2.8xlarge | d2.xlarge | f1.16xlarge | f1.2xlarge | f1.4xlarge | g2.2xlarge | g2.8xlarge | g3.16xlarge | g3.4xlarge | g3.8xlarge | g3s.xlarge | g4dn.12xlarge | g4dn.16xlarge | g4dn.2xlarge | g4dn.4xlarge | g4dn.8xlarge | g4dn.metal | g4dn.xlarge | h1.16xlarge | h1.2xlarge | h1.4xlarge | h1.8xlarge | hi1.4xlarge | hs1.8xlarge | i2.2xlarge | i2.4xlarge | i2.8xlarge | i2.xlarge | i3.16xlarge | i3.2xlarge | i3.4xlarge | i3.8xlarge | i3.large | i3.metal | i3.xlarge | i3en.12xlarge | i3en.24xlarge | i3en.2xlarge | i3en.3xlarge | i3en.6xlarge | i3en.large | i3en.metal | i3en.xlarge | inf1.24xlarge | inf1.2xlarge | inf1.6xlarge | inf1.xlarge | m1.large | m1.medium | m1.small | m1.xlarge | m2.2xlarge | m2.4xlarge | m2.xlarge | m3.2xlarge | m3.large | m3.medium | m3.xlarge | m4.10xlarge | m4.16xlarge | m4.2xlarge | m4.4xlarge | m4.large | m4.xlarge | m5.12xlarge | m5.16xlarge | m5.24xlarge | m5.2xlarge | m5.4xlarge | m5.8xlarge | m5.large | m5.metal | m5.xlarge | m5a.12xlarge | m5a.16xlarge | m5a.24xlarge | m5a.2xlarge | m5a.4xlarge | m5a.8xlarge | m5a.large | m5a.xlarge | m5ad.12xlarge | m5ad.16xlarge | m5ad.24xlarge | m5ad.2xlarge | m5ad.4xlarge | m5ad.8xlarge | m5ad.large | m5ad.xlarge | m5d.12xlarge | m5d.16xlarge | m5d.24xlarge | m5d.2xlarge | m5d.4xlarge | m5d.8xlarge | m5d.large | m5d.metal | m5d.xlarge | m5dn.12xlarge | m5dn.16xlarge | m5dn.24xlarge | m5dn.2xlarge | m5dn.4xlarge | m5dn.8xlarge | m5dn.large | m5dn.xlarge | m5n.12xlarge | m5n.16xlarge | m5n.24xlarge | m5n.2xlarge | m5n.4xlarge | m5n.8xlarge | m5n.large | m5n.xlarge | m6g.12xlarge | m6g.16xlarge | m6g.2xlarge | m6g.4xlarge | m6g.8xlarge | m6g.large | m6g.medium | m6g.metal | m6g.xlarge | p2.16xlarge | p2.8xlarge | p2.xlarge | p3.16xlarge | p3.2xlarge | p3.8xlarge | p3dn.24xlarge | r3.2xlarge | r3.4xlarge | r3.8xlarge | r3.large | r3.xlarge | r4.16xlarge | r4.2xlarge | r4.4xlarge | r4.8xlarge | r4.large | r4.xlarge | r5.12xlarge | r5.16xlarge | r5.24xlarge | r5.2xlarge | r5.4xlarge | r5.8xlarge | r5.large | r5.metal | r5.xlarge | r5a.12xlarge | r5a.16xlarge | r5a.24xlarge | r5a.2xlarge | r5a.4xlarge | r5a.8xlarge | r5a.large | r5a.xlarge | r5ad.12xlarge | r5ad.16xlarge | r5ad.24xlarge | r5ad.2xlarge | r5ad.4xlarge | r5ad.8xlarge | r5ad.large | r5ad.xlarge | r5d.12xlarge | r5d.16xlarge | r5d.24xlarge | r5d.2xlarge | r5d.4xlarge | r5d.8xlarge | r5d.large | r5d.metal | r5d.xlarge | r5dn.12xlarge | r5dn.16xlarge | r5dn.24xlarge | r5dn.2xlarge | r5dn.4xlarge | r5dn.8xlarge | r5dn.large | r5dn.xlarge | r5n.12xlarge | r5n.16xlarge | r5n.24xlarge | r5n.2xlarge | r5n.4xlarge | r5n.8xlarge | r5n.large | r5n.xlarge | r6g.12xlarge | r6g.16xlarge | r6g.2xlarge | r6g.4xlarge | r6g.8xlarge | r6g.large | r6g.medium | r6g.metal | r6g.xlarge | t1.micro | t2.2xlarge | t2.large | t2.medium | t2.micro | t2.nano | t2.small | t2.xlarge | t3.2xlarge | t3.large | t3.medium | t3.micro | t3.nano | t3.small | t3.xlarge | t3a.2xlarge | t3a.large | t3a.medium | t3a.micro | t3a.nano | t3a.small | t3a.xlarge | u-12tb1.metal | u-18tb1.metal | u-24tb1.metal | u-6tb1.metal | u-9tb1.metal | x1.16xlarge | x1.32xlarge | x1e.16xlarge | x1e.2xlarge | x1e.32xlarge | x1e.4xlarge | x1e.8xlarge | x1e.xlarge | z1d.12xlarge | z1d.2xlarge | z1d.3xlarge | z1d.6xlarge | z1d.large | z1d.metal | z1d.xlarge",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.AvailabilityZone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.Placement": {
            "Required": "No",
            "Type": "Placement",
            "UpdateRequires": "Replacement"
        },
        "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.WeightedCapacity": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "Replacement",
            "SampleValue": "123.45"
        },
        "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.Priority": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "lakeformation.permissions.databaseresource.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iam.addusertogroup.GroupName": {
            "Pattern": "[\\w+=,.@-]+",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iam.addusertogroup.Users": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "dms.endpoint.mongodbsettings.NestingLevel": {
            "Allowed values": "none | one",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.mongodbsettings.Password": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.mongodbsettings.AuthSource": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.mongodbsettings.DatabaseName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.mongodbsettings.DocsToInvestigate": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.mongodbsettings.AuthType": {
            "Allowed values": "no | password",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.mongodbsettings.Port": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "dms.endpoint.mongodbsettings.ExtractDocId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.mongodbsettings.Username": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.mongodbsettings.ServerName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.mongodbsettings.AuthMechanism": {
            "Allowed values": "default | mongodb_cr | scram_sha_1",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.httproutematch.Method": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.httproutematch.Headers": {
            "Required": "No",
            "Type": [
                "HttpRouteHeader"
            ],
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.httproutematch.Prefix": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.httproutematch.Scheme": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.volumeshost.SourcePath": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.scalingrule.Action": {
            "Required": "Yes",
            "Type": "ScalingAction",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.instancegroupconfig.scalingrule.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.scalingrule.Trigger": {
            "Required": "Yes",
            "Type": "ScalingTrigger",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.instancegroupconfig.scalingrule.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.application.inputlambdaprocessor.ResourceARN": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisanalytics.application.inputlambdaprocessor.RoleARN": {
            "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "pinpoint.segment.segmentgroups.groups.sourcesegments.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.segment.segmentgroups.groups.sourcesegments.Version": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "medialive.input.inputsourcerequest.Username": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.input.inputsourcerequest.PasswordParam": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.input.inputsourcerequest.Url": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "beanstalk.ApplicationName": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "beanstalk.ResourceLifecycleConfig": {
            "Required": "No",
            "Type": "ApplicationResourceLifecycleConfig",
            "UpdateRequires": "No interruption"
        },
        "beanstalk.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "200",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.datacatalogencryptionsettings.connectionpasswordencryption.KmsKeyId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.datacatalogencryptionsettings.connectionpasswordencryption.ReturnConnectionPasswordEncrypted": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "iot.topicrule.lambdaaction.FunctionArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.job.executionproperty.MaxConcurrentRuns": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "appmesh.virtualnode.tlsvalidationcontexttrust.File": {
            "Required": "No",
            "Type": "TlsValidationContextFileTrust",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.tlsvalidationcontexttrust.ACM": {
            "Required": "No",
            "Type": "TlsValidationContextAcmTrust",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.notificationconfiguration.config.filter.s3key.rules.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.notificationconfiguration.config.filter.s3key.rules.Name": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.querystringconfig.Values": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationoutput.lambdaoutput.RoleARN": {
            "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisanalytics.applicationoutput.lambdaoutput.ResourceARN": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "as.launchconfig.blockdev.template.SnapshotId": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Conditional",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.launchconfig.blockdev.template.Iops": {
            "Minimum": "100",
            "Required": "Conditional",
            "Maximum": "20000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "100...20000",
            "CompliantValues": "100...20000"
        },
        "as.launchconfig.blockdev.template.VolumeType": {
            "Minimum": "1",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.launchconfig.blockdev.template.Encrypted": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "as.launchconfig.blockdev.template.DeleteOnTermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "as.launchconfig.blockdev.template.VolumeSize": {
            "Minimum": "1",
            "Required": "Conditional",
            "Type": "Integer",
            "Maximum": "16384",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...16384",
            "CompliantValues": "1...16384"
        },
        "sqs.policy.Queues": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "sqs.policy.PolicyDocument": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "robomaker.simulationapplication.simulationsoftwaresuite.Version": {
            "Pattern": "7|9|Kinetic|Melodic|Dashing",
            "Required": "Yes",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...1024",
            "CompliantValues": "0...1024"
        },
        "robomaker.simulationapplication.simulationsoftwaresuite.Name": {
            "Allowed values": "Gazebo | RosbagPlay",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.gitsubmodulesconfig.FetchSubmodules": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "sagemaker.workteam.notificationconfiguration.NotificationTopicArn": {
            "Pattern": "arn:aws[a-z\\-]*:sns:[a-z0-9\\-]*:[0-9]{12}:[a-zA-Z0-9_.-]*",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinitionversion.execution.IsolationMode": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinitionversion.execution.RunAs": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "codepipeline.pipeline.stages.actions.actiontypeid.Category": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.stages.actions.actiontypeid.Provider": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.stages.actions.actiontypeid.Owner": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.stages.actions.actiontypeid.Version": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalingpolicy.predefinedmetricspecification.ResourceLabel": {
            "Minimum": "1",
            "Required": "Conditional",
            "Type": "String",
            "Maximum": "1023",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1023",
            "CompliantValues": "1...1023"
        },
        "applicationautoscaling.scalingpolicy.predefinedmetricspecification.PredefinedMetricType": {
            "Allowed values": "ALBRequestCountPerTarget | AppStreamAverageCapacityUtilization | CassandraReadCapacityUtilization | CassandraWriteCapacityUtilization | ComprehendInferenceUtilization | DynamoDBReadCapacityUtilization | DynamoDBWriteCapacityUtilization | EC2SpotFleetRequestAverageCPUUtilization | EC2SpotFleetRequestAverageNetworkIn | EC2SpotFleetRequestAverageNetworkOut | ECSServiceAverageCPUUtilization | ECSServiceAverageMemoryUtilization | LambdaProvisionedConcurrencyUtilization | RDSReaderAverageCPUUtilization | RDSReaderAverageDatabaseConnections | SageMakerVariantInvocationsPerInstance",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancefleetconfig.instancefleetprovisioningspecifications.SpotSpecification": {
            "Required": "Yes",
            "Type": "SpotProvisioningSpecification",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementthrees.statementthrees": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-rulegroup-statementthrees-properties": {
            "StatementThrees": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint.campaign.campaignsmsmessage.Body": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.campaignsmsmessage.SenderId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.campaignsmsmessage.MessageType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.grpcroutemetadatamatchmethod.Regex": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.grpcroutemetadatamatchmethod.Prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.grpcroutemetadatamatchmethod.Exact": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.grpcroutemetadatamatchmethod.Suffix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.grpcroutemetadatamatchmethod.Range": {
            "Required": "No",
            "Type": "MatchRange",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.matchrange.End": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.route.matchrange.Start": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "iotanalytics.dataset.variable.DoubleValue": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "iotanalytics.dataset.variable.OutputFileUriValue": {
            "Required": "No",
            "Type": "OutputFileUriValue",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.variable.VariableName": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "iotanalytics.dataset.variable.StringValue": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...1024",
            "CompliantValues": "0...1024"
        },
        "iotanalytics.dataset.variable.DatasetContentVersionValue": {
            "Required": "No",
            "Type": "DatasetContentVersionValue",
            "UpdateRequires": "No interruption"
        },
        "elasticache.cache.cluster.SnapshotWindow": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticache.cache.cluster.Engine": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticache.cache.cluster.VpcSecurityGroupIds": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "elasticache.cache.cluster.AZMode": {
            "Allowed values": "cross-az | single-az",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "elasticache.cache.cluster.NotificationTopicArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticache.cache.cluster.PreferredAvailabilityZone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "elasticache.cache.cluster.EngineVersion": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "elasticache.cache.cluster.CacheSecurityGroupNames": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "elasticache.cache.cluster.CacheSubnetGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticache.cache.cluster.Port": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "elasticache.cache.cluster.PreferredMaintenanceWindow": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticache.cache.cluster.Tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticache.cache.cluster.NumCacheNodes": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "1"
        },
        "elasticache.cache.cluster.SnapshotName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticache.cache.cluster.PreferredAvailabilityZones": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Some interruptions"
        },
        "elasticache.cache.cluster.SnapshotArns": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "elasticache.cache.cluster.SnapshotRetentionLimit": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticache.cache.cluster.CacheParameterGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticache.cache.cluster.CacheNodeType": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "elasticache.cache.cluster.ClusterName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticache.cache.cluster.AutoMinorVersionUpgrade": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "wafv2.rulegroup.texttransformation.Priority": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.rulegroup.texttransformation.Type": {},
        "wafv2.rulegroup.texttransformation.COMPRESS_WHITE_SPACE": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.environment.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.environment.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.snsaction.TargetArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.snsaction.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.snsaction.MessageFormat": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.teletextsourcesettings.PageNumber": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "transfer.server.identityproviderdetails.Url": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "transfer.server.identityproviderdetails.InvocationRole": {
            "Pattern": "arn:.*role/.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.jsonmappingparameters.RecordRowPath": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.grpcretrypolicy.GrpcRetryEvents": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.grpcretrypolicy.MaxRetries": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.route.grpcretrypolicy.TcpRetryEvents": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.grpcretrypolicy.PerRetryTimeout": {
            "Required": "Yes",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.grpcretrypolicy.HttpRetryEvents": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.dbinstance.processorfeature.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbinstance.processorfeature.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.scalingpolicy.targettrackingconfiguration.CustomizedMetricSpecification": {
            "Required": "Conditional",
            "Type": "CustomizedMetricSpecification",
            "UpdateRequires": "No interruption"
        },
        "autoscaling.scalingpolicy.targettrackingconfiguration.TargetValue": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "autoscaling.scalingpolicy.targettrackingconfiguration.DisableScaleIn": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "autoscaling.scalingpolicy.targettrackingconfiguration.PredefinedMetricSpecification": {
            "Required": "Conditional",
            "Type": "PredefinedMetricSpecification",
            "UpdateRequires": "No interruption"
        },
        "dynamodb.timetolivespecification.Enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "dynamodb.timetolivespecification.AttributeName": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "dms.endpoint.kafkasettings.Topic": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.kafkasettings.Broker": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualrouter.virtualrouterspec.Listeners": {
            "Required": "Yes",
            "Type": [
                "VirtualRouterListener"
            ],
            "UpdateRequires": "No interruption"
        },
        "iotevents.input.attribute.JsonPath": {
            "Pattern": "^((`[\\w\\- ]+`)|([\\w\\-]+))(\\.((`[\\w- ]+`)|([\\w\\-]+)))*$",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "groundstation.config.spectrumconfig.CenterFrequency": {
            "Required": "Yes",
            "Type": "Frequency",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.spectrumconfig.Polarization": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.config.spectrumconfig.Bandwidth": {
            "Required": "Yes",
            "Type": "Bandwidth",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.dynamodbv2action.PutItem": {
            "Required": "No",
            "Type": "PutItemInput",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.dynamodbv2action.RoleArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.actions.AuthenticateCognitoConfig": {
            "Required": "No",
            "Type": "AuthenticateCognitoConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.actions.FixedResponseConfig": {
            "Required": "No",
            "Type": "FixedResponseConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.actions.Order": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "50000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...50000",
            "CompliantValues": "1...50000"
        },
        "elasticloadbalancingv2.listenerrule.actions.RedirectConfig": {
            "Required": "No",
            "Type": "RedirectConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.actions.AuthenticateOidcConfig": {
            "Required": "No",
            "Type": "AuthenticateOidcConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.actions.Type": {
            "Allowed values": "authenticate-cognito | authenticate-oidc | fixed-response | forward | redirect",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.actions.TargetGroupArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.actions.ForwardConfig": {
            "Required": "No",
            "Type": "ForwardConfig",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualrouter.virtualrouterlistener.PortMapping": {
            "Required": "Yes",
            "Type": "PortMapping",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.copycommand.DataTableName": {
            "Pattern": ".*",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "kinesisfirehose.deliverystream.copycommand.CopyOptions": {
            "Pattern": ".*",
            "Minimum": "0",
            "Required": "No",
            "Maximum": "204800",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...204800",
            "CompliantValues": "0...204800"
        },
        "kinesisfirehose.deliverystream.copycommand.DataTableColumns": {
            "Pattern": ".*",
            "Required": "No",
            "Maximum": "204800",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...204800",
            "CompliantValues": "0...204800"
        },
        "wafv2.webacl.fieldtomatch.QueryString": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.webacl.fieldtomatch.UriPath": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.webacl.fieldtomatch.Body": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.webacl.fieldtomatch.Method": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.webacl.fieldtomatch.SingleHeader": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.webacl.fieldtomatch.AllQueryArguments": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.webacl.fieldtomatch.SingleQueryArgument": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.recordformat.RecordFormatType": {
            "Allowed values": "CSV | JSON",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.application.recordformat.MappingParameters": {
            "Required": "No",
            "Type": "MappingParameters",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationcloudwatchloggingoption.cloudwatchloggingoption.LogStreamARN": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "appstream.imagebuilder.vpcconfig.SecurityGroupIds": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "appstream.imagebuilder.vpcconfig.SubnetIds": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "iotevents.input.inputdefinition.Attributes": {
            "Required": "No",
            "Type": [
                "Attribute"
            ],
            "Maximum": "200",
            "UpdateRequires": "No interruption"
        },
        "lakeformation.datalakesettings.datalakeprincipal.DataLakePrincipalIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.connectordefinition.connector.ConnectorArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.connectordefinition.connector.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.connectordefinition.connector.Parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "Replacement",
            "SampleValue": {
                "todo": "json"
            }
        },
        "elasticloadbalancingv2.listenerrule.targetgroupstickinessconfig.DurationSeconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticloadbalancingv2.listenerrule.targetgroupstickinessconfig.Enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "networkmanager.link.bandwidth.DownloadSpeed": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "networkmanager.link.bandwidth.UploadSpeed": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.TerminationPolicies": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.group.HealthCheckGracePeriod": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "as.group.PlacementGroup": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.AvailabilityZones": {
            "Required": "Conditional",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.MaxInstanceLifetime": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.MinSize": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "as.group.LoadBalancerNames": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.group.MaxSize": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.MetricsCollection": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.DesiredCapacity": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "as.group.HealthCheckType": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "as.group.MetricsCollection": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.PlacementGroup": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.HealthCheckGracePeriod": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "as.group.DesiredCapacity": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "as.group.TerminationPolicies": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.NotificationConfigurations": {
            "Required": "No",
            "Type": [
                "NotificationConfiguration"
            ],
            "UpdateRequires": "No interruption"
        },
        "as.group.LaunchConfigurationName": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Conditional",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.MixedInstancesPolicy": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.MaxSize": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.LaunchTemplate": {
            "Required": "Conditional",
            "Type": "LaunchTemplateSpecification",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.AutoScalingGroupName": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.group.NotificationConfigurations": {
            "Required": "No",
            "Type": [
                "NotificationConfiguration"
            ],
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.Cooldown": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.group.VPCZoneIdentifier": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Conditional",
            "Maximum": "2047",
            "UpdateRequires": "Some interruptions",
            "Minimum": "1",
            "Type": "List of String",
            "AllowedValues": "1...2047",
            "CompliantValues": "1...2047"
        },
        "as.group.LifecycleHookSpecificationList": {
            "Required": "No",
            "Type": [
                "LifecycleHookSpecification"
            ],
            "UpdateRequires": "No interruption"
        },
        "as.group.MixedInstancesPolicy": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.ServiceLinkedRoleARN": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1600",
            "CompliantValues": "1...1600"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.LaunchConfigurationName": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Conditional",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.Tags": {
            "Required": "No",
            "Type": [
                "TagProperty"
            ],
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.VPCZoneIdentifier": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Conditional",
            "Maximum": "2047",
            "UpdateRequires": "Some interruptions",
            "Minimum": "1",
            "Type": "List of String",
            "AllowedValues": "1...2047",
            "CompliantValues": "1...2047"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.HealthCheckType": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "as.group.ServiceLinkedRoleARN": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1600",
            "CompliantValues": "1...1600"
        },
        "as.group.MaxInstanceLifetime": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.group.Cooldown": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.TargetGroupARNs": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.LoadBalancerNames": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.LifecycleHookSpecificationList": {
            "Required": "No",
            "Type": [
                "LifecycleHookSpecification"
            ],
            "UpdateRequires": "No interruption"
        },
        "as.group.MinSize": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "as.group.Tags": {
            "Required": "No",
            "Type": [
                "TagProperty"
            ],
            "UpdateRequires": "No interruption"
        },
        "as.group.AutoScalingGroupName": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.group.TargetGroupARNs": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.group.InstanceId": {
            "Required": "Conditional",
            "UpdateRequires": "Replacement"
        },
        "as.group.LaunchTemplate": {
            "Required": "Conditional",
            "Type": "LaunchTemplateSpecification",
            "UpdateRequires": "No interruption"
        },
        "as.group.AvailabilityZones": {
            "Required": "Conditional",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.InstanceId": {
            "Required": "Conditional",
            "UpdateRequires": "Replacement"
        },
        "w6408ab1c19c15c15c27c19b7.default": {
            "Required": "No",
            "Type": "String",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.instancegroupconfig.BidPrice": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.instancegroupconfig.Name": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.instancegroupconfig.InstanceCount": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.instancegroupconfig.InstanceType": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "elasticmapreduce.cluster.instancegroupconfig.Configurations": {
            "Required": "No",
            "Type": [
                "Configuration"
            ],
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.instancegroupconfig.AutoScalingPolicy": {
            "Required": "No",
            "Type": "AutoScalingPolicy",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.instancegroupconfig.EbsConfiguration": {
            "Required": "No",
            "Type": "EbsConfiguration",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.instancegroupconfig.Market": {
            "Allowed values": "ON_DEMAND | SPOT",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.fieldtomatch.AllQueryArguments": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.rulegroup.fieldtomatch.SingleQueryArgument": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.fieldtomatch.Body": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.rulegroup.fieldtomatch.QueryString": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.rulegroup.fieldtomatch.Method": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.rulegroup.fieldtomatch.SingleHeader": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.rulegroup.fieldtomatch.UriPath": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "kinesisanalyticsv2.application.mappingparameters.JSONMappingParameters": {
            "Required": "No",
            "Type": "JSONMappingParameters",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.mappingparameters.CSVMappingParameters": {
            "Required": "No",
            "Type": "CSVMappingParameters",
            "UpdateRequires": "No interruption"
        },
        "codecommit.repository.code.S3": {
            "Required": "Yes",
            "Type": "S3",
            "UpdateRequires": "No interruption"
        },
        "ec2.ec2fleet.spotoptionsrequest.MaxTotalPrice": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.spotoptionsrequest.MinTargetCapacity": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ec2.ec2fleet.spotoptionsrequest.InstanceInterruptionBehavior": {
            "Allowed values": "hibernate | stop | terminate",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.spotoptionsrequest.SingleAvailabilityZone": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.ec2fleet.spotoptionsrequest.InstancePoolsToUseCount": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ec2.ec2fleet.spotoptionsrequest.AllocationStrategy": {
            "Type": "String",
            "Required": "No",
            "Allowed Values": "lowestPrice` \\| `diversified` \\| `capacityOptimized",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "lowestPrice` \\| `diversified` \\| `capacityOptimized"
            ],
            "SampleValue": "lowestPrice` \\| `diversified` \\| `capacityOptimized",
            "CompliantValues": [
                "lowestPrice` \\| `diversified` \\| `capacityOptimized"
            ]
        },
        "ec2.ec2fleet.spotoptionsrequest.SingleInstanceType": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "pinpoint.applicationsettings.limits.MessagesPerSecond": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "pinpoint.applicationsettings.limits.Daily": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "pinpoint.applicationsettings.limits.Total": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "pinpoint.applicationsettings.limits.MaximumDuration": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "lambda.function.tracingconfig.Mode": {
            "Allowed values": "Active | PassThrough",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.s3settings.BucketFolder": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.s3settings.CsvRowDelimiter": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.s3settings.ServiceAccessRoleArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.s3settings.BucketName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.s3settings.ExternalTableDefinition": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.s3settings.CompressionType": {
            "Allowed values": "gzip | none",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.s3settings.CsvDelimiter": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.recordformat.MappingParameters": {
            "Required": "No",
            "Type": "MappingParameters",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.recordformat.RecordFormatType": {
            "Allowed values": "CSV | JSON",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbparametergroup.Description": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbparametergroup.Parameters": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.dbparametergroup.aws rds describe-db-engine-versions --query \"DBEngineVersions[].DBParameterGroupFamily\"": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbparametergroup.Family": {},
        "rds.dbparametergroup.Tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.capacityreservationtarget.CapacityReservationId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.noderangeproperty.Container": {
            "Required": "No",
            "Type": "ContainerProperties",
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.noderangeproperty.TargetNodes": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "sagemaker.notebookinstancelifecycleconfig.notebookinstancelifecyclehook.Content": {
            "Pattern": "[\\S\\s]+",
            "Required": "No",
            "Maximum": "16384",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...16384",
            "CompliantValues": "1...16384"
        },
        "kinesisanalyticsv2.application.codecontent.S3ContentLocation": {
            "Required": "No",
            "Type": "S3ContentLocation",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.codecontent.TextContent": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "102400",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...102400",
            "CompliantValues": "0...102400"
        },
        "kinesisanalyticsv2.application.codecontent.ZipFileContent": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.outputdestination.MediaPackageSettings": {
            "Required": "No",
            "Type": [
                "MediaPackageOutputDestinationSettings"
            ],
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.outputdestination.Id": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.outputdestination.Settings": {
            "Required": "No",
            "Type": [
                "OutputDestinationSettings"
            ],
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.outputdestination.MultiplexSettings": {
            "Required": "No",
            "Type": "MultiplexProgramChannelDestinationSettings",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.tcproute.Action": {
            "Required": "Yes",
            "Type": "TcpRouteAction",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.tcproute.Timeout": {
            "Required": "No",
            "Type": "TcpTimeout",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.s3action.TopicArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.s3action.KmsKeyArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.s3action.BucketName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.s3action.ObjectKeyPrefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinition.function.FunctionConfiguration": {
            "Required": "Yes",
            "Type": "FunctionConfiguration",
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinition.function.FunctionArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinition.function.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.ScalingAdjustment": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.AdjustmentType": {
            "Allowed values": "CHANGE_IN_CAPACITY | EXACT_CAPACITY | PERCENT_CHANGE_IN_CAPACITY",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.CoolDown": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisanalyticsv2.application.s3contentlocation.FileKey": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "kinesisanalyticsv2.application.s3contentlocation.BucketARN": {
            "Pattern": "arn:.*",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisanalyticsv2.application.s3contentlocation.ObjectVersion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.job.notificationproperty.NotifyDelayAfter": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.webacl.orstatementtwo.Statements": {
            "Required": "Yes",
            "Type": [
                "StatementThree"
            ],
            "UpdateRequires": "No interruption"
        },
        "msk.cluster.brokerlogs.S3": {
            "Required": "No",
            "Type": "S3",
            "UpdateRequires": "No interruption"
        },
        "msk.cluster.brokerlogs.Firehose": {
            "Required": "No",
            "Type": "Firehose",
            "UpdateRequires": "No interruption"
        },
        "msk.cluster.brokerlogs.CloudWatchLogs": {
            "Required": "No",
            "Type": "CloudWatchLogs",
            "UpdateRequires": "No interruption"
        },
        "robomaker.robotapplication.sourceconfig.S3Key": {
            "Pattern": ".*",
            "Required": "Yes",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "robomaker.robotapplication.sourceconfig.Architecture": {
            "Allowed values": "ARM64 | ARMHF | X86_64",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "robomaker.robotapplication.sourceconfig.S3Bucket": {
            "Pattern": "[a-z0-9][a-z0-9.\\-]*[a-z0-9]",
            "Required": "Yes",
            "Maximum": "63",
            "UpdateRequires": "No interruption",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...63",
            "CompliantValues": "3...63"
        },
        "greengrass.functiondefinition.execution.RunAs": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinition.execution.IsolationMode": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "as.metricscollection.Metrics": {
            "Type": "List of String",
            "Required": "No",
            "Allowed Values": "+  `GroupMinSize` \n+  `GroupMaxSize` \n+  `GroupDesiredCapacity` \n+  `GroupInServiceInstances` \n+  `GroupPendingInstances` \n+  `GroupStandbyInstances` \n+  `GroupTerminatingInstances` \n+  `GroupTotalInstances` \n+  `GroupInServiceCapacity` \n+  `GroupPendingCapacity` \n+  `GroupStandbyCapacity` \n+  `GroupTerminatingCapacity` \n+  `GroupTotalCapacity` \nIf you specify `Granularity` and don't specify any metrics, all metrics are enabled\\.",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "+  `GroupMinSize` \n+  `GroupMaxSize` \n+  `GroupDesiredCapacity` \n+  `GroupInServiceInstances` \n+  `GroupPendingInstances` \n+  `GroupStandbyInstances` \n+  `GroupTerminatingInstances` \n+  `GroupTotalInstances` \n+  `GroupInServiceCapacity` \n+  `GroupPendingCapacity` \n+  `GroupStandbyCapacity` \n+  `GroupTerminatingCapacity` \n+  `GroupTotalCapacity` \nIf you specify `Granularity` and don't specify any metrics, all metrics are enabled\\."
            ],
            "SampleValue": "+  `GroupMinSize` \n+  `GroupMaxSize` \n+  `GroupDesiredCapacity` \n+  `GroupInServiceInstances` \n+  `GroupPendingInstances` \n+  `GroupStandbyInstances` \n+  `GroupTerminatingInstances` \n+  `GroupTotalInstances` \n+  `GroupInServiceCapacity` \n+  `GroupPendingCapacity` \n+  `GroupStandbyCapacity` \n+  `GroupTerminatingCapacity` \n+  `GroupTotalCapacity` \nIf you specify `Granularity` and don't specify any metrics, all metrics are enabled\\.",
            "CompliantValues": [
                "+  `GroupMinSize` \n+  `GroupMaxSize` \n+  `GroupDesiredCapacity` \n+  `GroupInServiceInstances` \n+  `GroupPendingInstances` \n+  `GroupStandbyInstances` \n+  `GroupTerminatingInstances` \n+  `GroupTotalInstances` \n+  `GroupInServiceCapacity` \n+  `GroupPendingCapacity` \n+  `GroupStandbyCapacity` \n+  `GroupTerminatingCapacity` \n+  `GroupTotalCapacity` \nIf you specify `Granularity` and don't specify any metrics, all metrics are enabled\\."
            ]
        },
        "as.metricscollection.Granularity": {
            "Type": "String",
            "Required": "Yes",
            "Allowed Values": "1Minute",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "1Minute"
            ],
            "SampleValue": "1Minute",
            "CompliantValues": [
                "1Minute"
            ]
        },
        "ssm.resourcedatasync.s3destination.BucketRegion": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "64",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "ssm.resourcedatasync.s3destination.BucketName": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "ssm.resourcedatasync.s3destination.SyncFormat": {
            "Allowed values": "JsonSerDe",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ssm.resourcedatasync.s3destination.KMSKeyArn": {
            "Pattern": "arn:.*",
            "Required": "No",
            "Maximum": "512",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "ssm.resourcedatasync.s3destination.BucketPrefix": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "codedeploy.deploymentgroup.tagfilter.Key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.tagfilter.Type": {
            "Allowed values": "KEY_AND_VALUE | KEY_ONLY | VALUE_ONLY",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.tagfilter.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.s3logsconfig.EncryptionDisabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codebuild.project.s3logsconfig.Status": {
            "Allowed values": "DISABLED | ENABLED",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.s3logsconfig.Location": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafregional.sqlinjectionmatchset.fieldtomatch.Data": {
            "Pattern": ".*\\S.*",
            "Required": "Conditional",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafregional.sqlinjectionmatchset.fieldtomatch.Type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.MaxConnectionsPercent": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.MaxIdleConnectionsPercent": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.SessionPinningFilters": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.InitQuery": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.ConnectionBorrowTimeout": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualnode.awscloudmapinstanceattribute.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.awscloudmapinstanceattribute.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.clientvpnendpoint.tagspecification.ResourceType": {
            "Allowed values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | elastic-gpu | elastic-ip | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | internet-gateway | key-pair | launch-template | local-gateway-route-table-vpc-association | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-flow-log | vpc-peering-connection | vpn-connection | vpn-gateway",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.clientvpnendpoint.tagspecification.Tags": {
            "Required": "Yes",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "config.configurationrecorder.recordinggroup.IncludeGlobalResourceTypes": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "config.configurationrecorder.recordinggroup.AllSupported": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "config.configurationrecorder.recordinggroup.ResourceTypes": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.inputschema.RecordEncoding": {
            "Pattern": "UTF-8",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.inputschema.RecordColumns": {
            "Required": "Yes",
            "Type": [
                "RecordColumn"
            ],
            "Maximum": "1000",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.inputschema.RecordFormat": {
            "Required": "Yes",
            "Type": "RecordFormat",
            "UpdateRequires": "No interruption"
        },
        "sagemaker.workteam.memberdefinition.CognitoMemberDefinition": {
            "Required": "Yes",
            "Type": "CognitoMemberDefinition",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskdefinition.firelensconfiguration.Options": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.firelensconfiguration.Type": {
            "Allowed values": "fluentbit | fluentd",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "as.launchconfig.UserData": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "21847",
            "UpdateRequires": "Replacement"
        },
        "as.launchconfig.SecurityGroups": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "as.launchconfig.LaunchConfigurationName": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.launchconfig.InstanceType": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.launchconfig.InstanceId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "as.launchconfig.EbsOptimized": {
            "Required": "No",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "as.launchconfig.AssociatePublicIpAddress": {
            "Required": "No",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "as.launchconfig.InstanceMonitoring": {
            "Required": "No",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "as.launchconfig.RamDiskId": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.launchconfig.ImageId": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.launchconfig.ClassicLinkVPCSecurityGroups": {
            "Required": "Conditional",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "as.launchconfig.KernelId": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.launchconfig.BlockDeviceMappings": {
            "Required": "No",
            "Type": [
                "BlockDeviceMapping"
            ],
            "UpdateRequires": "Replacement"
        },
        "as.launchconfig.PlacementTenancy": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "64",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "as.launchconfig.ClassicLinkVPCId": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.launchconfig.KeyName": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.launchconfig.IamInstanceProfile": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "1600",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...1600",
            "CompliantValues": "1...1600"
        },
        "as.launchconfig.SpotPrice": {
            "Minimum": "1",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "ec2.instance.creditspecification.CPUCredits": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "synthetics.canary.code.S3Bucket": {
            "Minimum": "1",
            "Required": "Conditional",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "synthetics.canary.code.Handler": {
            "Minimum": "1",
            "Required": "Conditional",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "synthetics.canary.code.S3ObjectVersion": {
            "Minimum": "1",
            "Required": "Conditional",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "synthetics.canary.code.S3Key": {
            "Minimum": "1",
            "Required": "Conditional",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "synthetics.canary.code.Script": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.input.inputdestinationrequest.StreamName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.statementthree.RuleGroupReferenceStatement": {
            "Required": "No",
            "Type": "RuleGroupReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementthree.RegexPatternSetReferenceStatement": {
            "Required": "No",
            "Type": "RegexPatternSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementthree.ByteMatchStatement": {
            "Required": "No",
            "Type": "ByteMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementthree.ManagedRuleGroupStatement": {
            "Required": "No",
            "Type": "ManagedRuleGroupStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementthree.GeoMatchStatement": {
            "Required": "No",
            "Type": "GeoMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementthree.XssMatchStatement": {
            "Required": "No",
            "Type": "XssMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementthree.SqliMatchStatement": {
            "Required": "No",
            "Type": "SqliMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementthree.IPSetReferenceStatement": {
            "Required": "No",
            "Type": "IPSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementthree.SizeConstraintStatement": {
            "Required": "No",
            "Type": "SizeConstraintStatement",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.hostheaderconfig.Values": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpool.usernameconfiguration.CaseSensitive": {
            "CaseSensitive`  <a name=\"cfn-cognito-userpool-usernameconfiguration-casesensitive\"></a>\nSpecifies whether username case sensitivity will be applied for all users in the user pool through Cognito APIs\\.  \nValid values include:  \n+  ** `True` *": "Enables case sensitivity for all username input\\. When this option is set to `True`, users must sign in using the exact capitalization of their given username\\. For example, \u201cUserName\u201d\\. This is the default value\\.\n+  ** `False` *",
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticmapreduce.instancefleetconfig.configuration.ConfigurationProperties": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.instancefleetconfig.configuration.Configurations": {
            "Required": "No",
            "Type": [
                "Configuration"
            ],
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.instancefleetconfig.configuration.Classification": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "appmesh.mesh.tagref.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.mesh.tagref.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.service.loadbalancers.ContainerName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.service.loadbalancers.LoadBalancerName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.service.loadbalancers.ContainerPort": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.service.loadbalancers.TargetGroupArn": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "wafv2.webacl.countrycodes.countrycodes": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-webacl-countrycodes-properties": {
            "CountryCodes": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "glue.crawler.schedule.ScheduleExpression": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "greengrass.resourcedefinition.resourceinstance.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinition.resourceinstance.ResourceDataContainer": {
            "Required": "Yes",
            "Type": "ResourceDataContainer",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinition.resourceinstance.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ssm.patchbaseline.patchsource.Products": {
            "Required": "No",
            "Maximum": "20",
            "UpdateRequires": "No interruption"
        },
        "ssm.patchbaseline.patchsource.Name": {
            "Pattern": "^[a-zA-Z0-9_\\-.]{3,50}$",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.patchbaseline.patchsource.Configuration": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "s3.bucket.notificationconfig.TopicConfigurations": {
            "Required": "No",
            "Type": [
                "TopicConfiguration"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.notificationconfig.QueueConfigurations": {
            "Required": "No",
            "Type": [
                "QueueConfiguration"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.notificationconfig.LambdaConfigurations": {
            "Required": "No",
            "Type": [
                "LambdaConfiguration"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.hibernationoptions.Configured": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "wafv2.rulegroup.ipsetreferencestatement.Arn": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "route53.recordset.geolocation.1.ContinentCode": {
            "Required": "No",
            "Maximum": "2",
            "UpdateRequires": "No interruption",
            "Minimum": "2",
            "ContinentCode`  <a name=\"cfn-route53-recordsetgroup-geolocation-continentcode\"></a>\nFor geolocation resource record sets, a two\\-letter abbreviation that identifies a continent\\. Route 53 supports the following continent codes:  \n+ **AF*": "Africa\n+ **AN*",
            "Type": "String",
            "AllowedValues": "2...2",
            "CompliantValues": "2...2"
        },
        "route53.recordset.geolocation.1.CountryCode": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "2",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2",
            "CompliantValues": "1...2"
        },
        "route53.recordset.geolocation.1.SubdivisionCode": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "3",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...3",
            "CompliantValues": "1...3"
        },
        "s3.bucket.sourceselectioncriteria.SseKmsEncryptedObjects": {
            "Required": "Yes",
            "Type": "SseKmsEncryptedObjects",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.bounceaction.Sender": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.bounceaction.Message": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.bounceaction.StatusCode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.bounceaction.SmtpReplyCode": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.bounceaction.TopicArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.IntegrationMethod": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.TimeoutInMillis": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.PayloadFormatVersion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "backup.backupselection.backupselectionresourcetype.SelectionName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "backup.backupselection.backupselectionresourcetype.ListOfTags": {
            "Required": "No",
            "Type": [
                "ConditionResourceType"
            ],
            "UpdateRequires": "No interruption"
        },
        "backup.backupselection.backupselectionresourcetype.IamRoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "backup.backupselection.backupselectionresourcetype.Resources": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ses.template.template.HtmlPart": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.template.template.TemplateName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ses.template.template.TextPart": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.template.template.SubjectPart": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.streamingdistribution.streamingdistributionconfig.TrustedSigners": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.streamingdistribution.streamingdistributionconfig.Aliases": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.streamingdistribution.streamingdistributionconfig.PriceClass": {
            "Allowed values": "PriceClass_100 | PriceClass_200 | PriceClass_All",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.streamingdistribution.streamingdistributionconfig.Comment": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.streamingdistribution.streamingdistributionconfig.Enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudfront.streamingdistribution.streamingdistributionconfig.S3Origin": {
            "Required": "Yes",
            "Type": "S3Origin",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.streamingdistribution.streamingdistributionconfig.Logging": {
            "Required": "No",
            "Type": "Logging",
            "UpdateRequires": "No interruption"
        },
        "iot1click.project.placementtemplate.DeviceTemplates": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "Replacement",
            "SampleValue": {
                "todo": "json"
            }
        },
        "iot1click.project.placementtemplate.DefaultAttributes": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "ec2.launchtemplate.launchtemplatedata.monitoring.Enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.table.serdeinfo.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.serdeinfo.SerializationLibrary": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.serdeinfo.Parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "greengrass.loggerdefinitionversion.logger.Type": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.loggerdefinitionversion.logger.Component": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.loggerdefinitionversion.logger.Level": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.loggerdefinitionversion.logger.Space": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "greengrass.loggerdefinitionversion.logger.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.splunkretryoptions.DurationInSeconds": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "7200",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...7200",
            "CompliantValues": "0...7200"
        },
        "glue.connection.physicalconnectionrequirements.SubnetId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.connection.physicalconnectionrequirements.SecurityGroupIdList": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.connection.physicalconnectionrequirements.AvailabilityZone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.excludedrules.excludedrules": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-webacl-excludedrules-properties": {
            "ExcludedRules": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.InstanceInterruptionBehavior": {
            "Allowed values": "hibernate | stop | terminate",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.MaxPrice": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.ValidUntil": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.BlockDurationMinutes": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.SpotInstanceType": {
            "Allowed values": "one-time | persistent",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dynamodb.attributedef.AttributeType": {
            "Allowed values": "B | N | S",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dynamodb.attributedef.AttributeName": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cloudfront.cloudfrontoriginaccessidentity.cloudfrontoriginaccessidentityconfig.Comment": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.payload.ContentExpression": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.payload.Type": {
            "Allowed values": "JSON | STRING",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.georestriction.Locations": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.georestriction.RestrictionType": {
            "Allowed values": "blacklist | none | whitelist",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "servicediscovery.service.dnsrecord.priority weight port service-hostname": {
            "Allowed values": "A | AAAA | CNAME | SRV",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "servicediscovery.service.dnsrecord.Type": {},
        "servicediscovery.service.dnsrecord.TTL": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "iotanalytics.datastore.retentionperiod.Unlimited": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "iotanalytics.datastore.retentionperiod.NumberOfDays": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cognito.userpool.emailconfiguration.From": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpool.emailconfiguration.EmailSendingAccount": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpool.emailconfiguration.ConfigurationSet": {
            "Pattern": "^[a-zA-Z0-9_-]+$",
            "Required": "No",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "cognito.userpool.emailconfiguration.ReplyToEmailAddress": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+@[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpool.emailconfiguration.SourceArn": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "iotanalytics.dataset.deltatime.TimeExpression": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.deltatime.OffsetSeconds": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualrouter.tagref.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualrouter.tagref.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudwatch.alarm.metricdataquery.Id": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cloudwatch.alarm.metricdataquery.ReturnData": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudwatch.alarm.metricdataquery.Label": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudwatch.alarm.metricdataquery.MetricStat": {
            "Required": "No",
            "Type": "MetricStat",
            "UpdateRequires": "No interruption"
        },
        "cloudwatch.alarm.metricdataquery.Period": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cloudwatch.alarm.metricdataquery.Expression": {
            "Minimum": "1",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "opsworks.instance.blockdevicemapping.VirtualName": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.instance.blockdevicemapping.NoDevice": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.instance.blockdevicemapping.Ebs": {
            "Required": "Conditional",
            "Type": "EbsBlockDevice",
            "UpdateRequires": "No interruption"
        },
        "opsworks.instance.blockdevicemapping.DeviceName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.republishaction.Topic": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.republishaction.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.republishaction.Qos": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "iotanalytics.dataset.retentionperiod.Unlimited": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "iotanalytics.dataset.retentionperiod.NumberOfDays": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ask.skill.skillpackage.S3Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ask.skill.skillpackage.S3ObjectVersion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ask.skill.skillpackage.S3Bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ask.skill.skillpackage.Overrides": {
            "Required": "No",
            "Type": "Overrides",
            "UpdateRequires": "No interruption"
        },
        "ask.skill.skillpackage.S3BucketRole": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "datapipeline.pipeline.parameterobjects.Attributes": {
            "Required": "Yes",
            "Type": [
                "ParameterAttribute"
            ],
            "UpdateRequires": "No interruption"
        },
        "datapipeline.pipeline.parameterobjects.Id": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "amazonmq.broker.loglist.Audit": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "amazonmq.broker.loglist.General": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "wafv2.rulegroup.sizeconstraintstatement.FieldToMatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.sizeconstraintstatement.ComparisonOperator": {
            "Allowed values": "EQ | GE | GT | LE | LT | NE",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.sizeconstraintstatement.TextTransformations": {
            "Required": "Yes",
            "Type": [
                "TextTransformation"
            ],
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.sizeconstraintstatement.Size": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.ebsblockdeviceconfig.VolumesPerInstance": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.ebsblockdeviceconfig.VolumeSpecification": {
            "Required": "Yes",
            "Type": "VolumeSpecification",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.antennauplinkconfig.TargetEirp": {
            "Required": "Yes",
            "Type": "Eirp",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.antennauplinkconfig.SpectrumConfig": {
            "Required": "Yes",
            "Type": "SpectrumConfig",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.listener.Protocol": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.listener.InstancePort": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "65535",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...65535",
            "CompliantValues": "1...65535"
        },
        "ec2.elb.listener.PolicyNames": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.listener.SSLCertificateId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.listener.InstanceProtocol": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.listener.LoadBalancerPort": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinition.runas.Gid": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "greengrass.functiondefinition.runas.Uid": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.cluster.clustersetting.name": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "containerInsights"
            ],
            "Allowed Values": "containerInsights",
            "UpdateRequires": "No interruption",
            "SampleValue": "containerInsights",
            "CompliantValues": [
                "containerInsights"
            ]
        },
        "ecs.cluster.clustersetting.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbproxy.authformat.SecretArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbproxy.authformat.IAMAuth": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbproxy.authformat.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbproxy.authformat.AuthScheme": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbproxy.authformat.UserName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appconfig.deployment.tags.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appconfig.deployment.tags.Key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "guardduty.filter.condition.Neq": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "guardduty.filter.condition.Lte": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "guardduty.filter.condition.Eq": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "guardduty.filter.condition.Gte": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "guardduty.filter.condition.Lt": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "acmpca.certificateauthority.crlconfiguration.Enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "acmpca.certificateauthority.crlconfiguration.S3BucketName": {
            "Minimum": "3",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "3...255",
            "CompliantValues": "3...255"
        },
        "acmpca.certificateauthority.crlconfiguration.CustomCname": {
            "Minimum": "0",
            "Required": "No",
            "Maximum": "253",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...253",
            "CompliantValues": "0...253"
        },
        "acmpca.certificateauthority.crlconfiguration.ExpirationInDays": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "5000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...5000",
            "CompliantValues": "1...5000"
        },
        "wafregional.xssmatchset.fieldtomatch.Type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "wafregional.xssmatchset.fieldtomatch.Data": {
            "Pattern": ".*\\S.*",
            "Required": "Conditional",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "datapipeline.pipeline.pipelinetags.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "datapipeline.pipeline.pipelinetags.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "msk.cluster.firehose.Enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "msk.cluster.firehose.DeliveryStream": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.recordcolumn.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.recordcolumn.SqlType": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.recordcolumn.Mapping": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.resourcedatasync.syncsource.IncludeFutureRegions": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ssm.resourcedatasync.syncsource.AwsOrganizationsSource": {
            "Required": "No",
            "Type": "AwsOrganizationsSource",
            "UpdateRequires": "No interruption"
        },
        "ssm.resourcedatasync.syncsource.SourceType": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "64",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "ssm.resourcedatasync.syncsource.SourceRegions": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.notificationconfig.queueconfig.Event": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.notificationconfig.queueconfig.Filter": {
            "Required": "No",
            "Type": "NotificationFilter",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.notificationconfig.queueconfig.Queue": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.geomatchstatement.CountryCodes": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "pinpointemail.configurationset.deliveryoptions.SendingPoolName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.notificationconfig.NotificationArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.notificationconfig.NotificationType": {
            "Allowed values": "Command | Invocation",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.notificationconfig.NotificationEvents": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.tcptimeout.Idle": {
            "Required": "No",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.sourceauth.Type": {
            "Allowed values": "OAUTH",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.sourceauth.Resource": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.customactiontype.settings.RevisionUrlTemplate": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "codepipeline.customactiontype.settings.EntityUrlTemplate": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "codepipeline.customactiontype.settings.ThirdPartyConfigurationUrl": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "codepipeline.customactiontype.settings.ExecutionUrlTemplate": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "apitgateway.method.integration.TimeoutInMillis": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apitgateway.method.integration.ContentHandling": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apitgateway.method.integration.Uri": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.integration.ConnectionId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apitgateway.method.integration.\"application/json\": \"{\\n \\\"statusCode\\\": 200\\n}\"": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.integration.CacheKeyParameters": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.integration.Type": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.integration.RequestTemplates": {},
        "apitgateway.method.integration.PassthroughBehavior": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.integration.IntegrationHttpMethod": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apitgateway.method.integration.IntegrationResponses": {
            "Required": "No",
            "Type": [
                "IntegrationResponse"
            ],
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.integration.ConnectionType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apitgateway.method.integration.Credentials": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.integration.RequestParameters": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.integration.CacheNamespace": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.metricdimension.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.metricdimension.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpointemail.configurationseteventdestination.pinpointdestination.ApplicationArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.matchmakingconfiguration.gameproperty.Key": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.matchmakingconfiguration.gameproperty.Value": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "96",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafregional.geomatchset.geomatchconstraint.Value": {
            "Allowed values": "AD | AE | AF | AG | AI | AL | AM | AO | AQ | AR | AS | AT | AU | AW | AX | AZ | BA | BB | BD | BE | BF | BG | BH | BI | BJ | BL | BM | BN | BO | BQ | BR | BS | BT | BV | BW | BY | BZ | CA | CC | CD | CF | CG | CH | CI | CK | CL | CM | CN | CO | CR | CU | CV | CW | CX | CY | CZ | DE | DJ | DK | DM | DO | DZ | EC | EE | EG | EH | ER | ES | ET | FI | FJ | FK | FM | FO | FR | GA | GB | GD | GE | GF | GG | GH | GI | GL | GM | GN | GP | GQ | GR | GS | GT | GU | GW | GY | HK | HM | HN | HR | HT | HU | ID | IE | IL | IM | IN | IO | IQ | IR | IS | IT | JE | JM | JO | JP | KE | KG | KH | KI | KM | KN | KP | KR | KW | KY | KZ | LA | LB | LC | LI | LK | LR | LS | LT | LU | LV | LY | MA | MC | MD | ME | MF | MG | MH | MK | ML | MM | MN | MO | MP | MQ | MR | MS | MT | MU | MV | MW | MX | MY | MZ | NA | NC | NE | NF | NG | NI | NL | NO | NP | NR | NU | NZ | OM | PA | PE | PF | PG | PH | PK | PL | PM | PN | PR | PS | PT | PW | PY | QA | RE | RO | RS | RU | RW | SA | SB | SC | SD | SE | SG | SH | SI | SJ | SK | SL | SM | SN | SO | SR | SS | ST | SV | SX | SY | SZ | TC | TD | TF | TG | TH | TJ | TK | TL | TM | TN | TO | TR | TT | TV | TW | TZ | UA | UG | UM | US | UY | UZ | VA | VC | VE | VG | VI | VN | VU | WF | WS | YE | YT | ZA | ZM | ZW",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafregional.geomatchset.geomatchconstraint.Type": {
            "Allowed values": "Country",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.broker.tagsentry.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.broker.tagsentry.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.taskset.serviceregistry.ContainerName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskset.serviceregistry.Port": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskset.serviceregistry.RegistryArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskset.serviceregistry.ContainerPort": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "wafv2.rulegroup.visibilityconfig.SampledRequestsEnabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "wafv2.rulegroup.visibilityconfig.CloudWatchMetricsEnabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "wafv2.rulegroup.visibilityconfig.MetricName": {
            "Pattern": "^[\\w#:\\.\\-/]+$",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "ec2.instance.hibernationoptions.Configured": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.capacityreservation.tagspecification.Tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.capacityreservation.tagspecification.ResourceType": {
            "Allowed values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | elastic-gpu | elastic-ip | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | internet-gateway | key-pair | launch-template | local-gateway-route-table-vpc-association | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-flow-log | vpc-peering-connection | vpn-connection | vpn-gateway",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.applicationoutput.kinesisfirehoseoutput.ResourceARN": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisanalytics.applicationoutput.kinesisfirehoseoutput.RoleARN": {
            "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "iot.topicrule.stepfunctionsaction.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.stepfunctionsaction.StateMachineName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.stepfunctionsaction.ExecutionNamePrefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafregional.ipset.ipsetdescriptor.Value": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "50",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...50",
            "CompliantValues": "1...50"
        },
        "wafregional.ipset.ipsetdescriptor.Type": {
            "Allowed values": "IPV4 | IPV6",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.config.bandwidth.Units": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.config.bandwidth.Value": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "route53.aliastarget.EvaluateTargetHealth": {
            "Type": "Boolean",
            "Required": "No",
            "Applies only to alias records with any routing policy:* When `EvaluateTargetHealth` is `true`, an alias record inherits the health of the referenced AWS resource, such as an ELB load balancer or another record in the hosted zone\\.  \nNote the following:    \nCloudFront distributions  \nYou can't set `EvaluateTargetHealth` to `true` when the alias target is a CloudFront distribution\\.  \nElastic Beanstalk environments that have regionalized subdomains  \nIf you specify an Elastic Beanstalk environment in `DNSName` and the environment contains an ELB load balancer, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. \\(An environment automatically contains an ELB load balancer if it includes more than one Amazon EC2 instance\\.\\) If you set `EvaluateTargetHealth` to `true` and either no Amazon EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other available resources that are healthy, if any\\.   \nIf the environment contains a single Amazon EC2 instance, there are no special requirements\\.  \nELB load balancers  \nHealth checking behavior depends on the type of load balancer:  \n+ **Classic Load Balancers*": "If you specify an ELB Classic Load Balancer in `DNSName`, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. If you set `EvaluateTargetHealth` to `true` and either no EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other resources\\.\n+ **Application and Network Load Balancers*",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "route53.aliastarget.HostedZoneId": {
            "UpdateRequires": "No interruption",
            "Required": "Yes",
            "Type": "String",
            "Alias resource records sets only": "The value used depends on where you want to route traffic:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the hosted zone ID for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalHostedZoneId`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionHostedZoneId`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nSpecify the hosted zone ID for your interface endpoint\\. You can get the value of `HostedZoneId` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify `Z2FDTNDATAQYW2`\\. This is always the hosted zone ID when you create an alias record that routes traffic to a CloudFront distribution\\.  \nAlias records for CloudFront can't be created in a private zone\\.  \nElastic Beanstalk environment  \nSpecify the hosted zone ID for the region that you created the environment in\\. The environment must have a regionalized subdomain\\. For a list of regions and the corresponding hosted zone IDs, see [AWS Elastic Beanstalk](https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region) in the \"AWS Regions and Endpoints\" chapter of the *Amazon Web Services General Reference*\\.  \nELB load balancer  \nSpecify the value of the hosted zone ID for the load balancer\\. Use the following methods to get the hosted zone ID:  \n+ [Service Endpoints](https://docs.aws.amazon.com/general/latest/gr/elb.html) table in the \"Elastic Load Balancing Endpoints and Quotas\" topic in the *Amazon Web Services General Reference",
            "Maximum": "32",
            "SampleValue": "example-string"
        },
        "route53.aliastarget.DNSName": {
            "Alias records only:* The value that you specify depends on where you want to route queries:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the applicable domain name for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalDomainName`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionDomainName`\\. This is the name of the associated CloudFront distribution, such as `da1b2c3d4e5.cloudfront.net`\\.\nThe name of the record that you're creating must match a custom domain name for your API, such as `api.example.com`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nEnter the API endpoint for the interface endpoint, such as `vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com`\\. For edge\\-optimized APIs, this is the domain name for the corresponding CloudFront distribution\\. You can get the value of `DnsName` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify the domain name that CloudFront assigned when you created your distribution\\.  \nYour CloudFront distribution must include an alternate domain name that matches the name of the record\\. For example, if the name of the record is *acme\\.example\\.com*, your CloudFront distribution must include *acme\\.example\\.com* as one of the alternate domain names\\. For more information, see [Using Alternate Domain Names \\(CNAMEs\\)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html) in the *Amazon CloudFront Developer Guide*\\.  \nYou can't create a record in a private hosted zone to route traffic to a CloudFront distribution\\.  \nFor failover alias records, you can't specify a CloudFront distribution for both the primary and secondary records\\. A distribution must include an alternate domain name that matches the name of the record\\. However, the primary and secondary records have the same name, and you can't include the same alternate domain name in more than one distribution\\.   \nElastic Beanstalk environment  \nIf the domain name for your Elastic Beanstalk environment includes the region that you deployed the environment in, you can create an alias record that routes traffic to the environment\\. For example, the domain name `my-environment.us-west-2.elasticbeanstalk.com` is a regionalized domain name\\.   \nFor environments that were created before early 2016, the domain name doesn't include the region\\. To route traffic to these environments, you must create a CNAME record instead of an alias record\\. Note that you can't create a CNAME record for the root domain name\\. For example, if your domain name is example\\.com, you can create a record that routes traffic for acme\\.example\\.com to your Elastic Beanstalk environment, but you can't create a record that routes traffic for example\\.com to your Elastic Beanstalk environment\\.\nFor Elastic Beanstalk environments that have regionalized subdomains, specify the `CNAME` attribute for the environment\\. You can use the following methods to get the value of the CNAME attribute:  \n+ *AWS Management Console": "For information about how to get the value by using the console, see [Using Custom Domains with AWS Elastic Beanstalk](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customdomains.html) in the *AWS Elastic Beanstalk Developer Guide*\\.\n+ *Elastic Beanstalk API",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.bufferinghints.IntervalInSeconds": {
            "Minimum": "60",
            "Required": "No",
            "Maximum": "900",
            "UpdateRequires": "No interruption",
            "AllowedValues": "60...900",
            "CompliantValues": "60...900"
        },
        "kinesisfirehose.deliverystream.bufferinghints.SizeInMBs": {
            "Minimum": "1",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.csvmappingparameters.RecordColumnDelimiter": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.csvmappingparameters.RecordRowDelimiter": {
            "Minimum": "1",
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "appsync.datasource.relationaldatabaseconfig.RelationalDatabaseSourceType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.relationaldatabaseconfig.RdsHttpEndpointConfig": {
            "Required": "No",
            "Type": "RdsHttpEndpointConfig",
            "UpdateRequires": "No interruption"
        },
        "ec2.instance.cpuoptions.CoreCount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.instance.cpuoptions.ThreadsPerCore": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "budgets.budget.notification.ThresholdType": {
            "Allowed values": "ABSOLUTE_VALUE | PERCENTAGE",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "budgets.budget.notification.NotificationType": {
            "Allowed values": "ACTUAL | FORECASTED",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "budgets.budget.notification.Threshold": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "budgets.budget.notification.ComparisonOperator": {
            "Allowed values": "EQUAL_TO | GREATER_THAN | LESS_THAN",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinition.resourcedatacontainer.LocalDeviceResourceData": {
            "Required": "No",
            "Type": "LocalDeviceResourceData",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinition.resourcedatacontainer.LocalVolumeResourceData": {
            "Required": "No",
            "Type": "LocalVolumeResourceData",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinition.resourcedatacontainer.S3MachineLearningModelResourceData": {
            "Required": "No",
            "Type": "S3MachineLearningModelResourceData",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinition.resourcedatacontainer.SageMakerMachineLearningModelResourceData": {
            "Required": "No",
            "Type": "SageMakerMachineLearningModelResourceData",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinition.resourcedatacontainer.SecretsManagerSecretResourceData": {
            "Required": "No",
            "Type": "SecretsManagerSecretResourceData",
            "UpdateRequires": "Replacement"
        },
        "wafv2-webacl-singlequeryargument-properties": {
            "Name": {
                "Pattern": ".*\\S.*",
                "Required": "No",
                "Maximum": "64",
                "UpdateRequires": "No interruption",
                "Minimum": "1",
                "Type": "String",
                "AllowedValues": "1...64",
                "CompliantValues": "1...64"
            }
        },
        "wafv2.webacl.singlequeryargument.name": {
            "Pattern": ".*\\S.*",
            "Required": "No",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "mediaconvert.jobtemplate.hopdestination.WaitMinutes": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "mediaconvert.jobtemplate.hopdestination.Priority": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "mediaconvert.jobtemplate.hopdestination.Queue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.logging.Prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.logging.Bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.logging.IncludeCookies": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "accessanalyzer.analyzer.archiverule.RuleName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "accessanalyzer.analyzer.archiverule.Filter": {
            "Required": "Yes",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.notstatementone.Statement": {
            "Required": "Yes",
            "Type": "StatementTwo",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationoutput.lambdaoutput.ResourceARN": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "iotanalytics.dataset.resourceconfiguration.ComputeType": {
            "Allowed values": "ACU_1 | ACU_2",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.resourceconfiguration.VolumeSizeInGB": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "Maximum": "50",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...50",
            "CompliantValues": "1...50"
        },
        "msk.cluster.logginginfo.BrokerLogs": {
            "Required": "Yes",
            "Type": "BrokerLogs",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.webhookfilter.ExcludeMatchedPattern": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codebuild.project.webhookfilter.Type": {
            "Allowed values": "ACTOR_ACCOUNT_ID | BASE_REF | COMMIT_MESSAGE | EVENT | FILE_PATH | HEAD_REF",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.webhookfilter.Pattern": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.httpretrypolicy.MaxRetries": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.route.httpretrypolicy.TcpRetryEvents": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.httpretrypolicy.PerRetryTimeout": {
            "Required": "Yes",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.httpretrypolicy.HttpRetryEvents": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.headermatchmethod.Range": {
            "Required": "No",
            "Type": "MatchRange",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.headermatchmethod.Regex": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.headermatchmethod.Suffix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.headermatchmethod.Prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.headermatchmethod.Exact": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotthingsgraph.flowtemplate.definitiondocument.Language": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotthingsgraph.flowtemplate.definitiondocument.Text": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinitionversion.runas.Uid": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "greengrass.functiondefinitionversion.runas.Gid": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "codepipeline.pipeline.disableinboundstagetransitions.Reason": {
            "Pattern": "[a-zA-Z0-9!@ \\(\\)\\.\\*\\?\\-]+",
            "Required": "Yes",
            "Maximum": "300",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...300",
            "CompliantValues": "1...300"
        },
        "codepipeline.pipeline.disableinboundstagetransitions.StageName": {
            "Pattern": "[A-Za-z0-9.@\\-_]+",
            "Required": "Yes",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.S3Uri": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.DestinationPath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.OwnerSetting": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ses.receiptfilter.ipfilter.Cidr": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptfilter.ipfilter.Policy": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtarget.targets.Key": {
            "Pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$|resource-groups:ResourceTypeFilters|resource-groups:Name",
            "Required": "Yes",
            "Maximum": "163",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...163",
            "CompliantValues": "1...163"
        },
        "ssm.maintenancewindowtarget.targets.Values": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.topicrulepayload.ErrorAction": {
            "Required": "No",
            "Type": "Action",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.topicrulepayload.AwsIotSqlVersion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.topicrulepayload.RuleDisabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "iot.topicrule.topicrulepayload.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.topicrulepayload.Sql": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.topicrulepayload.Actions": {
            "Required": "Yes",
            "Type": [
                "Action"
            ],
            "UpdateRequires": "No interruption"
        },
        "pinpoint.pushtemplate.androidpushnotificationtemplate.SmallImageIconUrl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.androidpushnotificationtemplate.Body": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.androidpushnotificationtemplate.ImageUrl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.androidpushnotificationtemplate.Sound": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.androidpushnotificationtemplate.Title": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.androidpushnotificationtemplate.Action": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.androidpushnotificationtemplate.ImageIconUrl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.androidpushnotificationtemplate.Url": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.LaunchSpecifications": {
            "Required": "Conditional",
            "Type": [
                "SpotFleetLaunchSpecification"
            ],
            "UpdateRequires": "Replacement"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.ValidUntil": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.IamFleetRole": {
            "Required": "Yes",
            "UpdateRequires": "Replacement"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.SpotPrice": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.ExcessCapacityTerminationPolicy": {
            "Allowed values": "default | noTermination",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.ValidFrom": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.TerminateInstancesWithExpiration": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.LaunchTemplateConfigs": {
            "Required": "Conditional",
            "Type": [
                "LaunchTemplateConfig"
            ],
            "UpdateRequires": "Replacement"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.LoadBalancersConfig": {
            "Required": "No",
            "Type": "LoadBalancersConfig",
            "UpdateRequires": "Replacement"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.ReplaceUnhealthyInstances": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.InstanceInterruptionBehavior": {
            "Allowed values": "hibernate | stop | terminate",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.Type": {
            "Allowed values": "instant | maintain | request",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.TargetCapacity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.AllocationStrategy": {
            "Allowed values": "capacityOptimized | diversified | lowestPrice",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.applicationoutput.output.KinesisStreamsOutput": {
            "Required": "No",
            "Type": "KinesisStreamsOutput",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationoutput.output.KinesisFirehoseOutput": {
            "Required": "No",
            "Type": "KinesisFirehoseOutput",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationoutput.output.DestinationSchema": {
            "Required": "Yes",
            "Type": "DestinationSchema",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationoutput.output.LambdaOutput": {
            "Required": "No",
            "Type": "LambdaOutput",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationoutput.output.Name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "iotanalytics.pipeline.datastore.DatastoreName": {
            "Pattern": "^[a-zA-Z0-9_]+$",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.datastore.Name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "gamelift.build.storagelocation.Bucket": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "gamelift.build.storagelocation.Key": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "gamelift.build.storagelocation.ObjectVersion": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "gamelift.build.storagelocation.RoleArn": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "apitgateway.stage.methodsetting.HttpMethod": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.stage.methodsetting.ThrottlingRateLimit": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.stage.methodsetting.LoggingLevel": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.stage.methodsetting.CachingEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apitgateway.stage.methodsetting.ThrottlingBurstLimit": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.stage.methodsetting.ResourcePath": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.stage.methodsetting.CacheDataEncrypted": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apitgateway.stage.methodsetting.CacheTtlInSeconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apitgateway.stage.methodsetting.MetricsEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apitgateway.stage.methodsetting.DataTraceEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "managedblockchain.member.approvalthresholdpolicy.ThresholdPercentage": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...100",
            "CompliantValues": "0...100"
        },
        "managedblockchain.member.approvalthresholdpolicy.ThresholdComparator": {
            "Allowed values": "GREATER_THAN | GREATER_THAN_OR_EQUAL_TO",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "managedblockchain.member.approvalthresholdpolicy.ProposalDurationInHours": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "168",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...168",
            "CompliantValues": "1...168"
        },
        "lambda.eventsourcemapping.destinationconfig.OnFailure": {
            "Required": "Yes",
            "Type": "OnFailure",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.removeattributes.Attributes": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.removeattributes.Next": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.removeattributes.Name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "greengrass.resourcedefinition.resourcedefinitionversion.Resources": {
            "Required": "Yes",
            "Type": [
                "ResourceInstance"
            ],
            "UpdateRequires": "Replacement"
        },
        "athena.workgroup.workgroupconfiguration.BytesScannedCutoffPerQuery": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "athena.workgroup.workgroupconfiguration.RequesterPaysEnabled": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "athena.workgroup.workgroupconfiguration.ResultConfiguration": {
            "Required": "No",
            "Type": "ResultConfiguration",
            "UpdateRequires": "No interruption"
        },
        "athena.workgroup.workgroupconfiguration.EnforceWorkGroupConfiguration": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "athena.workgroup.workgroupconfiguration.PublishCloudWatchMetricsEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "backup.backupselection.conditionresourcetype.ConditionValue": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "backup.backupselection.conditionresourcetype.ConditionType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "backup.backupselection.conditionresourcetype.ConditionKey": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.iotsitewiseaction.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.iotsitewiseaction.PutAssetPropertyValueEntries": {
            "Required": "Yes",
            "Type": [
                "PutAssetPropertyValueEntry"
            ],
            "UpdateRequires": "No interruption"
        },
        "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.OwnerSetting": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.DestinationPath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.S3Uri": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "managedblockchain.member.networkfabricconfiguration.Edition": {
            "Allowed values": "STANDARD | STARTER",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.source.SshKey": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "opsworks.stack.source.Type": {
            "Allowed values": "archive | git | s3 | svn",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.source.Revision": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.source.Url": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.source.Password": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "opsworks.stack.source.Username": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.targetgrouptuple.TargetGroupArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.targetgrouptuple.Weight": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "managedblockchain.member.networkconfiguration.NetworkFrameworkConfiguration": {
            "Required": "No",
            "Type": "NetworkFrameworkConfiguration",
            "UpdateRequires": "No interruption"
        },
        "managedblockchain.member.networkconfiguration.Name": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "managedblockchain.member.networkconfiguration.VotingPolicy": {
            "Required": "Yes",
            "Type": "VotingPolicy",
            "UpdateRequires": "No interruption"
        },
        "managedblockchain.member.networkconfiguration.Framework": {
            "Allowed values": "HYPERLEDGER_FABRIC",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "managedblockchain.member.networkconfiguration.FrameworkVersion": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "8",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...8",
            "CompliantValues": "1...8"
        },
        "managedblockchain.member.networkconfiguration.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2-ec2fleet-tagrequest-properties": {
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "SampleValue": "example-string"
            },
            "Key": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "SampleValue": "example-string"
            }
        },
        "ec2.ec2fleet.tagrequest.key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.tagrequest.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.deployment.Revision": {
            "Required": "Yes",
            "Type": "RevisionLocation",
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.deployment.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.deployment.IgnoreApplicationStopFailures": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.taskdefinition.inferenceaccelerator.DeviceName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.inferenceaccelerator.DeviceType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.AccessLogSettings": {
            "Required": "No",
            "Type": "AccessLogSettings",
            "UpdateRequires": "No interruption"
        },
        "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.AutoDeploy": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.StageVariables": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.RouteSettings": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.DefaultRouteSettings": {
            "Required": "No",
            "Type": "RouteSettings",
            "UpdateRequires": "No interruption"
        },
        "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.security.group.GroupDescription": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "rds.security.group.DBSecurityGroupIngress": {
            "Required": "Yes",
            "Type": [
                "Ingress"
            ],
            "UpdateRequires": "No interruption"
        },
        "rds.security.group.Tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "rds.security.group.EC2VpcId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "kinesis.stream.streamencryption.KeyId": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesis.stream.streamencryption.EncryptionType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticsearch.domain.vpcoptions.SecurityGroupIds": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "elasticsearch.domain.vpcoptions.SubnetIds": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.cloudwatchalarmaction.StateValue": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.cloudwatchalarmaction.StateReason": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.cloudwatchalarmaction.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.cloudwatchalarmaction.AlarmName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.streamingdistribution.trustedsigners.AwsAccountNumbers": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.streamingdistribution.trustedsigners.Enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "resourcegroups.group.resourcequery.Type": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "resourcegroups.group.resourcequery.Query": {
            "Required": "Conditional",
            "Type": "Query",
            "UpdateRequires": "No interruption"
        },
        "stepfunctions.statemachine.logdestination.cloudwatchlogsloggroup.LogGroupArn": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "apigateway.restapi.endpointconfiguration.VpcEndpointIds": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "apigateway.restapi.endpointconfiguration.Types": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.eip.PublicIpv4Pool": {
            "Required": "No",
            "UpdateRequires": "Some interruptions"
        },
        "ec2.eip.Tags": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.eip.InstanceId": {
            "Required": "No",
            "UpdateRequires": "Some interruptions"
        },
        "ec2.eip.Domain": {
            "Allowed values": "standard | vpc",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "medialive.channel.dvbsubsourcesettings.Pid": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.networkinterface.instanceipv6address.Ipv6Address": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.DestinationPath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.OwnerSetting": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.SageMakerJobArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "wafregional.bytematchset.bytematchtuple.TargetString": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "wafregional.bytematchset.bytematchtuple.TargetStringBase64": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafregional.bytematchset.bytematchtuple.FieldToMatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafregional.bytematchset.bytematchtuple.PositionalConstraint": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "wafregional.bytematchset.bytematchtuple.TextTransformation": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.rule.Priority": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.rulegroup.rule.Statement": {
            "Required": "Yes",
            "Type": "StatementOne",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.rule.Action": {
            "Required": "No",
            "Type": "RuleAction",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.rule.Name": {
            "Pattern": "^[\\w\\-]+$",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafv2.rulegroup.rule.VisibilityConfig": {
            "Required": "Yes",
            "Type": "VisibilityConfig",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskdefinition.device.ContainerPath": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.device.HostPath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.device.Permissions": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "appsync.graphqlapi.logconfig.CloudWatchLogsRoleArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.logconfig.FieldLogLevel": {
            "Type": "String",
            "Required": "No",
            "FieldLogLevel`  <a name=\"cfn-appsync-graphqlapi-logconfig-fieldloglevel\"></a>\nThe field logging level\\. Values can be NONE, ERROR, or ALL\\.   \n+  **NONE*": "No field\\-level logs are captured\\.\n+  **ERROR*",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.logconfig.ExcludeVerboseContent": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.mltransform.transformparameters.TransformType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.mltransform.transformparameters.FindMatchesParameters": {
            "Required": "No",
            "Type": "FindMatchesParameters",
            "UpdateRequires": "No interruption"
        },
        "beanstalk.version.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "200",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "beanstalk.version.ApplicationName": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "beanstalk.version.SourceBundle": {
            "Required": "Yes",
            "Type": "SourceBundle",
            "UpdateRequires": "Replacement"
        },
        "ec2.security.group.rule.DestinationPrefixListId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.IpProtocol": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.ToPort": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.security.group.rule.CidrIp": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.CidrIpv6": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.Description": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.security.group.rule.DestinationSecurityGroupId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.FromPort": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "greengrass.resourcedefinitionversion.groupownersetting.AutoAddGroupOwner": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "greengrass.resourcedefinitionversion.groupownersetting.GroupOwner": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "glue.connection.connectioninput.MatchCriteria": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.connection.connectioninput.ConnectionType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.connection.connectioninput.ConnectionProperties": {
            "Required": "Yes",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "glue.connection.connectioninput.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.connection.connectioninput.PhysicalConnectionRequirements": {
            "Required": "No",
            "Type": "PhysicalConnectionRequirements",
            "UpdateRequires": "No interruption"
        },
        "glue.connection.connectioninput.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "medialive.channel.inputattachment.InputId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "medialive.channel.inputattachment.InputAttachmentName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.inputattachment.InputSettings": {
            "Required": "No",
            "Type": "InputSettings",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationreferencedatasource.recordcolumn.Mapping": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.applicationreferencedatasource.recordcolumn.SqlType": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.applicationreferencedatasource.recordcolumn.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.ec2tagfilter.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.ec2tagfilter.Key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.ec2tagfilter.Type": {
            "Allowed values": "KEY_AND_VALUE | KEY_ONLY | VALUE_ONLY",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinition.resourceaccesspolicy.ResourceId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinition.resourceaccesspolicy.Permission": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "synthetics.canary.runconfig.MemoryInMB": {
            "Minimum": "960",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "3008",
            "UpdateRequires": "No interruption",
            "AllowedValues": "960...3008",
            "CompliantValues": "960...3008"
        },
        "synthetics.canary.runconfig.TimeoutInSeconds": {
            "Minimum": "60",
            "Required": "Yes",
            "Type": "Integer",
            "Maximum": "900",
            "UpdateRequires": "No interruption",
            "AllowedValues": "60...900",
            "CompliantValues": "60...900"
        },
        "ec2.launchtemplate.launchtemplatedata.metadataoptions.HttpEndpoint": {
            "Allowed values": "disabled | enabled",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.metadataoptions.HttpTokens": {
            "Allowed values": "optional | required",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.metadataoptions.HttpPutResponseHopLimit": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "glue.securityconfiguration.s3encryption.S3EncryptionMode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.securityconfiguration.s3encryption.KmsKeyArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.serversideencryptionbydefault.KMSMasterKeyID": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.serversideencryptionbydefault.SSEAlgorithm": {
            "Allowed values": "AES256 | aws:kms",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinition.defaultconfig.Execution": {
            "Required": "Yes",
            "Type": "Execution",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.ratebasedstatementtwo.AggregateKeyType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.ratebasedstatementtwo.ScopeDownStatement": {
            "Required": "No",
            "Type": "StatementThree",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.ratebasedstatementtwo.Limit": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "s3.bucket.notificationconfig.lambdaconfig.Function": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.notificationconfig.lambdaconfig.Filter": {
            "Required": "No",
            "Type": "NotificationFilter",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.notificationconfig.lambdaconfig.Event": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.CpuThreshold": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.LoadThreshold": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.InstanceCount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.IgnoreMetricsTime": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.MemoryThreshold": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.ThresholdsWaitTime": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "events.rule.ecsparameters.Group": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.rule.ecsparameters.PlatformVersion": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "events.rule.ecsparameters.LaunchType": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "events.rule.ecsparameters.TaskDefinitionArn": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1600",
            "CompliantValues": "1...1600"
        },
        "events.rule.ecsparameters.NetworkConfiguration": {
            "Required": "No",
            "Type": "NetworkConfiguration",
            "UpdateRequires": "No interruption"
        },
        "events.rule.ecsparameters.TaskCount": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.ebs.volumeattachment.InstanceId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ebs.volumeattachment.Device": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ebs.volumeattachment.VolumeId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.defaultcachebehavior.MaxTTL": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.defaultcachebehavior.TargetOriginId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.defaultcachebehavior.ForwardedValues": {
            "Required": "Yes",
            "Type": "ForwardedValues",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.defaultcachebehavior.MinTTL": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.defaultcachebehavior.Compress": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudfront.distribution.defaultcachebehavior.CachedMethods": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.defaultcachebehavior.ViewerProtocolPolicy": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.defaultcachebehavior.SmoothStreaming": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudfront.distribution.defaultcachebehavior.TrustedSigners": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.defaultcachebehavior.AllowedMethods": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.defaultcachebehavior.LambdaFunctionAssociations": {
            "Required": "No",
            "Type": [
                "LambdaFunctionAssociation"
            ],
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.defaultcachebehavior.FieldLevelEncryptionId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.defaultcachebehavior.DefaultTTL": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.propertygroup.PropertyGroupId": {
            "Pattern": "[a-zA-Z0-9_.-]+",
            "Required": "No",
            "Maximum": "50",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...50",
            "CompliantValues": "1...50"
        },
        "kinesisanalyticsv2.application.propertygroup.PropertyMap": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "glue.crawler.targets.CatalogTargets": {
            "Required": "No",
            "Type": [
                "CatalogTarget"
            ],
            "UpdateRequires": "No interruption"
        },
        "glue.crawler.targets.JdbcTargets": {
            "Required": "No",
            "Type": [
                "JdbcTarget"
            ],
            "UpdateRequires": "No interruption"
        },
        "glue.crawler.targets.S3Targets": {
            "Required": "No",
            "Type": [
                "S3Target"
            ],
            "UpdateRequires": "No interruption"
        },
        "glue.crawler.targets.DynamoDBTargets": {
            "Required": "No",
            "Type": [
                "DynamoDBTarget"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticache.parameter.group.Description": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticache.parameter.group.": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "elasticache.parameter.group.Properties": {},
        "elasticache.parameter.group.CacheParameterGroupFamily": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "msk.cluster.tls.CertificateAuthorityArnList": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "cognito.userpool.userpooladdons.AdvancedSecurityMode": {
            "Allowed values": "AUDIT | ENFORCED | OFF",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.networkaclentry.portrange.From": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.networkaclentry.portrange.To": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "dlm.lifecyclepolicy.createrule.Interval": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "dlm.lifecyclepolicy.createrule.CronExpression": {
            "Pattern": "cron\\([^\\n]{11,100}\\)",
            "Minimum": "17",
            "Required": "No",
            "Maximum": "106",
            "UpdateRequires": "No interruption",
            "AllowedValues": "17...106",
            "CompliantValues": "17...106"
        },
        "dlm.lifecyclepolicy.createrule.IntervalUnit": {
            "Allowed values": "HOURS",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dlm.lifecyclepolicy.createrule.Times": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "1",
            "UpdateRequires": "No interruption"
        },
        "apigatewayv2.apigatewaymanagedoverrides.accesslogsettings.Format": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.apigatewaymanagedoverrides.accesslogsettings.DestinationArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.applicationsource.CloudFormationStackARN": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.applicationsource.TagFilters": {
            "Required": "No",
            "Type": [
                "TagFilter"
            ],
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.onpremisestagsetlistobject.OnPremisesTagGroup": {
            "Required": "No",
            "Type": [
                "TagFilter"
            ],
            "UpdateRequires": "No interruption"
        },
        "ssm.patchbaseline.rule.EnableNonSecurity": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ssm.patchbaseline.rule.ApproveAfterDays": {
            "Minimum": "0",
            "Required": "Conditional",
            "Type": "Integer",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...100",
            "CompliantValues": "0...100"
        },
        "ssm.patchbaseline.rule.ApproveUntilDate": {
            "Minimum": "1",
            "Required": "No",
            "Type": "PatchStringDate",
            "Maximum": "10",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...10",
            "CompliantValues": "1...10"
        },
        "ssm.patchbaseline.rule.PatchFilterGroup": {
            "Required": "No",
            "Type": "PatchFilterGroup",
            "UpdateRequires": "No interruption"
        },
        "ssm.patchbaseline.rule.ComplianceLevel": {
            "Allowed values": "CRITICAL | HIGH | INFORMATIONAL | LOW | MEDIUM | UNSPECIFIED",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.eventdimensions.Metrics": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "pinpoint.campaign.eventdimensions.Attributes": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "pinpoint.campaign.eventdimensions.EventType": {
            "Required": "No",
            "Type": "SetDimension",
            "UpdateRequires": "No interruption"
        },
        "sagemaker.model.vpcconfig.Subnets": {
            "Required": "Yes",
            "Type": "List of String",
            "Maximum": "16",
            "UpdateRequires": "Replacement"
        },
        "sagemaker.model.vpcconfig.SecurityGroupIds": {
            "Required": "Yes",
            "Type": "List of String",
            "Maximum": "5",
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinitionversion.function.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinitionversion.function.FunctionConfiguration": {
            "Required": "Yes",
            "Type": "FunctionConfiguration",
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinitionversion.function.FunctionArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "amazonmq.broker.configurationid.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.broker.configurationid.Revision": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "glue.mltransform.transformparameters.findmatchesparameters.AccuracyCostTradeoff": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "glue.mltransform.transformparameters.findmatchesparameters.PrecisionRecallTradeoff": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "glue.mltransform.transformparameters.findmatchesparameters.EnforceProvidedLabels": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.mltransform.transformparameters.findmatchesparameters.PrimaryKeyColumnName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "robomaker.simulationapplication.sourceconfig.Architecture": {
            "Allowed values": "ARM64 | ARMHF | X86_64",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "robomaker.simulationapplication.sourceconfig.S3Bucket": {
            "Pattern": "[a-z0-9][a-z0-9.\\-]*[a-z0-9]",
            "Required": "Yes",
            "Maximum": "63",
            "UpdateRequires": "No interruption",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...63",
            "CompliantValues": "3...63"
        },
        "robomaker.simulationapplication.sourceconfig.S3Key": {
            "Pattern": ".*",
            "Required": "Yes",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "resourcegroups.group.tagfilter.Values": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "resourcegroups.group.tagfilter.Key": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "sagemaker.model.containerdefinition.ModelDataUrl": {
            "Pattern": "^(https|s3)://([^/]+)/?(.*)$",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "Replacement"
        },
        "sagemaker.model.containerdefinition.Image": {
            "Pattern": "[\\S]+",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sagemaker.model.containerdefinition.Environment": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "Replacement",
            "SampleValue": {
                "todo": "json"
            }
        },
        "sagemaker.model.containerdefinition.Mode": {
            "Allowed values": "MultiModel | SingleModel",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sagemaker.model.containerdefinition.ContainerHostname": {
            "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
            "Required": "No",
            "Type": "String",
            "Maximum": "63",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "s3.bucket.replicationconfiguration.rules.Status": {
            "Allowed values": "Disabled | Enabled",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.replicationconfiguration.rules.Id": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.replicationconfiguration.rules.Destination": {
            "Required": "Yes",
            "Type": "ReplicationDestination",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.rules.Filter": {
            "Required": "No",
            "Type": "ReplicationRuleFilter",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.rules.DeleteMarkerReplication": {
            "Required": "No",
            "Type": "DeleteMarkerReplication",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.rules.Prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.replicationconfiguration.rules.SourceSelectionCriteria": {
            "Required": "No",
            "Type": "SourceSelectionCriteria",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.rules.Priority": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "opsworks.app.datasource.Type": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.app.datasource.DatabaseName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.app.datasource.Arn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.metricdimension.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.metricdimension.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.configuration.tagsentry.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.configuration.tagsentry.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.customactiontype.artifactdetails.MaximumCount": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "Integer",
            "Maximum": "5",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...5",
            "CompliantValues": "0...5"
        },
        "codepipeline.customactiontype.artifactdetails.MinimumCount": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "Integer",
            "Maximum": "5",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...5",
            "CompliantValues": "0...5"
        },
        "kinesisanalyticsv2.application.applicationconfiguration.FlinkApplicationConfiguration": {
            "Required": "No",
            "Type": "FlinkApplicationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.applicationconfiguration.ApplicationCodeConfiguration": {
            "Required": "Conditional",
            "Type": "ApplicationCodeConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.applicationconfiguration.EnvironmentProperties": {
            "Required": "No",
            "Type": "EnvironmentProperties",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.applicationconfiguration.SqlApplicationConfiguration": {
            "Required": "No",
            "Type": "SqlApplicationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.applicationconfiguration.ApplicationSnapshotConfiguration": {
            "Required": "No",
            "Type": "ApplicationSnapshotConfiguration",
            "UpdateRequires": "No interruption"
        },
        "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.SizeInGB": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.Iops": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.VolumeType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.assetpropertyvalue.Value": {
            "Required": "Yes",
            "Type": "AssetPropertyVariant",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.assetpropertyvalue.Quality": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.assetpropertyvalue.Timestamp": {
            "Required": "Yes",
            "Type": "AssetPropertyTimestamp",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.grpctimeout.PerRequest": {
            "Required": "No",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.grpctimeout.Idle": {
            "Required": "No",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "config.remediationconfiguration.resourcevalue.Value": {
            "Allowed values": "RESOURCE_ID",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.patchbaseline.patchfiltergroup.PatchFilters": {
            "Required": "No",
            "Type": [
                "PatchFilter"
            ],
            "Maximum": "4",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.transitionevent.NextState": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotevents.detectormodel.transitionevent.Actions": {
            "Required": "No",
            "Type": [
                "Action"
            ],
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.transitionevent.Condition": {
            "Required": "No",
            "Type": "String",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.transitionevent.EventName": {
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancefleetconfig.volumespecification.Iops": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "elasticmapreduce.instancefleetconfig.volumespecification.VolumeType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancefleetconfig.volumespecification.SizeInGB": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "cognito.userpool.passwordpolicy.RequireUppercase": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cognito.userpool.passwordpolicy.RequireSymbols": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cognito.userpool.passwordpolicy.TemporaryPasswordValidityDays": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "365",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...365",
            "CompliantValues": "0...365"
        },
        "cognito.userpool.passwordpolicy.RequireNumbers": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cognito.userpool.passwordpolicy.MinimumLength": {
            "Minimum": "6",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "99",
            "UpdateRequires": "No interruption",
            "AllowedValues": "6...99",
            "CompliantValues": "6...99"
        },
        "cognito.userpool.passwordpolicy.RequireLowercase": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticloadbalancingv2.listener.fixedresponseconfig.StatusCode": {
            "Pattern": "^(2|4|5)\\d\\d$",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.fixedresponseconfig.MessageBody": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...1024",
            "CompliantValues": "0...1024"
        },
        "elasticloadbalancingv2.listener.fixedresponseconfig.ContentType": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...32",
            "CompliantValues": "0...32"
        },
        "ec2.launchtemplate.blockdevicemapping.ebs.KmsKeyId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.blockdevicemapping.ebs.VolumeSize": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.launchtemplate.blockdevicemapping.ebs.SnapshotId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.blockdevicemapping.ebs.DeleteOnTermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.launchtemplate.blockdevicemapping.ebs.VolumeType": {
            "Allowed values": "gp2 | io1 | sc1 | st1 | standard",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.blockdevicemapping.ebs.Encrypted": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.launchtemplate.blockdevicemapping.ebs.Iops": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.s3originconfig.OriginAccessIdentity": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.predefinedscalingmetricspecification.ResourceLabel": {
            "Minimum": "1",
            "Required": "Conditional",
            "Type": "String",
            "Maximum": "1023",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1023",
            "CompliantValues": "1...1023"
        },
        "autoscalingplans.scalingplan.predefinedscalingmetricspecification.PredefinedScalingMetricType": {
            "Allowed values": "ALBRequestCountPerTarget | ASGAverageCPUUtilization | ASGAverageNetworkIn | ASGAverageNetworkOut | DynamoDBReadCapacityUtilization | DynamoDBWriteCapacityUtilization | EC2SpotFleetRequestAverageCPUUtilization | EC2SpotFleetRequestAverageNetworkIn | EC2SpotFleetRequestAverageNetworkOut | ECSServiceAverageCPUUtilization | ECSServiceAverageMemoryUtilization | RDSReaderAverageCPUUtilization | RDSReaderAverageDatabaseConnections",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpool.lambdaconfig.PreSignUp": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.lambdaconfig.DefineAuthChallenge": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.lambdaconfig.PreAuthentication": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.lambdaconfig.CustomMessage": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.lambdaconfig.UserMigration": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.lambdaconfig.PostConfirmation": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.lambdaconfig.PostAuthentication": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.lambdaconfig.VerifyAuthChallengeResponse": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.lambdaconfig.PreTokenGeneration": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.lambdaconfig.CreateAuthChallenge": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "budgets.budget.subscriber.SubscriptionType": {
            "Allowed values": "EMAIL | SNS",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "budgets.budget.subscriber.Address": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "macie.findingsfilter.findingcriteria.Criterion": {
            "Required": "No",
            "Type": "Criterion",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.fastrestorerule.IntervalUnit": {
            "Allowed values": "DAYS | MONTHS | WEEKS | YEARS",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dlm.lifecyclepolicy.fastrestorerule.Interval": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "dlm.lifecyclepolicy.fastrestorerule.AvailabilityZones": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "10",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.fastrestorerule.Count": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "1000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1000",
            "CompliantValues": "1...1000"
        },
        "robomaker.robotapplication.robotsoftwaresuite.Version": {
            "Allowed values": "Dashing | Kinetic | Melodic",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "robomaker.robotapplication.robotsoftwaresuite.Name": {
            "Allowed values": "ROS | ROS2",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.taglist.taglist": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-webacl-taglist-properties": {
            "TagList": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "transfer.user.homedirectorymapentry.Entry": {
            "Pattern": "^/.*",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "transfer.user.homedirectorymapentry.Target": {
            "Pattern": "^/.*",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.vpnconnection.vpntunneloptionsspecification.PreSharedKey": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.vpnconnection.vpntunneloptionsspecification.TunnelInsideCidr": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "wafv2-rulegroup-rules-properties": {
            "Rules": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "wafv2.rulegroup.rules.rules": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.Placement": {
            "Required": "No",
            "Type": "PlacementType",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.HadoopVersion": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.CoreInstanceFleet": {
            "Required": "No",
            "Type": "InstanceFleetConfig",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.MasterInstanceFleet": {
            "Required": "No",
            "Type": "InstanceFleetConfig",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.CoreInstanceGroup": {
            "Required": "No",
            "Type": "InstanceGroupConfig",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.EmrManagedSlaveSecurityGroup": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.TerminationProtected": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.AdditionalMasterSecurityGroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.EmrManagedMasterSecurityGroup": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.ServiceAccessSecurityGroup": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.Ec2SubnetId": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.MasterInstanceGroup": {
            "Required": "No",
            "Type": "InstanceGroupConfig",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.Ec2KeyName": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.AdditionalSlaveSecurityGroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.KeepJobFlowAliveWhenNoSteps": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.Ec2SubnetIds": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "kinesisfirehose.deliverystream.orcserde.EnablePadding": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "kinesisfirehose.deliverystream.orcserde.BloomFilterColumns": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.orcserde.DictionaryKeyThreshold": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "kinesisfirehose.deliverystream.orcserde.PaddingTolerance": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "kinesisfirehose.deliverystream.orcserde.RowIndexStride": {
            "Minimum": "1000",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisfirehose.deliverystream.orcserde.StripeSizeBytes": {
            "Minimum": "8388608",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisfirehose.deliverystream.orcserde.BloomFilterFalsePositiveProbability": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "kinesisfirehose.deliverystream.orcserde.FormatVersion": {
            "Allowed values": "V0_11 | V0_12",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.orcserde.BlockSizeBytes": {
            "Minimum": "67108864",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisfirehose.deliverystream.orcserde.Compression": {
            "Allowed values": "NONE | SNAPPY | ZLIB",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.visibilityconfig.CloudWatchMetricsEnabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "wafv2.webacl.visibilityconfig.SampledRequestsEnabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "wafv2.webacl.visibilityconfig.MetricName": {
            "Pattern": "^[\\w#:\\.\\-/]+$",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "msk.cluster.storageinfo.EBSStorageInfo": {
            "Required": "No",
            "Type": "EBSStorageInfo",
            "UpdateRequires": "Replacement"
        },
        "route53.hostedzone.hostedzonetags.Value": {
            "UpdateRequires": "No interruption",
            "Required": "Yes",
            "Type": "String",
            "Value`  <a name=\"cfn-route53-hostedzonetags-value\"></a>\nThe value of `Value` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Value` is the value that you want to give the new tag\\.\n+  **Edit a tag*",
            "Maximum": "256",
            "SampleValue": "example-string"
        },
        "route53.hostedzone.hostedzonetags.Key": {
            "UpdateRequires": "No interruption",
            "Required": "Yes",
            "Type": "String",
            "Key`  <a name=\"cfn-route53-hostedzonetags-key\"></a>\nThe value of `Key` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Key` is the name that you want to give the new tag\\.\n+  **Edit a tag*",
            "Maximum": "128",
            "SampleValue": "example-string"
        },
        "events.rule.runcommandtarget.Key": {
            "Pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*$",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "events.rule.runcommandtarget.Values": {
            "Required": "Yes",
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "dynamodb.lsi.Projection": {
            "Required": "Yes",
            "Type": "Projection",
            "UpdateRequires": "No interruption"
        },
        "dynamodb.lsi.IndexName": {
            "Pattern": "[a-zA-Z0-9_.-]+",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...255",
            "CompliantValues": "3...255"
        },
        "dynamodb.lsi.KeySchema": {
            "Required": "Yes",
            "Maximum": "2",
            "UpdateRequires": "No interruption"
        },
        "qldb.stream.kinesisconfiguration.AggregationEnabled": {
            "Required": "No",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "qldb.stream.kinesisconfiguration.StreamArn": {
            "Minimum": "20",
            "Required": "No",
            "Type": "String",
            "Maximum": "1600",
            "UpdateRequires": "Replacement",
            "AllowedValues": "20...1600",
            "CompliantValues": "20...1600"
        },
        "directoryservice.microsoftad.vpcsettings.SubnetIds": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "directoryservice.microsoftad.vpcsettings.VpcId": {
            "Pattern": "^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.fleet.serverprocess.ConcurrentExecutions": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "gamelift.fleet.serverprocess.LaunchPath": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "gamelift.fleet.serverprocess.Parameters": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "appmesh.route.httprouteheader.Invert": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "appmesh.route.httprouteheader.Match": {
            "Required": "No",
            "Type": "HeaderMatchMethod",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.httprouteheader.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.configurationseteventdestination.kinesisfirehosedestination.DeliveryStreamARN": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.configurationseteventdestination.kinesisfirehosedestination.IAMRoleARN": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinition.resourcedownloadownersetting.GroupOwner": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinition.resourcedownloadownersetting.GroupPermission": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "autoscaling.scalingpolicy.stepadjustments.ScalingAdjustment": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "autoscaling.scalingpolicy.stepadjustments.MetricIntervalUpperBound": {
            "Required": "Conditional",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "autoscaling.scalingpolicy.stepadjustments.MetricIntervalLowerBound": {
            "Required": "Conditional",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.monitoring.Enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "lakeformation.permissions.tablewithcolumnsresource.ColumnNames": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "lakeformation.permissions.tablewithcolumnsresource.ColumnWildcard": {
            "Required": "No",
            "Type": "ColumnWildcard",
            "UpdateRequires": "No interruption"
        },
        "lakeformation.permissions.tablewithcolumnsresource.DatabaseName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "lakeformation.permissions.tablewithcolumnsresource.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypoolroleattachment.rulesconfigurationtype.Rules": {
            "Required": "Yes",
            "Type": [
                "MappingRule"
            ],
            "UpdateRequires": "No interruption"
        },
        "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.Iops": {
            "Minimum": "100",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "10000",
            "UpdateRequires": "Replacement",
            "AllowedValues": "100...10000",
            "CompliantValues": "100...10000"
        },
        "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.KmsKeyId": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.SnapshotId": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.Encrypted": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.VolumeSize": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "16000",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...16000",
            "CompliantValues": "1...16000"
        },
        "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.DeleteOnTermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.VolumeType": {
            "Allowed values": "gp2 | io1 | sc1 | st1 | standard",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "apitgateway.method.integration.integrationresponse.StatusCode": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apitgateway.method.integration.integrationresponse.ResponseParameters": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.integration.integrationresponse.ResponseTemplates": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.integration.integrationresponse.ContentHandling": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apitgateway.method.integration.integrationresponse.SelectionPattern": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.httpheaderconfig.HttpHeaderName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.httpheaderconfig.Values": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.volumespecification.SizeInGB": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.volumespecification.VolumeType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.volumespecification.Iops": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appsync.datasource.elasticsearchconfig.AwsRegion": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.elasticsearchconfig.Endpoint": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.openidconnectconfig.IatTTL": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "appsync.graphqlapi.openidconnectconfig.Issuer": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.openidconnectconfig.AuthTTL": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "appsync.graphqlapi.openidconnectconfig.ClientId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.association.parametervalues.ParameterValues": {
            "Required": "Yes",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "glue.classifier.csvclassifier.QuoteSymbol": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.classifier.csvclassifier.Header": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.classifier.csvclassifier.Delimiter": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.classifier.csvclassifier.AllowSingleColumn": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.classifier.csvclassifier.ContainsHeader": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.classifier.csvclassifier.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "glue.classifier.csvclassifier.DisableValueTrimming": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codecommit.repository.repositorytrigger.CustomData": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codecommit.repository.repositorytrigger.Events": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "codecommit.repository.repositorytrigger.DestinationArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codecommit.repository.repositorytrigger.Branches": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "codecommit.repository.repositorytrigger.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.redirectconfig.Protocol": {
            "Pattern": "^(HTTPS?|#\\{protocol\\})$",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.redirectconfig.Port": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.redirectconfig.Host": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "elasticloadbalancingv2.listenerrule.redirectconfig.Query": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...128",
            "CompliantValues": "0...128"
        },
        "elasticloadbalancingv2.listenerrule.redirectconfig.StatusCode": {
            "Allowed values": "HTTP_301 | HTTP_302",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.redirectconfig.Path": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "cloudwatch.anomalydetector.dimension.Name": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cloudwatch.anomalydetector.dimension.Value": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "wafv2.ipset.taglist.taglist": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-ipset-taglist-properties": {
            "TagList": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "wafv2.rulegroup.statementthree.RegexPatternSetReferenceStatement": {
            "Required": "No",
            "Type": "RegexPatternSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementthree.ByteMatchStatement": {
            "Required": "No",
            "Type": "ByteMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementthree.XssMatchStatement": {
            "Required": "No",
            "Type": "XssMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementthree.IPSetReferenceStatement": {
            "Required": "No",
            "Type": "IPSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementthree.SqliMatchStatement": {
            "Required": "No",
            "Type": "SqliMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementthree.SizeConstraintStatement": {
            "Required": "No",
            "Type": "SizeConstraintStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementthree.GeoMatchStatement": {
            "Required": "No",
            "Type": "GeoMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpooldomain.customdomainconfigtype.CertificateArn": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.smsconfiguration.SnsCallerArn": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.smsconfiguration.ExternalId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.replicationruleandoperator.Prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.replicationruleandoperator.TagFilters": {
            "Required": "No",
            "Type": [
                "TagFilter"
            ],
            "UpdateRequires": "No interruption"
        },
        "lakeformation.permissions.columnwildcard.ExcludedColumnNames": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.dataformatconversionconfiguration.InputFormatConfiguration": {
            "Required": "No",
            "Type": "InputFormatConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.dataformatconversionconfiguration.SchemaConfiguration": {
            "Required": "No",
            "Type": "SchemaConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.dataformatconversionconfiguration.OutputFormatConfiguration": {
            "Required": "No",
            "Type": "OutputFormatConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.dataformatconversionconfiguration.Enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "lakeformation.permissions.resource.DatabaseResource": {
            "Required": "No",
            "Type": "DatabaseResource",
            "UpdateRequires": "No interruption"
        },
        "lakeformation.permissions.resource.DataLocationResource": {
            "Required": "No",
            "Type": "DataLocationResource",
            "UpdateRequires": "No interruption"
        },
        "lakeformation.permissions.resource.TableResource": {
            "Required": "No",
            "Type": "TableResource",
            "UpdateRequires": "No interruption"
        },
        "lakeformation.permissions.resource.TableWithColumnsResource": {
            "Required": "No",
            "Type": "TableWithColumnsResource",
            "UpdateRequires": "No interruption"
        },
        "amazonmq.broker.user.Username": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.broker.user.Password": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.broker.user.ConsoleAccess": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "amazonmq.broker.user.Groups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "wafregional.xssmatchset.xssmatchtuple.FieldToMatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafregional.xssmatchset.xssmatchtuple.TextTransformation": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.AvailabilityZone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.GroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.Tenancy": {
            "Allowed values": "dedicated | default | host",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.redirectconfig.Path": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "elasticloadbalancingv2.listener.redirectconfig.StatusCode": {
            "Allowed values": "HTTP_301 | HTTP_302",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.redirectconfig.Port": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.redirectconfig.Query": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...128",
            "CompliantValues": "0...128"
        },
        "elasticloadbalancingv2.listener.redirectconfig.Protocol": {
            "Pattern": "^(HTTPS?|#\\{protocol\\})$",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.redirectconfig.Host": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "msk.cluster.encryptionatrest.DataVolumeKMSKeyId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "codestar.githubrepository.code.S3": {
            "Required": "Yes",
            "Type": "S3",
            "UpdateRequires": "Updates are not supported\\."
        },
        "s3.websiteconfiguration.redirectallrequeststo.HostName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.websiteconfiguration.redirectallrequeststo.Protocol": {
            "Allowed values": "http | https",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.stages.blockers.Name": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "codepipeline.pipeline.stages.blockers.Type": {
            "Allowed values": "Schedule",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.TableName": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.S3ReferenceDataSource": {
            "Required": "No",
            "Type": "S3ReferenceDataSource",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.ReferenceSchema": {
            "Required": "Yes",
            "Type": "ReferenceSchema",
            "UpdateRequires": "No interruption"
        },
        "rds.security.group.rule.EC2SecurityGroupId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "rds.security.group.rule.EC2SecurityGroupOwnerId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "rds.security.group.rule.CIDRIP": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.security.group.rule.EC2SecurityGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.logconfiguration.LogDriver": {
            "Required": "Yes",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.logconfiguration.SecretOptions": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.logconfiguration.Options": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.licensespecification.LicenseConfigurationArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.statementone.NotStatement": {
            "Required": "No",
            "Type": "NotStatementOne",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.SqliMatchStatement": {
            "Required": "No",
            "Type": "SqliMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.SizeConstraintStatement": {
            "Required": "No",
            "Type": "SizeConstraintStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.IPSetReferenceStatement": {
            "Required": "No",
            "Type": "IPSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.XssMatchStatement": {
            "Required": "No",
            "Type": "XssMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.ByteMatchStatement": {
            "Required": "No",
            "Type": "ByteMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.RegexPatternSetReferenceStatement": {
            "Required": "No",
            "Type": "RegexPatternSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.RuleGroupReferenceStatement": {
            "Required": "No",
            "Type": "RuleGroupReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.ManagedRuleGroupStatement": {
            "Required": "No",
            "Type": "ManagedRuleGroupStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.OrStatement": {
            "Required": "No",
            "Type": "OrStatementOne",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.AndStatement": {
            "Required": "No",
            "Type": "AndStatementOne",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.RateBasedStatement": {
            "Required": "No",
            "Type": "RateBasedStatementOne",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.GeoMatchStatement": {
            "Required": "No",
            "Type": "GeoMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.recordcolumn.Mapping": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.application.recordcolumn.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.application.recordcolumn.SqlType": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iam.policy.1.PolicyName": {
            "Pattern": "[\\w+=,.@-]+",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iam.policy.1.PolicyDocument": {
            "Pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
            "Required": "Yes",
            "Maximum": "131072",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "Json",
            "AllowedValues": "1...131072",
            "CompliantValues": "1...131072"
        },
        "ec2.mount.point.VolumeId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.mount.point.Device": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.route.parameterconstraints.Required": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "backup.backupplan.backupplanresourcetype.BackupPlanName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "backup.backupplan.backupplanresourcetype.BackupPlanRule": {
            "Required": "Yes",
            "Type": [
                "BackupRuleResourceType"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.metricsconfiguration.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.metricsconfiguration.Prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.metricsconfiguration.TagFilters": {
            "Required": "No",
            "Type": [
                "TagFilter"
            ],
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationoutput.kinesisstreamsoutput.ResourceARN": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisanalytics.applicationoutput.kinesisstreamsoutput.RoleARN": {
            "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "batch.jobdefinition.retrystrategy.Attempts": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "iotevents.detectormodel.dynamodb.RangeKeyField": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.dynamodb.PayloadField": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.dynamodb.HashKeyField": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.dynamodb.RangeKeyType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.dynamodb.Operation": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.dynamodb.HashKeyType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.dynamodb.HashKeyValue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.dynamodb.Payload": {
            "Required": "No",
            "Type": "Payload",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.dynamodb.TableName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.dynamodb.RangeKeyValue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.domainname.endpointconfiguration.Types": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "apigateway.documentationpart.location.Path": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "apigateway.documentationpart.location.StatusCode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "apigateway.documentationpart.location.Type": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "apigateway.documentationpart.location.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "apigateway.documentationpart.location.Method": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "autoscaling.autoscalinggroup.mixedinstancespolicy.InstancesDistribution": {
            "Required": "No",
            "Type": "InstancesDistribution",
            "UpdateRequires": "No interruption"
        },
        "autoscaling.autoscalinggroup.mixedinstancespolicy.LaunchTemplate": {
            "Required": "Yes",
            "Type": "LaunchTemplate",
            "UpdateRequires": "No interruption"
        },
        "amplify.domain.subdomainsetting.Prefix": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amplify.domain.subdomainsetting.BranchName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.scalingpolicy.customizedmetricspecification.Namespace": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.scalingpolicy.customizedmetricspecification.Dimensions": {
            "Required": "No",
            "Type": [
                "MetricDimension"
            ],
            "UpdateRequires": "No interruption"
        },
        "autoscaling.scalingpolicy.customizedmetricspecification.MetricName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.scalingpolicy.customizedmetricspecification.Statistic": {
            "Allowed values": "Average | Maximum | Minimum | SampleCount | Sum",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.scalingpolicy.customizedmetricspecification.Unit": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpool.invitemessagetemplate.EmailSubject": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
            "Required": "No",
            "Maximum": "140",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...140",
            "CompliantValues": "1...140"
        },
        "cognito.userpool.invitemessagetemplate.SMSMessage": {
            "Pattern": ".*\\{####\\}.*",
            "Required": "No",
            "Maximum": "140",
            "UpdateRequires": "No interruption",
            "Minimum": "6",
            "Type": "String",
            "AllowedValues": "6...140",
            "CompliantValues": "6...140"
        },
        "cognito.userpool.invitemessagetemplate.EmailMessage": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{####\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
            "Required": "No",
            "Maximum": "20000",
            "UpdateRequires": "No interruption",
            "Minimum": "6",
            "Type": "String",
            "AllowedValues": "6...20000",
            "CompliantValues": "6...20000"
        },
        "elasticmapreduce.cluster.configuration.Classification": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.configuration.ConfigurationProperties": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.configuration.Configurations": {
            "Required": "No",
            "Type": [
                "Configuration"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.ComparisonOperator": {
            "Allowed values": "GREATER_THAN | GREATER_THAN_OR_EQUAL | LESS_THAN | LESS_THAN_OR_EQUAL",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.MetricName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.Statistic": {
            "Allowed values": "AVERAGE | MAXIMUM | MINIMUM | SAMPLE_COUNT | SUM",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.Period": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.Namespace": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.EvaluationPeriods": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.Unit": {
            "Allowed values": "BITS | BITS_PER_SECOND | BYTES | BYTES_PER_SECOND | COUNT | COUNT_PER_SECOND | GIGA_BITS | GIGA_BITS_PER_SECOND | GIGA_BYTES | GIGA_BYTES_PER_SECOND | KILO_BITS | KILO_BITS_PER_SECOND | KILO_BYTES | KILO_BYTES_PER_SECOND | MEGA_BITS | MEGA_BITS_PER_SECOND | MEGA_BYTES | MEGA_BYTES_PER_SECOND | MICRO_SECONDS | MILLI_SECONDS | NONE | PERCENT | SECONDS | TERA_BITS | TERA_BITS_PER_SECOND | TERA_BYTES | TERA_BYTES_PER_SECOND",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.Dimensions": {
            "Required": "No",
            "Type": [
                "MetricDimension"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.Threshold": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "s3.bucket.ObjectLockEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.LifecycleConfiguration": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.VersioningConfiguration": {
            "Required": "No",
            "Type": "VersioningConfiguration",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.NotificationConfiguration": {
            "Required": "No",
            "Type": "NotificationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.ObjectLockConfiguration": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.AnalyticsConfigurations": {
            "Required": "No",
            "Type": [
                "AnalyticsConfiguration"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.AccelerateConfiguration": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.BucketName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "s3.bucket.CorsConfiguration": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.Tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.PublicAccessBlockConfiguration": {
            "Required": "No",
            "Type": "PublicAccessBlockConfiguration",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.MetricsConfigurations": {
            "Required": "No",
            "Type": [
                "MetricsConfiguration"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.LoggingConfiguration": {
            "Required": "No",
            "Type": "LoggingConfiguration",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.AccessControl": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.BucketEncryption": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.InventoryConfigurations": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.WebsiteConfiguration": {
            "Required": "No",
            "Type": "WebsiteConfiguration",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.ReplicationConfiguration": {
            "Required": "No",
            "Type": "ReplicationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listener.certificates.1.CertificateArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.coredefinition.core.SyncShadow": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "greengrass.coredefinition.core.CertificateArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.coredefinition.core.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.coredefinition.core.ThingArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "gamelift.gamesessionqueue.playerlatencypolicy.PolicyDurationSeconds": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "gamelift.gamesessionqueue.playerlatencypolicy.MaximumIndividualPlayerLatencyMilliseconds": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apigatewayv2.apigatewaymanagedoverrides.routesettings.ThrottlingBurstLimit": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apigatewayv2.apigatewaymanagedoverrides.routesettings.DataTraceEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigatewayv2.apigatewaymanagedoverrides.routesettings.ThrottlingRateLimit": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "apigatewayv2.apigatewaymanagedoverrides.routesettings.DetailedMetricsEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigatewayv2.apigatewaymanagedoverrides.routesettings.LoggingLevel": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.instance.ebsblockdevice.VolumeSize": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "opsworks.instance.ebsblockdevice.DeleteOnTermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "opsworks.instance.ebsblockdevice.VolumeType": {
            "Allowed values": "gp2 | io1 | standard",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.instance.ebsblockdevice.Iops": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "opsworks.instance.ebsblockdevice.SnapshotId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.geomatchstatement.CountryCodes": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "greengrass.functiondefinition.functionconfiguration.Pinned": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "greengrass.functiondefinition.functionconfiguration.Executable": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinition.functionconfiguration.ExecArgs": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinition.functionconfiguration.EncodingType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinition.functionconfiguration.MemorySize": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "greengrass.functiondefinition.functionconfiguration.Environment": {
            "Required": "No",
            "Type": "Environment",
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinition.functionconfiguration.Timeout": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "imagebuilder.imagerecipe.componentconfiguration.ComponentArn": {
            "Pattern": "^arn:aws[^:]*:imagebuilder:[^:]+:(?:\\d{12}|aws):component/[a-z0-9-_]+/(?:(?:(\\d+|x)\\.(\\d+|x)\\.(\\d+|x))|(?:\\d+\\.\\d+\\.\\d+/\\d+))$",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "s3.bucket.replicationtime.Time": {
            "Required": "Yes",
            "Type": "ReplicationTimeValue",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationtime.Status": {
            "Allowed values": "Disabled | Enabled",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.defaultactions.TargetGroupArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.defaultactions.FixedResponseConfig": {
            "Required": "No",
            "Type": "FixedResponseConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listener.defaultactions.ForwardConfig": {
            "Required": "No",
            "Type": "ForwardConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listener.defaultactions.AuthenticateCognitoConfig": {
            "Required": "No",
            "Type": "AuthenticateCognitoConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listener.defaultactions.AuthenticateOidcConfig": {
            "Required": "No",
            "Type": "AuthenticateOidcConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listener.defaultactions.Type": {
            "Allowed values": "authenticate-cognito | authenticate-oidc | fixed-response | forward | redirect",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.defaultactions.Order": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "50000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...50000",
            "CompliantValues": "1...50000"
        },
        "elasticloadbalancingv2.listener.defaultactions.RedirectConfig": {
            "Required": "No",
            "Type": "RedirectConfig",
            "UpdateRequires": "No interruption"
        },
        "cloudwatch.anomalydetector.range.EndTime": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudwatch.anomalydetector.range.StartTime": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "stepfunctions.statemachine.logdestination.CloudWatchLogsLogGroup": {
            "Required": "No",
            "Type": "CloudWatchLogsLogGroup",
            "UpdateRequires": "No interruption"
        },
        "s3.websiteconfiguration.RoutingRules": {
            "Required": "No",
            "Type": [
                "RoutingRule"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.websiteconfiguration.RedirectAllRequestsTo": {
            "Required": "No",
            "Type": "RedirectAllRequestsTo",
            "UpdateRequires": "No interruption"
        },
        "s3.websiteconfiguration.ErrorDocument": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.websiteconfiguration.IndexDocument": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.listenertimeout.GRPC": {
            "Required": "No",
            "Type": "GrpcTimeout",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.listenertimeout.HTTP": {
            "Required": "No",
            "Type": "HttpTimeout",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.listenertimeout.TCP": {
            "Required": "No",
            "Type": "TcpTimeout",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.listenertimeout.HTTP2": {
            "Required": "No",
            "Type": "HttpTimeout",
            "UpdateRequires": "No interruption"
        },
        "athena.datacatalog.tags.Tags": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "appconfig.environment.monitors.AlarmRoleArn": {
            "Pattern": "^((arn):(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):(iam)::\\d{12}:role[/].*)$",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "appconfig.environment.monitors.AlarmArn": {
            "Pattern": "arn:(aws[a-zA-Z-]*)?:[a-z]+:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1})?:(\\d{12})?:[a-zA-Z0-9-_/:.]+",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "greengrass.coredefinition.coredefinitionversion.Cores": {
            "Required": "Yes",
            "Type": [
                "Core"
            ],
            "UpdateRequires": "Replacement"
        },
        "ses.receiptrule.addheaderaction.HeaderName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.addheaderaction.HeaderValue": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ask.skill.authenticationconfiguration.ClientId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ask.skill.authenticationconfiguration.RefreshToken": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ask.skill.authenticationconfiguration.ClientSecret": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.fleet.computecapacity.DesiredInstances": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "fms.policy.iemap.ACCOUNT": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "fms.policy.iemap.ORGUNIT": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "budgets.budget.budgetdata.PlannedBudgetLimits": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "Replacement",
            "SampleValue": {
                "todo": "json"
            }
        },
        "budgets.budget.budgetdata.CostTypes": {
            "Required": "No",
            "Type": "CostTypes",
            "UpdateRequires": "No interruption"
        },
        "budgets.budget.budgetdata.TimeUnit": {
            "Allowed values": "ANNUALLY | DAILY | MONTHLY | QUARTERLY",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "budgets.budget.budgetdata.TimePeriod": {
            "Required": "No",
            "Type": "TimePeriod",
            "UpdateRequires": "No interruption"
        },
        "budgets.budget.budgetdata.CostFilters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "budgets.budget.budgetdata.BudgetName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "budgets.budget.budgetdata.BudgetType": {
            "Allowed values": "COST | RI_COVERAGE | RI_UTILIZATION | SAVINGS_PLANS_COVERAGE | SAVINGS_PLANS_UTILIZATION | USAGE",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "budgets.budget.budgetdata.BudgetLimit": {
            "Required": "No",
            "Type": "Spend",
            "UpdateRequires": "No interruption"
        },
        "codepipeline.webhook.webhookauthconfiguration.AllowedIPRange": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "codepipeline.webhook.webhookauthconfiguration.SecretToken": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "appmesh.virtualservice.virtualrouterserviceprovider.VirtualRouterName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.coredefinitionversion.core.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.coredefinitionversion.core.SyncShadow": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "greengrass.coredefinitionversion.core.CertificateArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.coredefinitionversion.core.ThingArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.servicediscovery.DNS": {
            "Required": "No",
            "Type": "DnsServiceDiscovery",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.servicediscovery.AWSCloudMap": {
            "Required": "No",
            "Type": "AwsCloudMapServiceDiscovery",
            "UpdateRequires": "No interruption"
        },
        "stack.Parameters": {
            "Required": "Conditional",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "stack.Tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "stack.NotificationARNs": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "stack.TemplateURL": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "stack.TimeoutInMinutes": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appsync.datasource.awsiamconfig.SigningServiceName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.awsiamconfig.SigningRegion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.applicationoutput.kinesisfirehoseoutput.ResourceARN": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "wafregional.ratebasedrule.predicate.DataId": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafregional.ratebasedrule.predicate.Negated": {
            "Required": "Yes",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "wafregional.ratebasedrule.predicate.Type": {
            "Allowed values": "ByteMatch | GeoMatch | IPMatch | RegexMatch | SizeConstraint | SqlInjectionMatch | XssMatch",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.accesscontroltranslation.Owner": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "servicecatalog.cloudformationprovisionedproduct.provisioningparameter.Key": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1000",
            "CompliantValues": "1...1000"
        },
        "servicecatalog.cloudformationprovisionedproduct.provisioningparameter.Value": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "4096",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.cloudwatchmetricaction.MetricName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.cloudwatchmetricaction.MetricNamespace": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.cloudwatchmetricaction.MetricTimestamp": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.cloudwatchmetricaction.MetricUnit": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.cloudwatchmetricaction.MetricValue": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.cloudwatchmetricaction.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.weightedtarget.Weight": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.route.weightedtarget.VirtualNode": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.dynamodbsettings.ServiceAccessRoleArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "lakeformation.permissions.tableresource.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "lakeformation.permissions.tableresource.DatabaseName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.group.groupversion.ConnectorDefinitionVersionArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.group.groupversion.DeviceDefinitionVersionArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.group.groupversion.SubscriptionDefinitionVersionArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.group.groupversion.LoggerDefinitionVersionArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.group.groupversion.ResourceDefinitionVersionArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.group.groupversion.FunctionDefinitionVersionArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.group.groupversion.CoreDefinitionVersionArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "codebuild.project.environmentvariable.Name": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.environmentvariable.Type": {
            "Allowed values": "PARAMETER_STORE | PLAINTEXT | SECRETS_MANAGER",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.environmentvariable.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "config.configrule.scope.TagValue": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "config.configrule.scope.ComplianceResourceId": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "768",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...768",
            "CompliantValues": "1...768"
        },
        "config.configrule.scope.TagKey": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "config.configrule.scope.ComplianceResourceTypes": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "100",
            "UpdateRequires": "No interruption"
        },
        "rds.dbinstance.dbinstancerole.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbinstance.dbinstancerole.FeatureName": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cassandra.table.billingmode.ProvisionedThroughput": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cassandra.table.billingmode.Mode": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "apigateway.usageplan.throttlesettings.BurstLimit": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apigateway.usageplan.throttlesettings.RateLimit": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.grpcroutematch.MethodName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.grpcroutematch.ServiceName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.grpcroutematch.Metadata": {
            "Required": "No",
            "Type": [
                "GrpcRouteMetadata"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.instance.launchtemplatespecification.LaunchTemplateId": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.instance.launchtemplatespecification.LaunchTemplateName": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.instance.launchtemplatespecification.Version": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "transfer.server.endpointdetails.SubnetIds": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "transfer.server.endpointdetails.VpcId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "transfer.server.endpointdetails.AddressAllocationIds": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Some interruptions"
        },
        "transfer.server.endpointdetails.VpcEndpointId": {
            "Pattern": "^vpce-[0-9a-f]{17}$",
            "Required": "No",
            "Maximum": "22",
            "UpdateRequires": "No interruption",
            "Minimum": "22",
            "Type": "String",
            "AllowedValues": "22...22",
            "CompliantValues": "22...22"
        },
        "dlm.lifecyclepolicy.retainrule.IntervalUnit": {
            "Allowed values": "DAYS | MONTHS | WEEKS | YEARS",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dlm.lifecyclepolicy.retainrule.Count": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "1000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1000",
            "CompliantValues": "1...1000"
        },
        "dlm.lifecyclepolicy.retainrule.Interval": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "amplify.app.customrule.Source": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amplify.app.customrule.Status": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amplify.app.customrule.Target": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amplify.app.customrule.Condition": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.hlsinputsettings.Bandwidth": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "medialive.channel.hlsinputsettings.RetryInterval": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "medialive.channel.hlsinputsettings.Retries": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "medialive.channel.hlsinputsettings.BufferSegments": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "pinpointemail.configurationset.tags.Key": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpointemail.configurationset.tags.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "fsx.filesystem.windowsconfiguration.CopyTagsToBackups": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "fsx.filesystem.windowsconfiguration.DeploymentType": {
            "Allowed values": "MULTI_AZ_1 | SINGLE_AZ_1 | SINGLE_AZ_2",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "fsx.filesystem.windowsconfiguration.DailyAutomaticBackupStartTime": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "fsx.filesystem.windowsconfiguration.WeeklyMaintenanceStartTime": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "fsx.filesystem.windowsconfiguration.AutomaticBackupRetentionDays": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "35",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...35",
            "CompliantValues": "0...35"
        },
        "fsx.filesystem.windowsconfiguration.PreferredSubnetId": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "fsx.filesystem.windowsconfiguration.ActiveDirectoryId": {
            "Pattern": "^d-[0-9a-f]{10}$",
            "Required": "No",
            "Maximum": "12",
            "UpdateRequires": "Replacement",
            "Minimum": "12",
            "Type": "String",
            "AllowedValues": "12...12",
            "CompliantValues": "12...12"
        },
        "fsx.filesystem.windowsconfiguration.ThroughputCapacity": {
            "Minimum": "8",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "8...2048",
            "CompliantValues": "8...2048"
        },
        "fsx.filesystem.windowsconfiguration.SelfManagedActiveDirectoryConfiguration": {
            "Required": "No",
            "Type": "SelfManagedActiveDirectoryConfiguration",
            "UpdateRequires": "No interruption"
        },
        "wafv2-ipset-ipaddresses-properties": {
            "IPAddresses": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "wafv2.ipset.ipaddresses.ipaddresses": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.openxjsonserde.CaseInsensitive": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "kinesisfirehose.deliverystream.openxjsonserde.ColumnToJsonKeyMappings": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.openxjsonserde.ConvertDotsInJsonKeysToUnderscores": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "greengrass.functiondefinitionversion.defaultconfig.Execution": {
            "Required": "Yes",
            "Type": "Execution",
            "UpdateRequires": "No interruption"
        },
        "msk.cluster.s3.Enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "msk.cluster.s3.Prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "msk.cluster.s3.Bucket": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.accesspoint.publicaccessblockconfiguration.BlockPublicAcls": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.accesspoint.publicaccessblockconfiguration.RestrictPublicBuckets": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.accesspoint.publicaccessblockconfiguration.BlockPublicPolicy": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.accesspoint.publicaccessblockconfiguration.IgnorePublicAcls": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "config.remediationconfiguration.executioncontrols.SsmControls": {
            "Required": "No",
            "Type": "SsmControls",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationoutput.destinationschema.RecordFormatType": {
            "Allowed values": "CSV | JSON",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.iotanalyticsaction.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.iotanalyticsaction.ChannelName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbproxy.tagformat.Key": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.dbproxy.tagformat.Value": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.xssmatchstatement.TextTransformations": {
            "Required": "Yes",
            "Type": [
                "TextTransformation"
            ],
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.xssmatchstatement.FieldToMatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.ssekmsencryptedobjects.Status": {
            "Allowed values": "Disabled | Enabled",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.glueconfiguration.TableName": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*",
            "Required": "Yes",
            "Maximum": "150",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...150",
            "CompliantValues": "1...150"
        },
        "iotanalytics.dataset.glueconfiguration.DatabaseName": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*",
            "Required": "Yes",
            "Maximum": "150",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...150",
            "CompliantValues": "1...150"
        },
        "wafv2.rulegroup.notstatementone.Statement": {
            "Required": "Yes",
            "Type": "StatementTwo",
            "UpdateRequires": "No interruption"
        },
        "ec2.prefixlist.entry.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.prefixlist.entry.Cidr": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "servicediscovery.service.dnsconfig.RoutingPolicy": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "servicediscovery.service.dnsconfig.DnsRecords": {
            "Required": "Yes",
            "Type": [
                "DnsRecord"
            ],
            "UpdateRequires": "No interruption"
        },
        "servicediscovery.service.dnsconfig.NamespaceId": {
            "Required": "No",
            "Type": "String",
            "Maximum": "64",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "pinpointemail.configurationseteventdestination.kinesisfirehosedestination.IamRoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpointemail.configurationseteventdestination.kinesisfirehosedestination.DeliveryStreamArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.fleet.runtimeconfiguration.MaxConcurrentGameSessionActivations": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "2147483647",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2147483647",
            "CompliantValues": "1...2147483647"
        },
        "gamelift.fleet.runtimeconfiguration.GameSessionActivationTimeoutSeconds": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "600",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...600",
            "CompliantValues": "1...600"
        },
        "gamelift.fleet.runtimeconfiguration.ServerProcesses": {
            "Required": "No",
            "Type": [
                "ServerProcess"
            ],
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "apigatewayv2.stage.routesettings.ThrottlingBurstLimit": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apigatewayv2.stage.routesettings.DetailedMetricsEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigatewayv2.stage.routesettings.LoggingLevel": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.stage.routesettings.DataTraceEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigatewayv2.stage.routesettings.ThrottlingRateLimit": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "appstream.stack.storageconnector.ResourceIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.stack.storageconnector.Domains": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "10",
            "UpdateRequires": "No interruption"
        },
        "appstream.stack.storageconnector.ConnectorType": {
            "Allowed values": "GOOGLE_DRIVE | HOMEFOLDERS | ONE_DRIVE",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancefleetconfig.ebsconfiguration.EbsBlockDeviceConfigs": {
            "Required": "No",
            "Type": [
                "EbsBlockDeviceConfig"
            ],
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.instancefleetconfig.ebsconfiguration.EbsOptimized": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "pinpointemail.configurationseteventdestination.eventdestination.KinesisFirehoseDestination": {
            "Required": "No",
            "Type": "KinesisFirehoseDestination",
            "UpdateRequires": "No interruption"
        },
        "pinpointemail.configurationseteventdestination.eventdestination.SnsDestination": {
            "Required": "No",
            "Type": "SnsDestination",
            "UpdateRequires": "No interruption"
        },
        "pinpointemail.configurationseteventdestination.eventdestination.MatchingEventTypes": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "pinpointemail.configurationseteventdestination.eventdestination.CloudWatchDestination": {
            "Required": "No",
            "Type": "CloudWatchDestination",
            "UpdateRequires": "No interruption"
        },
        "pinpointemail.configurationseteventdestination.eventdestination.PinpointDestination": {
            "Required": "No",
            "Type": "PinpointDestination",
            "UpdateRequires": "No interruption"
        },
        "pinpointemail.configurationseteventdestination.eventdestination.Enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.table.column.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.column.Type": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.column.Comment": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.messageconfiguration.SMSMessage": {
            "Required": "No",
            "Type": "CampaignSmsMessage",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.messageconfiguration.ADMMessage": {
            "Required": "No",
            "Type": "Message",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.messageconfiguration.GCMMessage": {
            "Required": "No",
            "Type": "Message",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.messageconfiguration.BaiduMessage": {
            "Required": "No",
            "Type": "Message",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.messageconfiguration.EmailMessage": {
            "Required": "No",
            "Type": "CampaignEmailMessage",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.messageconfiguration.APNSMessage": {
            "Required": "No",
            "Type": "Message",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.messageconfiguration.DefaultMessage": {
            "Required": "No",
            "Type": "Message",
            "UpdateRequires": "No interruption"
        },
        "groundstation.dataflowendpointgroup.socketaddress.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.dataflowendpointgroup.socketaddress.Port": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.ec2fleet.capacityreservationoptionsrequest.UsageStrategy": {
            "Allowed values": "use-capacity-reservations-first",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.origincustomheader.HeaderName": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origincustomheader.HeaderValue": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.regexpatternset.regularexpressionlist.regularexpressionlist": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-regexpatternset-regularexpressionlist-properties": {
            "RegularExpressionList": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics.pipeline.selectattributes.Next": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.selectattributes.Name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.selectattributes.Attributes": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.Iops": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.SnapshotId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.VolumeType": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.VolumeSize": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.DeleteOnTermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.Encrypted": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codedeploy.deploymentgroup.autorollbackconfiguration.Enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codedeploy.deploymentgroup.autorollbackconfiguration.Events": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "amplify.branch.environmentvariable.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amplify.branch.environmentvariable.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.subscriptiondefinition.subscriptiondefinitionversion.Subscriptions": {
            "Required": "Yes",
            "Type": [
                "Subscription"
            ],
            "UpdateRequires": "Replacement"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications.Tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications.ResourceType": {
            "Allowed values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | elastic-gpu | elastic-ip | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | internet-gateway | key-pair | launch-template | local-gateway-route-table-vpc-association | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-flow-log | vpc-peering-connection | vpn-connection | vpn-gateway",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "managedblockchain.member.votingpolicy.ApprovalThresholdPolicy": {
            "Required": "No",
            "Type": "ApprovalThresholdPolicy",
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.scalinginstruction.MinCapacity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "autoscalingplans.scalingplan.scalinginstruction.CustomizedLoadMetricSpecification": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.scalinginstruction.ScalingPolicyUpdateBehavior": {
            "Allowed values": "KeepExternalPolicies | ReplaceExternalPolicies",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.scalinginstruction.ScalableDimension": {
            "Allowed values": "autoscaling:autoScalingGroup:DesiredCapacity | dynamodb:index:ReadCapacityUnits | dynamodb:index:WriteCapacityUnits | dynamodb:table:ReadCapacityUnits | dynamodb:table:WriteCapacityUnits | ec2:spot-fleet-request:TargetCapacity | ecs:service:DesiredCount | rds:cluster:ReadReplicaCount",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.scalinginstruction.ServiceNamespace": {
            "Allowed values": "autoscaling | dynamodb | ec2 | ecs | rds",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.scalinginstruction.PredictiveScalingMaxCapacityBehavior": {
            "Allowed values": "SetForecastCapacityToMaxCapacity | SetMaxCapacityAboveForecastCapacity | SetMaxCapacityToForecastCapacity",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.scalinginstruction.DisableDynamicScaling": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "autoscalingplans.scalingplan.scalinginstruction.PredictiveScalingMaxCapacityBuffer": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.scalinginstruction.MaxCapacity": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.scalinginstruction.TargetTrackingConfigurations": {
            "Required": "Yes",
            "Type": [
                "TargetTrackingConfiguration"
            ],
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.scalinginstruction.PredictiveScalingMode": {
            "Allowed values": "ForecastAndScale | ForecastOnly",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.scalinginstruction.PredefinedLoadMetricSpecification": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.scalinginstruction.ScheduledActionBufferTime": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "autoscalingplans.scalingplan.scalinginstruction.ResourceId": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1600",
            "CompliantValues": "1...1600"
        },
        "codepipeline.pipeline.stages.actions.inputartifacts.Name": {
            "Pattern": "[a-zA-Z0-9_\\-]+",
            "Required": "Yes",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "amazonmq.broker.encryptionoptions.UseAwsOwnedKey": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "amazonmq.broker.encryptionoptions.KmsKeyId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalabletarget.scalabletargetaction.MaxCapacity": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "applicationautoscaling.scalabletarget.scalabletargetaction.MinCapacity": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "iotanalytics.channel.customermanageds3.KeyPrefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.channel.customermanageds3.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.channel.customermanageds3.Bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "servicediscovery.service.healthcheckconfig.ResourcePath": {
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "No interruption"
        },
        "servicediscovery.service.healthcheckconfig.Type": {
            "*Important**  \nIf you specify HTTPS for the value of `Type`, the endpoint must support TLS v1\\.0 or later\\.\n+  **TCP*": "Route 53 tries to establish a TCP connection\\.\n\n  If you specify `TCP` for `Type`, don't specify a value for `ResourcePath`\\.\nFor more information, see [How Route 53 Determines Whether an Endpoint Is Healthy](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html) in the *Route 53 Developer Guide*\\.",
            "Required": "Yes",
            "Allowed values": "HTTP | HTTPS | TCP",
            "UpdateRequires": "No interruption",
            "Type": "String",
            "Type`  <a name=\"cfn-servicediscovery-service-healthcheckconfig-type\"></a>\nThe type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy\\.  \nYou can't change the value of `Type` after you create a health check\\.\nYou can create the following types of health checks:  \n+  **HTTP*": "Route 53 tries to establish a TCP connection\\. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400\\.\n+  **HTTPS*",
            "SampleValue": "example-string"
        },
        "servicediscovery.service.healthcheckconfig.FailureThreshold": {
            "Minimum": "1",
            "Required": "No",
            "Maximum": "10",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...10",
            "CompliantValues": "1...10"
        },
        "kinesisfirehose.deliverystream.outputformatconfiguration.Serializer": {
            "Required": "No",
            "Type": "Serializer",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.applicationsnapshotconfiguration.SnapshotsEnabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "kinesisfirehose.deliverystream.serializer.ParquetSerDe": {
            "Required": "No",
            "Type": "ParquetSerDe",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.serializer.OrcSerDe": {
            "Required": "No",
            "Type": "OrcSerDe",
            "UpdateRequires": "No interruption"
        },
        "s3.websiteconfiguration.routingrules.RoutingRuleCondition": {
            "Required": "No",
            "Type": "RoutingRuleCondition",
            "UpdateRequires": "No interruption"
        },
        "s3.websiteconfiguration.routingrules.RedirectRule": {
            "Required": "Yes",
            "Type": "RedirectRule",
            "UpdateRequires": "No interruption"
        },
        "ec2.instance.ssmassociations.associationparameters.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.instance.ssmassociations.associationparameters.Value": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.campaignhook.Mode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.campaignhook.WebUrl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.campaignhook.LambdaFunctionName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.clientpolicy.TLS": {
            "Required": "No",
            "Type": "ClientPolicyTls",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.kinesisstreamsinput.ResourceARN": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "groundstation.dataflowendpointgroup.securitydetails.SubnetIds": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "groundstation.dataflowendpointgroup.securitydetails.SecurityGroupIds": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "groundstation.dataflowendpointgroup.securitydetails.RoleArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.notstatementtwo.Statement": {
            "Required": "Yes",
            "Type": "StatementThree",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.inputsettings.FilterStrength": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "medialive.channel.inputsettings.CaptionSelectors": {
            "Required": "No",
            "Type": [
                "CaptionSelector"
            ],
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.inputsettings.DenoiseFilter": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.inputsettings.AudioSelectors": {
            "Required": "No",
            "Type": [
                "AudioSelector"
            ],
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.inputsettings.DeblockFilter": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.inputsettings.SourceEndBehavior": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.inputsettings.InputFilter": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.inputsettings.VideoSelector": {
            "Required": "No",
            "Type": "VideoSelector",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.inputsettings.NetworkInputSettings": {
            "Required": "No",
            "Type": "NetworkInputSettings",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.tcptimeout.Idle": {
            "Required": "No",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.InstanceType": {
            "Allowed values": "a1.2xlarge | a1.4xlarge | a1.large | a1.medium | a1.metal | a1.xlarge | c1.medium | c1.xlarge | c3.2xlarge | c3.4xlarge | c3.8xlarge | c3.large | c3.xlarge | c4.2xlarge | c4.4xlarge | c4.8xlarge | c4.large | c4.xlarge | c5.12xlarge | c5.18xlarge | c5.24xlarge | c5.2xlarge | c5.4xlarge | c5.9xlarge | c5.large | c5.metal | c5.xlarge | c5a.12xlarge | c5a.16xlarge | c5a.24xlarge | c5a.2xlarge | c5a.4xlarge | c5a.8xlarge | c5a.large | c5a.xlarge | c5d.12xlarge | c5d.18xlarge | c5d.24xlarge | c5d.2xlarge | c5d.4xlarge | c5d.9xlarge | c5d.large | c5d.metal | c5d.xlarge | c5n.18xlarge | c5n.2xlarge | c5n.4xlarge | c5n.9xlarge | c5n.large | c5n.xlarge | c6g.12xlarge | c6g.16xlarge | c6g.2xlarge | c6g.4xlarge | c6g.8xlarge | c6g.large | c6g.medium | c6g.metal | c6g.xlarge | cc1.4xlarge | cc2.8xlarge | cg1.4xlarge | cr1.8xlarge | d2.2xlarge | d2.4xlarge | d2.8xlarge | d2.xlarge | f1.16xlarge | f1.2xlarge | f1.4xlarge | g2.2xlarge | g2.8xlarge | g3.16xlarge | g3.4xlarge | g3.8xlarge | g3s.xlarge | g4dn.12xlarge | g4dn.16xlarge | g4dn.2xlarge | g4dn.4xlarge | g4dn.8xlarge | g4dn.metal | g4dn.xlarge | h1.16xlarge | h1.2xlarge | h1.4xlarge | h1.8xlarge | hi1.4xlarge | hs1.8xlarge | i2.2xlarge | i2.4xlarge | i2.8xlarge | i2.xlarge | i3.16xlarge | i3.2xlarge | i3.4xlarge | i3.8xlarge | i3.large | i3.metal | i3.xlarge | i3en.12xlarge | i3en.24xlarge | i3en.2xlarge | i3en.3xlarge | i3en.6xlarge | i3en.large | i3en.metal | i3en.xlarge | inf1.24xlarge | inf1.2xlarge | inf1.6xlarge | inf1.xlarge | m1.large | m1.medium | m1.small | m1.xlarge | m2.2xlarge | m2.4xlarge | m2.xlarge | m3.2xlarge | m3.large | m3.medium | m3.xlarge | m4.10xlarge | m4.16xlarge | m4.2xlarge | m4.4xlarge | m4.large | m4.xlarge | m5.12xlarge | m5.16xlarge | m5.24xlarge | m5.2xlarge | m5.4xlarge | m5.8xlarge | m5.large | m5.metal | m5.xlarge | m5a.12xlarge | m5a.16xlarge | m5a.24xlarge | m5a.2xlarge | m5a.4xlarge | m5a.8xlarge | m5a.large | m5a.xlarge | m5ad.12xlarge | m5ad.16xlarge | m5ad.24xlarge | m5ad.2xlarge | m5ad.4xlarge | m5ad.8xlarge | m5ad.large | m5ad.xlarge | m5d.12xlarge | m5d.16xlarge | m5d.24xlarge | m5d.2xlarge | m5d.4xlarge | m5d.8xlarge | m5d.large | m5d.metal | m5d.xlarge | m5dn.12xlarge | m5dn.16xlarge | m5dn.24xlarge | m5dn.2xlarge | m5dn.4xlarge | m5dn.8xlarge | m5dn.large | m5dn.xlarge | m5n.12xlarge | m5n.16xlarge | m5n.24xlarge | m5n.2xlarge | m5n.4xlarge | m5n.8xlarge | m5n.large | m5n.xlarge | m6g.12xlarge | m6g.16xlarge | m6g.2xlarge | m6g.4xlarge | m6g.8xlarge | m6g.large | m6g.medium | m6g.metal | m6g.xlarge | p2.16xlarge | p2.8xlarge | p2.xlarge | p3.16xlarge | p3.2xlarge | p3.8xlarge | p3dn.24xlarge | r3.2xlarge | r3.4xlarge | r3.8xlarge | r3.large | r3.xlarge | r4.16xlarge | r4.2xlarge | r4.4xlarge | r4.8xlarge | r4.large | r4.xlarge | r5.12xlarge | r5.16xlarge | r5.24xlarge | r5.2xlarge | r5.4xlarge | r5.8xlarge | r5.large | r5.metal | r5.xlarge | r5a.12xlarge | r5a.16xlarge | r5a.24xlarge | r5a.2xlarge | r5a.4xlarge | r5a.8xlarge | r5a.large | r5a.xlarge | r5ad.12xlarge | r5ad.16xlarge | r5ad.24xlarge | r5ad.2xlarge | r5ad.4xlarge | r5ad.8xlarge | r5ad.large | r5ad.xlarge | r5d.12xlarge | r5d.16xlarge | r5d.24xlarge | r5d.2xlarge | r5d.4xlarge | r5d.8xlarge | r5d.large | r5d.metal | r5d.xlarge | r5dn.12xlarge | r5dn.16xlarge | r5dn.24xlarge | r5dn.2xlarge | r5dn.4xlarge | r5dn.8xlarge | r5dn.large | r5dn.xlarge | r5n.12xlarge | r5n.16xlarge | r5n.24xlarge | r5n.2xlarge | r5n.4xlarge | r5n.8xlarge | r5n.large | r5n.xlarge | r6g.12xlarge | r6g.16xlarge | r6g.2xlarge | r6g.4xlarge | r6g.8xlarge | r6g.large | r6g.medium | r6g.metal | r6g.xlarge | t1.micro | t2.2xlarge | t2.large | t2.medium | t2.micro | t2.nano | t2.small | t2.xlarge | t3.2xlarge | t3.large | t3.medium | t3.micro | t3.nano | t3.small | t3.xlarge | t3a.2xlarge | t3a.large | t3a.medium | t3a.micro | t3a.nano | t3a.small | t3a.xlarge | u-12tb1.metal | u-18tb1.metal | u-24tb1.metal | u-6tb1.metal | u-9tb1.metal | x1.16xlarge | x1.32xlarge | x1e.16xlarge | x1e.2xlarge | x1e.32xlarge | x1e.4xlarge | x1e.8xlarge | x1e.xlarge | z1d.12xlarge | z1d.2xlarge | z1d.3xlarge | z1d.6xlarge | z1d.large | z1d.metal | z1d.xlarge",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.EbsOptimized": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.Placement": {
            "Required": "No",
            "Type": "SpotPlacement",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.IamInstanceProfile": {
            "Required": "No",
            "Type": "IamInstanceProfileSpecification",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.NetworkInterfaces": {
            "Required": "No",
            "Type": [
                "InstanceNetworkInterfaceSpecification"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.UserData": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.ImageId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.Monitoring": {
            "Required": "No",
            "Type": "SpotFleetMonitoring",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.KernelId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.SpotPrice": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.BlockDeviceMappings": {
            "Required": "No",
            "Type": [
                "BlockDeviceMapping"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.WeightedCapacity": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.KeyName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.SubnetId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.TagSpecifications": {
            "Required": "No",
            "Type": [
                "SpotFleetTagSpecification"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.SecurityGroups": {
            "Required": "No",
            "Type": [
                "GroupIdentifier"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.RamdiskId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "guardduty.filter.findingcriteria.Criterion": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "guardduty.filter.findingcriteria.ItemType": {
            "Required": "No",
            "Type": "Condition",
            "UpdateRequires": "No interruption"
        },
        "elasticache.subnetgroup.Description": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticache.subnetgroup.CacheSubnetGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticache.subnetgroup.SubnetIds": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.bucketencryption.ServerSideEncryptionConfiguration": {
            "Required": "Yes",
            "Type": [
                "ServerSideEncryptionRule"
            ],
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.RecordFormat": {
            "Required": "Yes",
            "Type": "RecordFormat",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.RecordEncoding": {
            "Pattern": "UTF-8",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.RecordColumns": {
            "Required": "Yes",
            "Type": [
                "RecordColumn"
            ],
            "Maximum": "1000",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.videoselectorprogramid.ProgramId": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualservice.virtualnodeserviceprovider.VirtualNodeName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.processingconfiguration.Enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "kinesisfirehose.deliverystream.processingconfiguration.Processors": {
            "Required": "No",
            "Type": [
                "Processor"
            ],
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.applicationcodeconfiguration.CodeContent": {
            "Required": "Yes",
            "Type": "CodeContent",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.applicationcodeconfiguration.CodeContentType": {
            "Allowed values": "PLAINTEXT | ZIPFILE",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.s3destinationconfiguration.RoleArn": {
            "Minimum": "20",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "iotanalytics.dataset.s3destinationconfiguration.Key": {
            "Pattern": "^[a-zA-Z0-9!_.*'()/{}:-]*$",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "iotanalytics.dataset.s3destinationconfiguration.GlueConfiguration": {
            "Required": "No",
            "Type": "GlueConfiguration",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.s3destinationconfiguration.Bucket": {
            "Pattern": "^[a-zA-Z0-9.\\-_]*$",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...255",
            "CompliantValues": "3...255"
        },
        "appmesh.route.httptimeout.PerRequest": {
            "Required": "No",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.httptimeout.Idle": {
            "Required": "No",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.ulimit.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.ulimit.HardLimit": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "batch.jobdefinition.ulimit.SoftLimit": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.TargetValue": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.PredefinedMetricSpecification": {
            "Required": "No",
            "Type": "PredefinedMetricSpecification",
            "UpdateRequires": "No interruption"
        },
        "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.DisableScaleIn": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.CustomizedMetricSpecification": {
            "Required": "No",
            "Type": "CustomizedMetricSpecification",
            "UpdateRequires": "No interruption"
        },
        "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.ScaleOutCooldown": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.ScaleInCooldown": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "servicecatalog.cloudformationproduct.provisioningartifactproperties.Name": {
            "Required": "No",
            "Type": "String",
            "Maximum": "8192",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "servicecatalog.cloudformationproduct.provisioningartifactproperties.DisableTemplateValidation": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "servicecatalog.cloudformationproduct.provisioningartifactproperties.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "8192",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "servicecatalog.cloudformationproduct.provisioningartifactproperties.Info": {
            "Required": "Yes",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "apigateway.deployment.deploymentcanarysettings.PercentTraffic": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "Replacement",
            "SampleValue": "123.45"
        },
        "apigateway.deployment.deploymentcanarysettings.StageVariableOverrides": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "Replacement"
        },
        "apigateway.deployment.deploymentcanarysettings.UseStageCache": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cognito.userpool.deviceconfiguration.ChallengeRequiredOnNewDevice": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cognito.userpool.deviceconfiguration.DeviceOnlyRememberedOnUserPrompt": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "autoscaling.autoscalinggroup.launchtemplate.Overrides": {
            "Required": "No",
            "Type": [
                "LaunchTemplateOverrides"
            ],
            "UpdateRequires": "No interruption"
        },
        "autoscaling.autoscalinggroup.launchtemplate.LaunchTemplateSpecification": {
            "Required": "Yes",
            "Type": "LaunchTemplateSpecification",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.sqlimatchstatement.FieldToMatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.sqlimatchstatement.TextTransformations": {
            "Required": "Yes",
            "Type": [
                "TextTransformation"
            ],
            "UpdateRequires": "No interruption"
        },
        "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.Payload": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.ClientContext": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "8000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...8000",
            "CompliantValues": "1...8000"
        },
        "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.Qualifier": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "appsync.resolver.pipelineconfig.Functions": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.app.environment.Secure": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "opsworks.app.environment.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.app.environment.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.connectordefinition.connectordefinitionversion.Connectors": {
            "Required": "Yes",
            "Type": [
                "Connector"
            ],
            "UpdateRequires": "Replacement"
        },
        "pinpointemail.configurationset.sendingoptions.SendingEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "dlm.lifecyclepolicy.crossregioncopyretainrule.IntervalUnit": {
            "Allowed values": "DAYS | MONTHS | WEEKS | YEARS",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dlm.lifecyclepolicy.crossregioncopyretainrule.Interval": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cognito.userpool.recoveryoption.Priority": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "2",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2",
            "CompliantValues": "1...2"
        },
        "cognito.userpool.recoveryoption.Name": {
            "Allowed values": "admin_only | verified_email | verified_phone_number",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.autoscalinggroup.launchtemplatespecification.LaunchTemplateName": {
            "Pattern": "[a-zA-Z0-9\\(\\)\\.-/_]+",
            "Required": "Conditional",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...128",
            "CompliantValues": "3...128"
        },
        "autoscaling.autoscalinggroup.launchtemplatespecification.Version": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "autoscaling.autoscalinggroup.launchtemplatespecification.LaunchTemplateId": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Conditional",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "iot.topicrule.assetpropertytimestamp.TimeInSeconds": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.assetpropertytimestamp.OffsetInNanos": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpool.policies.PasswordPolicy": {
            "Required": "No",
            "Type": "PasswordPolicy",
            "UpdateRequires": "No interruption"
        },
        "waf.ipset.ipsetdescriptors.Type": {
            "Allowed values": "IPV4 | IPV6",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waf.ipset.ipsetdescriptors.Value": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "50",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...50",
            "CompliantValues": "1...50"
        },
        "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.LaunchTemplateId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.LaunchTemplateName": {
            "Pattern": "[a-zA-Z0-9\\(\\)\\.\\-/_]+",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...128",
            "CompliantValues": "3...128"
        },
        "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.Version": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.environment.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.environment.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "codestarnotifications.notificationrule.target.TargetType": {
            "Pattern": "^[A-Za-z]+$",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codestarnotifications.notificationrule.target.TargetAddress": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "320",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...320",
            "CompliantValues": "1...320"
        },
        "wafv2.webacl.overrideaction.Count": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.webacl.overrideaction.None": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "efs.accesspoint.posixuser.Uid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "efs.accesspoint.posixuser.SecondaryGids": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "16",
            "UpdateRequires": "Replacement"
        },
        "efs.accesspoint.posixuser.Gid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ebs.volume.Encrypted": {
            "Required": "No",
            "UpdateRequires": "Updates are not supported\\.",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.ebs.volume.Tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.ebs.volume.OutpostArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.ebs.volume.VolumeType": {
            "Allowed values": "gp2 | io1 | sc1 | st1 | standard",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.ebs.volume.AvailabilityZone": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Updates are not supported\\.",
            "SampleValue": "example-string"
        },
        "ec2.ebs.volume.Iops": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.ebs.volume.SnapshotId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Updates are not supported\\.",
            "SampleValue": "example-string"
        },
        "ec2.ebs.volume.AutoEnableIO": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.ebs.volume.KmsKeyId": {
            "Required": "No",
            "UpdateRequires": "Updates are not supported\\."
        },
        "ec2.ebs.volume.Size": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.ebs.volume.MultiAttachEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.ec2fleet.fleetlaunchtemplateconfigrequest.LaunchTemplateSpecification": {
            "Required": "No",
            "Type": "FleetLaunchTemplateSpecificationRequest",
            "UpdateRequires": "Replacement"
        },
        "ec2.ec2fleet.fleetlaunchtemplateconfigrequest.Overrides": {
            "Required": "No",
            "Type": [
                "FleetLaunchTemplateOverridesRequest"
            ],
            "Maximum": "50",
            "UpdateRequires": "Replacement"
        },
        "emr.ebsconfiguration.ebsblockdeviceconfig.VolumesPerInstance": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "emr.ebsconfiguration.ebsblockdeviceconfig.VolumeSpecification": {
            "Required": "Yes",
            "Type": "VolumeSpecification",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.ratebasedstatementtwo.AggregateKeyType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.ratebasedstatementtwo.ScopeDownStatement": {
            "Required": "No",
            "Type": "StatementThree",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.ratebasedstatementtwo.Limit": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualnode.listener.TLS": {
            "Required": "No",
            "Type": "ListenerTls",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.listener.PortMapping": {
            "Required": "Yes",
            "Type": "PortMapping",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.listener.HealthCheck": {
            "Required": "No",
            "Type": "HealthCheck",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.listener.Timeout": {
            "Required": "No",
            "Type": "ListenerTimeout",
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.deployment.revision.s3location.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.deployment.revision.s3location.BundleType": {
            "Allowed values": "JSON | tar | tgz | YAML | zip",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.deployment.revision.s3location.Version": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.deployment.revision.s3location.Bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.deployment.revision.s3location.ETag": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "eks.cluster.provider.KeyArn": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ssm.association.instanceassociationoutputlocation.S3Location": {
            "Required": "No",
            "Type": "S3OutputLocation",
            "UpdateRequires": "No interruption"
        },
        "batch.jobqueue.computeenvironmentorder.ComputeEnvironment": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobqueue.computeenvironmentorder.Order": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "budgets.budget.timeperiod.Start": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "budgets.budget.timeperiod.End": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.checkpointconfiguration.MinPauseBetweenCheckpoints": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisanalyticsv2.application.checkpointconfiguration.CheckpointingEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "kinesisanalyticsv2.application.checkpointconfiguration.CheckpointInterval": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisanalyticsv2.application.checkpointconfiguration.ConfigurationType": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskset.networkconfiguration.AwsVpcConfiguration": {
            "Required": "No",
            "Type": "AwsVpcConfiguration",
            "UpdateRequires": "Replacement"
        },
        "autoscalingplans.scalingplan.customizedloadmetricspecification.Dimensions": {
            "Required": "No",
            "Type": [
                "MetricDimension"
            ],
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.customizedloadmetricspecification.Namespace": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.customizedloadmetricspecification.Statistic": {
            "Type": "String",
            "Required": "Yes",
            "Allowed Values": "Sum",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "Sum"
            ],
            "SampleValue": "Sum",
            "CompliantValues": [
                "Sum"
            ]
        },
        "autoscalingplans.scalingplan.customizedloadmetricspecification.MetricName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.customizedloadmetricspecification.Unit": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.setdimension.Values": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.setdimension.DimensionType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.mountpoints.ContainerPath": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.mountpoints.ReadOnly": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "batch.jobdefinition.mountpoints.SourceVolume": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.health.check.HealthyThreshold": {
            "Minimum": "2",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "10",
            "UpdateRequires": "No interruption",
            "AllowedValues": "2...10",
            "CompliantValues": "2...10"
        },
        "ec2.elb.health.check.Target": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.health.check.Timeout": {
            "Minimum": "2",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "60",
            "UpdateRequires": "No interruption",
            "AllowedValues": "2...60",
            "CompliantValues": "2...60"
        },
        "ec2.elb.health.check.Interval": {
            "Minimum": "5",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "300",
            "UpdateRequires": "No interruption",
            "AllowedValues": "5...300",
            "CompliantValues": "5...300"
        },
        "ec2.elb.health.check.UnhealthyThreshold": {
            "Minimum": "2",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "10",
            "UpdateRequires": "No interruption",
            "AllowedValues": "2...10",
            "CompliantValues": "2...10"
        },
        "cognito.userpooluser.attributetype.Name": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
            "Required": "No",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "cognito.userpooluser.attributetype.Value": {
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.triggeringdataset.DatasetName": {
            "Pattern": "^[a-zA-Z0-9_]+$",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "dynamodb.keyschema.KeyType": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "dynamodb.keyschema.AttributeName": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "ec2.launchtemplate.launchtemplatedata.creditspecification.CpuCredits": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.ruleaction.Block": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.webacl.ruleaction.Allow": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.webacl.ruleaction.Count": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "greengrass.devicedefinition.device.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.devicedefinition.device.SyncShadow": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "greengrass.devicedefinition.device.ThingArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.devicedefinition.device.CertificateArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticsearch.domain.logpublishingoption.Enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticsearch.domain.logpublishingoption.CloudWatchLogsLogGroupArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.healthcheck.healthchecktag.Value": {
            "Required": "Yes",
            "Value`  <a name=\"cfn-route53-healthchecktags-value\"></a>\nThe value of `Value` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Value` is the value that you want to give the new tag\\.\n+  **Edit a tag*",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.healthcheck.healthchecktag.Key": {
            "Required": "Yes",
            "Key`  <a name=\"cfn-route53-healthchecktags-key\"></a>\nThe value of `Key` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Key` is the name that you want to give the new tag\\.\n+  **Edit a tag*",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.mltransform.inputrecordtables.GlueTables": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationreferencedatasource.csvmappingparameters.RecordColumnDelimiter": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.applicationreferencedatasource.csvmappingparameters.RecordRowDelimiter": {
            "Minimum": "1",
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.sqsaction.QueueUrl": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.sqsaction.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.sqsaction.UseBase64": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition.StorageClass": {
            "Allowed values": "DEEP_ARCHIVE | GLACIER | INTELLIGENT_TIERING | ONEZONE_IA | STANDARD_IA",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition.TransitionInDays": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "ec2.networkaclentry.icmp.Code": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.networkaclentry.icmp.Type": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cognito.userpool.admincreateuserconfig.UnusedAccountValidityDays": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "365",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...365",
            "CompliantValues": "0...365"
        },
        "cognito.userpool.admincreateuserconfig.InviteMessageTemplate": {
            "Required": "No",
            "Type": "InviteMessageTemplate",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpool.admincreateuserconfig.AllowAdminCreateUserOnly": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "logs.metricfilter.metrictransformation.MetricNamespace": {
            "Pattern": "[^:*$]*",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "logs.metricfilter.metrictransformation.MetricValue": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "logs.metricfilter.metrictransformation.MetricName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "logs.metricfilter.metrictransformation.DefaultValue": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "kinesisanalyticsv2.application.kinesisfirehoseinput.ResourceARN": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "iotevents.detectormodel.cleartimer.TimerName": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "appmesh.virtualnode.listenertlsacmcertificate.CertificateArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.segment.segmentgroups.groups.Dimensions": {
            "Required": "No",
            "Type": [
                "SegmentDimensions"
            ],
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentgroups.groups.SourceSegments": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentgroups.groups.SourceType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.segment.segmentgroups.groups.Type": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.service.placementstrategy.Type": {
            "Allowed values": "binpack | random | spread",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.service.placementstrategy.Field": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "groundstation.config.uplinkechoconfig.AntennaUplinkConfigArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.config.uplinkechoconfig.Enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "autoscalingplans.scalingplan.predefinedloadmetricspecification.PredefinedLoadMetricType": {
            "Allowed values": "ALBTargetGroupRequestCount | ASGTotalCPUUtilization | ASGTotalNetworkIn | ASGTotalNetworkOut",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.predefinedloadmetricspecification.ResourceLabel": {
            "Minimum": "1",
            "Required": "Conditional",
            "Type": "String",
            "Maximum": "1023",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1023",
            "CompliantValues": "1...1023"
        },
        "greengrass.resourcedefinitionversion.resourcedownloadownersetting.GroupPermission": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.resourcedownloadownersetting.GroupOwner": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "medialive.channel.audioselectorsettings.AudioPidSelection": {
            "Required": "No",
            "Type": "AudioPidSelection",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.audioselectorsettings.AudioLanguageSelection": {
            "Required": "No",
            "Type": "AudioLanguageSelection",
            "UpdateRequires": "No interruption"
        },
        "codepipeline.webhook.webhookfilterrule.MatchEquals": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "150",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...150",
            "CompliantValues": "1...150"
        },
        "codepipeline.webhook.webhookfilterrule.JsonPath": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "150",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...150",
            "CompliantValues": "1...150"
        },
        "backup.backupplan.lifecycleresourcetype.MoveToColdStorageAfterDays": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "backup.backupplan.lifecycleresourcetype.DeleteAfterDays": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "kinesisfirehose.deliverystream.kmsencryptionconfig.AWSKMSKeyARN": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "kinesisanalytics.application.csvmappingparameters.RecordColumnDelimiter": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.application.csvmappingparameters.RecordRowDelimiter": {
            "Minimum": "1",
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationrulefilter.TagFilter": {
            "Required": "No",
            "Type": "TagFilter",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationrulefilter.And": {
            "Required": "No",
            "Type": "ReplicationRuleAndOperator",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationrulefilter.Prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "managedblockchain.member.memberfabricconfiguration.AdminPassword": {
            "Pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?!.*[@'\\\\\"/])[a-zA-Z0-9\\S]*$",
            "Required": "Yes",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "Minimum": "8",
            "Type": "String",
            "AllowedValues": "8...32",
            "CompliantValues": "8...32"
        },
        "managedblockchain.member.memberfabricconfiguration.AdminUsername": {
            "Pattern": "^[a-zA-Z][a-zA-Z0-9]*$",
            "Required": "Yes",
            "Maximum": "16",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...16",
            "CompliantValues": "1...16"
        },
        "elasticsearch.domain.snapshotoptions.AutomatedSnapshotStartHour": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "batch.jobdefinition.timeout.AttemptDurationSeconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.webacl.regexpatternsetreferencestatement.Arn": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "wafv2.webacl.regexpatternsetreferencestatement.FieldToMatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.regexpatternsetreferencestatement.TextTransformations": {
            "Required": "Yes",
            "Type": [
                "TextTransformation"
            ],
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationreferencedatasource.recordformat.MappingParameters": {
            "Required": "No",
            "Type": "MappingParameters",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationreferencedatasource.recordformat.RecordFormatType": {
            "Allowed values": "CSV | JSON",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.sizeconstraintstatement.FieldToMatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.sizeconstraintstatement.TextTransformations": {
            "Required": "Yes",
            "Type": [
                "TextTransformation"
            ],
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.sizeconstraintstatement.Size": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.webacl.sizeconstraintstatement.ComparisonOperator": {
            "Allowed values": "EQ | GE | GT | LE | LT | NE",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.clientvpnendpoint.connectionlogoptions.CloudwatchLogStream": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.clientvpnendpoint.connectionlogoptions.CloudwatchLogGroup": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.clientvpnendpoint.connectionlogoptions.Enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "kinesisfirehose.deliverystream.vpcconfiguration.SubnetIds": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "kinesisfirehose.deliverystream.vpcconfiguration.RoleARN": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.vpcconfiguration.SecurityGroupIds": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "iotanalytics.pipeline.deviceshadowenrich.RoleArn": {
            "Minimum": "20",
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "iotanalytics.pipeline.deviceshadowenrich.Name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.deviceshadowenrich.Next": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.deviceshadowenrich.ThingName": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "iotanalytics.pipeline.deviceshadowenrich.Attribute": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "iotevents.detectormodel.iotsitewise.PropertyValue": {
            "Required": "No",
            "Type": "AssetPropertyValue",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.iotsitewise.PropertyAlias": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.iotsitewise.AssetId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.iotsitewise.PropertyId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.iotsitewise.EntryId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancefleetconfig.instancetypeconfig.InstanceType": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "elasticmapreduce.instancefleetconfig.instancetypeconfig.BidPrice": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.instancefleetconfig.instancetypeconfig.WeightedCapacity": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "elasticmapreduce.instancefleetconfig.instancetypeconfig.EbsConfiguration": {
            "Required": "No",
            "Type": "EbsConfiguration",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.instancefleetconfig.instancetypeconfig.BidPriceAsPercentageOfOnDemandPrice": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "Replacement",
            "SampleValue": "123.45"
        },
        "elasticmapreduce.instancefleetconfig.instancetypeconfig.Configurations": {
            "Required": "No",
            "Type": [
                "Configuration"
            ],
            "UpdateRequires": "Replacement"
        },
        "wafv2.webacl.texttransformations.texttransformations": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-webacl-texttransformations-properties": {
            "TextTransformations": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2.spotfleet.launchtemplateoverrides.WeightedCapacity": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "ec2.spotfleet.launchtemplateoverrides.AvailabilityZone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.launchtemplateoverrides.SubnetId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.launchtemplateoverrides.InstanceType": {
            "Allowed values": "a1.2xlarge | a1.4xlarge | a1.large | a1.medium | a1.metal | a1.xlarge | c1.medium | c1.xlarge | c3.2xlarge | c3.4xlarge | c3.8xlarge | c3.large | c3.xlarge | c4.2xlarge | c4.4xlarge | c4.8xlarge | c4.large | c4.xlarge | c5.12xlarge | c5.18xlarge | c5.24xlarge | c5.2xlarge | c5.4xlarge | c5.9xlarge | c5.large | c5.metal | c5.xlarge | c5a.12xlarge | c5a.16xlarge | c5a.24xlarge | c5a.2xlarge | c5a.4xlarge | c5a.8xlarge | c5a.large | c5a.xlarge | c5d.12xlarge | c5d.18xlarge | c5d.24xlarge | c5d.2xlarge | c5d.4xlarge | c5d.9xlarge | c5d.large | c5d.metal | c5d.xlarge | c5n.18xlarge | c5n.2xlarge | c5n.4xlarge | c5n.9xlarge | c5n.large | c5n.xlarge | c6g.12xlarge | c6g.16xlarge | c6g.2xlarge | c6g.4xlarge | c6g.8xlarge | c6g.large | c6g.medium | c6g.metal | c6g.xlarge | cc1.4xlarge | cc2.8xlarge | cg1.4xlarge | cr1.8xlarge | d2.2xlarge | d2.4xlarge | d2.8xlarge | d2.xlarge | f1.16xlarge | f1.2xlarge | f1.4xlarge | g2.2xlarge | g2.8xlarge | g3.16xlarge | g3.4xlarge | g3.8xlarge | g3s.xlarge | g4dn.12xlarge | g4dn.16xlarge | g4dn.2xlarge | g4dn.4xlarge | g4dn.8xlarge | g4dn.metal | g4dn.xlarge | h1.16xlarge | h1.2xlarge | h1.4xlarge | h1.8xlarge | hi1.4xlarge | hs1.8xlarge | i2.2xlarge | i2.4xlarge | i2.8xlarge | i2.xlarge | i3.16xlarge | i3.2xlarge | i3.4xlarge | i3.8xlarge | i3.large | i3.metal | i3.xlarge | i3en.12xlarge | i3en.24xlarge | i3en.2xlarge | i3en.3xlarge | i3en.6xlarge | i3en.large | i3en.metal | i3en.xlarge | inf1.24xlarge | inf1.2xlarge | inf1.6xlarge | inf1.xlarge | m1.large | m1.medium | m1.small | m1.xlarge | m2.2xlarge | m2.4xlarge | m2.xlarge | m3.2xlarge | m3.large | m3.medium | m3.xlarge | m4.10xlarge | m4.16xlarge | m4.2xlarge | m4.4xlarge | m4.large | m4.xlarge | m5.12xlarge | m5.16xlarge | m5.24xlarge | m5.2xlarge | m5.4xlarge | m5.8xlarge | m5.large | m5.metal | m5.xlarge | m5a.12xlarge | m5a.16xlarge | m5a.24xlarge | m5a.2xlarge | m5a.4xlarge | m5a.8xlarge | m5a.large | m5a.xlarge | m5ad.12xlarge | m5ad.16xlarge | m5ad.24xlarge | m5ad.2xlarge | m5ad.4xlarge | m5ad.8xlarge | m5ad.large | m5ad.xlarge | m5d.12xlarge | m5d.16xlarge | m5d.24xlarge | m5d.2xlarge | m5d.4xlarge | m5d.8xlarge | m5d.large | m5d.metal | m5d.xlarge | m5dn.12xlarge | m5dn.16xlarge | m5dn.24xlarge | m5dn.2xlarge | m5dn.4xlarge | m5dn.8xlarge | m5dn.large | m5dn.xlarge | m5n.12xlarge | m5n.16xlarge | m5n.24xlarge | m5n.2xlarge | m5n.4xlarge | m5n.8xlarge | m5n.large | m5n.xlarge | m6g.12xlarge | m6g.16xlarge | m6g.2xlarge | m6g.4xlarge | m6g.8xlarge | m6g.large | m6g.medium | m6g.metal | m6g.xlarge | p2.16xlarge | p2.8xlarge | p2.xlarge | p3.16xlarge | p3.2xlarge | p3.8xlarge | p3dn.24xlarge | r3.2xlarge | r3.4xlarge | r3.8xlarge | r3.large | r3.xlarge | r4.16xlarge | r4.2xlarge | r4.4xlarge | r4.8xlarge | r4.large | r4.xlarge | r5.12xlarge | r5.16xlarge | r5.24xlarge | r5.2xlarge | r5.4xlarge | r5.8xlarge | r5.large | r5.metal | r5.xlarge | r5a.12xlarge | r5a.16xlarge | r5a.24xlarge | r5a.2xlarge | r5a.4xlarge | r5a.8xlarge | r5a.large | r5a.xlarge | r5ad.12xlarge | r5ad.16xlarge | r5ad.24xlarge | r5ad.2xlarge | r5ad.4xlarge | r5ad.8xlarge | r5ad.large | r5ad.xlarge | r5d.12xlarge | r5d.16xlarge | r5d.24xlarge | r5d.2xlarge | r5d.4xlarge | r5d.8xlarge | r5d.large | r5d.metal | r5d.xlarge | r5dn.12xlarge | r5dn.16xlarge | r5dn.24xlarge | r5dn.2xlarge | r5dn.4xlarge | r5dn.8xlarge | r5dn.large | r5dn.xlarge | r5n.12xlarge | r5n.16xlarge | r5n.24xlarge | r5n.2xlarge | r5n.4xlarge | r5n.8xlarge | r5n.large | r5n.xlarge | r6g.12xlarge | r6g.16xlarge | r6g.2xlarge | r6g.4xlarge | r6g.8xlarge | r6g.large | r6g.medium | r6g.metal | r6g.xlarge | t1.micro | t2.2xlarge | t2.large | t2.medium | t2.micro | t2.nano | t2.small | t2.xlarge | t3.2xlarge | t3.large | t3.medium | t3.micro | t3.nano | t3.small | t3.xlarge | t3a.2xlarge | t3a.large | t3a.medium | t3a.micro | t3a.nano | t3a.small | t3a.xlarge | u-12tb1.metal | u-18tb1.metal | u-24tb1.metal | u-6tb1.metal | u-9tb1.metal | x1.16xlarge | x1.32xlarge | x1e.16xlarge | x1e.2xlarge | x1e.32xlarge | x1e.4xlarge | x1e.8xlarge | x1e.xlarge | z1d.12xlarge | z1d.2xlarge | z1d.3xlarge | z1d.6xlarge | z1d.large | z1d.metal | z1d.xlarge",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.launchtemplateoverrides.SpotPrice": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.fleet.resourcecreationlimitpolicy.NewGameSessionsPerCreator": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "gamelift.fleet.resourcecreationlimitpolicy.PolicyPeriodInMinutes": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "dms.endpoint.kinesissettings.MessageFormat": {
            "Allowed values": "json | json-unformatted",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.kinesissettings.StreamArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.kinesissettings.ServiceAccessRoleArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.resolver.cachingconfig.CachingKeys": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "appsync.resolver.cachingconfig.Ttl": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "ecs.service.placementconstraint.Type": {
            "Allowed values": "distinctInstance | memberOf",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.service.placementconstraint.Expression": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "batch.computeenvironment.launchtemplatespecification.Version": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "batch.computeenvironment.launchtemplatespecification.LaunchTemplateName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "batch.computeenvironment.launchtemplatespecification.LaunchTemplateId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalabletarget.suspendedstate.DynamicScalingInSuspended": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "applicationautoscaling.scalabletarget.suspendedstate.ScheduledScalingSuspended": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "applicationautoscaling.scalabletarget.suspendedstate.DynamicScalingOutSuspended": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "kinesisanalyticsv2.application.monitoringconfiguration.ConfigurationType": {
            "Allowed values": "CUSTOM | DEFAULT",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.monitoringconfiguration.LogLevel": {
            "Allowed values": "DEBUG | ERROR | INFO | WARN",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.monitoringconfiguration.MetricsLevel": {
            "Allowed values": "APPLICATION | OPERATOR | PARALLELISM | TASK",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.elasticsearchretryoptions.DurationInSeconds": {
            "Minimum": "0",
            "Required": "No",
            "Maximum": "7200",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...7200",
            "CompliantValues": "0...7200"
        },
        "iotevents.detectormodel.state.OnEnter": {
            "Required": "No",
            "Type": "OnEnter",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.state.OnExit": {
            "Required": "No",
            "Type": "OnExit",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.state.StateName": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotevents.detectormodel.state.OnInput": {
            "Required": "No",
            "Type": "OnInput",
            "UpdateRequires": "No interruption"
        },
        "s3.accesspoint.vpcconfiguration.VpcId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "dms.endpoint.neptunesettings.ErrorRetryDuration": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "dms.endpoint.neptunesettings.MaxFileSize": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "dms.endpoint.neptunesettings.IamAuthEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "dms.endpoint.neptunesettings.ServiceAccessRoleArn": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "dms.endpoint.neptunesettings.S3BucketFolder": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.neptunesettings.S3BucketName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.neptunesettings.MaxRetryCount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.webacl.orstatementone.Statements": {
            "Required": "Yes",
            "Type": [
                "StatementTwo"
            ],
            "UpdateRequires": "No interruption"
        },
        "config.organizationconformancepack.conformancepackinputparameter.ParameterName": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...255",
            "CompliantValues": "0...255"
        },
        "config.organizationconformancepack.conformancepackinputparameter.ParameterValue": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...255",
            "CompliantValues": "0...255"
        },
        "iotanalytics.dataset.trigger.Schedule": {
            "Required": "No",
            "Type": "Schedule",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.trigger.TriggeringDataset": {
            "Required": "No",
            "Type": "TriggeringDataset",
            "UpdateRequires": "No interruption"
        },
        "appconfig.application.tags.Key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appconfig.application.tags.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.MetricIntervalLowerBound": {
            "Required": "Conditional",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.ScalingAdjustment": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.MetricIntervalUpperBound": {
            "Required": "Conditional",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "appmesh.virtualnode.portmapping.Protocol": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.portmapping.Port": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "emr.ebsconfiguration.EbsOptimized": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "emr.ebsconfiguration.EbsBlockDeviceConfigs": {
            "Required": "No",
            "Type": [
                "EbsBlockDeviceConfig"
            ],
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.schedule.quiettime.End": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.schedule.quiettime.Start": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.firehoseaction.Separator": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.firehoseaction.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.firehoseaction.DeliveryStreamName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.jsonmappingparameters.RecordRowPath": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.apikey.stagekey.RestApiId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.apikey.stagekey.StageName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypool.pushsync.ApplicationArns": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cognito.identitypool.pushsync.RoleArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "eventschemas.discoverer.tagsentry.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "eventschemas.discoverer.tagsentry.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.clientvpnendpoint.certificateauthenticationrequest.ClientRootCertificateChainArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.dynamodbconfig.AwsRegion": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.dynamodbconfig.TableName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.dynamodbconfig.Versioned": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "appsync.datasource.dynamodbconfig.DeltaSyncConfig": {
            "Required": "No",
            "Type": "DeltaSyncConfig",
            "UpdateRequires": "No interruption"
        },
        "appsync.datasource.dynamodbconfig.UseCallerCredentials": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "autoscaling.autoscalinggroup.launchtemplateoverrides.InstanceType": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "autoscaling.autoscalinggroup.launchtemplateoverrides.WeightedCapacity": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.tlsvalidationcontextfiletrust.CertificateChain": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.config.eirp.Units": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.config.eirp.Value": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "ec2.launchtemplate.launchtemplateelasticinferenceaccelerator.Count": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.launchtemplate.launchtemplateelasticinferenceaccelerator.Type": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "config.deliverychannel.configsnapshotdeliveryproperties.DeliveryFrequency": {
            "Allowed values": "One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.fileaccesslog.Path": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.certificates.CertificateArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticbeanstalk.configurationtemplate.sourceconfiguration.ApplicationName": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "elasticbeanstalk.configurationtemplate.sourceconfiguration.TemplateName": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "appmesh.virtualnode.duration.Unit": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.duration.Value": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.webacl.excludedrule.Name": {
            "Pattern": "^[\\w\\-]+$",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "elasticloadbalancingv2.listenerrule.pathpatternconfig.Values": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origin.DomainName": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origin.ConnectionAttempts": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origin.CustomOriginConfig": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origin.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.origin.OriginCustomHeaders": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origin.OriginPath": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origin.S3OriginConfig": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origin.ConnectionTimeout": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.lambdaaction.TopicArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.lambdaaction.InvocationType": {
            "Allowed values": "Event | RequestResponse",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.lambdaaction.FunctionArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.reportgroup.s3reportexportconfig.EncryptionKey": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.reportgroup.s3reportexportconfig.Path": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.reportgroup.s3reportexportconfig.Bucket": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.reportgroup.s3reportexportconfig.Packaging": {
            "Allowed values": "NONE | ZIP",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.reportgroup.s3reportexportconfig.EncryptionDisabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "imagebuilder.imagerecipe.instanceblockdevicemapping.NoDevice:\"\"": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "imagebuilder.imagerecipe.instanceblockdevicemapping.DeviceName": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "imagebuilder.imagerecipe.instanceblockdevicemapping.NoDevice": {},
        "imagebuilder.imagerecipe.instanceblockdevicemapping.Ebs": {
            "Required": "No",
            "Type": "EbsInstanceBlockDeviceSpecification",
            "UpdateRequires": "Replacement"
        },
        "imagebuilder.imagerecipe.instanceblockdevicemapping.VirtualName": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "greengrass.resourcedefinitionversion.localvolumeresourcedata.DestinationPath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.localvolumeresourcedata.GroupOwnerSetting": {
            "Required": "No",
            "Type": "GroupOwnerSetting",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinitionversion.localvolumeresourcedata.SourcePath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.bootstrapactionconfig.Name": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.bootstrapactionconfig.ScriptBootstrapAction": {
            "Required": "Yes",
            "Type": "ScriptBootstrapActionConfig",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification.CapacityReservationTarget": {
            "Required": "No",
            "Type": "CapacityReservationTarget",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification.CapacityReservationPreference": {
            "Allowed values": "none | open",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.step.hadoopjarstepconfig.Args": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.step.hadoopjarstepconfig.MainClass": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "10280",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10280",
            "CompliantValues": "0...10280"
        },
        "elasticmapreduce.step.hadoopjarstepconfig.StepProperties": {
            "Required": "No",
            "Type": [
                "KeyValue"
            ],
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.step.hadoopjarstepconfig.Jar": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "10280",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10280",
            "CompliantValues": "0...10280"
        },
        "route53.recordset.1.ResourceRecords": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.1.HealthCheckId": {
            "UpdateRequires": "No interruption",
            "Required": "No",
            "Maximum": "64",
            "HealthCheckId`  <a name=\"cfn-route53-recordset-healthcheckid\"></a>\nIf you want Amazon Route 53 to return this resource record set in response to a DNS query only when the status of a health check is healthy, include the `HealthCheckId` element and specify the ID of the applicable health check\\.  \nRoute 53 determines whether a resource record set is healthy based on one of the following:  \n+ By periodically sending a request to the endpoint that is specified in the health check\n+ By aggregating the status of a specified group of health checks \\(calculated health checks\\)\n+ By determining the current state of a CloudWatch alarm \\(CloudWatch metric health checks\\)\nRoute 53 doesn't check the health of the endpoint that is specified in the resource record set, for example, the endpoint specified by the IP address in the `Value` element\\. When you add a `HealthCheckId` element to a resource record set, Route 53 checks the health of the endpoint that you specified in the health check\\. \nFor more information, see the following topics in the *Amazon Route 53 Developer Guide": "+  [How Amazon Route 53 Determines Whether an Endpoint Is Healthy](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html) \n+  [Route 53 Health Checks and DNS Failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html) \n **When to Specify HealthCheckId**   \nSpecifying a value for `HealthCheckId` is useful only when Route 53 is choosing between two or more resource record sets to respond to a DNS query, and you want Route 53 to base the choice in part on the status of a health check\\. Configuring health checks makes sense only in the following configurations:  \n+  **Non\\-alias resource record sets*"
        },
        "route53.recordset.1.SetIdentifier": {
            "Minimum": "1",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "route53.recordset.1.Name": {
            "Required": "Yes",
            "Maximum": "1024",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.1.HostedZoneName": {
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.recordset.1.GeoLocation": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.1.Region": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.1.Comment": {
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.1.AliasTarget": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.1.HostedZoneId": {
            "Required": "No",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.recordset.1.MultiValueAnswer": {
            "UpdateRequires": "No interruption",
            "Required": "No",
            "Type": "Boolean",
            "MultiValueAnswer`  <a name=\"cfn-route53-recordset-multivalueanswer\"></a>\n *Multivalue answer resource record sets only": "To route traffic approximately randomly to multiple resources, such as web servers, create one multivalue answer record for each resource and specify `true` for `MultiValueAnswer`\\. Note the following:  \n+ If you associate a health check with a multivalue answer resource record set, Amazon Route 53 responds to DNS queries with the corresponding IP address only when the health check is healthy\\.\n+ If you don't associate a health check with a multivalue answer record, Route 53 always considers the record to be healthy\\.\n+ Route 53 responds to DNS queries with up to eight healthy records; if you have eight or fewer healthy records, Route 53 responds to all DNS queries with all the healthy records\\.\n+ If you have more than eight healthy records, Route 53 responds to different DNS resolvers with different combinations of healthy records\\.\n+ When all records are unhealthy, Route 53 responds to DNS queries with up to eight unhealthy records\\.\n+ If a resource becomes unavailable after a resolver caches a response, client software typically tries another of the IP addresses in the response\\.\nYou can't create multivalue answer alias records\\.",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "route53.recordset.1.TTL": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.recordset.1.Type": {
            "Type`  <a name=\"cfn-route53-recordset-type\"></a>\nThe DNS record type\\. For information about different record types and how data is encoded for them, see [Supported DNS Resource Record Types](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html) in the *Amazon Route 53 Developer Guide*\\.  \nValid values for basic resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `NS` \\| `PTR` \\| `SOA` \\| `SPF` \\| `SRV` \\| `TXT`   \nValues for weighted, latency, geolocation, and failover resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`\\. When creating a group of weighted, latency, geolocation, or failover resource record sets, specify the same value for all of the resource record sets in the group\\.  \nValid values for multivalue answer resource record sets: `A` \\| `AAAA` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`   \nSPF records were formerly used to verify the identity of the sender of email messages\\. However, we no longer recommend that you create resource record sets for which the value of `Type` is `SPF`\\. RFC 7208, *Sender Policy Framework \\(SPF\\) for Authorizing Use of Domains in Email, Version 1*, has been updated to say, \"\\.\\.\\.\\[I\\]ts existence and mechanism defined in \\[RFC4408\\] have led to some interoperability issues\\. Accordingly, its use is no longer appropriate for SPF version 1; implementations are not to use it\\.\" In RFC 7208, see section 14\\.1, [The SPF DNS Record Type](http://tools.ietf.org/html/rfc7208#section-14.1)\\.\nValues for alias resource record sets:  \n+  **Amazon API Gateway custom regional APIs and edge\\-optimized APIs:** `A` \n+  **CloudFront distributions:** `A` \n\n  If IPv6 is enabled for the distribution, create two resource record sets to route traffic to your distribution, one with a value of `A` and one with a value of `AAAA`\\. \n+  **Amazon API Gateway environment that has a regionalized subdomain*": "A` \n+  **ELB load balancers:** `A` \\| `AAAA` \n+  **Amazon S3 buckets:** `A` \n+  **Amazon Virtual Private Cloud interface VPC endpoints** `A` \n+  **Another resource record set in this hosted zone:** Specify the type of the resource record set that you're creating the alias for\\. All values are supported except `NS` and `SOA`\\.",
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.1.Weight": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.1.Failover": {
            "Type": "String",
            "Required": "No",
            "Failover`  <a name=\"cfn-route53-recordset-failover\"></a>\n *Failover resource record sets only:* To configure failover, you add the `Failover` element to two resource record sets\\. For one resource record set, you specify `PRIMARY` as the value for `Failover`; for the other resource record set, you specify `SECONDARY`\\. In addition, you include the `HealthCheckId` element and specify the health check that you want Amazon Route 53 to perform for each resource record set\\.  \nExcept where noted, the following failover behaviors assume that you have included the `HealthCheckId` element in both resource record sets:  \n+ When the primary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the secondary resource record set\\.\n+ When the primary resource record set is unhealthy and the secondary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the secondary resource record set\\.\n+ When the secondary resource record set is unhealthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the primary resource record set\\.\n+ If you omit the `HealthCheckId` element for the secondary resource record set, and if the primary resource record set is unhealthy, Route 53 always responds to DNS queries with the applicable value from the secondary resource record set\\. This is true regardless of the health of the associated endpoint\\.\nYou can't create non\\-failover resource record sets that have the same values for the `Name` and `Type` elements as failover resource record sets\\.  \nFor failover alias resource record sets, you must also include the `EvaluateTargetHealth` element and set the value to true\\.  \nFor more information about configuring failover for Route 53, see the following topics in the *Amazon Route 53 Developer Guide": "+  [Route 53 Health Checks and DNS Failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html)",
            "UpdateRequires": "No interruption",
            "Allowed values": "PRIMARY | SECONDARY",
            "SampleValue": "example-string"
        },
        "waf.bytematchset.bytematchtuples.fieldtomatch.1.Type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "waf.bytematchset.bytematchtuples.fieldtomatch.1.Data": {
            "Pattern": ".*\\S.*",
            "Required": "Conditional",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "medialive.input.mediaconnectflowrequest.FlowArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.fleet.ec2inboundpermission.FromPort": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "Maximum": "60000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...60000",
            "CompliantValues": "1...60000"
        },
        "gamelift.fleet.ec2inboundpermission.ToPort": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "Maximum": "60000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...60000",
            "CompliantValues": "1...60000"
        },
        "gamelift.fleet.ec2inboundpermission.IpRange": {
            "Pattern": "[^\\s]+",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.fleet.ec2inboundpermission.Protocol": {
            "Allowed values": "TCP | UDP",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.singlequeryargument.name": {
            "Pattern": ".*\\S.*",
            "Required": "No",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "wafv2-rulegroup-singlequeryargument-properties": {
            "Name": {
                "Pattern": ".*\\S.*",
                "Required": "No",
                "Maximum": "64",
                "UpdateRequires": "No interruption",
                "Minimum": "1",
                "Type": "String",
                "AllowedValues": "1...64",
                "CompliantValues": "1...64"
            }
        },
        "wafv2.webacl.defaultaction.Block": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.webacl.defaultaction.Allow": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "iot.topicrule.elasticsearchaction.Index": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.elasticsearchaction.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.elasticsearchaction.Endpoint": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.elasticsearchaction.Type": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.elasticsearchaction.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.rule.batcharrayproperties.Size": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "opsworks.app.sslconfiguration.PrivateKey": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.app.sslconfiguration.Certificate": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.app.sslconfiguration.Chain": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.triggerconfig.TriggerTargetArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.triggerconfig.TriggerEvents": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.triggerconfig.TriggerName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "config.organizationconfigrule.organizationmanagedrulemetadata.TagKeyScope": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "config.organizationconfigrule.organizationmanagedrulemetadata.ResourceIdScope": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "768",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...768",
            "CompliantValues": "1...768"
        },
        "config.organizationconfigrule.organizationmanagedrulemetadata.InputParameters": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "config.organizationconfigrule.organizationmanagedrulemetadata.TagValueScope": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "config.organizationconfigrule.organizationmanagedrulemetadata.Description": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "config.organizationconfigrule.organizationmanagedrulemetadata.MaximumExecutionFrequency": {
            "Allowed values": "One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "config.organizationconfigrule.organizationmanagedrulemetadata.ResourceTypesScope": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "100",
            "UpdateRequires": "No interruption"
        },
        "config.organizationconfigrule.organizationmanagedrulemetadata.RuleIdentifier": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "msk.cluster.jmxexporter.EnabledInBroker": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ses.receiptrule.snsaction.TopicArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.snsaction.Encoding": {
            "Allowed values": "Base64 | UTF-8",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dynamodb.provisionedthroughput.WriteCapacityUnits": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "dynamodb.provisionedthroughput.ReadCapacityUnits": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "config.configurationaggregator.accountaggregationsource.AllAwsRegions": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "config.configurationaggregator.accountaggregationsource.AccountIds": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "config.configurationaggregator.accountaggregationsource.AwsRegions": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.virtualnodespec.BackendDefaults": {
            "Required": "No",
            "Type": "BackendDefaults",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.virtualnodespec.Backends": {
            "Required": "No",
            "Type": [
                "Backend"
            ],
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.virtualnodespec.ServiceDiscovery": {
            "Required": "No",
            "Type": "ServiceDiscovery",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.virtualnodespec.Logging": {
            "Required": "No",
            "Type": "Logging",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.virtualnodespec.Listeners": {
            "Required": "No",
            "Type": [
                "Listener"
            ],
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.input.InputSchema": {
            "Required": "Yes",
            "Type": "InputSchema",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.input.NamePrefix": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "kinesisanalytics.application.input.InputProcessingConfiguration": {
            "Required": "No",
            "Type": "InputProcessingConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.input.KinesisStreamsInput": {
            "Required": "Conditional",
            "Type": "KinesisStreamsInput",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.input.InputParallelism": {
            "Required": "No",
            "Type": "InputParallelism",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.input.KinesisFirehoseInput": {
            "Required": "Conditional",
            "Type": "KinesisFirehoseInput",
            "UpdateRequires": "No interruption"
        },
        "ec2.clientvpnendpoint.directoryserviceauthenticationrequest.DirectoryId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetMaxConcurrencyPercentage": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetFailureTolerancePercentage": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...100",
            "CompliantValues": "0...100"
        },
        "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetMaxConcurrencyCount": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetRegions": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetFailureToleranceCount": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetAccounts": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.StackSetOperationType": {
            "Allowed values": "CREATE | DELETE | UPDATE",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.subscriptiondefinition.subscription.Source": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.subscriptiondefinition.subscription.Subject": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.subscriptiondefinition.subscription.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.subscriptiondefinition.subscription.Target": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sns.policy.PolicyDocument": {
            "Required": "Yes",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "sns.policy.Topics": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.crawler.jdbctarget.Path": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.crawler.jdbctarget.Exclusions": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.crawler.jdbctarget.ConnectionName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.sqlimatchstatement.TextTransformations": {
            "Required": "Yes",
            "Type": [
                "TextTransformation"
            ],
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.sqlimatchstatement.FieldToMatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "w6408ab1c25c10d254c13c17.Key": {
            "Required": "Yes",
            "Type": "String",
            "SampleValue": "example-string"
        },
        "w6408ab1c25c10d254c13c17.Value": {
            "Required": "Yes",
            "Type": "String\n\n#"
        },
        "lambda.alias.versionweight.FunctionWeight": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "lambda.alias.versionweight.FunctionVersion": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.elbinfo.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.applicationreferencedatasource.referenceschema.RecordColumns": {
            "Required": "Yes",
            "Type": [
                "RecordColumn"
            ],
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationreferencedatasource.referenceschema.RecordFormat": {
            "Required": "Yes",
            "Type": "RecordFormat",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationreferencedatasource.referenceschema.RecordEncoding": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "robomaker.simulationapplication.renderingengine.Name": {
            "Allowed values": "OGRE",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "robomaker.simulationapplication.renderingengine.Version": {
            "Pattern": "1.x",
            "Required": "Yes",
            "Maximum": "4",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...4",
            "CompliantValues": "1...4"
        },
        "cw.alarm.Metrics": {
            "Required": "No",
            "Type": [
                "MetricDataQuery"
            ],
            "UpdateRequires": "No interruption"
        },
        "cw.alarm.Period": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cw.alarm.TreatMissingData": {
            "Minimum": "1",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cw.alarm.AlarmActions": {
            "Required": "No",
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "cw.alarm.AlarmName": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cw.alarm.Unit": {
            "Allowed values": "Bits | Bits/Second | Bytes | Bytes/Second | Count | Count/Second | Gigabits | Gigabits/Second | Gigabytes | Gigabytes/Second | Kilobits | Kilobits/Second | Kilobytes | Kilobytes/Second | Megabits | Megabits/Second | Megabytes | Megabytes/Second | Microseconds | Milliseconds | None | Percent | Seconds | Terabits | Terabits/Second | Terabytes | Terabytes/Second",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cw.alarm.InsufficientDataActions": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "cw.alarm.DatapointsToAlarm": {
            "Minimum": "1",
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cw.alarm.Dimensions": {
            "Required": "No",
            "Type": [
                "Dimension"
            ],
            "Maximum": "10",
            "UpdateRequires": "No interruption"
        },
        "cw.alarm.ExtendedStatistic": {
            "Pattern": "p(\\d{1,2}(\\.\\d{0,2})?|100)",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cw.alarm.ActionsEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cw.alarm.Threshold": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "cw.alarm.MetricName": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cw.alarm.AlarmDescription": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...1024",
            "CompliantValues": "0...1024"
        },
        "cw.alarm.EvaluateLowSampleCountPercentile": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cw.alarm.Statistic": {
            "Allowed values": "Average | Maximum | Minimum | SampleCount | Sum",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cw.alarm.ThresholdMetricId": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cw.alarm.ComparisonOperator": {
            "Allowed values": "GreaterThanOrEqualToThreshold | GreaterThanThreshold | GreaterThanUpperThreshold | LessThanLowerOrGreaterThanUpperThreshold | LessThanLowerThreshold | LessThanOrEqualToThreshold | LessThanThreshold",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cw.alarm.OKActions": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "cw.alarm.Namespace": {
            "Pattern": "[^:].*",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cw.alarm.EvaluationPeriods": {
            "Minimum": "1",
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.RoleARN": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.BufferingHints": {
            "Required": "No",
            "Type": "ElasticsearchBufferingHints",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.VpcConfiguration": {
            "Required": "No",
            "Type": "VpcConfiguration",
            "UpdateRequires": "Replacement"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.IndexName": {
            "Pattern": ".*",
            "Required": "Yes",
            "Maximum": "80",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...80",
            "CompliantValues": "1...80"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.S3BackupMode": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.CloudWatchLoggingOptions": {
            "Required": "No",
            "Type": "CloudWatchLoggingOptions",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.TypeName": {
            "Pattern": ".*",
            "Required": "No",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...100",
            "CompliantValues": "0...100"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.IndexRotationPeriod": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.S3Configuration": {
            "Required": "Yes",
            "Type": "S3DestinationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.ClusterEndpoint": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.ProcessingConfiguration": {
            "Required": "No",
            "Type": "ProcessingConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.RetryOptions": {
            "Required": "No",
            "Type": "ElasticsearchRetryOptions",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.DomainARN": {
            "Pattern": "arn:.*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "iotanalytics.dataset.queryaction.SqlQuery": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.queryaction.Filters": {
            "Required": "No",
            "Type": [
                "Filter"
            ],
            "Maximum": "1",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.placement.AvailabilityZone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.placement.Affinity": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.placement.Tenancy": {
            "Allowed values": "dedicated | default | host",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.placement.GroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.placement.SpreadDomain": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.placement.HostResourceGroupArn": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.placement.HostId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.placement.PartitionNumber": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "events.rule.target.KinesisParameters": {
            "Required": "No",
            "Type": "KinesisParameters",
            "UpdateRequires": "No interruption"
        },
        "events.rule.target.SqsParameters": {
            "Required": "No",
            "Type": "SqsParameters",
            "UpdateRequires": "No interruption"
        },
        "events.rule.target.RunCommandParameters": {
            "Required": "No",
            "Type": "RunCommandParameters",
            "UpdateRequires": "No interruption"
        },
        "events.rule.target.InputPath": {
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.rule.target.RoleArn": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1600",
            "CompliantValues": "1...1600"
        },
        "events.rule.target.InputTransformer": {
            "Required": "No",
            "Type": "InputTransformer",
            "UpdateRequires": "No interruption"
        },
        "events.rule.target.EcsParameters": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "events.rule.target.Input": {
            "Required": "No",
            "Type": "String",
            "Maximum": "8192",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.rule.target.BatchParameters": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "events.rule.target.Id": {
            "Pattern": "[\\.\\-_A-Za-z0-9]+",
            "Required": "Yes",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "events.rule.target.HttpParameters": {
            "Required": "No",
            "Type": "HttpParameters",
            "UpdateRequires": "No interruption"
        },
        "events.rule.target.Arn": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1600",
            "CompliantValues": "1...1600"
        },
        "msk.cluster.brokernodegroupinfo.SecurityGroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "msk.cluster.brokernodegroupinfo.StorageInfo": {
            "Required": "No",
            "Type": "StorageInfo",
            "UpdateRequires": "Replacement"
        },
        "msk.cluster.brokernodegroupinfo.InstanceType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "msk.cluster.brokernodegroupinfo.BrokerAZDistribution": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "msk.cluster.brokernodegroupinfo.ClientSubnets": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "wafv2.rulegroup.statementone.RateBasedStatement": {
            "Required": "No",
            "Type": "RateBasedStatementOne",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementone.GeoMatchStatement": {
            "Required": "No",
            "Type": "GeoMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementone.RegexPatternSetReferenceStatement": {
            "Required": "No",
            "Type": "RegexPatternSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementone.SizeConstraintStatement": {
            "Required": "No",
            "Type": "SizeConstraintStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementone.IPSetReferenceStatement": {
            "Required": "No",
            "Type": "IPSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementone.SqliMatchStatement": {
            "Required": "No",
            "Type": "SqliMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementone.ByteMatchStatement": {
            "Required": "No",
            "Type": "ByteMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementone.NotStatement": {
            "Required": "No",
            "Type": "NotStatementOne",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementone.XssMatchStatement": {
            "Required": "No",
            "Type": "XssMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementone.OrStatement": {
            "Required": "No",
            "Type": "OrStatementOne",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementone.AndStatement": {
            "Required": "No",
            "Type": "AndStatementOne",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.Scope": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.AuthorizationEndpoint": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.ClientSecret": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.ClientId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.SessionCookieName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.TokenEndpoint": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.OnUnauthenticatedRequest": {
            "Allowed values": "allow | authenticate | deny",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.UserInfoEndpoint": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.SessionTimeout": {
            "Required": "No",
            "Type": "Long",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.4"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.Issuer": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.AuthenticationRequestExtraParams": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "events.rule.inputtransformer.InputTemplate": {
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "8192",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...8192",
            "CompliantValues": "1...8192"
        },
        "events.rule.inputtransformer.InputPathsMap": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "backup.backupvault.notificationobjecttype.BackupVaultEvents": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "backup.backupvault.notificationobjecttype.SNSTopicArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.logginginfo.Region": {
            "Minimum": "3",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "20",
            "UpdateRequires": "No interruption",
            "AllowedValues": "3...20",
            "CompliantValues": "3...20"
        },
        "ssm.maintenancewindowtask.logginginfo.S3Prefix": {
            "Required": "No",
            "Type": "String",
            "Maximum": "500",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.logginginfo.S3Bucket": {
            "Minimum": "3",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "63",
            "UpdateRequires": "No interruption",
            "AllowedValues": "3...63",
            "CompliantValues": "3...63"
        },
        "athena.workgroup.encryptionconfiguration.EncryptionOption": {
            "Allowed values": "CSE_KMS | SSE_KMS | SSE_S3",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "athena.workgroup.encryptionconfiguration.KmsKey": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.applicationoutput.output.Name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "kinesisanalyticsv2.applicationoutput.output.LambdaOutput": {
            "Required": "No",
            "Type": "LambdaOutput",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationoutput.output.DestinationSchema": {
            "Required": "Yes",
            "Type": "DestinationSchema",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationoutput.output.KinesisStreamsOutput": {
            "Required": "No",
            "Type": "KinesisStreamsOutput",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationoutput.output.KinesisFirehoseOutput": {
            "Required": "No",
            "Type": "KinesisFirehoseOutput",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationtimevalue.Minutes": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.route.grpcrouteaction.WeightedTargets": {
            "Required": "Yes",
            "Type": [
                "WeightedTarget"
            ],
            "UpdateRequires": "No interruption"
        },
        "cloudwatch.alarm.metricstat.Metric": {
            "Required": "Yes",
            "Type": "Metric",
            "UpdateRequires": "No interruption"
        },
        "cloudwatch.alarm.metricstat.Stat": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cloudwatch.alarm.metricstat.Period": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cloudwatch.alarm.metricstat.Unit": {
            "Allowed values": "Bits | Bits/Second | Bytes | Bytes/Second | Count | Count/Second | Gigabits | Gigabits/Second | Gigabytes | Gigabytes/Second | Kilobits | Kilobits/Second | Kilobytes | Kilobytes/Second | Megabits | Megabits/Second | Megabytes | Megabytes/Second | Microseconds | Milliseconds | None | Percent | Seconds | Terabits | Terabits/Second | Terabytes | Terabytes/Second",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "msk.cluster.openmonitoring.Prometheus": {
            "Required": "Yes",
            "Type": "Prometheus",
            "UpdateRequires": "No interruption"
        },
        "athena.workgroup.resultconfiguration.OutputLocation": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "athena.workgroup.resultconfiguration.EncryptionConfiguration": {
            "Required": "No",
            "Type": "EncryptionConfiguration",
            "UpdateRequires": "No interruption"
        },
        "rds.dbcluster.dbclusterrole.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbcluster.dbclusterrole.FeatureName": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.clientpolicytls.Enforce": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "appmesh.virtualnode.clientpolicytls.Ports": {
            "Required": "No",
            "Type": "List of Integer",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.clientpolicytls.Validation": {
            "Required": "Yes",
            "Type": "TlsValidationContext",
            "UpdateRequires": "No interruption"
        },
        "budgets.budget.costtypes.UseBlended": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.costtypes.UseAmortized": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.costtypes.IncludeTax": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.costtypes.IncludeSupport": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.costtypes.IncludeRecurring": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.costtypes.IncludeUpfront": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.costtypes.IncludeSubscription": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.costtypes.IncludeOtherSubscription": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.costtypes.IncludeCredit": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.costtypes.IncludeDiscount": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.costtypes.IncludeRefund": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.securityconfiguration.cloudwatchencryption.KmsKeyArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.securityconfiguration.cloudwatchencryption.CloudWatchEncryptionMode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.customerrorresponse.ErrorCode": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cloudfront.distribution.customerrorresponse.ResponsePagePath": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.customerrorresponse.ResponseCode": {
            "Required": "Conditional",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cloudfront.distribution.customerrorresponse.ErrorCachingMinTTL": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "imagebuilder.imagepipeline.schedule.ScheduleExpression": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "imagebuilder.imagepipeline.schedule.PipelineExecutionStartCondition": {
            "Allowed values": "EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE | EXPRESSION_MATCH_ONLY",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.instancefleetconfig.LaunchSpecifications": {
            "Required": "No",
            "Type": "InstanceFleetProvisioningSpecifications",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.instancefleetconfig.TargetOnDemandCapacity": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.instancefleetconfig.TargetSpotCapacity": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.instancefleetconfig.InstanceTypeConfigs": {
            "Required": "No",
            "Type": [
                "InstanceTypeConfig"
            ],
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.instancefleetconfig.Name": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "lambda.function.environment.Variables": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.csvmappingparameters.RecordColumnDelimiter": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.csvmappingparameters.RecordRowDelimiter": {
            "Minimum": "1",
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "glue.table.tableinput.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "glue.table.tableinput.ViewOriginalText": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.tableinput.Retention": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "glue.table.tableinput.Owner": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.tableinput.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.tableinput.PartitionKeys": {
            "Required": "No",
            "Type": [
                "Column"
            ],
            "UpdateRequires": "No interruption"
        },
        "glue.table.tableinput.TableType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.tableinput.Parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "glue.table.tableinput.ViewExpandedText": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.tableinput.StorageDescriptor": {
            "Required": "No",
            "Type": "StorageDescriptor",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.rule.VisibilityConfig": {
            "Required": "Yes",
            "Type": "VisibilityConfig",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.rule.Name": {
            "Pattern": "^[\\w\\-]+$",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafv2.webacl.rule.OverrideAction": {
            "Required": "Conditional",
            "Type": "OverrideAction",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.rule.Priority": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.webacl.rule.Statement": {
            "Required": "Yes",
            "Type": "StatementOne",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.rule.Action": {
            "Required": "Conditional",
            "Type": "RuleAction",
            "UpdateRequires": "No interruption"
        },
        "efs.accesspoint.accesspointtag.Key": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "efs.accesspoint.accesspointtag.Value": {
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafregional.sqlinjectionmatchset.sqlinjectionmatchtuple.FieldToMatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafregional.sqlinjectionmatchset.sqlinjectionmatchtuple.TextTransformation": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.httpactionheader.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.httpactionheader.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.tagspecification.Tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.tagspecification.ResourceType": {
            "Allowed values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | elastic-gpu | elastic-ip | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | internet-gateway | key-pair | launch-template | local-gateway-route-table-vpc-association | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-flow-log | vpc-peering-connection | vpn-connection | vpn-gateway",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.targetgroup.targetgroupattribute.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.targetgroup.targetgroupattribute.Key": {
            "Pattern": "^[a-zA-Z0-9._]+$",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.cpuoptions.CoreCount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.launchtemplate.launchtemplatedata.cpuoptions.ThreadsPerCore": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appconfig.configurationprofile.validators.Content": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "32768",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...32768",
            "CompliantValues": "0...32768"
        },
        "appconfig.configurationprofile.validators.Type": {
            "Allowed values": "JSON_SCHEMA | LAMBDA",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.message.TimeToLive": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "pinpoint.campaign.message.Title": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.message.ImageSmallIconUrl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.message.SilentPush": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "pinpoint.campaign.message.MediaUrl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.message.Action": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.message.ImageUrl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.message.Url": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.message.RawContent": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.message.ImageIconUrl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.message.JsonBody": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.message.Body": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.healthcheck.healthcheckconfig.AlarmIdentifier": {
            "Required": "No",
            "Type": "AlarmIdentifier",
            "UpdateRequires": "No interruption"
        },
        "route53.healthcheck.healthcheckconfig.FullyQualifiedDomainName": {
            "UpdateRequires": "No interruption",
            "Required": "No",
            "Type": "String",
            "Maximum": "255",
            "FullyQualifiedDomainName`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-fullyqualifieddomainname\"></a>\nAmazon Route 53 behavior depends on whether you specify a value for `IPAddress`\\.  \n **If you specify a value for** `IPAddress`:  \nAmazon Route 53 sends health check requests to the specified IPv4 or IPv6 address and passes the value of `FullyQualifiedDomainName` in the `Host` header for all health checks except TCP health checks\\. This is typically the fully qualified DNS name of the endpoint on which you want Route 53 to perform health checks\\.  \nWhen Route 53 checks the health of an endpoint, here is how it constructs the `Host` header:  \n+ If you specify a value of `80` for `Port` and `HTTP` or `HTTP_STR_MATCH` for `Type`, Route 53 passes the value of `FullyQualifiedDomainName` to the endpoint in the Host header\\. \n+ If you specify a value of `443` for `Port` and `HTTPS` or `HTTPS_STR_MATCH` for `Type`, Route 53 passes the value of `FullyQualifiedDomainName` to the endpoint in the `Host` header\\.\n+ If you specify another value for `Port` and any value except `TCP` for `Type`, Route 53 passes `FullyQualifiedDomainName:Port` to the endpoint in the `Host` header\\.\nIf you don't specify a value for `FullyQualifiedDomainName`, Route 53 substitutes the value of `IPAddress` in the `Host` header in each of the preceding cases\\.  \n **If you don't specify a value for `IPAddress` *": "Route 53 sends a DNS request to the domain that you specify for `FullyQualifiedDomainName` at the interval that you specify for `RequestInterval`\\. Using an IPv4 address that DNS returns, Route 53 then checks the health of the endpoint\\.  \nIf you don't specify a value for `IPAddress`, Route 53 uses only IPv4 to send health checks to the endpoint\\. If there's no record with a type of A for the name that you specify for `FullyQualifiedDomainName`, the health check fails with a \"DNS resolution failed\" error\\.\nIf you want to check the health of multiple records that have the same name and type, such as multiple weighted records, and if you choose to specify the endpoint only by `FullyQualifiedDomainName`, we recommend that you create a separate health check for each endpoint\\. For example, create a health check for each HTTP server that is serving content for www\\.example\\.com\\. For the value of `FullyQualifiedDomainName`, specify the domain name of the server \\(such as us\\-east\\-2\\-www\\.example\\.com\\), not the name of the records \\(www\\.example\\.com\\)\\.  \nIn this configuration, if you create a health check for which the value of `FullyQualifiedDomainName` matches the name of the records and you then associate the health check with those records, health check results will be unpredictable\\.\nIn addition, if the value that you specify for `Type` is `HTTP`, `HTTPS`, `HTTP_STR_MATCH`, or `HTTPS_STR_MATCH`, Route 53 passes the value of `FullyQualifiedDomainName` in the `Host` header, as it does when you specify a value for `IPAddress`\\. If the value of `Type` is `TCP`, Route 53 doesn't pass a `Host` header\\.",
            "SampleValue": "example-string"
        },
        "route53.healthcheck.healthcheckconfig.EnableSNI": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "route53.healthcheck.healthcheckconfig.SearchString": {
            "Required": "No",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.healthcheck.healthcheckconfig.ChildHealthChecks": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "256",
            "UpdateRequires": "No interruption"
        },
        "route53.healthcheck.healthcheckconfig.MeasureLatency": {
            "Required": "No",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "route53.healthcheck.healthcheckconfig.Inverted": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "route53.healthcheck.healthcheckconfig.ResourcePath": {
            "Required": "No",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.healthcheck.healthcheckconfig.Regions": {
            "Required": "No",
            "Maximum": "64",
            "UpdateRequires": "No interruption"
        },
        "route53.healthcheck.healthcheckconfig.InsufficientDataHealthStatus": {
            "Allowed values": "Healthy | LastKnownStatus | Unhealthy",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.healthcheck.healthcheckconfig.FailureThreshold": {
            "Minimum": "1",
            "Required": "No",
            "Maximum": "10",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...10",
            "CompliantValues": "1...10"
        },
        "route53.healthcheck.healthcheckconfig.HealthThreshold": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "route53.healthcheck.healthcheckconfig.Port": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "65535",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...65535",
            "CompliantValues": "1...65535"
        },
        "route53.healthcheck.healthcheckconfig.IPAddress": {
            "Pattern": "(^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$|^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)",
            "Required": "No",
            "UpdateRequires": "No interruption",
            "IPAddress`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-ipaddress\"></a>\nThe IPv4 or IPv6 IP address of the endpoint that you want Amazon Route 53 to perform health checks on\\. If you don't specify a value for `IPAddress`, Route 53 sends a DNS request to resolve the domain name that you specify in `FullyQualifiedDomainName` at the interval that you specify in `RequestInterval`\\. Using an IP address returned by DNS, Route 53 then checks the health of the endpoint\\.  \nUse one of the following formats for the value of `IPAddress`:   \n+  **IPv4 address*": "four values between 0 and 255, separated by periods \\(\\.\\), for example, `192.0.2.44`\\.\n+  **IPv6 address*",
            "Type": "String",
            "Maximum": "45",
            "SampleValue": "example-string"
        },
        "route53.healthcheck.healthcheckconfig.RequestInterval": {
            "Minimum": "10",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "30",
            "UpdateRequires": "Replacement",
            "AllowedValues": "10...30",
            "CompliantValues": "10...30"
        },
        "route53.healthcheck.healthcheckconfig.Type": {
            "Type`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-type\"></a>\nThe type of health check that you want to create, which indicates how Amazon Route 53 determines whether an endpoint is healthy\\.  \nYou can't change the value of `Type` after you create a health check\\.\nYou can create the following types of health checks:  \n+  **HTTP*": "Route 53 tries to establish a TCP connection\\. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400\\.\n+  **HTTPS*",
            "*Important**  \nIf you specify `HTTPS` for the value of `Type`, the endpoint must support TLS v1\\.0 or later\\.\n+  **HTTP\\_STR\\_MATCH*": "Route 53 tries to establish a TCP connection\\. If successful, Route 53 submits an HTTP request and searches the first 5,120 bytes of the response body for the string that you specify in `SearchString`\\.\n+  **HTTPS\\_STR\\_MATCH*",
            "Required": "Yes",
            "Allowed values": "CALCULATED | CLOUDWATCH_METRIC | HTTP | HTTP_STR_MATCH | HTTPS | HTTPS_STR_MATCH | TCP",
            "UpdateRequires": "Replacement",
            "Type": "String",
            "SampleValue": "example-string"
        },
        "accessanalyzer.analyzer.filter.Eq": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "accessanalyzer.analyzer.filter.Neq": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "accessanalyzer.analyzer.filter.Contains": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "accessanalyzer.analyzer.filter.Property": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "accessanalyzer.analyzer.filter.Exists": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.objectlockrule.DefaultRetention": {
            "Required": "No",
            "Type": "DefaultRetention",
            "UpdateRequires": "No interruption"
        },
        "beanstalk.option.settings.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "beanstalk.option.settings.Namespace": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "beanstalk.option.settings.ResourceName": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "beanstalk.option.settings.OptionName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.taskinvocationparameters.MaintenanceWindowAutomationParameters": {
            "Required": "No",
            "Type": "MaintenanceWindowAutomationParameters",
            "UpdateRequires": "No interruption"
        },
        "ssm.maintenancewindowtask.taskinvocationparameters.MaintenanceWindowRunCommandParameters": {
            "Required": "No",
            "Type": "MaintenanceWindowRunCommandParameters",
            "UpdateRequires": "No interruption"
        },
        "ssm.maintenancewindowtask.taskinvocationparameters.MaintenanceWindowLambdaParameters": {
            "Required": "No",
            "Type": "MaintenanceWindowLambdaParameters",
            "UpdateRequires": "No interruption"
        },
        "ssm.maintenancewindowtask.taskinvocationparameters.MaintenanceWindowStepFunctionsParameters": {
            "Required": "No",
            "Type": "MaintenanceWindowStepFunctionsParameters",
            "UpdateRequires": "No interruption"
        },
        "sagemaker.coderepository.gitconfig.RepositoryUrl": {
            "Pattern": "^https://([^/]+)/?(.*)$",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sagemaker.coderepository.gitconfig.Branch": {
            "Pattern": "[^ ~^:?*\\[]+",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "sagemaker.coderepository.gitconfig.SecretArn": {
            "Pattern": "arn:aws[a-z\\-]*:secretsmanager:[a-z0-9\\-]*:[0-9]{12}:secret:.*",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "events.rule.httpparameters.QueryStringParameters": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "events.rule.httpparameters.HeaderParameters": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "events.rule.httpparameters.PathParameterValues": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "pinpointemail.configurationset.trackingoptions.CustomRedirectDomain": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.autoscalinggroup.lifecyclehookspecification.DefaultResult": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.autoscalinggroup.lifecyclehookspecification.NotificationMetadata": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "1023",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1023",
            "CompliantValues": "1...1023"
        },
        "autoscaling.autoscalinggroup.lifecyclehookspecification.RoleARN": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1600",
            "CompliantValues": "1...1600"
        },
        "autoscaling.autoscalinggroup.lifecyclehookspecification.LifecycleHookName": {
            "Pattern": "[A-Za-z0-9\\-_\\/]+",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "autoscaling.autoscalinggroup.lifecyclehookspecification.NotificationTargetARN": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...1600",
            "CompliantValues": "0...1600"
        },
        "autoscaling.autoscalinggroup.lifecyclehookspecification.HeartbeatTimeout": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "autoscaling.autoscalinggroup.lifecyclehookspecification.LifecycleTransition": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.iottopicpublish.Payload": {
            "Required": "No",
            "Type": "Payload",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.iottopicpublish.MqttTopic": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "cloudwatch.anomalydetector.configuration.ExcludedTimeRanges": {
            "Required": "No",
            "Type": [
                "Range"
            ],
            "UpdateRequires": "No interruption"
        },
        "cloudwatch.anomalydetector.configuration.MetricTimeZone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.cors.corsrule.ExposedHeaders": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.cors.corsrule.Id": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.cors.corsrule.AllowedHeaders": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.cors.corsrule.AllowedMethods": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.cors.corsrule.MaxAge": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "s3.bucket.cors.corsrule.AllowedOrigins": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.processor.Parameters": {
            "Required": "No",
            "Type": [
                "ProcessorParameter"
            ],
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.processor.Type": {
            "Allowed values": "Lambda",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dynamodb.table.ssespecification.SSEEnabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "dynamodb.table.ssespecification.KMSMasterKeyId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dynamodb.table.ssespecification.SSEType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.configurationseteventdestination.dimensionconfiguration.DefaultDimensionValue": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.configurationseteventdestination.dimensionconfiguration.DimensionValueSource": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.configurationseteventdestination.dimensionconfiguration.DimensionName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafregional.sizeconstraintset.fieldtomatch.Data": {
            "Pattern": ".*\\S.*",
            "Required": "Conditional",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafregional.sizeconstraintset.fieldtomatch.Type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.dnsservicediscovery.Hostname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "efs.accesspoint.creationinfo.OwnerUid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "efs.accesspoint.creationinfo.Permissions": {
            "Pattern": "^[0-7]{3,4}$",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "efs.accesspoint.creationinfo.OwnerGid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.kinesisstreamsourceconfiguration.RoleARN": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "kinesisfirehose.deliverystream.kinesisstreamsourceconfiguration.KinesisStreamARN": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "kinesisfirehose.deliverystream.parquetserde.MaxPaddingBytes": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisfirehose.deliverystream.parquetserde.WriterVersion": {
            "Allowed values": "V1 | V2",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.parquetserde.PageSizeBytes": {
            "Minimum": "65536",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisfirehose.deliverystream.parquetserde.BlockSizeBytes": {
            "Minimum": "67108864",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisfirehose.deliverystream.parquetserde.Compression": {
            "Allowed values": "GZIP | SNAPPY | UNCOMPRESSED",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.parquetserde.EnableDictionaryCompression": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticloadbalancingv2.targetgroup.matcher.HttpCode": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.MarketType": {
            "Allowed values": "spot",
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.SpotOptions": {
            "Required": "No",
            "Type": "SpotOptions",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.blockdevicemapping.VirtualName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.blockdevicemapping.DeviceName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.blockdevicemapping.Ebs": {
            "Required": "No",
            "Type": "Ebs",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.blockdevicemapping.NoDevice": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.action.ContainerAction": {
            "Required": "No",
            "Type": "ContainerAction",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.action.ActionName": {
            "Pattern": "^[a-zA-Z0-9_]+$",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.dataset.action.QueryAction": {
            "Required": "No",
            "Type": "QueryAction",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.instancefleetconfig.ebsblockdeviceconfig.VolumesPerInstance": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "elasticmapreduce.instancefleetconfig.ebsblockdeviceconfig.VolumeSpecification": {
            "Required": "Yes",
            "Type": "VolumeSpecification",
            "UpdateRequires": "Replacement"
        },
        "kinesisanalyticsv2.application.inputprocessingconfiguration.InputLambdaProcessor": {
            "Required": "No",
            "Type": "InputLambdaProcessor",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.projectfilesystemlocation.MountPoint": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.projectfilesystemlocation.Type": {
            "Allowed values": "EFS",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.projectfilesystemlocation.Identifier": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.projectfilesystemlocation.MountOptions": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.projectfilesystemlocation.Location": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.onenter.Events": {
            "Required": "No",
            "Type": [
                "Event"
            ],
            "UpdateRequires": "No interruption"
        },
        "cloudtrail.trail.eventselector.IncludeManagementEvents": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudtrail.trail.eventselector.DataResources": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudtrail.trail.eventselector.ReadWriteType": {
            "Allowed values": "All | ReadOnly | WriteOnly",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.SecondaryPrivateIpAddressCount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.AssociatePublicIpAddress": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.DeviceIndex": {
            "Required": "Conditional",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.PrivateIpAddresses": {
            "Required": "No",
            "Type": [
                "PrivateIpAddressSpecification"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.Groups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.SubnetId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.NetworkInterfaceId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.Ipv6AddressCount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.DeleteOnTermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.Ipv6Addresses": {
            "Required": "No",
            "Type": [
                "InstanceIpv6Address"
            ],
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.kinesisstreamsinput.RoleARN": {
            "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisanalytics.application.kinesisstreamsinput.ResourceARN": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "appmesh.virtualnode.listenertlscertificate.ACM": {
            "Required": "No",
            "Type": "ListenerTlsAcmCertificate",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.listenertlscertificate.File": {
            "Required": "No",
            "Type": "ListenerTlsFileCertificate",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolriskconfigurationattachment.accounttakeoverriskconfigurationtype.NotifyConfiguration": {
            "Required": "No",
            "Type": "NotifyConfigurationType",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolriskconfigurationattachment.accounttakeoverriskconfigurationtype.Actions": {
            "Required": "Yes",
            "Type": "AccountTakeoverActionsType",
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.deploymentstyle.DeploymentType": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.deploymentstyle.DeploymentOption": {
            "Allowed values": "WITH_TRAFFIC_CONTROL | WITHOUT_TRAFFIC_CONTROL",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.texttransformations.texttransformations": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-rulegroup-texttransformations-properties": {
            "TextTransformations": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "codebuild.project.vpcconfig.VpcId": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.vpcconfig.SecurityGroupIds": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.vpcconfig.Subnets": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "16",
            "UpdateRequires": "No interruption"
        },
        "cassandra.table.provisionedthroughput.WriteCapacityUnits": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cassandra.table.provisionedthroughput.ReadCapacityUnits": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.s3action.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.s3action.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.s3action.BucketName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.forwardconfig.TargetGroups": {
            "Required": "No",
            "Type": [
                "TargetGroupTuple"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.forwardconfig.TargetGroupStickinessConfig": {
            "Required": "No",
            "Type": "TargetGroupStickinessConfig",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.targetgroupsconfig.TargetGroups": {
            "Required": "Yes",
            "Type": [
                "TargetGroup"
            ],
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.notificationconfig.topicconfig.Filter": {
            "Required": "No",
            "Type": "NotificationFilter",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.notificationconfig.topicconfig.Topic": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.notificationconfig.topicconfig.Event": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.encryptionconfiguration.ReplicaKmsKeyID": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "msk.cluster.encryptioninfo.EncryptionAtRest": {
            "Required": "No",
            "Type": "EncryptionAtRest",
            "UpdateRequires": "Replacement"
        },
        "msk.cluster.encryptioninfo.EncryptionInTransit": {
            "Required": "No",
            "Type": "EncryptionInTransit",
            "UpdateRequires": "Replacement"
        },
        "elasticsearch.domain.zoneawarenessconfig.AvailabilityZoneCount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "iam.group.Path": {
            "Pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "iam.group.ManagedPolicyArns": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "iam.group.GroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "iam.group.Policies": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationreferencedatasource.referencedatasource.S3ReferenceDataSource": {
            "Required": "No",
            "Type": "S3ReferenceDataSource",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationreferencedatasource.referencedatasource.TableName": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "kinesisanalytics.applicationreferencedatasource.referencedatasource.ReferenceSchema": {
            "Required": "Yes",
            "Type": "ReferenceSchema",
            "UpdateRequires": "No interruption"
        },
        "w6408ab1c19c15c15c27c27b7.ParameterLogicalID": {
            "Required": "No"
        },
        "glue.mltransform.inputrecordtables.gluetables.DatabaseName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.mltransform.inputrecordtables.gluetables.CatalogId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.mltransform.inputrecordtables.gluetables.TableName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.mltransform.inputrecordtables.gluetables.ConnectionName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53resolver.resolverendpoint.ipaddressrequest.Ip": {
            "Minimum": "7",
            "Required": "No",
            "Type": "String",
            "Maximum": "36",
            "UpdateRequires": "No interruption",
            "AllowedValues": "7...36",
            "CompliantValues": "7...36"
        },
        "route53resolver.resolverendpoint.ipaddressrequest.SubnetId": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "events.rule.batchparameters.JobName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.rule.batchparameters.RetryStrategy": {
            "Required": "No",
            "Type": "BatchRetryStrategy",
            "UpdateRequires": "No interruption"
        },
        "events.rule.batchparameters.ArrayProperties": {
            "Required": "No",
            "Type": "BatchArrayProperties",
            "UpdateRequires": "No interruption"
        },
        "events.rule.batchparameters.JobDefinition": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbcluster.scalingconfiguration.SecondsUntilAutoPause": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "rds.dbcluster.scalingconfiguration.MaxCapacity": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "rds.dbcluster.scalingconfiguration.MinCapacity": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "rds.dbcluster.scalingconfiguration.AutoPause": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "iot.topicrule.dynamodbaction.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.dynamodbaction.PayloadField": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.dynamodbaction.RangeKeyValue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.dynamodbaction.HashKeyType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.dynamodbaction.TableName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.dynamodbaction.HashKeyField": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.dynamodbaction.HashKeyValue": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.dynamodbaction.RangeKeyType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.dynamodbaction.RangeKeyField": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.applicationoutput.destinationschema.RecordFormatType": {
            "Allowed values": "CSV | JSON",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.loggerdefinition.loggerdefinitionversion.Loggers": {
            "Required": "Yes",
            "Type": [
                "Logger"
            ],
            "UpdateRequires": "Replacement"
        },
        "gamelift.gamesessionqueue.destination.DestinationArn": {
            "Pattern": "[a-zA-Z0-9:/-]+",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "pinpoint.pushtemplate.apnspushnotificationtemplate.Title": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.apnspushnotificationtemplate.Sound": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.apnspushnotificationtemplate.Body": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.apnspushnotificationtemplate.MediaUrl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.apnspushnotificationtemplate.Url": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.apnspushnotificationtemplate.Action": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.targetgroupinfo.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "certificatemanager.certificate.domainvalidationoption.ValidationDomain": {
            "Pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
            "Required": "No",
            "Maximum": "253",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...253",
            "CompliantValues": "1...253"
        },
        "certificatemanager.certificate.domainvalidationoption.HostedZoneId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "certificatemanager.certificate.domainvalidationoption.DomainName": {
            "Pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
            "Required": "Yes",
            "Maximum": "253",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...253",
            "CompliantValues": "1...253"
        },
        "kinesisanalyticsv2.application.input.NamePrefix": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "kinesisanalyticsv2.application.input.KinesisStreamsInput": {
            "Required": "No",
            "Type": "KinesisStreamsInput",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.input.KinesisFirehoseInput": {
            "Required": "No",
            "Type": "KinesisFirehoseInput",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.input.InputParallelism": {
            "Required": "No",
            "Type": "InputParallelism",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.input.InputProcessingConfiguration": {
            "Required": "No",
            "Type": "InputProcessingConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.input.InputSchema": {
            "Required": "Yes",
            "Type": "InputSchema",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskdefinition.containerdefinitions.hostentry.IpAddress": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.hostentry.Hostname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "gamelift.alias.routingstrategy.FleetId": {
            "Pattern": "^fleet-\\S+",
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.alias.routingstrategy.Type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "gamelift.alias.routingstrategy.Message": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dlm.lifecyclepolicy.crossregioncopyrule.CopyTags": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "dlm.lifecyclepolicy.crossregioncopyrule.Encrypted": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "dlm.lifecyclepolicy.crossregioncopyrule.CmkArn": {
            "Pattern": "arn:aws(-[a-z]{1,3}){0,2}:kms:([a-z]+-){2,3}\\d:\\d+:key/.*",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...2048",
            "CompliantValues": "0...2048"
        },
        "dlm.lifecyclepolicy.crossregioncopyrule.RetainRule": {
            "Required": "No",
            "Type": "CrossRegionCopyRetainRule",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.crossregioncopyrule.TargetRegion": {
            "Pattern": "([a-z]+-){2,3}\\d",
            "Required": "Yes",
            "Maximum": "16",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...16",
            "CompliantValues": "0...16"
        },
        "apitgateway.method.methodresponse.ResponseParameters": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.methodresponse.ResponseModels": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.methodresponse.StatusCode": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpoolriskconfigurationattachment.notifyemailtype.Subject": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
            "Required": "Yes",
            "Maximum": "140",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...140",
            "CompliantValues": "1...140"
        },
        "cognito.userpoolriskconfigurationattachment.notifyemailtype.HtmlBody": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]+",
            "Required": "No",
            "Maximum": "20000",
            "UpdateRequires": "No interruption",
            "Minimum": "6",
            "Type": "String",
            "AllowedValues": "6...20000",
            "CompliantValues": "6...20000"
        },
        "cognito.userpoolriskconfigurationattachment.notifyemailtype.TextBody": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]+",
            "Required": "No",
            "Maximum": "20000",
            "UpdateRequires": "No interruption",
            "Minimum": "6",
            "Type": "String",
            "AllowedValues": "6...20000",
            "CompliantValues": "6...20000"
        },
        "opsworks.instance.timebasedautoscaling.Monday": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.instance.timebasedautoscaling.Thursday": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.instance.timebasedautoscaling.Saturday": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.instance.timebasedautoscaling.Wednesday": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.instance.timebasedautoscaling.Tuesday": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.instance.timebasedautoscaling.Sunday": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.instance.timebasedautoscaling.Friday": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.lambda.LambdaName": {
            "Pattern": "^[a-zA-Z0-9_-]+$",
            "Required": "No",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "iotanalytics.pipeline.lambda.BatchSize": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "1000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1000",
            "CompliantValues": "1...1000"
        },
        "iotanalytics.pipeline.lambda.Next": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.lambda.Name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "eks.cluster.encryptionconfig.Resources": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "eks.cluster.encryptionconfig.Provider": {
            "Required": "No",
            "Type": "Provider",
            "UpdateRequires": "No interruption"
        },
        "gamelift.fleet.certificateconfiguration.CertificateType": {
            "Allowed values": "DISABLED | GENERATED",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificate.validity.Value": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "acmpca.certificate.validity.Type": {
            "Required": "Yes",
            "UpdateRequires": "Replacement"
        },
        "wafv2.webacl.statementthrees.statementthrees": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-webacl-statementthrees-properties": {
            "StatementThrees": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2.elb.AppCookieStickinessPolicy.CookieName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.AppCookieStickinessPolicy.PolicyName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.stackconfigmanager.Version": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.stackconfigmanager.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.redshiftretryoptions.DurationInSeconds": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "7200",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...7200",
            "CompliantValues": "0...7200"
        },
        "pinpoint.segment.segmentdimensions.Demographic": {
            "Required": "No",
            "Type": "Demographic",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.Behavior": {
            "Required": "No",
            "Type": "Behavior",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.Location": {
            "Required": "No",
            "Type": "Location",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.UserAttributes": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "pinpoint.segment.segmentdimensions.Metrics": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "pinpoint.segment.segmentdimensions.Attributes": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "s3.bucket.accelerateconfiguration.AccelerationStatus": {
            "Allowed values": "Enabled | Suspended",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.firehose.Separator": {
            "Pattern": "([\\n\\t])|(\\r\\n)|(,)",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.firehose.Payload": {
            "Required": "No",
            "Type": "Payload",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.firehose.DeliveryStreamName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.Organization": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.GenerationQualifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.Surname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.Title": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.Pseudonym": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.SerialNumber": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.CommonName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.Country": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.Initials": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.OrganizationalUnit": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.DistinguishedNameQualifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.Locality": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.State": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.GivenName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.volumes.host.SourcePath": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "msk.cluster.ebsstorageinfo.VolumeSize": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "iam.policy.PolicyDocument": {
            "Pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
            "Required": "Yes",
            "Maximum": "131072",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "Json",
            "AllowedValues": "1...131072",
            "CompliantValues": "1...131072"
        },
        "iam.policy.PolicyName": {
            "Pattern": "[\\w+=,.@-]+",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.addattributes.Next": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.addattributes.Name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.addattributes.Attributes": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "beanstalk.environment.VersionLabel": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "beanstalk.environment.Tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "beanstalk.environment.EnvironmentName": {
            "Minimum": "4",
            "Required": "No",
            "Type": "String",
            "Maximum": "40",
            "UpdateRequires": "Replacement",
            "AllowedValues": "4...40",
            "CompliantValues": "4...40"
        },
        "beanstalk.environment.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "200",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "beanstalk.environment.TemplateName": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "beanstalk.environment.ApplicationName": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "beanstalk.environment.PlatformArn": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "beanstalk.environment.Tier": {
            "Required": "No",
            "Type": "Tier",
            "UpdateRequires": "Some interruptions"
        },
        "beanstalk.environment.OptionSettings": {
            "Required": "No",
            "Type": [
                "OptionSetting"
            ],
            "UpdateRequires": "No interruption"
        },
        "beanstalk.environment.SolutionStackName": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "beanstalk.environment.CNAMEPrefix": {
            "Minimum": "4",
            "Required": "No",
            "Type": "String",
            "Maximum": "63",
            "UpdateRequires": "Replacement",
            "AllowedValues": "4...63",
            "CompliantValues": "4...63"
        },
        "glue.partition.serdeinfo.SerializationLibrary": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.serdeinfo.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.serdeinfo.Parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "servicediscovery.service.healthcheckcustomconfig.FailureThreshold": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Double",
            "Maximum": "10",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...10",
            "CompliantValues": "1...10"
        },
        "cassandra.table.clusteringkeycolumn.OrderBy": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "cassandra.table.clusteringkeycolumn.Column": {
            "Required": "Yes",
            "Type": "Column",
            "UpdateRequires": "Replacement"
        },
        "pinpoint.campaign.writetreatmentresource.Schedule": {
            "Required": "No",
            "Type": "Schedule",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.writetreatmentresource.TreatmentDescription": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.writetreatmentresource.MessageConfiguration": {
            "Required": "No",
            "Type": "MessageConfiguration",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.writetreatmentresource.SizePercent": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "pinpoint.campaign.writetreatmentresource.TreatmentName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waf.xssmatchset.xssmatchtuple.fieldtomatch.Type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "waf.xssmatchset.xssmatchtuple.fieldtomatch.Data": {
            "Pattern": ".*\\S.*",
            "Required": "Conditional",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafregional.webacl.rule.Action": {
            "Required": "Yes",
            "Type": "Action",
            "UpdateRequires": "No interruption"
        },
        "wafregional.webacl.rule.RuleId": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafregional.webacl.rule.Priority": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "codedeploy.deploymentgroup.alarmconfiguration.IgnorePollAlarmFailure": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codedeploy.deploymentgroup.alarmconfiguration.Alarms": {
            "Required": "No",
            "Type": [
                "Alarm"
            ],
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.alarmconfiguration.Enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "dms.endpoint.elasticsearchsettings.ErrorRetryDuration": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "dms.endpoint.elasticsearchsettings.FullLoadErrorPercentage": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "dms.endpoint.elasticsearchsettings.ServiceAccessRoleArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.elasticsearchsettings.EndpointUri": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "stepfunctions.statemachine.s3location.Version": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "stepfunctions.statemachine.s3location.Bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "stepfunctions.statemachine.s3location.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.artifactstore.encryptionkey.Type": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.artifactstore.encryptionkey.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.configurationseteventdestination.cloudwatchdestination.DimensionConfigurations": {
            "Required": "No",
            "Type": [
                "DimensionConfiguration"
            ],
            "UpdateRequires": "No interruption"
        },
        "config.configrule.source.sourcedetails.MaximumExecutionFrequency": {
            "Allowed values": "One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "config.configrule.source.sourcedetails.MessageType": {
            "Allowed values": "ConfigurationItemChangeNotification | ConfigurationSnapshotDeliveryCompleted | OversizedConfigurationItemChangeNotification | ScheduledNotification",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "config.configrule.source.sourcedetails.EventSource": {
            "Allowed values": "aws.config",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.audiolanguageselection.LanguageSelectionPolicy": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.audiolanguageselection.LanguageCode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.segment.segmentdimensions.behavior.Recency": {
            "Required": "No",
            "Type": "Recency",
            "UpdateRequires": "No interruption"
        },
        "apigatewayv2.integration.tlsconfig.ServerNameToVerify": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "imagebuilder.infrastructureconfiguration.logging.S3Logs": {
            "Required": "No",
            "Type": "S3Logs",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.ipv6add.Ipv6Address": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "lambda.function.deadletterconfig.TargetArn": {
            "Pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.TimeoutDurationMinutes": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.TimeoutAction": {
            "Allowed values": "SWITCH_TO_ON_DEMAND | TERMINATE_CLUSTER",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.BlockDurationMinutes": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "iotevents.detectormodel.settimer.Seconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "iotevents.detectormodel.settimer.DurationExpression": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "iotevents.detectormodel.settimer.TimerName": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "appmesh.mesh.egressfilter.Type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.policydetails.Schedules": {
            "Required": "Yes",
            "Type": [
                "Schedule"
            ],
            "Maximum": "1",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.policydetails.Parameters": {
            "Required": "No",
            "Type": "Parameters",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.policydetails.TargetTags": {
            "Required": "Yes",
            "Type": [
                "Tag"
            ],
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.policydetails.ResourceTypes": {
            "Required": "Yes",
            "Type": "List of String",
            "Maximum": "1",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.policydetails.PolicyType": {
            "Allowed values": "EBS_SNAPSHOT_MANAGEMENT",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.httpconfig.AuthorizationConfig": {
            "Required": "No",
            "Type": "AuthorizationConfig",
            "UpdateRequires": "No interruption"
        },
        "appsync.datasource.httpconfig.Endpoint": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "mediastore.container.corsrule.ExposeHeaders": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "100",
            "UpdateRequires": "No interruption"
        },
        "mediastore.container.corsrule.AllowedOrigins": {
            "Required": "No",
            "Maximum": "100",
            "UpdateRequires": "No interruption"
        },
        "mediastore.container.corsrule.MaxAgeSeconds": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "2147483647",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...2147483647",
            "CompliantValues": "0...2147483647"
        },
        "mediastore.container.corsrule.AllowedHeaders": {
            "Required": "No",
            "Maximum": "100",
            "UpdateRequires": "No interruption"
        },
        "mediastore.container.corsrule.AllowedMethods": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "4",
            "UpdateRequires": "Replacement"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.BucketARN": {
            "Pattern": "arn:.*",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.Prefix": {
            "Pattern": ".*",
            "Minimum": "0",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...1024",
            "CompliantValues": "0...1024"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.EncryptionConfiguration": {
            "Required": "No",
            "Type": "EncryptionConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.CompressionFormat": {
            "Allowed values": "GZIP | HADOOP_SNAPPY | Snappy | UNCOMPRESSED | ZIP",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.DataFormatConversionConfiguration": {
            "Required": "No",
            "Type": "DataFormatConversionConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.RoleARN": {
            "Pattern": "arn:.*",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.CloudWatchLoggingOptions": {
            "Required": "No",
            "Type": "CloudWatchLoggingOptions",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.ProcessingConfiguration": {
            "Required": "No",
            "Type": "ProcessingConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.S3BackupMode": {
            "Allowed values": "Disabled | Enabled",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.S3BackupConfiguration": {
            "Required": "No",
            "Type": "S3DestinationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.BufferingHints": {
            "Required": "No",
            "Type": "BufferingHints",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.ErrorOutputPrefix": {
            "Pattern": ".*",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...1024",
            "CompliantValues": "0...1024"
        },
        "appmesh.virtualnode.awscloudmapservicediscovery.NamespaceName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.awscloudmapservicediscovery.Attributes": {
            "Required": "No",
            "Type": [
                "AwsCloudMapInstanceAttribute"
            ],
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.awscloudmapservicediscovery.ServiceName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudwatch.alarm.metric.Dimensions": {
            "Required": "No",
            "Type": [
                "Dimension"
            ],
            "Maximum": "10",
            "UpdateRequires": "No interruption"
        },
        "cloudwatch.alarm.metric.MetricName": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cloudwatch.alarm.metric.Namespace": {
            "Pattern": "[^:].*",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "ecs.cluster.clustersettings.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.cluster.clustersettings.Name": {
            "Allowed values": "containerInsights",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waf.bytematchset.bytematchtuples.fieldtomatch.Type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "waf.bytematchset.bytematchtuples.fieldtomatch.Data": {
            "Pattern": ".*\\S.*",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "pinpoint.segment.segmentgroups.Groups": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentgroups.Include": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.action.WorkmailAction": {
            "Required": "No",
            "Type": "WorkmailAction",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.action.AddHeaderAction": {
            "Required": "No",
            "Type": "AddHeaderAction",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.action.StopAction": {
            "Required": "No",
            "Type": "StopAction",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.action.SNSAction": {
            "Required": "No",
            "Type": "SNSAction",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.action.S3Action": {
            "Required": "No",
            "Type": "S3Action",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.action.BounceAction": {
            "Required": "No",
            "Type": "BounceAction",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.action.LambdaAction": {
            "Required": "No",
            "Type": "LambdaAction",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.captionselector.SelectorSettings": {
            "Required": "No",
            "Type": "CaptionSelectorSettings",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.captionselector.LanguageCode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.captionselector.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.deletemarkerreplication.Status": {
            "Allowed values": "Disabled | Enabled",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "as.policy.MinAdjustmentMagnitude": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.policy.PolicyType": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "as.policy.StepAdjustments": {
            "Required": "Conditional",
            "Type": [
                "StepAdjustment"
            ],
            "UpdateRequires": "No interruption"
        },
        "as.policy.MetricAggregationType": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "as.policy.AutoScalingGroupName": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.policy.AdjustmentType": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "Conditional",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.policy.TargetTrackingConfiguration": {
            "Required": "Conditional",
            "Type": "TargetTrackingConfiguration",
            "UpdateRequires": "No interruption"
        },
        "as.policy.Cooldown": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.policy.EstimatedInstanceWarmup": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "as.policy.ScalingAdjustment": {
            "Required": "Conditional",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "s3.bucket.replicationconfiguration.rules.destination.ReplicationTime": {
            "Required": "No",
            "Type": "ReplicationTime",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.rules.destination.EncryptionConfiguration": {
            "Required": "No",
            "Type": "EncryptionConfiguration",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.rules.destination.Bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.replicationconfiguration.rules.destination.StorageClass": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.rules.destination.Account": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.rules.destination.Metrics": {
            "Required": "No",
            "Type": "Metrics",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.rules.destination.AccessControlTranslation": {
            "Required": "No",
            "Type": "AccessControlTranslation",
            "UpdateRequires": "No interruption"
        },
        "secretsmanager.secret.generatesecretstring.ExcludeNumbers": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "secretsmanager.secret.generatesecretstring.ExcludePunctuation": {},
        "secretsmanager.secret.generatesecretstring.ExcludeCharacters": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "4096",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...4096",
            "CompliantValues": "0...4096"
        },
        "secretsmanager.secret.generatesecretstring.ExcludeLowercase": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "resourcegroups.group.query.ResourceTypeFilters": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "resourcegroups.group.query.TagFilters": {},
        "resourcegroups.group.query.StackIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "resourcegroups.group.query.TagFilter": {
            "Required": "Conditional",
            "Type": [
                "TagFilter"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticsearch.domain.nodetonodeencryptionoptions.Enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.BlockEmail": {
            "Required": "No",
            "Type": "NotifyEmailType",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.MfaEmail": {
            "Required": "No",
            "Type": "NotifyEmailType",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.SourceArn": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.NoActionEmail": {
            "Required": "No",
            "Type": "NotifyEmailType",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.From": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.ReplyTo": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.datastore.datastorestorage.ServiceManagedS3": {
            "Required": "No",
            "Type": "ServiceManagedS3",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.datastore.datastorestorage.CustomerManagedS3": {
            "Required": "No",
            "Type": "CustomerManagedS3",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.instancetypeconfig.InstanceType": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "elasticmapreduce.cluster.instancetypeconfig.BidPriceAsPercentageOfOnDemandPrice": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "Replacement",
            "SampleValue": "123.45"
        },
        "elasticmapreduce.cluster.instancetypeconfig.WeightedCapacity": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.instancetypeconfig.BidPrice": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.instancetypeconfig.Configurations": {
            "Required": "No",
            "Type": [
                "Configuration"
            ],
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.instancetypeconfig.EbsConfiguration": {
            "Required": "No",
            "Type": "EbsConfiguration",
            "UpdateRequires": "Replacement"
        },
        "elasticache.replicationgroup.nodegroupconfiguration.NodeGroupId": {
            "Pattern": "\\d+",
            "Required": "No",
            "Maximum": "4",
            "UpdateRequires": "Some interruptions",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...4",
            "CompliantValues": "1...4"
        },
        "elasticache.replicationgroup.nodegroupconfiguration.PrimaryAvailabilityZone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticache.replicationgroup.nodegroupconfiguration.ReplicaAvailabilityZones": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "elasticache.replicationgroup.nodegroupconfiguration.ReplicaCount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "elasticache.replicationgroup.nodegroupconfiguration.Slots": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.tlsvalidationcontext.Trust": {
            "Required": "Yes",
            "Type": "TlsValidationContextTrust",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.Rules": {
            "Required": "Yes",
            "Type": [
                "ReplicationRule"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.Role": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "glue.trigger.predicate.Logical": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.trigger.predicate.Conditions": {
            "Required": "No",
            "Type": [
                "Condition"
            ],
            "UpdateRequires": "No interruption"
        },
        "imagebuilder.distributionconfiguration.distribution.LicenseConfigurationArns": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "imagebuilder.distributionconfiguration.distribution.AmiDistributionConfiguration": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "imagebuilder.distributionconfiguration.distribution.Region": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "iot.topicrule.putassetpropertyvalueentry.PropertyAlias": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.putassetpropertyvalueentry.PropertyId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.putassetpropertyvalueentry.AssetId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.putassetpropertyvalueentry.PropertyValues": {
            "Required": "Yes",
            "Type": [
                "AssetPropertyValue"
            ],
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.putassetpropertyvalueentry.EntryId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.videoselectorpid.Pid": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cognito.identitypoolroleattachment.rolemapping.AmbiguousRoleResolution": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypoolroleattachment.rolemapping.IdentityProvider": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypoolroleattachment.rolemapping.Type": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypoolroleattachment.rolemapping.RulesConfiguration": {
            "Required": "No",
            "Type": "RulesConfigurationType",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.ruleaction.Count": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.rulegroup.ruleaction.Allow": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.rulegroup.ruleaction.Block": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "eks.cluster.resourcesvpcconfig.SubnetIds": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "eks.cluster.resourcesvpcconfig.SecurityGroupIds": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "iam.user.Groups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "iam.user.PermissionsBoundary": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iam.user.Tags": {
            "Required": "No",
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "iam.user.ManagedPolicyArns": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "iam.user.Policies": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "iam.user.LoginProfile": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "iam.user.Path": {
            "Pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "iam.user.UserName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.listenertls.Certificate": {
            "Required": "Yes",
            "Type": "ListenerTlsCertificate",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.listenertls.Mode": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "appsync.graphqlapi.userpoolconfig.UserPoolId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.userpoolconfig.AppIdClientRegex": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.userpoolconfig.AwsRegion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.userpoolconfig.DefaultAction": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.crawler.s3target.Path": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.crawler.s3target.Exclusions": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ssm.association.s3outputlocation.OutputS3BucketName": {
            "Minimum": "3",
            "Required": "No",
            "Type": "String",
            "Maximum": "63",
            "UpdateRequires": "No interruption",
            "AllowedValues": "3...63",
            "CompliantValues": "3...63"
        },
        "ssm.association.s3outputlocation.OutputS3Region": {
            "Minimum": "3",
            "Required": "No",
            "Type": "String",
            "Maximum": "20",
            "UpdateRequires": "No interruption",
            "AllowedValues": "3...20",
            "CompliantValues": "3...20"
        },
        "ssm.association.s3outputlocation.OutputS3KeyPrefix": {
            "Required": "No",
            "Type": "String",
            "Maximum": "500",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "stepfunctions.statemachine.tagsentry.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "stepfunctions.statemachine.tagsentry.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.missionprofile.dataflowedge.Source": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.missionprofile.dataflowedge.Destination": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.patchbaseline.patchfilter.Key": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ssm.patchbaseline.patchfilter.Values": {
            "Required": "No",
            "Maximum": "20",
            "UpdateRequires": "No interruption"
        },
        "acmpca.certificateauthority.revocationconfiguration.CrlConfiguration": {
            "Required": "No",
            "Type": "CrlConfiguration",
            "UpdateRequires": "No interruption"
        },
        "apigateway.stage.accesslogsetting.Format": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.stage.accesslogsetting.DestinationArn": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "fms.policy.policytag.Key": {
            "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "fms.policy.policytag.Value": {
            "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "msk.cluster.cloudwatchlogs.Enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "msk.cluster.cloudwatchlogs.LogGroup": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.database.instance.PerformanceInsightsKMSKeyId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "rds.database.instance.DBName": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "rds.database.instance.MaxAllocatedStorage": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "rds.database.instance.PreferredBackupWindow": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.PreferredMaintenanceWindow": {
            "Required": "No",
            "UpdateRequires": "Some interruptions"
        },
        "rds.database.instance.Port": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "rds.database.instance.DBClusterIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "rds.database.instance.EnableIAMDatabaseAuthentication": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.DBInstanceClass": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.MasterUserPassword": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.UseDefaultProcessorFeatures": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.DeletionProtection": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.BackupRetentionPeriod": {
            "Required": "No",
            "UpdateRequires": "Some interruptions"
        },
        "rds.database.instance.Tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.MonitoringRoleArn": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.Timezone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "rds.database.instance.DeleteAutomatedBackups": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.MonitoringInterval": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "1"
        },
        "rds.database.instance.Engine": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "rds.database.instance.CharacterSetName": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "rds.database.instance.StorageEncrypted": {
            "Required": "No",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.MultiAZ": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Some interruptions",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.DBParameterGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "rds.database.instance.SourceRegion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "rds.database.instance.AllowMajorVersionUpgrade": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.AvailabilityZone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "rds.database.instance.CACertificateIdentifier": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.DBInstanceIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "rds.database.instance.PubliclyAccessible": {
            "Required": "No",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.ProcessorFeatures": {
            "Required": "No",
            "Type": [
                "ProcessorFeature"
            ],
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.EnablePerformanceInsights": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.VPCSecurityGroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.AutoMinorVersionUpgrade": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Some interruptions",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.SourceDBInstanceIdentifier": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "rds.database.instance.EnableCloudwatchLogsExports": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.DBSecurityGroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.Iops": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.OptionGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.database.instance.DBSnapshotIdentifier": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "rds.database.instance.CopyTagsToSnapshot": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.DBSubnetGroupName": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "rds.database.instance.AllocatedStorage": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.database.instance.MasterUsername": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "rds.database.instance.PromotionTier": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.Domain": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.LicenseModel": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.database.instance.StorageType": {
            "Required": "No",
            "UpdateRequires": "Some interruptions"
        },
        "rds.database.instance.DomainIAMRoleName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.database.instance.AssociatedRoles": {
            "Required": "No",
            "Type": [
                "DBInstanceRole"
            ],
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.KmsKeyId": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "rds.database.instance.EngineVersion": {
            "Required": "No",
            "UpdateRequires": "Some interruptions"
        },
        "rds.database.instance.PerformanceInsightsRetentionPeriod": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "iotanalytics.dataset.datasetcontentdeliveryruledestination.IotEventsDestinationConfiguration": {
            "Required": "No",
            "Type": "IotEventsDestinationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.datasetcontentdeliveryruledestination.S3DestinationConfiguration": {
            "Required": "No",
            "Type": "S3DestinationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.applicationsettings.quiettime.Start": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.applicationsettings.quiettime.End": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.putiteminput.TableName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "synthetics.canary.vpcconfig.VpcId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "synthetics.canary.vpcconfig.SecurityGroupIds": {
            "Required": "Yes",
            "Type": "List of String",
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "synthetics.canary.vpcconfig.SubnetIds": {
            "Required": "Yes",
            "Type": "List of String",
            "Maximum": "16",
            "UpdateRequires": "No interruption"
        },
        "directoryservice.simplead.vpcsettings.SubnetIds": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "directoryservice.simplead.vpcsettings.VpcId": {
            "Pattern": "^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.fleetlaunchtemplatespecification.LaunchTemplateName": {
            "Pattern": "[a-zA-Z0-9\\(\\)\\.\\-/_]+",
            "Required": "Conditional",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...128",
            "CompliantValues": "3...128"
        },
        "ec2.spotfleet.fleetlaunchtemplatespecification.Version": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.fleetlaunchtemplatespecification.LaunchTemplateId": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.additionalauthenticationprovider.AuthenticationType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.additionalauthenticationprovider.UserPoolConfig": {
            "Required": "No",
            "Type": "CognitoUserPoolConfig",
            "UpdateRequires": "No interruption"
        },
        "appsync.graphqlapi.additionalauthenticationprovider.OpenIDConnectConfig": {
            "Required": "No",
            "Type": "OpenIDConnectConfig",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.channel.Name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.channel.Next": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.channel.ChannelName": {
            "Pattern": "^[a-zA-Z0-9_]+$",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotevents.detectormodel.sqs.QueueUrl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.sqs.UseBase64": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "iotevents.detectormodel.sqs.Payload": {
            "Required": "No",
            "Type": "Payload",
            "UpdateRequires": "No interruption"
        },
        "appconfig.environment.tags.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appconfig.environment.tags.Key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.notificationconfiguration.config.filter.S3Key": {
            "Required": "Yes",
            "Type": "S3KeyFilter",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.containeraction.Variables": {
            "Required": "No",
            "Type": [
                "Variable"
            ],
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.containeraction.ResourceConfiguration": {
            "Required": "Yes",
            "Type": "ResourceConfiguration",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.containeraction.Image": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.containeraction.ExecutionRoleArn": {
            "Minimum": "20",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "mediastore.container.metricpolicyrule.ObjectGroupName": {
            "Pattern": "[a-zA-Z0-9_]+",
            "Required": "Yes",
            "Maximum": "30",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...30",
            "CompliantValues": "1...30"
        },
        "mediastore.container.metricpolicyrule.ObjectGroup": {
            "Pattern": "/?(?:[A-Za-z0-9_=:\\.\\-\\~\\*]+/){0,10}(?:[A-Za-z0-9_=:\\.\\-\\~\\*]+)?/?",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "900",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...900",
            "CompliantValues": "1...900"
        },
        "codebuild.reportgroup.reportexportconfig.ExportConfigType": {
            "Allowed values": "NO_EXPORT | S3",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.reportgroup.reportexportconfig.S3Destination": {
            "Required": "No",
            "Type": "S3ReportExportConfig",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.SqlType": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.Mapping": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.applicationreferencedatasource.jsonmappingparameters.RecordRowPath": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualrouter.portmapping.Port": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualrouter.portmapping.Protocol": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpoolclient.analyticsconfiguration.RoleArn": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpoolclient.analyticsconfiguration.ExternalId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpoolclient.analyticsconfiguration.ApplicationId": {
            "Pattern": "^[0-9a-fA-F]+$",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpoolclient.analyticsconfiguration.UserDataShared": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "wafv2-rulegroup-singleheader-properties": {
            "Name": {
                "Pattern": ".*\\S.*",
                "Required": "No",
                "Maximum": "64",
                "UpdateRequires": "No interruption",
                "Minimum": "1",
                "Type": "String",
                "AllowedValues": "1...64",
                "CompliantValues": "1...64"
            }
        },
        "wafv2.rulegroup.singleheader.name": {
            "Pattern": ".*\\S.*",
            "Required": "No",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "ec2.launchtemplate.elasticgpuspecification.Type": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "athena.workgroup.tags.Tags": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "lambda.version.provisionedconcurrencyconfiguration.ProvisionedConcurrentExecutions": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.route.httproute.Timeout": {
            "Required": "No",
            "Type": "HttpTimeout",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.httproute.RetryPolicy": {
            "Required": "No",
            "Type": "HttpRetryPolicy",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.httproute.Action": {
            "Required": "Yes",
            "Type": "HttpRouteAction",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.httproute.Match": {
            "Required": "Yes",
            "Type": "HttpRouteMatch",
            "UpdateRequires": "No interruption"
        },
        "glue.job.connectionslist.Connections": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.s3referencedatasource.FileKey": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.s3referencedatasource.BucketARN": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisanalyticsv2.application.parallelismconfiguration.ParallelismPerKPU": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisanalyticsv2.application.parallelismconfiguration.ConfigurationType": {
            "Allowed values": "CUSTOM | DEFAULT",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.parallelismconfiguration.Parallelism": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisanalyticsv2.application.parallelismconfiguration.AutoScalingEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "appsync.resolver.lambdaconflicthandlerconfig.LambdaConflictHandlerArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.rule.awsvpcconfiguration.Subnets": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "events.rule.awsvpcconfiguration.AssignPublicIp": {
            "Allowed values": "DISABLED | ENABLED",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.rule.awsvpcconfiguration.SecurityGroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.scalingrule.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.scalingrule.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.scalingrule.Trigger": {
            "Required": "Yes",
            "Type": "ScalingTrigger",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.scalingrule.Action": {
            "Required": "Yes",
            "Type": "ScalingAction",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskdefinition.taskdefinitionplacementconstraint.Type": {
            "Allowed values": "memberOf",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.taskdefinitionplacementconstraint.Expression": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "mediaconvert.jobtemplate.accelerationsettings.Mode": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.containerproperties.linuxparameters.Devices": {
            "Required": "No",
            "Type": [
                "Device"
            ],
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.parameters.ExcludeBootVolume": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "managedblockchain.node.nodeconfiguration.InstanceType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "managedblockchain.node.nodeconfiguration.AvailabilityZone": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.setvariable.VariableName": {
            "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotevents.detectormodel.setvariable.Value": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "elasticloadbalancingv2.listenerrule.httprequestmethodconfig.Values": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cw.dimension.Name": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cw.dimension.Value": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "s3.bucket.lifecycleconfig.rule.NoncurrentVersionExpirationInDays": {
            "Required": "Conditional",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "s3.bucket.lifecycleconfig.rule.TagFilters": {
            "Required": "No",
            "Type": [
                "TagFilter"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.lifecycleconfig.rule.Transition": {
            "Required": "Conditional",
            "Type": "Transition",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.lifecycleconfig.rule.Id": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.lifecycleconfig.rule.NoncurrentVersionTransition": {
            "Required": "Conditional",
            "Type": "NoncurrentVersionTransition",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.lifecycleconfig.rule.ExpirationDate": {
            "Required": "Conditional",
            "Type": "Timestamp",
            "UpdateRequires": "No interruption",
            "SampleValue": "1970-01-01T01:02:30.070Z"
        },
        "s3.bucket.lifecycleconfig.rule.Prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.lifecycleconfig.rule.Transitions": {
            "Required": "Conditional",
            "Type": [
                "Transition"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.lifecycleconfig.rule.NoncurrentVersionTransitions": {
            "Required": "Conditional",
            "Type": [
                "NoncurrentVersionTransition"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.lifecycleconfig.rule.AbortIncompleteMultipartUpload": {
            "Required": "Conditional",
            "Type": "AbortIncompleteMultipartUpload",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.lifecycleconfig.rule.ExpirationInDays": {
            "Required": "Conditional",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "s3.bucket.lifecycleconfig.rule.Status": {
            "Allowed values": "Disabled | Enabled",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.statementtwos.statementtwos": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-webacl-statementtwos-properties": {
            "StatementTwos": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "greengrass.functiondefinitionversion.resourceaccesspolicy.ResourceId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinitionversion.resourceaccesspolicy.Permission": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.connectordefinitionversion.connector.ConnectorArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.connectordefinitionversion.connector.Parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "Replacement",
            "SampleValue": {
                "todo": "json"
            }
        },
        "greengrass.connectordefinitionversion.connector.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "groundstation.config.antennadownlinkdemoddecodeconfig.DecodeConfig": {
            "Required": "Yes",
            "Type": "DecodeConfig",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.antennadownlinkdemoddecodeconfig.DemodulationConfig": {
            "Required": "Yes",
            "Type": "DemodulationConfig",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.antennadownlinkdemoddecodeconfig.SpectrumConfig": {
            "Required": "Yes",
            "Type": "SpectrumConfig",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.LBCookieStickinessPolicy.PolicyName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.LBCookieStickinessPolicy.CookieExpirationPeriod": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "efs.filesystem.elasticfilesystemtag.Key": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "efs.filesystem.elasticfilesystemtag.Value": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.mediapackageoutputdestinationsettings.ChannelId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.schemaconfiguration.DatabaseName": {
            "Pattern": "^\\S+$",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "kinesisfirehose.deliverystream.schemaconfiguration.VersionId": {
            "Pattern": "^\\S+$",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "kinesisfirehose.deliverystream.schemaconfiguration.Region": {
            "Pattern": "^\\S+$",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "kinesisfirehose.deliverystream.schemaconfiguration.TableName": {
            "Pattern": "^\\S+$",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "kinesisfirehose.deliverystream.schemaconfiguration.RoleARN": {
            "Pattern": "^\\S+$",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "kinesisfirehose.deliverystream.schemaconfiguration.CatalogId": {
            "Pattern": "^\\S+$",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "ec2.instance.ssmassociations.AssociationParameters": {
            "Required": "No",
            "Type": [
                "AssociationParameter"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.instance.ssmassociations.DocumentName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.forwardedvalues.Cookies": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.forwardedvalues.QueryStringCacheKeys": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.forwardedvalues.QueryString": {
            "Required": "Yes",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudfront.distribution.forwardedvalues.Headers": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "sagemaker.endpoint.variantproperty.VariantPropertyType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.deployment.accesslogsetting.DestinationArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.deployment.accesslogsetting.Format": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloud9.environmentec2.repository.RepositoryUrl": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloud9.environmentec2.repository.PathComponent": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot1click.project.devicetemplate.CallbackOverrides": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "iot1click.project.devicetemplate.DeviceType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.tcprouteaction.WeightedTargets": {
            "Required": "Yes",
            "Type": [
                "WeightedTarget"
            ],
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.deployment.revision.githublocation.Repository": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.deployment.revision.githublocation.CommitId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.devicedefinitionversion.device.CertificateArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.devicedefinitionversion.device.ThingArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.devicedefinitionversion.device.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.devicedefinitionversion.device.SyncShadow": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.launchtemplate.launchtemplatedata.Monitoring": {
            "Required": "No",
            "Type": "Monitoring",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.InstanceInitiatedShutdownBehavior": {
            "Allowed values": "stop | terminate",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.HibernationOptions": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.InstanceMarketOptions": {
            "Required": "No",
            "Type": "InstanceMarketOptions",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.ElasticGpuSpecifications": {
            "Required": "No",
            "Type": [
                "ElasticGpuSpecification"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.RamDiskId": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.NetworkInterfaces": {
            "Required": "No",
            "Type": [
                "NetworkInterface"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.Placement": {
            "Required": "No",
            "Type": "Placement",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.KeyName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.MetadataOptions": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.BlockDeviceMappings": {
            "Required": "No",
            "Type": [
                "BlockDeviceMapping"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.DisableApiTermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.launchtemplate.launchtemplatedata.ElasticInferenceAccelerators": {
            "Required": "No",
            "Type": [
                "LaunchTemplateElasticInferenceAccelerator"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.TagSpecifications": {
            "Required": "No",
            "Type": [
                "TagSpecification"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.SecurityGroupIds": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.UserData": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.InstanceType": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.CpuOptions": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.KernelId": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.CapacityReservationSpecification": {
            "Required": "No",
            "Type": "CapacityReservationSpecification",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.LicenseSpecifications": {
            "Required": "No",
            "Type": [
                "LicenseSpecification"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.EbsOptimized": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.launchtemplate.launchtemplatedata.CreditSpecification": {
            "Required": "No",
            "Type": "CreditSpecification",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.IamInstanceProfile": {
            "Required": "No",
            "Type": "IamInstanceProfile",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.SecurityGroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.ImageId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.instance.ElasticGpuSpecifications": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.KernelId": {
            "Required": "No",
            "UpdateRequires": "Some interruptions"
        },
        "ec2.instance.LaunchTemplate": {
            "Required": "No",
            "Type": "LaunchTemplateSpecification",
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.AvailabilityZone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.instance.CpuOptions": {
            "Required": "No",
            "Type": "CpuOptions",
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.DisableApiTermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.instance.InstanceType": {
            "Required": "No",
            "UpdateRequires": "Some interruptions"
        },
        "ec2.instance.SecurityGroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.SourceDestCheck": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.instance.NetworkInterfaces": {
            "Required": "No",
            "Type": [
                "NetworkInterface"
            ],
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.HostResourceGroupArn": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.SecurityGroupIds": {
            "Required": "Conditional",
            "Type": "List of String",
            "UpdateRequires": "Some interruptions"
        },
        "ec2.instance.Monitoring": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.instance.Ipv6AddressCount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ec2.instance.ImageId": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.instance.Affinity": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "ec2.instance.PlacementGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.instance.Ipv6Addresses": {
            "Required": "No",
            "Type": [
                "InstanceIpv6Address"
            ],
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.LicenseSpecifications": {
            "Required": "No",
            "Type": [
                "LicenseSpecification"
            ],
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.HibernationOptions": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.ElasticInferenceAccelerators": {
            "Required": "No",
            "Type": [
                "ElasticInferenceAccelerator"
            ],
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.BlockDeviceMappings": {
            "Required": "No",
            "Type": [
                "BlockDeviceMapping"
            ],
            "UpdateRequires": "Some interruptions"
        },
        "ec2.instance.HostId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "ec2.instance.KeyName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.instance.RamdiskId": {
            "Required": "No",
            "UpdateRequires": "Some interruptions"
        },
        "ec2.instance.PrivateIpAddress": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.instance.IamInstanceProfile": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.instance.AdditionalInfo": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "ec2.instance.SubnetId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.instance.UserData": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "ec2.instance.Tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.instance.Tenancy": {
            "Allowed values": "dedicated | default | host",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "ec2.instance.InstanceInitiatedShutdownBehavior": {
            "Allowed values": "stop | terminate",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.instance.Volumes": {
            "Required": "No",
            "Type": [
                "Volume"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.instance.SsmAssociations": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.instance.CreditSpecification": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.instance.EbsOptimized": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Some interruptions",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.spend.Amount": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "budgets.budget.spend.Unit": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "w6408ab1c19c15c15c27c23b7.Parameters": {
            "Required": "No",
            "Type": "List of String values"
        },
        "w6408ab1c19c15c15c27c23b7.Label": {
            "Required": "No",
            "Type": "AWS CloudFormation interface label"
        },
        "medialive.channel.scte20sourcesettings.Source608ChannelNumber": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "medialive.channel.scte20sourcesettings.Convert608To708": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dynamodb.table.pointintimerecoveryspecification.PointInTimeRecoveryEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.taskset.loadbalancer.LoadBalancerName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskset.loadbalancer.TargetGroupArn": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskset.loadbalancer.ContainerPort": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskset.loadbalancer.ContainerName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "cloudfront.streamingdistribution.logging.Bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.streamingdistribution.logging.Enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudfront.streamingdistribution.logging.Prefix": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.segment.setdimension.Values": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.setdimension.DimensionType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.step.keyvalue.Key": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "10280",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10280",
            "CompliantValues": "0...10280"
        },
        "elasticmapreduce.step.keyvalue.Value": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "10280",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10280",
            "CompliantValues": "0...10280"
        },
        "wafv2-rulegroup-countrycodes-properties": {
            "CountryCodes": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "wafv2.rulegroup.countrycodes.countrycodes": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "ecs.cluster.capacityproviderstrategyitem.CapacityProvider": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.cluster.capacityproviderstrategyitem.Base": {
            "Minimum": "0",
            "Required": "No",
            "Maximum": "100000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...100000",
            "CompliantValues": "0...100000"
        },
        "ecs.cluster.capacityproviderstrategyitem.Weight": {
            "Minimum": "0",
            "Required": "No",
            "Maximum": "1000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...1000",
            "CompliantValues": "0...1000"
        },
        "wafregional.rule.predicate.Negated": {
            "Required": "Yes",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "wafregional.rule.predicate.DataId": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafregional.rule.predicate.Type": {
            "Allowed values": "ByteMatch | GeoMatch | IPMatch | RegexMatch | SizeConstraint | SqlInjectionMatch | XssMatch",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.accessloggingpolicy.S3BucketPrefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.accessloggingpolicy.Enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.elb.accessloggingpolicy.EmitInterval": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.elb.accessloggingpolicy.S3BucketName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.api.bodys3location.Bucket": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.api.bodys3location.Version": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.api.bodys3location.Etag": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.api.bodys3location.Key": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.ioteventsdestinationconfiguration.RoleArn": {
            "Minimum": "20",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "iotanalytics.dataset.ioteventsdestinationconfiguration.InputName": {
            "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "lambda.layerversion.content.S3Key": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "lambda.layerversion.content.S3Bucket": {
            "Pattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
            "Required": "Yes",
            "Maximum": "63",
            "UpdateRequires": "Replacement",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...63",
            "CompliantValues": "3...63"
        },
        "lambda.layerversion.content.S3ObjectVersion": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "robomaker.simulationapplication.robotsoftwaresuite.Version": {
            "Allowed values": "Dashing | Kinetic | Melodic",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "robomaker.simulationapplication.robotsoftwaresuite.Name": {
            "Allowed values": "ROS | ROS2",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.dataflowendpointgroup.endpointdetails.DataflowEndpoint": {
            "Required": "No",
            "Type": "DataflowEndpoint",
            "UpdateRequires": "No interruption"
        },
        "groundstation.dataflowendpointgroup.endpointdetails.SecurityDetails": {
            "Required": "No",
            "Type": "SecurityDetails",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.lambda.Payload": {
            "Required": "No",
            "Type": "Payload",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.lambda.FunctionArn": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "appmesh.virtualnode.accesslog.File": {
            "Required": "No",
            "Type": "FileAccessLog",
            "UpdateRequires": "No interruption"
        },
        "batch.computeenvironment.computeresources.InstanceTypes": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "batch.computeenvironment.computeresources.AllocationStrategy": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "batch.computeenvironment.computeresources.LaunchTemplate": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "batch.computeenvironment.computeresources.Type": {
            "Allowed values": "EC2 | SPOT",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "batch.computeenvironment.computeresources.MinvCpus": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "batch.computeenvironment.computeresources.PlacementGroup": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "batch.computeenvironment.computeresources.SpotIamFleetRole": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "batch.computeenvironment.computeresources.ImageId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "batch.computeenvironment.computeresources.BidPercentage": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "batch.computeenvironment.computeresources.DesiredvCpus": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "batch.computeenvironment.computeresources.Ec2KeyPair": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "batch.computeenvironment.computeresources.MaxvCpus": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "batch.computeenvironment.computeresources.Tags": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "Replacement",
            "SampleValue": {
                "todo": "json"
            }
        },
        "batch.computeenvironment.computeresources.Subnets": {
            "Required": "Yes",
            "UpdateRequires": "Replacement"
        },
        "batch.computeenvironment.computeresources.SecurityGroupIds": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "batch.computeenvironment.computeresources.InstanceRole": {
            "Required": "Yes",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.volumesfrom.SourceContainer": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.volumesfrom.ReadOnly": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "lambda.function.code.S3Bucket": {
            "Pattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
            "Required": "Conditional",
            "Maximum": "63",
            "UpdateRequires": "No interruption",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...63",
            "CompliantValues": "3...63"
        },
        "lambda.function.code.ZipFile": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "lambda.function.code.S3ObjectVersion": {
            "Minimum": "1",
            "Required": "Conditional",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "lambda.function.code.S3Key": {
            "Minimum": "1",
            "Required": "Conditional",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "elasticloadbalancingv2.listenerrule.fixedresponseconfig.StatusCode": {
            "Pattern": "^(2|4|5)\\d\\d$",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.fixedresponseconfig.ContentType": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...32",
            "CompliantValues": "0...32"
        },
        "elasticloadbalancingv2.listenerrule.fixedresponseconfig.MessageBody": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...1024",
            "CompliantValues": "0...1024"
        },
        "ecs.service.awsvpcconfiguration.SecurityGroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ecs.service.awsvpcconfiguration.AssignPublicIp": {
            "Allowed values": "DISABLED | ENABLED",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.service.awsvpcconfiguration.Subnets": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.Subnets": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Some interruptions"
        },
        "ec2.elb.ConnectionDrainingPolicy": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.Instances": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.SecurityGroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.AccessLoggingPolicy": {
            "Required": "No",
            "Type": "AccessLoggingPolicy",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.CrossZone": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.elb.LBCookieStickinessPolicy": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.Tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.Policies": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.ConnectionSettings": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.Scheme": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.elb.LoadBalancerName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.elb.HealthCheck": {
            "Required": "No",
            "Type": "HealthCheck",
            "UpdateRequires": "Some interruptions"
        },
        "ec2.elb.AppCookieStickinessPolicy": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.AvailabilityZones": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Some interruptions"
        },
        "ec2.elb.Listeners": {
            "Required": "Yes",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.licensespecification.LicenseConfigurationArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.analyticsconfiguration.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.analyticsconfiguration.TagFilters": {
            "Required": "No",
            "Type": [
                "TagFilter"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.analyticsconfiguration.StorageClassAnalysis": {
            "Required": "Yes",
            "Type": "StorageClassAnalysis",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.analyticsconfiguration.Prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "workspaces.workspace.workspaceproperties.RootVolumeSizeGib": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "workspaces.workspace.workspaceproperties.ComputeTypeName": {
            "Allowed values": "GRAPHICS | GRAPHICSPRO | PERFORMANCE | POWER | POWERPRO | STANDARD | VALUE",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "workspaces.workspace.workspaceproperties.UserVolumeSizeGib": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "workspaces.workspace.workspaceproperties.RunningMode": {
            "Allowed values": "ALWAYS_ON | AUTO_STOP",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "workspaces.workspace.workspaceproperties.RunningModeAutoStopTimeoutInMinutes": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualnode.backenddefaults.ClientPolicy": {
            "Required": "No",
            "Type": "ClientPolicy",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.assetpropertyvalue.Quality": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.assetpropertyvalue.Value": {
            "Required": "No",
            "Type": "AssetPropertyVariant",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.assetpropertyvalue.Timestamp": {
            "Required": "No",
            "Type": "AssetPropertyTimestamp",
            "UpdateRequires": "No interruption"
        },
        "glue.trigger.notificationproperty.NotifyDelayAfter": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "greengrass.loggerdefinition.logger.Space": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "greengrass.loggerdefinition.logger.Level": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.loggerdefinition.logger.Component": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.loggerdefinition.logger.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.loggerdefinition.logger.Type": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.bytematchstatement.TextTransformations": {
            "Required": "Yes",
            "Type": [
                "TextTransformation"
            ],
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.bytematchstatement.SearchString": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.bytematchstatement.SearchStringBase64": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.bytematchstatement.FieldToMatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.bytematchstatement.PositionalConstraint": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "lambda.eventinvokeconfig.destinationconfig.onsuccess.Destination": {
            "Pattern": "^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
            "Required": "Yes",
            "Maximum": "350",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...350",
            "CompliantValues": "0...350"
        },
        "fsx.filesystem.lustreconfiguration.ImportPath": {
            "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{3,4357}$",
            "Required": "No",
            "Maximum": "900",
            "UpdateRequires": "Replacement",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...900",
            "CompliantValues": "3...900"
        },
        "fsx.filesystem.lustreconfiguration.ExportPath": {
            "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{3,4357}$",
            "Required": "No",
            "Maximum": "900",
            "UpdateRequires": "Replacement",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...900",
            "CompliantValues": "3...900"
        },
        "fsx.filesystem.lustreconfiguration.WeeklyMaintenanceStartTime": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "fsx.filesystem.lustreconfiguration.PerUnitStorageThroughput": {
            "Minimum": "50",
            "Required": "Conditional",
            "Type": "Integer",
            "Maximum": "200",
            "UpdateRequires": "Replacement",
            "AllowedValues": "50...200",
            "CompliantValues": "50...200"
        },
        "fsx.filesystem.lustreconfiguration.CopyTagsToBackups": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "fsx.filesystem.lustreconfiguration.DailyAutomaticBackupStartTime": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "fsx.filesystem.lustreconfiguration.DeploymentType": {
            "Allowed values": "PERSISTENT_1 | SCRATCH_1 | SCRATCH_2",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "fsx.filesystem.lustreconfiguration.AutomaticBackupRetentionDays": {
            "Minimum": "0",
            "Required": "No",
            "Maximum": "35",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...35",
            "CompliantValues": "0...35"
        },
        "fsx.filesystem.lustreconfiguration.ImportedFileChunkSize": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "512000",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...512000",
            "CompliantValues": "1...512000"
        },
        "elasticloadbalancingv2.listener.authenticatecognitoconfig.OnUnauthenticatedRequest": {
            "Allowed values": "allow | authenticate | deny",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticatecognitoconfig.SessionTimeout": {
            "Required": "No",
            "Type": "Long",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.4"
        },
        "elasticloadbalancingv2.listener.authenticatecognitoconfig.SessionCookieName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticatecognitoconfig.UserPoolClientId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticatecognitoconfig.AuthenticationRequestExtraParams": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listener.authenticatecognitoconfig.UserPoolDomain": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticatecognitoconfig.UserPoolArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticatecognitoconfig.Scope": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.embeddedsourcesettings.Scte20Detection": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.embeddedsourcesettings.Convert608To708": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.embeddedsourcesettings.Source608ChannelNumber": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "medialive.channel.embeddedsourcesettings.Source608TrackNumber": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticbeanstalk.application.applicationresourcelifecycleconfig.VersionLifecycleConfig": {
            "Required": "No",
            "Type": "ApplicationVersionLifecycleConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticbeanstalk.application.applicationresourcelifecycleconfig.ServiceRole": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.metrics.Status": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.metrics.EventThreshold": {
            "Required": "Yes",
            "Type": "ReplicationTimeValue",
            "UpdateRequires": "No interruption"
        },
        "elasticbeanstalk.configurationtemplate.configurationoptionsetting.ResourceName": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "elasticbeanstalk.configurationtemplate.configurationoptionsetting.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticbeanstalk.configurationtemplate.configurationoptionsetting.OptionName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticbeanstalk.configurationtemplate.configurationoptionsetting.Namespace": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.rules.rules": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-webacl-rules-properties": {
            "Rules": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "lakeformation.permissions.datalakeprincipal.DataLakePrincipalIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.instance.elasticgpuspecification.Type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.ioteventsaction.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.ioteventsaction.MessageId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.ioteventsaction.InputName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "as.notificationconfigurations.TopicARN": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1600",
            "CompliantValues": "1...1600"
        },
        "as.notificationconfigurations.NotificationTypes": {
            "Type": "List of String",
            "Required": "No",
            "Allowed Values": "+  `autoscaling:EC2_INSTANCE_LAUNCH` \n+  `autoscaling:EC2_INSTANCE_LAUNCH_ERROR` \n+  `autoscaling:EC2_INSTANCE_TERMINATE` \n+  `autoscaling:EC2_INSTANCE_TERMINATE_ERROR` \n+  `autoscaling:TEST_NOTIFICATION",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "+  `autoscaling:EC2_INSTANCE_LAUNCH` \n+  `autoscaling:EC2_INSTANCE_LAUNCH_ERROR` \n+  `autoscaling:EC2_INSTANCE_TERMINATE` \n+  `autoscaling:EC2_INSTANCE_TERMINATE_ERROR` \n+  `autoscaling:TEST_NOTIFICATION"
            ],
            "SampleValue": "+  `autoscaling:EC2_INSTANCE_LAUNCH` \n+  `autoscaling:EC2_INSTANCE_LAUNCH_ERROR` \n+  `autoscaling:EC2_INSTANCE_TERMINATE` \n+  `autoscaling:EC2_INSTANCE_TERMINATE_ERROR` \n+  `autoscaling:TEST_NOTIFICATION",
            "CompliantValues": [
                "+  `autoscaling:EC2_INSTANCE_LAUNCH` \n+  `autoscaling:EC2_INSTANCE_LAUNCH_ERROR` \n+  `autoscaling:EC2_INSTANCE_TERMINATE` \n+  `autoscaling:EC2_INSTANCE_TERMINATE_ERROR` \n+  `autoscaling:TEST_NOTIFICATION"
            ]
        },
        "appmesh.virtualnode.virtualservicebackend.ClientPolicy": {
            "Required": "No",
            "Type": "ClientPolicy",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.virtualservicebackend.VirtualServiceName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.scalingconstraints.MaxCapacity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.scalingconstraints.MinCapacity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cloudfront.distribution.lambdafunctionassociation.EventType": {
            "Allowed values": "origin-request | origin-response | viewer-request | viewer-response",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.lambdafunctionassociation.IncludeBody": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudfront.distribution.lambdafunctionassociation.LambdaFunctionARN": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.stack.applicationsettings.SettingsGroup": {
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.stack.applicationsettings.Enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.optiongroup.optionconfigurations.OptionName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.optiongroup.optionconfigurations.OptionVersion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.optiongroup.optionconfigurations.Port": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "rds.optiongroup.optionconfigurations.DBSecurityGroupMemberships": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "rds.optiongroup.optionconfigurations.VpcSecurityGroupMemberships": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "rds.optiongroup.optionconfigurations.OptionSettings": {
            "Required": "No",
            "Type": [
                "OptionSetting"
            ],
            "UpdateRequires": "No interruption"
        },
        "glue.trigger.condition.JobName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.trigger.condition.CrawlerName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.trigger.condition.CrawlState": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.trigger.condition.State": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.trigger.condition.LogicalOperator": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecr.repository.lifecyclepolicy.RegistryId": {
            "Pattern": "[0-9]{12}",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecr.repository.lifecyclepolicy.LifecyclePolicyText": {
            "Minimum": "100",
            "Required": "No",
            "Type": "String",
            "Maximum": "30720",
            "UpdateRequires": "No interruption",
            "AllowedValues": "100...30720",
            "CompliantValues": "100...30720"
        },
        "cloudfront.distribution.origingroupfailovercriteria.StatusCodes": {
            "Required": "Yes",
            "Type": "StatusCodes",
            "UpdateRequires": "No interruption"
        },
        "iot.provisioningtemplate.provisioninghook.TargetArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.provisioningtemplate.provisioninghook.PayloadVersion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.rule.Enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ses.receiptrule.rule.ScanEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ses.receiptrule.rule.Actions": {
            "Required": "No",
            "Type": [
                "Action"
            ],
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.rule.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.rule.Recipients": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.rule.TlsPolicy": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.tmpfs.MountOptions": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.tmpfs.ContainerPath": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.tmpfs.Size": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.kernelcapabilities.Add": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.kernelcapabilities.Drop": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "simpledb.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.stack.accessendpoint.EndpointType": {
            "Allowed values": "STREAMING",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.stack.accessendpoint.VpceId": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.network.interface.privateipspec.1.Primary": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.network.interface.privateipspec.1.PrivateIpAddress": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.policy.InstancePorts": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.policy.PolicyType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.policy.PolicyName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.policy.LoadBalancerPorts": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.policy.Attributes": {
            "Required": "Yes",
            "Type": "List of Json",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.cloudwatchlogsconfig.StreamName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.cloudwatchlogsconfig.Status": {
            "Allowed values": "DISABLED | ENABLED",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.cloudwatchlogsconfig.GroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "managedblockchain.member.networkframeworkconfiguration.NetworkFabricConfiguration": {
            "Required": "No",
            "Type": "NetworkFabricConfiguration",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.dynamodbv2.Payload": {
            "Required": "No",
            "Type": "Payload",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.dynamodbv2.TableName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "globalaccelerator.listener.portrange.FromPort": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "Maximum": "65535",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...65535",
            "CompliantValues": "1...65535"
        },
        "globalaccelerator.listener.portrange.ToPort": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "Maximum": "65535",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...65535",
            "CompliantValues": "1...65535"
        },
        "codebuild.project.buildstatusconfig.Context": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.buildstatusconfig.TargetUrl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "mediastore.container.metricpolicy.MetricPolicyRules": {
            "Required": "No",
            "Type": [
                "MetricPolicyRule"
            ],
            "Maximum": "300",
            "UpdateRequires": "No interruption"
        },
        "mediastore.container.metricpolicy.ContainerLevelMetrics": {
            "Allowed values": "DISABLED | ENABLED",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.device.ContainerPath": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.device.Permissions": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.device.HostPath": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.logging.AccessLog": {
            "Required": "No",
            "Type": "AccessLog",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.math.Name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.math.Attribute": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "iotanalytics.pipeline.math.Math": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "iotanalytics.pipeline.math.Next": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "backup.backupplan.backupruleresourcetype.RecoveryPointTags": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "backup.backupplan.backupruleresourcetype.CompletionWindowMinutes": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "backup.backupplan.backupruleresourcetype.StartWindowMinutes": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "backup.backupplan.backupruleresourcetype.ScheduleExpression": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "backup.backupplan.backupruleresourcetype.TargetBackupVault": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "backup.backupplan.backupruleresourcetype.Lifecycle": {
            "Required": "No",
            "Type": "LifecycleResourceType",
            "UpdateRequires": "No interruption"
        },
        "backup.backupplan.backupruleresourcetype.RuleName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "backup.backupplan.backupruleresourcetype.CopyActions": {
            "Required": "No",
            "Type": [
                "CopyActionResourceType"
            ],
            "UpdateRequires": "No interruption"
        },
        "appstream.directoryconfig.serviceaccountcredentials.AccountPassword": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "127",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...127",
            "CompliantValues": "1...127"
        },
        "appstream.directoryconfig.serviceaccountcredentials.AccountName": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypool.cognitostreams.StreamName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypool.cognitostreams.RoleArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypool.cognitostreams.StreamingStatus": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.loadbalancersconfig.ClassicLoadBalancersConfig": {
            "Required": "No",
            "Type": "ClassicLoadBalancersConfig",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.loadbalancersconfig.TargetGroupsConfig": {
            "Required": "No",
            "Type": "TargetGroupsConfig",
            "UpdateRequires": "No interruption"
        },
        "waitcondition.Timeout": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waitcondition.Count": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "waitcondition.Handle": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.statuscodes.Items": {
            "Required": "Yes",
            "Type": "List of Integer",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.statuscodes.Quantity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.blockdev.template.VolumeSize": {
            "Required": "Conditional",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.blockdev.template.KmsKeyId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.blockdev.template.SnapshotId": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.blockdev.template.Encrypted": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.blockdev.template.DeleteOnTermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.blockdev.template.VolumeType": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.blockdev.template.Iops": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.DataTraceEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigateway.deployment.stagedescription.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.deployment.stagedescription.ClientCertificateId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.deployment.stagedescription.ThrottlingRateLimit": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.CachingEnabled": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigateway.deployment.stagedescription.TracingEnabled": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigateway.deployment.stagedescription.CacheDataEncrypted": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigateway.deployment.stagedescription.Variables": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.LoggingLevel": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.AccessLogSetting": {
            "Required": "No",
            "Type": "AccessLogSetting",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.CanarySetting": {
            "Required": "No",
            "Type": "CanarySetting",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.MethodSettings": {
            "Required": "No",
            "Type": [
                "MethodSetting"
            ],
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.CacheTtlInSeconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apigateway.deployment.stagedescription.CacheClusterSize": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.deployment.stagedescription.CacheClusterEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigateway.deployment.stagedescription.ThrottlingBurstLimit": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.DocumentationVersion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.deployment.stagedescription.Tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.MetricsEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.elb.connectionsettings.IdleTimeout": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "Maximum": "3600",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...3600",
            "CompliantValues": "1...3600"
        },
        "apigateway.usageplan.quotasettings.Offset": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apigateway.usageplan.quotasettings.Limit": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apigateway.usageplan.quotasettings.Period": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ecs.service.serviceregistry.Port": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.service.serviceregistry.ContainerName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.service.serviceregistry.RegistryArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.service.serviceregistry.ContainerPort": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "iot.thing.attributepayload.Attributes": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.DnsIps": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "2",
            "UpdateRequires": "No interruption"
        },
        "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.UserName": {
            "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{1,256}$",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.FileSystemAdministratorsGroup": {
            "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{1,256}$",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.OrganizationalUnitDistinguishedName": {
            "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{1,2000}$",
            "Required": "No",
            "Maximum": "2000",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2000",
            "CompliantValues": "1...2000"
        },
        "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.Password": {
            "Pattern": "^.{1,256}$",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.DomainName": {
            "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{1,255}$",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "ec2.localgatewayroutetablevpcassociation.tags.Tags": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "budgets.budget.notificationwithsubscribers.Notification": {
            "Required": "Yes",
            "Type": "Notification",
            "UpdateRequires": "No interruption"
        },
        "budgets.budget.notificationwithsubscribers.Subscribers": {
            "Required": "Yes",
            "Type": [
                "Subscriber"
            ],
            "Maximum": "11",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.sns.Payload": {
            "Required": "No",
            "Type": "Payload",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.sns.TargetArn": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "ec2.capacityreservation.tag.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.capacityreservation.tag.key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.trafficmirrorfilterrule.trafficmirrorportrange.ToPort": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.trafficmirrorfilterrule.trafficmirrorportrange.FromPort": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.security.group.rule.1.Description": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.security.group.rule.1.SourceSecurityGroupOwnerId": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.1.FromPort": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.security.group.rule.1.SourceSecurityGroupId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.1.SourceSecurityGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.1.CidrIpv6": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.1.SourcePrefixListId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.1.IpProtocol": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.1.ToPort": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.security.group.rule.1.CidrIp": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.schedule.EndTime": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.schedule.TimeZone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.schedule.IsLocalTime": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "pinpoint.campaign.schedule.Frequency": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.schedule.StartTime": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.schedule.EventFilter": {
            "Required": "No",
            "Type": "CampaignEventFilter",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.schedule.QuietTime": {
            "Required": "No",
            "Type": "QuietTime",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskset.awsvpcconfiguration.SecurityGroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskset.awsvpcconfiguration.AssignPublicIp": {
            "Allowed values": "DISABLED | ENABLED",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskset.awsvpcconfiguration.Subnets": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "sqs.queues.DelaySeconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "sqs.queues.MessageRetentionPeriod": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "sqs.queues.ContentBasedDeduplication": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "sqs.queues.ReceiveMessageWaitTimeSeconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "sqs.queues.QueueName": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "sqs.queues.RedrivePolicy": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "sqs.queues.KmsMasterKeyId": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "sqs.queues.VisibilityTimeout": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "sqs.queues.FifoQueue": {
            "Required": "No",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "sqs.queues.KmsDataKeyReusePeriodSeconds": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "sqs.queues.MaximumMessageSize": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "sqs.queues.Tags": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.iaminstanceprofile.Arn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.authorizer.jwtconfiguration.Audience": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "apigatewayv2.authorizer.jwtconfiguration.Issuer": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "as.launchconfig.blockdev.mapping.DeviceName": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.launchconfig.blockdev.mapping.NoDevice": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "as.launchconfig.blockdev.mapping.Ebs": {
            "Required": "No",
            "Type": "BlockDevice",
            "UpdateRequires": "No interruption"
        },
        "as.launchconfig.blockdev.mapping.VirtualName": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "batch.jobdefinition.volumes.Host": {
            "Required": "No",
            "Type": "VolumesHost",
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.volumes.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticsearch.domain.ebsoptions.Iops": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticsearch.domain.ebsoptions.EBSEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticsearch.domain.ebsoptions.VolumeType": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "elasticsearch.domain.ebsoptions.VolumeSize": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "emr.cluster.configuration.Classification": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "emr.cluster.configuration.Configurations": {
            "Required": "No",
            "Type": [
                "Configuration"
            ],
            "UpdateRequires": "Replacement"
        },
        "emr.cluster.configuration.ConfigurationProperties": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "Replacement"
        },
        "networkmanager.device.location.Longitude": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "networkmanager.device.location.Address": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "networkmanager.device.location.Latitude": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.targetgroupstickinessconfig.Enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticloadbalancingv2.listener.targetgroupstickinessconfig.DurationSeconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "amazonmq.configurationassociation.configurationid.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.configurationassociation.configurationid.Revision": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cloudfront.distribution.customoriginconfig.OriginReadTimeout": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.customoriginconfig.OriginSSLProtocols": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.customoriginconfig.HTTPSPort": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cloudfront.distribution.customoriginconfig.OriginKeepaliveTimeout": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.customoriginconfig.HTTPPort": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cloudfront.distribution.customoriginconfig.OriginProtocolPolicy": {
            "Allowed values": "http-only | https-only | match-viewer",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "datapipeline.pipeline.parameterobjects.attributes.StringValue": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "10240",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10240",
            "CompliantValues": "0...10240"
        },
        "datapipeline.pipeline.parameterobjects.attributes.Key": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "cassandra.table.column.ColumnName": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cassandra.table.column.ColumnType": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "ecs.service.deploymentconfiguration.MaximumPercent": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ecs.service.deploymentconfiguration.MinimumHealthyPercent": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "wafv2-rulegroup-taglist-properties": {
            "TagList": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "wafv2.rulegroup.taglist.taglist": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.trigger.schedule.ScheduleExpression": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.taskset.scale.Unit": {
            "Allowed values": "PERCENT",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.taskset.scale.Value": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "wafv2.webacl.andstatementtwo.Statements": {
            "Required": "Yes",
            "Type": [
                "StatementThree"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listener.forwardconfig.TargetGroups": {
            "Required": "No",
            "Type": [
                "TargetGroupTuple"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listener.forwardconfig.TargetGroupStickinessConfig": {
            "Required": "No",
            "Type": "TargetGroupStickinessConfig",
            "UpdateRequires": "No interruption"
        },
        "ec2.instance.elasticinferenceaccelerator.Type": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.instance.elasticinferenceaccelerator.Count": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appstream.stack.usersetting.Permission": {
            "Allowed values": "DISABLED | ENABLED",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.stack.usersetting.Action": {
            "Allowed values": "CLIPBOARD_COPY_FROM_LOCAL_DEVICE | CLIPBOARD_COPY_TO_LOCAL_DEVICE | FILE_DOWNLOAD | FILE_UPLOAD | PRINTING_TO_LOCAL_DEVICE",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.notstatementtwo.Statement": {
            "Required": "Yes",
            "Type": "StatementThree",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.andstatementone.Statements": {
            "Required": "Yes",
            "Type": [
                "StatementTwo"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.lifecycleconfig.Rules": {
            "Required": "Yes",
            "Type": [
                "Rule"
            ],
            "UpdateRequires": "No interruption"
        },
        "glue.table.order.Column": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.order.SortOrder": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cloudfront.distribution.origingroup.Id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.origingroup.FailoverCriteria": {
            "Required": "Yes",
            "Type": "OriginGroupFailoverCriteria",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origingroup.Members": {
            "Required": "Yes",
            "Type": "OriginGroupMembers",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.querystringkeyvalue.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.querystringkeyvalue.Key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.eventbuspolicy.condition.Type": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.eventbuspolicy.condition.Key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.eventbuspolicy.condition.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "sns.subscription.Endpoint": {
            "Required": "Yes",
            "UpdateRequires": "Replacement"
        },
        "sns.subscription.Protocol": {
            "Required": "Yes",
            "UpdateRequires": "Replacement"
        },
        "iam.accesskey.UserName": {
            "Pattern": "[\\w+=,.@-]+",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iam.accesskey.Serial": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "iam.accesskey.Status": {
            "Allowed values": "Active | Inactive",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.autoscalingpolicy.Constraints": {
            "Required": "Yes",
            "Type": "ScalingConstraints",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.instancegroupconfig.autoscalingpolicy.Rules": {
            "Required": "Yes",
            "Type": [
                "ScalingRule"
            ],
            "UpdateRequires": "No interruption"
        },
        "route53.hostedzone.hostedzoneconfig.Comment": {
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.stepconfig.HadoopJarStep": {
            "Required": "Yes",
            "Type": "HadoopJarStepConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.stepconfig.Name": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.stepconfig.ActionOnFailure": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.versioningconfiguration.MaxVersions": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "1000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1000",
            "CompliantValues": "1...1000"
        },
        "iotanalytics.dataset.versioningconfiguration.Unlimited": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.versioningconfig.Status": {
            "Allowed values": "Enabled | Suspended",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.regexpatternsetreferencestatement.Arn": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "wafv2.rulegroup.regexpatternsetreferencestatement.FieldToMatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.regexpatternsetreferencestatement.TextTransformations": {
            "Required": "Yes",
            "Type": [
                "TextTransformation"
            ],
            "UpdateRequires": "No interruption"
        },
        "ecs.taskdefinition.containerdependency.Condition": {
            "Allowed values": "COMPLETE | HEALTHY | START | SUCCESS",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdependency.ContainerName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.privateipadd.PrivateIpAddress": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.privateipadd.Primary": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "iot.topicrule.assetpropertyvariant.IntegerValue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.assetpropertyvariant.StringValue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.assetpropertyvariant.DoubleValue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.assetpropertyvariant.BooleanValue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "globalaccelerator.endpointgroup.endpointconfiguration.Weight": {
            "Minimum": "0",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...255",
            "CompliantValues": "0...255"
        },
        "globalaccelerator.endpointgroup.endpointconfiguration.ClientIPPreservationEnabled": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "globalaccelerator.endpointgroup.endpointconfiguration.EndpointId": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waf.sizeconstraintset.sizeconstraint.fieldtomatch.Data": {
            "Pattern": ".*\\S.*",
            "Required": "Conditional",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "waf.sizeconstraintset.sizeconstraint.fieldtomatch.Type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "elasticache.security.group.Description": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waf.rule.predicates.Type": {
            "Allowed values": "ByteMatch | GeoMatch | IPMatch | RegexMatch | SizeConstraint | SqlInjectionMatch | XssMatch",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waf.rule.predicates.DataId": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "waf.rule.predicates.Negated": {
            "Required": "Yes",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "datapipeline.pipeline.pipelineobjects.Name": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\n\\t]*",
            "Required": "Yes",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "datapipeline.pipeline.pipelineobjects.Id": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\n\\t]*",
            "Required": "Yes",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "datapipeline.pipeline.pipelineobjects.Fields": {
            "Required": "Yes",
            "Type": [
                "Field"
            ],
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.attributedimension.AttributeType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.attributedimension.Values": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.restrictions.GeoRestriction": {
            "Required": "Yes",
            "Type": "GeoRestriction",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolriskconfigurationattachment.riskexceptionconfigurationtype.BlockedIPRangeList": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "20",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolriskconfigurationattachment.riskexceptionconfigurationtype.SkippedIPRangeList": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "20",
            "UpdateRequires": "No interruption"
        },
        "opsworks.layer.loadbasedautoscaling.UpScaling": {
            "Required": "No",
            "Type": "AutoScalingThresholds",
            "UpdateRequires": "No interruption"
        },
        "opsworks.layer.loadbasedautoscaling.DownScaling": {
            "Required": "No",
            "Type": "AutoScalingThresholds",
            "UpdateRequires": "No interruption"
        },
        "opsworks.layer.loadbasedautoscaling.Enable": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "iotanalytics.pipeline.deviceregistryenrich.ThingName": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "iotanalytics.pipeline.deviceregistryenrich.Next": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.deviceregistryenrich.Attribute": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "iotanalytics.pipeline.deviceregistryenrich.Name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.deviceregistryenrich.RoleArn": {
            "Minimum": "20",
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "ecs.taskdefinition.volumes.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.volumes.DockerVolumeConfiguration": {
            "Required": "No",
            "Type": "DockerVolumeConfiguration",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.volumes.Host": {
            "Required": "No",
            "Type": "HostVolumeProperties",
            "UpdateRequires": "Replacement"
        },
        "waf.xssmatchset.xssmatchtuple.TextTransformation": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "waf.xssmatchset.xssmatchtuple.FieldToMatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.networkinputsettings.ServerValidation": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.networkinputsettings.HlsInputSettings": {
            "Required": "No",
            "Type": "HlsInputSettings",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.canarysetting.UseStageCache": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigateway.deployment.canarysetting.StageVariableOverrides": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.canarysetting.PercentTraffic": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "eventschemas.schema.tagsentry.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "eventschemas.schema.tagsentry.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.httpauthorization.Sigv4": {
            "Required": "No",
            "Type": "SigV4Authorization",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskdefinition.containerdefinitions.StartTimeout": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.ReadonlyRootFilesystem": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.taskdefinition.containerdefinitions.ResourceRequirements": {
            "Required": "No",
            "Type": [
                "ResourceRequirement"
            ],
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.Image": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.Essential": {
            "Required": "No",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.taskdefinition.containerdefinitions.Interactive": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.taskdefinition.containerdefinitions.LogConfiguration": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.User": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.FirelensConfiguration": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.Privileged": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.taskdefinition.containerdefinitions.Ulimits": {
            "Required": "No",
            "Type": [
                "Ulimit"
            ],
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.MemoryReservation": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.containerdefinitions.StopTimeout": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.EntryPoint": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.Secrets": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.Links": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.SystemControls": {
            "Required": "No",
            "Type": [
                "SystemControl"
            ],
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.HealthCheck": {
            "Required": "No",
            "Type": "HealthCheck",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.DisableNetworking": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.taskdefinition.containerdefinitions.DockerLabels": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.Environment": {
            "Required": "No",
            "Type": [
                "KeyValuePair"
            ],
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.DockerSecurityOptions": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.RepositoryCredentials": {
            "Required": "No",
            "Type": "RepositoryCredentials",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.Memory": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.containerdefinitions.LinuxParameters": {
            "Required": "No",
            "Type": "LinuxParameters",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.PortMappings": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.MountPoints": {
            "Required": "No",
            "Type": [
                "MountPoint"
            ],
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.PseudoTerminal": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.taskdefinition.containerdefinitions.WorkingDirectory": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.DependsOn": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.ExtraHosts": {
            "Required": "No",
            "Type": [
                "HostEntry"
            ],
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.DnsSearchDomains": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.Command": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.VolumesFrom": {
            "Required": "No",
            "Type": [
                "VolumeFrom"
            ],
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.Cpu": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.Hostname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.DnsServers": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "amplify.app.autobranchcreationconfig.Stage": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amplify.app.autobranchcreationconfig.EnableAutoBuild": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "amplify.app.autobranchcreationconfig.BuildSpec": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amplify.app.autobranchcreationconfig.AutoBranchCreationPatterns": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "amplify.app.autobranchcreationconfig.EnvironmentVariables": {
            "Required": "No",
            "Type": [
                "EnvironmentVariable"
            ],
            "UpdateRequires": "No interruption"
        },
        "amplify.app.autobranchcreationconfig.BasicAuthConfig": {
            "Required": "No",
            "Type": "BasicAuthConfig",
            "UpdateRequires": "No interruption"
        },
        "amplify.app.autobranchcreationconfig.EnableAutoBranchCreation": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "amplify.app.autobranchcreationconfig.EnablePullRequestPreview": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "amplify.app.autobranchcreationconfig.PullRequestEnvironmentName": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "fms.policy.resourcetag.Value": {
            "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "fms.policy.resourcetag.Key": {
            "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "cognito.identitypool.cognitoidentityprovider.ClientId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypool.cognitoidentityprovider.ServerSideTokenCheck": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cognito.identitypool.cognitoidentityprovider.ProviderName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.lifecycleconfig.rule.transition.TransitionDate": {
            "Required": "Conditional",
            "Type": "Timestamp",
            "UpdateRequires": "No interruption",
            "SampleValue": "1970-01-01T01:02:30.070Z"
        },
        "s3.bucket.lifecycleconfig.rule.transition.StorageClass": {
            "Allowed values": "DEEP_ARCHIVE | GLACIER | INTELLIGENT_TIERING | ONEZONE_IA | STANDARD_IA",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.lifecycleconfig.rule.transition.TransitionInDays": {
            "Required": "Conditional",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.eip.association.EIP": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "ec2.eip.association.PrivateIpAddress": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.eip.association.AllocationId": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "ec2.eip.association.InstanceId": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "ec2.eip.association.NetworkInterfaceId": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.application.Args": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.application.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.application.Version": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.application.AdditionalInfo": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.Sns": {
            "Required": "No",
            "Type": "Sns",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.SetVariable": {
            "Required": "No",
            "Type": "SetVariable",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.IotSiteWise": {
            "Required": "No",
            "Type": "IotSiteWise",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.DynamoDB": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.Firehose": {
            "Required": "No",
            "Type": "Firehose",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.ResetTimer": {
            "Required": "No",
            "Type": "ResetTimer",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.Lambda": {
            "Required": "No",
            "Type": "Lambda",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.DynamoDBv2": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.SetTimer": {
            "Required": "No",
            "Type": "SetTimer",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.IotEvents": {
            "Required": "No",
            "Type": "IotEvents",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.IotTopicPublish": {
            "Required": "No",
            "Type": "IotTopicPublish",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.Sqs": {
            "Required": "No",
            "Type": "Sqs",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.ClearTimer": {
            "Required": "No",
            "Type": "ClearTimer",
            "UpdateRequires": "No interruption"
        },
        "ssm.association.target.Key": {
            "Pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$|resource-groups:ResourceTypeFilters|resource-groups:Name",
            "Required": "Yes",
            "Maximum": "163",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...163",
            "CompliantValues": "1...163"
        },
        "ssm.association.target.Values": {
            "Required": "Yes",
            "Type": "List of String",
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskdefinition.healthcheck.Command": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.healthcheck.Retries": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.healthcheck.StartPeriod": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.healthcheck.Timeout": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.healthcheck.Interval": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "medialive.channel.multiplexprogramchanneldestinationsettings.MultiplexId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.multiplexprogramchanneldestinationsettings.ProgramName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.orstatementone.Statements": {
            "Required": "Yes",
            "Type": [
                "StatementTwo"
            ],
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.backend.VirtualService": {
            "Required": "No",
            "Type": "VirtualServiceBackend",
            "UpdateRequires": "No interruption"
        },
        "glue.datacatalogencryptionsettings.encryptionatrest.CatalogEncryptionMode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.datacatalogencryptionsettings.encryptionatrest.SseAwsKmsKeyId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.config.frequency.Value": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "groundstation.config.frequency.Units": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.artifactstoremap.ArtifactStore": {
            "Required": "Conditional",
            "Type": "ArtifactStore",
            "UpdateRequires": "No interruption"
        },
        "codepipeline.pipeline.artifactstoremap.Region": {
            "Minimum": "4",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "30",
            "UpdateRequires": "No interruption",
            "AllowedValues": "4...30",
            "CompliantValues": "4...30"
        },
        "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.FileKey": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.BucketARN": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.ReferenceRoleARN": {
            "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "events.rule.runcommandparameters.RunCommandTargets": {
            "Required": "Yes",
            "Type": [
                "RunCommandTarget"
            ],
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.instancegroupconfig.scalingaction.SimpleScalingPolicyConfiguration": {
            "Required": "Yes",
            "Type": "SimpleScalingPolicyConfiguration",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.instancegroupconfig.scalingaction.Market": {
            "Allowed values": "ON_DEMAND | SPOT",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.scte27sourcesettings.Pid": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.instance.instanceipv6address.Ipv6Address": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waf.webacl.rules.Action": {
            "Required": "No",
            "Type": "WafAction",
            "UpdateRequires": "No interruption"
        },
        "waf.webacl.rules.RuleId": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "waf.webacl.rules.Priority": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "efs.accesspoint.rootdirectory.CreationInfo": {
            "Required": "No",
            "Type": "CreationInfo",
            "UpdateRequires": "Replacement"
        },
        "efs.accesspoint.rootdirectory.Path": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "datapipeline.pipeline.parametervalues.Id": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "datapipeline.pipeline.parametervalues.StringValue": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "10240",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10240",
            "CompliantValues": "0...10240"
        },
        "pinpoint.campaign.limits.Total": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "pinpoint.campaign.limits.MessagesPerSecond": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "pinpoint.campaign.limits.MaximumDuration": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "pinpoint.campaign.limits.Daily": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "medialive.channel.outputdestinationsettings.Username": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.outputdestinationsettings.StreamName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.outputdestinationsettings.PasswordParam": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.outputdestinationsettings.Url": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.stages.actions.RoleArn": {
            "Pattern": "arn:aws(-[\\w]+)*:iam::[0-9]{12}:role/.*",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.stages.actions.Namespace": {
            "Pattern": "[A-Za-z0-9@\\-_]+",
            "Required": "No",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "codepipeline.pipeline.stages.actions.ActionTypeId": {
            "Required": "Yes",
            "Type": "ActionTypeId",
            "UpdateRequires": "No interruption"
        },
        "codepipeline.pipeline.stages.actions.OutputArtifacts": {
            "Required": "No",
            "Type": [
                "OutputArtifact"
            ],
            "UpdateRequires": "No interruption"
        },
        "codepipeline.pipeline.stages.actions.Name": {
            "Pattern": "[A-Za-z0-9.@\\-_]+",
            "Required": "Yes",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "codepipeline.pipeline.stages.actions.Region": {
            "Minimum": "4",
            "Required": "No",
            "Type": "String",
            "Maximum": "30",
            "UpdateRequires": "No interruption",
            "AllowedValues": "4...30",
            "CompliantValues": "4...30"
        },
        "codepipeline.pipeline.stages.actions.InputArtifacts": {
            "Required": "No",
            "Type": [
                "InputArtifact"
            ],
            "UpdateRequires": "No interruption"
        },
        "codepipeline.pipeline.stages.actions.RunOrder": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "999",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...999",
            "CompliantValues": "1...999"
        },
        "codepipeline.pipeline.stages.actions.Configuration": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.inputparallelism.Count": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "iotevents.detectormodel.onexit.Events": {
            "Required": "No",
            "Type": [
                "Event"
            ],
            "UpdateRequires": "No interruption"
        },
        "ses.receiptfilter.filter.IpFilter": {
            "Required": "Yes",
            "Type": "IpFilter",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptfilter.filter.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.S3BackupConfiguration": {
            "Required": "No",
            "Type": "S3DestinationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.S3BackupMode": {
            "Allowed values": "Disabled | Enabled",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.CopyCommand": {
            "Required": "Yes",
            "Type": "CopyCommand",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.ProcessingConfiguration": {
            "Required": "No",
            "Type": "ProcessingConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.ClusterJDBCURL": {
            "Pattern": "jdbc:(redshift|postgresql)://((?!-)[A-Za-z0-9-]{1,63}(?<!-)\\.)+redshift\\.([a-zA-Z0-9\\.]+):\\d{1,5}/[a-zA-Z0-9_$]+",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.RetryOptions": {
            "Required": "No",
            "Type": "RedshiftRetryOptions",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.CloudWatchLoggingOptions": {
            "Required": "No",
            "Type": "CloudWatchLoggingOptions",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.RoleARN": {
            "Pattern": "arn:.*",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.S3Configuration": {
            "Required": "Yes",
            "Type": "S3DestinationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.Username": {
            "Pattern": ".*",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.Password": {
            "Pattern": ".*",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "6",
            "Type": "String",
            "AllowedValues": "6...512",
            "CompliantValues": "6...512"
        },
        "ec2.network.interface.privateipspec.PrivateIpAddress": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.network.interface.privateipspec.Primary": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "route53.hostedzone.queryloggingconfig.CloudWatchLogsLogGroupArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.secretsmanagersecretresourcedata.AdditionalStagingLabelsToDownload": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinitionversion.secretsmanagersecretresourcedata.ARN": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "appmesh.route.tagref.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.tagref.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "stepfunctions.activity.tagsentry.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "stepfunctions.activity.tagsentry.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.segment.segmentdimensions.behavior.recency.RecencyType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.segment.segmentdimensions.behavior.recency.Duration": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.campaignemailmessage.Title": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.campaignemailmessage.FromAddress": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.campaignemailmessage.Body": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.campaignemailmessage.HtmlBody": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalabletarget.scheduledaction.EndTime": {
            "Required": "No",
            "Type": "Timestamp",
            "UpdateRequires": "No interruption",
            "SampleValue": "1970-01-01T01:02:30.070Z"
        },
        "applicationautoscaling.scalabletarget.scheduledaction.StartTime": {
            "Required": "No",
            "Type": "Timestamp",
            "UpdateRequires": "No interruption",
            "SampleValue": "1970-01-01T01:02:30.070Z"
        },
        "applicationautoscaling.scalabletarget.scheduledaction.Schedule": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1600",
            "CompliantValues": "1...1600"
        },
        "applicationautoscaling.scalabletarget.scheduledaction.ScalableTargetAction": {
            "Required": "No",
            "Type": "ScalableTargetAction",
            "UpdateRequires": "No interruption"
        },
        "applicationautoscaling.scalabletarget.scheduledaction.ScheduledActionName": {
            "Pattern": "(?!((^[ ]+.*)|(.*([\\u0000-\\u001f]|[\\u007f-\\u009f]|[:/|])+.*)|(.*[ ]+$))).+",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "ecs.service.deploymentcontroller.Type": {
            "Type": "String",
            "Required": "No",
            "Allowed Values": "ECS` \\| `EXTERNAL",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "ECS` \\| `EXTERNAL"
            ],
            "SampleValue": "ECS` \\| `EXTERNAL",
            "CompliantValues": [
                "ECS` \\| `EXTERNAL"
            ]
        },
        "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.SageMakerJobArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.DestinationPath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.OwnerSetting": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "batch.jobdefinition.nodeproperties.MainNode": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "batch.jobdefinition.nodeproperties.NumNodes": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "batch.jobdefinition.nodeproperties.NodeRangeProperties": {
            "Required": "Yes",
            "Type": [
                "NodeRangeProperty"
            ],
            "UpdateRequires": "No interruption"
        },
        "wafregional.sizeconstraintset.sizeconstraint.FieldToMatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafregional.sizeconstraintset.sizeconstraint.TextTransformation": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "wafregional.sizeconstraintset.sizeconstraint.ComparisonOperator": {
            "ComparisonOperator`  <a name=\"cfn-wafregional-sizeconstraintset-sizeconstraint-comparisonoperator\"></a>\nThe type of comparison you want AWS WAF to perform\\. AWS WAF uses this in combination with the provided `Size` and `FieldToMatch` to build an expression in the form of \"`Size` `ComparisonOperator` size in bytes of `FieldToMatch`\"\\. If that expression is true, the `SizeConstraint` is considered to match\\.  \n **EQ*": "Used to test if the `Size` is equal to the size of the `FieldToMatch`   \n **NE*",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "Allowed values": "EQ | GE | GT | LE | LT | NE",
            "SampleValue": "example-string"
        },
        "wafregional.sizeconstraintset.sizeconstraint.Size": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "config.remediationconfiguration.remediationparametervalue.StaticValue": {
            "Required": "No",
            "Type": "StaticValue",
            "UpdateRequires": "No interruption"
        },
        "config.remediationconfiguration.remediationparametervalue.ResourceValue": {
            "Required": "No",
            "Type": "ResourceValue",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origingroupmembers.Quantity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cloudfront.distribution.origingroupmembers.Items": {
            "Required": "Yes",
            "Type": [
                "OriginGroupMember"
            ],
            "Maximum": "2",
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.loadbalancerinfo.ElbInfoList": {
            "Required": "No",
            "Type": [
                "ELBInfo"
            ],
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.loadbalancerinfo.TargetGroupInfoList": {
            "Required": "Conditional",
            "Type": [
                "TargetGroupInfo"
            ],
            "UpdateRequires": "No interruption"
        },
        "codepipeline.pipeline.stages.actions.outputartifacts.Name": {
            "Pattern": "[a-zA-Z0-9_\\-]+",
            "Required": "Yes",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.securitygroups.GroupId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.listenertlsfilecertificate.CertificateChain": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.listenertlsfilecertificate.PrivateKey": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.artifactstore.Type": {
            "Allowed values": "S3",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.artifactstore.Location": {
            "Pattern": "[a-zA-Z0-9\\-\\.]+",
            "Required": "Yes",
            "Maximum": "63",
            "UpdateRequires": "No interruption",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...63",
            "CompliantValues": "3...63"
        },
        "codepipeline.pipeline.artifactstore.EncryptionKey": {
            "Required": "No",
            "Type": "EncryptionKey",
            "UpdateRequires": "No interruption"
        },
        "elasticsearch.domain.elasticsearchclusterconfig.DedicatedMasterCount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticsearch.domain.elasticsearchclusterconfig.ZoneAwarenessConfig": {
            "Required": "No",
            "Type": "ZoneAwarenessConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticsearch.domain.elasticsearchclusterconfig.DedicatedMasterEnabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticsearch.domain.elasticsearchclusterconfig.InstanceType": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "elasticsearch.domain.elasticsearchclusterconfig.InstanceCount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticsearch.domain.elasticsearchclusterconfig.ZoneAwarenessEnabled": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticsearch.domain.elasticsearchclusterconfig.DedicatedMasterType": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "lambda.eventinvokeconfig.destinationconfig.OnSuccess": {
            "Required": "No",
            "Type": "OnSuccess",
            "UpdateRequires": "No interruption"
        },
        "lambda.eventinvokeconfig.destinationconfig.OnFailure": {
            "Required": "No",
            "Type": "OnFailure",
            "UpdateRequires": "No interruption"
        },
        "greengrass.resourcedefinition.secretsmanagersecretresourcedata.AdditionalStagingLabelsToDownload": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinition.secretsmanagersecretresourcedata.ARN": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.scriptbootstrapactionconfig.Args": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.scriptbootstrapactionconfig.Path": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "10280",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10280",
            "CompliantValues": "0...10280"
        },
        "apigateway.stage.canarysetting.PercentTraffic": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "apigateway.stage.canarysetting.DeploymentId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.stage.canarysetting.StageVariableOverrides": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "apigateway.stage.canarysetting.UseStageCache": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticmapreduce.cluster.spotprovisioningspecification.TimeoutDurationMinutes": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.spotprovisioningspecification.TimeoutAction": {
            "Allowed values": "SWITCH_TO_ON_DEMAND | TERMINATE_CLUSTER",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.spotprovisioningspecification.BlockDurationMinutes": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "config.organizationconfigrule.organizationcustomrulemetadata.TagValueScope": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "config.organizationconfigrule.organizationcustomrulemetadata.ResourceIdScope": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "768",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...768",
            "CompliantValues": "1...768"
        },
        "config.organizationconfigrule.organizationcustomrulemetadata.TagKeyScope": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "config.organizationconfigrule.organizationcustomrulemetadata.Description": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "config.organizationconfigrule.organizationcustomrulemetadata.LambdaFunctionArn": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "config.organizationconfigrule.organizationcustomrulemetadata.MaximumExecutionFrequency": {
            "Allowed values": "One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "config.organizationconfigrule.organizationcustomrulemetadata.OrganizationConfigRuleTriggerTypes": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "config.organizationconfigrule.organizationcustomrulemetadata.InputParameters": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "config.organizationconfigrule.organizationcustomrulemetadata.ResourceTypesScope": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "100",
            "UpdateRequires": "No interruption"
        },
        "opsworks.stack.chefconfiguration.BerkshelfVersion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.chefconfiguration.ManageBerkshelf": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.objectlockconfiguration.Rule": {
            "Required": "No",
            "Type": "ObjectLockRule",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.objectlockconfiguration.ObjectLockEnabled": {
            "Allowed values": "Enabled",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.script.s3location.Key": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.script.s3location.ObjectVersion": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.script.s3location.Bucket": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.script.s3location.RoleArn": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.healthcheck.Protocol": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.healthcheck.HealthyThreshold": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualnode.healthcheck.TimeoutMillis": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualnode.healthcheck.Path": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.healthcheck.UnhealthyThreshold": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualnode.healthcheck.Port": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualnode.healthcheck.IntervalMillis": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "glue.crawler.dynamodbtarget.Path": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.variable.outputfileurivalue.FileName": {
            "Pattern": "[\\w\\.-]{1,255}",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waf.bytematchset.bytematchtuples.TargetString": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "waf.bytematchset.bytematchtuples.FieldToMatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "waf.bytematchset.bytematchtuples.TargetStringBase64": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waf.bytematchset.bytematchtuples.TextTransformation": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "waf.bytematchset.bytematchtuples.PositionalConstraint": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.flinkapplicationconfiguration.MonitoringConfiguration": {
            "Required": "No",
            "Type": "MonitoringConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.flinkapplicationconfiguration.ParallelismConfiguration": {
            "Required": "No",
            "Type": "ParallelismConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.flinkapplicationconfiguration.CheckpointConfiguration": {
            "Required": "No",
            "Type": "CheckpointConfiguration",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.workmailaction.TopicArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.workmailaction.OrganizationArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.defaultretention.Days": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "s3.bucket.defaultretention.Mode": {
            "Allowed values": "COMPLIANCE | GOVERNANCE",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.defaultretention.Years": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "config.configurationaggregator.organizationaggregationsource.AwsRegions": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "config.configurationaggregator.organizationaggregationsource.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "config.configurationaggregator.organizationaggregationsource.AllAwsRegions": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "managedblockchain.member.memberframeworkconfiguration.MemberFabricConfiguration": {
            "Required": "No",
            "Type": "MemberFabricConfiguration",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskdefinition.containerdefinitions.ulimit.HardLimit": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.containerdefinitions.ulimit.SoftLimit": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.containerdefinitions.ulimit.Name": {
            "Allowed values": "core | cpu | data | fsize | locks | memlock | msgqueue | nice | nofile | nproc | rss | rtprio | rttime | sigpending | stack",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.network.iface.embedded.DeviceIndex": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.network.iface.embedded.PrivateIpAddress": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.network.iface.embedded.DeleteOnTermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.network.iface.embedded.SecondaryPrivateIpAddressCount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.network.iface.embedded.Ipv6AddressCount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.network.iface.embedded.NetworkInterfaceId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.network.iface.embedded.GroupSet": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.network.iface.embedded.PrivateIpAddresses": {
            "Required": "No",
            "Type": [
                "PrivateIpAddressSpecification"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.network.iface.embedded.Ipv6Addresses": {
            "Required": "No",
            "Type": [
                "InstanceIpv6Address"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.network.iface.embedded.SubnetId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.network.iface.embedded.AssociatePublicIpAddress": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.network.iface.embedded.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "lambda.eventinvokeconfig.destinationconfig.onfailure.Destination": {
            "Pattern": "^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
            "Required": "Yes",
            "Maximum": "350",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...350",
            "CompliantValues": "0...350"
        },
        "msk.cluster.nodeexporter.EnabledInBroker": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigateway.restapi.s3location.Version": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.restapi.s3location.Bucket": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.restapi.s3location.ETag": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.restapi.s3location.Key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.source.1.SshKey": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "opsworks.stack.source.1.Url": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.source.1.Password": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "opsworks.stack.source.1.Type": {
            "Allowed values": "archive | git | s3 | svn",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.source.1.Username": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.source.1.Revision": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.tlsvalidationcontextacmtrust.CertificateAuthorityArns": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "msk.cluster.prometheus.JmxExporter": {
            "Required": "No",
            "Type": "JmxExporter",
            "UpdateRequires": "No interruption"
        },
        "msk.cluster.prometheus.NodeExporter": {
            "Required": "No",
            "Type": "NodeExporter",
            "UpdateRequires": "No interruption"
        }
    },
    "Docs2Resource": {
        "aws-iot-certificate": "AWS::IoT::Certificate",
        "aws-iot-policy": "AWS::IoT::Policy",
        "aws-iot-policyprincipalattachment": "AWS::IoT::PolicyPrincipalAttachment",
        "aws-iot-provisioningtemplate": "AWS::IoT::ProvisioningTemplate",
        "aws-iot-thing": "AWS::IoT::Thing",
        "aws-iot-thingprincipalattachment": "AWS::IoT::ThingPrincipalAttachment",
        "aws-iot-topicrule": "AWS::IoT::TopicRule",
        "aws-directoryservice-microsoftad": "AWS::DirectoryService::MicrosoftAD",
        "aws-directoryservice-simplead": "AWS::DirectoryService::SimpleAD",
        "aws-msk-cluster": "AWS::MSK::Cluster",
        "aws-rds-dbcluster": "AWS::RDS::DBCluster",
        "aws-rds-dbclusterparametergroup": "AWS::RDS::DBClusterParameterGroup",
        "aws-rds-dbinstance": "AWS::RDS::DBInstance",
        "aws-rds-dbparametergroup": "AWS::RDS::DBParameterGroup",
        "aws-rds-dbproxy": "AWS::RDS::DBProxy",
        "aws-rds-dbproxytargetgroup": "AWS::RDS::DBProxyTargetGroup",
        "aws-rds-dbsecuritygroup": "AWS::RDS::DBSecurityGroup",
        "aws-rds-dbsecuritygroupingress": "AWS::RDS::DBSecurityGroupIngress",
        "aws-rds-dbsubnetgroup": "AWS::RDS::DBSubnetGroup",
        "aws-rds-eventsubscription": "AWS::RDS::EventSubscription",
        "aws-rds-optiongroup": "AWS::RDS::OptionGroup",
        "aws-efs-accesspoint": "AWS::EFS::AccessPoint",
        "aws-efs-filesystem": "AWS::EFS::FileSystem",
        "aws-efs-mounttarget": "AWS::EFS::MountTarget",
        "aws-dynamodb-table": "AWS::DynamoDB::Table",
        "aws-mediaconvert-jobtemplate": "AWS::MediaConvert::JobTemplate",
        "aws-mediaconvert-preset": "AWS::MediaConvert::Preset",
        "aws-mediaconvert-queue": "AWS::MediaConvert::Queue",
        "aws-datapipeline-pipeline": "AWS::DataPipeline::Pipeline",
        "aws-macie-customdataidentifier": "AWS::Macie::CustomDataIdentifier",
        "aws-macie-findingsfilter": "AWS::Macie::FindingsFilter",
        "aws-macie-session": "AWS::Macie::Session",
        "aws-cloud9-environmentec2": "AWS::Cloud9::EnvironmentEC2",
        "aws-managedblockchain-member": "AWS::ManagedBlockchain::Member",
        "aws-managedblockchain-node": "AWS::ManagedBlockchain::Node",
        "aws-resourcegroups-group": "AWS::ResourceGroups::Group",
        "aws-transfer-server": "AWS::Transfer::Server",
        "aws-transfer-user": "AWS::Transfer::User",
        "aws-globalaccelerator-accelerator": "AWS::GlobalAccelerator::Accelerator",
        "aws-globalaccelerator-endpointgroup": "AWS::GlobalAccelerator::EndpointGroup",
        "aws-globalaccelerator-listener": "AWS::GlobalAccelerator::Listener",
        "aws-acmpca-certificate": "AWS::ACMPCA::Certificate",
        "aws-acmpca-certificateauthority": "AWS::ACMPCA::CertificateAuthority",
        "aws-acmpca-certificateauthorityactivation": "AWS::ACMPCA::CertificateAuthorityActivation",
        "aws-accessanalyzer-analyzer": "AWS::AccessAnalyzer::Analyzer",
        "aws-batch-computeenvironment": "AWS::Batch::ComputeEnvironment",
        "aws-batch-jobdefinition": "AWS::Batch::JobDefinition",
        "aws-batch-jobqueue": "AWS::Batch::JobQueue",
        "aws-route53-healthcheck": "AWS::Route53::HealthCheck",
        "aws-route53-hostedzone": "AWS::Route53::HostedZone",
        "aws-route53-recordset": "AWS::Route53::RecordSet",
        "aws-route53-recordsetgroup": "AWS::Route53::RecordSetGroup",
        "aws-backup-backupplan": "AWS::Backup::BackupPlan",
        "aws-backup-backupselection": "AWS::Backup::BackupSelection",
        "aws-backup-backupvault": "AWS::Backup::BackupVault",
        "aws-cloudformation-customresource": "AWS::CloudFormation::CustomResource",
        "aws-cloudformation-macro": "AWS::CloudFormation::Macro",
        "aws-cloudformation-stack": "AWS::CloudFormation::Stack",
        "aws-cloudformation-waitcondition": "AWS::CloudFormation::WaitCondition",
        "aws-cloudformation-waitconditionhandle": "AWS::CloudFormation::WaitConditionHandle",
        "aws-securityhub-hub": "AWS::SecurityHub::Hub",
        "aws-dlm-lifecyclepolicy": "AWS::DLM::LifecyclePolicy",
        "aws-guardduty-detector": "AWS::GuardDuty::Detector",
        "aws-guardduty-filter": "AWS::GuardDuty::Filter",
        "aws-guardduty-ipset": "AWS::GuardDuty::IPSet",
        "aws-guardduty-master": "AWS::GuardDuty::Master",
        "aws-guardduty-member": "AWS::GuardDuty::Member",
        "aws-guardduty-threatintelset": "AWS::GuardDuty::ThreatIntelSet",
        "aws-pinpointemail-configurationset": "AWS::PinpointEmail::ConfigurationSet",
        "aws-pinpointemail-configurationseteventdestination": "AWS::PinpointEmail::ConfigurationSetEventDestination",
        "aws-pinpointemail-dedicatedippool": "AWS::PinpointEmail::DedicatedIpPool",
        "aws-pinpointemail-identity": "AWS::PinpointEmail::Identity",
        "aws-synthetics-canary": "AWS::Synthetics::Canary",
        "aws-chatbot-slackchannelconfiguration": "AWS::Chatbot::SlackChannelConfiguration",
        "aws-redshift-cluster": "AWS::Redshift::Cluster",
        "aws-redshift-clusterparametergroup": "AWS::Redshift::ClusterParameterGroup",
        "aws-redshift-clustersecuritygroup": "AWS::Redshift::ClusterSecurityGroup",
        "aws-redshift-clustersecuritygroupingress": "AWS::Redshift::ClusterSecurityGroupIngress",
        "aws-redshift-clustersubnetgroup": "AWS::Redshift::ClusterSubnetGroup",
        "aws-cloudtrail-trail": "AWS::CloudTrail::Trail",
        "aws-gamelift-alias": "AWS::GameLift::Alias",
        "aws-gamelift-build": "AWS::GameLift::Build",
        "aws-gamelift-fleet": "AWS::GameLift::Fleet",
        "aws-gamelift-gamesessionqueue": "AWS::GameLift::GameSessionQueue",
        "aws-gamelift-matchmakingconfiguration": "AWS::GameLift::MatchmakingConfiguration",
        "aws-gamelift-matchmakingruleset": "AWS::GameLift::MatchmakingRuleSet",
        "aws-gamelift-script": "AWS::GameLift::Script",
        "aws-elasticloadbalancingv2-listener": "AWS::ElasticLoadBalancingV2::Listener",
        "aws-elasticloadbalancingv2-listenercertificate": "AWS::ElasticLoadBalancingV2::ListenerCertificate",
        "aws-elasticloadbalancingv2-listenerrule": "AWS::ElasticLoadBalancingV2::ListenerRule",
        "aws-elasticloadbalancingv2-loadbalancer": "AWS::ElasticLoadBalancingV2::LoadBalancer",
        "aws-elasticloadbalancingv2-targetgroup": "AWS::ElasticLoadBalancingV2::TargetGroup",
        "aws-apigatewayv2-api": "AWS::ApiGatewayV2::Api",
        "aws-apigatewayv2-apigatewaymanagedoverrides": "AWS::ApiGatewayV2::ApiGatewayManagedOverrides",
        "aws-apigatewayv2-apimapping": "AWS::ApiGatewayV2::ApiMapping",
        "aws-apigatewayv2-authorizer": "AWS::ApiGatewayV2::Authorizer",
        "aws-apigatewayv2-deployment": "AWS::ApiGatewayV2::Deployment",
        "aws-apigatewayv2-domainname": "AWS::ApiGatewayV2::DomainName",
        "aws-apigatewayv2-integration": "AWS::ApiGatewayV2::Integration",
        "aws-apigatewayv2-integrationresponse": "AWS::ApiGatewayV2::IntegrationResponse",
        "aws-apigatewayv2-model": "AWS::ApiGatewayV2::Model",
        "aws-apigatewayv2-route": "AWS::ApiGatewayV2::Route",
        "aws-apigatewayv2-routeresponse": "AWS::ApiGatewayV2::RouteResponse",
        "aws-apigatewayv2-stage": "AWS::ApiGatewayV2::Stage",
        "aws-apigatewayv2-vpclink": "AWS::ApiGatewayV2::VpcLink",
        "aws-elasticloadbalancing-loadbalancer": "AWS::ElasticLoadBalancing::LoadBalancer",
        "aws-mediastore-container": "AWS::MediaStore::Container",
        "aws-ssm-association": "AWS::SSM::Association",
        "aws-ssm-document": "AWS::SSM::Document",
        "aws-ssm-maintenancewindow": "AWS::SSM::MaintenanceWindow",
        "aws-ssm-maintenancewindowtarget": "AWS::SSM::MaintenanceWindowTarget",
        "aws-ssm-maintenancewindowtask": "AWS::SSM::MaintenanceWindowTask",
        "aws-ssm-parameter": "AWS::SSM::Parameter",
        "aws-ssm-patchbaseline": "AWS::SSM::PatchBaseline",
        "aws-ssm-resourcedatasync": "AWS::SSM::ResourceDataSync",
        "aws-elasticbeanstalk-application": "AWS::ElasticBeanstalk::Application",
        "aws-elasticbeanstalk-applicationversion": "AWS::ElasticBeanstalk::ApplicationVersion",
        "aws-elasticbeanstalk-configurationtemplate": "AWS::ElasticBeanstalk::ConfigurationTemplate",
        "aws-elasticbeanstalk-environment": "AWS::ElasticBeanstalk::Environment",
        "aws-ce-costcategory": "AWS::CE::CostCategory",
        "aws-iotanalytics-channel": "AWS::IoTAnalytics::Channel",
        "aws-iotanalytics-dataset": "AWS::IoTAnalytics::Dataset",
        "aws-iotanalytics-datastore": "AWS::IoTAnalytics::Datastore",
        "aws-iotanalytics-pipeline": "AWS::IoTAnalytics::Pipeline",
        "aws-codecommit-repository": "AWS::CodeCommit::Repository",
        "aws-inspector-assessmenttarget": "AWS::Inspector::AssessmentTarget",
        "aws-inspector-assessmenttemplate": "AWS::Inspector::AssessmentTemplate",
        "aws-inspector-resourcegroup": "AWS::Inspector::ResourceGroup",
        "aws-kinesisanalyticsv2-application": "AWS::KinesisAnalyticsV2::Application",
        "aws-kinesisanalyticsv2-applicationcloudwatchloggingoption": "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption",
        "aws-kinesisanalyticsv2-applicationoutput": "AWS::KinesisAnalyticsV2::ApplicationOutput",
        "aws-kinesisanalyticsv2-applicationreferencedatasource": "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource",
        "aws-greengrass-connectordefinition": "AWS::Greengrass::ConnectorDefinition",
        "aws-greengrass-connectordefinitionversion": "AWS::Greengrass::ConnectorDefinitionVersion",
        "aws-greengrass-coredefinition": "AWS::Greengrass::CoreDefinition",
        "aws-greengrass-coredefinitionversion": "AWS::Greengrass::CoreDefinitionVersion",
        "aws-greengrass-devicedefinition": "AWS::Greengrass::DeviceDefinition",
        "aws-greengrass-devicedefinitionversion": "AWS::Greengrass::DeviceDefinitionVersion",
        "aws-greengrass-functiondefinition": "AWS::Greengrass::FunctionDefinition",
        "aws-greengrass-functiondefinitionversion": "AWS::Greengrass::FunctionDefinitionVersion",
        "aws-greengrass-group": "AWS::Greengrass::Group",
        "aws-greengrass-groupversion": "AWS::Greengrass::GroupVersion",
        "aws-greengrass-loggerdefinition": "AWS::Greengrass::LoggerDefinition",
        "aws-greengrass-loggerdefinitionversion": "AWS::Greengrass::LoggerDefinitionVersion",
        "aws-greengrass-resourcedefinition": "AWS::Greengrass::ResourceDefinition",
        "aws-greengrass-resourcedefinitionversion": "AWS::Greengrass::ResourceDefinitionVersion",
        "aws-greengrass-subscriptiondefinition": "AWS::Greengrass::SubscriptionDefinition",
        "aws-greengrass-subscriptiondefinitionversion": "AWS::Greengrass::SubscriptionDefinitionVersion",
        "aws-amazonmq-broker": "AWS::AmazonMQ::Broker",
        "aws-amazonmq-configuration": "AWS::AmazonMQ::Configuration",
        "aws-amazonmq-configurationassociation": "AWS::AmazonMQ::ConfigurationAssociation",
        "aws-sqs-queue": "AWS::SQS::Queue",
        "aws-sqs-queuepolicy": "AWS::SQS::QueuePolicy",
        "aws-budgets-budget": "AWS::Budgets::Budget",
        "aws-sns-subscription": "AWS::SNS::Subscription",
        "aws-sns-topic": "AWS::SNS::Topic",
        "aws-sns-topicpolicy": "AWS::SNS::TopicPolicy",
        "aws-opsworks-app": "AWS::OpsWorks::App",
        "aws-opsworks-elasticloadbalancerattachment": "AWS::OpsWorks::ElasticLoadBalancerAttachment",
        "aws-opsworks-instance": "AWS::OpsWorks::Instance",
        "aws-opsworks-layer": "AWS::OpsWorks::Layer",
        "aws-opsworks-stack": "AWS::OpsWorks::Stack",
        "aws-opsworks-userprofile": "AWS::OpsWorks::UserProfile",
        "aws-opsworks-volume": "AWS::OpsWorks::Volume",
        "aws-cloudfront-cloudfrontoriginaccessidentity": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
        "aws-cloudfront-distribution": "AWS::CloudFront::Distribution",
        "aws-cloudfront-streamingdistribution": "AWS::CloudFront::StreamingDistribution",
        "aws-cassandra-keyspace": "AWS::Cassandra::Keyspace",
        "aws-cassandra-table": "AWS::Cassandra::Table",
        "aws-sagemaker-coderepository": "AWS::SageMaker::CodeRepository",
        "aws-sagemaker-endpoint": "AWS::SageMaker::Endpoint",
        "aws-sagemaker-endpointconfig": "AWS::SageMaker::EndpointConfig",
        "aws-sagemaker-model": "AWS::SageMaker::Model",
        "aws-sagemaker-notebookinstance": "AWS::SageMaker::NotebookInstance",
        "aws-sagemaker-notebookinstancelifecycleconfig": "AWS::SageMaker::NotebookInstanceLifecycleConfig",
        "aws-sagemaker-workteam": "AWS::SageMaker::Workteam",
        "aws-pinpoint-admchannel": "AWS::Pinpoint::ADMChannel",
        "aws-pinpoint-apnschannel": "AWS::Pinpoint::APNSChannel",
        "aws-pinpoint-apnssandboxchannel": "AWS::Pinpoint::APNSSandboxChannel",
        "aws-pinpoint-apnsvoipchannel": "AWS::Pinpoint::APNSVoipChannel",
        "aws-pinpoint-apnsvoipsandboxchannel": "AWS::Pinpoint::APNSVoipSandboxChannel",
        "aws-pinpoint-app": "AWS::Pinpoint::App",
        "aws-pinpoint-applicationsettings": "AWS::Pinpoint::ApplicationSettings",
        "aws-pinpoint-baiduchannel": "AWS::Pinpoint::BaiduChannel",
        "aws-pinpoint-campaign": "AWS::Pinpoint::Campaign",
        "aws-pinpoint-emailchannel": "AWS::Pinpoint::EmailChannel",
        "aws-pinpoint-emailtemplate": "AWS::Pinpoint::EmailTemplate",
        "aws-pinpoint-eventstream": "AWS::Pinpoint::EventStream",
        "aws-pinpoint-gcmchannel": "AWS::Pinpoint::GCMChannel",
        "aws-pinpoint-pushtemplate": "AWS::Pinpoint::PushTemplate",
        "aws-pinpoint-segment": "AWS::Pinpoint::Segment",
        "aws-pinpoint-smschannel": "AWS::Pinpoint::SMSChannel",
        "aws-pinpoint-smstemplate": "AWS::Pinpoint::SmsTemplate",
        "aws-pinpoint-voicechannel": "AWS::Pinpoint::VoiceChannel",
        "aws-cloudwatch-alarm": "AWS::CloudWatch::Alarm",
        "aws-cloudwatch-anomalydetector": "AWS::CloudWatch::AnomalyDetector",
        "aws-cloudwatch-compositealarm": "AWS::CloudWatch::CompositeAlarm",
        "aws-cloudwatch-dashboard": "AWS::CloudWatch::Dashboard",
        "aws-cloudwatch-insightrule": "AWS::CloudWatch::InsightRule",
        "aws-lakeformation-datalakesettings": "AWS::LakeFormation::DataLakeSettings",
        "aws-lakeformation-permissions": "AWS::LakeFormation::Permissions",
        "aws-lakeformation-resource": "AWS::LakeFormation::Resource",
        "aws-athena-datacatalog": "AWS::Athena::DataCatalog",
        "aws-athena-namedquery": "AWS::Athena::NamedQuery",
        "aws-athena-workgroup": "AWS::Athena::WorkGroup",
        "aws-elasticsearch-domain": "AWS::Elasticsearch::Domain",
        "aws-codestar-githubrepository": "AWS::CodeStar::GitHubRepository",
        "aws-groundstation-config": "AWS::GroundStation::Config",
        "aws-groundstation-dataflowendpointgroup": "AWS::GroundStation::DataflowEndpointGroup",
        "aws-groundstation-missionprofile": "AWS::GroundStation::MissionProfile",
        "aws-iotthingsgraph-flowtemplate": "AWS::IoTThingsGraph::FlowTemplate",
        "aws-neptune-dbcluster": "AWS::Neptune::DBCluster",
        "aws-neptune-dbclusterparametergroup": "AWS::Neptune::DBClusterParameterGroup",
        "aws-neptune-dbinstance": "AWS::Neptune::DBInstance",
        "aws-neptune-dbparametergroup": "AWS::Neptune::DBParameterGroup",
        "aws-neptune-dbsubnetgroup": "AWS::Neptune::DBSubnetGroup",
        "aws-codedeploy-application": "AWS::CodeDeploy::Application",
        "aws-codedeploy-deploymentconfig": "AWS::CodeDeploy::DeploymentConfig",
        "aws-codedeploy-deploymentgroup": "AWS::CodeDeploy::DeploymentGroup",
        "aws-eventschemas-discoverer": "AWS::EventSchemas::Discoverer",
        "aws-eventschemas-registry": "AWS::EventSchemas::Registry",
        "aws-eventschemas-registrypolicy": "AWS::EventSchemas::RegistryPolicy",
        "aws-eventschemas-schema": "AWS::EventSchemas::Schema",
        "aws-elasticache-cachecluster": "AWS::ElastiCache::CacheCluster",
        "aws-elasticache-parametergroup": "AWS::ElastiCache::ParameterGroup",
        "aws-elasticache-replicationgroup": "AWS::ElastiCache::ReplicationGroup",
        "aws-elasticache-securitygroup": "AWS::ElastiCache::SecurityGroup",
        "aws-elasticache-securitygroupingress": "AWS::ElastiCache::SecurityGroupIngress",
        "aws-elasticache-subnetgroup": "AWS::ElastiCache::SubnetGroup",
        "aws-glue-classifier": "AWS::Glue::Classifier",
        "aws-glue-connection": "AWS::Glue::Connection",
        "aws-glue-crawler": "AWS::Glue::Crawler",
        "aws-glue-database": "AWS::Glue::Database",
        "aws-glue-datacatalogencryptionsettings": "AWS::Glue::DataCatalogEncryptionSettings",
        "aws-glue-devendpoint": "AWS::Glue::DevEndpoint",
        "aws-glue-job": "AWS::Glue::Job",
        "aws-glue-mltransform": "AWS::Glue::MLTransform",
        "aws-glue-partition": "AWS::Glue::Partition",
        "aws-glue-securityconfiguration": "AWS::Glue::SecurityConfiguration",
        "aws-glue-table": "AWS::Glue::Table",
        "aws-glue-trigger": "AWS::Glue::Trigger",
        "aws-glue-workflow": "AWS::Glue::Workflow",
        "aws-codestarnotifications-notificationrule": "AWS::CodeStarNotifications::NotificationRule",
        "aws-iot1click-device": "AWS::IoT1Click::Device",
        "aws-iot1click-placement": "AWS::IoT1Click::Placement",
        "aws-iot1click-project": "AWS::IoT1Click::Project",
        "aws-autoscalingplans-scalingplan": "AWS::AutoScalingPlans::ScalingPlan",
        "aws-ecr-repository": "AWS::ECR::Repository",
        "aws-kinesisanalytics-application": "AWS::KinesisAnalytics::Application",
        "aws-kinesisanalytics-applicationoutput": "AWS::KinesisAnalytics::ApplicationOutput",
        "aws-kinesisanalytics-applicationreferencedatasource": "AWS::KinesisAnalytics::ApplicationReferenceDataSource",
        "aws-eks-cluster": "AWS::EKS::Cluster",
        "aws-eks-nodegroup": "AWS::EKS::Nodegroup",
        "aws-ses-configurationset": "AWS::SES::ConfigurationSet",
        "aws-ses-configurationseteventdestination": "AWS::SES::ConfigurationSetEventDestination",
        "aws-ses-receiptfilter": "AWS::SES::ReceiptFilter",
        "aws-ses-receiptrule": "AWS::SES::ReceiptRule",
        "aws-ses-receiptruleset": "AWS::SES::ReceiptRuleSet",
        "aws-ses-template": "AWS::SES::Template",
        "aws-sdb-domain": "AWS::SDB::Domain",
        "aws-cognito-identitypool": "AWS::Cognito::IdentityPool",
        "aws-cognito-identitypoolroleattachment": "AWS::Cognito::IdentityPoolRoleAttachment",
        "aws-cognito-userpool": "AWS::Cognito::UserPool",
        "aws-cognito-userpoolclient": "AWS::Cognito::UserPoolClient",
        "aws-cognito-userpooldomain": "AWS::Cognito::UserPoolDomain",
        "aws-cognito-userpoolgroup": "AWS::Cognito::UserPoolGroup",
        "aws-cognito-userpoolidentityprovider": "AWS::Cognito::UserPoolIdentityProvider",
        "aws-cognito-userpoolresourceserver": "AWS::Cognito::UserPoolResourceServer",
        "aws-cognito-userpoolriskconfigurationattachment": "AWS::Cognito::UserPoolRiskConfigurationAttachment",
        "aws-cognito-userpooluicustomizationattachment": "AWS::Cognito::UserPoolUICustomizationAttachment",
        "aws-cognito-userpooluser": "AWS::Cognito::UserPoolUser",
        "aws-cognito-userpoolusertogroupattachment": "AWS::Cognito::UserPoolUserToGroupAttachment",
        "aws-dax-cluster": "AWS::DAX::Cluster",
        "aws-dax-parametergroup": "AWS::DAX::ParameterGroup",
        "aws-dax-subnetgroup": "AWS::DAX::SubnetGroup",
        "aws-logs-destination": "AWS::Logs::Destination",
        "aws-logs-loggroup": "AWS::Logs::LogGroup",
        "aws-logs-logstream": "AWS::Logs::LogStream",
        "aws-logs-metricfilter": "AWS::Logs::MetricFilter",
        "aws-logs-subscriptionfilter": "AWS::Logs::SubscriptionFilter",
        "aws-kinesis-stream": "AWS::Kinesis::Stream",
        "aws-kinesis-streamconsumer": "AWS::Kinesis::StreamConsumer",
        "aws-codestarconnections-connection": "AWS::CodeStarConnections::Connection",
        "aws-qldb-ledger": "AWS::QLDB::Ledger",
        "aws-qldb-stream": "AWS::QLDB::Stream",
        "aws-fsx-filesystem": "AWS::FSx::FileSystem",
        "aws-appstream-directoryconfig": "AWS::AppStream::DirectoryConfig",
        "aws-appstream-fleet": "AWS::AppStream::Fleet",
        "aws-appstream-imagebuilder": "AWS::AppStream::ImageBuilder",
        "aws-appstream-stack": "AWS::AppStream::Stack",
        "aws-appstream-stackfleetassociation": "AWS::AppStream::StackFleetAssociation",
        "aws-appstream-stackuserassociation": "AWS::AppStream::StackUserAssociation",
        "aws-appstream-user": "AWS::AppStream::User",
        "aws-robomaker-fleet": "AWS::RoboMaker::Fleet",
        "aws-robomaker-robot": "AWS::RoboMaker::Robot",
        "aws-robomaker-robotapplication": "AWS::RoboMaker::RobotApplication",
        "aws-robomaker-robotapplicationversion": "AWS::RoboMaker::RobotApplicationVersion",
        "aws-robomaker-simulationapplication": "AWS::RoboMaker::SimulationApplication",
        "aws-robomaker-simulationapplicationversion": "AWS::RoboMaker::SimulationApplicationVersion",
        "aws-lambda-alias": "AWS::Lambda::Alias",
        "aws-lambda-eventinvokeconfig": "AWS::Lambda::EventInvokeConfig",
        "aws-lambda-eventsourcemapping": "AWS::Lambda::EventSourceMapping",
        "aws-lambda-function": "AWS::Lambda::Function",
        "aws-lambda-layerversion": "AWS::Lambda::LayerVersion",
        "aws-lambda-layerversionpermission": "AWS::Lambda::LayerVersionPermission",
        "aws-lambda-permission": "AWS::Lambda::Permission",
        "aws-lambda-version": "AWS::Lambda::Version",
        "aws-codeguruprofiler-profilinggroup": "AWS::CodeGuruProfiler::ProfilingGroup",
        "aws-s3-accesspoint": "AWS::S3::AccessPoint",
        "aws-s3-bucket": "AWS::S3::Bucket",
        "aws-s3-bucketpolicy": "AWS::S3::BucketPolicy",
        "aws-emr-cluster": "AWS::EMR::Cluster",
        "aws-emr-instancefleetconfig": "AWS::EMR::InstanceFleetConfig",
        "aws-emr-instancegroupconfig": "AWS::EMR::InstanceGroupConfig",
        "aws-emr-securityconfiguration": "AWS::EMR::SecurityConfiguration",
        "aws-emr-step": "AWS::EMR::Step",
        "aws-certificatemanager-certificate": "AWS::CertificateManager::Certificate",
        "aws-dms-certificate": "AWS::DMS::Certificate",
        "aws-dms-endpoint": "AWS::DMS::Endpoint",
        "aws-dms-eventsubscription": "AWS::DMS::EventSubscription",
        "aws-dms-replicationinstance": "AWS::DMS::ReplicationInstance",
        "aws-dms-replicationsubnetgroup": "AWS::DMS::ReplicationSubnetGroup",
        "aws-dms-replicationtask": "AWS::DMS::ReplicationTask",
        "aws-iotevents-detectormodel": "AWS::IoTEvents::DetectorModel",
        "aws-iotevents-input": "AWS::IoTEvents::Input",
        "aws-autoscaling-autoscalinggroup": "AWS::AutoScaling::AutoScalingGroup",
        "aws-autoscaling-launchconfiguration": "AWS::AutoScaling::LaunchConfiguration",
        "aws-autoscaling-lifecyclehook": "AWS::AutoScaling::LifecycleHook",
        "aws-autoscaling-scalingpolicy": "AWS::AutoScaling::ScalingPolicy",
        "aws-autoscaling-scheduledaction": "AWS::AutoScaling::ScheduledAction",
        "aws-wafv2-ipset": "AWS::WAFv2::IPSet",
        "aws-wafv2-regexpatternset": "AWS::WAFv2::RegexPatternSet",
        "aws-wafv2-rulegroup": "AWS::WAFv2::RuleGroup",
        "aws-wafv2-webacl": "AWS::WAFv2::WebACL",
        "aws-wafv2-webaclassociation": "AWS::WAFv2::WebACLAssociation",
        "aws-servicecatalog-acceptedportfolioshare": "AWS::ServiceCatalog::AcceptedPortfolioShare",
        "aws-servicecatalog-cloudformationproduct": "AWS::ServiceCatalog::CloudFormationProduct",
        "aws-servicecatalog-cloudformationprovisionedproduct": "AWS::ServiceCatalog::CloudFormationProvisionedProduct",
        "aws-servicecatalog-launchnotificationconstraint": "AWS::ServiceCatalog::LaunchNotificationConstraint",
        "aws-servicecatalog-launchroleconstraint": "AWS::ServiceCatalog::LaunchRoleConstraint",
        "aws-servicecatalog-launchtemplateconstraint": "AWS::ServiceCatalog::LaunchTemplateConstraint",
        "aws-servicecatalog-portfolio": "AWS::ServiceCatalog::Portfolio",
        "aws-servicecatalog-portfolioprincipalassociation": "AWS::ServiceCatalog::PortfolioPrincipalAssociation",
        "aws-servicecatalog-portfolioproductassociation": "AWS::ServiceCatalog::PortfolioProductAssociation",
        "aws-servicecatalog-portfolioshare": "AWS::ServiceCatalog::PortfolioShare",
        "aws-servicecatalog-resourceupdateconstraint": "AWS::ServiceCatalog::ResourceUpdateConstraint",
        "aws-servicecatalog-stacksetconstraint": "AWS::ServiceCatalog::StackSetConstraint",
        "aws-servicecatalog-tagoption": "AWS::ServiceCatalog::TagOption",
        "aws-servicecatalog-tagoptionassociation": "AWS::ServiceCatalog::TagOptionAssociation",
        "aws-config-aggregationauthorization": "AWS::Config::AggregationAuthorization",
        "aws-config-configrule": "AWS::Config::ConfigRule",
        "aws-config-configurationaggregator": "AWS::Config::ConfigurationAggregator",
        "aws-config-configurationrecorder": "AWS::Config::ConfigurationRecorder",
        "aws-config-conformancepack": "AWS::Config::ConformancePack",
        "aws-config-deliverychannel": "AWS::Config::DeliveryChannel",
        "aws-config-organizationconfigrule": "AWS::Config::OrganizationConfigRule",
        "aws-config-organizationconformancepack": "AWS::Config::OrganizationConformancePack",
        "aws-config-remediationconfiguration": "AWS::Config::RemediationConfiguration",
        "aws-applicationautoscaling-scalabletarget": "AWS::ApplicationAutoScaling::ScalableTarget",
        "aws-applicationautoscaling-scalingpolicy": "AWS::ApplicationAutoScaling::ScalingPolicy",
        "aws-events-eventbus": "AWS::Events::EventBus",
        "aws-events-eventbuspolicy": "AWS::Events::EventBusPolicy",
        "aws-events-rule": "AWS::Events::Rule",
        "aws-secretsmanager-resourcepolicy": "AWS::SecretsManager::ResourcePolicy",
        "aws-secretsmanager-rotationschedule": "AWS::SecretsManager::RotationSchedule",
        "aws-secretsmanager-secret": "AWS::SecretsManager::Secret",
        "aws-secretsmanager-secrettargetattachment": "AWS::SecretsManager::SecretTargetAttachment",
        "aws-ram-resourceshare": "AWS::RAM::ResourceShare",
        "aws-iam-accesskey": "AWS::IAM::AccessKey",
        "aws-iam-group": "AWS::IAM::Group",
        "aws-iam-instanceprofile": "AWS::IAM::InstanceProfile",
        "aws-iam-managedpolicy": "AWS::IAM::ManagedPolicy",
        "aws-iam-policy": "AWS::IAM::Policy",
        "aws-iam-role": "AWS::IAM::Role",
        "aws-iam-servicelinkedrole": "AWS::IAM::ServiceLinkedRole",
        "aws-iam-user": "AWS::IAM::User",
        "aws-iam-usertogroupaddition": "AWS::IAM::UserToGroupAddition",
        "aws-wafregional-bytematchset": "AWS::WAFRegional::ByteMatchSet",
        "aws-wafregional-geomatchset": "AWS::WAFRegional::GeoMatchSet",
        "aws-wafregional-ipset": "AWS::WAFRegional::IPSet",
        "aws-wafregional-ratebasedrule": "AWS::WAFRegional::RateBasedRule",
        "aws-wafregional-regexpatternset": "AWS::WAFRegional::RegexPatternSet",
        "aws-wafregional-rule": "AWS::WAFRegional::Rule",
        "aws-wafregional-sizeconstraintset": "AWS::WAFRegional::SizeConstraintSet",
        "aws-wafregional-sqlinjectionmatchset": "AWS::WAFRegional::SqlInjectionMatchSet",
        "aws-wafregional-webacl": "AWS::WAFRegional::WebACL",
        "aws-wafregional-webaclassociation": "AWS::WAFRegional::WebACLAssociation",
        "aws-wafregional-xssmatchset": "AWS::WAFRegional::XssMatchSet",
        "aws-route53resolver-resolverendpoint": "AWS::Route53Resolver::ResolverEndpoint",
        "aws-route53resolver-resolverrule": "AWS::Route53Resolver::ResolverRule",
        "aws-route53resolver-resolverruleassociation": "AWS::Route53Resolver::ResolverRuleAssociation",
        "aws-detective-graph": "AWS::Detective::Graph",
        "aws-detective-memberinvitation": "AWS::Detective::MemberInvitation",
        "aws-fms-notificationchannel": "AWS::FMS::NotificationChannel",
        "aws-fms-policy": "AWS::FMS::Policy",
        "aws-imagebuilder-component": "AWS::ImageBuilder::Component",
        "aws-imagebuilder-distributionconfiguration": "AWS::ImageBuilder::DistributionConfiguration",
        "aws-imagebuilder-image": "AWS::ImageBuilder::Image",
        "aws-imagebuilder-imagepipeline": "AWS::ImageBuilder::ImagePipeline",
        "aws-imagebuilder-imagerecipe": "AWS::ImageBuilder::ImageRecipe",
        "aws-imagebuilder-infrastructureconfiguration": "AWS::ImageBuilder::InfrastructureConfiguration",
        "aws-kms-alias": "AWS::KMS::Alias",
        "aws-kms-key": "AWS::KMS::Key",
        "aws-appsync-apicache": "AWS::AppSync::ApiCache",
        "aws-appsync-apikey": "AWS::AppSync::ApiKey",
        "aws-appsync-datasource": "AWS::AppSync::DataSource",
        "aws-appsync-functionconfiguration": "AWS::AppSync::FunctionConfiguration",
        "aws-appsync-graphqlapi": "AWS::AppSync::GraphQLApi",
        "aws-appsync-graphqlschema": "AWS::AppSync::GraphQLSchema",
        "aws-appsync-resolver": "AWS::AppSync::Resolver",
        "aws-workspaces-workspace": "AWS::WorkSpaces::Workspace",
        "aws-medialive-channel": "AWS::MediaLive::Channel",
        "aws-medialive-input": "AWS::MediaLive::Input",
        "aws-medialive-inputsecuritygroup": "AWS::MediaLive::InputSecurityGroup",
        "aws-docdb-dbcluster": "AWS::DocDB::DBCluster",
        "aws-docdb-dbclusterparametergroup": "AWS::DocDB::DBClusterParameterGroup",
        "aws-docdb-dbinstance": "AWS::DocDB::DBInstance",
        "aws-docdb-dbsubnetgroup": "AWS::DocDB::DBSubnetGroup",
        "aws-amplify-app": "AWS::Amplify::App",
        "aws-amplify-branch": "AWS::Amplify::Branch",
        "aws-amplify-domain": "AWS::Amplify::Domain",
        "aws-apigateway-account": "AWS::ApiGateway::Account",
        "aws-apigateway-apikey": "AWS::ApiGateway::ApiKey",
        "aws-apigateway-authorizer": "AWS::ApiGateway::Authorizer",
        "aws-apigateway-basepathmapping": "AWS::ApiGateway::BasePathMapping",
        "aws-apigateway-clientcertificate": "AWS::ApiGateway::ClientCertificate",
        "aws-apigateway-deployment": "AWS::ApiGateway::Deployment",
        "aws-apigateway-documentationpart": "AWS::ApiGateway::DocumentationPart",
        "aws-apigateway-documentationversion": "AWS::ApiGateway::DocumentationVersion",
        "aws-apigateway-domainname": "AWS::ApiGateway::DomainName",
        "aws-apigateway-gatewayresponse": "AWS::ApiGateway::GatewayResponse",
        "aws-apigateway-method": "AWS::ApiGateway::Method",
        "aws-apigateway-model": "AWS::ApiGateway::Model",
        "aws-apigateway-requestvalidator": "AWS::ApiGateway::RequestValidator",
        "aws-apigateway-resource": "AWS::ApiGateway::Resource",
        "aws-apigateway-restapi": "AWS::ApiGateway::RestApi",
        "aws-apigateway-stage": "AWS::ApiGateway::Stage",
        "aws-apigateway-usageplan": "AWS::ApiGateway::UsagePlan",
        "aws-apigateway-usageplankey": "AWS::ApiGateway::UsagePlanKey",
        "aws-apigateway-vpclink": "AWS::ApiGateway::VpcLink",
        "aws-codepipeline-customactiontype": "AWS::CodePipeline::CustomActionType",
        "aws-codepipeline-pipeline": "AWS::CodePipeline::Pipeline",
        "aws-codepipeline-webhook": "AWS::CodePipeline::Webhook",
        "aws-appconfig-application": "AWS::AppConfig::Application",
        "aws-appconfig-configurationprofile": "AWS::AppConfig::ConfigurationProfile",
        "aws-appconfig-deployment": "AWS::AppConfig::Deployment",
        "aws-appconfig-deploymentstrategy": "AWS::AppConfig::DeploymentStrategy",
        "aws-appconfig-environment": "AWS::AppConfig::Environment",
        "aws-appconfig-hostedconfigurationversion": "AWS::AppConfig::HostedConfigurationVersion",
        "aws-appmesh-mesh": "AWS::AppMesh::Mesh",
        "aws-appmesh-route": "AWS::AppMesh::Route",
        "aws-appmesh-virtualnode": "AWS::AppMesh::VirtualNode",
        "aws-appmesh-virtualrouter": "AWS::AppMesh::VirtualRouter",
        "aws-appmesh-virtualservice": "AWS::AppMesh::VirtualService",
        "aws-waf-bytematchset": "AWS::WAF::ByteMatchSet",
        "aws-waf-ipset": "AWS::WAF::IPSet",
        "aws-waf-rule": "AWS::WAF::Rule",
        "aws-waf-sizeconstraintset": "AWS::WAF::SizeConstraintSet",
        "aws-waf-sqlinjectionmatchset": "AWS::WAF::SqlInjectionMatchSet",
        "aws-waf-webacl": "AWS::WAF::WebACL",
        "aws-waf-xssmatchset": "AWS::WAF::XssMatchSet",
        "aws-servicediscovery-httpnamespace": "AWS::ServiceDiscovery::HttpNamespace",
        "aws-servicediscovery-instance": "AWS::ServiceDiscovery::Instance",
        "aws-servicediscovery-privatednsnamespace": "AWS::ServiceDiscovery::PrivateDnsNamespace",
        "aws-servicediscovery-publicdnsnamespace": "AWS::ServiceDiscovery::PublicDnsNamespace",
        "aws-servicediscovery-service": "AWS::ServiceDiscovery::Service",
        "aws-codebuild-project": "AWS::CodeBuild::Project",
        "aws-codebuild-reportgroup": "AWS::CodeBuild::ReportGroup",
        "aws-codebuild-sourcecredential": "AWS::CodeBuild::SourceCredential",
        "aws-stepfunctions-activity": "AWS::StepFunctions::Activity",
        "aws-stepfunctions-statemachine": "AWS::StepFunctions::StateMachine",
        "aws-ec2-capacityreservation": "AWS::EC2::CapacityReservation",
        "aws-ec2-clientvpnauthorizationrule": "AWS::EC2::ClientVpnAuthorizationRule",
        "aws-ec2-clientvpnendpoint": "AWS::EC2::ClientVpnEndpoint",
        "aws-ec2-clientvpnroute": "AWS::EC2::ClientVpnRoute",
        "aws-ec2-clientvpntargetnetworkassociation": "AWS::EC2::ClientVpnTargetNetworkAssociation",
        "aws-ec2-customergateway": "AWS::EC2::CustomerGateway",
        "aws-ec2-dhcpoptions": "AWS::EC2::DHCPOptions",
        "aws-ec2-ec2fleet": "AWS::EC2::EC2Fleet",
        "aws-ec2-egressonlyinternetgateway": "AWS::EC2::EgressOnlyInternetGateway",
        "aws-ec2-eip": "AWS::EC2::EIP",
        "aws-ec2-eipassociation": "AWS::EC2::EIPAssociation",
        "aws-ec2-flowlog": "AWS::EC2::FlowLog",
        "aws-ec2-gatewayroutetableassociation": "AWS::EC2::GatewayRouteTableAssociation",
        "aws-ec2-host": "AWS::EC2::Host",
        "aws-ec2-instance": "AWS::EC2::Instance",
        "aws-ec2-internetgateway": "AWS::EC2::InternetGateway",
        "aws-ec2-launchtemplate": "AWS::EC2::LaunchTemplate",
        "aws-ec2-localgatewayroute": "AWS::EC2::LocalGatewayRoute",
        "aws-ec2-localgatewayroutetablevpcassociation": "AWS::EC2::LocalGatewayRouteTableVPCAssociation",
        "aws-ec2-natgateway": "AWS::EC2::NatGateway",
        "aws-ec2-networkacl": "AWS::EC2::NetworkAcl",
        "aws-ec2-networkaclentry": "AWS::EC2::NetworkAclEntry",
        "aws-ec2-networkinterface": "AWS::EC2::NetworkInterface",
        "aws-ec2-networkinterfaceattachment": "AWS::EC2::NetworkInterfaceAttachment",
        "aws-ec2-networkinterfacepermission": "AWS::EC2::NetworkInterfacePermission",
        "aws-ec2-placementgroup": "AWS::EC2::PlacementGroup",
        "aws-ec2-prefixlist": "AWS::EC2::PrefixList",
        "aws-ec2-route": "AWS::EC2::Route",
        "aws-ec2-routetable": "AWS::EC2::RouteTable",
        "aws-ec2-securitygroup": "AWS::EC2::SecurityGroup",
        "aws-ec2-securitygroupegress": "AWS::EC2::SecurityGroupEgress",
        "aws-ec2-securitygroupingress": "AWS::EC2::SecurityGroupIngress",
        "aws-ec2-spotfleet": "AWS::EC2::SpotFleet",
        "aws-ec2-subnet": "AWS::EC2::Subnet",
        "aws-ec2-subnetcidrblock": "AWS::EC2::SubnetCidrBlock",
        "aws-ec2-subnetnetworkaclassociation": "AWS::EC2::SubnetNetworkAclAssociation",
        "aws-ec2-subnetroutetableassociation": "AWS::EC2::SubnetRouteTableAssociation",
        "aws-ec2-trafficmirrorfilter": "AWS::EC2::TrafficMirrorFilter",
        "aws-ec2-trafficmirrorfilterrule": "AWS::EC2::TrafficMirrorFilterRule",
        "aws-ec2-trafficmirrorsession": "AWS::EC2::TrafficMirrorSession",
        "aws-ec2-trafficmirrortarget": "AWS::EC2::TrafficMirrorTarget",
        "aws-ec2-transitgateway": "AWS::EC2::TransitGateway",
        "aws-ec2-transitgatewayattachment": "AWS::EC2::TransitGatewayAttachment",
        "aws-ec2-transitgatewayroute": "AWS::EC2::TransitGatewayRoute",
        "aws-ec2-transitgatewayroutetable": "AWS::EC2::TransitGatewayRouteTable",
        "aws-ec2-transitgatewayroutetableassociation": "AWS::EC2::TransitGatewayRouteTableAssociation",
        "aws-ec2-transitgatewayroutetablepropagation": "AWS::EC2::TransitGatewayRouteTablePropagation",
        "aws-ec2-volume": "AWS::EC2::Volume",
        "aws-ec2-volumeattachment": "AWS::EC2::VolumeAttachment",
        "aws-ec2-vpc": "AWS::EC2::VPC",
        "aws-ec2-vpccidrblock": "AWS::EC2::VPCCidrBlock",
        "aws-ec2-vpcdhcpoptionsassociation": "AWS::EC2::VPCDHCPOptionsAssociation",
        "aws-ec2-vpcendpoint": "AWS::EC2::VPCEndpoint",
        "aws-ec2-vpcendpointconnectionnotification": "AWS::EC2::VPCEndpointConnectionNotification",
        "aws-ec2-vpcendpointservice": "AWS::EC2::VPCEndpointService",
        "aws-ec2-vpcendpointservicepermissions": "AWS::EC2::VPCEndpointServicePermissions",
        "aws-ec2-vpcgatewayattachment": "AWS::EC2::VPCGatewayAttachment",
        "aws-ec2-vpcpeeringconnection": "AWS::EC2::VPCPeeringConnection",
        "aws-ec2-vpnconnection": "AWS::EC2::VPNConnection",
        "aws-ec2-vpnconnectionroute": "AWS::EC2::VPNConnectionRoute",
        "aws-ec2-vpngateway": "AWS::EC2::VPNGateway",
        "aws-ec2-vpngatewayroutepropagation": "AWS::EC2::VPNGatewayRoutePropagation",
        "aws-ecs-capacityprovider": "AWS::ECS::CapacityProvider",
        "aws-ecs-cluster": "AWS::ECS::Cluster",
        "aws-ecs-primarytaskset": "AWS::ECS::PrimaryTaskSet",
        "aws-ecs-service": "AWS::ECS::Service",
        "aws-ecs-taskdefinition": "AWS::ECS::TaskDefinition",
        "aws-ecs-taskset": "AWS::ECS::TaskSet",
        "aws-kinesisfirehose-deliverystream": "AWS::KinesisFirehose::DeliveryStream",
        "aws-opsworkscm-server": "AWS::OpsWorksCM::Server",
        "aws-networkmanager-customergatewayassociation": "AWS::NetworkManager::CustomerGatewayAssociation",
        "aws-networkmanager-device": "AWS::NetworkManager::Device",
        "aws-networkmanager-globalnetwork": "AWS::NetworkManager::GlobalNetwork",
        "aws-networkmanager-link": "AWS::NetworkManager::Link",
        "aws-networkmanager-linkassociation": "AWS::NetworkManager::LinkAssociation",
        "aws-networkmanager-site": "AWS::NetworkManager::Site",
        "aws-networkmanager-transitgatewayregistration": "AWS::NetworkManager::TransitGatewayRegistration"
    }
}