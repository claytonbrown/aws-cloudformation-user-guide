{
    "ResourceTypes": {
        "AWS::SSM::MaintenanceWindowTask": {
            "ssm-maintenancewindowtask-description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-description",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-logginginfo": {
                "Required": "No",
                "Type": "LoggingInfo",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-logginginfo",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-logginginfo",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-maxconcurrency": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "7",
                "Pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-maxconcurrency",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-maxconcurrency",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-maxerrors": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "7",
                "Pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-maxerrors",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-maxerrors",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "128",
                "Pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-name",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-priority": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "0",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-priority",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-priority",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-servicerolearn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-servicerolearn",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-servicerolearn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-targets": {
                "Required": "Yes",
                "Type": "List of [Target",
                "Maximum": "5",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-targets",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-targets",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-taskarn": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1600",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-taskarn",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskarn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-taskinvocationparameters": {
                "Required": "No",
                "Type": "TaskInvocationParameters",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-taskinvocationparameters",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskinvocationparameters",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-taskparameters": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-taskparameters",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskparameters",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-tasktype": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "AUTOMATION",
                    "LAMBDA",
                    "RUN_COMMAND",
                    "STEP_FUNCTIONS"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-tasktype",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-tasktype",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ssm-maintenancewindowtask-windowid": {
                "Required": "No",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "20",
                "Pattern": "^mw-[0-9a-f]{17}$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ssm-maintenancewindowtask-windowid",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-windowid",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-description": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-description",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-logginginfo": {
            "Required": "No",
            "Type": "LoggingInfo",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-logginginfo",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-logginginfo",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-maxconcurrency": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "7",
            "Pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-maxconcurrency",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-maxconcurrency",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-maxerrors": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "7",
            "Pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-maxerrors",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-maxerrors",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "3",
            "Maximum": "128",
            "Pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-name",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-priority": {
            "Required": "Yes",
            "Type": "Integer",
            "Minimum": "0",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-priority",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-priority",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-servicerolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-servicerolearn",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-servicerolearn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-targets": {
            "Required": "Yes",
            "Type": "List of [Target",
            "Maximum": "5",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-targets",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-targets",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskarn": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-taskarn",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskarn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskinvocationparameters": {
            "Required": "No",
            "Type": "TaskInvocationParameters",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-taskinvocationparameters",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskinvocationparameters",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskparameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-taskparameters",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskparameters",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-tasktype": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "AUTOMATION",
                "LAMBDA",
                "RUN_COMMAND",
                "STEP_FUNCTIONS"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-tasktype",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-tasktype",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-windowid": {
            "Required": "No",
            "Type": "String",
            "Minimum": "20",
            "Maximum": "20",
            "Pattern": "^mw-[0-9a-f]{17}$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-windowid",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-windowid",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        }
    },
    "PropertyTypes": {
        "String": "example-string",
        "Boolean": "True",
        "Integer": "1",
        "Long": "123.4",
        "Double": "123.45",
        "Float": "1.23456789",
        "Json": {
            "todo": "json"
        },
        "Timestamp": "1970-01-01T01:02:30.070Z",
        "config.remediationconfiguration.staticvalue.values": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "25",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.bytematchstatement.searchstringbase64": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.bytematchstatement.fieldtomatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.bytematchstatement.searchstring": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.bytematchstatement.texttransformations": {
            "Required": "Yes",
            "Type": [
                "TextTransformation"
            ],
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.bytematchstatement.positionalconstraint": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.iotevents.inputname": {
            "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotevents.detectormodel.iotevents.payload": {
            "Required": "No",
            "Type": "Payload",
            "UpdateRequires": "No interruption"
        },
        "applicationautoscaling.scalingpolicy.metricdimension.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalingpolicy.metricdimension.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.application.inputschema.recordencoding": {
            "Pattern": "UTF-8",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.application.inputschema.recordcolumns": {
            "Required": "Yes",
            "Type": [
                "RecordColumn"
            ],
            "Maximum": "1000",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.inputschema.recordformat": {
            "Required": "Yes",
            "Type": "RecordFormat",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.placementtype.availabilityzone": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "10280",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10280",
            "CompliantValues": "0...10280"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses.privateipaddress": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses.primary": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "datapipeline.pipeline.pipelineobjects.fields.key": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "datapipeline.pipeline.pipelineobjects.fields.stringvalue": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "0",
            "Required": "Conditional",
            "Maximum": "10240",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...10240",
            "CompliantValues": "0...10240"
        },
        "datapipeline.pipeline.pipelineobjects.fields.refvalue": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Conditional",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "pinpoint.campaign.metricdimension.value": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "pinpoint.campaign.metricdimension.comparisonoperator": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.resourcerequirement.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.resourcerequirement.type": {
            "Allowed values": "GPU",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.capacityprovider.autoscalinggroupprovider.managedterminationprotection": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.capacityprovider.autoscalinggroupprovider.managedscaling": {
            "Required": "No",
            "Type": "ManagedScaling",
            "UpdateRequires": "Replacement"
        },
        "ecs.capacityprovider.autoscalinggroupprovider.autoscalinggrouparn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "msk.cluster.encryptionintransit.incluster": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "msk.cluster.encryptionintransit.clientbroker": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.application.inputparallelism.count": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "ses.configurationseteventdestination.eventdestination.cloudwatchdestination": {
            "Required": "No",
            "Type": "CloudWatchDestination",
            "UpdateRequires": "No interruption"
        },
        "ses.configurationseteventdestination.eventdestination.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.configurationseteventdestination.eventdestination.enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ses.configurationseteventdestination.eventdestination.kinesisfirehosedestination": {
            "Required": "No",
            "Type": "KinesisFirehoseDestination",
            "UpdateRequires": "No interruption"
        },
        "ses.configurationseteventdestination.eventdestination.matchingeventtypes": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.channel.retentionperiod.unlimited": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "iotanalytics.channel.retentionperiod.numberofdays": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "glue.securityconfiguration.jobbookmarksencryption.kmskeyarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.securityconfiguration.jobbookmarksencryption.jobbookmarksencryptionmode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.httptimeout.perrequest": {
            "Required": "No",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.httptimeout.idle": {
            "Required": "No",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.datasetcontentdeliveryrule.destination": {
            "Required": "Yes",
            "Type": "DatasetContentDeliveryRuleDestination",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.datasetcontentdeliveryrule.entryname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentconfig.minimumhealthyhosts.type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentconfig.minimumhealthyhosts.value": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.webacl.rulegroupreferencestatement.arn": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "wafv2.webacl.rulegroupreferencestatement.excludedrules": {
            "Required": "No",
            "Type": [
                "ExcludedRule"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.classicloadbalancersconfig.classicloadbalancers": {
            "Required": "Yes",
            "Type": [
                "ClassicLoadBalancer"
            ],
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "greengrass.resourcedefinition.localdeviceresourcedata.groupownersetting": {
            "Required": "No",
            "Type": "GroupOwnerSetting",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinition.localdeviceresourcedata.sourcepath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "groundstation.config.configdata.antennadownlinkdemoddecodeconfig": {
            "Required": "No",
            "Type": "AntennaDownlinkDemodDecodeConfig",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.configdata.uplinkechoconfig": {
            "Required": "No",
            "Type": "UplinkEchoConfig",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.configdata.antennauplinkconfig": {
            "Required": "No",
            "Type": "AntennaUplinkConfig",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.configdata.dataflowendpointconfig": {
            "Required": "No",
            "Type": "DataflowEndpointConfig",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.configdata.antennadownlinkconfig": {
            "Required": "No",
            "Type": "AntennaDownlinkConfig",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.configdata.trackingconfig": {
            "Required": "No",
            "Type": "TrackingConfig",
            "UpdateRequires": "No interruption"
        },
        "config.conformancepack.conformancepackinputparameter.parametervalue": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "4096",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...4096",
            "CompliantValues": "0...4096"
        },
        "config.conformancepack.conformancepackinputparameter.parametername": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...255",
            "CompliantValues": "0...255"
        },
        "waf.sqlinjectionmatchset.sqlinjectionmatchtuples.fieldtomatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "waf.sqlinjectionmatchset.sqlinjectionmatchtuples.texttransformation": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.httprouteaction.weightedtargets": {
            "Required": "Yes",
            "Type": [
                "WeightedTarget"
            ],
            "UpdateRequires": "No interruption"
        },
        "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.adjustmenttype": {
            "Allowed values": "ChangeInCapacity | ExactCapacity | PercentChangeInCapacity",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.metricaggregationtype": {
            "Allowed values": "Average | Maximum | Minimum",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustments": {
            "Required": "No",
            "Type": [
                "StepAdjustment"
            ],
            "UpdateRequires": "No interruption"
        },
        "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.cooldown": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.minadjustmentmagnitude": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.mediumaction": {
            "Required": "No",
            "Type": "AccountTakeoverActionType",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.lowaction": {
            "Required": "No",
            "Type": "AccountTakeoverActionType",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.highaction": {
            "Required": "No",
            "Type": "AccountTakeoverActionType",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.ratebasedstatementone.aggregatekeytype": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.ratebasedstatementone.scopedownstatement": {
            "Required": "No",
            "Type": "StatementTwo",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.ratebasedstatementone.limit": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "iotanalytics.dataset.filter.deltatime": {
            "Required": "No",
            "Type": "DeltaTime",
            "UpdateRequires": "No interruption"
        },
        "ec2.ec2fleet.placement.partitionnumber": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ec2.ec2fleet.placement.affinity": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.placement.tenancy": {
            "Allowed values": "dedicated | default | host",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.placement.availabilityzone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.placement.spreaddomain": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.placement.hostid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.placement.groupname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.placement.hostresourcegrouparn": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ec2.security.group.groupname": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ec2.security.group.securitygroupingress": {
            "Required": "No",
            "Type": [
                "Ingress"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.security.group.tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.security.group.groupdescription": {
            "Required": "Yes",
            "UpdateRequires": "Replacement"
        },
        "ec2.security.group.vpcid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.security.group.securitygroupegress": {
            "Required": "No",
            "Type": [
                "Egress"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.websiteconfiguration.routingrules.routingrulecondition.keyprefixequals": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.websiteconfiguration.routingrules.routingrulecondition.httperrorcodereturnedequals": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "lambda.alias.provisionedconcurrencyconfiguration.provisionedconcurrentexecutions": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "s3.bucket.notificationconfiguration.config.filter.s3key.rules": {
            "Required": "Yes",
            "Type": [
                "FilterRule"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.loggingconfig.destinationbucketname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.loggingconfig.logfileprefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.storagedescriptor.storedassubdirectories": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.partition.storagedescriptor.serdeinfo": {
            "Required": "No",
            "Type": "SerdeInfo",
            "UpdateRequires": "No interruption"
        },
        "glue.partition.storagedescriptor.skewedinfo": {
            "Required": "No",
            "Type": "SkewedInfo",
            "UpdateRequires": "No interruption"
        },
        "glue.partition.storagedescriptor.columns": {
            "Required": "No",
            "Type": [
                "Column"
            ],
            "UpdateRequires": "No interruption"
        },
        "glue.partition.storagedescriptor.compressed": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.partition.storagedescriptor.numberofbuckets": {
            "Required": "Conditional",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "glue.partition.storagedescriptor.outputformat": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.storagedescriptor.parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "glue.partition.storagedescriptor.sortcolumns": {
            "Required": "No",
            "Type": [
                "Order"
            ],
            "UpdateRequires": "No interruption"
        },
        "glue.partition.storagedescriptor.inputformat": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.storagedescriptor.bucketcolumns": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.partition.storagedescriptor.location": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.connectiondrainingpolicy.timeout": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.elb.connectiondrainingpolicy.enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "kinesisanalyticsv2.applicationreferencedatasource.recordformat.recordformattype": {
            "Allowed values": "CSV | JSON",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.recordformat.mappingparameters": {
            "Required": "No",
            "Type": "MappingParameters",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.grpctimeout.idle": {
            "Required": "No",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.grpctimeout.perrequest": {
            "Required": "No",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.videoselector.colorspace": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.videoselector.selectorsettings": {
            "Required": "No",
            "Type": "VideoSelectorSettings",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.videoselector.colorspaceusage": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinitionversion.environment.resourceaccesspolicies": {
            "Required": "No",
            "Type": [
                "ResourceAccessPolicy"
            ],
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinitionversion.environment.execution": {
            "Required": "No",
            "Type": "Execution",
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinitionversion.environment.variables": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "Replacement",
            "SampleValue": {
                "todo": "json"
            }
        },
        "greengrass.functiondefinitionversion.environment.accesssysfs": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.cors.corsrules": {
            "Required": "Yes",
            "Type": [
                "CorsRule"
            ],
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.artifacts.location": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.artifacts.namespacetype": {
            "Allowed values": "BUILD_ID | NONE",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.artifacts.name": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.artifacts.artifactidentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.artifacts.overrideartifactname": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codebuild.project.artifacts.packaging": {
            "Allowed values": "NONE | ZIP",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.artifacts.path": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.artifacts.type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.artifacts.encryptiondisabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "lambda.eventsourcemapping.onfailure.destination": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualservice.tagref.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualservice.tagref.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.encryptionconfiguration.kmsencryptionconfig": {
            "Required": "No",
            "Type": "KMSEncryptionConfig",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.encryptionconfiguration.noencryptionconfig": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.storageclassanalysis.dataexport": {
            "Required": "No",
            "Type": "DataExport",
            "UpdateRequires": "No interruption"
        },
        "beanstalk.environment.tier.version": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "beanstalk.environment.tier.type": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "beanstalk.environment.tier.name": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "groundstation.config.dataflowendpointconfig.dataflowendpointname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.config.dataflowendpointconfig.dataflowendpointregion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.usageplan.apistage.apiid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.usageplan.apistage.throttle": {
            "Required": "No",
            "Type": "Map of [ThrottleSettings",
            "UpdateRequires": "No interruption"
        },
        "apigateway.usageplan.apistage.stage": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.projectcache.modes": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.projectcache.type": {
            "Allowed values": "LOCAL | NO_CACHE | S3",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.projectcache.location": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.applicationoutput.kinesisstreamsoutput.resourcearn": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "ask.skill.overrides.manifest": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "glue.crawler.catalogtarget.tables": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.crawler.catalogtarget.databasename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.applicationreferencedatasource.mappingparameters.csvmappingparameters": {
            "Required": "No",
            "Type": "CSVMappingParameters",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationreferencedatasource.mappingparameters.jsonmappingparameters": {
            "Required": "No",
            "Type": "JSONMappingParameters",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwos.statementtwos": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-rulegroup-statementtwos-properties": {
            "StatementTwos": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2.spotfleet.classicloadbalancer.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "athena.workgroup.workgroupconfigurationupdates.publishcloudwatchmetricsenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "athena.workgroup.workgroupconfigurationupdates.enforceworkgroupconfiguration": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "athena.workgroup.workgroupconfigurationupdates.requesterpaysenabled": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "athena.workgroup.workgroupconfigurationupdates.resultconfigurationupdates": {
            "Required": "No",
            "Type": "ResultConfigurationUpdates",
            "UpdateRequires": "No interruption"
        },
        "athena.workgroup.workgroupconfigurationupdates.removebytesscannedcutoffperquery": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "athena.workgroup.workgroupconfigurationupdates.bytesscannedcutoffperquery": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualservice.virtualservicespec.provider": {
            "Required": "No",
            "Type": "VirtualServiceProvider",
            "UpdateRequires": "No interruption"
        },
        "elasticfilesystem.filesystem.lifecyclepolicy.transitiontoia": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "AFTER_14_DAYS",
                "AFTER_30_DAYS",
                "AFTER_60_DAYS",
                "AFTER_7_DAYS",
                "AFTER_90_DAYS"
            ],
            "Allowed Values": "AFTER_14_DAYS | AFTER_30_DAYS | AFTER_60_DAYS | AFTER_7_DAYS | AFTER_90_DAYS",
            "UpdateRequires": "No interruption",
            "SampleValue": "AFTER_14_DAYS",
            "CompliantValues": [
                "AFTER_14_DAYS",
                "AFTER_30_DAYS",
                "AFTER_60_DAYS",
                "AFTER_7_DAYS",
                "AFTER_90_DAYS"
            ]
        },
        "medialive.channel.inputspecification.codec": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.inputspecification.resolution": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.inputspecification.maximumbitrate": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpool.numberattributeconstraints.maxvalue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpool.numberattributeconstraints.minvalue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpointemail.dedicatedippool.tags.key": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpointemail.dedicatedippool.tags.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinition.environment.accesssysfs": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "greengrass.functiondefinition.environment.resourceaccesspolicies": {
            "Required": "No",
            "Type": [
                "ResourceAccessPolicy"
            ],
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinition.environment.execution": {
            "Required": "No",
            "Type": "Execution",
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinition.environment.variables": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "Replacement",
            "SampleValue": {
                "todo": "json"
            }
        },
        "cloudfront.distribution.origingroups.items": {
            "Required": "No",
            "Type": [
                "OriginGroup"
            ],
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origingroups.quantity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ssm.maintenancewindowtask.maintenancewindowautomationparameters.documentversion": {
            "Pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.maintenancewindowautomationparameters.parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "kinesisanalytics.application.kinesisfirehoseinput.resourcearn": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisanalytics.application.kinesisfirehoseinput.rolearn": {
            "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "iotanalytics.datastore.customermanageds3.keyprefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.datastore.customermanageds3.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.datastore.customermanageds3.bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.api.cors.maxage": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apigatewayv2.api.cors.allowmethods": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "apigatewayv2.api.cors.allowheaders": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "apigatewayv2.api.cors.alloworigins": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "apigatewayv2.api.cors.allowcredentials": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigatewayv2.api.cors.exposeheaders": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.priceclass": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.aliases": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.defaultcachebehavior": {
            "Required": "No",
            "Type": "DefaultCacheBehavior",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.viewercertificate": {
            "Required": "No",
            "Type": "ViewerCertificate",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.origingroups": {
            "Required": "No",
            "Type": "OriginGroups",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudfront.distribution.distributionconfig.comment": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.distributionconfig.webaclid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.distributionconfig.restrictions": {
            "Required": "No",
            "Type": "Restrictions",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.httpversion": {
            "Allowed values": "http1.1 | http2",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.distributionconfig.origins": {
            "Required": "No",
            "Type": [
                "Origin"
            ],
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.customerrorresponses": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.cachebehaviors": {
            "Required": "No",
            "Type": [
                "CacheBehavior"
            ],
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.ipv6enabled": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudfront.distribution.distributionconfig.logging": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.distributionconfig.defaultrootobject": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.mappingparameters.jsonmappingparameters": {
            "Required": "No",
            "Type": "JSONMappingParameters",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.mappingparameters.csvmappingparameters": {
            "Required": "No",
            "Type": "CSVMappingParameters",
            "UpdateRequires": "No interruption"
        },
        "events.rule.batchretrystrategy.attempts": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "medialive.input.inputvpcrequest.securitygroupids": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "medialive.input.inputvpcrequest.subnetids": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates.longitude": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates.latitude": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "ec2.spotfleet.launchtemplateconfig.launchtemplatespecification": {
            "Required": "No",
            "Type": "FleetLaunchTemplateSpecification",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.launchtemplateconfig.overrides": {
            "Required": "No",
            "Type": [
                "LaunchTemplateOverrides"
            ],
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.jsonmappingparameters.recordrowpath": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.segment.segmentdimensions.location.country": {
            "Required": "No",
            "Type": "SetDimension",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.location.gpspoint": {
            "Required": "No",
            "Type": "GPSPoint",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.antennadownlinkconfig.spectrumconfig": {
            "Required": "Yes",
            "Type": "SpectrumConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.keyvalue.value": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "10280",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10280",
            "CompliantValues": "0...10280"
        },
        "elasticmapreduce.cluster.keyvalue.key": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "10280",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10280",
            "CompliantValues": "0...10280"
        },
        "elasticsearch.domain.cognitooptions.rolearn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticsearch.domain.cognitooptions.userpoolid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticsearch.domain.cognitooptions.enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticsearch.domain.cognitooptions.identitypoolid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.targetcapacityspecificationrequest.spottargetcapacity": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.ec2fleet.targetcapacityspecificationrequest.totaltargetcapacity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.ec2fleet.targetcapacityspecificationrequest.defaulttargetcapacitytype": {
            "Allowed values": "on-demand | spot",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.targetcapacityspecificationrequest.ondemandtargetcapacity": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "eventschemas.registry.tagsentry.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "eventschemas.registry.tagsentry.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.cloudwatchloggingoptions.enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "kinesisfirehose.deliverystream.cloudwatchloggingoptions.loggroupname": {
            "Pattern": "[\\.\\-_/#A-Za-z0-9]*",
            "Required": "Conditional",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...512",
            "CompliantValues": "0...512"
        },
        "kinesisfirehose.deliverystream.cloudwatchloggingoptions.logstreamname": {
            "Pattern": "[^:*]*",
            "Required": "Conditional",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...512",
            "CompliantValues": "0...512"
        },
        "batch.jobdefinition.containerproperties.volumes": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.containerproperties.ulimits": {
            "Required": "No",
            "Type": [
                "Ulimit"
            ],
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.containerproperties.user": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.containerproperties.command": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.containerproperties.memory": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.containerproperties.resourcerequirements": {
            "Required": "No",
            "Type": [
                "ResourceRequirement"
            ],
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.containerproperties.linuxparameters": {
            "Required": "No",
            "Type": "LinuxParameters",
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.containerproperties.vcpus": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "batch.jobdefinition.containerproperties.mountpoints": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.containerproperties.instancetype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.containerproperties.readonlyrootfilesystem": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "batch.jobdefinition.containerproperties.image": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.containerproperties.jobrolearn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.containerproperties.privileged": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "batch.jobdefinition.containerproperties.environment": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.projecttriggers.filtergroups": {
            "Required": "No",
            "Type": [
                "FilterGroup"
            ],
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.projecttriggers.webhook": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "medialive.channel.videoselectorsettings.videoselectorpid": {
            "Required": "No",
            "Type": "VideoSelectorPid",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.videoselectorsettings.videoselectorprogramid": {
            "Required": "No",
            "Type": "VideoSelectorProgramId",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.s3destinationconfiguration.cloudwatchloggingoptions": {
            "Required": "No",
            "Type": "CloudWatchLoggingOptions",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.s3destinationconfiguration.bufferinghints": {
            "Required": "No",
            "Type": "BufferingHints",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.s3destinationconfiguration.prefix": {
            "Pattern": ".*",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...1024",
            "CompliantValues": "0...1024"
        },
        "kinesisfirehose.deliverystream.s3destinationconfiguration.bucketarn": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisfirehose.deliverystream.s3destinationconfiguration.erroroutputprefix": {
            "Pattern": ".*",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...1024",
            "CompliantValues": "0...1024"
        },
        "kinesisfirehose.deliverystream.s3destinationconfiguration.rolearn": {
            "Pattern": "arn:.*",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "kinesisfirehose.deliverystream.s3destinationconfiguration.encryptionconfiguration": {
            "Required": "No",
            "Type": "EncryptionConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.s3destinationconfiguration.compressionformat": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "glue.crawler.schemachangepolicy.updatebehavior": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.crawler.schemachangepolicy.deletebehavior": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.targetgrouptuple.targetgrouparn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.targetgrouptuple.weight": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "msk.cluster.configurationinfo.arn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "msk.cluster.configurationinfo.revision": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "iotevents.detectormodel.assetpropertyvariant.stringvalue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.assetpropertyvariant.booleanvalue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.assetpropertyvariant.doublevalue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.assetpropertyvariant.integervalue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinitionversion.functionconfiguration.encodingtype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinitionversion.functionconfiguration.memorysize": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "greengrass.functiondefinitionversion.functionconfiguration.pinned": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "greengrass.functiondefinitionversion.functionconfiguration.execargs": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinitionversion.functionconfiguration.executable": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinitionversion.functionconfiguration.timeout": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "greengrass.functiondefinitionversion.functionconfiguration.environment": {
            "Required": "No",
            "Type": "Environment",
            "UpdateRequires": "Replacement"
        },
        "s3.bucket.tagfilter.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.tagfilter.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.devicedefinition.devicedefinitionversion.devices": {
            "Required": "Yes",
            "Type": [
                "Device"
            ],
            "UpdateRequires": "Replacement"
        },
        "kinesisfirehose.deliverystream.processorparameter.parametername": {
            "Allowed values": "BufferIntervalInSeconds | BufferSizeInMBs | LambdaArn | NumberOfRetries | RoleArn",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.processorparameter.parametervalue": {
            "Pattern": "^(?!\\s*$).+",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "ecs.taskdefinition.dockervolumeconfiguration.driver": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.dockervolumeconfiguration.scope": {
            "Allowed values": "shared | task",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.dockervolumeconfiguration.driveropts": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.dockervolumeconfiguration.labels": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.dockervolumeconfiguration.autoprovision": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.security.group.ingress.cidrip": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.security.group.ingress.groupid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.security.group.ingress.fromport": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ec2.security.group.ingress.sourcesecuritygroupownerid": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.security.group.ingress.cidripv6": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.security.group.ingress.sourcesecuritygroupid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.security.group.ingress.description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.ingress.groupname": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ec2.security.group.ingress.sourceprefixlistid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.security.group.ingress.toport": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ec2.security.group.ingress.sourcesecuritygroupname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.security.group.ingress.ipprotocol": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "appstream.fleet.vpcconfig.subnetids": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "appstream.fleet.vpcconfig.securitygroupids": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.destination.format": {
            "Allowed values": "CSV",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.destination.prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.destination.bucketarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.destination.bucketaccountid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dynamodb.projectionobject.projectiontype": {
            "Allowed values": "ALL | INCLUDE | KEYS_ONLY",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dynamodb.projectionobject.nonkeyattributes": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "20",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpool.schemaattribute.attributedatatype": {
            "Allowed values": "Boolean | DateTime | Number | String",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpool.schemaattribute.stringattributeconstraints": {
            "Required": "No",
            "Type": "StringAttributeConstraints",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpool.schemaattribute.numberattributeconstraints": {
            "Required": "No",
            "Type": "NumberAttributeConstraints",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpool.schemaattribute.developeronlyattribute": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cognito.userpool.schemaattribute.name": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
            "Required": "No",
            "Maximum": "20",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...20",
            "CompliantValues": "1...20"
        },
        "cognito.userpool.schemaattribute.mutable": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cognito.userpool.schemaattribute.required": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codepipeline.customactiontype.configurationproperties.description": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "160",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...160",
            "CompliantValues": "1...160"
        },
        "codepipeline.customactiontype.configurationproperties.secret": {
            "Required": "Yes",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codepipeline.customactiontype.configurationproperties.required": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codepipeline.customactiontype.configurationproperties.name": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "50",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...50",
            "CompliantValues": "1...50"
        },
        "codepipeline.customactiontype.configurationproperties.type": {
            "Allowed values": "Boolean | Number | String",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.customactiontype.configurationproperties.queryable": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codepipeline.customactiontype.configurationproperties.key": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.service.networkconfiguration.awsvpcconfiguration": {
            "Required": "No",
            "Type": "AwsVpcConfiguration",
            "UpdateRequires": "No interruption"
        },
        "wafregional.webacl.action.type": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.capacityprovider.managedscaling.maximumscalingstepsize": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "10000",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...10000",
            "CompliantValues": "1...10000"
        },
        "ecs.capacityprovider.managedscaling.minimumscalingstepsize": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "10000",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...10000",
            "CompliantValues": "1...10000"
        },
        "ecs.capacityprovider.managedscaling.targetcapacity": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "100",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "ecs.capacityprovider.managedscaling.status": {
            "Allowed values": "DISABLED | ENABLED",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "codebuild.project.registrycredential.credential": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.registrycredential.credentialprovider": {
            "Allowed values": "SECRETS_MANAGER",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.skewedinfo.skewedcolumnvaluelocationmaps": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "glue.partition.skewedinfo.skewedcolumnvalues": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.partition.skewedinfo.skewedcolumnnames": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "athena.workgroup.resultconfigurationupdates.removeencryptionconfiguration": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "athena.workgroup.resultconfigurationupdates.removeoutputlocation": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "athena.workgroup.resultconfigurationupdates.outputlocation": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "athena.workgroup.resultconfigurationupdates.encryptionconfiguration": {
            "Required": "No",
            "Type": "EncryptionConfiguration",
            "UpdateRequires": "No interruption"
        },
        "waf.webacl.action.type": {
            "Allowed values": "ALLOW | BLOCK | COUNT",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.deployment.revision.revisiontype": {
            "Allowed values": "AppSpecContent | GitHub | S3 | String",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.deployment.revision.githublocation": {
            "Required": "No",
            "Type": "GitHubLocation",
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.deployment.revision.s3location": {
            "Required": "No",
            "Type": "S3Location",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.userinfoendpoint": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.scope": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.sessiontimeout": {
            "Required": "No",
            "Type": "Long",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.4"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.onunauthenticatedrequest": {
            "Allowed values": "allow | authenticate | deny",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.authenticationrequestextraparams": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.clientid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.clientsecret": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.sessioncookiename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.authorizationendpoint": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.issuer": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticateoidcconfig.tokenendpoint": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticbeanstalk.application.maxagerule.maxageindays": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticbeanstalk.application.maxagerule.enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticbeanstalk.application.maxagerule.deletesourcefroms3": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "greengrass.subscriptiondefinitionversion.subscription.target": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.subscriptiondefinitionversion.subscription.subject": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.subscriptiondefinitionversion.subscription.source": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.subscriptiondefinitionversion.subscription.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.deserializer.hivejsonserde": {
            "Required": "No",
            "Type": "HiveJsonSerDe",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.deserializer.openxjsonserde": {
            "Required": "No",
            "Type": "OpenXJsonSerDe",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.oninput.transitionevents": {
            "Required": "No",
            "Type": [
                "TransitionEvent"
            ],
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.oninput.events": {
            "Required": "No",
            "Type": [
                "Event"
            ],
            "UpdateRequires": "No interruption"
        },
        "stepfunctions.statemachine.loggingconfiguration.includeexecutiondata": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "stepfunctions.statemachine.loggingconfiguration.level": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "stepfunctions.statemachine.loggingconfiguration.destinations": {
            "Required": "No",
            "Type": [
                "LogDestination"
            ],
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.xssmatchstatement.fieldtomatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.xssmatchstatement.texttransformations": {
            "Required": "Yes",
            "Type": [
                "TextTransformation"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.sessioncookiename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.userpooldomain": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.scope": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.sessiontimeout": {
            "Required": "No",
            "Type": "Long",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.4"
        },
        "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.authenticationrequestextraparams": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.onunauthenticatedrequest": {
            "Allowed values": "allow | authenticate | deny",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.userpoolarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.userpoolclientid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.segment.segmentdimensions.demographic.appversion": {
            "Required": "No",
            "Type": "SetDimension",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.demographic.channel": {
            "Required": "No",
            "Type": "SetDimension",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.demographic.make": {
            "Required": "No",
            "Type": "SetDimension",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.demographic.devicetype": {
            "Required": "No",
            "Type": "SetDimension",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.demographic.platform": {
            "Required": "No",
            "Type": "SetDimension",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.demographic.model": {
            "Required": "No",
            "Type": "SetDimension",
            "UpdateRequires": "No interruption"
        },
        "redshift.cluster.loggingproperties.s3keyprefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "redshift.cluster.loggingproperties.bucketname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.variable.datasetcontentversionvalue.datasetname": {
            "Pattern": "^[a-zA-Z0-9_]+$",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "lambda.function.filesystemconfig.localmountpath": {
            "Pattern": "^/mnt/[a-zA-Z0-9-_.]+$",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "160",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "lambda.function.filesystemconfig.arn": {
            "Pattern": "arn:aws[a-zA-Z-]*:elasticfilesystem:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:access-point/fsap-[a-f0-9]{17}",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "200",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.andstatementone.statements": {
            "Required": "Yes",
            "Type": [
                "StatementTwo"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.cloudwatchalarmdefinition.threshold": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "elasticmapreduce.cluster.cloudwatchalarmdefinition.namespace": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.cloudwatchalarmdefinition.statistic": {
            "Allowed values": "AVERAGE | MAXIMUM | MINIMUM | SAMPLE_COUNT | SUM",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.cloudwatchalarmdefinition.period": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.cloudwatchalarmdefinition.metricname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.cloudwatchalarmdefinition.dimensions": {
            "Required": "No",
            "Type": [
                "MetricDimension"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.cloudwatchalarmdefinition.unit": {
            "Allowed values": "BITS | BITS_PER_SECOND | BYTES | BYTES_PER_SECOND | COUNT | COUNT_PER_SECOND | GIGA_BITS | GIGA_BITS_PER_SECOND | GIGA_BYTES | GIGA_BYTES_PER_SECOND | KILO_BITS | KILO_BITS_PER_SECOND | KILO_BYTES | KILO_BYTES_PER_SECOND | MEGA_BITS | MEGA_BITS_PER_SECOND | MEGA_BYTES | MEGA_BYTES_PER_SECOND | MICRO_SECONDS | MILLI_SECONDS | NONE | PERCENT | SECONDS | TERA_BITS | TERA_BITS_PER_SECOND | TERA_BYTES | TERA_BYTES_PER_SECOND",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.cloudwatchalarmdefinition.evaluationperiods": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.cloudwatchalarmdefinition.comparisonoperator": {
            "Allowed values": "GREATER_THAN | GREATER_THAN_OR_EQUAL | LESS_THAN | LESS_THAN_OR_EQUAL",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.instanceipv6address.ipv6address": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.viewercertificate.iamcertificateid": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.viewercertificate.minimumprotocolversion": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.viewercertificate.sslsupportmethod": {
            "Allowed values": "sni-only | vip",
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.viewercertificate.acmcertificatearn": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.viewercertificate.cloudfrontdefaultcertificate": {
            "Required": "Conditional",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.securityconfiguration.encryptionconfiguration.cloudwatchencryption": {
            "Required": "No",
            "Type": "CloudWatchEncryption",
            "UpdateRequires": "No interruption"
        },
        "glue.securityconfiguration.encryptionconfiguration.jobbookmarksencryption": {
            "Required": "No",
            "Type": "JobBookmarksEncryption",
            "UpdateRequires": "No interruption"
        },
        "glue.securityconfiguration.encryptionconfiguration.s3encryptions": {
            "Required": "No",
            "Type": "S3Encryptions",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpool.accountrecoverysetting.recoverymechanisms": {
            "Required": "No",
            "Type": [
                "RecoveryOption"
            ],
            "Maximum": "2",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.networkinterface.ipv6addresses": {
            "Required": "No",
            "Type": [
                "Ipv6Add"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.networkinterface.privateipaddress": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.networkinterface.associatepublicipaddress": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.launchtemplate.networkinterface.deviceindex": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.launchtemplate.networkinterface.interfacetype": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.networkinterface.networkinterfaceid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.networkinterface.groups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.networkinterface.subnetid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.networkinterface.privateipaddresses": {
            "Required": "No",
            "Type": [
                "PrivateIpAdd"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.networkinterface.secondaryprivateipaddresscount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.launchtemplate.networkinterface.ipv6addresscount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.launchtemplate.networkinterface.deleteontermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.launchtemplate.networkinterface.description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.sigv4authorization.signingregion": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.sigv4authorization.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.sigv4authorization.servicename": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.stage.accesslogsettings.destinationarn": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.stage.accesslogsettings.format": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.elasticsearchbufferinghints.intervalinseconds": {
            "Minimum": "60",
            "Required": "No",
            "Maximum": "900",
            "UpdateRequires": "No interruption",
            "AllowedValues": "60...900",
            "CompliantValues": "60...900"
        },
        "kinesisfirehose.deliverystream.elasticsearchbufferinghints.sizeinmbs": {
            "Minimum": "1",
            "Required": "No",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "groundstation.config.decodeconfig.unvalidatedjson": {
            "Required": "Yes",
            "Type": "JSON",
            "UpdateRequires": "No interruption"
        },
        "appconfig.configurationprofile.tags.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appconfig.configurationprofile.tags.key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.patchbaseline.rulegroup.patchrules": {
            "Required": "No",
            "Type": [
                "Rule"
            ],
            "Maximum": "10",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.targetgroup.targetdescription.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.targetgroup.targetdescription.port": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "65535",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...65535",
            "CompliantValues": "1...65535"
        },
        "elasticloadbalancingv2.targetgroup.targetdescription.availabilityzone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.recordset.hostedzonename": {
            "Required": "No",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "route53.recordset.name": {
            "Required": "Yes",
            "Maximum": "1024",
            "UpdateRequires": "Replacement"
        },
        "route53.recordset.weight": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.healthcheckid": {
            "UpdateRequires": "No interruption",
            "Required": "No",
            "Maximum": "64",
            "HealthCheckId`  <a name=\"cfn-route53-recordset-healthcheckid\"></a>\nIf you want Amazon Route 53 to return this resource record set in response to a DNS query only when the status of a health check is healthy, include the `HealthCheckId` element and specify the ID of the applicable health check\\.  \nRoute 53 determines whether a resource record set is healthy based on one of the following:  \n+ By periodically sending a request to the endpoint that is specified in the health check\n+ By aggregating the status of a specified group of health checks \\(calculated health checks\\)\n+ By determining the current state of a CloudWatch alarm \\(CloudWatch metric health checks\\)\nRoute 53 doesn't check the health of the endpoint that is specified in the resource record set, for example, the endpoint specified by the IP address in the `Value` element\\. When you add a `HealthCheckId` element to a resource record set, Route 53 checks the health of the endpoint that you specified in the health check\\. \nFor more information, see the following topics in the *Amazon Route 53 Developer Guide": "+  [How Amazon Route 53 Determines Whether an Endpoint Is Healthy](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html) \n+  [Route 53 Health Checks and DNS Failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html) \n **When to Specify HealthCheckId**   \nSpecifying a value for `HealthCheckId` is useful only when Route 53 is choosing between two or more resource record sets to respond to a DNS query, and you want Route 53 to base the choice in part on the status of a health check\\. Configuring health checks makes sense only in the following configurations:  \n+  **Non\\-alias resource record sets*"
        },
        "route53.recordset.multivalueanswer": {
            "UpdateRequires": "No interruption",
            "Required": "No",
            "Type": "Boolean",
            "MultiValueAnswer`  <a name=\"cfn-route53-recordset-multivalueanswer\"></a>\n *Multivalue answer resource record sets only": "To route traffic approximately randomly to multiple resources, such as web servers, create one multivalue answer record for each resource and specify `true` for `MultiValueAnswer`\\. Note the following:  \n+ If you associate a health check with a multivalue answer resource record set, Amazon Route 53 responds to DNS queries with the corresponding IP address only when the health check is healthy\\.\n+ If you don't associate a health check with a multivalue answer record, Route 53 always considers the record to be healthy\\.\n+ Route 53 responds to DNS queries with up to eight healthy records; if you have eight or fewer healthy records, Route 53 responds to all DNS queries with all the healthy records\\.\n+ If you have more than eight healthy records, Route 53 responds to different DNS resolvers with different combinations of healthy records\\.\n+ When all records are unhealthy, Route 53 responds to DNS queries with up to eight unhealthy records\\.\n+ If a resource becomes unavailable after a resolver caches a response, client software typically tries another of the IP addresses in the response\\.\nYou can't create multivalue answer alias records\\.",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "route53.recordset.resourcerecords": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.aliastarget": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.geolocation": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.region": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.comment": {
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.setidentifier": {
            "Minimum": "1",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "route53.recordset.type": {
            "Type`  <a name=\"cfn-route53-recordset-type\"></a>\nThe DNS record type\\. For information about different record types and how data is encoded for them, see [Supported DNS Resource Record Types](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html) in the *Amazon Route 53 Developer Guide*\\.  \nValid values for basic resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `NS` \\| `PTR` \\| `SOA` \\| `SPF` \\| `SRV` \\| `TXT`   \nValues for weighted, latency, geolocation, and failover resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`\\. When creating a group of weighted, latency, geolocation, or failover resource record sets, specify the same value for all of the resource record sets in the group\\.  \nValid values for multivalue answer resource record sets: `A` \\| `AAAA` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`   \nSPF records were formerly used to verify the identity of the sender of email messages\\. However, we no longer recommend that you create resource record sets for which the value of `Type` is `SPF`\\. RFC 7208, *Sender Policy Framework \\(SPF\\) for Authorizing Use of Domains in Email, Version 1*, has been updated to say, \"\\.\\.\\.\\[I\\]ts existence and mechanism defined in \\[RFC4408\\] have led to some interoperability issues\\. Accordingly, its use is no longer appropriate for SPF version 1; implementations are not to use it\\.\" In RFC 7208, see section 14\\.1, [The SPF DNS Record Type](http://tools.ietf.org/html/rfc7208#section-14.1)\\.\nValues for alias resource record sets:  \n+  **Amazon API Gateway custom regional APIs and edge\\-optimized APIs:** `A` \n+  **CloudFront distributions:** `A` \n\n  If IPv6 is enabled for the distribution, create two resource record sets to route traffic to your distribution, one with a value of `A` and one with a value of `AAAA`\\. \n+  **Amazon API Gateway environment that has a regionalized subdomain*": "A` \n+  **ELB load balancers:** `A` \\| `AAAA` \n+  **Amazon S3 buckets:** `A` \n+  **Amazon Virtual Private Cloud interface VPC endpoints** `A` \n+  **Another resource record set in this hosted zone:** Specify the type of the resource record set that you're creating the alias for\\. All values are supported except `NS` and `SOA`\\.",
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.hostedzoneid": {
            "Required": "No",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "route53.recordset.failover": {
            "Type": "String",
            "Required": "No",
            "Failover`  <a name=\"cfn-route53-recordset-failover\"></a>\n *Failover resource record sets only:* To configure failover, you add the `Failover` element to two resource record sets\\. For one resource record set, you specify `PRIMARY` as the value for `Failover`; for the other resource record set, you specify `SECONDARY`\\. In addition, you include the `HealthCheckId` element and specify the health check that you want Amazon Route 53 to perform for each resource record set\\.  \nExcept where noted, the following failover behaviors assume that you have included the `HealthCheckId` element in both resource record sets:  \n+ When the primary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the secondary resource record set\\.\n+ When the primary resource record set is unhealthy and the secondary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the secondary resource record set\\.\n+ When the secondary resource record set is unhealthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the primary resource record set\\.\n+ If you omit the `HealthCheckId` element for the secondary resource record set, and if the primary resource record set is unhealthy, Route 53 always responds to DNS queries with the applicable value from the secondary resource record set\\. This is true regardless of the health of the associated endpoint\\.\nYou can't create non\\-failover resource record sets that have the same values for the `Name` and `Type` elements as failover resource record sets\\.  \nFor failover alias resource record sets, you must also include the `EvaluateTargetHealth` element and set the value to true\\.  \nFor more information about configuring failover for Route 53, see the following topics in the *Amazon Route 53 Developer Guide": "+  [Route 53 Health Checks and DNS Failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html)",
            "UpdateRequires": "No interruption",
            "Allowed values": "PRIMARY | SECONDARY",
            "SampleValue": "example-string"
        },
        "route53.recordset.ttl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.ondemandoptionsrequest.singleinstancetype": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.ec2fleet.ondemandoptionsrequest.singleavailabilityzone": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.ec2fleet.ondemandoptionsrequest.maxtotalprice": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.ondemandoptionsrequest.mintargetcapacity": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ec2.ec2fleet.ondemandoptionsrequest.allocationstrategy": {
            "Allowed values": "lowest-price | prioritized",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.ondemandoptionsrequest.capacityreservationoptions": {
            "Required": "No",
            "Type": "CapacityReservationOptionsRequest",
            "UpdateRequires": "Replacement"
        },
        "kinesisfirehose.deliverystream.inputformatconfiguration.deserializer": {
            "Required": "No",
            "Type": "Deserializer",
            "UpdateRequires": "No interruption"
        },
        "appstream.imagebuilder.accessendpoint.endpointtype": {
            "Allowed values": "STREAMING",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.imagebuilder.accessendpoint.vpceid": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.datacatalogencryptionsettings.datacatalogencryptionsettings.encryptionatrest": {
            "Required": "No",
            "Type": "EncryptionAtRest",
            "UpdateRequires": "No interruption"
        },
        "glue.datacatalogencryptionsettings.datacatalogencryptionsettings.connectionpasswordencryption": {
            "Required": "No",
            "Type": "ConnectionPasswordEncryption",
            "UpdateRequires": "No interruption"
        },
        "codestar.githubrepository.s3.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Updates are not supported\\.",
            "SampleValue": "example-string"
        },
        "codestar.githubrepository.s3.bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Updates are not supported\\.",
            "SampleValue": "example-string"
        },
        "codestar.githubrepository.s3.objectversion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Updates are not supported\\.",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.linuxparameters.initprocessenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.taskdefinition.linuxparameters.tmpfs": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.linuxparameters.maxswap": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.linuxparameters.swappiness": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.linuxparameters.sharedmemorysize": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.linuxparameters.capabilities": {
            "Required": "No",
            "Type": "KernelCapabilities",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.linuxparameters.devices": {
            "Required": "No",
            "Type": [
                "Device"
            ],
            "UpdateRequires": "Replacement"
        },
        "cloudfront.streamingdistribution.s3origin.originaccessidentity": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.streamingdistribution.s3origin.domainname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iam.policy.2.policyname": {
            "Pattern": "[\\w+=,.@-]+",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iam.policy.2.policydocument": {
            "Pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
            "Required": "Yes",
            "Maximum": "131072",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "Json",
            "AllowedValues": "1...131072",
            "CompliantValues": "1...131072"
        },
        "appmesh.route.grpcroute.timeout": {
            "Required": "No",
            "Type": "GrpcTimeout",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.grpcroute.retrypolicy": {
            "Required": "No",
            "Type": "GrpcRetryPolicy",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.grpcroute.action": {
            "Required": "Yes",
            "Type": "GrpcRouteAction",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.grpcroute.match": {
            "Required": "Yes",
            "Type": "GrpcRouteMatch",
            "UpdateRequires": "No interruption"
        },
        "greengrass.resourcedefinitionversion.resourcedatacontainer.localdeviceresourcedata": {
            "Required": "No",
            "Type": "LocalDeviceResourceData",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinitionversion.resourcedatacontainer.s3machinelearningmodelresourcedata": {
            "Required": "No",
            "Type": "S3MachineLearningModelResourceData",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinitionversion.resourcedatacontainer.sagemakermachinelearningmodelresourcedata": {
            "Required": "No",
            "Type": "SageMakerMachineLearningModelResourceData",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinitionversion.resourcedatacontainer.secretsmanagersecretresourcedata": {
            "Required": "No",
            "Type": "SecretsManagerSecretResourceData",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinitionversion.resourcedatacontainer.localvolumeresourcedata": {
            "Required": "No",
            "Type": "LocalVolumeResourceData",
            "UpdateRequires": "Replacement"
        },
        "elasticloadbalancingv2.listenerrule.conditions.querystringconfig": {
            "Required": "Conditional",
            "Type": "QueryStringConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.conditions.field": {
            "Required": "No",
            "Type": "String",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.conditions.httpheaderconfig": {
            "Required": "Conditional",
            "Type": "HttpHeaderConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.conditions.sourceipconfig": {
            "Required": "Conditional",
            "Type": "SourceIpConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.conditions.values": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.conditions.hostheaderconfig": {
            "Required": "No",
            "Type": "HostHeaderConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.conditions.httprequestmethodconfig": {
            "Required": "Conditional",
            "Type": "HttpRequestMethodConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.conditions.pathpatternconfig": {
            "Required": "No",
            "Type": "PathPatternConfig",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.demodulationconfig.unvalidatedjson": {
            "Required": "Yes",
            "Type": "JSON",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.mappingparameters.csvmappingparameters": {
            "Required": "No",
            "Type": "CSVMappingParameters",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.mappingparameters.jsonmappingparameters": {
            "Required": "No",
            "Type": "JSONMappingParameters",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.audioselector.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.audioselector.selectorsettings": {
            "Required": "No",
            "Type": "AudioSelectorSettings",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolresourceserver.resourceserverscopetype.scopedescription": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "cognito.userpoolresourceserver.resourceserverscopetype.scopename": {
            "Pattern": "[\\x21\\x23-\\x2E\\x30-\\x5B\\x5D-\\x7E]+",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "greengrass.resourcedefinition.groupownersetting.groupowner": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinition.groupownersetting.autoaddgroupowner": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.dataexport.destination": {
            "Required": "Yes",
            "Type": "Destination",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.dataexport.outputschemaversion": {
            "Allowed values": "V_1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appconfig.deploymentstrategy.tags.key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appconfig.deploymentstrategy.tags.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpoolriskconfigurationattachment.compromisedcredentialsriskconfigurationtype.eventfilter": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolriskconfigurationattachment.compromisedcredentialsriskconfigurationtype.actions": {
            "Required": "Yes",
            "Type": "CompromisedCredentialsActionsType",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.inventoryconfiguration.schedulefrequency": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.inventoryconfiguration.enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.inventoryconfiguration.optionalfields": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.inventoryconfiguration.destination": {
            "Required": "Yes",
            "Type": "Destination",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.inventoryconfiguration.prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.inventoryconfiguration.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.inventoryconfiguration.includedobjectversions": {
            "Allowed values": "All | Current",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudtrail.trail.dataresource.values": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudtrail.trail.dataresource.type": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.ec2tagsetlistobject.ec2taggroup": {
            "Required": "No",
            "Type": [
                "EC2TagFilter"
            ],
            "UpdateRequires": "No interruption"
        },
        "lambda.function.vpcconfig.subnetids": {
            "Required": "Yes",
            "Type": "List of String",
            "Maximum": "16",
            "UpdateRequires": "No interruption"
        },
        "lambda.function.vpcconfig.securitygroupids": {
            "Required": "Yes",
            "Type": "List of String",
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "iam.user.loginprofile.passwordresetrequired": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "iam.user.loginprofile.password": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "secretsmanager.rotationschedule.rotationrules.automaticallyafterdays": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "route53resolver.resolverrule.targetaddress.ip": {
            "Minimum": "7",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "36",
            "UpdateRequires": "No interruption",
            "AllowedValues": "7...36",
            "CompliantValues": "7...36"
        },
        "route53resolver.resolverrule.targetaddress.port": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "65535",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...65535",
            "CompliantValues": "0...65535"
        },
        "wafv2.rulegroup.orstatementtwo.statements": {
            "Required": "Yes",
            "Type": [
                "StatementThree"
            ],
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origingroupmember.originid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticache.security.group.ingress.ec2securitygroupname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticache.security.group.ingress.ec2securitygroupownerid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticache.security.group.ingress.cachesecuritygroupname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.partitioninput.storagedescriptor": {
            "Required": "No",
            "Type": "StorageDescriptor",
            "UpdateRequires": "No interruption"
        },
        "glue.partition.partitioninput.values": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "glue.partition.partitioninput.parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "kinesisanalytics.application.inputprocessingconfiguration.inputlambdaprocessor": {
            "Required": "No",
            "Type": "InputLambdaProcessor",
            "UpdateRequires": "No interruption"
        },
        "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.servicerolearn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.documenthash": {
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.outputs3bucketname": {
            "Minimum": "3",
            "Required": "No",
            "Type": "String",
            "Maximum": "63",
            "UpdateRequires": "No interruption",
            "AllowedValues": "3...63",
            "CompliantValues": "3...63"
        },
        "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.timeoutseconds": {
            "Minimum": "30",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "2592000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "30...2592000",
            "CompliantValues": "30...2592000"
        },
        "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.documenthashtype": {
            "Allowed values": "Sha1 | Sha256",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.comment": {
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.outputs3keyprefix": {
            "Required": "No",
            "Type": "String",
            "Maximum": "500",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.notificationconfig": {
            "Required": "No",
            "Type": "NotificationConfig",
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.targettrackingconfiguration.scaleoutcooldown": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "autoscalingplans.scalingplan.targettrackingconfiguration.estimatedinstancewarmup": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "autoscalingplans.scalingplan.targettrackingconfiguration.predefinedscalingmetricspecification": {
            "Required": "No",
            "Type": "PredefinedScalingMetricSpecification",
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.targettrackingconfiguration.scaleincooldown": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "autoscalingplans.scalingplan.targettrackingconfiguration.disablescalein": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "autoscalingplans.scalingplan.targettrackingconfiguration.targetvalue": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "autoscalingplans.scalingplan.targettrackingconfiguration.customizedscalingmetricspecification": {
            "Required": "No",
            "Type": "CustomizedScalingMetricSpecification",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile.arn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.operationname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.authorizationtype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.authorizerid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.target": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.authorizationscopes": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.applicationsettings.campaignhook.weburl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.applicationsettings.campaignhook.mode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.applicationsettings.campaignhook.lambdafunctionname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.imagebuilder.domainjoininfo.directoryname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.imagebuilder.domainjoininfo.organizationalunitdistinguishedname": {
            "Required": "No",
            "Type": "String",
            "Maximum": "2000",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.inputlambdaprocessor.resourcearn": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "appsync.datasource.lambdaconfig.lambdafunctionarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.metricdimension.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.metricdimension.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.environmentproperties.propertygroups": {
            "Required": "No",
            "Type": [
                "PropertyGroup"
            ],
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.scalingaction.simplescalingpolicyconfiguration": {
            "Required": "Yes",
            "Type": "SimpleScalingPolicyConfiguration",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.scalingaction.market": {
            "Allowed values": "ON_DEMAND | SPOT",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.blockdev.mapping.nodevice": {
            "Required": "No",
            "Type": "NoDevice",
            "UpdateRequires": "No interruption"
        },
        "ec2.blockdev.mapping.devicename": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.blockdev.mapping.ebs": {
            "Required": "Conditional",
            "Type": "Ebs",
            "UpdateRequires": "No interruption"
        },
        "ec2.blockdev.mapping.virtualname": {
            "VirtualName`  <a name=\"cfn-ec2-blockdev-mapping-virtualname\"></a>\nThe virtual device name \\(`ephemeral`N\\)\\. The name must be in the form `ephemeral`*X* where *X* is a number starting from zero \\(0\\)\\. For example, an instance type with 2 available instance store volumes can specify mappings for `ephemeral0` and `ephemeral1`\\. The number of available instance store volumes depends on the instance type\\. After you connect to the instance, you must mount the volume\\.  \nNVMe instance store volumes are automatically enumerated and assigned a device name\\. Including them in your block device mapping has no effect\\.  \nYou can specify either `VirtualName` or `Ebs`, but not both\\.  \n *Constraints": "For M3 instances, you must specify instance store volumes in the block device mapping for the instance\\. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI\\.",
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.kinesisaction.streamname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.kinesisaction.partitionkey": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.kinesisaction.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.localdeviceresourcedata.sourcepath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.localdeviceresourcedata.groupownersetting": {
            "Required": "No",
            "Type": "GroupOwnerSetting",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.instancefleetprovisioningspecifications.spotspecification": {
            "Required": "Yes",
            "Type": "SpotProvisioningSpecification",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.texttransformation.priority": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.webacl.texttransformation.type": {},
        "wafv2.webacl.texttransformation.compress_white_space": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.regexpatternsetreferencestatement": {
            "Required": "No",
            "Type": "RegexPatternSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.notstatement": {
            "Required": "No",
            "Type": "NotStatementTwo",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.bytematchstatement": {
            "Required": "No",
            "Type": "ByteMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.ipsetreferencestatement": {
            "Required": "No",
            "Type": "IPSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.sizeconstraintstatement": {
            "Required": "No",
            "Type": "SizeConstraintStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.rulegroupreferencestatement": {
            "Required": "No",
            "Type": "RuleGroupReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.managedrulegroupstatement": {
            "Required": "No",
            "Type": "ManagedRuleGroupStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.xssmatchstatement": {
            "Required": "No",
            "Type": "XssMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.geomatchstatement": {
            "Required": "No",
            "Type": "GeoMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.sqlimatchstatement": {
            "Required": "No",
            "Type": "SqliMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.ratebasedstatement": {
            "Required": "No",
            "Type": "RateBasedStatementTwo",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.orstatement": {
            "Required": "No",
            "Type": "OrStatementTwo",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementtwo.andstatement": {
            "Required": "No",
            "Type": "AndStatementTwo",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskdefinition.resourcerequirement.type": {
            "Allowed values": "GPU | InferenceAccelerator",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.resourcerequirement.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.loadbalancer.loadbalancerattributes.value": {
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.loadbalancer.loadbalancerattributes.key": {
            "Pattern": "^[a-zA-Z0-9._]+$",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualservice.virtualserviceprovider.virtualrouter": {
            "Required": "No",
            "Type": "VirtualRouterServiceProvider",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualservice.virtualserviceprovider.virtualnode": {
            "Required": "No",
            "Type": "VirtualNodeServiceProvider",
            "UpdateRequires": "No interruption"
        },
        "ec2.clientvpnendpoint.clientauthenticationrequest.mutualauthentication": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.clientvpnendpoint.clientauthenticationrequest.type": {
            "Allowed values": "certificate-authentication | directory-service-authentication | federated-authentication",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.clientvpnendpoint.clientauthenticationrequest.activedirectory": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.clientvpnendpoint.clientauthenticationrequest.federatedauthentication": {
            "Required": "No",
            "Type": "FederatedAuthenticationRequest",
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.customizedscalingmetricspecification.statistic": {
            "Allowed values": "Average | Maximum | Minimum | SampleCount | Sum",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.customizedscalingmetricspecification.dimensions": {
            "Required": "No",
            "Type": [
                "MetricDimension"
            ],
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.customizedscalingmetricspecification.unit": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.customizedscalingmetricspecification.metricname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.customizedscalingmetricspecification.namespace": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.fleet.domainjoininfo.directoryname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.fleet.domainjoininfo.organizationalunitdistinguishedname": {
            "Required": "No",
            "Type": "String",
            "Maximum": "2000",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.cognitouserpoolconfig.awsregion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.cognitouserpoolconfig.appidclientregex": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.cognitouserpoolconfig.userpoolid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "synthetics.canary.schedule.expression": {
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "synthetics.canary.schedule.durationinseconds": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.storagedescriptor.bucketcolumns": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.table.storagedescriptor.location": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.storagedescriptor.serdeinfo": {
            "Required": "No",
            "Type": "SerdeInfo",
            "UpdateRequires": "No interruption"
        },
        "glue.table.storagedescriptor.skewedinfo": {
            "Required": "No",
            "Type": "SkewedInfo",
            "UpdateRequires": "No interruption"
        },
        "glue.table.storagedescriptor.outputformat": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.storagedescriptor.sortcolumns": {
            "Required": "No",
            "Type": [
                "Order"
            ],
            "UpdateRequires": "No interruption"
        },
        "glue.table.storagedescriptor.inputformat": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.storagedescriptor.parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "glue.table.storagedescriptor.columns": {
            "Required": "No",
            "Type": [
                "Column"
            ],
            "UpdateRequires": "No interruption"
        },
        "glue.table.storagedescriptor.storedassubdirectories": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.table.storagedescriptor.compressed": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.table.storagedescriptor.numberofbuckets": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "amplify.app.basicauthconfig.password": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amplify.app.basicauthconfig.enablebasicauth": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "amplify.app.basicauthconfig.username": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticbeanstalk.application.applicationversionlifecycleconfig.maxagerule": {
            "Required": "No",
            "Type": "MaxAgeRule",
            "UpdateRequires": "No interruption"
        },
        "elasticbeanstalk.application.applicationversionlifecycleconfig.maxcountrule": {
            "Required": "No",
            "Type": "MaxCountRule",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.singleheader.name": {
            "Pattern": ".*\\S.*",
            "Required": "No",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "wafv2-webacl-singleheader-properties": {
            "Name": {
                "Pattern": ".*\\S.*",
                "Required": "No",
                "Maximum": "64",
                "UpdateRequires": "No interruption",
                "Minimum": "1",
                "Type": "String",
                "AllowedValues": "1...64",
                "CompliantValues": "1...64"
            }
        },
        "medialive.inputsecuritygroup.inputwhitelistrulecidr.cidr": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.audiopidselection.pid": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "config.remediationconfiguration.ssmcontrols.concurrentexecutionratepercentage": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "config.remediationconfiguration.ssmcontrols.errorpercentage": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "iotanalytics.pipeline.activity.addattributes": {
            "Required": "No",
            "Type": "AddAttributes",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.activity.channel": {
            "Required": "No",
            "Type": "Channel",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.activity.lambda": {
            "Required": "No",
            "Type": "Lambda",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.activity.removeattributes": {
            "Required": "No",
            "Type": "RemoveAttributes",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.activity.deviceregistryenrich": {
            "Required": "No",
            "Type": "DeviceRegistryEnrich",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.activity.math": {
            "Required": "No",
            "Type": "Math",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.activity.selectattributes": {
            "Required": "No",
            "Type": "SelectAttributes",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.activity.deviceshadowenrich": {
            "Required": "No",
            "Type": "DeviceShadowEnrich",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.activity.datastore": {
            "Required": "No",
            "Type": "Datastore",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.activity.filter": {
            "Required": "No",
            "Type": "Filter",
            "UpdateRequires": "No interruption"
        },
        "sagemaker.endpointconfig.productionvariant.initialvariantweight": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "Replacement",
            "SampleValue": "123.45"
        },
        "sagemaker.endpointconfig.productionvariant.variantname": {
            "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "63",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sagemaker.endpointconfig.productionvariant.acceleratortype": {
            "Allowed values": "ml.eia1.large | ml.eia1.medium | ml.eia1.xlarge | ml.eia2.large | ml.eia2.medium | ml.eia2.xlarge",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sagemaker.endpointconfig.productionvariant.modelname": {
            "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "63",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sagemaker.endpointconfig.productionvariant.instancetype": {
            "Allowed values": "ml.c4.2xlarge | ml.c4.4xlarge | ml.c4.8xlarge | ml.c4.large | ml.c4.xlarge | ml.c5.18xlarge | ml.c5.2xlarge | ml.c5.4xlarge | ml.c5.9xlarge | ml.c5.large | ml.c5.xlarge | ml.c5d.18xlarge | ml.c5d.2xlarge | ml.c5d.4xlarge | ml.c5d.9xlarge | ml.c5d.large | ml.c5d.xlarge | ml.g4dn.12xlarge | ml.g4dn.16xlarge | ml.g4dn.2xlarge | ml.g4dn.4xlarge | ml.g4dn.8xlarge | ml.g4dn.xlarge | ml.inf1.24xlarge | ml.inf1.2xlarge | ml.inf1.6xlarge | ml.inf1.xlarge | ml.m4.10xlarge | ml.m4.16xlarge | ml.m4.2xlarge | ml.m4.4xlarge | ml.m4.xlarge | ml.m5.12xlarge | ml.m5.24xlarge | ml.m5.2xlarge | ml.m5.4xlarge | ml.m5.large | ml.m5.xlarge | ml.m5d.12xlarge | ml.m5d.24xlarge | ml.m5d.2xlarge | ml.m5d.4xlarge | ml.m5d.large | ml.m5d.xlarge | ml.p2.16xlarge | ml.p2.8xlarge | ml.p2.xlarge | ml.p3.16xlarge | ml.p3.2xlarge | ml.p3.8xlarge | ml.r5.12xlarge | ml.r5.24xlarge | ml.r5.2xlarge | ml.r5.4xlarge | ml.r5.large | ml.r5.xlarge | ml.r5d.12xlarge | ml.r5d.24xlarge | ml.r5d.2xlarge | ml.r5d.4xlarge | ml.r5d.large | ml.r5d.xlarge | ml.t2.2xlarge | ml.t2.large | ml.t2.medium | ml.t2.xlarge",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sagemaker.endpointconfig.productionvariant.initialinstancecount": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "appmesh.virtualnode.tagref.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.tagref.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "eks.nodegroup.remoteaccess.sourcesecuritygroups": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "eks.nodegroup.remoteaccess.ec2sshkey": {
            "Required": "Yes",
            "UpdateRequires": "Replacement"
        },
        "pinpointemail.configurationseteventdestination.dimensionconfiguration.dimensionvaluesource": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpointemail.configurationseteventdestination.dimensionconfiguration.defaultdimensionvalue": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpointemail.configurationseteventdestination.dimensionconfiguration.dimensionname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.source.reportbuildstatus": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codebuild.project.source.gitclonedepth": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "codebuild.project.source.gitsubmodulesconfig": {
            "Required": "No",
            "Type": "GitSubmodulesConfig",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.source.location": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.source.buildspec": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.source.type": {
            "Allowed values": "BITBUCKET | CODECOMMIT | CODEPIPELINE | GITHUB | GITHUB_ENTERPRISE | NO_SOURCE | S3",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.source.sourceidentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.source.insecuressl": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codebuild.project.source.auth": {
            "Required": "No",
            "Type": "SourceAuth",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.source.buildstatusconfig": {
            "Required": "No",
            "Type": "BuildStatusConfig",
            "UpdateRequires": "No interruption"
        },
        "pinpointemail.configurationseteventdestination.cloudwatchdestination.dimensionconfigurations": {
            "Required": "No",
            "Type": [
                "DimensionConfiguration"
            ],
            "UpdateRequires": "No interruption"
        },
        "opsworks.stack.elasticip.ip": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.elasticip.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waf.sizeconstraintset.sizeconstraint.texttransformation": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "waf.sizeconstraintset.sizeconstraint.size": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "waf.sizeconstraintset.sizeconstraint.fieldtomatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "waf.sizeconstraintset.sizeconstraint.comparisonoperator": {
            "ComparisonOperator`  <a name=\"cfn-waf-sizeconstraintset-sizeconstraint-comparisonoperator\"></a>\nThe type of comparison you want AWS WAF to perform\\. AWS WAF uses this in combination with the provided `Size` and `FieldToMatch` to build an expression in the form of \"`Size` `ComparisonOperator` size in bytes of `FieldToMatch`\"\\. If that expression is true, the `SizeConstraint` is considered to match\\.  \n **EQ*": "Used to test if the `Size` is equal to the size of the `FieldToMatch`   \n **NE*",
            "Allowed values": "EQ | GE | GT | LE | LT | NE",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.systemcontrol.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.systemcontrol.namespace": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "glue.job.jobcommand.scriptlocation": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.job.jobcommand.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.job.jobcommand.pythonversion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.regexpatternset.regex.regexstring": {
            "Pattern": ".*",
            "Required": "No",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "wafv2-regexpatternset-regex-properties": {
            "RegexString": {
                "Pattern": ".*",
                "Required": "No",
                "Maximum": "512",
                "UpdateRequires": "No interruption",
                "Minimum": "1",
                "Type": "String",
                "AllowedValues": "1...512",
                "CompliantValues": "1...512"
            }
        },
        "opsworkscm.server.engineattribute.name": {
            "Pattern": "(?s).*",
            "Required": "No",
            "Maximum": "10000",
            "UpdateRequires": "No interruption"
        },
        "opsworkscm.server.engineattribute.value": {
            "Pattern": "(?s).*",
            "Required": "No",
            "Maximum": "10000",
            "UpdateRequires": "No interruption"
        },
        "applicationautoscaling.scalingpolicy.customizedmetricspecification.metricname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalingpolicy.customizedmetricspecification.dimensions": {
            "Required": "No",
            "Type": [
                "MetricDimension"
            ],
            "UpdateRequires": "No interruption"
        },
        "applicationautoscaling.scalingpolicy.customizedmetricspecification.unit": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalingpolicy.customizedmetricspecification.statistic": {
            "Allowed values": "Average | Maximum | Minimum | SampleCount | Sum",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalingpolicy.customizedmetricspecification.namespace": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.target.key": {
            "Pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$|resource-groups:ResourceTypeFilters|resource-groups:Name",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "163",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...163",
            "CompliantValues": "1...163"
        },
        "ssm.maintenancewindowtask.target.values": {
            "Required": "No",
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.campaigneventfilter.dimensions": {
            "Required": "No",
            "Type": "EventDimensions",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.campaigneventfilter.filtertype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpool.verificationmessagetemplate.smsmessage": {
            "Pattern": ".*\\{####\\}.*",
            "Required": "No",
            "Maximum": "140",
            "UpdateRequires": "No interruption",
            "Minimum": "6",
            "Type": "String",
            "AllowedValues": "6...140",
            "CompliantValues": "6...140"
        },
        "cognito.userpool.verificationmessagetemplate.emailmessage": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{####\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
            "Required": "No",
            "Maximum": "20000",
            "UpdateRequires": "No interruption",
            "Minimum": "6",
            "Type": "String",
            "AllowedValues": "6...20000",
            "CompliantValues": "6...20000"
        },
        "cognito.userpool.verificationmessagetemplate.emailmessagebylink": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{##[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*##\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
            "Required": "No",
            "Maximum": "20000",
            "UpdateRequires": "No interruption",
            "Minimum": "6",
            "Type": "String",
            "AllowedValues": "6...20000",
            "CompliantValues": "6...20000"
        },
        "cognito.userpool.verificationmessagetemplate.emailsubject": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
            "Required": "No",
            "Maximum": "140",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...140",
            "CompliantValues": "1...140"
        },
        "cognito.userpool.verificationmessagetemplate.emailsubjectbylink": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
            "Required": "No",
            "Maximum": "140",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...140",
            "CompliantValues": "1...140"
        },
        "cognito.userpool.verificationmessagetemplate.defaultemailoption": {
            "Allowed values": "CONFIRM_WITH_CODE | CONFIRM_WITH_LINK",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.config.trackingconfig.autotrack": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.column.comment": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.column.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.column.type": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.assetpropertytimestamp.timeinseconds": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.assetpropertytimestamp.offsetinnanos": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.dataflowendpointgroup.dataflowendpoint.address": {
            "Required": "No",
            "Type": "SocketAddress",
            "UpdateRequires": "No interruption"
        },
        "groundstation.dataflowendpointgroup.dataflowendpoint.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "sagemaker.workteam.cognitomemberdefinition.cognitousergroup": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "sagemaker.workteam.cognitomemberdefinition.cognitouserpool": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sagemaker.workteam.cognitomemberdefinition.cognitoclientid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.layer.volumeconfiguration.encrypted": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "opsworks.layer.volumeconfiguration.iops": {
            "Required": "Conditional",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "opsworks.layer.volumeconfiguration.size": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "opsworks.layer.volumeconfiguration.volumetype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.layer.volumeconfiguration.mountpoint": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.layer.volumeconfiguration.raidlevel": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "opsworks.layer.volumeconfiguration.numberofdisks": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.route.grpcroutemetadata.match": {
            "Required": "No",
            "Type": "GrpcRouteMetadataMatchMethod",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.grpcroutemetadata.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.grpcroutemetadata.invert": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticmapreduce.cluster.simplescalingpolicyconfiguration.scalingadjustment": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.simplescalingpolicyconfiguration.cooldown": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.simplescalingpolicyconfiguration.adjustmenttype": {
            "Allowed values": "CHANGE_IN_CAPACITY | EXACT_CAPACITY | PERCENT_CHANGE_IN_CAPACITY",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "imagebuilder.imagepipeline.imagetestsconfiguration.imagetestsenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "imagebuilder.imagepipeline.imagetestsconfiguration.timeoutminutes": {
            "Minimum": "60",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "1440",
            "UpdateRequires": "No interruption",
            "AllowedValues": "60...1440",
            "CompliantValues": "60...1440"
        },
        "as.tags.value": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "as.tags.propagateatlaunch": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "as.tags.key": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "elasticmapreduce.instancegroupconfig.scalingconstraints.mincapacity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.instancegroupconfig.scalingconstraints.maxcapacity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cognito.userpoolriskconfigurationattachment.accounttakeoveractiontype.notify": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cognito.userpoolriskconfigurationattachment.accounttakeoveractiontype.eventaction": {
            "Allowed values": "BLOCK | MFA_IF_CONFIGURED | MFA_REQUIRED | NO_ACTION",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.authorizationconfig.authorizationtype": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "AuthorizationType`  <a name=\"cfn-appsync-datasource-authorizationconfig-authorizationtype\"></a>\nThe authorization type required by the HTTP endpoint\\.  \n+  **AWS\\_IAM*": "The authorization type is Sigv4\\.",
            "SampleValue": "example-string"
        },
        "appsync.datasource.authorizationconfig.awsiamconfig": {
            "Required": "No",
            "Type": "AwsIamConfig",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.methodsetting.httpmethod": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.deployment.stagedescription.methodsetting.throttlingratelimit": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.methodsetting.cachedataencrypted": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigateway.deployment.stagedescription.methodsetting.throttlingburstlimit": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.methodsetting.resourcepath": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.deployment.stagedescription.methodsetting.cachingenabled": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigateway.deployment.stagedescription.methodsetting.datatraceenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigateway.deployment.stagedescription.methodsetting.cachettlinseconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apigateway.deployment.stagedescription.methodsetting.logginglevel": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.methodsetting.metricsenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "managedblockchain.member.memberconfiguration.name": {
            "Pattern": "^(?!-)^[^0-9](?!.*--)[A-Za-z0-9-]+[^- ]$",
            "Required": "Yes",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "managedblockchain.member.memberconfiguration.memberframeworkconfiguration": {
            "Required": "No",
            "Type": "MemberFrameworkConfiguration",
            "UpdateRequires": "No interruption"
        },
        "managedblockchain.member.memberconfiguration.description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.proxyconfiguration.containername": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.proxyconfiguration.proxyconfigurationproperties": {
            "Required": "No",
            "Type": [
                "KeyValuePair"
            ],
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.proxyconfiguration.type": {
            "Allowed values": "APPMESH",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "msk.cluster.clientauthentication.tls": {
            "Required": "No",
            "Type": "Tls",
            "UpdateRequires": "Replacement"
        },
        "glue.table.skewedinfo.skewedcolumnvalues": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.table.skewedinfo.skewedcolumnnames": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.table.skewedinfo.skewedcolumnvaluelocationmaps": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "ecs.taskdefinition.secret.valuefrom": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.secret.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "amplify.branch.basicauthconfig.password": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amplify.branch.basicauthconfig.enablebasicauth": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "amplify.branch.basicauthconfig.username": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpoolriskconfigurationattachment.compromisedcredentialsactionstype.eventaction": {
            "Allowed values": "BLOCK | NO_ACTION",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.autoscalingpolicy.rules": {
            "Required": "Yes",
            "Type": [
                "ScalingRule"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.autoscalingpolicy.constraints": {
            "Required": "Yes",
            "Type": "ScalingConstraints",
            "UpdateRequires": "No interruption"
        },
        "networkmanager.site.location.latitude": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "networkmanager.site.location.address": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "networkmanager.site.location.longitude": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.managedrulegroupstatement.vendorname": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafv2.webacl.managedrulegroupstatement.excludedrules": {
            "Required": "No",
            "Type": [
                "ExcludedRule"
            ],
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.managedrulegroupstatement.name": {
            "Pattern": "^[\\w\\-]+$",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "greengrass.resourcedefinitionversion.resourceinstance.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.resourceinstance.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.resourceinstance.resourcedatacontainer": {
            "Required": "Yes",
            "Type": "ResourceDataContainer",
            "UpdateRequires": "Replacement"
        },
        "events.rule.kinesisparameters.partitionkeypath": {
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption"
        },
        "ec2.ec2fleet.tagspecification.tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "Replacement"
        },
        "ec2.ec2fleet.tagspecification.resourcetype": {
            "Allowed values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | elastic-gpu | elastic-ip | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | internet-gateway | key-pair | launch-template | local-gateway-route-table-vpc-association | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-flow-log | vpc-peering-connection | vpn-connection | vpn-gateway",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "glue.classifier.xmlclassifier.classification": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.classifier.xmlclassifier.rowtag": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.classifier.xmlclassifier.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "glue.database.databaseinput.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "glue.database.databaseinput.description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.database.databaseinput.parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "glue.database.databaseinput.locationuri": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.environment.type": {
            "Allowed values": "ARM_CONTAINER | LINUX_CONTAINER | LINUX_GPU_CONTAINER | WINDOWS_CONTAINER",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.environment.registrycredential": {
            "Required": "No",
            "Type": "RegistryCredential",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.environment.- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codebuild.project.environment.privilegedmode": {},
        "codebuild.project.environment.computetype": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.environment.- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&": {},
        "codebuild.project.environment.image": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.environment.certificate": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.environment.environmentvariables": {
            "Required": "No",
            "Type": [
                "EnvironmentVariable"
            ],
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.environment.- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"": {},
        "codebuild.project.environment.imagepullcredentialstype": {
            "Allowed values": "CODEBUILD | SERVICE_ROLE",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.defaultpushnotificationtemplate.title": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.defaultpushnotificationtemplate.body": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.defaultpushnotificationtemplate.url": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.defaultpushnotificationtemplate.sound": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.defaultpushnotificationtemplate.action": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.routespec.httproute": {
            "Required": "No",
            "Type": "HttpRoute",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.routespec.tcproute": {
            "Required": "No",
            "Type": "TcpRoute",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.routespec.grpcroute": {
            "Required": "No",
            "Type": "GrpcRoute",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.routespec.http2route": {
            "Required": "No",
            "Type": "HttpRoute",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.routespec.priority": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "codebuild.project.projectsourceversion.sourceversion": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.projectsourceversion.sourceidentifier": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.websiteconfiguration.routingrules.redirectrule.protocol": {
            "Allowed values": "http | https",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.websiteconfiguration.routingrules.redirectrule.hostname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.websiteconfiguration.routingrules.redirectrule.replacekeyprefixwith": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.websiteconfiguration.routingrules.redirectrule.httpredirectcode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.websiteconfiguration.routingrules.redirectrule.replacekeywith": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.autoscalinggroup.instancesdistribution.spotmaxprice": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...255",
            "CompliantValues": "0...255"
        },
        "autoscaling.autoscalinggroup.instancesdistribution.ondemandbasecapacity": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "1"
        },
        "autoscaling.autoscalinggroup.instancesdistribution.spotinstancepools": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "autoscaling.autoscalinggroup.instancesdistribution.spotallocationstrategy": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.autoscalinggroup.instancesdistribution.ondemandallocationstrategy": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.autoscalinggroup.instancesdistribution.ondemandpercentageabovebasecapacity": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "1"
        },
        "wafv2.webacl.ratebasedstatementone.limit": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.webacl.ratebasedstatementone.scopedownstatement": {
            "Required": "No",
            "Type": "StatementTwo",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.ratebasedstatementone.aggregatekeytype": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.logsconfig.cloudwatchlogs": {
            "Required": "No",
            "Type": "CloudWatchLogsConfig",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.logsconfig.s3logs": {
            "Required": "No",
            "Type": "S3LogsConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticbeanstalk.application.maxcountrule.maxcount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticbeanstalk.application.maxcountrule.enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticbeanstalk.application.maxcountrule.deletesourcefroms3": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "autoscaling.scalingpolicy.predefinedmetricspecification.predefinedmetrictype": {
            "Allowed values": "ALBRequestCountPerTarget | ASGAverageCPUUtilization | ASGAverageNetworkIn | ASGAverageNetworkOut",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.scalingpolicy.predefinedmetricspecification.resourcelabel": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Conditional",
            "Maximum": "1023",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1023",
            "CompliantValues": "1...1023"
        },
        "appsync.datasource.rdshttpendpointconfig.dbclusteridentifier": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.rdshttpendpointconfig.awssecretstorearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.rdshttpendpointconfig.databasename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.rdshttpendpointconfig.schema": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.rdshttpendpointconfig.awsregion": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.domainname.domainnameconfiguration.certificatearn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.domainname.domainnameconfiguration.certificatename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.domainname.domainnameconfiguration.endpointtype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.portmappings.containerport": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.containerdefinitions.portmappings.hostport": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.containerdefinitions.portmappings.protocol": {
            "Allowed values": "tcp | udp",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.scalingtrigger.cloudwatchalarmdefinition": {
            "Required": "Yes",
            "Type": "CloudWatchAlarmDefinition",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.geolocation.continentcode": {
            "Required": "No",
            "Maximum": "2",
            "UpdateRequires": "No interruption",
            "Minimum": "2",
            "ContinentCode`  <a name=\"cfn-route53-recordset-geolocation-continentcode\"></a>\nFor geolocation resource record sets, a two\\-letter abbreviation that identifies a continent\\. Route 53 supports the following continent codes:  \n+ **AF*": "Africa\n+ **AN*",
            "Type": "String",
            "AllowedValues": "2...2",
            "CompliantValues": "2...2"
        },
        "route53.recordset.geolocation.subdivisioncode": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "3",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...3",
            "CompliantValues": "1...3"
        },
        "route53.recordset.geolocation.countrycode": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "2",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2",
            "CompliantValues": "1...2"
        },
        "eks.nodegroup.scalingconfig.maxsize": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "eks.nodegroup.scalingconfig.minsize": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "eks.nodegroup.scalingconfig.desiredsize": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "dynamodb.gsi.indexname": {
            "Pattern": "[a-zA-Z0-9_.-]+",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...255",
            "CompliantValues": "3...255"
        },
        "dynamodb.gsi.keyschema": {
            "Required": "Yes",
            "Maximum": "2",
            "UpdateRequires": "No interruption"
        },
        "dynamodb.gsi.projection": {
            "Required": "Yes",
            "Type": "Projection",
            "UpdateRequires": "No interruption"
        },
        "dynamodb.gsi.provisionedthroughput": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.duration.value": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.route.duration.unit": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.regexpatternset.taglist.taglist": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-regexpatternset-taglist-properties": {
            "TagList": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents.detectormodel.detectormodeldefinition.initialstatename": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotevents.detectormodel.detectormodeldefinition.states": {
            "Required": "No",
            "Type": [
                "State"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.kerberosattributes.addomainjoinuser": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.kerberosattributes.realm": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.kerberosattributes.addomainjoinpassword": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.kerberosattributes.crossrealmtrustprincipalpassword": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.kerberosattributes.kdcadminpassword": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "iotanalytics.channel.channelstorage.servicemanageds3": {
            "Required": "No",
            "Type": "ServiceManagedS3",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.channel.channelstorage.customermanageds3": {
            "Required": "No",
            "Type": "CustomerManagedS3",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpool.stringattributeconstraints.maxlength": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpool.stringattributeconstraints.minlength": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.event.actions": {
            "Required": "No",
            "Type": [
                "Action"
            ],
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.event.eventname": {
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.event.condition": {
            "Required": "No",
            "Type": "String",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration.executiontimeout": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration.delayuntilelbconnectionsdrained": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "opsworks.stack.rdsdbinstance.rdsdbinstancearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.rdsdbinstance.dbuser": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.rdsdbinstance.dbpassword": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "ssm.resourcedatasync.awsorganizationssource.organizationsourcetype": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "64",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "ssm.resourcedatasync.awsorganizationssource.organizationalunits": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "1000",
            "UpdateRequires": "No interruption"
        },
        "elasticsearch.domain.encryptionatrestoptions.kmskeyid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticsearch.domain.encryptionatrestoptions.enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "pinpoint.segment.attributedimension.values": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.attributedimension.attributetype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates": {
            "Required": "Yes",
            "Type": "Coordinates",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.location.gpspoint.rangeinkilometers": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "events.rule.networkconfiguration.awsvpcconfiguration": {
            "Required": "No",
            "Type": "AwsVpcConfiguration",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.ipsetreferencestatement.arn": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "elasticloadbalancingv2.listenerrule.sourceipconfig.values": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.onpremisestagset.onpremisestagsetlist": {
            "Required": "No",
            "Type": [
                "OnPremisesTagSetListObject"
            ],
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.captionselectorsettings.scte27sourcesettings": {
            "Required": "No",
            "Type": "Scte27SourceSettings",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.captionselectorsettings.teletextsourcesettings": {
            "Required": "No",
            "Type": "TeletextSourceSettings",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.captionselectorsettings.scte20sourcesettings": {
            "Required": "No",
            "Type": "Scte20SourceSettings",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.captionselectorsettings.embeddedsourcesettings": {
            "Required": "No",
            "Type": "EmbeddedSourceSettings",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.captionselectorsettings.dvbsubsourcesettings": {
            "Required": "No",
            "Type": "DvbSubSourceSettings",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.captionselectorsettings.aribsourcesettings": {
            "Required": "No",
            "Type": "AribSourceSettings",
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.ec2tagset.ec2tagsetlist": {
            "Required": "No",
            "Type": [
                "EC2TagSetListObject"
            ],
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.xssmatchstatement": {
            "Required": "No",
            "Type": "XssMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.regexpatternsetreferencestatement": {
            "Required": "No",
            "Type": "RegexPatternSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.ratebasedstatement": {
            "Required": "No",
            "Type": "RateBasedStatementTwo",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.andstatement": {
            "Required": "No",
            "Type": "AndStatementTwo",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.geomatchstatement": {
            "Required": "No",
            "Type": "GeoMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.orstatement": {
            "Required": "No",
            "Type": "OrStatementTwo",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.ipsetreferencestatement": {
            "Required": "No",
            "Type": "IPSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.notstatement": {
            "Required": "No",
            "Type": "NotStatementTwo",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.sizeconstraintstatement": {
            "Required": "No",
            "Type": "SizeConstraintStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.bytematchstatement": {
            "Required": "No",
            "Type": "ByteMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementtwo.sqlimatchstatement": {
            "Required": "No",
            "Type": "SqliMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "lambda.alias.aliasroutingconfiguration.additionalversionweights": {
            "Required": "Yes",
            "Type": [
                "VersionWeight"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.targetgroup.arn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.mesh.meshspec.egressfilter": {
            "Required": "No",
            "Type": "EgressFilter",
            "UpdateRequires": "No interruption"
        },
        "wafregional.bytematchset.fieldtomatch.data": {
            "Pattern": ".*\\S.*",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafregional.bytematchset.fieldtomatch.type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.resettimer.timername": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "apigatewayv2.routeresponse.parameterconstraints.required": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "kinesisfirehose.deliverystream.splunkdestinationconfiguration.processingconfiguration": {
            "Required": "No",
            "Type": "ProcessingConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.splunkdestinationconfiguration.retryoptions": {
            "Required": "No",
            "Type": "SplunkRetryOptions",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.splunkdestinationconfiguration.cloudwatchloggingoptions": {
            "Required": "No",
            "Type": "CloudWatchLoggingOptions",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.splunkdestinationconfiguration.hecendpointtype": {
            "Allowed values": "Event | Raw",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.splunkdestinationconfiguration.hectoken": {
            "Pattern": ".*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...2048",
            "CompliantValues": "0...2048"
        },
        "kinesisfirehose.deliverystream.splunkdestinationconfiguration.hecendpoint": {
            "Pattern": ".*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...2048",
            "CompliantValues": "0...2048"
        },
        "kinesisfirehose.deliverystream.splunkdestinationconfiguration.s3configuration": {
            "Required": "Yes",
            "Type": "S3DestinationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.splunkdestinationconfiguration.s3backupmode": {
            "Allowed values": "AllEvents | FailedEventsOnly",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.splunkdestinationconfiguration.hecacknowledgmenttimeoutinseconds": {
            "Minimum": "180",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "600",
            "UpdateRequires": "No interruption",
            "AllowedValues": "180...600",
            "CompliantValues": "180...600"
        },
        "greengrass.functiondefinition.functiondefinitionversion.functions": {
            "Required": "Yes",
            "Type": [
                "Function"
            ],
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinition.functiondefinitionversion.defaultconfig": {
            "Required": "No",
            "Type": "DefaultConfig",
            "UpdateRequires": "Replacement"
        },
        "ssm.maintenancewindowtask.maintenancewindowstepfunctionsparameters.name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "80",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...80",
            "CompliantValues": "1...80"
        },
        "ssm.maintenancewindowtask.maintenancewindowstepfunctionsparameters.input": {
            "Required": "No",
            "Type": "String",
            "Maximum": "4096",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.optiongroup.optionconfigurations.optionsettings.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.optiongroup.optionconfigurations.optionsettings.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "sns.topic.topicname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sns.topic.fifotopic": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "sns.topic.tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "sns.topic.displayname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "sns.topic.kmsmasterkeyid": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "sns.topic.contentbaseddeduplication": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "sns.topic.subscription": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "appsync.resolver.syncconfig.conflictdetection": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "ConflictDetection`  <a name=\"cfn-appsync-resolver-syncconfig-conflictdetection\"></a>\nThe Conflict Detection strategy to use\\.  \n+  **VERSION*": "Detect conflicts based on object versions for this resolver\\.\n+  **NONE*",
            "SampleValue": "example-string"
        },
        "appsync.resolver.syncconfig.conflicthandler": {
            "ConflictHandler`  <a name=\"cfn-appsync-resolver-syncconfig-conflicthandler\"></a>\nThe Conflict Resolution strategy to perform in the event of a conflict\\.  \n+  **OPTIMISTIC\\_CONCURRENCY*": "Resolve conflicts by rejecting mutations when versions do not match the latest version at the server\\.\n+  **AUTOMERGE*",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.resolver.syncconfig.lambdaconflicthandlerconfig": {
            "Required": "No",
            "Type": "LambdaConflictHandlerConfig",
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.tagfilter.key": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "autoscalingplans.scalingplan.tagfilter.values": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.filter.name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.filter.next": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.filter.filter": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "greengrass.resourcedefinition.localvolumeresourcedata.groupownersetting": {
            "Required": "No",
            "Type": "GroupOwnerSetting",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinition.localvolumeresourcedata.sourcepath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinition.localvolumeresourcedata.destinationpath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "pinpointemail.identity.mailfromattributes.behavioronmxfailure": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "pinpointemail.identity.mailfromattributes.mailfromdomain": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.stages.blockers": {
            "Required": "No",
            "Type": [
                "BlockerDeclaration"
            ],
            "UpdateRequires": "No interruption"
        },
        "codepipeline.pipeline.stages.actions": {
            "Required": "Yes",
            "Type": [
                "ActionDeclaration"
            ],
            "UpdateRequires": "No interruption"
        },
        "codepipeline.pipeline.stages.name": {
            "Pattern": "[A-Za-z0-9.@\\-_]+",
            "Required": "Yes",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "pinpointemail.configurationseteventdestination.snsdestination.topicarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "config.configrule.source.sourcedetails": {
            "Required": "No",
            "Type": [
                "SourceDetail"
            ],
            "Maximum": "25",
            "UpdateRequires": "No interruption"
        },
        "config.configrule.source.owner": {
            "Allowed values": "AWS | CUSTOM_LAMBDA",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "config.configrule.source.sourceidentifier": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "route53.aliastarget.1.dnsname": {
            "Alias records only:* The value that you specify depends on where you want to route queries:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the applicable domain name for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalDomainName`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionDomainName`\\. This is the name of the associated CloudFront distribution, such as `da1b2c3d4e5.cloudfront.net`\\.\nThe name of the record that you're creating must match a custom domain name for your API, such as `api.example.com`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nEnter the API endpoint for the interface endpoint, such as `vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com`\\. For edge\\-optimized APIs, this is the domain name for the corresponding CloudFront distribution\\. You can get the value of `DnsName` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify the domain name that CloudFront assigned when you created your distribution\\.  \nYour CloudFront distribution must include an alternate domain name that matches the name of the record\\. For example, if the name of the record is *acme\\.example\\.com*, your CloudFront distribution must include *acme\\.example\\.com* as one of the alternate domain names\\. For more information, see [Using Alternate Domain Names \\(CNAMEs\\)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html) in the *Amazon CloudFront Developer Guide*\\.  \nYou can't create a record in a private hosted zone to route traffic to a CloudFront distribution\\.  \nFor failover alias records, you can't specify a CloudFront distribution for both the primary and secondary records\\. A distribution must include an alternate domain name that matches the name of the record\\. However, the primary and secondary records have the same name, and you can't include the same alternate domain name in more than one distribution\\.   \nElastic Beanstalk environment  \nIf the domain name for your Elastic Beanstalk environment includes the region that you deployed the environment in, you can create an alias record that routes traffic to the environment\\. For example, the domain name `my-environment.us-west-2.elasticbeanstalk.com` is a regionalized domain name\\.   \nFor environments that were created before early 2016, the domain name doesn't include the region\\. To route traffic to these environments, you must create a CNAME record instead of an alias record\\. Note that you can't create a CNAME record for the root domain name\\. For example, if your domain name is example\\.com, you can create a record that routes traffic for acme\\.example\\.com to your Elastic Beanstalk environment, but you can't create a record that routes traffic for example\\.com to your Elastic Beanstalk environment\\.\nFor Elastic Beanstalk environments that have regionalized subdomains, specify the `CNAME` attribute for the environment\\. You can use the following methods to get the value of the CNAME attribute:  \n+ *AWS Management Console": "For information about how to get the value by using the console, see [Using Custom Domains with AWS Elastic Beanstalk](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customdomains.html) in the *AWS Elastic Beanstalk Developer Guide*\\.\n+ *Elastic Beanstalk API",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.aliastarget.1.hostedzoneid": {
            "UpdateRequires": "No interruption",
            "Required": "Yes",
            "Type": "String",
            "Alias resource records sets only": "The value used depends on where you want to route traffic:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the hosted zone ID for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalHostedZoneId`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionHostedZoneId`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nSpecify the hosted zone ID for your interface endpoint\\. You can get the value of `HostedZoneId` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify `Z2FDTNDATAQYW2`\\. This is always the hosted zone ID when you create an alias record that routes traffic to a CloudFront distribution\\.  \nAlias records for CloudFront can't be created in a private zone\\.  \nElastic Beanstalk environment  \nSpecify the hosted zone ID for the region that you created the environment in\\. The environment must have a regionalized subdomain\\. For a list of regions and the corresponding hosted zone IDs, see [AWS Elastic Beanstalk](https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region) in the \"AWS Regions and Endpoints\" chapter of the *Amazon Web Services General Reference*\\.  \nELB load balancer  \nSpecify the value of the hosted zone ID for the load balancer\\. Use the following methods to get the hosted zone ID:  \n+ [Service Endpoints](https://docs.aws.amazon.com/general/latest/gr/elb.html) table in the \"Elastic Load Balancing Endpoints and Quotas\" topic in the *Amazon Web Services General Reference",
            "Maximum": "32",
            "SampleValue": "example-string"
        },
        "route53.aliastarget.1.evaluatetargethealth": {
            "Type": "Boolean",
            "Required": "No",
            "EvaluateTargetHealth`  <a name=\"cfn-route53-aliastarget-evaluatetargethealth\"></a>\n *Applies only to alias, failover alias, geolocation alias, latency alias, and weighted alias resource record sets:* When `EvaluateTargetHealth` is `true`, an alias resource record set inherits the health of the referenced AWS resource, such as an ELB load balancer or another resource record set in the hosted zone\\.  \nNote the following:    \nCloudFront distributions  \nYou can't set `EvaluateTargetHealth` to `true` when the alias target is a CloudFront distribution\\.  \nElastic Beanstalk environments that have regionalized subdomains  \nIf you specify an Elastic Beanstalk environment in `DNSName` and the environment contains an ELB load balancer, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. \\(An environment automatically contains an ELB load balancer if it includes more than one Amazon EC2 instance\\.\\) If you set `EvaluateTargetHealth` to `true` and either no Amazon EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other available resources that are healthy, if any\\.   \nIf the environment contains a single Amazon EC2 instance, there are no special requirements\\.  \nELB load balancers  \nHealth checking behavior depends on the type of load balancer:  \n+  **Classic Load Balancers*": "If you specify an ELB Classic Load Balancer in `DNSName`, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. If you set `EvaluateTargetHealth` to `true` and either no EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other resources\\.\n+  **Application and Network Load Balancers*",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "backup.backupplan.copyactionresourcetype.destinationbackupvaultarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "backup.backupplan.copyactionresourcetype.lifecycle": {
            "Required": "No",
            "Type": "LifecycleResourceType",
            "UpdateRequires": "No interruption"
        },
        "glue.partition.order.column": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.order.sortorder": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "efs.filesystem.filesystemtags.key": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "efs.filesystem.filesystemtags.value": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.publicaccessblockconfiguration.restrictpublicbuckets": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.publicaccessblockconfiguration.blockpublicacls": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.publicaccessblockconfiguration.blockpublicpolicy": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.publicaccessblockconfiguration.ignorepublicacls": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "dynamodb.streamspecification.streamviewtype": {
            "Allowed values": "KEYS_ONLY | NEW_AND_OLD_IMAGES | NEW_IMAGE | OLD_IMAGE",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "efs.filesystem.lifecyclepolicy.transitiontoia": {
            "Allowed values": "AFTER_14_DAYS | AFTER_30_DAYS | AFTER_60_DAYS | AFTER_7_DAYS | AFTER_90_DAYS",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dax.cluster.ssespecification.sseenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.taskdefinition.repositorycredentials.credentialsparameter": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "pinpointemail.identity.tags.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpointemail.identity.tags.key": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "beanstalk.sourcebundle.s3key": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "beanstalk.sourcebundle.s3bucket": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs": {
            "Required": "Conditional",
            "Type": "EbsBlockDevice",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.nodevice": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.virtualname": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.devicename": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.trigger.action.arguments": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "glue.trigger.action.notificationproperty": {
            "Required": "No",
            "Type": "NotificationProperty",
            "UpdateRequires": "No interruption"
        },
        "glue.trigger.action.timeout": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "glue.trigger.action.crawlername": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.trigger.action.securityconfiguration": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.trigger.action.jobname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.abortincompletemultipartupload.daysafterinitiation": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cognito.identitypoolroleattachment.mappingrule.matchtype": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypoolroleattachment.mappingrule.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypoolroleattachment.mappingrule.claim": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypoolroleattachment.mappingrule.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codecommit.repository.s3.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codecommit.repository.s3.bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codecommit.repository.s3.objectversion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.hadoopjarstepconfig.args": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.hadoopjarstepconfig.mainclass": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "10280",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10280",
            "CompliantValues": "0...10280"
        },
        "elasticmapreduce.cluster.hadoopjarstepconfig.jar": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "10280",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10280",
            "CompliantValues": "0...10280"
        },
        "elasticmapreduce.cluster.hadoopjarstepconfig.stepproperties": {
            "Required": "No",
            "Type": [
                "KeyValue"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.loadbalancer.subnetmapping.allocationid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.loadbalancer.subnetmapping.privateipv4address": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.loadbalancer.subnetmapping.subnetid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "imagebuilder.image.imagetestsconfiguration.timeoutminutes": {
            "Minimum": "60",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "1440",
            "UpdateRequires": "Replacement",
            "AllowedValues": "60...1440",
            "CompliantValues": "60...1440"
        },
        "imagebuilder.image.imagetestsconfiguration.imagetestsenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.classifier.grokclassifier.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "glue.classifier.grokclassifier.custompatterns": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.classifier.grokclassifier.grokpattern": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.classifier.grokclassifier.classification": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "lakeformation.permissions.datalocationresource.s3resource": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.alarm.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.broker.maintenancewindow.timeofday": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.broker.maintenancewindow.dayofweek": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.broker.maintenancewindow.timezone": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.rule.sqsparameters.messagegroupid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.scalingtrigger.cloudwatchalarmdefinition": {
            "Required": "Yes",
            "Type": "CloudWatchAlarmDefinition",
            "UpdateRequires": "No interruption"
        },
        "imagebuilder.infrastructureconfiguration.s3logs.s3keyprefix": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "imagebuilder.infrastructureconfiguration.s3logs.s3bucketname": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "ec2.clientvpnendpoint.federatedauthenticationrequest.samlproviderarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.cookies.forward": {
            "Allowed values": "all | none | whitelist",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.cookies.whitelistednames": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "glue.classifier.jsonclassifier.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "glue.classifier.jsonclassifier.jsonpath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.cachebehavior.compress": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudfront.distribution.cachebehavior.forwardedvalues": {
            "Required": "Yes",
            "Type": "ForwardedValues",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.cachebehavior.pathpattern": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.cachebehavior.maxttl": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.cachebehavior.viewerprotocolpolicy": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.cachebehavior.cachedmethods": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.cachebehavior.minttl": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.cachebehavior.targetoriginid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.cachebehavior.fieldlevelencryptionid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.cachebehavior.allowedmethods": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.cachebehavior.defaultttl": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.cachebehavior.smoothstreaming": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudfront.distribution.cachebehavior.trustedsigners": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.cachebehavior.lambdafunctionassociations": {
            "Required": "No",
            "Type": [
                "LambdaFunctionAssociation"
            ],
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.schedule.name": {
            "Pattern": "[\\p{all}]*",
            "Required": "No",
            "Maximum": "500",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...500",
            "CompliantValues": "0...500"
        },
        "dlm.lifecyclepolicy.schedule.copytags": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "dlm.lifecyclepolicy.schedule.createrule": {
            "Required": "No",
            "Type": "CreateRule",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.schedule.fastrestorerule": {
            "Required": "No",
            "Type": "FastRestoreRule",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.schedule.retainrule": {
            "Required": "No",
            "Type": "RetainRule",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.schedule.crossregioncopyrules": {
            "Required": "No",
            "Type": [
                "CrossRegionCopyRule"
            ],
            "Maximum": "3",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.schedule.tagstoadd": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "Maximum": "45",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.schedule.variabletags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "Maximum": "45",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.firehose": {
            "Required": "No",
            "Type": "FirehoseAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.cloudwatchmetric": {
            "Required": "No",
            "Type": "CloudwatchMetricAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.sns": {
            "Required": "No",
            "Type": "SnsAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.dynamodbv2": {
            "Required": "No",
            "Type": "DynamoDBv2Action",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.sqs": {
            "Required": "No",
            "Type": "SqsAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.lambda": {
            "Required": "No",
            "Type": "LambdaAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.http": {
            "Required": "No",
            "Type": "HttpAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.republish": {
            "Required": "No",
            "Type": "RepublishAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.stepfunctions": {
            "Required": "No",
            "Type": "StepFunctionsAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.iotsitewise": {
            "Required": "No",
            "Type": "IotSiteWiseAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.iotevents": {
            "Required": "No",
            "Type": "IotEventsAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.iotanalytics": {
            "Required": "No",
            "Type": "IotAnalyticsAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.dynamodb": {
            "Required": "No",
            "Type": "DynamoDBAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.kinesis": {
            "Required": "No",
            "Type": "KinesisAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.elasticsearch": {
            "Required": "No",
            "Type": "ElasticsearchAction",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.s3": {
            "Required": "No",
            "Type": "S3Action",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.action.cloudwatchalarm": {
            "Required": "No",
            "Type": "CloudwatchAlarmAction",
            "UpdateRequires": "No interruption"
        },
        "pinpointemail.configurationset.reputationoptions.reputationmetricsenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration": {
            "Required": "No",
            "Type": "ShutdownEventConfiguration",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskdefinition.containerdefinitions.mountpoints.containerpath": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.mountpoints.sourcevolume": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.mountpoints.readonly": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "autoscaling.scalingpolicy.metricdimension.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.scalingpolicy.metricdimension.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.andstatementtwo.statements": {
            "Required": "Yes",
            "Type": [
                "StatementThree"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.ebsconfiguration.ebsoptimized": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticmapreduce.cluster.ebsconfiguration.ebsblockdeviceconfigs": {
            "Required": "No",
            "Type": [
                "EbsBlockDeviceConfig"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.serversideencryptionrule.serversideencryptionbydefault": {
            "Required": "No",
            "Type": "ServerSideEncryptionByDefault",
            "UpdateRequires": "No interruption"
        },
        "amplify.app.environmentvariable.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amplify.app.environmentvariable.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.layer.recipes.undeploy": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.layer.recipes.shutdown": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.layer.recipes.deploy": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.layer.recipes.configure": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.layer.recipes.setup": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.sqlapplicationconfiguration.inputs": {
            "Required": "No",
            "Type": [
                "Input"
            ],
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.hivejsonserde.timestampformats": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.stopaction.topicarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.stopaction.scope": {
            "Allowed values": "RuleSet",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.httpaction.url": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.httpaction.confirmationurl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.httpaction.auth": {
            "Required": "No",
            "Type": "HttpAuthorization",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.httpaction.headers": {
            "Required": "No",
            "Type": [
                "HttpActionHeader"
            ],
            "UpdateRequires": "No interruption"
        },
        "route53.healthcheck.alarmidentifier.name": {
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "route53.healthcheck.alarmidentifier.region": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "s3.policy.policydocument": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "s3.policy.bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "appsync.datasource.deltasyncconfig.deltasynctablename": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.deltasyncconfig.basetablettl": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.deltasyncconfig.deltasynctablettl": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.maxprice": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.subnetid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.instancetype": {
            "Allowed values": "a1.2xlarge | a1.4xlarge | a1.large | a1.medium | a1.metal | a1.xlarge | c1.medium | c1.xlarge | c3.2xlarge | c3.4xlarge | c3.8xlarge | c3.large | c3.xlarge | c4.2xlarge | c4.4xlarge | c4.8xlarge | c4.large | c4.xlarge | c5.12xlarge | c5.18xlarge | c5.24xlarge | c5.2xlarge | c5.4xlarge | c5.9xlarge | c5.large | c5.metal | c5.xlarge | c5a.12xlarge | c5a.16xlarge | c5a.24xlarge | c5a.2xlarge | c5a.4xlarge | c5a.8xlarge | c5a.large | c5a.xlarge | c5d.12xlarge | c5d.18xlarge | c5d.24xlarge | c5d.2xlarge | c5d.4xlarge | c5d.9xlarge | c5d.large | c5d.metal | c5d.xlarge | c5n.18xlarge | c5n.2xlarge | c5n.4xlarge | c5n.9xlarge | c5n.large | c5n.xlarge | c6g.12xlarge | c6g.16xlarge | c6g.2xlarge | c6g.4xlarge | c6g.8xlarge | c6g.large | c6g.medium | c6g.metal | c6g.xlarge | cc1.4xlarge | cc2.8xlarge | cg1.4xlarge | cr1.8xlarge | d2.2xlarge | d2.4xlarge | d2.8xlarge | d2.xlarge | f1.16xlarge | f1.2xlarge | f1.4xlarge | g2.2xlarge | g2.8xlarge | g3.16xlarge | g3.4xlarge | g3.8xlarge | g3s.xlarge | g4dn.12xlarge | g4dn.16xlarge | g4dn.2xlarge | g4dn.4xlarge | g4dn.8xlarge | g4dn.metal | g4dn.xlarge | h1.16xlarge | h1.2xlarge | h1.4xlarge | h1.8xlarge | hi1.4xlarge | hs1.8xlarge | i2.2xlarge | i2.4xlarge | i2.8xlarge | i2.xlarge | i3.16xlarge | i3.2xlarge | i3.4xlarge | i3.8xlarge | i3.large | i3.metal | i3.xlarge | i3en.12xlarge | i3en.24xlarge | i3en.2xlarge | i3en.3xlarge | i3en.6xlarge | i3en.large | i3en.metal | i3en.xlarge | inf1.24xlarge | inf1.2xlarge | inf1.6xlarge | inf1.xlarge | m1.large | m1.medium | m1.small | m1.xlarge | m2.2xlarge | m2.4xlarge | m2.xlarge | m3.2xlarge | m3.large | m3.medium | m3.xlarge | m4.10xlarge | m4.16xlarge | m4.2xlarge | m4.4xlarge | m4.large | m4.xlarge | m5.12xlarge | m5.16xlarge | m5.24xlarge | m5.2xlarge | m5.4xlarge | m5.8xlarge | m5.large | m5.metal | m5.xlarge | m5a.12xlarge | m5a.16xlarge | m5a.24xlarge | m5a.2xlarge | m5a.4xlarge | m5a.8xlarge | m5a.large | m5a.xlarge | m5ad.12xlarge | m5ad.16xlarge | m5ad.24xlarge | m5ad.2xlarge | m5ad.4xlarge | m5ad.8xlarge | m5ad.large | m5ad.xlarge | m5d.12xlarge | m5d.16xlarge | m5d.24xlarge | m5d.2xlarge | m5d.4xlarge | m5d.8xlarge | m5d.large | m5d.metal | m5d.xlarge | m5dn.12xlarge | m5dn.16xlarge | m5dn.24xlarge | m5dn.2xlarge | m5dn.4xlarge | m5dn.8xlarge | m5dn.large | m5dn.xlarge | m5n.12xlarge | m5n.16xlarge | m5n.24xlarge | m5n.2xlarge | m5n.4xlarge | m5n.8xlarge | m5n.large | m5n.xlarge | m6g.12xlarge | m6g.16xlarge | m6g.2xlarge | m6g.4xlarge | m6g.8xlarge | m6g.large | m6g.medium | m6g.metal | m6g.xlarge | p2.16xlarge | p2.8xlarge | p2.xlarge | p3.16xlarge | p3.2xlarge | p3.8xlarge | p3dn.24xlarge | r3.2xlarge | r3.4xlarge | r3.8xlarge | r3.large | r3.xlarge | r4.16xlarge | r4.2xlarge | r4.4xlarge | r4.8xlarge | r4.large | r4.xlarge | r5.12xlarge | r5.16xlarge | r5.24xlarge | r5.2xlarge | r5.4xlarge | r5.8xlarge | r5.large | r5.metal | r5.xlarge | r5a.12xlarge | r5a.16xlarge | r5a.24xlarge | r5a.2xlarge | r5a.4xlarge | r5a.8xlarge | r5a.large | r5a.xlarge | r5ad.12xlarge | r5ad.16xlarge | r5ad.24xlarge | r5ad.2xlarge | r5ad.4xlarge | r5ad.8xlarge | r5ad.large | r5ad.xlarge | r5d.12xlarge | r5d.16xlarge | r5d.24xlarge | r5d.2xlarge | r5d.4xlarge | r5d.8xlarge | r5d.large | r5d.metal | r5d.xlarge | r5dn.12xlarge | r5dn.16xlarge | r5dn.24xlarge | r5dn.2xlarge | r5dn.4xlarge | r5dn.8xlarge | r5dn.large | r5dn.xlarge | r5n.12xlarge | r5n.16xlarge | r5n.24xlarge | r5n.2xlarge | r5n.4xlarge | r5n.8xlarge | r5n.large | r5n.xlarge | r6g.12xlarge | r6g.16xlarge | r6g.2xlarge | r6g.4xlarge | r6g.8xlarge | r6g.large | r6g.medium | r6g.metal | r6g.xlarge | t1.micro | t2.2xlarge | t2.large | t2.medium | t2.micro | t2.nano | t2.small | t2.xlarge | t3.2xlarge | t3.large | t3.medium | t3.micro | t3.nano | t3.small | t3.xlarge | t3a.2xlarge | t3a.large | t3a.medium | t3a.micro | t3a.nano | t3a.small | t3a.xlarge | u-12tb1.metal | u-18tb1.metal | u-24tb1.metal | u-6tb1.metal | u-9tb1.metal | x1.16xlarge | x1.32xlarge | x1e.16xlarge | x1e.2xlarge | x1e.32xlarge | x1e.4xlarge | x1e.8xlarge | x1e.xlarge | z1d.12xlarge | z1d.2xlarge | z1d.3xlarge | z1d.6xlarge | z1d.large | z1d.metal | z1d.xlarge",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.availabilityzone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.placement": {
            "Required": "No",
            "Type": "Placement",
            "UpdateRequires": "Replacement"
        },
        "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.weightedcapacity": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "Replacement",
            "SampleValue": "123.45"
        },
        "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.priority": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "lakeformation.permissions.databaseresource.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iam.addusertogroup.groupname": {
            "Pattern": "[\\w+=,.@-]+",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iam.addusertogroup.users": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "dms.endpoint.mongodbsettings.nestinglevel": {
            "Allowed values": "none | one",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.mongodbsettings.password": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.mongodbsettings.authsource": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.mongodbsettings.databasename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.mongodbsettings.docstoinvestigate": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.mongodbsettings.authtype": {
            "Allowed values": "no | password",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.mongodbsettings.port": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "dms.endpoint.mongodbsettings.extractdocid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.mongodbsettings.username": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.mongodbsettings.servername": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.mongodbsettings.authmechanism": {
            "Allowed values": "default | mongodb_cr | scram_sha_1",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.httproutematch.headers": {
            "Required": "No",
            "Type": [
                "HttpRouteHeader"
            ],
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.httproutematch.prefix": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.httproutematch.method": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.httproutematch.scheme": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.volumeshost.sourcepath": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.scalingrule.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.scalingrule.action": {
            "Required": "Yes",
            "Type": "ScalingAction",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.instancegroupconfig.scalingrule.description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.scalingrule.trigger": {
            "Required": "Yes",
            "Type": "ScalingTrigger",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.inputlambdaprocessor.resourcearn": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisanalytics.application.inputlambdaprocessor.rolearn": {
            "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "pinpoint.segment.segmentgroups.groups.sourcesegments.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.segment.segmentgroups.groups.sourcesegments.version": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "medialive.input.inputsourcerequest.username": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.input.inputsourcerequest.passwordparam": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.input.inputsourcerequest.url": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "beanstalk.applicationname": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "beanstalk.resourcelifecycleconfig": {
            "Required": "No",
            "Type": "ApplicationResourceLifecycleConfig",
            "UpdateRequires": "No interruption"
        },
        "beanstalk.description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "200",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.datacatalogencryptionsettings.connectionpasswordencryption.kmskeyid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.datacatalogencryptionsettings.connectionpasswordencryption.returnconnectionpasswordencrypted": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "iot.topicrule.lambdaaction.functionarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.job.executionproperty.maxconcurrentruns": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "appmesh.virtualnode.tlsvalidationcontexttrust.file": {
            "Required": "No",
            "Type": "TlsValidationContextFileTrust",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.tlsvalidationcontexttrust.acm": {
            "Required": "No",
            "Type": "TlsValidationContextAcmTrust",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.notificationconfiguration.config.filter.s3key.rules.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.notificationconfiguration.config.filter.s3key.rules.name": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.querystringconfig.values": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationoutput.lambdaoutput.rolearn": {
            "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisanalytics.applicationoutput.lambdaoutput.resourcearn": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "as.launchconfig.blockdev.template.snapshotid": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Conditional",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.launchconfig.blockdev.template.iops": {
            "Minimum": "100",
            "Required": "Conditional",
            "Maximum": "20000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "100...20000",
            "CompliantValues": "100...20000"
        },
        "as.launchconfig.blockdev.template.volumetype": {
            "Minimum": "1",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.launchconfig.blockdev.template.encrypted": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "as.launchconfig.blockdev.template.deleteontermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "as.launchconfig.blockdev.template.volumesize": {
            "Minimum": "1",
            "Required": "Conditional",
            "Type": "Integer",
            "Maximum": "16384",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...16384",
            "CompliantValues": "1...16384"
        },
        "sqs.policy.queues": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "sqs.policy.policydocument": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "robomaker.simulationapplication.simulationsoftwaresuite.version": {
            "Pattern": "7|9|Kinetic|Melodic|Dashing",
            "Required": "Yes",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...1024",
            "CompliantValues": "0...1024"
        },
        "robomaker.simulationapplication.simulationsoftwaresuite.name": {
            "Allowed values": "Gazebo | RosbagPlay",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.gitsubmodulesconfig.fetchsubmodules": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "sagemaker.workteam.notificationconfiguration.notificationtopicarn": {
            "Pattern": "arn:aws[a-z\\-]*:sns:[a-z0-9\\-]*:[0-9]{12}:[a-zA-Z0-9_.-]*",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinitionversion.execution.isolationmode": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinitionversion.execution.runas": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "codepipeline.pipeline.stages.actions.actiontypeid.category": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.stages.actions.actiontypeid.provider": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.stages.actions.actiontypeid.owner": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.stages.actions.actiontypeid.version": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalingpolicy.predefinedmetricspecification.resourcelabel": {
            "Minimum": "1",
            "Required": "Conditional",
            "Type": "String",
            "Maximum": "1023",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1023",
            "CompliantValues": "1...1023"
        },
        "applicationautoscaling.scalingpolicy.predefinedmetricspecification.predefinedmetrictype": {
            "Allowed values": "ALBRequestCountPerTarget | AppStreamAverageCapacityUtilization | CassandraReadCapacityUtilization | CassandraWriteCapacityUtilization | ComprehendInferenceUtilization | DynamoDBReadCapacityUtilization | DynamoDBWriteCapacityUtilization | EC2SpotFleetRequestAverageCPUUtilization | EC2SpotFleetRequestAverageNetworkIn | EC2SpotFleetRequestAverageNetworkOut | ECSServiceAverageCPUUtilization | ECSServiceAverageMemoryUtilization | LambdaProvisionedConcurrencyUtilization | RDSReaderAverageCPUUtilization | RDSReaderAverageDatabaseConnections | SageMakerVariantInvocationsPerInstance",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancefleetconfig.instancefleetprovisioningspecifications.spotspecification": {
            "Required": "Yes",
            "Type": "SpotProvisioningSpecification",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementthrees.statementthrees": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-rulegroup-statementthrees-properties": {
            "StatementThrees": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint.campaign.campaignsmsmessage.body": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.campaignsmsmessage.senderid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.campaignsmsmessage.messagetype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.grpcroutemetadatamatchmethod.regex": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.grpcroutemetadatamatchmethod.prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.grpcroutemetadatamatchmethod.exact": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.grpcroutemetadatamatchmethod.suffix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.grpcroutemetadatamatchmethod.range": {
            "Required": "No",
            "Type": "MatchRange",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.matchrange.end": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.route.matchrange.start": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "iotanalytics.dataset.variable.doublevalue": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "iotanalytics.dataset.variable.outputfileurivalue": {
            "Required": "No",
            "Type": "OutputFileUriValue",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.variable.datasetcontentversionvalue": {
            "Required": "No",
            "Type": "DatasetContentVersionValue",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.variable.stringvalue": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...1024",
            "CompliantValues": "0...1024"
        },
        "iotanalytics.dataset.variable.variablename": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "elasticache.cache.cluster.autominorversionupgrade": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticache.cache.cluster.snapshotwindow": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticache.cache.cluster.engine": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticache.cache.cluster.vpcsecuritygroupids": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "elasticache.cache.cluster.azmode": {
            "Allowed values": "cross-az | single-az",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "elasticache.cache.cluster.notificationtopicarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticache.cache.cluster.preferredavailabilityzone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "elasticache.cache.cluster.engineversion": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "elasticache.cache.cluster.cachesecuritygroupnames": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "elasticache.cache.cluster.port": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "elasticache.cache.cluster.preferredmaintenancewindow": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticache.cache.cluster.tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticache.cache.cluster.numcachenodes": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "1"
        },
        "elasticache.cache.cluster.snapshotname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticache.cache.cluster.preferredavailabilityzones": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Some interruptions"
        },
        "elasticache.cache.cluster.snapshotarns": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "elasticache.cache.cluster.snapshotretentionlimit": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticache.cache.cluster.cacheparametergroupname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticache.cache.cluster.clustername": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticache.cache.cluster.cachesubnetgroupname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticache.cache.cluster.cachenodetype": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.texttransformation.priority": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.rulegroup.texttransformation.type": {},
        "wafv2.rulegroup.texttransformation.compress_white_space": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.environment.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.environment.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.snsaction.targetarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.snsaction.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.snsaction.messageformat": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.teletextsourcesettings.pagenumber": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "transfer.server.identityproviderdetails.url": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "transfer.server.identityproviderdetails.invocationrole": {
            "Pattern": "arn:.*role/.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.jsonmappingparameters.recordrowpath": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.grpcretrypolicy.maxretries": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.route.grpcretrypolicy.tcpretryevents": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.grpcretrypolicy.perretrytimeout": {
            "Required": "Yes",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.grpcretrypolicy.grpcretryevents": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.grpcretrypolicy.httpretryevents": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.dbinstance.processorfeature.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbinstance.processorfeature.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.scalingpolicy.targettrackingconfiguration.customizedmetricspecification": {
            "Required": "Conditional",
            "Type": "CustomizedMetricSpecification",
            "UpdateRequires": "No interruption"
        },
        "autoscaling.scalingpolicy.targettrackingconfiguration.targetvalue": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "autoscaling.scalingpolicy.targettrackingconfiguration.disablescalein": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "autoscaling.scalingpolicy.targettrackingconfiguration.predefinedmetricspecification": {
            "Required": "Conditional",
            "Type": "PredefinedMetricSpecification",
            "UpdateRequires": "No interruption"
        },
        "dynamodb.timetolivespecification.enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "dynamodb.timetolivespecification.attributename": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "dms.endpoint.kafkasettings.topic": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.kafkasettings.broker": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualrouter.virtualrouterspec.listeners": {
            "Required": "Yes",
            "Type": [
                "VirtualRouterListener"
            ],
            "UpdateRequires": "No interruption"
        },
        "iotevents.input.attribute.jsonpath": {
            "Pattern": "^((`[\\w\\- ]+`)|([\\w\\-]+))(\\.((`[\\w- ]+`)|([\\w\\-]+)))*$",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "groundstation.config.spectrumconfig.centerfrequency": {
            "Required": "Yes",
            "Type": "Frequency",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.spectrumconfig.polarization": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.config.spectrumconfig.bandwidth": {
            "Required": "Yes",
            "Type": "Bandwidth",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.dynamodbv2action.putitem": {
            "Required": "No",
            "Type": "PutItemInput",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.dynamodbv2action.rolearn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.actions.authenticatecognitoconfig": {
            "Required": "No",
            "Type": "AuthenticateCognitoConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.actions.fixedresponseconfig": {
            "Required": "No",
            "Type": "FixedResponseConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.actions.order": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "50000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...50000",
            "CompliantValues": "1...50000"
        },
        "elasticloadbalancingv2.listenerrule.actions.redirectconfig": {
            "Required": "No",
            "Type": "RedirectConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.actions.authenticateoidcconfig": {
            "Required": "No",
            "Type": "AuthenticateOidcConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.actions.type": {
            "Allowed values": "authenticate-cognito | authenticate-oidc | fixed-response | forward | redirect",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.actions.targetgrouparn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.actions.forwardconfig": {
            "Required": "No",
            "Type": "ForwardConfig",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualrouter.virtualrouterlistener.portmapping": {
            "Required": "Yes",
            "Type": "PortMapping",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.copycommand.datatablename": {
            "Pattern": ".*",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "kinesisfirehose.deliverystream.copycommand.copyoptions": {
            "Pattern": ".*",
            "Minimum": "0",
            "Required": "No",
            "Maximum": "204800",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...204800",
            "CompliantValues": "0...204800"
        },
        "kinesisfirehose.deliverystream.copycommand.datatablecolumns": {
            "Pattern": ".*",
            "Required": "No",
            "Maximum": "204800",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...204800",
            "CompliantValues": "0...204800"
        },
        "wafv2.webacl.fieldtomatch.uripath": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.webacl.fieldtomatch.querystring": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.webacl.fieldtomatch.body": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.webacl.fieldtomatch.method": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.webacl.fieldtomatch.singleheader": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.webacl.fieldtomatch.allqueryarguments": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.webacl.fieldtomatch.singlequeryargument": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.recordformat.recordformattype": {
            "Allowed values": "CSV | JSON",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.application.recordformat.mappingparameters": {
            "Required": "No",
            "Type": "MappingParameters",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationcloudwatchloggingoption.cloudwatchloggingoption.logstreamarn": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "appstream.imagebuilder.vpcconfig.securitygroupids": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "appstream.imagebuilder.vpcconfig.subnetids": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "iotevents.input.inputdefinition.attributes": {
            "Required": "No",
            "Type": [
                "Attribute"
            ],
            "Maximum": "200",
            "UpdateRequires": "No interruption"
        },
        "lakeformation.datalakesettings.datalakeprincipal.datalakeprincipalidentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.connectordefinition.connector.connectorarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.connectordefinition.connector.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.connectordefinition.connector.parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "Replacement",
            "SampleValue": {
                "todo": "json"
            }
        },
        "elasticloadbalancingv2.listenerrule.targetgroupstickinessconfig.durationseconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticloadbalancingv2.listenerrule.targetgroupstickinessconfig.enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "networkmanager.link.bandwidth.downloadspeed": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "networkmanager.link.bandwidth.uploadspeed": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.terminationpolicies": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.group.launchconfigurationname": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Conditional",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.servicelinkedrolearn": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1600",
            "CompliantValues": "1...1600"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.mixedinstancespolicy": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.cooldown": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.group.healthcheckgraceperiod": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "as.group.maxsize": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.metricscollection": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.lifecyclehookspecificationlist": {
            "Required": "No",
            "Type": [
                "LifecycleHookSpecification"
            ],
            "UpdateRequires": "No interruption"
        },
        "as.group.tags": {
            "Required": "No",
            "Type": [
                "TagProperty"
            ],
            "UpdateRequires": "No interruption"
        },
        "as.group.metricscollection": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.instanceid": {
            "Required": "Conditional",
            "UpdateRequires": "Replacement"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.healthcheckgraceperiod": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "as.group.targetgrouparns": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.group.servicelinkedrolearn": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1600",
            "CompliantValues": "1...1600"
        },
        "as.group.mixedinstancespolicy": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.loadbalancernames": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.availabilityzones": {
            "Required": "Conditional",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.maxsize": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "as.group.minsize": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.tags": {
            "Required": "No",
            "Type": [
                "TagProperty"
            ],
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.launchtemplate": {
            "Required": "Conditional",
            "Type": "LaunchTemplateSpecification",
            "UpdateRequires": "No interruption"
        },
        "as.group.maxinstancelifetime": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.vpczoneidentifier": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Conditional",
            "Maximum": "2047",
            "UpdateRequires": "Some interruptions",
            "Minimum": "1",
            "Type": "List of String",
            "AllowedValues": "1...2047",
            "CompliantValues": "1...2047"
        },
        "as.group.autoscalinggroupname": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.group.lifecyclehookspecificationlist": {
            "Required": "No",
            "Type": [
                "LifecycleHookSpecification"
            ],
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.targetgrouparns": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.group.placementgroup": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.healthchecktype": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "as.group.terminationpolicies": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.group.availabilityzones": {
            "Required": "Conditional",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.desiredcapacity": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.minsize": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.placementgroup": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.group.desiredcapacity": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.notificationconfigurations": {
            "Required": "No",
            "Type": [
                "NotificationConfiguration"
            ],
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.launchconfigurationname": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Conditional",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.group.loadbalancernames": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.autoscalinggroupname": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.group.healthchecktype": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "as.group.notificationconfigurations": {
            "Required": "No",
            "Type": [
                "NotificationConfiguration"
            ],
            "UpdateRequires": "No interruption"
        },
        "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.maxinstancelifetime": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.group.vpczoneidentifier": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Conditional",
            "Maximum": "2047",
            "UpdateRequires": "Some interruptions",
            "Minimum": "1",
            "Type": "List of String",
            "AllowedValues": "1...2047",
            "CompliantValues": "1...2047"
        },
        "as.group.instanceid": {
            "Required": "Conditional",
            "UpdateRequires": "Replacement"
        },
        "as.group.launchtemplate": {
            "Required": "Conditional",
            "Type": "LaunchTemplateSpecification",
            "UpdateRequires": "No interruption"
        },
        "as.group.cooldown": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "w6408ab1c19c15c15c27c19b7.default": {
            "Required": "No",
            "Type": "String",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.instancegroupconfig.bidprice": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.instancegroupconfig.name": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.instancegroupconfig.instancecount": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.instancegroupconfig.instancetype": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "elasticmapreduce.cluster.instancegroupconfig.autoscalingpolicy": {
            "Required": "No",
            "Type": "AutoScalingPolicy",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.instancegroupconfig.configurations": {
            "Required": "No",
            "Type": [
                "Configuration"
            ],
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.instancegroupconfig.ebsconfiguration": {
            "Required": "No",
            "Type": "EbsConfiguration",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.instancegroupconfig.market": {
            "Allowed values": "ON_DEMAND | SPOT",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.fieldtomatch.allqueryarguments": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.rulegroup.fieldtomatch.singlequeryargument": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.fieldtomatch.body": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.rulegroup.fieldtomatch.querystring": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.rulegroup.fieldtomatch.method": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.rulegroup.fieldtomatch.singleheader": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.rulegroup.fieldtomatch.uripath": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "kinesisanalyticsv2.application.mappingparameters.jsonmappingparameters": {
            "Required": "No",
            "Type": "JSONMappingParameters",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.mappingparameters.csvmappingparameters": {
            "Required": "No",
            "Type": "CSVMappingParameters",
            "UpdateRequires": "No interruption"
        },
        "codecommit.repository.code.s3": {
            "Required": "Yes",
            "Type": "S3",
            "UpdateRequires": "No interruption"
        },
        "ec2.ec2fleet.spotoptionsrequest.maxtotalprice": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.spotoptionsrequest.mintargetcapacity": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ec2.ec2fleet.spotoptionsrequest.instanceinterruptionbehavior": {
            "Allowed values": "hibernate | stop | terminate",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.spotoptionsrequest.singleavailabilityzone": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.ec2fleet.spotoptionsrequest.instancepoolstousecount": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ec2.ec2fleet.spotoptionsrequest.allocationstrategy": {
            "Type": "String",
            "Required": "No",
            "Allowed Values": "lowestPrice` \\| `diversified` \\| `capacityOptimized",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "lowestPrice` \\| `diversified` \\| `capacityOptimized"
            ],
            "SampleValue": "lowestPrice` \\| `diversified` \\| `capacityOptimized",
            "CompliantValues": [
                "lowestPrice` \\| `diversified` \\| `capacityOptimized"
            ]
        },
        "ec2.ec2fleet.spotoptionsrequest.singleinstancetype": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "pinpoint.applicationsettings.limits.messagespersecond": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "pinpoint.applicationsettings.limits.daily": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "pinpoint.applicationsettings.limits.total": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "pinpoint.applicationsettings.limits.maximumduration": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "lambda.function.tracingconfig.mode": {
            "Allowed values": "Active | PassThrough",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.s3settings.bucketfolder": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.s3settings.csvrowdelimiter": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.s3settings.serviceaccessrolearn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.s3settings.bucketname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.s3settings.externaltabledefinition": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.s3settings.compressiontype": {
            "Allowed values": "gzip | none",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.s3settings.csvdelimiter": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.recordformat.mappingparameters": {
            "Required": "No",
            "Type": "MappingParameters",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.recordformat.recordformattype": {
            "Allowed values": "CSV | JSON",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbparametergroup.description": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbparametergroup.parameters": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.dbparametergroup.aws rds describe-db-engine-versions --query \"dbengineversions[].dbparametergroupfamily\"": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbparametergroup.family": {},
        "rds.dbparametergroup.tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.capacityreservationtarget.capacityreservationid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.noderangeproperty.container": {
            "Required": "No",
            "Type": "ContainerProperties",
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.noderangeproperty.targetnodes": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "sagemaker.notebookinstancelifecycleconfig.notebookinstancelifecyclehook.content": {
            "Pattern": "[\\S\\s]+",
            "Required": "No",
            "Maximum": "16384",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...16384",
            "CompliantValues": "1...16384"
        },
        "kinesisanalyticsv2.application.codecontent.s3contentlocation": {
            "Required": "No",
            "Type": "S3ContentLocation",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.codecontent.textcontent": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "102400",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...102400",
            "CompliantValues": "0...102400"
        },
        "kinesisanalyticsv2.application.codecontent.zipfilecontent": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.outputdestination.mediapackagesettings": {
            "Required": "No",
            "Type": [
                "MediaPackageOutputDestinationSettings"
            ],
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.outputdestination.id": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.outputdestination.settings": {
            "Required": "No",
            "Type": [
                "OutputDestinationSettings"
            ],
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.outputdestination.multiplexsettings": {
            "Required": "No",
            "Type": "MultiplexProgramChannelDestinationSettings",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.tcproute.action": {
            "Required": "Yes",
            "Type": "TcpRouteAction",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.tcproute.timeout": {
            "Required": "No",
            "Type": "TcpTimeout",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.s3action.topicarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.s3action.kmskeyarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.s3action.bucketname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.s3action.objectkeyprefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinition.function.functionconfiguration": {
            "Required": "Yes",
            "Type": "FunctionConfiguration",
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinition.function.functionarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinition.function.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.adjustmenttype": {
            "Allowed values": "CHANGE_IN_CAPACITY | EXACT_CAPACITY | PERCENT_CHANGE_IN_CAPACITY",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.scalingadjustment": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.cooldown": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisanalyticsv2.application.s3contentlocation.filekey": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "kinesisanalyticsv2.application.s3contentlocation.bucketarn": {
            "Pattern": "arn:.*",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisanalyticsv2.application.s3contentlocation.objectversion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.job.notificationproperty.notifydelayafter": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.webacl.orstatementtwo.statements": {
            "Required": "Yes",
            "Type": [
                "StatementThree"
            ],
            "UpdateRequires": "No interruption"
        },
        "msk.cluster.brokerlogs.s3": {
            "Required": "No",
            "Type": "S3",
            "UpdateRequires": "No interruption"
        },
        "msk.cluster.brokerlogs.firehose": {
            "Required": "No",
            "Type": "Firehose",
            "UpdateRequires": "No interruption"
        },
        "msk.cluster.brokerlogs.cloudwatchlogs": {
            "Required": "No",
            "Type": "CloudWatchLogs",
            "UpdateRequires": "No interruption"
        },
        "robomaker.robotapplication.sourceconfig.s3key": {
            "Pattern": ".*",
            "Required": "Yes",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "robomaker.robotapplication.sourceconfig.architecture": {
            "Allowed values": "ARM64 | ARMHF | X86_64",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "robomaker.robotapplication.sourceconfig.s3bucket": {
            "Pattern": "[a-z0-9][a-z0-9.\\-]*[a-z0-9]",
            "Required": "Yes",
            "Maximum": "63",
            "UpdateRequires": "No interruption",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...63",
            "CompliantValues": "3...63"
        },
        "greengrass.functiondefinition.execution.runas": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinition.execution.isolationmode": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "as.metricscollection.metrics": {
            "Type": "List of String",
            "Required": "No",
            "Allowed Values": "+  `GroupMinSize` \n+  `GroupMaxSize` \n+  `GroupDesiredCapacity` \n+  `GroupInServiceInstances` \n+  `GroupPendingInstances` \n+  `GroupStandbyInstances` \n+  `GroupTerminatingInstances` \n+  `GroupTotalInstances` \n+  `GroupInServiceCapacity` \n+  `GroupPendingCapacity` \n+  `GroupStandbyCapacity` \n+  `GroupTerminatingCapacity` \n+  `GroupTotalCapacity` \nIf you specify `Granularity` and don't specify any metrics, all metrics are enabled\\.",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "+  `GroupMinSize` \n+  `GroupMaxSize` \n+  `GroupDesiredCapacity` \n+  `GroupInServiceInstances` \n+  `GroupPendingInstances` \n+  `GroupStandbyInstances` \n+  `GroupTerminatingInstances` \n+  `GroupTotalInstances` \n+  `GroupInServiceCapacity` \n+  `GroupPendingCapacity` \n+  `GroupStandbyCapacity` \n+  `GroupTerminatingCapacity` \n+  `GroupTotalCapacity` \nIf you specify `Granularity` and don't specify any metrics, all metrics are enabled\\."
            ],
            "SampleValue": "+  `GroupMinSize` \n+  `GroupMaxSize` \n+  `GroupDesiredCapacity` \n+  `GroupInServiceInstances` \n+  `GroupPendingInstances` \n+  `GroupStandbyInstances` \n+  `GroupTerminatingInstances` \n+  `GroupTotalInstances` \n+  `GroupInServiceCapacity` \n+  `GroupPendingCapacity` \n+  `GroupStandbyCapacity` \n+  `GroupTerminatingCapacity` \n+  `GroupTotalCapacity` \nIf you specify `Granularity` and don't specify any metrics, all metrics are enabled\\.",
            "CompliantValues": [
                "+  `GroupMinSize` \n+  `GroupMaxSize` \n+  `GroupDesiredCapacity` \n+  `GroupInServiceInstances` \n+  `GroupPendingInstances` \n+  `GroupStandbyInstances` \n+  `GroupTerminatingInstances` \n+  `GroupTotalInstances` \n+  `GroupInServiceCapacity` \n+  `GroupPendingCapacity` \n+  `GroupStandbyCapacity` \n+  `GroupTerminatingCapacity` \n+  `GroupTotalCapacity` \nIf you specify `Granularity` and don't specify any metrics, all metrics are enabled\\."
            ]
        },
        "as.metricscollection.granularity": {
            "Type": "String",
            "Required": "Yes",
            "Allowed Values": "1Minute",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "1Minute"
            ],
            "SampleValue": "1Minute",
            "CompliantValues": [
                "1Minute"
            ]
        },
        "ssm.resourcedatasync.s3destination.syncformat": {
            "Allowed values": "JsonSerDe",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ssm.resourcedatasync.s3destination.bucketregion": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "64",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "ssm.resourcedatasync.s3destination.bucketname": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "ssm.resourcedatasync.s3destination.kmskeyarn": {
            "Pattern": "arn:.*",
            "Required": "No",
            "Maximum": "512",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "ssm.resourcedatasync.s3destination.bucketprefix": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "codedeploy.deploymentgroup.tagfilter.key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.tagfilter.type": {
            "Allowed values": "KEY_AND_VALUE | KEY_ONLY | VALUE_ONLY",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.tagfilter.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.s3logsconfig.encryptiondisabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codebuild.project.s3logsconfig.status": {
            "Allowed values": "DISABLED | ENABLED",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.s3logsconfig.location": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafregional.sqlinjectionmatchset.fieldtomatch.data": {
            "Pattern": ".*\\S.*",
            "Required": "Conditional",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafregional.sqlinjectionmatchset.fieldtomatch.type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.maxconnectionspercent": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.maxidleconnectionspercent": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.sessionpinningfilters": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.initquery": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.connectionborrowtimeout": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualnode.awscloudmapinstanceattribute.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.awscloudmapinstanceattribute.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.clientvpnendpoint.tagspecification.resourcetype": {
            "Allowed values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | elastic-gpu | elastic-ip | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | internet-gateway | key-pair | launch-template | local-gateway-route-table-vpc-association | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-flow-log | vpc-peering-connection | vpn-connection | vpn-gateway",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.clientvpnendpoint.tagspecification.tags": {
            "Required": "Yes",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "config.configurationrecorder.recordinggroup.includeglobalresourcetypes": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "config.configurationrecorder.recordinggroup.allsupported": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "config.configurationrecorder.recordinggroup.resourcetypes": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.inputschema.recordencoding": {
            "Pattern": "UTF-8",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.inputschema.recordcolumns": {
            "Required": "Yes",
            "Type": [
                "RecordColumn"
            ],
            "Maximum": "1000",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.inputschema.recordformat": {
            "Required": "Yes",
            "Type": "RecordFormat",
            "UpdateRequires": "No interruption"
        },
        "sagemaker.workteam.memberdefinition.cognitomemberdefinition": {
            "Required": "Yes",
            "Type": "CognitoMemberDefinition",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskdefinition.firelensconfiguration.options": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.firelensconfiguration.type": {
            "Allowed values": "fluentbit | fluentd",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "as.launchconfig.userdata": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "21847",
            "UpdateRequires": "Replacement"
        },
        "as.launchconfig.securitygroups": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "as.launchconfig.instancetype": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.launchconfig.instanceid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "as.launchconfig.ebsoptimized": {
            "Required": "No",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "as.launchconfig.associatepublicipaddress": {
            "Required": "No",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "as.launchconfig.instancemonitoring": {
            "Required": "No",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "as.launchconfig.launchconfigurationname": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.launchconfig.imageid": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.launchconfig.classiclinkvpcsecuritygroups": {
            "Required": "Conditional",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "as.launchconfig.kernelid": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.launchconfig.blockdevicemappings": {
            "Required": "No",
            "Type": [
                "BlockDeviceMapping"
            ],
            "UpdateRequires": "Replacement"
        },
        "as.launchconfig.ramdiskid": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.launchconfig.placementtenancy": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "64",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "as.launchconfig.classiclinkvpcid": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.launchconfig.keyname": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.launchconfig.iaminstanceprofile": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "1600",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...1600",
            "CompliantValues": "1...1600"
        },
        "as.launchconfig.spotprice": {
            "Minimum": "1",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "ec2.instance.creditspecification.cpucredits": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "synthetics.canary.code.s3bucket": {
            "Minimum": "1",
            "Required": "Conditional",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "synthetics.canary.code.handler": {
            "Minimum": "1",
            "Required": "Conditional",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "synthetics.canary.code.s3objectversion": {
            "Minimum": "1",
            "Required": "Conditional",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "synthetics.canary.code.s3key": {
            "Minimum": "1",
            "Required": "Conditional",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "synthetics.canary.code.script": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.input.inputdestinationrequest.streamname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.statementthree.rulegroupreferencestatement": {
            "Required": "No",
            "Type": "RuleGroupReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementthree.regexpatternsetreferencestatement": {
            "Required": "No",
            "Type": "RegexPatternSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementthree.managedrulegroupstatement": {
            "Required": "No",
            "Type": "ManagedRuleGroupStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementthree.bytematchstatement": {
            "Required": "No",
            "Type": "ByteMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementthree.xssmatchstatement": {
            "Required": "No",
            "Type": "XssMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementthree.sqlimatchstatement": {
            "Required": "No",
            "Type": "SqliMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementthree.geomatchstatement": {
            "Required": "No",
            "Type": "GeoMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementthree.ipsetreferencestatement": {
            "Required": "No",
            "Type": "IPSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementthree.sizeconstraintstatement": {
            "Required": "No",
            "Type": "SizeConstraintStatement",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.hostheaderconfig.values": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpool.usernameconfiguration.casesensitive": {
            "CaseSensitive`  <a name=\"cfn-cognito-userpool-usernameconfiguration-casesensitive\"></a>\nSpecifies whether username case sensitivity will be applied for all users in the user pool through Cognito APIs\\.  \nValid values include:  \n+  ** `True` *": "Enables case sensitivity for all username input\\. When this option is set to `True`, users must sign in using the exact capitalization of their given username\\. For example, \u201cUserName\u201d\\. This is the default value\\.\n+  ** `False` *",
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticmapreduce.instancefleetconfig.configuration.configurationproperties": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.instancefleetconfig.configuration.configurations": {
            "Required": "No",
            "Type": [
                "Configuration"
            ],
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.instancefleetconfig.configuration.classification": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "appmesh.mesh.tagref.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.mesh.tagref.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.service.loadbalancers.containername": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.service.loadbalancers.loadbalancername": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.service.loadbalancers.containerport": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.service.loadbalancers.targetgrouparn": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "wafv2.webacl.countrycodes.countrycodes": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-webacl-countrycodes-properties": {
            "CountryCodes": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "glue.crawler.schedule.scheduleexpression": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "greengrass.resourcedefinition.resourceinstance.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinition.resourceinstance.resourcedatacontainer": {
            "Required": "Yes",
            "Type": "ResourceDataContainer",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinition.resourceinstance.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ssm.patchbaseline.patchsource.products": {
            "Required": "No",
            "Maximum": "20",
            "UpdateRequires": "No interruption"
        },
        "ssm.patchbaseline.patchsource.name": {
            "Pattern": "^[a-zA-Z0-9_\\-.]{3,50}$",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.patchbaseline.patchsource.configuration": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "s3.bucket.notificationconfig.topicconfigurations": {
            "Required": "No",
            "Type": [
                "TopicConfiguration"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.notificationconfig.queueconfigurations": {
            "Required": "No",
            "Type": [
                "QueueConfiguration"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.notificationconfig.lambdaconfigurations": {
            "Required": "No",
            "Type": [
                "LambdaConfiguration"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.hibernationoptions.configured": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "wafv2.rulegroup.ipsetreferencestatement.arn": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "route53.recordset.geolocation.1.countrycode": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "2",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2",
            "CompliantValues": "1...2"
        },
        "route53.recordset.geolocation.1.subdivisioncode": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "3",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...3",
            "CompliantValues": "1...3"
        },
        "route53.recordset.geolocation.1.continentcode": {
            "Required": "No",
            "Maximum": "2",
            "UpdateRequires": "No interruption",
            "Minimum": "2",
            "ContinentCode`  <a name=\"cfn-route53-recordsetgroup-geolocation-continentcode\"></a>\nFor geolocation resource record sets, a two\\-letter abbreviation that identifies a continent\\. Route 53 supports the following continent codes:  \n+ **AF*": "Africa\n+ **AN*",
            "Type": "String",
            "AllowedValues": "2...2",
            "CompliantValues": "2...2"
        },
        "s3.bucket.sourceselectioncriteria.ssekmsencryptedobjects": {
            "Required": "Yes",
            "Type": "SseKmsEncryptedObjects",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.bounceaction.sender": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.bounceaction.message": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.bounceaction.statuscode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.bounceaction.smtpreplycode": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.bounceaction.topicarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.integrationmethod": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.timeoutinmillis": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.payloadformatversion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "backup.backupselection.backupselectionresourcetype.iamrolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "backup.backupselection.backupselectionresourcetype.selectionname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "backup.backupselection.backupselectionresourcetype.listoftags": {
            "Required": "No",
            "Type": [
                "ConditionResourceType"
            ],
            "UpdateRequires": "No interruption"
        },
        "backup.backupselection.backupselectionresourcetype.resources": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ses.template.template.htmlpart": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.template.template.templatename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ses.template.template.textpart": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.template.template.subjectpart": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.streamingdistribution.streamingdistributionconfig.trustedsigners": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.streamingdistribution.streamingdistributionconfig.aliases": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.streamingdistribution.streamingdistributionconfig.logging": {
            "Required": "No",
            "Type": "Logging",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.streamingdistribution.streamingdistributionconfig.priceclass": {
            "Allowed values": "PriceClass_100 | PriceClass_200 | PriceClass_All",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.streamingdistribution.streamingdistributionconfig.comment": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.streamingdistribution.streamingdistributionconfig.enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudfront.streamingdistribution.streamingdistributionconfig.s3origin": {
            "Required": "Yes",
            "Type": "S3Origin",
            "UpdateRequires": "No interruption"
        },
        "iot1click.project.placementtemplate.devicetemplates": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "Replacement",
            "SampleValue": {
                "todo": "json"
            }
        },
        "iot1click.project.placementtemplate.defaultattributes": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "ec2.launchtemplate.launchtemplatedata.monitoring.enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.table.serdeinfo.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.serdeinfo.serializationlibrary": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.serdeinfo.parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "greengrass.loggerdefinitionversion.logger.type": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.loggerdefinitionversion.logger.component": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.loggerdefinitionversion.logger.space": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "greengrass.loggerdefinitionversion.logger.level": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.loggerdefinitionversion.logger.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.splunkretryoptions.durationinseconds": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "7200",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...7200",
            "CompliantValues": "0...7200"
        },
        "glue.connection.physicalconnectionrequirements.subnetid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.connection.physicalconnectionrequirements.securitygroupidlist": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.connection.physicalconnectionrequirements.availabilityzone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.excludedrules.excludedrules": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-webacl-excludedrules-properties": {
            "ExcludedRules": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.instanceinterruptionbehavior": {
            "Allowed values": "hibernate | stop | terminate",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.maxprice": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.validuntil": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.blockdurationminutes": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.spotinstancetype": {
            "Allowed values": "one-time | persistent",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dynamodb.attributedef.attributetype": {
            "Allowed values": "B | N | S",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dynamodb.attributedef.attributename": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cloudfront.cloudfrontoriginaccessidentity.cloudfrontoriginaccessidentityconfig.comment": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.payload.contentexpression": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.payload.type": {
            "Allowed values": "JSON | STRING",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.georestriction.locations": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.georestriction.restrictiontype": {
            "Allowed values": "blacklist | none | whitelist",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "servicediscovery.service.dnsrecord.priority weight port service-hostname": {
            "Allowed values": "A | AAAA | CNAME | SRV",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "servicediscovery.service.dnsrecord.type": {},
        "servicediscovery.service.dnsrecord.ttl": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "iotanalytics.datastore.retentionperiod.unlimited": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "iotanalytics.datastore.retentionperiod.numberofdays": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cognito.userpool.emailconfiguration.from": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpool.emailconfiguration.emailsendingaccount": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpool.emailconfiguration.configurationset": {
            "Pattern": "^[a-zA-Z0-9_-]+$",
            "Required": "No",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "cognito.userpool.emailconfiguration.replytoemailaddress": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+@[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpool.emailconfiguration.sourcearn": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "iotanalytics.dataset.deltatime.timeexpression": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.deltatime.offsetseconds": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualrouter.tagref.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualrouter.tagref.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudwatch.alarm.metricdataquery.id": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cloudwatch.alarm.metricdataquery.returndata": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudwatch.alarm.metricdataquery.label": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudwatch.alarm.metricdataquery.metricstat": {
            "Required": "No",
            "Type": "MetricStat",
            "UpdateRequires": "No interruption"
        },
        "cloudwatch.alarm.metricdataquery.period": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cloudwatch.alarm.metricdataquery.expression": {
            "Minimum": "1",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "opsworks.instance.blockdevicemapping.virtualname": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.instance.blockdevicemapping.nodevice": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.instance.blockdevicemapping.ebs": {
            "Required": "Conditional",
            "Type": "EbsBlockDevice",
            "UpdateRequires": "No interruption"
        },
        "opsworks.instance.blockdevicemapping.devicename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.republishaction.topic": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.republishaction.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.republishaction.qos": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "iotanalytics.dataset.retentionperiod.unlimited": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "iotanalytics.dataset.retentionperiod.numberofdays": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ask.skill.skillpackage.s3key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ask.skill.skillpackage.s3objectversion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ask.skill.skillpackage.s3bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ask.skill.skillpackage.overrides": {
            "Required": "No",
            "Type": "Overrides",
            "UpdateRequires": "No interruption"
        },
        "ask.skill.skillpackage.s3bucketrole": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "datapipeline.pipeline.parameterobjects.attributes": {
            "Required": "Yes",
            "Type": [
                "ParameterAttribute"
            ],
            "UpdateRequires": "No interruption"
        },
        "datapipeline.pipeline.parameterobjects.id": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "amazonmq.broker.loglist.audit": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "amazonmq.broker.loglist.general": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "wafv2.rulegroup.sizeconstraintstatement.fieldtomatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.sizeconstraintstatement.comparisonoperator": {
            "Allowed values": "EQ | GE | GT | LE | LT | NE",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.sizeconstraintstatement.texttransformations": {
            "Required": "Yes",
            "Type": [
                "TextTransformation"
            ],
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.sizeconstraintstatement.size": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.ebsblockdeviceconfig.volumesperinstance": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.ebsblockdeviceconfig.volumespecification": {
            "Required": "Yes",
            "Type": "VolumeSpecification",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.antennauplinkconfig.targeteirp": {
            "Required": "Yes",
            "Type": "Eirp",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.antennauplinkconfig.spectrumconfig": {
            "Required": "Yes",
            "Type": "SpectrumConfig",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.listener.protocol": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.listener.instanceport": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "65535",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...65535",
            "CompliantValues": "1...65535"
        },
        "ec2.elb.listener.policynames": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.listener.sslcertificateid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.listener.instanceprotocol": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.listener.loadbalancerport": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinition.runas.gid": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "greengrass.functiondefinition.runas.uid": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.cluster.clustersetting.name": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "containerInsights"
            ],
            "Allowed Values": "containerInsights",
            "UpdateRequires": "No interruption",
            "SampleValue": "containerInsights",
            "CompliantValues": [
                "containerInsights"
            ]
        },
        "ecs.cluster.clustersetting.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbproxy.authformat.secretarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbproxy.authformat.iamauth": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbproxy.authformat.description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbproxy.authformat.authscheme": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbproxy.authformat.username": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appconfig.deployment.tags.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appconfig.deployment.tags.key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "guardduty.filter.condition.lte": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "guardduty.filter.condition.neq": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "guardduty.filter.condition.eq": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "guardduty.filter.condition.gte": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "guardduty.filter.condition.lt": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "acmpca.certificateauthority.crlconfiguration.enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "acmpca.certificateauthority.crlconfiguration.s3bucketname": {
            "Minimum": "3",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "3...255",
            "CompliantValues": "3...255"
        },
        "acmpca.certificateauthority.crlconfiguration.customcname": {
            "Minimum": "0",
            "Required": "No",
            "Maximum": "253",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...253",
            "CompliantValues": "0...253"
        },
        "acmpca.certificateauthority.crlconfiguration.expirationindays": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "5000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...5000",
            "CompliantValues": "1...5000"
        },
        "wafregional.xssmatchset.fieldtomatch.data": {
            "Pattern": ".*\\S.*",
            "Required": "Conditional",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafregional.xssmatchset.fieldtomatch.type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "datapipeline.pipeline.pipelinetags.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "datapipeline.pipeline.pipelinetags.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "msk.cluster.firehose.enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "msk.cluster.firehose.deliverystream": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.recordcolumn.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.recordcolumn.sqltype": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.recordcolumn.mapping": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.resourcedatasync.syncsource.includefutureregions": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ssm.resourcedatasync.syncsource.awsorganizationssource": {
            "Required": "No",
            "Type": "AwsOrganizationsSource",
            "UpdateRequires": "No interruption"
        },
        "ssm.resourcedatasync.syncsource.sourcetype": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "64",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "ssm.resourcedatasync.syncsource.sourceregions": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.notificationconfig.queueconfig.event": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.notificationconfig.queueconfig.filter": {
            "Required": "No",
            "Type": "NotificationFilter",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.notificationconfig.queueconfig.queue": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.geomatchstatement.countrycodes": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "pinpointemail.configurationset.deliveryoptions.sendingpoolname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.notificationconfig.notificationarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.notificationconfig.notificationtype": {
            "Allowed values": "Command | Invocation",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.notificationconfig.notificationevents": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.tcptimeout.idle": {
            "Required": "No",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.sourceauth.type": {
            "Allowed values": "OAUTH",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.sourceauth.resource": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.customactiontype.settings.entityurltemplate": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "codepipeline.customactiontype.settings.revisionurltemplate": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "codepipeline.customactiontype.settings.thirdpartyconfigurationurl": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "codepipeline.customactiontype.settings.executionurltemplate": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "apitgateway.method.integration.timeoutinmillis": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apitgateway.method.integration.contenthandling": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apitgateway.method.integration.uri": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.integration.connectionid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apitgateway.method.integration.\"application/json\": \"{\\n \\\"statuscode\\\": 200\\n}\"": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.integration.cachekeyparameters": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.integration.requesttemplates": {},
        "apitgateway.method.integration.type": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.integration.passthroughbehavior": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.integration.integrationhttpmethod": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apitgateway.method.integration.integrationresponses": {
            "Required": "No",
            "Type": [
                "IntegrationResponse"
            ],
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.integration.connectiontype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apitgateway.method.integration.credentials": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.integration.requestparameters": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.integration.cachenamespace": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.metricdimension.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.metricdimension.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpointemail.configurationseteventdestination.pinpointdestination.applicationarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.matchmakingconfiguration.gameproperty.key": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.matchmakingconfiguration.gameproperty.value": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "96",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafregional.geomatchset.geomatchconstraint.value": {
            "Allowed values": "AD | AE | AF | AG | AI | AL | AM | AO | AQ | AR | AS | AT | AU | AW | AX | AZ | BA | BB | BD | BE | BF | BG | BH | BI | BJ | BL | BM | BN | BO | BQ | BR | BS | BT | BV | BW | BY | BZ | CA | CC | CD | CF | CG | CH | CI | CK | CL | CM | CN | CO | CR | CU | CV | CW | CX | CY | CZ | DE | DJ | DK | DM | DO | DZ | EC | EE | EG | EH | ER | ES | ET | FI | FJ | FK | FM | FO | FR | GA | GB | GD | GE | GF | GG | GH | GI | GL | GM | GN | GP | GQ | GR | GS | GT | GU | GW | GY | HK | HM | HN | HR | HT | HU | ID | IE | IL | IM | IN | IO | IQ | IR | IS | IT | JE | JM | JO | JP | KE | KG | KH | KI | KM | KN | KP | KR | KW | KY | KZ | LA | LB | LC | LI | LK | LR | LS | LT | LU | LV | LY | MA | MC | MD | ME | MF | MG | MH | MK | ML | MM | MN | MO | MP | MQ | MR | MS | MT | MU | MV | MW | MX | MY | MZ | NA | NC | NE | NF | NG | NI | NL | NO | NP | NR | NU | NZ | OM | PA | PE | PF | PG | PH | PK | PL | PM | PN | PR | PS | PT | PW | PY | QA | RE | RO | RS | RU | RW | SA | SB | SC | SD | SE | SG | SH | SI | SJ | SK | SL | SM | SN | SO | SR | SS | ST | SV | SX | SY | SZ | TC | TD | TF | TG | TH | TJ | TK | TL | TM | TN | TO | TR | TT | TV | TW | TZ | UA | UG | UM | US | UY | UZ | VA | VC | VE | VG | VI | VN | VU | WF | WS | YE | YT | ZA | ZM | ZW",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafregional.geomatchset.geomatchconstraint.type": {
            "Allowed values": "Country",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.broker.tagsentry.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.broker.tagsentry.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.taskset.serviceregistry.containername": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskset.serviceregistry.port": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskset.serviceregistry.registryarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskset.serviceregistry.containerport": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "wafv2.rulegroup.visibilityconfig.sampledrequestsenabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "wafv2.rulegroup.visibilityconfig.cloudwatchmetricsenabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "wafv2.rulegroup.visibilityconfig.metricname": {
            "Pattern": "^[\\w#:\\.\\-/]+$",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "ec2.instance.hibernationoptions.configured": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.capacityreservation.tagspecification.tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.capacityreservation.tagspecification.resourcetype": {
            "Allowed values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | elastic-gpu | elastic-ip | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | internet-gateway | key-pair | launch-template | local-gateway-route-table-vpc-association | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-flow-log | vpc-peering-connection | vpn-connection | vpn-gateway",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.applicationoutput.kinesisfirehoseoutput.resourcearn": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisanalytics.applicationoutput.kinesisfirehoseoutput.rolearn": {
            "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "iot.topicrule.stepfunctionsaction.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.stepfunctionsaction.statemachinename": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.stepfunctionsaction.executionnameprefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafregional.ipset.ipsetdescriptor.value": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "50",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...50",
            "CompliantValues": "1...50"
        },
        "wafregional.ipset.ipsetdescriptor.type": {
            "Allowed values": "IPV4 | IPV6",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.config.bandwidth.units": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.config.bandwidth.value": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "route53.aliastarget.evaluatetargethealth": {
            "Type": "Boolean",
            "Required": "No",
            "Applies only to alias records with any routing policy:* When `EvaluateTargetHealth` is `true`, an alias record inherits the health of the referenced AWS resource, such as an ELB load balancer or another record in the hosted zone\\.  \nNote the following:    \nCloudFront distributions  \nYou can't set `EvaluateTargetHealth` to `true` when the alias target is a CloudFront distribution\\.  \nElastic Beanstalk environments that have regionalized subdomains  \nIf you specify an Elastic Beanstalk environment in `DNSName` and the environment contains an ELB load balancer, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. \\(An environment automatically contains an ELB load balancer if it includes more than one Amazon EC2 instance\\.\\) If you set `EvaluateTargetHealth` to `true` and either no Amazon EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other available resources that are healthy, if any\\.   \nIf the environment contains a single Amazon EC2 instance, there are no special requirements\\.  \nELB load balancers  \nHealth checking behavior depends on the type of load balancer:  \n+ **Classic Load Balancers*": "If you specify an ELB Classic Load Balancer in `DNSName`, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. If you set `EvaluateTargetHealth` to `true` and either no EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other resources\\.\n+ **Application and Network Load Balancers*",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "route53.aliastarget.hostedzoneid": {
            "UpdateRequires": "No interruption",
            "Required": "Yes",
            "Type": "String",
            "Alias resource records sets only": "The value used depends on where you want to route traffic:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the hosted zone ID for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalHostedZoneId`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionHostedZoneId`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nSpecify the hosted zone ID for your interface endpoint\\. You can get the value of `HostedZoneId` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify `Z2FDTNDATAQYW2`\\. This is always the hosted zone ID when you create an alias record that routes traffic to a CloudFront distribution\\.  \nAlias records for CloudFront can't be created in a private zone\\.  \nElastic Beanstalk environment  \nSpecify the hosted zone ID for the region that you created the environment in\\. The environment must have a regionalized subdomain\\. For a list of regions and the corresponding hosted zone IDs, see [AWS Elastic Beanstalk](https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region) in the \"AWS Regions and Endpoints\" chapter of the *Amazon Web Services General Reference*\\.  \nELB load balancer  \nSpecify the value of the hosted zone ID for the load balancer\\. Use the following methods to get the hosted zone ID:  \n+ [Service Endpoints](https://docs.aws.amazon.com/general/latest/gr/elb.html) table in the \"Elastic Load Balancing Endpoints and Quotas\" topic in the *Amazon Web Services General Reference",
            "Maximum": "32",
            "SampleValue": "example-string"
        },
        "route53.aliastarget.dnsname": {
            "Alias records only:* The value that you specify depends on where you want to route queries:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the applicable domain name for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalDomainName`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionDomainName`\\. This is the name of the associated CloudFront distribution, such as `da1b2c3d4e5.cloudfront.net`\\.\nThe name of the record that you're creating must match a custom domain name for your API, such as `api.example.com`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nEnter the API endpoint for the interface endpoint, such as `vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com`\\. For edge\\-optimized APIs, this is the domain name for the corresponding CloudFront distribution\\. You can get the value of `DnsName` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify the domain name that CloudFront assigned when you created your distribution\\.  \nYour CloudFront distribution must include an alternate domain name that matches the name of the record\\. For example, if the name of the record is *acme\\.example\\.com*, your CloudFront distribution must include *acme\\.example\\.com* as one of the alternate domain names\\. For more information, see [Using Alternate Domain Names \\(CNAMEs\\)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html) in the *Amazon CloudFront Developer Guide*\\.  \nYou can't create a record in a private hosted zone to route traffic to a CloudFront distribution\\.  \nFor failover alias records, you can't specify a CloudFront distribution for both the primary and secondary records\\. A distribution must include an alternate domain name that matches the name of the record\\. However, the primary and secondary records have the same name, and you can't include the same alternate domain name in more than one distribution\\.   \nElastic Beanstalk environment  \nIf the domain name for your Elastic Beanstalk environment includes the region that you deployed the environment in, you can create an alias record that routes traffic to the environment\\. For example, the domain name `my-environment.us-west-2.elasticbeanstalk.com` is a regionalized domain name\\.   \nFor environments that were created before early 2016, the domain name doesn't include the region\\. To route traffic to these environments, you must create a CNAME record instead of an alias record\\. Note that you can't create a CNAME record for the root domain name\\. For example, if your domain name is example\\.com, you can create a record that routes traffic for acme\\.example\\.com to your Elastic Beanstalk environment, but you can't create a record that routes traffic for example\\.com to your Elastic Beanstalk environment\\.\nFor Elastic Beanstalk environments that have regionalized subdomains, specify the `CNAME` attribute for the environment\\. You can use the following methods to get the value of the CNAME attribute:  \n+ *AWS Management Console": "For information about how to get the value by using the console, see [Using Custom Domains with AWS Elastic Beanstalk](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customdomains.html) in the *AWS Elastic Beanstalk Developer Guide*\\.\n+ *Elastic Beanstalk API",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.bufferinghints.intervalinseconds": {
            "Minimum": "60",
            "Required": "No",
            "Maximum": "900",
            "UpdateRequires": "No interruption",
            "AllowedValues": "60...900",
            "CompliantValues": "60...900"
        },
        "kinesisfirehose.deliverystream.bufferinghints.sizeinmbs": {
            "Minimum": "1",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.csvmappingparameters.recordcolumndelimiter": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.csvmappingparameters.recordrowdelimiter": {
            "Minimum": "1",
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "appsync.datasource.relationaldatabaseconfig.relationaldatabasesourcetype": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.relationaldatabaseconfig.rdshttpendpointconfig": {
            "Required": "No",
            "Type": "RdsHttpEndpointConfig",
            "UpdateRequires": "No interruption"
        },
        "ec2.instance.cpuoptions.corecount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.instance.cpuoptions.threadspercore": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "budgets.budget.notification.thresholdtype": {
            "Allowed values": "ABSOLUTE_VALUE | PERCENTAGE",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "budgets.budget.notification.notificationtype": {
            "Allowed values": "ACTUAL | FORECASTED",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "budgets.budget.notification.threshold": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "budgets.budget.notification.comparisonoperator": {
            "Allowed values": "EQUAL_TO | GREATER_THAN | LESS_THAN",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinition.resourcedatacontainer.localdeviceresourcedata": {
            "Required": "No",
            "Type": "LocalDeviceResourceData",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinition.resourcedatacontainer.localvolumeresourcedata": {
            "Required": "No",
            "Type": "LocalVolumeResourceData",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinition.resourcedatacontainer.s3machinelearningmodelresourcedata": {
            "Required": "No",
            "Type": "S3MachineLearningModelResourceData",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinition.resourcedatacontainer.sagemakermachinelearningmodelresourcedata": {
            "Required": "No",
            "Type": "SageMakerMachineLearningModelResourceData",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinition.resourcedatacontainer.secretsmanagersecretresourcedata": {
            "Required": "No",
            "Type": "SecretsManagerSecretResourceData",
            "UpdateRequires": "Replacement"
        },
        "wafv2-webacl-singlequeryargument-properties": {
            "Name": {
                "Pattern": ".*\\S.*",
                "Required": "No",
                "Maximum": "64",
                "UpdateRequires": "No interruption",
                "Minimum": "1",
                "Type": "String",
                "AllowedValues": "1...64",
                "CompliantValues": "1...64"
            }
        },
        "wafv2.webacl.singlequeryargument.name": {
            "Pattern": ".*\\S.*",
            "Required": "No",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "mediaconvert.jobtemplate.hopdestination.waitminutes": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "mediaconvert.jobtemplate.hopdestination.priority": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "mediaconvert.jobtemplate.hopdestination.queue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.logging.prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.logging.bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.logging.includecookies": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "accessanalyzer.analyzer.archiverule.rulename": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "accessanalyzer.analyzer.archiverule.filter": {
            "Required": "Yes",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.notstatementone.statement": {
            "Required": "Yes",
            "Type": "StatementTwo",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationoutput.lambdaoutput.resourcearn": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "iotanalytics.dataset.resourceconfiguration.computetype": {
            "Allowed values": "ACU_1 | ACU_2",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.resourceconfiguration.volumesizeingb": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "Maximum": "50",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...50",
            "CompliantValues": "1...50"
        },
        "msk.cluster.logginginfo.brokerlogs": {
            "Required": "Yes",
            "Type": "BrokerLogs",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.webhookfilter.excludematchedpattern": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codebuild.project.webhookfilter.type": {
            "Allowed values": "ACTOR_ACCOUNT_ID | BASE_REF | COMMIT_MESSAGE | EVENT | FILE_PATH | HEAD_REF",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.webhookfilter.pattern": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.httpretrypolicy.maxretries": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.route.httpretrypolicy.tcpretryevents": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.httpretrypolicy.perretrytimeout": {
            "Required": "Yes",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.httpretrypolicy.httpretryevents": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.headermatchmethod.range": {
            "Required": "No",
            "Type": "MatchRange",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.headermatchmethod.regex": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.headermatchmethod.suffix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.headermatchmethod.prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.headermatchmethod.exact": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotthingsgraph.flowtemplate.definitiondocument.language": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotthingsgraph.flowtemplate.definitiondocument.text": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinitionversion.runas.uid": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "greengrass.functiondefinitionversion.runas.gid": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "codepipeline.pipeline.disableinboundstagetransitions.reason": {
            "Pattern": "[a-zA-Z0-9!@ \\(\\)\\.\\*\\?\\-]+",
            "Required": "Yes",
            "Maximum": "300",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...300",
            "CompliantValues": "1...300"
        },
        "codepipeline.pipeline.disableinboundstagetransitions.stagename": {
            "Pattern": "[A-Za-z0-9.@\\-_]+",
            "Required": "Yes",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.s3uri": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.destinationpath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.ownersetting": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ses.receiptfilter.ipfilter.cidr": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptfilter.ipfilter.policy": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtarget.targets.key": {
            "Pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$|resource-groups:ResourceTypeFilters|resource-groups:Name",
            "Required": "Yes",
            "Maximum": "163",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...163",
            "CompliantValues": "1...163"
        },
        "ssm.maintenancewindowtarget.targets.values": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.topicrulepayload.erroraction": {
            "Required": "No",
            "Type": "Action",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.topicrulepayload.awsiotsqlversion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.topicrulepayload.ruledisabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "iot.topicrule.topicrulepayload.description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.topicrulepayload.sql": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.topicrulepayload.actions": {
            "Required": "Yes",
            "Type": [
                "Action"
            ],
            "UpdateRequires": "No interruption"
        },
        "pinpoint.pushtemplate.androidpushnotificationtemplate.smallimageiconurl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.androidpushnotificationtemplate.body": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.androidpushnotificationtemplate.imageurl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.androidpushnotificationtemplate.sound": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.androidpushnotificationtemplate.title": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.androidpushnotificationtemplate.imageiconurl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.androidpushnotificationtemplate.url": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.androidpushnotificationtemplate.action": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications": {
            "Required": "Conditional",
            "Type": [
                "SpotFleetLaunchSpecification"
            ],
            "UpdateRequires": "Replacement"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.validuntil": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.iamfleetrole": {
            "Required": "Yes",
            "UpdateRequires": "Replacement"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.spotprice": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.excesscapacityterminationpolicy": {
            "Allowed values": "default | noTermination",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.validfrom": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.terminateinstanceswithexpiration": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchtemplateconfigs": {
            "Required": "Conditional",
            "Type": [
                "LaunchTemplateConfig"
            ],
            "UpdateRequires": "Replacement"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.loadbalancersconfig": {
            "Required": "No",
            "Type": "LoadBalancersConfig",
            "UpdateRequires": "Replacement"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.replaceunhealthyinstances": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.instanceinterruptionbehavior": {
            "Allowed values": "hibernate | stop | terminate",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.type": {
            "Allowed values": "instant | maintain | request",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.targetcapacity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.allocationstrategy": {
            "Allowed values": "capacityOptimized | diversified | lowestPrice",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.applicationoutput.output.kinesisstreamsoutput": {
            "Required": "No",
            "Type": "KinesisStreamsOutput",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationoutput.output.kinesisfirehoseoutput": {
            "Required": "No",
            "Type": "KinesisFirehoseOutput",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationoutput.output.destinationschema": {
            "Required": "Yes",
            "Type": "DestinationSchema",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationoutput.output.lambdaoutput": {
            "Required": "No",
            "Type": "LambdaOutput",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationoutput.output.name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "iotanalytics.pipeline.datastore.datastorename": {
            "Pattern": "^[a-zA-Z0-9_]+$",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.datastore.name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "gamelift.build.storagelocation.bucket": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "gamelift.build.storagelocation.key": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "gamelift.build.storagelocation.objectversion": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "gamelift.build.storagelocation.rolearn": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "apitgateway.stage.methodsetting.httpmethod": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.stage.methodsetting.throttlingratelimit": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.stage.methodsetting.logginglevel": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.stage.methodsetting.cachingenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apitgateway.stage.methodsetting.throttlingburstlimit": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.stage.methodsetting.resourcepath": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.stage.methodsetting.cachedataencrypted": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apitgateway.stage.methodsetting.cachettlinseconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apitgateway.stage.methodsetting.metricsenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apitgateway.stage.methodsetting.datatraceenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "managedblockchain.member.approvalthresholdpolicy.thresholdpercentage": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...100",
            "CompliantValues": "0...100"
        },
        "managedblockchain.member.approvalthresholdpolicy.thresholdcomparator": {
            "Allowed values": "GREATER_THAN | GREATER_THAN_OR_EQUAL_TO",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "managedblockchain.member.approvalthresholdpolicy.proposaldurationinhours": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "168",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...168",
            "CompliantValues": "1...168"
        },
        "lambda.eventsourcemapping.destinationconfig.onfailure": {
            "Required": "Yes",
            "Type": "OnFailure",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.removeattributes.name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.removeattributes.attributes": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.removeattributes.next": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "greengrass.resourcedefinition.resourcedefinitionversion.resources": {
            "Required": "Yes",
            "Type": [
                "ResourceInstance"
            ],
            "UpdateRequires": "Replacement"
        },
        "athena.workgroup.workgroupconfiguration.bytesscannedcutoffperquery": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "athena.workgroup.workgroupconfiguration.resultconfiguration": {
            "Required": "No",
            "Type": "ResultConfiguration",
            "UpdateRequires": "No interruption"
        },
        "athena.workgroup.workgroupconfiguration.requesterpaysenabled": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "athena.workgroup.workgroupconfiguration.enforceworkgroupconfiguration": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "athena.workgroup.workgroupconfiguration.publishcloudwatchmetricsenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "backup.backupselection.conditionresourcetype.conditionvalue": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "backup.backupselection.conditionresourcetype.conditiontype": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "backup.backupselection.conditionresourcetype.conditionkey": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.iotsitewiseaction.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.iotsitewiseaction.putassetpropertyvalueentries": {
            "Required": "Yes",
            "Type": [
                "PutAssetPropertyValueEntry"
            ],
            "UpdateRequires": "No interruption"
        },
        "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.ownersetting": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.destinationpath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.s3uri": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "managedblockchain.member.networkfabricconfiguration.edition": {
            "Allowed values": "STANDARD | STARTER",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.source.sshkey": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "opsworks.stack.source.type": {
            "Allowed values": "archive | git | s3 | svn",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.source.revision": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.source.url": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.source.password": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "opsworks.stack.source.username": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.targetgrouptuple.targetgrouparn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.targetgrouptuple.weight": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "managedblockchain.member.networkconfiguration.networkframeworkconfiguration": {
            "Required": "No",
            "Type": "NetworkFrameworkConfiguration",
            "UpdateRequires": "No interruption"
        },
        "managedblockchain.member.networkconfiguration.name": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "managedblockchain.member.networkconfiguration.votingpolicy": {
            "Required": "Yes",
            "Type": "VotingPolicy",
            "UpdateRequires": "No interruption"
        },
        "managedblockchain.member.networkconfiguration.framework": {
            "Allowed values": "HYPERLEDGER_FABRIC",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "managedblockchain.member.networkconfiguration.frameworkversion": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "8",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...8",
            "CompliantValues": "1...8"
        },
        "managedblockchain.member.networkconfiguration.description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2-ec2fleet-tagrequest-properties": {
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "SampleValue": "example-string"
            },
            "Key": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "SampleValue": "example-string"
            }
        },
        "ec2.ec2fleet.tagrequest.key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.tagrequest.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.deployment.revision": {
            "Required": "Yes",
            "Type": "RevisionLocation",
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.deployment.description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.deployment.ignoreapplicationstopfailures": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.taskdefinition.inferenceaccelerator.devicename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.inferenceaccelerator.devicetype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.accesslogsettings": {
            "Required": "No",
            "Type": "AccessLogSettings",
            "UpdateRequires": "No interruption"
        },
        "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.autodeploy": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.stagevariables": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.routesettings": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.defaultroutesettings": {
            "Required": "No",
            "Type": "RouteSettings",
            "UpdateRequires": "No interruption"
        },
        "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.security.group.groupdescription": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "rds.security.group.dbsecuritygroupingress": {
            "Required": "Yes",
            "Type": [
                "Ingress"
            ],
            "UpdateRequires": "No interruption"
        },
        "rds.security.group.tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "rds.security.group.ec2vpcid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "kinesis.stream.streamencryption.keyid": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesis.stream.streamencryption.encryptiontype": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticsearch.domain.vpcoptions.securitygroupids": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "elasticsearch.domain.vpcoptions.subnetids": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.cloudwatchalarmaction.statevalue": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.cloudwatchalarmaction.statereason": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.cloudwatchalarmaction.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.cloudwatchalarmaction.alarmname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.streamingdistribution.trustedsigners.awsaccountnumbers": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.streamingdistribution.trustedsigners.enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "resourcegroups.group.resourcequery.type": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "resourcegroups.group.resourcequery.query": {
            "Required": "Conditional",
            "Type": "Query",
            "UpdateRequires": "No interruption"
        },
        "stepfunctions.statemachine.logdestination.cloudwatchlogsloggroup.loggrouparn": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "apigateway.restapi.endpointconfiguration.vpcendpointids": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "apigateway.restapi.endpointconfiguration.types": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.eip.publicipv4pool": {
            "Required": "No",
            "UpdateRequires": "Some interruptions"
        },
        "ec2.eip.tags": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.eip.instanceid": {
            "Required": "No",
            "UpdateRequires": "Some interruptions"
        },
        "ec2.eip.domain": {
            "Allowed values": "standard | vpc",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "medialive.channel.dvbsubsourcesettings.pid": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.networkinterface.instanceipv6address.ipv6address": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.destinationpath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.ownersetting": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.sagemakerjobarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "wafregional.bytematchset.bytematchtuple.targetstring": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "wafregional.bytematchset.bytematchtuple.targetstringbase64": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafregional.bytematchset.bytematchtuple.fieldtomatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafregional.bytematchset.bytematchtuple.positionalconstraint": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "wafregional.bytematchset.bytematchtuple.texttransformation": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.rule.priority": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.rulegroup.rule.statement": {
            "Required": "Yes",
            "Type": "StatementOne",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.rule.action": {
            "Required": "No",
            "Type": "RuleAction",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.rule.name": {
            "Pattern": "^[\\w\\-]+$",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafv2.rulegroup.rule.visibilityconfig": {
            "Required": "Yes",
            "Type": "VisibilityConfig",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskdefinition.device.containerpath": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.device.hostpath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.device.permissions": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "appsync.graphqlapi.logconfig.cloudwatchlogsrolearn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.logconfig.fieldloglevel": {
            "Type": "String",
            "Required": "No",
            "FieldLogLevel`  <a name=\"cfn-appsync-graphqlapi-logconfig-fieldloglevel\"></a>\nThe field logging level\\. Values can be NONE, ERROR, or ALL\\.   \n+  **NONE*": "No field\\-level logs are captured\\.\n+  **ERROR*",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.logconfig.excludeverbosecontent": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.mltransform.transformparameters.transformtype": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.mltransform.transformparameters.findmatchesparameters": {
            "Required": "No",
            "Type": "FindMatchesParameters",
            "UpdateRequires": "No interruption"
        },
        "beanstalk.version.description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "200",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "beanstalk.version.applicationname": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "beanstalk.version.sourcebundle": {
            "Required": "Yes",
            "Type": "SourceBundle",
            "UpdateRequires": "Replacement"
        },
        "ec2.security.group.rule.destinationprefixlistid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.ipprotocol": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.toport": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.security.group.rule.cidrip": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.cidripv6": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.description": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.security.group.rule.destinationsecuritygroupid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.fromport": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "greengrass.resourcedefinitionversion.groupownersetting.autoaddgroupowner": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "greengrass.resourcedefinitionversion.groupownersetting.groupowner": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "glue.connection.connectioninput.matchcriteria": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.connection.connectioninput.connectiontype": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.connection.connectioninput.connectionproperties": {
            "Required": "Yes",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "glue.connection.connectioninput.description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.connection.connectioninput.physicalconnectionrequirements": {
            "Required": "No",
            "Type": "PhysicalConnectionRequirements",
            "UpdateRequires": "No interruption"
        },
        "glue.connection.connectioninput.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "medialive.channel.inputattachment.inputid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "medialive.channel.inputattachment.inputattachmentname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.inputattachment.inputsettings": {
            "Required": "No",
            "Type": "InputSettings",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationreferencedatasource.recordcolumn.mapping": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.applicationreferencedatasource.recordcolumn.sqltype": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.applicationreferencedatasource.recordcolumn.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.ec2tagfilter.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.ec2tagfilter.key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.ec2tagfilter.type": {
            "Allowed values": "KEY_AND_VALUE | KEY_ONLY | VALUE_ONLY",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinition.resourceaccesspolicy.resourceid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinition.resourceaccesspolicy.permission": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "synthetics.canary.runconfig.memoryinmb": {
            "Minimum": "960",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "3008",
            "UpdateRequires": "No interruption",
            "AllowedValues": "960...3008",
            "CompliantValues": "960...3008"
        },
        "synthetics.canary.runconfig.timeoutinseconds": {
            "Minimum": "60",
            "Required": "Yes",
            "Type": "Integer",
            "Maximum": "900",
            "UpdateRequires": "No interruption",
            "AllowedValues": "60...900",
            "CompliantValues": "60...900"
        },
        "ec2.launchtemplate.launchtemplatedata.metadataoptions.httpendpoint": {
            "Allowed values": "disabled | enabled",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.metadataoptions.httptokens": {
            "Allowed values": "optional | required",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.metadataoptions.httpputresponsehoplimit": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "glue.securityconfiguration.s3encryption.s3encryptionmode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.securityconfiguration.s3encryption.kmskeyarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.serversideencryptionbydefault.kmsmasterkeyid": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.serversideencryptionbydefault.ssealgorithm": {
            "Allowed values": "AES256 | aws:kms",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinition.defaultconfig.execution": {
            "Required": "Yes",
            "Type": "Execution",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.ratebasedstatementtwo.aggregatekeytype": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.ratebasedstatementtwo.scopedownstatement": {
            "Required": "No",
            "Type": "StatementThree",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.ratebasedstatementtwo.limit": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "s3.bucket.notificationconfig.lambdaconfig.function": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.notificationconfig.lambdaconfig.filter": {
            "Required": "No",
            "Type": "NotificationFilter",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.notificationconfig.lambdaconfig.event": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.cputhreshold": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.loadthreshold": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.instancecount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.ignoremetricstime": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.memorythreshold": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.thresholdswaittime": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "events.rule.ecsparameters.group": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.rule.ecsparameters.platformversion": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "events.rule.ecsparameters.launchtype": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "events.rule.ecsparameters.taskdefinitionarn": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1600",
            "CompliantValues": "1...1600"
        },
        "events.rule.ecsparameters.networkconfiguration": {
            "Required": "No",
            "Type": "NetworkConfiguration",
            "UpdateRequires": "No interruption"
        },
        "events.rule.ecsparameters.taskcount": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.ebs.volumeattachment.instanceid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ebs.volumeattachment.device": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ebs.volumeattachment.volumeid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.defaultcachebehavior.maxttl": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.defaultcachebehavior.targetoriginid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.defaultcachebehavior.forwardedvalues": {
            "Required": "Yes",
            "Type": "ForwardedValues",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.defaultcachebehavior.minttl": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.defaultcachebehavior.compress": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudfront.distribution.defaultcachebehavior.cachedmethods": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.defaultcachebehavior.viewerprotocolpolicy": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.defaultcachebehavior.smoothstreaming": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudfront.distribution.defaultcachebehavior.trustedsigners": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.defaultcachebehavior.allowedmethods": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.defaultcachebehavior.lambdafunctionassociations": {
            "Required": "No",
            "Type": [
                "LambdaFunctionAssociation"
            ],
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.defaultcachebehavior.fieldlevelencryptionid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.defaultcachebehavior.defaultttl": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.propertygroup.propertygroupid": {
            "Pattern": "[a-zA-Z0-9_.-]+",
            "Required": "No",
            "Maximum": "50",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...50",
            "CompliantValues": "1...50"
        },
        "kinesisanalyticsv2.application.propertygroup.propertymap": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "glue.crawler.targets.catalogtargets": {
            "Required": "No",
            "Type": [
                "CatalogTarget"
            ],
            "UpdateRequires": "No interruption"
        },
        "glue.crawler.targets.jdbctargets": {
            "Required": "No",
            "Type": [
                "JdbcTarget"
            ],
            "UpdateRequires": "No interruption"
        },
        "glue.crawler.targets.s3targets": {
            "Required": "No",
            "Type": [
                "S3Target"
            ],
            "UpdateRequires": "No interruption"
        },
        "glue.crawler.targets.dynamodbtargets": {
            "Required": "No",
            "Type": [
                "DynamoDBTarget"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticache.parameter.group.cacheparametergroupfamily": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticache.parameter.group.": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "elasticache.parameter.group.properties": {},
        "elasticache.parameter.group.description": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "msk.cluster.tls.certificateauthorityarnlist": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "cognito.userpool.userpooladdons.advancedsecuritymode": {
            "Allowed values": "AUDIT | ENFORCED | OFF",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.networkaclentry.portrange.from": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.networkaclentry.portrange.to": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "dlm.lifecyclepolicy.createrule.interval": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "dlm.lifecyclepolicy.createrule.cronexpression": {
            "Pattern": "cron\\([^\\n]{11,100}\\)",
            "Minimum": "17",
            "Required": "No",
            "Maximum": "106",
            "UpdateRequires": "No interruption",
            "AllowedValues": "17...106",
            "CompliantValues": "17...106"
        },
        "dlm.lifecyclepolicy.createrule.intervalunit": {
            "Allowed values": "HOURS",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dlm.lifecyclepolicy.createrule.times": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "1",
            "UpdateRequires": "No interruption"
        },
        "apigatewayv2.apigatewaymanagedoverrides.accesslogsettings.format": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.apigatewaymanagedoverrides.accesslogsettings.destinationarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.applicationsource.cloudformationstackarn": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.applicationsource.tagfilters": {
            "Required": "No",
            "Type": [
                "TagFilter"
            ],
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.onpremisestagsetlistobject.onpremisestaggroup": {
            "Required": "No",
            "Type": [
                "TagFilter"
            ],
            "UpdateRequires": "No interruption"
        },
        "ssm.patchbaseline.rule.enablenonsecurity": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ssm.patchbaseline.rule.approveafterdays": {
            "Minimum": "0",
            "Required": "Conditional",
            "Type": "Integer",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...100",
            "CompliantValues": "0...100"
        },
        "ssm.patchbaseline.rule.approveuntildate": {
            "Minimum": "1",
            "Required": "No",
            "Type": "PatchStringDate",
            "Maximum": "10",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...10",
            "CompliantValues": "1...10"
        },
        "ssm.patchbaseline.rule.patchfiltergroup": {
            "Required": "No",
            "Type": "PatchFilterGroup",
            "UpdateRequires": "No interruption"
        },
        "ssm.patchbaseline.rule.compliancelevel": {
            "Allowed values": "CRITICAL | HIGH | INFORMATIONAL | LOW | MEDIUM | UNSPECIFIED",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.eventdimensions.metrics": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "pinpoint.campaign.eventdimensions.attributes": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "pinpoint.campaign.eventdimensions.eventtype": {
            "Required": "No",
            "Type": "SetDimension",
            "UpdateRequires": "No interruption"
        },
        "sagemaker.model.vpcconfig.subnets": {
            "Required": "Yes",
            "Type": "List of String",
            "Maximum": "16",
            "UpdateRequires": "Replacement"
        },
        "sagemaker.model.vpcconfig.securitygroupids": {
            "Required": "Yes",
            "Type": "List of String",
            "Maximum": "5",
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinitionversion.function.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinitionversion.function.functionconfiguration": {
            "Required": "Yes",
            "Type": "FunctionConfiguration",
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinitionversion.function.functionarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "amazonmq.broker.configurationid.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.broker.configurationid.revision": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "glue.mltransform.transformparameters.findmatchesparameters.accuracycosttradeoff": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "glue.mltransform.transformparameters.findmatchesparameters.precisionrecalltradeoff": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "glue.mltransform.transformparameters.findmatchesparameters.enforceprovidedlabels": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.mltransform.transformparameters.findmatchesparameters.primarykeycolumnname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "robomaker.simulationapplication.sourceconfig.architecture": {
            "Allowed values": "ARM64 | ARMHF | X86_64",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "robomaker.simulationapplication.sourceconfig.s3bucket": {
            "Pattern": "[a-z0-9][a-z0-9.\\-]*[a-z0-9]",
            "Required": "Yes",
            "Maximum": "63",
            "UpdateRequires": "No interruption",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...63",
            "CompliantValues": "3...63"
        },
        "robomaker.simulationapplication.sourceconfig.s3key": {
            "Pattern": ".*",
            "Required": "Yes",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "resourcegroups.group.tagfilter.values": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "resourcegroups.group.tagfilter.key": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "sagemaker.model.containerdefinition.image": {
            "Pattern": "[\\S]+",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sagemaker.model.containerdefinition.containerhostname": {
            "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
            "Required": "No",
            "Type": "String",
            "Maximum": "63",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sagemaker.model.containerdefinition.environment": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "Replacement",
            "SampleValue": {
                "todo": "json"
            }
        },
        "sagemaker.model.containerdefinition.mode": {
            "Allowed values": "MultiModel | SingleModel",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sagemaker.model.containerdefinition.modeldataurl": {
            "Pattern": "^(https|s3)://([^/]+)/?(.*)$",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "Replacement"
        },
        "s3.bucket.replicationconfiguration.rules.status": {
            "Allowed values": "Disabled | Enabled",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.replicationconfiguration.rules.id": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.replicationconfiguration.rules.destination": {
            "Required": "Yes",
            "Type": "ReplicationDestination",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.rules.filter": {
            "Required": "No",
            "Type": "ReplicationRuleFilter",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.rules.deletemarkerreplication": {
            "Required": "No",
            "Type": "DeleteMarkerReplication",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.rules.prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.replicationconfiguration.rules.sourceselectioncriteria": {
            "Required": "No",
            "Type": "SourceSelectionCriteria",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.rules.priority": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "opsworks.app.datasource.type": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.app.datasource.databasename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.app.datasource.arn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.metricdimension.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.metricdimension.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.configuration.tagsentry.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.configuration.tagsentry.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.customactiontype.artifactdetails.maximumcount": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "Integer",
            "Maximum": "5",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...5",
            "CompliantValues": "0...5"
        },
        "codepipeline.customactiontype.artifactdetails.minimumcount": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "Integer",
            "Maximum": "5",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...5",
            "CompliantValues": "0...5"
        },
        "kinesisanalyticsv2.application.applicationconfiguration.flinkapplicationconfiguration": {
            "Required": "No",
            "Type": "FlinkApplicationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.applicationconfiguration.environmentproperties": {
            "Required": "No",
            "Type": "EnvironmentProperties",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.applicationconfiguration.applicationcodeconfiguration": {
            "Required": "Conditional",
            "Type": "ApplicationCodeConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.applicationconfiguration.sqlapplicationconfiguration": {
            "Required": "No",
            "Type": "SqlApplicationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.applicationconfiguration.applicationsnapshotconfiguration": {
            "Required": "No",
            "Type": "ApplicationSnapshotConfiguration",
            "UpdateRequires": "No interruption"
        },
        "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.sizeingb": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.iops": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.volumetype": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.assetpropertyvalue.value": {
            "Required": "Yes",
            "Type": "AssetPropertyVariant",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.assetpropertyvalue.quality": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.assetpropertyvalue.timestamp": {
            "Required": "Yes",
            "Type": "AssetPropertyTimestamp",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.grpctimeout.perrequest": {
            "Required": "No",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.grpctimeout.idle": {
            "Required": "No",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "config.remediationconfiguration.resourcevalue.value": {
            "Allowed values": "RESOURCE_ID",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.patchbaseline.patchfiltergroup.patchfilters": {
            "Required": "No",
            "Type": [
                "PatchFilter"
            ],
            "Maximum": "4",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.transitionevent.actions": {
            "Required": "No",
            "Type": [
                "Action"
            ],
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.transitionevent.nextstate": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotevents.detectormodel.transitionevent.condition": {
            "Required": "No",
            "Type": "String",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.transitionevent.eventname": {
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancefleetconfig.volumespecification.iops": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "elasticmapreduce.instancefleetconfig.volumespecification.volumetype": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancefleetconfig.volumespecification.sizeingb": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "cognito.userpool.passwordpolicy.requireuppercase": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cognito.userpool.passwordpolicy.requiresymbols": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cognito.userpool.passwordpolicy.temporarypasswordvaliditydays": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "365",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...365",
            "CompliantValues": "0...365"
        },
        "cognito.userpool.passwordpolicy.requirenumbers": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cognito.userpool.passwordpolicy.minimumlength": {
            "Minimum": "6",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "99",
            "UpdateRequires": "No interruption",
            "AllowedValues": "6...99",
            "CompliantValues": "6...99"
        },
        "cognito.userpool.passwordpolicy.requirelowercase": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticloadbalancingv2.listener.fixedresponseconfig.statuscode": {
            "Pattern": "^(2|4|5)\\d\\d$",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.fixedresponseconfig.messagebody": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...1024",
            "CompliantValues": "0...1024"
        },
        "elasticloadbalancingv2.listener.fixedresponseconfig.contenttype": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...32",
            "CompliantValues": "0...32"
        },
        "ec2.launchtemplate.blockdevicemapping.ebs.kmskeyid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.blockdevicemapping.ebs.volumesize": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.launchtemplate.blockdevicemapping.ebs.snapshotid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.blockdevicemapping.ebs.deleteontermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.launchtemplate.blockdevicemapping.ebs.volumetype": {
            "Allowed values": "gp2 | io1 | sc1 | st1 | standard",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.blockdevicemapping.ebs.encrypted": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.launchtemplate.blockdevicemapping.ebs.iops": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.s3originconfig.originaccessidentity": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.predefinedscalingmetricspecification.resourcelabel": {
            "Minimum": "1",
            "Required": "Conditional",
            "Type": "String",
            "Maximum": "1023",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1023",
            "CompliantValues": "1...1023"
        },
        "autoscalingplans.scalingplan.predefinedscalingmetricspecification.predefinedscalingmetrictype": {
            "Allowed values": "ALBRequestCountPerTarget | ASGAverageCPUUtilization | ASGAverageNetworkIn | ASGAverageNetworkOut | DynamoDBReadCapacityUtilization | DynamoDBWriteCapacityUtilization | EC2SpotFleetRequestAverageCPUUtilization | EC2SpotFleetRequestAverageNetworkIn | EC2SpotFleetRequestAverageNetworkOut | ECSServiceAverageCPUUtilization | ECSServiceAverageMemoryUtilization | RDSReaderAverageCPUUtilization | RDSReaderAverageDatabaseConnections",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpool.lambdaconfig.presignup": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.lambdaconfig.preauthentication": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.lambdaconfig.custommessage": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.lambdaconfig.usermigration": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.lambdaconfig.postconfirmation": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.lambdaconfig.postauthentication": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.lambdaconfig.defineauthchallenge": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.lambdaconfig.pretokengeneration": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.lambdaconfig.verifyauthchallengeresponse": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.lambdaconfig.createauthchallenge": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "budgets.budget.subscriber.subscriptiontype": {
            "Allowed values": "EMAIL | SNS",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "budgets.budget.subscriber.address": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "macie.findingsfilter.findingcriteria.criterion": {
            "Required": "No",
            "Type": "Criterion",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.fastrestorerule.intervalunit": {
            "Allowed values": "DAYS | MONTHS | WEEKS | YEARS",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dlm.lifecyclepolicy.fastrestorerule.interval": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "dlm.lifecyclepolicy.fastrestorerule.availabilityzones": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "10",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.fastrestorerule.count": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "1000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1000",
            "CompliantValues": "1...1000"
        },
        "robomaker.robotapplication.robotsoftwaresuite.version": {
            "Allowed values": "Dashing | Kinetic | Melodic",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "robomaker.robotapplication.robotsoftwaresuite.name": {
            "Allowed values": "ROS | ROS2",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.taglist.taglist": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-webacl-taglist-properties": {
            "TagList": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "transfer.user.homedirectorymapentry.entry": {
            "Pattern": "^/.*",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "transfer.user.homedirectorymapentry.target": {
            "Pattern": "^/.*",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.vpnconnection.vpntunneloptionsspecification.presharedkey": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.vpnconnection.vpntunneloptionsspecification.tunnelinsidecidr": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "wafv2-rulegroup-rules-properties": {
            "Rules": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "wafv2.rulegroup.rules.rules": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.placement": {
            "Required": "No",
            "Type": "PlacementType",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.hadoopversion": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.coreinstancefleet": {
            "Required": "No",
            "Type": "InstanceFleetConfig",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.masterinstancefleet": {
            "Required": "No",
            "Type": "InstanceFleetConfig",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.coreinstancegroup": {
            "Required": "No",
            "Type": "InstanceGroupConfig",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.emrmanagedslavesecuritygroup": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.terminationprotected": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.additionalmastersecuritygroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.emrmanagedmastersecuritygroup": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.serviceaccesssecuritygroup": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.ec2subnetid": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.masterinstancegroup": {
            "Required": "No",
            "Type": "InstanceGroupConfig",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.ec2keyname": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.additionalslavesecuritygroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.keepjobflowalivewhennosteps": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticmapreduce.cluster.jobflowinstancesconfig.ec2subnetids": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "kinesisfirehose.deliverystream.orcserde.enablepadding": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "kinesisfirehose.deliverystream.orcserde.bloomfiltercolumns": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.orcserde.dictionarykeythreshold": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "kinesisfirehose.deliverystream.orcserde.paddingtolerance": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "kinesisfirehose.deliverystream.orcserde.rowindexstride": {
            "Minimum": "1000",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisfirehose.deliverystream.orcserde.stripesizebytes": {
            "Minimum": "8388608",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisfirehose.deliverystream.orcserde.bloomfilterfalsepositiveprobability": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "kinesisfirehose.deliverystream.orcserde.formatversion": {
            "Allowed values": "V0_11 | V0_12",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.orcserde.blocksizebytes": {
            "Minimum": "67108864",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisfirehose.deliverystream.orcserde.compression": {
            "Allowed values": "NONE | SNAPPY | ZLIB",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.visibilityconfig.cloudwatchmetricsenabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "wafv2.webacl.visibilityconfig.sampledrequestsenabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "wafv2.webacl.visibilityconfig.metricname": {
            "Pattern": "^[\\w#:\\.\\-/]+$",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "msk.cluster.storageinfo.ebsstorageinfo": {
            "Required": "No",
            "Type": "EBSStorageInfo",
            "UpdateRequires": "Replacement"
        },
        "route53.hostedzone.hostedzonetags.value": {
            "UpdateRequires": "No interruption",
            "Required": "Yes",
            "Type": "String",
            "Value`  <a name=\"cfn-route53-hostedzonetags-value\"></a>\nThe value of `Value` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Value` is the value that you want to give the new tag\\.\n+  **Edit a tag*",
            "Maximum": "256",
            "SampleValue": "example-string"
        },
        "route53.hostedzone.hostedzonetags.key": {
            "UpdateRequires": "No interruption",
            "Required": "Yes",
            "Type": "String",
            "Key`  <a name=\"cfn-route53-hostedzonetags-key\"></a>\nThe value of `Key` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Key` is the name that you want to give the new tag\\.\n+  **Edit a tag*",
            "Maximum": "128",
            "SampleValue": "example-string"
        },
        "events.rule.runcommandtarget.key": {
            "Pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*$",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "events.rule.runcommandtarget.values": {
            "Required": "Yes",
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "dynamodb.lsi.projection": {
            "Required": "Yes",
            "Type": "Projection",
            "UpdateRequires": "No interruption"
        },
        "dynamodb.lsi.indexname": {
            "Pattern": "[a-zA-Z0-9_.-]+",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...255",
            "CompliantValues": "3...255"
        },
        "dynamodb.lsi.keyschema": {
            "Required": "Yes",
            "Maximum": "2",
            "UpdateRequires": "No interruption"
        },
        "qldb.stream.kinesisconfiguration.aggregationenabled": {
            "Required": "No",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "qldb.stream.kinesisconfiguration.streamarn": {
            "Minimum": "20",
            "Required": "No",
            "Type": "String",
            "Maximum": "1600",
            "UpdateRequires": "Replacement",
            "AllowedValues": "20...1600",
            "CompliantValues": "20...1600"
        },
        "directoryservice.microsoftad.vpcsettings.subnetids": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "directoryservice.microsoftad.vpcsettings.vpcid": {
            "Pattern": "^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.fleet.serverprocess.concurrentexecutions": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "gamelift.fleet.serverprocess.launchpath": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "gamelift.fleet.serverprocess.parameters": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "appmesh.route.httprouteheader.invert": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "appmesh.route.httprouteheader.match": {
            "Required": "No",
            "Type": "HeaderMatchMethod",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.httprouteheader.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.configurationseteventdestination.kinesisfirehosedestination.deliverystreamarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.configurationseteventdestination.kinesisfirehosedestination.iamrolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinition.resourcedownloadownersetting.groupowner": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinition.resourcedownloadownersetting.grouppermission": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "autoscaling.scalingpolicy.stepadjustments.scalingadjustment": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "autoscaling.scalingpolicy.stepadjustments.metricintervalupperbound": {
            "Required": "Conditional",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "autoscaling.scalingpolicy.stepadjustments.metricintervallowerbound": {
            "Required": "Conditional",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.monitoring.enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "lakeformation.permissions.tablewithcolumnsresource.columnnames": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "lakeformation.permissions.tablewithcolumnsresource.columnwildcard": {
            "Required": "No",
            "Type": "ColumnWildcard",
            "UpdateRequires": "No interruption"
        },
        "lakeformation.permissions.tablewithcolumnsresource.databasename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "lakeformation.permissions.tablewithcolumnsresource.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypoolroleattachment.rulesconfigurationtype.rules": {
            "Required": "Yes",
            "Type": [
                "MappingRule"
            ],
            "UpdateRequires": "No interruption"
        },
        "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.iops": {
            "Minimum": "100",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "10000",
            "UpdateRequires": "Replacement",
            "AllowedValues": "100...10000",
            "CompliantValues": "100...10000"
        },
        "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.volumesize": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "16000",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...16000",
            "CompliantValues": "1...16000"
        },
        "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.snapshotid": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.encrypted": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.kmskeyid": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.deleteontermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.volumetype": {
            "Allowed values": "gp2 | io1 | sc1 | st1 | standard",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "apitgateway.method.integration.integrationresponse.statuscode": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apitgateway.method.integration.integrationresponse.responseparameters": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.integration.integrationresponse.responsetemplates": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.integration.integrationresponse.contenthandling": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apitgateway.method.integration.integrationresponse.selectionpattern": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.httpheaderconfig.httpheadername": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.httpheaderconfig.values": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.volumespecification.sizeingb": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.volumespecification.volumetype": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.volumespecification.iops": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appsync.datasource.elasticsearchconfig.awsregion": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.elasticsearchconfig.endpoint": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.openidconnectconfig.iatttl": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "appsync.graphqlapi.openidconnectconfig.issuer": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.openidconnectconfig.authttl": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "appsync.graphqlapi.openidconnectconfig.clientid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.association.parametervalues.parametervalues": {
            "Required": "Yes",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "glue.classifier.csvclassifier.quotesymbol": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.classifier.csvclassifier.header": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.classifier.csvclassifier.delimiter": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.classifier.csvclassifier.allowsinglecolumn": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.classifier.csvclassifier.containsheader": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.classifier.csvclassifier.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "glue.classifier.csvclassifier.disablevaluetrimming": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codecommit.repository.repositorytrigger.customdata": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codecommit.repository.repositorytrigger.events": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "codecommit.repository.repositorytrigger.destinationarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codecommit.repository.repositorytrigger.branches": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "codecommit.repository.repositorytrigger.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.redirectconfig.protocol": {
            "Pattern": "^(HTTPS?|#\\{protocol\\})$",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.redirectconfig.port": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.redirectconfig.host": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "elasticloadbalancingv2.listenerrule.redirectconfig.query": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...128",
            "CompliantValues": "0...128"
        },
        "elasticloadbalancingv2.listenerrule.redirectconfig.statuscode": {
            "Allowed values": "HTTP_301 | HTTP_302",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.redirectconfig.path": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "cloudwatch.anomalydetector.dimension.name": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cloudwatch.anomalydetector.dimension.value": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "wafv2.ipset.taglist.taglist": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-ipset-taglist-properties": {
            "TagList": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "wafv2.rulegroup.statementthree.regexpatternsetreferencestatement": {
            "Required": "No",
            "Type": "RegexPatternSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementthree.bytematchstatement": {
            "Required": "No",
            "Type": "ByteMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementthree.xssmatchstatement": {
            "Required": "No",
            "Type": "XssMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementthree.ipsetreferencestatement": {
            "Required": "No",
            "Type": "IPSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementthree.sqlimatchstatement": {
            "Required": "No",
            "Type": "SqliMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementthree.sizeconstraintstatement": {
            "Required": "No",
            "Type": "SizeConstraintStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementthree.geomatchstatement": {
            "Required": "No",
            "Type": "GeoMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpooldomain.customdomainconfigtype.certificatearn": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.smsconfiguration.snscallerarn": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpool.smsconfiguration.externalid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.replicationruleandoperator.prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.replicationruleandoperator.tagfilters": {
            "Required": "No",
            "Type": [
                "TagFilter"
            ],
            "UpdateRequires": "No interruption"
        },
        "lakeformation.permissions.columnwildcard.excludedcolumnnames": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.dataformatconversionconfiguration.inputformatconfiguration": {
            "Required": "No",
            "Type": "InputFormatConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.dataformatconversionconfiguration.schemaconfiguration": {
            "Required": "No",
            "Type": "SchemaConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.dataformatconversionconfiguration.outputformatconfiguration": {
            "Required": "No",
            "Type": "OutputFormatConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.dataformatconversionconfiguration.enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "lakeformation.permissions.resource.databaseresource": {
            "Required": "No",
            "Type": "DatabaseResource",
            "UpdateRequires": "No interruption"
        },
        "lakeformation.permissions.resource.datalocationresource": {
            "Required": "No",
            "Type": "DataLocationResource",
            "UpdateRequires": "No interruption"
        },
        "lakeformation.permissions.resource.tableresource": {
            "Required": "No",
            "Type": "TableResource",
            "UpdateRequires": "No interruption"
        },
        "lakeformation.permissions.resource.tablewithcolumnsresource": {
            "Required": "No",
            "Type": "TableWithColumnsResource",
            "UpdateRequires": "No interruption"
        },
        "amazonmq.broker.user.username": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.broker.user.password": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.broker.user.consoleaccess": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "amazonmq.broker.user.groups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "wafregional.xssmatchset.xssmatchtuple.fieldtomatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafregional.xssmatchset.xssmatchtuple.texttransformation": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.availabilityzone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.groupname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.tenancy": {
            "Allowed values": "dedicated | default | host",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.redirectconfig.path": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "elasticloadbalancingv2.listener.redirectconfig.statuscode": {
            "Allowed values": "HTTP_301 | HTTP_302",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.redirectconfig.port": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.redirectconfig.query": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...128",
            "CompliantValues": "0...128"
        },
        "elasticloadbalancingv2.listener.redirectconfig.protocol": {
            "Pattern": "^(HTTPS?|#\\{protocol\\})$",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.redirectconfig.host": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "msk.cluster.encryptionatrest.datavolumekmskeyid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "codestar.githubrepository.code.s3": {
            "Required": "Yes",
            "Type": "S3",
            "UpdateRequires": "Updates are not supported\\."
        },
        "s3.websiteconfiguration.redirectallrequeststo.hostname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.websiteconfiguration.redirectallrequeststo.protocol": {
            "Allowed values": "http | https",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.stages.blockers.name": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "codepipeline.pipeline.stages.blockers.type": {
            "Allowed values": "Schedule",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.tablename": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.s3referencedatasource": {
            "Required": "No",
            "Type": "S3ReferenceDataSource",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.referenceschema": {
            "Required": "Yes",
            "Type": "ReferenceSchema",
            "UpdateRequires": "No interruption"
        },
        "rds.security.group.rule.ec2securitygroupid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "rds.security.group.rule.ec2securitygroupownerid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "rds.security.group.rule.cidrip": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.security.group.rule.ec2securitygroupname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.logconfiguration.logdriver": {
            "Required": "Yes",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.logconfiguration.secretoptions": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.logconfiguration.options": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.licensespecification.licenseconfigurationarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.statementone.notstatement": {
            "Required": "No",
            "Type": "NotStatementOne",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.sqlimatchstatement": {
            "Required": "No",
            "Type": "SqliMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.sizeconstraintstatement": {
            "Required": "No",
            "Type": "SizeConstraintStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.xssmatchstatement": {
            "Required": "No",
            "Type": "XssMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.bytematchstatement": {
            "Required": "No",
            "Type": "ByteMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.regexpatternsetreferencestatement": {
            "Required": "No",
            "Type": "RegexPatternSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.rulegroupreferencestatement": {
            "Required": "No",
            "Type": "RuleGroupReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.geomatchstatement": {
            "Required": "No",
            "Type": "GeoMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.ipsetreferencestatement": {
            "Required": "No",
            "Type": "IPSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.managedrulegroupstatement": {
            "Required": "No",
            "Type": "ManagedRuleGroupStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.orstatement": {
            "Required": "No",
            "Type": "OrStatementOne",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.andstatement": {
            "Required": "No",
            "Type": "AndStatementOne",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.statementone.ratebasedstatement": {
            "Required": "No",
            "Type": "RateBasedStatementOne",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.recordcolumn.mapping": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.application.recordcolumn.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.application.recordcolumn.sqltype": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iam.policy.1.policyname": {
            "Pattern": "[\\w+=,.@-]+",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iam.policy.1.policydocument": {
            "Pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
            "Required": "Yes",
            "Maximum": "131072",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "Json",
            "AllowedValues": "1...131072",
            "CompliantValues": "1...131072"
        },
        "ec2.mount.point.volumeid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.mount.point.device": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.route.parameterconstraints.required": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "backup.backupplan.backupplanresourcetype.backupplanname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "backup.backupplan.backupplanresourcetype.backupplanrule": {
            "Required": "Yes",
            "Type": [
                "BackupRuleResourceType"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.metricsconfiguration.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.metricsconfiguration.prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.metricsconfiguration.tagfilters": {
            "Required": "No",
            "Type": [
                "TagFilter"
            ],
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationoutput.kinesisstreamsoutput.rolearn": {
            "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisanalytics.applicationoutput.kinesisstreamsoutput.resourcearn": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "batch.jobdefinition.retrystrategy.attempts": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "iotevents.detectormodel.dynamodb.rangekeyfield": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.dynamodb.payloadfield": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.dynamodb.hashkeyfield": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.dynamodb.operation": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.dynamodb.rangekeyvalue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.dynamodb.rangekeytype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.dynamodb.hashkeyvalue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.dynamodb.payload": {
            "Required": "No",
            "Type": "Payload",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.dynamodb.tablename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.dynamodb.hashkeytype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.domainname.endpointconfiguration.types": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "apigateway.documentationpart.location.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "apigateway.documentationpart.location.path": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "apigateway.documentationpart.location.statuscode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "apigateway.documentationpart.location.type": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "apigateway.documentationpart.location.method": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "autoscaling.autoscalinggroup.mixedinstancespolicy.instancesdistribution": {
            "Required": "No",
            "Type": "InstancesDistribution",
            "UpdateRequires": "No interruption"
        },
        "autoscaling.autoscalinggroup.mixedinstancespolicy.launchtemplate": {
            "Required": "Yes",
            "Type": "LaunchTemplate",
            "UpdateRequires": "No interruption"
        },
        "amplify.domain.subdomainsetting.prefix": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amplify.domain.subdomainsetting.branchname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.scalingpolicy.customizedmetricspecification.namespace": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.scalingpolicy.customizedmetricspecification.dimensions": {
            "Required": "No",
            "Type": [
                "MetricDimension"
            ],
            "UpdateRequires": "No interruption"
        },
        "autoscaling.scalingpolicy.customizedmetricspecification.metricname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.scalingpolicy.customizedmetricspecification.statistic": {
            "Allowed values": "Average | Maximum | Minimum | SampleCount | Sum",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.scalingpolicy.customizedmetricspecification.unit": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpool.invitemessagetemplate.emailsubject": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
            "Required": "No",
            "Maximum": "140",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...140",
            "CompliantValues": "1...140"
        },
        "cognito.userpool.invitemessagetemplate.smsmessage": {
            "Pattern": ".*\\{####\\}.*",
            "Required": "No",
            "Maximum": "140",
            "UpdateRequires": "No interruption",
            "Minimum": "6",
            "Type": "String",
            "AllowedValues": "6...140",
            "CompliantValues": "6...140"
        },
        "cognito.userpool.invitemessagetemplate.emailmessage": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{####\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
            "Required": "No",
            "Maximum": "20000",
            "UpdateRequires": "No interruption",
            "Minimum": "6",
            "Type": "String",
            "AllowedValues": "6...20000",
            "CompliantValues": "6...20000"
        },
        "elasticmapreduce.cluster.configuration.classification": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.configuration.configurationproperties": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.configuration.configurations": {
            "Required": "No",
            "Type": [
                "Configuration"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.comparisonoperator": {
            "Allowed values": "GREATER_THAN | GREATER_THAN_OR_EQUAL | LESS_THAN | LESS_THAN_OR_EQUAL",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.metricname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.statistic": {
            "Allowed values": "AVERAGE | MAXIMUM | MINIMUM | SAMPLE_COUNT | SUM",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.period": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.namespace": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.threshold": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.evaluationperiods": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.unit": {
            "Allowed values": "BITS | BITS_PER_SECOND | BYTES | BYTES_PER_SECOND | COUNT | COUNT_PER_SECOND | GIGA_BITS | GIGA_BITS_PER_SECOND | GIGA_BYTES | GIGA_BYTES_PER_SECOND | KILO_BITS | KILO_BITS_PER_SECOND | KILO_BYTES | KILO_BYTES_PER_SECOND | MEGA_BITS | MEGA_BITS_PER_SECOND | MEGA_BYTES | MEGA_BYTES_PER_SECOND | MICRO_SECONDS | MILLI_SECONDS | NONE | PERCENT | SECONDS | TERA_BITS | TERA_BITS_PER_SECOND | TERA_BYTES | TERA_BYTES_PER_SECOND",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.dimensions": {
            "Required": "No",
            "Type": [
                "MetricDimension"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.objectlockenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.lifecycleconfiguration": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.versioningconfiguration": {
            "Required": "No",
            "Type": "VersioningConfiguration",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.notificationconfiguration": {
            "Required": "No",
            "Type": "NotificationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.objectlockconfiguration": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.analyticsconfigurations": {
            "Required": "No",
            "Type": [
                "AnalyticsConfiguration"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.accelerateconfiguration": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.bucketname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "s3.bucket.corsconfiguration": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.publicaccessblockconfiguration": {
            "Required": "No",
            "Type": "PublicAccessBlockConfiguration",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.metricsconfigurations": {
            "Required": "No",
            "Type": [
                "MetricsConfiguration"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.loggingconfiguration": {
            "Required": "No",
            "Type": "LoggingConfiguration",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.accesscontrol": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.bucketencryption": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.inventoryconfigurations": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.websiteconfiguration": {
            "Required": "No",
            "Type": "WebsiteConfiguration",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration": {
            "Required": "No",
            "Type": "ReplicationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listener.certificates.1.certificatearn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.coredefinition.core.syncshadow": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "greengrass.coredefinition.core.certificatearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.coredefinition.core.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.coredefinition.core.thingarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "gamelift.gamesessionqueue.playerlatencypolicy.policydurationseconds": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "gamelift.gamesessionqueue.playerlatencypolicy.maximumindividualplayerlatencymilliseconds": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apigatewayv2.apigatewaymanagedoverrides.routesettings.throttlingburstlimit": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apigatewayv2.apigatewaymanagedoverrides.routesettings.datatraceenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigatewayv2.apigatewaymanagedoverrides.routesettings.throttlingratelimit": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "apigatewayv2.apigatewaymanagedoverrides.routesettings.detailedmetricsenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigatewayv2.apigatewaymanagedoverrides.routesettings.logginglevel": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.instance.ebsblockdevice.volumesize": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "opsworks.instance.ebsblockdevice.deleteontermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "opsworks.instance.ebsblockdevice.volumetype": {
            "Allowed values": "gp2 | io1 | standard",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.instance.ebsblockdevice.iops": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "opsworks.instance.ebsblockdevice.snapshotid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.geomatchstatement.countrycodes": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "greengrass.functiondefinition.functionconfiguration.pinned": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "greengrass.functiondefinition.functionconfiguration.executable": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinition.functionconfiguration.execargs": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinition.functionconfiguration.encodingtype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinition.functionconfiguration.memorysize": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "greengrass.functiondefinition.functionconfiguration.environment": {
            "Required": "No",
            "Type": "Environment",
            "UpdateRequires": "Replacement"
        },
        "greengrass.functiondefinition.functionconfiguration.timeout": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "imagebuilder.imagerecipe.componentconfiguration.componentarn": {
            "Pattern": "^arn:aws[^:]*:imagebuilder:[^:]+:(?:\\d{12}|aws):component/[a-z0-9-_]+/(?:(?:(\\d+|x)\\.(\\d+|x)\\.(\\d+|x))|(?:\\d+\\.\\d+\\.\\d+/\\d+))$",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "s3.bucket.replicationtime.time": {
            "Required": "Yes",
            "Type": "ReplicationTimeValue",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationtime.status": {
            "Allowed values": "Disabled | Enabled",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.defaultactions.targetgrouparn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.defaultactions.fixedresponseconfig": {
            "Required": "No",
            "Type": "FixedResponseConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listener.defaultactions.forwardconfig": {
            "Required": "No",
            "Type": "ForwardConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listener.defaultactions.authenticatecognitoconfig": {
            "Required": "No",
            "Type": "AuthenticateCognitoConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listener.defaultactions.authenticateoidcconfig": {
            "Required": "No",
            "Type": "AuthenticateOidcConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listener.defaultactions.type": {
            "Allowed values": "authenticate-cognito | authenticate-oidc | fixed-response | forward | redirect",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.defaultactions.order": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "50000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...50000",
            "CompliantValues": "1...50000"
        },
        "elasticloadbalancingv2.listener.defaultactions.redirectconfig": {
            "Required": "No",
            "Type": "RedirectConfig",
            "UpdateRequires": "No interruption"
        },
        "cloudwatch.anomalydetector.range.endtime": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudwatch.anomalydetector.range.starttime": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "stepfunctions.statemachine.logdestination.cloudwatchlogsloggroup": {
            "Required": "No",
            "Type": "CloudWatchLogsLogGroup",
            "UpdateRequires": "No interruption"
        },
        "s3.websiteconfiguration.routingrules": {
            "Required": "No",
            "Type": [
                "RoutingRule"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.websiteconfiguration.redirectallrequeststo": {
            "Required": "No",
            "Type": "RedirectAllRequestsTo",
            "UpdateRequires": "No interruption"
        },
        "s3.websiteconfiguration.errordocument": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.websiteconfiguration.indexdocument": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.listenertimeout.grpc": {
            "Required": "No",
            "Type": "GrpcTimeout",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.listenertimeout.http": {
            "Required": "No",
            "Type": "HttpTimeout",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.listenertimeout.tcp": {
            "Required": "No",
            "Type": "TcpTimeout",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.listenertimeout.http2": {
            "Required": "No",
            "Type": "HttpTimeout",
            "UpdateRequires": "No interruption"
        },
        "athena.datacatalog.tags.tags": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "appconfig.environment.monitors.alarmrolearn": {
            "Pattern": "^((arn):(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):(iam)::\\d{12}:role[/].*)$",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "appconfig.environment.monitors.alarmarn": {
            "Pattern": "arn:(aws[a-zA-Z-]*)?:[a-z]+:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1})?:(\\d{12})?:[a-zA-Z0-9-_/:.]+",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "greengrass.coredefinition.coredefinitionversion.cores": {
            "Required": "Yes",
            "Type": [
                "Core"
            ],
            "UpdateRequires": "Replacement"
        },
        "ses.receiptrule.addheaderaction.headername": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.addheaderaction.headervalue": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ask.skill.authenticationconfiguration.clientid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ask.skill.authenticationconfiguration.refreshtoken": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ask.skill.authenticationconfiguration.clientsecret": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.fleet.computecapacity.desiredinstances": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "fms.policy.iemap.account": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "fms.policy.iemap.orgunit": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "budgets.budget.budgetdata.plannedbudgetlimits": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "Replacement",
            "SampleValue": {
                "todo": "json"
            }
        },
        "budgets.budget.budgetdata.costtypes": {
            "Required": "No",
            "Type": "CostTypes",
            "UpdateRequires": "No interruption"
        },
        "budgets.budget.budgetdata.timeunit": {
            "Allowed values": "ANNUALLY | DAILY | MONTHLY | QUARTERLY",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "budgets.budget.budgetdata.timeperiod": {
            "Required": "No",
            "Type": "TimePeriod",
            "UpdateRequires": "No interruption"
        },
        "budgets.budget.budgetdata.costfilters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "budgets.budget.budgetdata.budgetname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "budgets.budget.budgetdata.budgettype": {
            "Allowed values": "COST | RI_COVERAGE | RI_UTILIZATION | SAVINGS_PLANS_COVERAGE | SAVINGS_PLANS_UTILIZATION | USAGE",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "budgets.budget.budgetdata.budgetlimit": {
            "Required": "No",
            "Type": "Spend",
            "UpdateRequires": "No interruption"
        },
        "codepipeline.webhook.webhookauthconfiguration.allowediprange": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "codepipeline.webhook.webhookauthconfiguration.secrettoken": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "appmesh.virtualservice.virtualrouterserviceprovider.virtualroutername": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.coredefinitionversion.core.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.coredefinitionversion.core.syncshadow": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "greengrass.coredefinitionversion.core.certificatearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.coredefinitionversion.core.thingarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.servicediscovery.dns": {
            "Required": "No",
            "Type": "DnsServiceDiscovery",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.servicediscovery.awscloudmap": {
            "Required": "No",
            "Type": "AwsCloudMapServiceDiscovery",
            "UpdateRequires": "No interruption"
        },
        "stack.parameters": {
            "Required": "Conditional",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "stack.tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "stack.notificationarns": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "stack.templateurl": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "stack.timeoutinminutes": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appsync.datasource.awsiamconfig.signingservicename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.awsiamconfig.signingregion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.applicationoutput.kinesisfirehoseoutput.resourcearn": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "wafregional.ratebasedrule.predicate.dataid": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafregional.ratebasedrule.predicate.negated": {
            "Required": "Yes",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "wafregional.ratebasedrule.predicate.type": {
            "Allowed values": "ByteMatch | GeoMatch | IPMatch | RegexMatch | SizeConstraint | SqlInjectionMatch | XssMatch",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.accesscontroltranslation.owner": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "servicecatalog.cloudformationprovisionedproduct.provisioningparameter.key": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1000",
            "CompliantValues": "1...1000"
        },
        "servicecatalog.cloudformationprovisionedproduct.provisioningparameter.value": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "4096",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.cloudwatchmetricaction.metricname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.cloudwatchmetricaction.metricnamespace": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.cloudwatchmetricaction.metrictimestamp": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.cloudwatchmetricaction.metricunit": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.cloudwatchmetricaction.metricvalue": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.cloudwatchmetricaction.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.weightedtarget.weight": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.route.weightedtarget.virtualnode": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.dynamodbsettings.serviceaccessrolearn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "lakeformation.permissions.tableresource.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "lakeformation.permissions.tableresource.databasename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.group.groupversion.connectordefinitionversionarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.group.groupversion.devicedefinitionversionarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.group.groupversion.subscriptiondefinitionversionarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.group.groupversion.loggerdefinitionversionarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.group.groupversion.resourcedefinitionversionarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.group.groupversion.functiondefinitionversionarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.group.groupversion.coredefinitionversionarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "codebuild.project.environmentvariable.name": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.environmentvariable.type": {
            "Allowed values": "PARAMETER_STORE | PLAINTEXT | SECRETS_MANAGER",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.environmentvariable.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "config.configrule.scope.complianceresourceid": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "768",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...768",
            "CompliantValues": "1...768"
        },
        "config.configrule.scope.tagkey": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "config.configrule.scope.tagvalue": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "config.configrule.scope.complianceresourcetypes": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "100",
            "UpdateRequires": "No interruption"
        },
        "rds.dbinstance.dbinstancerole.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbinstance.dbinstancerole.featurename": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cassandra.table.billingmode.provisionedthroughput": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cassandra.table.billingmode.mode": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "apigateway.usageplan.throttlesettings.burstlimit": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apigateway.usageplan.throttlesettings.ratelimit": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.grpcroutematch.methodname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.grpcroutematch.servicename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.grpcroutematch.metadata": {
            "Required": "No",
            "Type": [
                "GrpcRouteMetadata"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.instance.launchtemplatespecification.launchtemplateid": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.instance.launchtemplatespecification.launchtemplatename": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.instance.launchtemplatespecification.version": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "transfer.server.endpointdetails.subnetids": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "transfer.server.endpointdetails.vpcid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "transfer.server.endpointdetails.addressallocationids": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Some interruptions"
        },
        "transfer.server.endpointdetails.vpcendpointid": {
            "Pattern": "^vpce-[0-9a-f]{17}$",
            "Required": "No",
            "Maximum": "22",
            "UpdateRequires": "No interruption",
            "Minimum": "22",
            "Type": "String",
            "AllowedValues": "22...22",
            "CompliantValues": "22...22"
        },
        "dlm.lifecyclepolicy.retainrule.intervalunit": {
            "Allowed values": "DAYS | MONTHS | WEEKS | YEARS",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dlm.lifecyclepolicy.retainrule.count": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "1000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1000",
            "CompliantValues": "1...1000"
        },
        "dlm.lifecyclepolicy.retainrule.interval": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "amplify.app.customrule.source": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amplify.app.customrule.status": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amplify.app.customrule.target": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amplify.app.customrule.condition": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.hlsinputsettings.bandwidth": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "medialive.channel.hlsinputsettings.retryinterval": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "medialive.channel.hlsinputsettings.retries": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "medialive.channel.hlsinputsettings.buffersegments": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "pinpointemail.configurationset.tags.key": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpointemail.configurationset.tags.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "fsx.filesystem.windowsconfiguration.copytagstobackups": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "fsx.filesystem.windowsconfiguration.deploymenttype": {
            "Allowed values": "MULTI_AZ_1 | SINGLE_AZ_1 | SINGLE_AZ_2",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "fsx.filesystem.windowsconfiguration.dailyautomaticbackupstarttime": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "fsx.filesystem.windowsconfiguration.weeklymaintenancestarttime": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "fsx.filesystem.windowsconfiguration.automaticbackupretentiondays": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "35",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...35",
            "CompliantValues": "0...35"
        },
        "fsx.filesystem.windowsconfiguration.preferredsubnetid": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "fsx.filesystem.windowsconfiguration.activedirectoryid": {
            "Pattern": "^d-[0-9a-f]{10}$",
            "Required": "No",
            "Maximum": "12",
            "UpdateRequires": "Replacement",
            "Minimum": "12",
            "Type": "String",
            "AllowedValues": "12...12",
            "CompliantValues": "12...12"
        },
        "fsx.filesystem.windowsconfiguration.throughputcapacity": {
            "Minimum": "8",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "8...2048",
            "CompliantValues": "8...2048"
        },
        "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration": {
            "Required": "No",
            "Type": "SelfManagedActiveDirectoryConfiguration",
            "UpdateRequires": "No interruption"
        },
        "wafv2-ipset-ipaddresses-properties": {
            "IPAddresses": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "wafv2.ipset.ipaddresses.ipaddresses": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.openxjsonserde.caseinsensitive": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "kinesisfirehose.deliverystream.openxjsonserde.columntojsonkeymappings": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.openxjsonserde.convertdotsinjsonkeystounderscores": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "greengrass.functiondefinitionversion.defaultconfig.execution": {
            "Required": "Yes",
            "Type": "Execution",
            "UpdateRequires": "No interruption"
        },
        "msk.cluster.s3.enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "msk.cluster.s3.prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "msk.cluster.s3.bucket": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.accesspoint.publicaccessblockconfiguration.blockpublicacls": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.accesspoint.publicaccessblockconfiguration.restrictpublicbuckets": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.accesspoint.publicaccessblockconfiguration.blockpublicpolicy": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.accesspoint.publicaccessblockconfiguration.ignorepublicacls": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "config.remediationconfiguration.executioncontrols.ssmcontrols": {
            "Required": "No",
            "Type": "SsmControls",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationoutput.destinationschema.recordformattype": {
            "Allowed values": "CSV | JSON",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.iotanalyticsaction.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.iotanalyticsaction.channelname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbproxy.tagformat.key": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.dbproxy.tagformat.value": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.xssmatchstatement.texttransformations": {
            "Required": "Yes",
            "Type": [
                "TextTransformation"
            ],
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.xssmatchstatement.fieldtomatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.ssekmsencryptedobjects.status": {
            "Allowed values": "Disabled | Enabled",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.glueconfiguration.tablename": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*",
            "Required": "Yes",
            "Maximum": "150",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...150",
            "CompliantValues": "1...150"
        },
        "iotanalytics.dataset.glueconfiguration.databasename": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*",
            "Required": "Yes",
            "Maximum": "150",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...150",
            "CompliantValues": "1...150"
        },
        "wafv2.rulegroup.notstatementone.statement": {
            "Required": "Yes",
            "Type": "StatementTwo",
            "UpdateRequires": "No interruption"
        },
        "ec2.prefixlist.entry.description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.prefixlist.entry.cidr": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "servicediscovery.service.dnsconfig.routingpolicy": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "servicediscovery.service.dnsconfig.dnsrecords": {
            "Required": "Yes",
            "Type": [
                "DnsRecord"
            ],
            "UpdateRequires": "No interruption"
        },
        "servicediscovery.service.dnsconfig.namespaceid": {
            "Required": "No",
            "Type": "String",
            "Maximum": "64",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "pinpointemail.configurationseteventdestination.kinesisfirehosedestination.iamrolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpointemail.configurationseteventdestination.kinesisfirehosedestination.deliverystreamarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.fleet.runtimeconfiguration.maxconcurrentgamesessionactivations": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "2147483647",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2147483647",
            "CompliantValues": "1...2147483647"
        },
        "gamelift.fleet.runtimeconfiguration.gamesessionactivationtimeoutseconds": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "600",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...600",
            "CompliantValues": "1...600"
        },
        "gamelift.fleet.runtimeconfiguration.serverprocesses": {
            "Required": "No",
            "Type": [
                "ServerProcess"
            ],
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "apigatewayv2.stage.routesettings.throttlingburstlimit": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apigatewayv2.stage.routesettings.detailedmetricsenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigatewayv2.stage.routesettings.logginglevel": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.stage.routesettings.datatraceenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigatewayv2.stage.routesettings.throttlingratelimit": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "appstream.stack.storageconnector.resourceidentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.stack.storageconnector.domains": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "10",
            "UpdateRequires": "No interruption"
        },
        "appstream.stack.storageconnector.connectortype": {
            "Allowed values": "GOOGLE_DRIVE | HOMEFOLDERS | ONE_DRIVE",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancefleetconfig.ebsconfiguration.ebsoptimized": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticmapreduce.instancefleetconfig.ebsconfiguration.ebsblockdeviceconfigs": {
            "Required": "No",
            "Type": [
                "EbsBlockDeviceConfig"
            ],
            "UpdateRequires": "Replacement"
        },
        "pinpointemail.configurationseteventdestination.eventdestination.kinesisfirehosedestination": {
            "Required": "No",
            "Type": "KinesisFirehoseDestination",
            "UpdateRequires": "No interruption"
        },
        "pinpointemail.configurationseteventdestination.eventdestination.snsdestination": {
            "Required": "No",
            "Type": "SnsDestination",
            "UpdateRequires": "No interruption"
        },
        "pinpointemail.configurationseteventdestination.eventdestination.matchingeventtypes": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "pinpointemail.configurationseteventdestination.eventdestination.cloudwatchdestination": {
            "Required": "No",
            "Type": "CloudWatchDestination",
            "UpdateRequires": "No interruption"
        },
        "pinpointemail.configurationseteventdestination.eventdestination.pinpointdestination": {
            "Required": "No",
            "Type": "PinpointDestination",
            "UpdateRequires": "No interruption"
        },
        "pinpointemail.configurationseteventdestination.eventdestination.enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.table.column.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.column.type": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.column.comment": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.messageconfiguration.smsmessage": {
            "Required": "No",
            "Type": "CampaignSmsMessage",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.messageconfiguration.admmessage": {
            "Required": "No",
            "Type": "Message",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.messageconfiguration.gcmmessage": {
            "Required": "No",
            "Type": "Message",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.messageconfiguration.baidumessage": {
            "Required": "No",
            "Type": "Message",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.messageconfiguration.emailmessage": {
            "Required": "No",
            "Type": "CampaignEmailMessage",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.messageconfiguration.apnsmessage": {
            "Required": "No",
            "Type": "Message",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.messageconfiguration.defaultmessage": {
            "Required": "No",
            "Type": "Message",
            "UpdateRequires": "No interruption"
        },
        "groundstation.dataflowendpointgroup.socketaddress.port": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "groundstation.dataflowendpointgroup.socketaddress.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.capacityreservationoptionsrequest.usagestrategy": {
            "Allowed values": "use-capacity-reservations-first",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.origincustomheader.headername": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origincustomheader.headervalue": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.regexpatternset.regularexpressionlist.regularexpressionlist": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-regexpatternset-regularexpressionlist-properties": {
            "RegularExpressionList": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics.pipeline.selectattributes.next": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.selectattributes.name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.selectattributes.attributes": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.iops": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.snapshotid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.volumetype": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.volumesize": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.deleteontermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.encrypted": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codedeploy.deploymentgroup.autorollbackconfiguration.enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codedeploy.deploymentgroup.autorollbackconfiguration.events": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "amplify.branch.environmentvariable.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amplify.branch.environmentvariable.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.subscriptiondefinition.subscriptiondefinitionversion.subscriptions": {
            "Required": "Yes",
            "Type": [
                "Subscription"
            ],
            "UpdateRequires": "Replacement"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications.tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications.resourcetype": {
            "Allowed values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | elastic-gpu | elastic-ip | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | internet-gateway | key-pair | launch-template | local-gateway-route-table-vpc-association | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-flow-log | vpc-peering-connection | vpn-connection | vpn-gateway",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "managedblockchain.member.votingpolicy.approvalthresholdpolicy": {
            "Required": "No",
            "Type": "ApprovalThresholdPolicy",
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.scalinginstruction.mincapacity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "autoscalingplans.scalingplan.scalinginstruction.customizedloadmetricspecification": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.scalinginstruction.scalingpolicyupdatebehavior": {
            "Allowed values": "KeepExternalPolicies | ReplaceExternalPolicies",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.scalinginstruction.scalabledimension": {
            "Allowed values": "autoscaling:autoScalingGroup:DesiredCapacity | dynamodb:index:ReadCapacityUnits | dynamodb:index:WriteCapacityUnits | dynamodb:table:ReadCapacityUnits | dynamodb:table:WriteCapacityUnits | ec2:spot-fleet-request:TargetCapacity | ecs:service:DesiredCount | rds:cluster:ReadReplicaCount",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.scalinginstruction.predictivescalingmaxcapacitybehavior": {
            "Allowed values": "SetForecastCapacityToMaxCapacity | SetMaxCapacityAboveForecastCapacity | SetMaxCapacityToForecastCapacity",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.scalinginstruction.disabledynamicscaling": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "autoscalingplans.scalingplan.scalinginstruction.predictivescalingmaxcapacitybuffer": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.scalinginstruction.maxcapacity": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.scalinginstruction.targettrackingconfigurations": {
            "Required": "Yes",
            "Type": [
                "TargetTrackingConfiguration"
            ],
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.scalinginstruction.predictivescalingmode": {
            "Allowed values": "ForecastAndScale | ForecastOnly",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.scalinginstruction.predefinedloadmetricspecification": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.scalinginstruction.servicenamespace": {
            "Allowed values": "autoscaling | dynamodb | ec2 | ecs | rds",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.scalinginstruction.scheduledactionbuffertime": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "autoscalingplans.scalingplan.scalinginstruction.resourceid": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1600",
            "CompliantValues": "1...1600"
        },
        "codepipeline.pipeline.stages.actions.inputartifacts.name": {
            "Pattern": "[a-zA-Z0-9_\\-]+",
            "Required": "Yes",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "amazonmq.broker.encryptionoptions.useawsownedkey": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "amazonmq.broker.encryptionoptions.kmskeyid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalabletarget.scalabletargetaction.maxcapacity": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "applicationautoscaling.scalabletarget.scalabletargetaction.mincapacity": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "iotanalytics.channel.customermanageds3.keyprefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.channel.customermanageds3.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.channel.customermanageds3.bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "servicediscovery.service.healthcheckconfig.resourcepath": {
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "No interruption"
        },
        "servicediscovery.service.healthcheckconfig.type": {
            "*Important**  \nIf you specify HTTPS for the value of `Type`, the endpoint must support TLS v1\\.0 or later\\.\n+  **TCP*": "Route 53 tries to establish a TCP connection\\.\n\n  If you specify `TCP` for `Type`, don't specify a value for `ResourcePath`\\.\nFor more information, see [How Route 53 Determines Whether an Endpoint Is Healthy](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html) in the *Route 53 Developer Guide*\\.",
            "Required": "Yes",
            "Allowed values": "HTTP | HTTPS | TCP",
            "UpdateRequires": "No interruption",
            "Type": "String",
            "Type`  <a name=\"cfn-servicediscovery-service-healthcheckconfig-type\"></a>\nThe type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy\\.  \nYou can't change the value of `Type` after you create a health check\\.\nYou can create the following types of health checks:  \n+  **HTTP*": "Route 53 tries to establish a TCP connection\\. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400\\.\n+  **HTTPS*",
            "SampleValue": "example-string"
        },
        "servicediscovery.service.healthcheckconfig.failurethreshold": {
            "Minimum": "1",
            "Required": "No",
            "Maximum": "10",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...10",
            "CompliantValues": "1...10"
        },
        "kinesisfirehose.deliverystream.outputformatconfiguration.serializer": {
            "Required": "No",
            "Type": "Serializer",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.applicationsnapshotconfiguration.snapshotsenabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "kinesisfirehose.deliverystream.serializer.parquetserde": {
            "Required": "No",
            "Type": "ParquetSerDe",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.serializer.orcserde": {
            "Required": "No",
            "Type": "OrcSerDe",
            "UpdateRequires": "No interruption"
        },
        "s3.websiteconfiguration.routingrules.routingrulecondition": {
            "Required": "No",
            "Type": "RoutingRuleCondition",
            "UpdateRequires": "No interruption"
        },
        "s3.websiteconfiguration.routingrules.redirectrule": {
            "Required": "Yes",
            "Type": "RedirectRule",
            "UpdateRequires": "No interruption"
        },
        "ec2.instance.ssmassociations.associationparameters.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.instance.ssmassociations.associationparameters.value": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.campaignhook.mode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.campaignhook.weburl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.campaignhook.lambdafunctionname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.clientpolicy.tls": {
            "Required": "No",
            "Type": "ClientPolicyTls",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.kinesisstreamsinput.resourcearn": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "groundstation.dataflowendpointgroup.securitydetails.subnetids": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "groundstation.dataflowendpointgroup.securitydetails.securitygroupids": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "groundstation.dataflowendpointgroup.securitydetails.rolearn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.notstatementtwo.statement": {
            "Required": "Yes",
            "Type": "StatementThree",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.inputsettings.filterstrength": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "medialive.channel.inputsettings.captionselectors": {
            "Required": "No",
            "Type": [
                "CaptionSelector"
            ],
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.inputsettings.denoisefilter": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.inputsettings.audioselectors": {
            "Required": "No",
            "Type": [
                "AudioSelector"
            ],
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.inputsettings.sourceendbehavior": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.inputsettings.deblockfilter": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.inputsettings.inputfilter": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.inputsettings.videoselector": {
            "Required": "No",
            "Type": "VideoSelector",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.inputsettings.networkinputsettings": {
            "Required": "No",
            "Type": "NetworkInputSettings",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.tcptimeout.idle": {
            "Required": "No",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.instancetype": {
            "Allowed values": "a1.2xlarge | a1.4xlarge | a1.large | a1.medium | a1.metal | a1.xlarge | c1.medium | c1.xlarge | c3.2xlarge | c3.4xlarge | c3.8xlarge | c3.large | c3.xlarge | c4.2xlarge | c4.4xlarge | c4.8xlarge | c4.large | c4.xlarge | c5.12xlarge | c5.18xlarge | c5.24xlarge | c5.2xlarge | c5.4xlarge | c5.9xlarge | c5.large | c5.metal | c5.xlarge | c5a.12xlarge | c5a.16xlarge | c5a.24xlarge | c5a.2xlarge | c5a.4xlarge | c5a.8xlarge | c5a.large | c5a.xlarge | c5d.12xlarge | c5d.18xlarge | c5d.24xlarge | c5d.2xlarge | c5d.4xlarge | c5d.9xlarge | c5d.large | c5d.metal | c5d.xlarge | c5n.18xlarge | c5n.2xlarge | c5n.4xlarge | c5n.9xlarge | c5n.large | c5n.xlarge | c6g.12xlarge | c6g.16xlarge | c6g.2xlarge | c6g.4xlarge | c6g.8xlarge | c6g.large | c6g.medium | c6g.metal | c6g.xlarge | cc1.4xlarge | cc2.8xlarge | cg1.4xlarge | cr1.8xlarge | d2.2xlarge | d2.4xlarge | d2.8xlarge | d2.xlarge | f1.16xlarge | f1.2xlarge | f1.4xlarge | g2.2xlarge | g2.8xlarge | g3.16xlarge | g3.4xlarge | g3.8xlarge | g3s.xlarge | g4dn.12xlarge | g4dn.16xlarge | g4dn.2xlarge | g4dn.4xlarge | g4dn.8xlarge | g4dn.metal | g4dn.xlarge | h1.16xlarge | h1.2xlarge | h1.4xlarge | h1.8xlarge | hi1.4xlarge | hs1.8xlarge | i2.2xlarge | i2.4xlarge | i2.8xlarge | i2.xlarge | i3.16xlarge | i3.2xlarge | i3.4xlarge | i3.8xlarge | i3.large | i3.metal | i3.xlarge | i3en.12xlarge | i3en.24xlarge | i3en.2xlarge | i3en.3xlarge | i3en.6xlarge | i3en.large | i3en.metal | i3en.xlarge | inf1.24xlarge | inf1.2xlarge | inf1.6xlarge | inf1.xlarge | m1.large | m1.medium | m1.small | m1.xlarge | m2.2xlarge | m2.4xlarge | m2.xlarge | m3.2xlarge | m3.large | m3.medium | m3.xlarge | m4.10xlarge | m4.16xlarge | m4.2xlarge | m4.4xlarge | m4.large | m4.xlarge | m5.12xlarge | m5.16xlarge | m5.24xlarge | m5.2xlarge | m5.4xlarge | m5.8xlarge | m5.large | m5.metal | m5.xlarge | m5a.12xlarge | m5a.16xlarge | m5a.24xlarge | m5a.2xlarge | m5a.4xlarge | m5a.8xlarge | m5a.large | m5a.xlarge | m5ad.12xlarge | m5ad.16xlarge | m5ad.24xlarge | m5ad.2xlarge | m5ad.4xlarge | m5ad.8xlarge | m5ad.large | m5ad.xlarge | m5d.12xlarge | m5d.16xlarge | m5d.24xlarge | m5d.2xlarge | m5d.4xlarge | m5d.8xlarge | m5d.large | m5d.metal | m5d.xlarge | m5dn.12xlarge | m5dn.16xlarge | m5dn.24xlarge | m5dn.2xlarge | m5dn.4xlarge | m5dn.8xlarge | m5dn.large | m5dn.xlarge | m5n.12xlarge | m5n.16xlarge | m5n.24xlarge | m5n.2xlarge | m5n.4xlarge | m5n.8xlarge | m5n.large | m5n.xlarge | m6g.12xlarge | m6g.16xlarge | m6g.2xlarge | m6g.4xlarge | m6g.8xlarge | m6g.large | m6g.medium | m6g.metal | m6g.xlarge | p2.16xlarge | p2.8xlarge | p2.xlarge | p3.16xlarge | p3.2xlarge | p3.8xlarge | p3dn.24xlarge | r3.2xlarge | r3.4xlarge | r3.8xlarge | r3.large | r3.xlarge | r4.16xlarge | r4.2xlarge | r4.4xlarge | r4.8xlarge | r4.large | r4.xlarge | r5.12xlarge | r5.16xlarge | r5.24xlarge | r5.2xlarge | r5.4xlarge | r5.8xlarge | r5.large | r5.metal | r5.xlarge | r5a.12xlarge | r5a.16xlarge | r5a.24xlarge | r5a.2xlarge | r5a.4xlarge | r5a.8xlarge | r5a.large | r5a.xlarge | r5ad.12xlarge | r5ad.16xlarge | r5ad.24xlarge | r5ad.2xlarge | r5ad.4xlarge | r5ad.8xlarge | r5ad.large | r5ad.xlarge | r5d.12xlarge | r5d.16xlarge | r5d.24xlarge | r5d.2xlarge | r5d.4xlarge | r5d.8xlarge | r5d.large | r5d.metal | r5d.xlarge | r5dn.12xlarge | r5dn.16xlarge | r5dn.24xlarge | r5dn.2xlarge | r5dn.4xlarge | r5dn.8xlarge | r5dn.large | r5dn.xlarge | r5n.12xlarge | r5n.16xlarge | r5n.24xlarge | r5n.2xlarge | r5n.4xlarge | r5n.8xlarge | r5n.large | r5n.xlarge | r6g.12xlarge | r6g.16xlarge | r6g.2xlarge | r6g.4xlarge | r6g.8xlarge | r6g.large | r6g.medium | r6g.metal | r6g.xlarge | t1.micro | t2.2xlarge | t2.large | t2.medium | t2.micro | t2.nano | t2.small | t2.xlarge | t3.2xlarge | t3.large | t3.medium | t3.micro | t3.nano | t3.small | t3.xlarge | t3a.2xlarge | t3a.large | t3a.medium | t3a.micro | t3a.nano | t3a.small | t3a.xlarge | u-12tb1.metal | u-18tb1.metal | u-24tb1.metal | u-6tb1.metal | u-9tb1.metal | x1.16xlarge | x1.32xlarge | x1e.16xlarge | x1e.2xlarge | x1e.32xlarge | x1e.4xlarge | x1e.8xlarge | x1e.xlarge | z1d.12xlarge | z1d.2xlarge | z1d.3xlarge | z1d.6xlarge | z1d.large | z1d.metal | z1d.xlarge",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.ebsoptimized": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement": {
            "Required": "No",
            "Type": "SpotPlacement",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.iaminstanceprofile": {
            "Required": "No",
            "Type": "IamInstanceProfileSpecification",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.userdata": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces": {
            "Required": "No",
            "Type": [
                "InstanceNetworkInterfaceSpecification"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.imageid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.monitoring": {
            "Required": "No",
            "Type": "SpotFleetMonitoring",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.kernelid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.spotprice": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings": {
            "Required": "No",
            "Type": [
                "BlockDeviceMapping"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.keyname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.subnetid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications": {
            "Required": "No",
            "Type": [
                "SpotFleetTagSpecification"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.securitygroups": {
            "Required": "No",
            "Type": [
                "GroupIdentifier"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.ramdiskid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.weightedcapacity": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "guardduty.filter.findingcriteria.criterion": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "guardduty.filter.findingcriteria.itemtype": {
            "Required": "No",
            "Type": "Condition",
            "UpdateRequires": "No interruption"
        },
        "elasticache.subnetgroup.description": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticache.subnetgroup.cachesubnetgroupname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticache.subnetgroup.subnetids": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.bucketencryption.serversideencryptionconfiguration": {
            "Required": "Yes",
            "Type": [
                "ServerSideEncryptionRule"
            ],
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.recordformat": {
            "Required": "Yes",
            "Type": "RecordFormat",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.recordencoding": {
            "Pattern": "UTF-8",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.recordcolumns": {
            "Required": "Yes",
            "Type": [
                "RecordColumn"
            ],
            "Maximum": "1000",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.videoselectorprogramid.programid": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualservice.virtualnodeserviceprovider.virtualnodename": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.processingconfiguration.enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "kinesisfirehose.deliverystream.processingconfiguration.processors": {
            "Required": "No",
            "Type": [
                "Processor"
            ],
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.applicationcodeconfiguration.codecontent": {
            "Required": "Yes",
            "Type": "CodeContent",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.applicationcodeconfiguration.codecontenttype": {
            "Allowed values": "PLAINTEXT | ZIPFILE",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.s3destinationconfiguration.key": {
            "Pattern": "^[a-zA-Z0-9!_.*'()/{}:-]*$",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "iotanalytics.dataset.s3destinationconfiguration.rolearn": {
            "Minimum": "20",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "iotanalytics.dataset.s3destinationconfiguration.glueconfiguration": {
            "Required": "No",
            "Type": "GlueConfiguration",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.s3destinationconfiguration.bucket": {
            "Pattern": "^[a-zA-Z0-9.\\-_]*$",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...255",
            "CompliantValues": "3...255"
        },
        "appmesh.route.httptimeout.perrequest": {
            "Required": "No",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.httptimeout.idle": {
            "Required": "No",
            "Type": "Duration",
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.ulimit.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.ulimit.hardlimit": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "batch.jobdefinition.ulimit.softlimit": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.disablescalein": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.targetvalue": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.predefinedmetricspecification": {
            "Required": "No",
            "Type": "PredefinedMetricSpecification",
            "UpdateRequires": "No interruption"
        },
        "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.customizedmetricspecification": {
            "Required": "No",
            "Type": "CustomizedMetricSpecification",
            "UpdateRequires": "No interruption"
        },
        "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.scaleoutcooldown": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.scaleincooldown": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "servicecatalog.cloudformationproduct.provisioningartifactproperties.name": {
            "Required": "No",
            "Type": "String",
            "Maximum": "8192",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "servicecatalog.cloudformationproduct.provisioningartifactproperties.disabletemplatevalidation": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "servicecatalog.cloudformationproduct.provisioningartifactproperties.description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "8192",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "servicecatalog.cloudformationproduct.provisioningartifactproperties.info": {
            "Required": "Yes",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "apigateway.deployment.deploymentcanarysettings.percenttraffic": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "Replacement",
            "SampleValue": "123.45"
        },
        "apigateway.deployment.deploymentcanarysettings.stagevariableoverrides": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "Replacement"
        },
        "apigateway.deployment.deploymentcanarysettings.usestagecache": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cognito.userpool.deviceconfiguration.challengerequiredonnewdevice": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cognito.userpool.deviceconfiguration.deviceonlyrememberedonuserprompt": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "autoscaling.autoscalinggroup.launchtemplate.overrides": {
            "Required": "No",
            "Type": [
                "LaunchTemplateOverrides"
            ],
            "UpdateRequires": "No interruption"
        },
        "autoscaling.autoscalinggroup.launchtemplate.launchtemplatespecification": {
            "Required": "Yes",
            "Type": "LaunchTemplateSpecification",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.sqlimatchstatement.fieldtomatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.sqlimatchstatement.texttransformations": {
            "Required": "Yes",
            "Type": [
                "TextTransformation"
            ],
            "UpdateRequires": "No interruption"
        },
        "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.payload": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.clientcontext": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "8000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...8000",
            "CompliantValues": "1...8000"
        },
        "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.qualifier": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "appsync.resolver.pipelineconfig.functions": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.app.environment.secure": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "opsworks.app.environment.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.app.environment.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.connectordefinition.connectordefinitionversion.connectors": {
            "Required": "Yes",
            "Type": [
                "Connector"
            ],
            "UpdateRequires": "Replacement"
        },
        "pinpointemail.configurationset.sendingoptions.sendingenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "dlm.lifecyclepolicy.crossregioncopyretainrule.intervalunit": {
            "Allowed values": "DAYS | MONTHS | WEEKS | YEARS",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dlm.lifecyclepolicy.crossregioncopyretainrule.interval": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cognito.userpool.recoveryoption.priority": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "2",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2",
            "CompliantValues": "1...2"
        },
        "cognito.userpool.recoveryoption.name": {
            "Allowed values": "admin_only | verified_email | verified_phone_number",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.autoscalinggroup.launchtemplatespecification.launchtemplatename": {
            "Pattern": "[a-zA-Z0-9\\(\\)\\.-/_]+",
            "Required": "Conditional",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...128",
            "CompliantValues": "3...128"
        },
        "autoscaling.autoscalinggroup.launchtemplatespecification.version": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "autoscaling.autoscalinggroup.launchtemplatespecification.launchtemplateid": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Conditional",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "iot.topicrule.assetpropertytimestamp.timeinseconds": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.assetpropertytimestamp.offsetinnanos": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpool.policies.passwordpolicy": {
            "Required": "No",
            "Type": "PasswordPolicy",
            "UpdateRequires": "No interruption"
        },
        "waf.ipset.ipsetdescriptors.type": {
            "Allowed values": "IPV4 | IPV6",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waf.ipset.ipsetdescriptors.value": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "50",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...50",
            "CompliantValues": "1...50"
        },
        "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.launchtemplateid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.launchtemplatename": {
            "Pattern": "[a-zA-Z0-9\\(\\)\\.\\-/_]+",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...128",
            "CompliantValues": "3...128"
        },
        "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.version": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.environment.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.environment.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "codestarnotifications.notificationrule.target.targettype": {
            "Pattern": "^[A-Za-z]+$",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codestarnotifications.notificationrule.target.targetaddress": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "320",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...320",
            "CompliantValues": "1...320"
        },
        "wafv2.webacl.overrideaction.count": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.webacl.overrideaction.none": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "efs.accesspoint.posixuser.uid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "efs.accesspoint.posixuser.secondarygids": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "16",
            "UpdateRequires": "Replacement"
        },
        "efs.accesspoint.posixuser.gid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.ebs.volume.encrypted": {
            "Required": "No",
            "UpdateRequires": "Updates are not supported\\.",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.ebs.volume.tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.ebs.volume.size": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.ebs.volume.outpostarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.ebs.volume.volumetype": {
            "Allowed values": "gp2 | io1 | sc1 | st1 | standard",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.ebs.volume.availabilityzone": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Updates are not supported\\.",
            "SampleValue": "example-string"
        },
        "ec2.ebs.volume.iops": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.ebs.volume.snapshotid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Updates are not supported\\.",
            "SampleValue": "example-string"
        },
        "ec2.ebs.volume.autoenableio": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.ebs.volume.kmskeyid": {
            "Required": "No",
            "UpdateRequires": "Updates are not supported\\."
        },
        "ec2.ebs.volume.multiattachenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.ec2fleet.fleetlaunchtemplateconfigrequest.launchtemplatespecification": {
            "Required": "No",
            "Type": "FleetLaunchTemplateSpecificationRequest",
            "UpdateRequires": "Replacement"
        },
        "ec2.ec2fleet.fleetlaunchtemplateconfigrequest.overrides": {
            "Required": "No",
            "Type": [
                "FleetLaunchTemplateOverridesRequest"
            ],
            "Maximum": "50",
            "UpdateRequires": "Replacement"
        },
        "emr.ebsconfiguration.ebsblockdeviceconfig.volumesperinstance": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification": {
            "Required": "Yes",
            "Type": "VolumeSpecification",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.ratebasedstatementtwo.aggregatekeytype": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.ratebasedstatementtwo.scopedownstatement": {
            "Required": "No",
            "Type": "StatementThree",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.ratebasedstatementtwo.limit": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualnode.listener.tls": {
            "Required": "No",
            "Type": "ListenerTls",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.listener.portmapping": {
            "Required": "Yes",
            "Type": "PortMapping",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.listener.healthcheck": {
            "Required": "No",
            "Type": "HealthCheck",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.listener.timeout": {
            "Required": "No",
            "Type": "ListenerTimeout",
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.deployment.revision.s3location.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.deployment.revision.s3location.bundletype": {
            "Allowed values": "JSON | tar | tgz | YAML | zip",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.deployment.revision.s3location.version": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.deployment.revision.s3location.bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.deployment.revision.s3location.etag": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "eks.cluster.provider.keyarn": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ssm.association.instanceassociationoutputlocation.s3location": {
            "Required": "No",
            "Type": "S3OutputLocation",
            "UpdateRequires": "No interruption"
        },
        "batch.jobqueue.computeenvironmentorder.computeenvironment": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobqueue.computeenvironmentorder.order": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "budgets.budget.timeperiod.start": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "budgets.budget.timeperiod.end": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.checkpointconfiguration.minpausebetweencheckpoints": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisanalyticsv2.application.checkpointconfiguration.checkpointingenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "kinesisanalyticsv2.application.checkpointconfiguration.checkpointinterval": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisanalyticsv2.application.checkpointconfiguration.configurationtype": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskset.networkconfiguration.awsvpcconfiguration": {
            "Required": "No",
            "Type": "AwsVpcConfiguration",
            "UpdateRequires": "Replacement"
        },
        "autoscalingplans.scalingplan.customizedloadmetricspecification.dimensions": {
            "Required": "No",
            "Type": [
                "MetricDimension"
            ],
            "UpdateRequires": "No interruption"
        },
        "autoscalingplans.scalingplan.customizedloadmetricspecification.namespace": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.customizedloadmetricspecification.statistic": {
            "Type": "String",
            "Required": "Yes",
            "Allowed Values": "Sum",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "Sum"
            ],
            "SampleValue": "Sum",
            "CompliantValues": [
                "Sum"
            ]
        },
        "autoscalingplans.scalingplan.customizedloadmetricspecification.metricname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.customizedloadmetricspecification.unit": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.setdimension.values": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.setdimension.dimensiontype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.mountpoints.containerpath": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.mountpoints.readonly": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "batch.jobdefinition.mountpoints.sourcevolume": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.health.check.healthythreshold": {
            "Minimum": "2",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "10",
            "UpdateRequires": "No interruption",
            "AllowedValues": "2...10",
            "CompliantValues": "2...10"
        },
        "ec2.elb.health.check.target": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.health.check.timeout": {
            "Minimum": "2",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "60",
            "UpdateRequires": "No interruption",
            "AllowedValues": "2...60",
            "CompliantValues": "2...60"
        },
        "ec2.elb.health.check.interval": {
            "Minimum": "5",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "300",
            "UpdateRequires": "No interruption",
            "AllowedValues": "5...300",
            "CompliantValues": "5...300"
        },
        "ec2.elb.health.check.unhealthythreshold": {
            "Minimum": "2",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "10",
            "UpdateRequires": "No interruption",
            "AllowedValues": "2...10",
            "CompliantValues": "2...10"
        },
        "cognito.userpooluser.attributetype.name": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
            "Required": "No",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "cognito.userpooluser.attributetype.value": {
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.triggeringdataset.datasetname": {
            "Pattern": "^[a-zA-Z0-9_]+$",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "dynamodb.keyschema.keytype": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "dynamodb.keyschema.attributename": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "ec2.launchtemplate.launchtemplatedata.creditspecification.cpucredits": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.ruleaction.block": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.webacl.ruleaction.allow": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.webacl.ruleaction.count": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "greengrass.devicedefinition.device.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.devicedefinition.device.syncshadow": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "greengrass.devicedefinition.device.thingarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.devicedefinition.device.certificatearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticsearch.domain.logpublishingoption.enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticsearch.domain.logpublishingoption.cloudwatchlogsloggrouparn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.healthcheck.healthchecktag.value": {
            "Required": "Yes",
            "Value`  <a name=\"cfn-route53-healthchecktags-value\"></a>\nThe value of `Value` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Value` is the value that you want to give the new tag\\.\n+  **Edit a tag*",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.healthcheck.healthchecktag.key": {
            "Required": "Yes",
            "Key`  <a name=\"cfn-route53-healthchecktags-key\"></a>\nThe value of `Key` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Key` is the name that you want to give the new tag\\.\n+  **Edit a tag*",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.mltransform.inputrecordtables.gluetables": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationreferencedatasource.csvmappingparameters.recordcolumndelimiter": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.applicationreferencedatasource.csvmappingparameters.recordrowdelimiter": {
            "Minimum": "1",
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.sqsaction.queueurl": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.sqsaction.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.sqsaction.usebase64": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition.storageclass": {
            "Allowed values": "DEEP_ARCHIVE | GLACIER | INTELLIGENT_TIERING | ONEZONE_IA | STANDARD_IA",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition.transitionindays": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "ec2.networkaclentry.icmp.code": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.networkaclentry.icmp.type": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cognito.userpool.admincreateuserconfig.unusedaccountvaliditydays": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "365",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...365",
            "CompliantValues": "0...365"
        },
        "cognito.userpool.admincreateuserconfig.invitemessagetemplate": {
            "Required": "No",
            "Type": "InviteMessageTemplate",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpool.admincreateuserconfig.allowadmincreateuseronly": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "logs.metricfilter.metrictransformation.metricnamespace": {
            "Pattern": "[^:*$]*",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "logs.metricfilter.metrictransformation.metricvalue": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "logs.metricfilter.metrictransformation.metricname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "logs.metricfilter.metrictransformation.defaultvalue": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "kinesisanalyticsv2.application.kinesisfirehoseinput.resourcearn": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "iotevents.detectormodel.cleartimer.timername": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "appmesh.virtualnode.listenertlsacmcertificate.certificatearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.segment.segmentgroups.groups.dimensions": {
            "Required": "No",
            "Type": [
                "SegmentDimensions"
            ],
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentgroups.groups.sourcesegments": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentgroups.groups.sourcetype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.segment.segmentgroups.groups.type": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.service.placementstrategy.type": {
            "Allowed values": "binpack | random | spread",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.service.placementstrategy.field": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "groundstation.config.uplinkechoconfig.antennauplinkconfigarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.config.uplinkechoconfig.enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "autoscalingplans.scalingplan.predefinedloadmetricspecification.predefinedloadmetrictype": {
            "Allowed values": "ALBTargetGroupRequestCount | ASGTotalCPUUtilization | ASGTotalNetworkIn | ASGTotalNetworkOut",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscalingplans.scalingplan.predefinedloadmetricspecification.resourcelabel": {
            "Minimum": "1",
            "Required": "Conditional",
            "Type": "String",
            "Maximum": "1023",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1023",
            "CompliantValues": "1...1023"
        },
        "greengrass.resourcedefinitionversion.resourcedownloadownersetting.grouppermission": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.resourcedownloadownersetting.groupowner": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "medialive.channel.audioselectorsettings.audiopidselection": {
            "Required": "No",
            "Type": "AudioPidSelection",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.audioselectorsettings.audiolanguageselection": {
            "Required": "No",
            "Type": "AudioLanguageSelection",
            "UpdateRequires": "No interruption"
        },
        "codepipeline.webhook.webhookfilterrule.matchequals": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "150",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...150",
            "CompliantValues": "1...150"
        },
        "codepipeline.webhook.webhookfilterrule.jsonpath": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "150",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...150",
            "CompliantValues": "1...150"
        },
        "backup.backupplan.lifecycleresourcetype.movetocoldstorageafterdays": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "backup.backupplan.lifecycleresourcetype.deleteafterdays": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "kinesisfirehose.deliverystream.kmsencryptionconfig.awskmskeyarn": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "kinesisanalytics.application.csvmappingparameters.recordcolumndelimiter": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.application.csvmappingparameters.recordrowdelimiter": {
            "Minimum": "1",
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationrulefilter.tagfilter": {
            "Required": "No",
            "Type": "TagFilter",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationrulefilter.and": {
            "Required": "No",
            "Type": "ReplicationRuleAndOperator",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationrulefilter.prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "managedblockchain.member.memberfabricconfiguration.adminpassword": {
            "Pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?!.*[@'\\\\\"/])[a-zA-Z0-9\\S]*$",
            "Required": "Yes",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "Minimum": "8",
            "Type": "String",
            "AllowedValues": "8...32",
            "CompliantValues": "8...32"
        },
        "managedblockchain.member.memberfabricconfiguration.adminusername": {
            "Pattern": "^[a-zA-Z][a-zA-Z0-9]*$",
            "Required": "Yes",
            "Maximum": "16",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...16",
            "CompliantValues": "1...16"
        },
        "elasticsearch.domain.snapshotoptions.automatedsnapshotstarthour": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "batch.jobdefinition.timeout.attemptdurationseconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.webacl.regexpatternsetreferencestatement.arn": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "wafv2.webacl.regexpatternsetreferencestatement.fieldtomatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.regexpatternsetreferencestatement.texttransformations": {
            "Required": "Yes",
            "Type": [
                "TextTransformation"
            ],
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationreferencedatasource.recordformat.mappingparameters": {
            "Required": "No",
            "Type": "MappingParameters",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationreferencedatasource.recordformat.recordformattype": {
            "Allowed values": "CSV | JSON",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.sizeconstraintstatement.texttransformations": {
            "Required": "Yes",
            "Type": [
                "TextTransformation"
            ],
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.sizeconstraintstatement.size": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.webacl.sizeconstraintstatement.comparisonoperator": {
            "Allowed values": "EQ | GE | GT | LE | LT | NE",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.sizeconstraintstatement.fieldtomatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "ec2.clientvpnendpoint.connectionlogoptions.cloudwatchlogstream": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.clientvpnendpoint.connectionlogoptions.cloudwatchloggroup": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.clientvpnendpoint.connectionlogoptions.enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "kinesisfirehose.deliverystream.vpcconfiguration.subnetids": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "kinesisfirehose.deliverystream.vpcconfiguration.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.vpcconfiguration.securitygroupids": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "iotanalytics.pipeline.deviceshadowenrich.rolearn": {
            "Minimum": "20",
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "iotanalytics.pipeline.deviceshadowenrich.name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.deviceshadowenrich.next": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.deviceshadowenrich.thingname": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "iotanalytics.pipeline.deviceshadowenrich.attribute": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "iotevents.detectormodel.iotsitewise.propertyalias": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.iotsitewise.propertyid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.iotsitewise.assetid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.iotsitewise.propertyvalue": {
            "Required": "No",
            "Type": "AssetPropertyValue",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.iotsitewise.entryid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancefleetconfig.instancetypeconfig.instancetype": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "elasticmapreduce.instancefleetconfig.instancetypeconfig.bidprice": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.instancefleetconfig.instancetypeconfig.weightedcapacity": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "elasticmapreduce.instancefleetconfig.instancetypeconfig.ebsconfiguration": {
            "Required": "No",
            "Type": "EbsConfiguration",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.instancefleetconfig.instancetypeconfig.bidpriceaspercentageofondemandprice": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "Replacement",
            "SampleValue": "123.45"
        },
        "elasticmapreduce.instancefleetconfig.instancetypeconfig.configurations": {
            "Required": "No",
            "Type": [
                "Configuration"
            ],
            "UpdateRequires": "Replacement"
        },
        "wafv2.webacl.texttransformations.texttransformations": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-webacl-texttransformations-properties": {
            "TextTransformations": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2.spotfleet.launchtemplateoverrides.weightedcapacity": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "ec2.spotfleet.launchtemplateoverrides.availabilityzone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.launchtemplateoverrides.subnetid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.launchtemplateoverrides.instancetype": {
            "Allowed values": "a1.2xlarge | a1.4xlarge | a1.large | a1.medium | a1.metal | a1.xlarge | c1.medium | c1.xlarge | c3.2xlarge | c3.4xlarge | c3.8xlarge | c3.large | c3.xlarge | c4.2xlarge | c4.4xlarge | c4.8xlarge | c4.large | c4.xlarge | c5.12xlarge | c5.18xlarge | c5.24xlarge | c5.2xlarge | c5.4xlarge | c5.9xlarge | c5.large | c5.metal | c5.xlarge | c5a.12xlarge | c5a.16xlarge | c5a.24xlarge | c5a.2xlarge | c5a.4xlarge | c5a.8xlarge | c5a.large | c5a.xlarge | c5d.12xlarge | c5d.18xlarge | c5d.24xlarge | c5d.2xlarge | c5d.4xlarge | c5d.9xlarge | c5d.large | c5d.metal | c5d.xlarge | c5n.18xlarge | c5n.2xlarge | c5n.4xlarge | c5n.9xlarge | c5n.large | c5n.xlarge | c6g.12xlarge | c6g.16xlarge | c6g.2xlarge | c6g.4xlarge | c6g.8xlarge | c6g.large | c6g.medium | c6g.metal | c6g.xlarge | cc1.4xlarge | cc2.8xlarge | cg1.4xlarge | cr1.8xlarge | d2.2xlarge | d2.4xlarge | d2.8xlarge | d2.xlarge | f1.16xlarge | f1.2xlarge | f1.4xlarge | g2.2xlarge | g2.8xlarge | g3.16xlarge | g3.4xlarge | g3.8xlarge | g3s.xlarge | g4dn.12xlarge | g4dn.16xlarge | g4dn.2xlarge | g4dn.4xlarge | g4dn.8xlarge | g4dn.metal | g4dn.xlarge | h1.16xlarge | h1.2xlarge | h1.4xlarge | h1.8xlarge | hi1.4xlarge | hs1.8xlarge | i2.2xlarge | i2.4xlarge | i2.8xlarge | i2.xlarge | i3.16xlarge | i3.2xlarge | i3.4xlarge | i3.8xlarge | i3.large | i3.metal | i3.xlarge | i3en.12xlarge | i3en.24xlarge | i3en.2xlarge | i3en.3xlarge | i3en.6xlarge | i3en.large | i3en.metal | i3en.xlarge | inf1.24xlarge | inf1.2xlarge | inf1.6xlarge | inf1.xlarge | m1.large | m1.medium | m1.small | m1.xlarge | m2.2xlarge | m2.4xlarge | m2.xlarge | m3.2xlarge | m3.large | m3.medium | m3.xlarge | m4.10xlarge | m4.16xlarge | m4.2xlarge | m4.4xlarge | m4.large | m4.xlarge | m5.12xlarge | m5.16xlarge | m5.24xlarge | m5.2xlarge | m5.4xlarge | m5.8xlarge | m5.large | m5.metal | m5.xlarge | m5a.12xlarge | m5a.16xlarge | m5a.24xlarge | m5a.2xlarge | m5a.4xlarge | m5a.8xlarge | m5a.large | m5a.xlarge | m5ad.12xlarge | m5ad.16xlarge | m5ad.24xlarge | m5ad.2xlarge | m5ad.4xlarge | m5ad.8xlarge | m5ad.large | m5ad.xlarge | m5d.12xlarge | m5d.16xlarge | m5d.24xlarge | m5d.2xlarge | m5d.4xlarge | m5d.8xlarge | m5d.large | m5d.metal | m5d.xlarge | m5dn.12xlarge | m5dn.16xlarge | m5dn.24xlarge | m5dn.2xlarge | m5dn.4xlarge | m5dn.8xlarge | m5dn.large | m5dn.xlarge | m5n.12xlarge | m5n.16xlarge | m5n.24xlarge | m5n.2xlarge | m5n.4xlarge | m5n.8xlarge | m5n.large | m5n.xlarge | m6g.12xlarge | m6g.16xlarge | m6g.2xlarge | m6g.4xlarge | m6g.8xlarge | m6g.large | m6g.medium | m6g.metal | m6g.xlarge | p2.16xlarge | p2.8xlarge | p2.xlarge | p3.16xlarge | p3.2xlarge | p3.8xlarge | p3dn.24xlarge | r3.2xlarge | r3.4xlarge | r3.8xlarge | r3.large | r3.xlarge | r4.16xlarge | r4.2xlarge | r4.4xlarge | r4.8xlarge | r4.large | r4.xlarge | r5.12xlarge | r5.16xlarge | r5.24xlarge | r5.2xlarge | r5.4xlarge | r5.8xlarge | r5.large | r5.metal | r5.xlarge | r5a.12xlarge | r5a.16xlarge | r5a.24xlarge | r5a.2xlarge | r5a.4xlarge | r5a.8xlarge | r5a.large | r5a.xlarge | r5ad.12xlarge | r5ad.16xlarge | r5ad.24xlarge | r5ad.2xlarge | r5ad.4xlarge | r5ad.8xlarge | r5ad.large | r5ad.xlarge | r5d.12xlarge | r5d.16xlarge | r5d.24xlarge | r5d.2xlarge | r5d.4xlarge | r5d.8xlarge | r5d.large | r5d.metal | r5d.xlarge | r5dn.12xlarge | r5dn.16xlarge | r5dn.24xlarge | r5dn.2xlarge | r5dn.4xlarge | r5dn.8xlarge | r5dn.large | r5dn.xlarge | r5n.12xlarge | r5n.16xlarge | r5n.24xlarge | r5n.2xlarge | r5n.4xlarge | r5n.8xlarge | r5n.large | r5n.xlarge | r6g.12xlarge | r6g.16xlarge | r6g.2xlarge | r6g.4xlarge | r6g.8xlarge | r6g.large | r6g.medium | r6g.metal | r6g.xlarge | t1.micro | t2.2xlarge | t2.large | t2.medium | t2.micro | t2.nano | t2.small | t2.xlarge | t3.2xlarge | t3.large | t3.medium | t3.micro | t3.nano | t3.small | t3.xlarge | t3a.2xlarge | t3a.large | t3a.medium | t3a.micro | t3a.nano | t3a.small | t3a.xlarge | u-12tb1.metal | u-18tb1.metal | u-24tb1.metal | u-6tb1.metal | u-9tb1.metal | x1.16xlarge | x1.32xlarge | x1e.16xlarge | x1e.2xlarge | x1e.32xlarge | x1e.4xlarge | x1e.8xlarge | x1e.xlarge | z1d.12xlarge | z1d.2xlarge | z1d.3xlarge | z1d.6xlarge | z1d.large | z1d.metal | z1d.xlarge",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.launchtemplateoverrides.spotprice": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.fleet.resourcecreationlimitpolicy.newgamesessionspercreator": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "gamelift.fleet.resourcecreationlimitpolicy.policyperiodinminutes": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "dms.endpoint.kinesissettings.messageformat": {
            "Allowed values": "json | json-unformatted",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.kinesissettings.streamarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.kinesissettings.serviceaccessrolearn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.resolver.cachingconfig.cachingkeys": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "appsync.resolver.cachingconfig.ttl": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "ecs.service.placementconstraint.type": {
            "Allowed values": "distinctInstance | memberOf",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.service.placementconstraint.expression": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "batch.computeenvironment.launchtemplatespecification.launchtemplateid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "batch.computeenvironment.launchtemplatespecification.version": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "batch.computeenvironment.launchtemplatespecification.launchtemplatename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalabletarget.suspendedstate.dynamicscalinginsuspended": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "applicationautoscaling.scalabletarget.suspendedstate.scheduledscalingsuspended": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "applicationautoscaling.scalabletarget.suspendedstate.dynamicscalingoutsuspended": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "kinesisanalyticsv2.application.monitoringconfiguration.configurationtype": {
            "Allowed values": "CUSTOM | DEFAULT",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.monitoringconfiguration.loglevel": {
            "Allowed values": "DEBUG | ERROR | INFO | WARN",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.monitoringconfiguration.metricslevel": {
            "Allowed values": "APPLICATION | OPERATOR | PARALLELISM | TASK",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.elasticsearchretryoptions.durationinseconds": {
            "Minimum": "0",
            "Required": "No",
            "Maximum": "7200",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...7200",
            "CompliantValues": "0...7200"
        },
        "iotevents.detectormodel.state.onenter": {
            "Required": "No",
            "Type": "OnEnter",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.state.onexit": {
            "Required": "No",
            "Type": "OnExit",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.state.statename": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotevents.detectormodel.state.oninput": {
            "Required": "No",
            "Type": "OnInput",
            "UpdateRequires": "No interruption"
        },
        "s3.accesspoint.vpcconfiguration.vpcid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "dms.endpoint.neptunesettings.errorretryduration": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "dms.endpoint.neptunesettings.maxfilesize": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "dms.endpoint.neptunesettings.iamauthenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "dms.endpoint.neptunesettings.serviceaccessrolearn": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "dms.endpoint.neptunesettings.s3bucketfolder": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.neptunesettings.s3bucketname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.neptunesettings.maxretrycount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.webacl.orstatementone.statements": {
            "Required": "Yes",
            "Type": [
                "StatementTwo"
            ],
            "UpdateRequires": "No interruption"
        },
        "config.organizationconformancepack.conformancepackinputparameter.parametername": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...255",
            "CompliantValues": "0...255"
        },
        "config.organizationconformancepack.conformancepackinputparameter.parametervalue": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...255",
            "CompliantValues": "0...255"
        },
        "iotanalytics.dataset.trigger.schedule": {
            "Required": "No",
            "Type": "Schedule",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.trigger.triggeringdataset": {
            "Required": "No",
            "Type": "TriggeringDataset",
            "UpdateRequires": "No interruption"
        },
        "appconfig.application.tags.key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appconfig.application.tags.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.metricintervallowerbound": {
            "Required": "Conditional",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.scalingadjustment": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.metricintervalupperbound": {
            "Required": "Conditional",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "appmesh.virtualnode.portmapping.protocol": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.portmapping.port": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "emr.ebsconfiguration.ebsoptimized": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "emr.ebsconfiguration.ebsblockdeviceconfigs": {
            "Required": "No",
            "Type": [
                "EbsBlockDeviceConfig"
            ],
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.schedule.quiettime.end": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.schedule.quiettime.start": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.firehoseaction.separator": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.firehoseaction.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.firehoseaction.deliverystreamname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.jsonmappingparameters.recordrowpath": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.apikey.stagekey.restapiid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.apikey.stagekey.stagename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypool.pushsync.applicationarns": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cognito.identitypool.pushsync.rolearn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "eventschemas.discoverer.tagsentry.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "eventschemas.discoverer.tagsentry.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.clientvpnendpoint.certificateauthenticationrequest.clientrootcertificatechainarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.dynamodbconfig.awsregion": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.dynamodbconfig.usecallercredentials": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "appsync.datasource.dynamodbconfig.tablename": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.dynamodbconfig.deltasyncconfig": {
            "Required": "No",
            "Type": "DeltaSyncConfig",
            "UpdateRequires": "No interruption"
        },
        "appsync.datasource.dynamodbconfig.versioned": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "autoscaling.autoscalinggroup.launchtemplateoverrides.instancetype": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "autoscaling.autoscalinggroup.launchtemplateoverrides.weightedcapacity": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.tlsvalidationcontextfiletrust.certificatechain": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.config.eirp.units": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.config.eirp.value": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "ec2.launchtemplate.launchtemplateelasticinferenceaccelerator.count": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.launchtemplate.launchtemplateelasticinferenceaccelerator.type": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "config.deliverychannel.configsnapshotdeliveryproperties.deliveryfrequency": {
            "Allowed values": "One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.fileaccesslog.path": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.certificates.certificatearn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticbeanstalk.configurationtemplate.sourceconfiguration.applicationname": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "elasticbeanstalk.configurationtemplate.sourceconfiguration.templatename": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "appmesh.virtualnode.duration.unit": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.duration.value": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.webacl.excludedrule.name": {
            "Pattern": "^[\\w\\-]+$",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "elasticloadbalancingv2.listenerrule.pathpatternconfig.values": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origin.domainname": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origin.connectionattempts": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origin.customoriginconfig": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origin.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.origin.origincustomheaders": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origin.originpath": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origin.s3originconfig": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origin.connectiontimeout": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.lambdaaction.topicarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.lambdaaction.invocationtype": {
            "Allowed values": "Event | RequestResponse",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.lambdaaction.functionarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.reportgroup.s3reportexportconfig.encryptionkey": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.reportgroup.s3reportexportconfig.path": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.reportgroup.s3reportexportconfig.bucket": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.reportgroup.s3reportexportconfig.packaging": {
            "Allowed values": "NONE | ZIP",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.reportgroup.s3reportexportconfig.encryptiondisabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "imagebuilder.imagerecipe.instanceblockdevicemapping.nodevice:\"\"": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "imagebuilder.imagerecipe.instanceblockdevicemapping.devicename": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "imagebuilder.imagerecipe.instanceblockdevicemapping.nodevice": {},
        "imagebuilder.imagerecipe.instanceblockdevicemapping.ebs": {
            "Required": "No",
            "Type": "EbsInstanceBlockDeviceSpecification",
            "UpdateRequires": "Replacement"
        },
        "imagebuilder.imagerecipe.instanceblockdevicemapping.virtualname": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "greengrass.resourcedefinitionversion.localvolumeresourcedata.destinationpath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.localvolumeresourcedata.groupownersetting": {
            "Required": "No",
            "Type": "GroupOwnerSetting",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinitionversion.localvolumeresourcedata.sourcepath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.bootstrapactionconfig.name": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.bootstrapactionconfig.scriptbootstrapaction": {
            "Required": "Yes",
            "Type": "ScriptBootstrapActionConfig",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification.capacityreservationtarget": {
            "Required": "No",
            "Type": "CapacityReservationTarget",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification.capacityreservationpreference": {
            "Allowed values": "none | open",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.step.hadoopjarstepconfig.args": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.step.hadoopjarstepconfig.mainclass": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "10280",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10280",
            "CompliantValues": "0...10280"
        },
        "elasticmapreduce.step.hadoopjarstepconfig.stepproperties": {
            "Required": "No",
            "Type": [
                "KeyValue"
            ],
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.step.hadoopjarstepconfig.jar": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "10280",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10280",
            "CompliantValues": "0...10280"
        },
        "route53.recordset.1.resourcerecords": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.1.healthcheckid": {
            "UpdateRequires": "No interruption",
            "Required": "No",
            "Maximum": "64",
            "HealthCheckId`  <a name=\"cfn-route53-recordset-healthcheckid\"></a>\nIf you want Amazon Route 53 to return this resource record set in response to a DNS query only when the status of a health check is healthy, include the `HealthCheckId` element and specify the ID of the applicable health check\\.  \nRoute 53 determines whether a resource record set is healthy based on one of the following:  \n+ By periodically sending a request to the endpoint that is specified in the health check\n+ By aggregating the status of a specified group of health checks \\(calculated health checks\\)\n+ By determining the current state of a CloudWatch alarm \\(CloudWatch metric health checks\\)\nRoute 53 doesn't check the health of the endpoint that is specified in the resource record set, for example, the endpoint specified by the IP address in the `Value` element\\. When you add a `HealthCheckId` element to a resource record set, Route 53 checks the health of the endpoint that you specified in the health check\\. \nFor more information, see the following topics in the *Amazon Route 53 Developer Guide": "+  [How Amazon Route 53 Determines Whether an Endpoint Is Healthy](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html) \n+  [Route 53 Health Checks and DNS Failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html) \n **When to Specify HealthCheckId**   \nSpecifying a value for `HealthCheckId` is useful only when Route 53 is choosing between two or more resource record sets to respond to a DNS query, and you want Route 53 to base the choice in part on the status of a health check\\. Configuring health checks makes sense only in the following configurations:  \n+  **Non\\-alias resource record sets*"
        },
        "route53.recordset.1.setidentifier": {
            "Minimum": "1",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "route53.recordset.1.name": {
            "Required": "Yes",
            "Maximum": "1024",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.1.hostedzonename": {
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.recordset.1.geolocation": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.1.region": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.1.comment": {
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.1.aliastarget": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.1.multivalueanswer": {
            "UpdateRequires": "No interruption",
            "Required": "No",
            "Type": "Boolean",
            "MultiValueAnswer`  <a name=\"cfn-route53-recordset-multivalueanswer\"></a>\n *Multivalue answer resource record sets only": "To route traffic approximately randomly to multiple resources, such as web servers, create one multivalue answer record for each resource and specify `true` for `MultiValueAnswer`\\. Note the following:  \n+ If you associate a health check with a multivalue answer resource record set, Amazon Route 53 responds to DNS queries with the corresponding IP address only when the health check is healthy\\.\n+ If you don't associate a health check with a multivalue answer record, Route 53 always considers the record to be healthy\\.\n+ Route 53 responds to DNS queries with up to eight healthy records; if you have eight or fewer healthy records, Route 53 responds to all DNS queries with all the healthy records\\.\n+ If you have more than eight healthy records, Route 53 responds to different DNS resolvers with different combinations of healthy records\\.\n+ When all records are unhealthy, Route 53 responds to DNS queries with up to eight unhealthy records\\.\n+ If a resource becomes unavailable after a resolver caches a response, client software typically tries another of the IP addresses in the response\\.\nYou can't create multivalue answer alias records\\.",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "route53.recordset.1.hostedzoneid": {
            "Required": "No",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.recordset.1.ttl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.recordset.1.type": {
            "Type`  <a name=\"cfn-route53-recordset-type\"></a>\nThe DNS record type\\. For information about different record types and how data is encoded for them, see [Supported DNS Resource Record Types](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html) in the *Amazon Route 53 Developer Guide*\\.  \nValid values for basic resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `NS` \\| `PTR` \\| `SOA` \\| `SPF` \\| `SRV` \\| `TXT`   \nValues for weighted, latency, geolocation, and failover resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`\\. When creating a group of weighted, latency, geolocation, or failover resource record sets, specify the same value for all of the resource record sets in the group\\.  \nValid values for multivalue answer resource record sets: `A` \\| `AAAA` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`   \nSPF records were formerly used to verify the identity of the sender of email messages\\. However, we no longer recommend that you create resource record sets for which the value of `Type` is `SPF`\\. RFC 7208, *Sender Policy Framework \\(SPF\\) for Authorizing Use of Domains in Email, Version 1*, has been updated to say, \"\\.\\.\\.\\[I\\]ts existence and mechanism defined in \\[RFC4408\\] have led to some interoperability issues\\. Accordingly, its use is no longer appropriate for SPF version 1; implementations are not to use it\\.\" In RFC 7208, see section 14\\.1, [The SPF DNS Record Type](http://tools.ietf.org/html/rfc7208#section-14.1)\\.\nValues for alias resource record sets:  \n+  **Amazon API Gateway custom regional APIs and edge\\-optimized APIs:** `A` \n+  **CloudFront distributions:** `A` \n\n  If IPv6 is enabled for the distribution, create two resource record sets to route traffic to your distribution, one with a value of `A` and one with a value of `AAAA`\\. \n+  **Amazon API Gateway environment that has a regionalized subdomain*": "A` \n+  **ELB load balancers:** `A` \\| `AAAA` \n+  **Amazon S3 buckets:** `A` \n+  **Amazon Virtual Private Cloud interface VPC endpoints** `A` \n+  **Another resource record set in this hosted zone:** Specify the type of the resource record set that you're creating the alias for\\. All values are supported except `NS` and `SOA`\\.",
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.1.weight": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "route53.recordset.1.failover": {
            "Type": "String",
            "Required": "No",
            "Failover`  <a name=\"cfn-route53-recordset-failover\"></a>\n *Failover resource record sets only:* To configure failover, you add the `Failover` element to two resource record sets\\. For one resource record set, you specify `PRIMARY` as the value for `Failover`; for the other resource record set, you specify `SECONDARY`\\. In addition, you include the `HealthCheckId` element and specify the health check that you want Amazon Route 53 to perform for each resource record set\\.  \nExcept where noted, the following failover behaviors assume that you have included the `HealthCheckId` element in both resource record sets:  \n+ When the primary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the secondary resource record set\\.\n+ When the primary resource record set is unhealthy and the secondary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the secondary resource record set\\.\n+ When the secondary resource record set is unhealthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the primary resource record set\\.\n+ If you omit the `HealthCheckId` element for the secondary resource record set, and if the primary resource record set is unhealthy, Route 53 always responds to DNS queries with the applicable value from the secondary resource record set\\. This is true regardless of the health of the associated endpoint\\.\nYou can't create non\\-failover resource record sets that have the same values for the `Name` and `Type` elements as failover resource record sets\\.  \nFor failover alias resource record sets, you must also include the `EvaluateTargetHealth` element and set the value to true\\.  \nFor more information about configuring failover for Route 53, see the following topics in the *Amazon Route 53 Developer Guide": "+  [Route 53 Health Checks and DNS Failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html)",
            "UpdateRequires": "No interruption",
            "Allowed values": "PRIMARY | SECONDARY",
            "SampleValue": "example-string"
        },
        "waf.bytematchset.bytematchtuples.fieldtomatch.1.type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "waf.bytematchset.bytematchtuples.fieldtomatch.1.data": {
            "Pattern": ".*\\S.*",
            "Required": "Conditional",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "medialive.input.mediaconnectflowrequest.flowarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.fleet.ec2inboundpermission.fromport": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "Maximum": "60000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...60000",
            "CompliantValues": "1...60000"
        },
        "gamelift.fleet.ec2inboundpermission.toport": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "Maximum": "60000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...60000",
            "CompliantValues": "1...60000"
        },
        "gamelift.fleet.ec2inboundpermission.iprange": {
            "Pattern": "[^\\s]+",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.fleet.ec2inboundpermission.protocol": {
            "Allowed values": "TCP | UDP",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.singlequeryargument.name": {
            "Pattern": ".*\\S.*",
            "Required": "No",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "wafv2-rulegroup-singlequeryargument-properties": {
            "Name": {
                "Pattern": ".*\\S.*",
                "Required": "No",
                "Maximum": "64",
                "UpdateRequires": "No interruption",
                "Minimum": "1",
                "Type": "String",
                "AllowedValues": "1...64",
                "CompliantValues": "1...64"
            }
        },
        "wafv2.webacl.defaultaction.block": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.webacl.defaultaction.allow": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "iot.topicrule.elasticsearchaction.index": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.elasticsearchaction.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.elasticsearchaction.endpoint": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.elasticsearchaction.type": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.elasticsearchaction.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.rule.batcharrayproperties.size": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "opsworks.app.sslconfiguration.privatekey": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.app.sslconfiguration.certificate": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.app.sslconfiguration.chain": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.triggerconfig.triggertargetarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.triggerconfig.triggerevents": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.triggerconfig.triggername": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "config.organizationconfigrule.organizationmanagedrulemetadata.tagkeyscope": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "config.organizationconfigrule.organizationmanagedrulemetadata.resourceidscope": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "768",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...768",
            "CompliantValues": "1...768"
        },
        "config.organizationconfigrule.organizationmanagedrulemetadata.inputparameters": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "config.organizationconfigrule.organizationmanagedrulemetadata.tagvaluescope": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "config.organizationconfigrule.organizationmanagedrulemetadata.description": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "config.organizationconfigrule.organizationmanagedrulemetadata.maximumexecutionfrequency": {
            "Allowed values": "One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "config.organizationconfigrule.organizationmanagedrulemetadata.resourcetypesscope": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "100",
            "UpdateRequires": "No interruption"
        },
        "config.organizationconfigrule.organizationmanagedrulemetadata.ruleidentifier": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "msk.cluster.jmxexporter.enabledinbroker": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ses.receiptrule.snsaction.topicarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.snsaction.encoding": {
            "Allowed values": "Base64 | UTF-8",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dynamodb.provisionedthroughput.writecapacityunits": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "dynamodb.provisionedthroughput.readcapacityunits": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "config.configurationaggregator.accountaggregationsource.allawsregions": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "config.configurationaggregator.accountaggregationsource.accountids": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "config.configurationaggregator.accountaggregationsource.awsregions": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.virtualnodespec.backenddefaults": {
            "Required": "No",
            "Type": "BackendDefaults",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.virtualnodespec.backends": {
            "Required": "No",
            "Type": [
                "Backend"
            ],
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.virtualnodespec.logging": {
            "Required": "No",
            "Type": "Logging",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.virtualnodespec.servicediscovery": {
            "Required": "No",
            "Type": "ServiceDiscovery",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.virtualnodespec.listeners": {
            "Required": "No",
            "Type": [
                "Listener"
            ],
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.input.inputschema": {
            "Required": "Yes",
            "Type": "InputSchema",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.input.nameprefix": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "kinesisanalytics.application.input.inputprocessingconfiguration": {
            "Required": "No",
            "Type": "InputProcessingConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.input.kinesisstreamsinput": {
            "Required": "Conditional",
            "Type": "KinesisStreamsInput",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.input.inputparallelism": {
            "Required": "No",
            "Type": "InputParallelism",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.input.kinesisfirehoseinput": {
            "Required": "Conditional",
            "Type": "KinesisFirehoseInput",
            "UpdateRequires": "No interruption"
        },
        "ec2.clientvpnendpoint.directoryserviceauthenticationrequest.directoryid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetmaxconcurrencypercentage": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetfailuretolerancepercentage": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...100",
            "CompliantValues": "0...100"
        },
        "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetmaxconcurrencycount": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetregions": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetfailuretolerancecount": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetaccounts": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetoperationtype": {
            "Allowed values": "CREATE | DELETE | UPDATE",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.subscriptiondefinition.subscription.source": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.subscriptiondefinition.subscription.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.subscriptiondefinition.subscription.target": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.subscriptiondefinition.subscription.subject": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sns.policy.policydocument": {
            "Required": "Yes",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "sns.policy.topics": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.crawler.jdbctarget.path": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.crawler.jdbctarget.exclusions": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "glue.crawler.jdbctarget.connectionname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.sqlimatchstatement.texttransformations": {
            "Required": "Yes",
            "Type": [
                "TextTransformation"
            ],
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.sqlimatchstatement.fieldtomatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "w6408ab1c25c10d254c13c17.key": {
            "Required": "Yes",
            "Type": "String",
            "SampleValue": "example-string"
        },
        "w6408ab1c25c10d254c13c17.value": {
            "Required": "Yes",
            "Type": "String\n\n#"
        },
        "lambda.alias.versionweight.functionweight": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "lambda.alias.versionweight.functionversion": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.elbinfo.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.applicationreferencedatasource.referenceschema.recordcolumns": {
            "Required": "Yes",
            "Type": [
                "RecordColumn"
            ],
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationreferencedatasource.referenceschema.recordformat": {
            "Required": "Yes",
            "Type": "RecordFormat",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationreferencedatasource.referenceschema.recordencoding": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "robomaker.simulationapplication.renderingengine.name": {
            "Allowed values": "OGRE",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "robomaker.simulationapplication.renderingengine.version": {
            "Pattern": "1.x",
            "Required": "Yes",
            "Maximum": "4",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...4",
            "CompliantValues": "1...4"
        },
        "cw.alarm.alarmname": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cw.alarm.period": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cw.alarm.treatmissingdata": {
            "Minimum": "1",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cw.alarm.alarmactions": {
            "Required": "No",
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "cw.alarm.evaluatelowsamplecountpercentile": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cw.alarm.unit": {
            "Allowed values": "Bits | Bits/Second | Bytes | Bytes/Second | Count | Count/Second | Gigabits | Gigabits/Second | Gigabytes | Gigabytes/Second | Kilobits | Kilobits/Second | Kilobytes | Kilobytes/Second | Megabits | Megabits/Second | Megabytes | Megabytes/Second | Microseconds | Milliseconds | None | Percent | Seconds | Terabits | Terabits/Second | Terabytes | Terabytes/Second",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cw.alarm.datapointstoalarm": {
            "Minimum": "1",
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cw.alarm.dimensions": {
            "Required": "No",
            "Type": [
                "Dimension"
            ],
            "Maximum": "10",
            "UpdateRequires": "No interruption"
        },
        "cw.alarm.extendedstatistic": {
            "Pattern": "p(\\d{1,2}(\\.\\d{0,2})?|100)",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cw.alarm.metrics": {
            "Required": "No",
            "Type": [
                "MetricDataQuery"
            ],
            "UpdateRequires": "No interruption"
        },
        "cw.alarm.actionsenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cw.alarm.threshold": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "cw.alarm.insufficientdataactions": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "cw.alarm.alarmdescription": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...1024",
            "CompliantValues": "0...1024"
        },
        "cw.alarm.thresholdmetricid": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cw.alarm.metricname": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cw.alarm.comparisonoperator": {
            "Allowed values": "GreaterThanOrEqualToThreshold | GreaterThanThreshold | GreaterThanUpperThreshold | LessThanLowerOrGreaterThanUpperThreshold | LessThanLowerThreshold | LessThanOrEqualToThreshold | LessThanThreshold",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cw.alarm.okactions": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "cw.alarm.namespace": {
            "Pattern": "[^:].*",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cw.alarm.statistic": {
            "Allowed values": "Average | Maximum | Minimum | SampleCount | Sum",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cw.alarm.evaluationperiods": {
            "Minimum": "1",
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.rolearn": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.bufferinghints": {
            "Required": "No",
            "Type": "ElasticsearchBufferingHints",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.vpcconfiguration": {
            "Required": "No",
            "Type": "VpcConfiguration",
            "UpdateRequires": "Replacement"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.indexname": {
            "Pattern": ".*",
            "Required": "Yes",
            "Maximum": "80",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...80",
            "CompliantValues": "1...80"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.processingconfiguration": {
            "Required": "No",
            "Type": "ProcessingConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.cloudwatchloggingoptions": {
            "Required": "No",
            "Type": "CloudWatchLoggingOptions",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.typename": {
            "Pattern": ".*",
            "Required": "No",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...100",
            "CompliantValues": "0...100"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.indexrotationperiod": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.s3configuration": {
            "Required": "Yes",
            "Type": "S3DestinationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.clusterendpoint": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.s3backupmode": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.retryoptions": {
            "Required": "No",
            "Type": "ElasticsearchRetryOptions",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.domainarn": {
            "Pattern": "arn:.*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "iotanalytics.dataset.queryaction.sqlquery": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.queryaction.filters": {
            "Required": "No",
            "Type": [
                "Filter"
            ],
            "Maximum": "1",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.placement.availabilityzone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.placement.affinity": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.placement.tenancy": {
            "Allowed values": "dedicated | default | host",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.placement.groupname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.placement.spreaddomain": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.placement.hostresourcegrouparn": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.placement.hostid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.placement.partitionnumber": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "events.rule.target.kinesisparameters": {
            "Required": "No",
            "Type": "KinesisParameters",
            "UpdateRequires": "No interruption"
        },
        "events.rule.target.sqsparameters": {
            "Required": "No",
            "Type": "SqsParameters",
            "UpdateRequires": "No interruption"
        },
        "events.rule.target.inputpath": {
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.rule.target.rolearn": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1600",
            "CompliantValues": "1...1600"
        },
        "events.rule.target.inputtransformer": {
            "Required": "No",
            "Type": "InputTransformer",
            "UpdateRequires": "No interruption"
        },
        "events.rule.target.ecsparameters": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "events.rule.target.input": {
            "Required": "No",
            "Type": "String",
            "Maximum": "8192",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.rule.target.batchparameters": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "events.rule.target.runcommandparameters": {
            "Required": "No",
            "Type": "RunCommandParameters",
            "UpdateRequires": "No interruption"
        },
        "events.rule.target.id": {
            "Pattern": "[\\.\\-_A-Za-z0-9]+",
            "Required": "Yes",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "events.rule.target.httpparameters": {
            "Required": "No",
            "Type": "HttpParameters",
            "UpdateRequires": "No interruption"
        },
        "events.rule.target.arn": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1600",
            "CompliantValues": "1...1600"
        },
        "msk.cluster.brokernodegroupinfo.securitygroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "msk.cluster.brokernodegroupinfo.storageinfo": {
            "Required": "No",
            "Type": "StorageInfo",
            "UpdateRequires": "Replacement"
        },
        "msk.cluster.brokernodegroupinfo.instancetype": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "msk.cluster.brokernodegroupinfo.brokerazdistribution": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "msk.cluster.brokernodegroupinfo.clientsubnets": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "wafv2.rulegroup.statementone.ratebasedstatement": {
            "Required": "No",
            "Type": "RateBasedStatementOne",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementone.geomatchstatement": {
            "Required": "No",
            "Type": "GeoMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementone.regexpatternsetreferencestatement": {
            "Required": "No",
            "Type": "RegexPatternSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementone.sizeconstraintstatement": {
            "Required": "No",
            "Type": "SizeConstraintStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementone.bytematchstatement": {
            "Required": "No",
            "Type": "ByteMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementone.sqlimatchstatement": {
            "Required": "No",
            "Type": "SqliMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementone.ipsetreferencestatement": {
            "Required": "No",
            "Type": "IPSetReferenceStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementone.xssmatchstatement": {
            "Required": "No",
            "Type": "XssMatchStatement",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementone.notstatement": {
            "Required": "No",
            "Type": "NotStatementOne",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementone.orstatement": {
            "Required": "No",
            "Type": "OrStatementOne",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.statementone.andstatement": {
            "Required": "No",
            "Type": "AndStatementOne",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.scope": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.authorizationendpoint": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.clientsecret": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.clientid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.sessioncookiename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.tokenendpoint": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.onunauthenticatedrequest": {
            "Allowed values": "allow | authenticate | deny",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.userinfoendpoint": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.sessiontimeout": {
            "Required": "No",
            "Type": "Long",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.4"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.issuer": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.authenticationrequestextraparams": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "events.rule.inputtransformer.inputtemplate": {
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "8192",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...8192",
            "CompliantValues": "1...8192"
        },
        "events.rule.inputtransformer.inputpathsmap": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "backup.backupvault.notificationobjecttype.backupvaultevents": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "backup.backupvault.notificationobjecttype.snstopicarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.logginginfo.region": {
            "Minimum": "3",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "20",
            "UpdateRequires": "No interruption",
            "AllowedValues": "3...20",
            "CompliantValues": "3...20"
        },
        "ssm.maintenancewindowtask.logginginfo.s3prefix": {
            "Required": "No",
            "Type": "String",
            "Maximum": "500",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.logginginfo.s3bucket": {
            "Minimum": "3",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "63",
            "UpdateRequires": "No interruption",
            "AllowedValues": "3...63",
            "CompliantValues": "3...63"
        },
        "athena.workgroup.encryptionconfiguration.encryptionoption": {
            "Allowed values": "CSE_KMS | SSE_KMS | SSE_S3",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "athena.workgroup.encryptionconfiguration.kmskey": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.applicationoutput.output.name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "kinesisanalyticsv2.applicationoutput.output.lambdaoutput": {
            "Required": "No",
            "Type": "LambdaOutput",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationoutput.output.destinationschema": {
            "Required": "Yes",
            "Type": "DestinationSchema",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationoutput.output.kinesisstreamsoutput": {
            "Required": "No",
            "Type": "KinesisStreamsOutput",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationoutput.output.kinesisfirehoseoutput": {
            "Required": "No",
            "Type": "KinesisFirehoseOutput",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationtimevalue.minutes": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.route.grpcrouteaction.weightedtargets": {
            "Required": "Yes",
            "Type": [
                "WeightedTarget"
            ],
            "UpdateRequires": "No interruption"
        },
        "cloudwatch.alarm.metricstat.metric": {
            "Required": "Yes",
            "Type": "Metric",
            "UpdateRequires": "No interruption"
        },
        "cloudwatch.alarm.metricstat.stat": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cloudwatch.alarm.metricstat.period": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cloudwatch.alarm.metricstat.unit": {
            "Allowed values": "Bits | Bits/Second | Bytes | Bytes/Second | Count | Count/Second | Gigabits | Gigabits/Second | Gigabytes | Gigabytes/Second | Kilobits | Kilobits/Second | Kilobytes | Kilobytes/Second | Megabits | Megabits/Second | Megabytes | Megabytes/Second | Microseconds | Milliseconds | None | Percent | Seconds | Terabits | Terabits/Second | Terabytes | Terabytes/Second",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "msk.cluster.openmonitoring.prometheus": {
            "Required": "Yes",
            "Type": "Prometheus",
            "UpdateRequires": "No interruption"
        },
        "athena.workgroup.resultconfiguration.outputlocation": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "athena.workgroup.resultconfiguration.encryptionconfiguration": {
            "Required": "No",
            "Type": "EncryptionConfiguration",
            "UpdateRequires": "No interruption"
        },
        "rds.dbcluster.dbclusterrole.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.dbcluster.dbclusterrole.featurename": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.clientpolicytls.enforce": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "appmesh.virtualnode.clientpolicytls.ports": {
            "Required": "No",
            "Type": "List of Integer",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.clientpolicytls.validation": {
            "Required": "Yes",
            "Type": "TlsValidationContext",
            "UpdateRequires": "No interruption"
        },
        "budgets.budget.costtypes.useblended": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.costtypes.useamortized": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.costtypes.includesupport": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.costtypes.includerecurring": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.costtypes.includeupfront": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.costtypes.includesubscription": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.costtypes.includeothersubscription": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.costtypes.includecredit": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.costtypes.includetax": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.costtypes.includediscount": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.costtypes.includerefund": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "glue.securityconfiguration.cloudwatchencryption.kmskeyarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.securityconfiguration.cloudwatchencryption.cloudwatchencryptionmode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.customerrorresponse.errorcode": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cloudfront.distribution.customerrorresponse.responsepagepath": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.customerrorresponse.responsecode": {
            "Required": "Conditional",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cloudfront.distribution.customerrorresponse.errorcachingminttl": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "imagebuilder.imagepipeline.schedule.scheduleexpression": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "imagebuilder.imagepipeline.schedule.pipelineexecutionstartcondition": {
            "Allowed values": "EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE | EXPRESSION_MATCH_ONLY",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.instancefleetconfig.launchspecifications": {
            "Required": "No",
            "Type": "InstanceFleetProvisioningSpecifications",
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.instancefleetconfig.targetondemandcapacity": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.instancefleetconfig.targetspotcapacity": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.instancefleetconfig.instancetypeconfigs": {
            "Required": "No",
            "Type": [
                "InstanceTypeConfig"
            ],
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.instancefleetconfig.name": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "lambda.function.environment.variables": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.csvmappingparameters.recordcolumndelimiter": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.csvmappingparameters.recordrowdelimiter": {
            "Minimum": "1",
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "glue.table.tableinput.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "glue.table.tableinput.vieworiginaltext": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.tableinput.retention": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "glue.table.tableinput.owner": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.tableinput.description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.tableinput.partitionkeys": {
            "Required": "No",
            "Type": [
                "Column"
            ],
            "UpdateRequires": "No interruption"
        },
        "glue.table.tableinput.tabletype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.tableinput.parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "glue.table.tableinput.viewexpandedtext": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.tableinput.storagedescriptor": {
            "Required": "No",
            "Type": "StorageDescriptor",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.rule.visibilityconfig": {
            "Required": "Yes",
            "Type": "VisibilityConfig",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.rule.name": {
            "Pattern": "^[\\w\\-]+$",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafv2.webacl.rule.overrideaction": {
            "Required": "Conditional",
            "Type": "OverrideAction",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.rule.priority": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "wafv2.webacl.rule.statement": {
            "Required": "Yes",
            "Type": "StatementOne",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.rule.action": {
            "Required": "Conditional",
            "Type": "RuleAction",
            "UpdateRequires": "No interruption"
        },
        "efs.accesspoint.accesspointtag.key": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "efs.accesspoint.accesspointtag.value": {
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafregional.sqlinjectionmatchset.sqlinjectionmatchtuple.fieldtomatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafregional.sqlinjectionmatchset.sqlinjectionmatchtuple.texttransformation": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.httpactionheader.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.httpactionheader.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.tagspecification.tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.tagspecification.resourcetype": {
            "Allowed values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | elastic-gpu | elastic-ip | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | internet-gateway | key-pair | launch-template | local-gateway-route-table-vpc-association | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-flow-log | vpc-peering-connection | vpn-connection | vpn-gateway",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.targetgroup.targetgroupattribute.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.targetgroup.targetgroupattribute.key": {
            "Pattern": "^[a-zA-Z0-9._]+$",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.cpuoptions.corecount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.launchtemplate.launchtemplatedata.cpuoptions.threadspercore": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appconfig.configurationprofile.validators.content": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "32768",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...32768",
            "CompliantValues": "0...32768"
        },
        "appconfig.configurationprofile.validators.type": {
            "Allowed values": "JSON_SCHEMA | LAMBDA",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.message.timetolive": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "pinpoint.campaign.message.title": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.message.imagesmalliconurl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.message.silentpush": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "pinpoint.campaign.message.imageiconurl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.message.mediaurl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.message.action": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.message.imageurl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.message.url": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.message.rawcontent": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.message.jsonbody": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.message.body": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.healthcheck.healthcheckconfig.alarmidentifier": {
            "Required": "No",
            "Type": "AlarmIdentifier",
            "UpdateRequires": "No interruption"
        },
        "route53.healthcheck.healthcheckconfig.fullyqualifieddomainname": {
            "UpdateRequires": "No interruption",
            "Required": "No",
            "Type": "String",
            "Maximum": "255",
            "FullyQualifiedDomainName`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-fullyqualifieddomainname\"></a>\nAmazon Route 53 behavior depends on whether you specify a value for `IPAddress`\\.  \n **If you specify a value for** `IPAddress`:  \nAmazon Route 53 sends health check requests to the specified IPv4 or IPv6 address and passes the value of `FullyQualifiedDomainName` in the `Host` header for all health checks except TCP health checks\\. This is typically the fully qualified DNS name of the endpoint on which you want Route 53 to perform health checks\\.  \nWhen Route 53 checks the health of an endpoint, here is how it constructs the `Host` header:  \n+ If you specify a value of `80` for `Port` and `HTTP` or `HTTP_STR_MATCH` for `Type`, Route 53 passes the value of `FullyQualifiedDomainName` to the endpoint in the Host header\\. \n+ If you specify a value of `443` for `Port` and `HTTPS` or `HTTPS_STR_MATCH` for `Type`, Route 53 passes the value of `FullyQualifiedDomainName` to the endpoint in the `Host` header\\.\n+ If you specify another value for `Port` and any value except `TCP` for `Type`, Route 53 passes `FullyQualifiedDomainName:Port` to the endpoint in the `Host` header\\.\nIf you don't specify a value for `FullyQualifiedDomainName`, Route 53 substitutes the value of `IPAddress` in the `Host` header in each of the preceding cases\\.  \n **If you don't specify a value for `IPAddress` *": "Route 53 sends a DNS request to the domain that you specify for `FullyQualifiedDomainName` at the interval that you specify for `RequestInterval`\\. Using an IPv4 address that DNS returns, Route 53 then checks the health of the endpoint\\.  \nIf you don't specify a value for `IPAddress`, Route 53 uses only IPv4 to send health checks to the endpoint\\. If there's no record with a type of A for the name that you specify for `FullyQualifiedDomainName`, the health check fails with a \"DNS resolution failed\" error\\.\nIf you want to check the health of multiple records that have the same name and type, such as multiple weighted records, and if you choose to specify the endpoint only by `FullyQualifiedDomainName`, we recommend that you create a separate health check for each endpoint\\. For example, create a health check for each HTTP server that is serving content for www\\.example\\.com\\. For the value of `FullyQualifiedDomainName`, specify the domain name of the server \\(such as us\\-east\\-2\\-www\\.example\\.com\\), not the name of the records \\(www\\.example\\.com\\)\\.  \nIn this configuration, if you create a health check for which the value of `FullyQualifiedDomainName` matches the name of the records and you then associate the health check with those records, health check results will be unpredictable\\.\nIn addition, if the value that you specify for `Type` is `HTTP`, `HTTPS`, `HTTP_STR_MATCH`, or `HTTPS_STR_MATCH`, Route 53 passes the value of `FullyQualifiedDomainName` in the `Host` header, as it does when you specify a value for `IPAddress`\\. If the value of `Type` is `TCP`, Route 53 doesn't pass a `Host` header\\.",
            "SampleValue": "example-string"
        },
        "route53.healthcheck.healthcheckconfig.enablesni": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "route53.healthcheck.healthcheckconfig.searchstring": {
            "Required": "No",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.healthcheck.healthcheckconfig.childhealthchecks": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "256",
            "UpdateRequires": "No interruption"
        },
        "route53.healthcheck.healthcheckconfig.measurelatency": {
            "Required": "No",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "route53.healthcheck.healthcheckconfig.inverted": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "route53.healthcheck.healthcheckconfig.resourcepath": {
            "Required": "No",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.healthcheck.healthcheckconfig.regions": {
            "Required": "No",
            "Maximum": "64",
            "UpdateRequires": "No interruption"
        },
        "route53.healthcheck.healthcheckconfig.insufficientdatahealthstatus": {
            "Allowed values": "Healthy | LastKnownStatus | Unhealthy",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53.healthcheck.healthcheckconfig.failurethreshold": {
            "Minimum": "1",
            "Required": "No",
            "Maximum": "10",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...10",
            "CompliantValues": "1...10"
        },
        "route53.healthcheck.healthcheckconfig.healththreshold": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "route53.healthcheck.healthcheckconfig.port": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "65535",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...65535",
            "CompliantValues": "1...65535"
        },
        "route53.healthcheck.healthcheckconfig.ipaddress": {
            "Pattern": "(^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$|^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)",
            "Required": "No",
            "UpdateRequires": "No interruption",
            "IPAddress`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-ipaddress\"></a>\nThe IPv4 or IPv6 IP address of the endpoint that you want Amazon Route 53 to perform health checks on\\. If you don't specify a value for `IPAddress`, Route 53 sends a DNS request to resolve the domain name that you specify in `FullyQualifiedDomainName` at the interval that you specify in `RequestInterval`\\. Using an IP address returned by DNS, Route 53 then checks the health of the endpoint\\.  \nUse one of the following formats for the value of `IPAddress`:   \n+  **IPv4 address*": "four values between 0 and 255, separated by periods \\(\\.\\), for example, `192.0.2.44`\\.\n+  **IPv6 address*",
            "Type": "String",
            "Maximum": "45",
            "SampleValue": "example-string"
        },
        "route53.healthcheck.healthcheckconfig.requestinterval": {
            "Minimum": "10",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "30",
            "UpdateRequires": "Replacement",
            "AllowedValues": "10...30",
            "CompliantValues": "10...30"
        },
        "route53.healthcheck.healthcheckconfig.type": {
            "Type`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-type\"></a>\nThe type of health check that you want to create, which indicates how Amazon Route 53 determines whether an endpoint is healthy\\.  \nYou can't change the value of `Type` after you create a health check\\.\nYou can create the following types of health checks:  \n+  **HTTP*": "Route 53 tries to establish a TCP connection\\. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400\\.\n+  **HTTPS*",
            "*Important**  \nIf you specify `HTTPS` for the value of `Type`, the endpoint must support TLS v1\\.0 or later\\.\n+  **HTTP\\_STR\\_MATCH*": "Route 53 tries to establish a TCP connection\\. If successful, Route 53 submits an HTTP request and searches the first 5,120 bytes of the response body for the string that you specify in `SearchString`\\.\n+  **HTTPS\\_STR\\_MATCH*",
            "Required": "Yes",
            "Allowed values": "CALCULATED | CLOUDWATCH_METRIC | HTTP | HTTP_STR_MATCH | HTTPS | HTTPS_STR_MATCH | TCP",
            "UpdateRequires": "Replacement",
            "Type": "String",
            "SampleValue": "example-string"
        },
        "accessanalyzer.analyzer.filter.eq": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "accessanalyzer.analyzer.filter.neq": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "accessanalyzer.analyzer.filter.contains": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "accessanalyzer.analyzer.filter.property": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "accessanalyzer.analyzer.filter.exists": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.objectlockrule.defaultretention": {
            "Required": "No",
            "Type": "DefaultRetention",
            "UpdateRequires": "No interruption"
        },
        "beanstalk.option.settings.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "beanstalk.option.settings.namespace": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "beanstalk.option.settings.resourcename": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "beanstalk.option.settings.optionname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.maintenancewindowtask.taskinvocationparameters.maintenancewindowautomationparameters": {
            "Required": "No",
            "Type": "MaintenanceWindowAutomationParameters",
            "UpdateRequires": "No interruption"
        },
        "ssm.maintenancewindowtask.taskinvocationparameters.maintenancewindowruncommandparameters": {
            "Required": "No",
            "Type": "MaintenanceWindowRunCommandParameters",
            "UpdateRequires": "No interruption"
        },
        "ssm.maintenancewindowtask.taskinvocationparameters.maintenancewindowlambdaparameters": {
            "Required": "No",
            "Type": "MaintenanceWindowLambdaParameters",
            "UpdateRequires": "No interruption"
        },
        "ssm.maintenancewindowtask.taskinvocationparameters.maintenancewindowstepfunctionsparameters": {
            "Required": "No",
            "Type": "MaintenanceWindowStepFunctionsParameters",
            "UpdateRequires": "No interruption"
        },
        "sagemaker.coderepository.gitconfig.repositoryurl": {
            "Pattern": "^https://([^/]+)/?(.*)$",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "sagemaker.coderepository.gitconfig.branch": {
            "Pattern": "[^ ~^:?*\\[]+",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "sagemaker.coderepository.gitconfig.secretarn": {
            "Pattern": "arn:aws[a-z\\-]*:secretsmanager:[a-z0-9\\-]*:[0-9]{12}:secret:.*",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "events.rule.httpparameters.querystringparameters": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "events.rule.httpparameters.headerparameters": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "events.rule.httpparameters.pathparametervalues": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "pinpointemail.configurationset.trackingoptions.customredirectdomain": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.autoscalinggroup.lifecyclehookspecification.defaultresult": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "autoscaling.autoscalinggroup.lifecyclehookspecification.notificationmetadata": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "1023",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1023",
            "CompliantValues": "1...1023"
        },
        "autoscaling.autoscalinggroup.lifecyclehookspecification.rolearn": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1600",
            "CompliantValues": "1...1600"
        },
        "autoscaling.autoscalinggroup.lifecyclehookspecification.lifecyclehookname": {
            "Pattern": "[A-Za-z0-9\\-_\\/]+",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "autoscaling.autoscalinggroup.lifecyclehookspecification.notificationtargetarn": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...1600",
            "CompliantValues": "0...1600"
        },
        "autoscaling.autoscalinggroup.lifecyclehookspecification.heartbeattimeout": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "autoscaling.autoscalinggroup.lifecyclehookspecification.lifecycletransition": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.iottopicpublish.payload": {
            "Required": "No",
            "Type": "Payload",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.iottopicpublish.mqtttopic": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "cloudwatch.anomalydetector.configuration.excludedtimeranges": {
            "Required": "No",
            "Type": [
                "Range"
            ],
            "UpdateRequires": "No interruption"
        },
        "cloudwatch.anomalydetector.configuration.metrictimezone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.cors.corsrule.exposedheaders": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.cors.corsrule.id": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.cors.corsrule.allowedheaders": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.cors.corsrule.allowedmethods": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.cors.corsrule.maxage": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "s3.bucket.cors.corsrule.allowedorigins": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.processor.parameters": {
            "Required": "No",
            "Type": [
                "ProcessorParameter"
            ],
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.processor.type": {
            "Allowed values": "Lambda",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dynamodb.table.ssespecification.sseenabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "dynamodb.table.ssespecification.kmsmasterkeyid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dynamodb.table.ssespecification.ssetype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.configurationseteventdestination.dimensionconfiguration.defaultdimensionvalue": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.configurationseteventdestination.dimensionconfiguration.dimensionvaluesource": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.configurationseteventdestination.dimensionconfiguration.dimensionname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafregional.sizeconstraintset.fieldtomatch.data": {
            "Pattern": ".*\\S.*",
            "Required": "Conditional",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafregional.sizeconstraintset.fieldtomatch.type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.dnsservicediscovery.hostname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "efs.accesspoint.creationinfo.owneruid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "efs.accesspoint.creationinfo.permissions": {
            "Pattern": "^[0-7]{3,4}$",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "efs.accesspoint.creationinfo.ownergid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.kinesisstreamsourceconfiguration.rolearn": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "kinesisfirehose.deliverystream.kinesisstreamsourceconfiguration.kinesisstreamarn": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "kinesisfirehose.deliverystream.parquetserde.maxpaddingbytes": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisfirehose.deliverystream.parquetserde.writerversion": {
            "Allowed values": "V1 | V2",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.parquetserde.pagesizebytes": {
            "Minimum": "65536",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisfirehose.deliverystream.parquetserde.blocksizebytes": {
            "Minimum": "67108864",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisfirehose.deliverystream.parquetserde.compression": {
            "Allowed values": "GZIP | SNAPPY | UNCOMPRESSED",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.parquetserde.enabledictionarycompression": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticloadbalancingv2.targetgroup.matcher.httpcode": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.markettype": {
            "Allowed values": "spot",
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions": {
            "Required": "No",
            "Type": "SpotOptions",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.blockdevicemapping.virtualname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.blockdevicemapping.devicename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.blockdevicemapping.ebs": {
            "Required": "No",
            "Type": "Ebs",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.blockdevicemapping.nodevice": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.action.containeraction": {
            "Required": "No",
            "Type": "ContainerAction",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.action.actionname": {
            "Pattern": "^[a-zA-Z0-9_]+$",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.dataset.action.queryaction": {
            "Required": "No",
            "Type": "QueryAction",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.instancefleetconfig.ebsblockdeviceconfig.volumesperinstance": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "elasticmapreduce.instancefleetconfig.ebsblockdeviceconfig.volumespecification": {
            "Required": "Yes",
            "Type": "VolumeSpecification",
            "UpdateRequires": "Replacement"
        },
        "kinesisanalyticsv2.application.inputprocessingconfiguration.inputlambdaprocessor": {
            "Required": "No",
            "Type": "InputLambdaProcessor",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.projectfilesystemlocation.mountpoint": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.projectfilesystemlocation.type": {
            "Allowed values": "EFS",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.projectfilesystemlocation.location": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.projectfilesystemlocation.identifier": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.projectfilesystemlocation.mountoptions": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.onenter.events": {
            "Required": "No",
            "Type": [
                "Event"
            ],
            "UpdateRequires": "No interruption"
        },
        "cloudtrail.trail.eventselector.includemanagementevents": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudtrail.trail.eventselector.dataresources": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudtrail.trail.eventselector.readwritetype": {
            "Allowed values": "All | ReadOnly | WriteOnly",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.secondaryprivateipaddresscount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.associatepublicipaddress": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.deviceindex": {
            "Required": "Conditional",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses": {
            "Required": "No",
            "Type": [
                "PrivateIpAddressSpecification"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.groups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.subnetid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.networkinterfaceid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.ipv6addresscount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.deleteontermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.ipv6addresses": {
            "Required": "No",
            "Type": [
                "InstanceIpv6Address"
            ],
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.application.kinesisstreamsinput.rolearn": {
            "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisanalytics.application.kinesisstreamsinput.resourcearn": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "appmesh.virtualnode.listenertlscertificate.acm": {
            "Required": "No",
            "Type": "ListenerTlsAcmCertificate",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.listenertlscertificate.file": {
            "Required": "No",
            "Type": "ListenerTlsFileCertificate",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolriskconfigurationattachment.accounttakeoverriskconfigurationtype.notifyconfiguration": {
            "Required": "No",
            "Type": "NotifyConfigurationType",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolriskconfigurationattachment.accounttakeoverriskconfigurationtype.actions": {
            "Required": "Yes",
            "Type": "AccountTakeoverActionsType",
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.deploymentstyle.deploymenttype": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.deploymentstyle.deploymentoption": {
            "Allowed values": "WITH_TRAFFIC_CONTROL | WITHOUT_TRAFFIC_CONTROL",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.texttransformations.texttransformations": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-rulegroup-texttransformations-properties": {
            "TextTransformations": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "codebuild.project.vpcconfig.vpcid": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.vpcconfig.securitygroupids": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.vpcconfig.subnets": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "16",
            "UpdateRequires": "No interruption"
        },
        "cassandra.table.provisionedthroughput.writecapacityunits": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cassandra.table.provisionedthroughput.readcapacityunits": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.s3action.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.s3action.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.s3action.bucketname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.forwardconfig.targetgroups": {
            "Required": "No",
            "Type": [
                "TargetGroupTuple"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.forwardconfig.targetgroupstickinessconfig": {
            "Required": "No",
            "Type": "TargetGroupStickinessConfig",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.targetgroupsconfig.targetgroups": {
            "Required": "Yes",
            "Type": [
                "TargetGroup"
            ],
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.notificationconfig.topicconfig.filter": {
            "Required": "No",
            "Type": "NotificationFilter",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.notificationconfig.topicconfig.topic": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.notificationconfig.topicconfig.event": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.encryptionconfiguration.replicakmskeyid": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "msk.cluster.encryptioninfo.encryptionatrest": {
            "Required": "No",
            "Type": "EncryptionAtRest",
            "UpdateRequires": "Replacement"
        },
        "msk.cluster.encryptioninfo.encryptionintransit": {
            "Required": "No",
            "Type": "EncryptionInTransit",
            "UpdateRequires": "Replacement"
        },
        "elasticsearch.domain.zoneawarenessconfig.availabilityzonecount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "iam.group.path": {
            "Pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "iam.group.managedpolicyarns": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "iam.group.groupname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "iam.group.policies": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationreferencedatasource.referencedatasource.s3referencedatasource": {
            "Required": "No",
            "Type": "S3ReferenceDataSource",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalytics.applicationreferencedatasource.referencedatasource.tablename": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "kinesisanalytics.applicationreferencedatasource.referencedatasource.referenceschema": {
            "Required": "Yes",
            "Type": "ReferenceSchema",
            "UpdateRequires": "No interruption"
        },
        "w6408ab1c19c15c15c27c27b7.parameterlogicalid": {
            "Required": "No"
        },
        "glue.mltransform.inputrecordtables.gluetables.databasename": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.mltransform.inputrecordtables.gluetables.catalogid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.mltransform.inputrecordtables.gluetables.tablename": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.mltransform.inputrecordtables.gluetables.connectionname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "route53resolver.resolverendpoint.ipaddressrequest.ip": {
            "Minimum": "7",
            "Required": "No",
            "Type": "String",
            "Maximum": "36",
            "UpdateRequires": "No interruption",
            "AllowedValues": "7...36",
            "CompliantValues": "7...36"
        },
        "route53resolver.resolverendpoint.ipaddressrequest.subnetid": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "events.rule.batchparameters.jobdefinition": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.rule.batchparameters.jobname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.rule.batchparameters.retrystrategy": {
            "Required": "No",
            "Type": "BatchRetryStrategy",
            "UpdateRequires": "No interruption"
        },
        "events.rule.batchparameters.arrayproperties": {
            "Required": "No",
            "Type": "BatchArrayProperties",
            "UpdateRequires": "No interruption"
        },
        "rds.dbcluster.scalingconfiguration.secondsuntilautopause": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "rds.dbcluster.scalingconfiguration.maxcapacity": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "rds.dbcluster.scalingconfiguration.mincapacity": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "rds.dbcluster.scalingconfiguration.autopause": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "iot.topicrule.dynamodbaction.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.dynamodbaction.payloadfield": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.dynamodbaction.rangekeyvalue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.dynamodbaction.hashkeyvalue": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.dynamodbaction.hashkeytype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.dynamodbaction.rangekeytype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.dynamodbaction.hashkeyfield": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.dynamodbaction.tablename": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.dynamodbaction.rangekeyfield": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.applicationoutput.destinationschema.recordformattype": {
            "Allowed values": "CSV | JSON",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.loggerdefinition.loggerdefinitionversion.loggers": {
            "Required": "Yes",
            "Type": [
                "Logger"
            ],
            "UpdateRequires": "Replacement"
        },
        "gamelift.gamesessionqueue.destination.destinationarn": {
            "Pattern": "[a-zA-Z0-9:/-]+",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "pinpoint.pushtemplate.apnspushnotificationtemplate.title": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.apnspushnotificationtemplate.sound": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.apnspushnotificationtemplate.body": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.apnspushnotificationtemplate.mediaurl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.apnspushnotificationtemplate.url": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.pushtemplate.apnspushnotificationtemplate.action": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.targetgroupinfo.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "certificatemanager.certificate.domainvalidationoption.validationdomain": {
            "Pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
            "Required": "No",
            "Maximum": "253",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...253",
            "CompliantValues": "1...253"
        },
        "certificatemanager.certificate.domainvalidationoption.hostedzoneid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "certificatemanager.certificate.domainvalidationoption.domainname": {
            "Pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
            "Required": "Yes",
            "Maximum": "253",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...253",
            "CompliantValues": "1...253"
        },
        "kinesisanalyticsv2.application.input.nameprefix": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "kinesisanalyticsv2.application.input.kinesisstreamsinput": {
            "Required": "No",
            "Type": "KinesisStreamsInput",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.input.kinesisfirehoseinput": {
            "Required": "No",
            "Type": "KinesisFirehoseInput",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.input.inputparallelism": {
            "Required": "No",
            "Type": "InputParallelism",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.input.inputprocessingconfiguration": {
            "Required": "No",
            "Type": "InputProcessingConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.input.inputschema": {
            "Required": "Yes",
            "Type": "InputSchema",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskdefinition.containerdefinitions.hostentry.ipaddress": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.hostentry.hostname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "gamelift.alias.routingstrategy.fleetid": {
            "Pattern": "^fleet-\\S+",
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.alias.routingstrategy.type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "gamelift.alias.routingstrategy.message": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dlm.lifecyclepolicy.crossregioncopyrule.copytags": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "dlm.lifecyclepolicy.crossregioncopyrule.encrypted": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "dlm.lifecyclepolicy.crossregioncopyrule.cmkarn": {
            "Pattern": "arn:aws(-[a-z]{1,3}){0,2}:kms:([a-z]+-){2,3}\\d:\\d+:key/.*",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...2048",
            "CompliantValues": "0...2048"
        },
        "dlm.lifecyclepolicy.crossregioncopyrule.retainrule": {
            "Required": "No",
            "Type": "CrossRegionCopyRetainRule",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.crossregioncopyrule.targetregion": {
            "Pattern": "([a-z]+-){2,3}\\d",
            "Required": "Yes",
            "Maximum": "16",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...16",
            "CompliantValues": "0...16"
        },
        "apitgateway.method.methodresponse.responseparameters": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.methodresponse.responsemodels": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "apitgateway.method.methodresponse.statuscode": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpoolriskconfigurationattachment.notifyemailtype.subject": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
            "Required": "Yes",
            "Maximum": "140",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...140",
            "CompliantValues": "1...140"
        },
        "cognito.userpoolriskconfigurationattachment.notifyemailtype.htmlbody": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]+",
            "Required": "No",
            "Maximum": "20000",
            "UpdateRequires": "No interruption",
            "Minimum": "6",
            "Type": "String",
            "AllowedValues": "6...20000",
            "CompliantValues": "6...20000"
        },
        "cognito.userpoolriskconfigurationattachment.notifyemailtype.textbody": {
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]+",
            "Required": "No",
            "Maximum": "20000",
            "UpdateRequires": "No interruption",
            "Minimum": "6",
            "Type": "String",
            "AllowedValues": "6...20000",
            "CompliantValues": "6...20000"
        },
        "opsworks.instance.timebasedautoscaling.monday": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.instance.timebasedautoscaling.thursday": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.instance.timebasedautoscaling.sunday": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.instance.timebasedautoscaling.wednesday": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.instance.timebasedautoscaling.tuesday": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.instance.timebasedautoscaling.saturday": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "opsworks.instance.timebasedautoscaling.friday": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.lambda.lambdaname": {
            "Pattern": "^[a-zA-Z0-9_-]+$",
            "Required": "No",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "iotanalytics.pipeline.lambda.batchsize": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "1000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1000",
            "CompliantValues": "1...1000"
        },
        "iotanalytics.pipeline.lambda.next": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.lambda.name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "eks.cluster.encryptionconfig.resources": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "eks.cluster.encryptionconfig.provider": {
            "Required": "No",
            "Type": "Provider",
            "UpdateRequires": "No interruption"
        },
        "gamelift.fleet.certificateconfiguration.certificatetype": {
            "Allowed values": "DISABLED | GENERATED",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificate.validity.value": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "acmpca.certificate.validity.type": {
            "Required": "Yes",
            "UpdateRequires": "Replacement"
        },
        "wafv2.webacl.statementthrees.statementthrees": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-webacl-statementthrees-properties": {
            "StatementThrees": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2.elb.AppCookieStickinessPolicy.cookiename": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.AppCookieStickinessPolicy.policyname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.stackconfigmanager.version": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.stackconfigmanager.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.redshiftretryoptions.durationinseconds": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "7200",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...7200",
            "CompliantValues": "0...7200"
        },
        "pinpoint.segment.segmentdimensions.demographic": {
            "Required": "No",
            "Type": "Demographic",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.behavior": {
            "Required": "No",
            "Type": "Behavior",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.location": {
            "Required": "No",
            "Type": "Location",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentdimensions.userattributes": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "pinpoint.segment.segmentdimensions.metrics": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "pinpoint.segment.segmentdimensions.attributes": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "s3.bucket.accelerateconfiguration.accelerationstatus": {
            "Allowed values": "Enabled | Suspended",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.firehose.separator": {
            "Pattern": "([\\n\\t])|(\\r\\n)|(,)",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.firehose.payload": {
            "Required": "No",
            "Type": "Payload",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.firehose.deliverystreamname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.organization": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.generationqualifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.surname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.title": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.serialnumber": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.pseudonym": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.commonname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.country": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.initials": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.organizationalunit": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.distinguishednamequalifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.locality": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.state": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "acmpca.certificateauthority.subject.givenname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.volumes.host.sourcepath": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "msk.cluster.ebsstorageinfo.volumesize": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "iam.policy.policydocument": {
            "Pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
            "Required": "Yes",
            "Maximum": "131072",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "Json",
            "AllowedValues": "1...131072",
            "CompliantValues": "1...131072"
        },
        "iam.policy.policyname": {
            "Pattern": "[\\w+=,.@-]+",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.addattributes.next": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.addattributes.name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.addattributes.attributes": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "beanstalk.environment.versionlabel": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "beanstalk.environment.tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "beanstalk.environment.environmentname": {
            "Minimum": "4",
            "Required": "No",
            "Type": "String",
            "Maximum": "40",
            "UpdateRequires": "Replacement",
            "AllowedValues": "4...40",
            "CompliantValues": "4...40"
        },
        "beanstalk.environment.description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "200",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "beanstalk.environment.templatename": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "beanstalk.environment.applicationname": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "beanstalk.environment.platformarn": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "beanstalk.environment.tier": {
            "Required": "No",
            "Type": "Tier",
            "UpdateRequires": "Some interruptions"
        },
        "beanstalk.environment.optionsettings": {
            "Required": "No",
            "Type": [
                "OptionSetting"
            ],
            "UpdateRequires": "No interruption"
        },
        "beanstalk.environment.solutionstackname": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "beanstalk.environment.cnameprefix": {
            "Minimum": "4",
            "Required": "No",
            "Type": "String",
            "Maximum": "63",
            "UpdateRequires": "Replacement",
            "AllowedValues": "4...63",
            "CompliantValues": "4...63"
        },
        "glue.partition.serdeinfo.serializationlibrary": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.serdeinfo.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.partition.serdeinfo.parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "servicediscovery.service.healthcheckcustomconfig.failurethreshold": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Double",
            "Maximum": "10",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...10",
            "CompliantValues": "1...10"
        },
        "cassandra.table.clusteringkeycolumn.orderby": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "cassandra.table.clusteringkeycolumn.column": {
            "Required": "Yes",
            "Type": "Column",
            "UpdateRequires": "Replacement"
        },
        "pinpoint.campaign.writetreatmentresource.treatmentdescription": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.writetreatmentresource.messageconfiguration": {
            "Required": "No",
            "Type": "MessageConfiguration",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.writetreatmentresource.sizepercent": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "pinpoint.campaign.writetreatmentresource.treatmentname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.writetreatmentresource.schedule": {
            "Required": "No",
            "Type": "Schedule",
            "UpdateRequires": "No interruption"
        },
        "waf.xssmatchset.xssmatchtuple.fieldtomatch.type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "waf.xssmatchset.xssmatchtuple.fieldtomatch.data": {
            "Pattern": ".*\\S.*",
            "Required": "Conditional",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafregional.webacl.rule.action": {
            "Required": "Yes",
            "Type": "Action",
            "UpdateRequires": "No interruption"
        },
        "wafregional.webacl.rule.ruleid": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafregional.webacl.rule.priority": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "codedeploy.deploymentgroup.alarmconfiguration.ignorepollalarmfailure": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "codedeploy.deploymentgroup.alarmconfiguration.alarms": {
            "Required": "No",
            "Type": [
                "Alarm"
            ],
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.alarmconfiguration.enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "dms.endpoint.elasticsearchsettings.errorretryduration": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "dms.endpoint.elasticsearchsettings.fullloaderrorpercentage": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "dms.endpoint.elasticsearchsettings.serviceaccessrolearn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dms.endpoint.elasticsearchsettings.endpointuri": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "stepfunctions.statemachine.s3location.version": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "stepfunctions.statemachine.s3location.bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "stepfunctions.statemachine.s3location.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.artifactstore.encryptionkey.type": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.artifactstore.encryptionkey.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.configurationseteventdestination.cloudwatchdestination.dimensionconfigurations": {
            "Required": "No",
            "Type": [
                "DimensionConfiguration"
            ],
            "UpdateRequires": "No interruption"
        },
        "config.configrule.source.sourcedetails.maximumexecutionfrequency": {
            "Allowed values": "One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "config.configrule.source.sourcedetails.messagetype": {
            "Allowed values": "ConfigurationItemChangeNotification | ConfigurationSnapshotDeliveryCompleted | OversizedConfigurationItemChangeNotification | ScheduledNotification",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "config.configrule.source.sourcedetails.eventsource": {
            "Allowed values": "aws.config",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.audiolanguageselection.languageselectionpolicy": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.audiolanguageselection.languagecode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.segment.segmentdimensions.behavior.recency": {
            "Required": "No",
            "Type": "Recency",
            "UpdateRequires": "No interruption"
        },
        "apigatewayv2.integration.tlsconfig.servernametoverify": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "imagebuilder.infrastructureconfiguration.logging.s3logs": {
            "Required": "No",
            "Type": "S3Logs",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.ipv6add.ipv6address": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "lambda.function.deadletterconfig.targetarn": {
            "Pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.timeoutdurationminutes": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.timeoutaction": {
            "Allowed values": "SWITCH_TO_ON_DEMAND | TERMINATE_CLUSTER",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.blockdurationminutes": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "iotevents.detectormodel.settimer.seconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "iotevents.detectormodel.settimer.durationexpression": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "iotevents.detectormodel.settimer.timername": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "appmesh.mesh.egressfilter.type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.policydetails.schedules": {
            "Required": "Yes",
            "Type": [
                "Schedule"
            ],
            "Maximum": "1",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.policydetails.targettags": {
            "Required": "Yes",
            "Type": [
                "Tag"
            ],
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.policydetails.parameters": {
            "Required": "No",
            "Type": "Parameters",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.policydetails.resourcetypes": {
            "Required": "Yes",
            "Type": "List of String",
            "Maximum": "1",
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.policydetails.policytype": {
            "Allowed values": "EBS_SNAPSHOT_MANAGEMENT",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.datasource.httpconfig.authorizationconfig": {
            "Required": "No",
            "Type": "AuthorizationConfig",
            "UpdateRequires": "No interruption"
        },
        "appsync.datasource.httpconfig.endpoint": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "mediastore.container.corsrule.exposeheaders": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "100",
            "UpdateRequires": "No interruption"
        },
        "mediastore.container.corsrule.allowedorigins": {
            "Required": "No",
            "Maximum": "100",
            "UpdateRequires": "No interruption"
        },
        "mediastore.container.corsrule.maxageseconds": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "2147483647",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...2147483647",
            "CompliantValues": "0...2147483647"
        },
        "mediastore.container.corsrule.allowedheaders": {
            "Required": "No",
            "Maximum": "100",
            "UpdateRequires": "No interruption"
        },
        "mediastore.container.corsrule.allowedmethods": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "4",
            "UpdateRequires": "Replacement"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.bucketarn": {
            "Pattern": "arn:.*",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.prefix": {
            "Pattern": ".*",
            "Minimum": "0",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...1024",
            "CompliantValues": "0...1024"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.encryptionconfiguration": {
            "Required": "No",
            "Type": "EncryptionConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.compressionformat": {
            "Allowed values": "GZIP | HADOOP_SNAPPY | Snappy | UNCOMPRESSED | ZIP",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.dataformatconversionconfiguration": {
            "Required": "No",
            "Type": "DataFormatConversionConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.rolearn": {
            "Pattern": "arn:.*",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.cloudwatchloggingoptions": {
            "Required": "No",
            "Type": "CloudWatchLoggingOptions",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.s3backupmode": {
            "Allowed values": "Disabled | Enabled",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.processingconfiguration": {
            "Required": "No",
            "Type": "ProcessingConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.s3backupconfiguration": {
            "Required": "No",
            "Type": "S3DestinationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.bufferinghints": {
            "Required": "No",
            "Type": "BufferingHints",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.erroroutputprefix": {
            "Pattern": ".*",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...1024",
            "CompliantValues": "0...1024"
        },
        "appmesh.virtualnode.awscloudmapservicediscovery.attributes": {
            "Required": "No",
            "Type": [
                "AwsCloudMapInstanceAttribute"
            ],
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.awscloudmapservicediscovery.namespacename": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.awscloudmapservicediscovery.servicename": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudwatch.alarm.metric.dimensions": {
            "Required": "No",
            "Type": [
                "Dimension"
            ],
            "Maximum": "10",
            "UpdateRequires": "No interruption"
        },
        "cloudwatch.alarm.metric.metricname": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cloudwatch.alarm.metric.namespace": {
            "Pattern": "[^:].*",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "ecs.cluster.clustersettings.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.cluster.clustersettings.name": {
            "Allowed values": "containerInsights",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waf.bytematchset.bytematchtuples.fieldtomatch.type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "waf.bytematchset.bytematchtuples.fieldtomatch.data": {
            "Pattern": ".*\\S.*",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "pinpoint.segment.segmentgroups.groups": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.segmentgroups.include": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.action.workmailaction": {
            "Required": "No",
            "Type": "WorkmailAction",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.action.addheaderaction": {
            "Required": "No",
            "Type": "AddHeaderAction",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.action.stopaction": {
            "Required": "No",
            "Type": "StopAction",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.action.snsaction": {
            "Required": "No",
            "Type": "SNSAction",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.action.s3action": {
            "Required": "No",
            "Type": "S3Action",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.action.bounceaction": {
            "Required": "No",
            "Type": "BounceAction",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.action.lambdaaction": {
            "Required": "No",
            "Type": "LambdaAction",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.captionselector.selectorsettings": {
            "Required": "No",
            "Type": "CaptionSelectorSettings",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.captionselector.languagecode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.captionselector.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.deletemarkerreplication.status": {
            "Allowed values": "Disabled | Enabled",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "as.policy.minadjustmentmagnitude": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.policy.policytype": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "as.policy.stepadjustments": {
            "Required": "Conditional",
            "Type": [
                "StepAdjustment"
            ],
            "UpdateRequires": "No interruption"
        },
        "as.policy.metricaggregationtype": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...32",
            "CompliantValues": "1...32"
        },
        "as.policy.autoscalinggroupname": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.policy.adjustmenttype": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "Conditional",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.policy.targettrackingconfiguration": {
            "Required": "Conditional",
            "Type": "TargetTrackingConfiguration",
            "UpdateRequires": "No interruption"
        },
        "as.policy.cooldown": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "as.policy.estimatedinstancewarmup": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "as.policy.scalingadjustment": {
            "Required": "Conditional",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "s3.bucket.replicationconfiguration.rules.destination.replicationtime": {
            "Required": "No",
            "Type": "ReplicationTime",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.rules.destination.encryptionconfiguration": {
            "Required": "No",
            "Type": "EncryptionConfiguration",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.rules.destination.bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.replicationconfiguration.rules.destination.storageclass": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.rules.destination.account": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.rules.destination.metrics": {
            "Required": "No",
            "Type": "Metrics",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.rules.destination.accesscontroltranslation": {
            "Required": "No",
            "Type": "AccessControlTranslation",
            "UpdateRequires": "No interruption"
        },
        "secretsmanager.secret.generatesecretstring.excludenumbers": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "secretsmanager.secret.generatesecretstring.excludepunctuation": {},
        "secretsmanager.secret.generatesecretstring.excludecharacters": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "4096",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...4096",
            "CompliantValues": "0...4096"
        },
        "secretsmanager.secret.generatesecretstring.excludelowercase": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "resourcegroups.group.query.resourcetypefilters": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "resourcegroups.group.query.tagfilters": {},
        "resourcegroups.group.query.stackidentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "resourcegroups.group.query.tagfilter": {
            "Required": "Conditional",
            "Type": [
                "TagFilter"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticsearch.domain.nodetonodeencryptionoptions.enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.blockemail": {
            "Required": "No",
            "Type": "NotifyEmailType",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.mfaemail": {
            "Required": "No",
            "Type": "NotifyEmailType",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.sourcearn": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.noactionemail": {
            "Required": "No",
            "Type": "NotifyEmailType",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.from": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.replyto": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.datastore.datastorestorage.servicemanageds3": {
            "Required": "No",
            "Type": "ServiceManagedS3",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.datastore.datastorestorage.customermanageds3": {
            "Required": "No",
            "Type": "CustomerManagedS3",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.instancetypeconfig.instancetype": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "elasticmapreduce.cluster.instancetypeconfig.bidpriceaspercentageofondemandprice": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "Replacement",
            "SampleValue": "123.45"
        },
        "elasticmapreduce.cluster.instancetypeconfig.weightedcapacity": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.instancetypeconfig.bidprice": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.instancetypeconfig.configurations": {
            "Required": "No",
            "Type": [
                "Configuration"
            ],
            "UpdateRequires": "Replacement"
        },
        "elasticmapreduce.cluster.instancetypeconfig.ebsconfiguration": {
            "Required": "No",
            "Type": "EbsConfiguration",
            "UpdateRequires": "Replacement"
        },
        "elasticache.replicationgroup.nodegroupconfiguration.replicaavailabilityzones": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "elasticache.replicationgroup.nodegroupconfiguration.primaryavailabilityzone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticache.replicationgroup.nodegroupconfiguration.replicacount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "elasticache.replicationgroup.nodegroupconfiguration.slots": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticache.replicationgroup.nodegroupconfiguration.nodegroupid": {
            "Pattern": "\\d+",
            "Required": "No",
            "Maximum": "4",
            "UpdateRequires": "Some interruptions",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...4",
            "CompliantValues": "1...4"
        },
        "appmesh.virtualnode.tlsvalidationcontext.trust": {
            "Required": "Yes",
            "Type": "TlsValidationContextTrust",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.rules": {
            "Required": "Yes",
            "Type": [
                "ReplicationRule"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.replicationconfiguration.role": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "glue.trigger.predicate.logical": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.trigger.predicate.conditions": {
            "Required": "No",
            "Type": [
                "Condition"
            ],
            "UpdateRequires": "No interruption"
        },
        "imagebuilder.distributionconfiguration.distribution.licenseconfigurationarns": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "imagebuilder.distributionconfiguration.distribution.amidistributionconfiguration": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "imagebuilder.distributionconfiguration.distribution.region": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "iot.topicrule.putassetpropertyvalueentry.propertyid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.putassetpropertyvalueentry.entryid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.putassetpropertyvalueentry.assetid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.putassetpropertyvalueentry.propertyvalues": {
            "Required": "Yes",
            "Type": [
                "AssetPropertyValue"
            ],
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.putassetpropertyvalueentry.propertyalias": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.videoselectorpid.pid": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cognito.identitypoolroleattachment.rolemapping.ambiguousroleresolution": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypoolroleattachment.rolemapping.identityprovider": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypoolroleattachment.rolemapping.type": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypoolroleattachment.rolemapping.rulesconfiguration": {
            "Required": "No",
            "Type": "RulesConfigurationType",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.ruleaction.count": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.rulegroup.ruleaction.allow": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "wafv2.rulegroup.ruleaction.block": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "eks.cluster.resourcesvpcconfig.subnetids": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "eks.cluster.resourcesvpcconfig.securitygroupids": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "iam.user.policies": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "iam.user.permissionsboundary": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iam.user.loginprofile": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "iam.user.tags": {
            "Required": "No",
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "iam.user.managedpolicyarns": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "iam.user.groups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "iam.user.path": {
            "Pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "iam.user.username": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.listenertls.certificate": {
            "Required": "Yes",
            "Type": "ListenerTlsCertificate",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.listenertls.mode": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "appsync.graphqlapi.userpoolconfig.userpoolid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.userpoolconfig.appidclientregex": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.userpoolconfig.awsregion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.userpoolconfig.defaultaction": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.crawler.s3target.path": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.crawler.s3target.exclusions": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ssm.association.s3outputlocation.outputs3bucketname": {
            "Minimum": "3",
            "Required": "No",
            "Type": "String",
            "Maximum": "63",
            "UpdateRequires": "No interruption",
            "AllowedValues": "3...63",
            "CompliantValues": "3...63"
        },
        "ssm.association.s3outputlocation.outputs3region": {
            "Minimum": "3",
            "Required": "No",
            "Type": "String",
            "Maximum": "20",
            "UpdateRequires": "No interruption",
            "AllowedValues": "3...20",
            "CompliantValues": "3...20"
        },
        "ssm.association.s3outputlocation.outputs3keyprefix": {
            "Required": "No",
            "Type": "String",
            "Maximum": "500",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "stepfunctions.statemachine.tagsentry.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "stepfunctions.statemachine.tagsentry.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.missionprofile.dataflowedge.source": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.missionprofile.dataflowedge.destination": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ssm.patchbaseline.patchfilter.key": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ssm.patchbaseline.patchfilter.values": {
            "Required": "No",
            "Maximum": "20",
            "UpdateRequires": "No interruption"
        },
        "acmpca.certificateauthority.revocationconfiguration.crlconfiguration": {
            "Required": "No",
            "Type": "CrlConfiguration",
            "UpdateRequires": "No interruption"
        },
        "apigateway.stage.accesslogsetting.format": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.stage.accesslogsetting.destinationarn": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "fms.policy.policytag.key": {
            "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "fms.policy.policytag.value": {
            "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "msk.cluster.cloudwatchlogs.enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "msk.cluster.cloudwatchlogs.loggroup": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.database.instance.domain": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.autominorversionupgrade": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Some interruptions",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.charactersetname": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "rds.database.instance.dbparametergroupname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "rds.database.instance.copytagstosnapshot": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.associatedroles": {
            "Required": "No",
            "Type": [
                "DBInstanceRole"
            ],
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.allocatedstorage": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.database.instance.deletionprotection": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.performanceinsightskmskeyid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "rds.database.instance.preferredbackupwindow": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.dbname": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "rds.database.instance.dbsnapshotidentifier": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "rds.database.instance.enableperformanceinsights": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.preferredmaintenancewindow": {
            "Required": "No",
            "UpdateRequires": "Some interruptions"
        },
        "rds.database.instance.port": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "rds.database.instance.storagetype": {
            "Required": "No",
            "UpdateRequires": "Some interruptions"
        },
        "rds.database.instance.maxallocatedstorage": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "rds.database.instance.usedefaultprocessorfeatures": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.sourcedbinstanceidentifier": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "rds.database.instance.allowmajorversionupgrade": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.backupretentionperiod": {
            "Required": "No",
            "UpdateRequires": "Some interruptions"
        },
        "rds.database.instance.cacertificateidentifier": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.publiclyaccessible": {
            "Required": "No",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.engineversion": {
            "Required": "No",
            "UpdateRequires": "Some interruptions"
        },
        "rds.database.instance.tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.processorfeatures": {
            "Required": "No",
            "Type": [
                "ProcessorFeature"
            ],
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.enablecloudwatchlogsexports": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.enableiamdatabaseauthentication": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.engine": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "rds.database.instance.kmskeyid": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "rds.database.instance.monitoringrolearn": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.dbsecuritygroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.multiaz": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Some interruptions",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.dbinstanceidentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "rds.database.instance.timezone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "rds.database.instance.dbclusteridentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "rds.database.instance.dbinstanceclass": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.masterusername": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "rds.database.instance.promotiontier": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.deleteautomatedbackups": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.vpcsecuritygroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.licensemodel": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.database.instance.monitoringinterval": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "1"
        },
        "rds.database.instance.domainiamrolename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.database.instance.storageencrypted": {
            "Required": "No",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.database.instance.iops": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.masteruserpassword": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "rds.database.instance.optiongroupname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.database.instance.sourceregion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "rds.database.instance.availabilityzone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "rds.database.instance.dbsubnetgroupname": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "rds.database.instance.performanceinsightsretentionperiod": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "iotanalytics.dataset.datasetcontentdeliveryruledestination.ioteventsdestinationconfiguration": {
            "Required": "No",
            "Type": "IotEventsDestinationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.datasetcontentdeliveryruledestination.s3destinationconfiguration": {
            "Required": "No",
            "Type": "S3DestinationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.applicationsettings.quiettime.start": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.applicationsettings.quiettime.end": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.putiteminput.tablename": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "synthetics.canary.vpcconfig.vpcid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "synthetics.canary.vpcconfig.securitygroupids": {
            "Required": "Yes",
            "Type": "List of String",
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "synthetics.canary.vpcconfig.subnetids": {
            "Required": "Yes",
            "Type": "List of String",
            "Maximum": "16",
            "UpdateRequires": "No interruption"
        },
        "directoryservice.simplead.vpcsettings.subnetids": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "directoryservice.simplead.vpcsettings.vpcid": {
            "Pattern": "^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.fleetlaunchtemplatespecification.launchtemplatename": {
            "Pattern": "[a-zA-Z0-9\\(\\)\\.\\-/_]+",
            "Required": "Conditional",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...128",
            "CompliantValues": "3...128"
        },
        "ec2.spotfleet.fleetlaunchtemplatespecification.version": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.fleetlaunchtemplatespecification.launchtemplateid": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.additionalauthenticationprovider.authenticationtype": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appsync.graphqlapi.additionalauthenticationprovider.userpoolconfig": {
            "Required": "No",
            "Type": "CognitoUserPoolConfig",
            "UpdateRequires": "No interruption"
        },
        "appsync.graphqlapi.additionalauthenticationprovider.openidconnectconfig": {
            "Required": "No",
            "Type": "OpenIDConnectConfig",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.channel.name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.channel.next": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.channel.channelname": {
            "Pattern": "^[a-zA-Z0-9_]+$",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotevents.detectormodel.sqs.queueurl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.sqs.usebase64": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "iotevents.detectormodel.sqs.payload": {
            "Required": "No",
            "Type": "Payload",
            "UpdateRequires": "No interruption"
        },
        "appconfig.environment.tags.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appconfig.environment.tags.key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.notificationconfiguration.config.filter.s3key": {
            "Required": "Yes",
            "Type": "S3KeyFilter",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.containeraction.variables": {
            "Required": "No",
            "Type": [
                "Variable"
            ],
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.containeraction.resourceconfiguration": {
            "Required": "Yes",
            "Type": "ResourceConfiguration",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.containeraction.image": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.containeraction.executionrolearn": {
            "Minimum": "20",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "mediastore.container.metricpolicyrule.objectgroupname": {
            "Pattern": "[a-zA-Z0-9_]+",
            "Required": "Yes",
            "Maximum": "30",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...30",
            "CompliantValues": "1...30"
        },
        "mediastore.container.metricpolicyrule.objectgroup": {
            "Pattern": "/?(?:[A-Za-z0-9_=:\\.\\-\\~\\*]+/){0,10}(?:[A-Za-z0-9_=:\\.\\-\\~\\*]+)?/?",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "900",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...900",
            "CompliantValues": "1...900"
        },
        "codebuild.reportgroup.reportexportconfig.exportconfigtype": {
            "Allowed values": "NO_EXPORT | S3",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.reportgroup.reportexportconfig.s3destination": {
            "Required": "No",
            "Type": "S3ReportExportConfig",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.sqltype": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.mapping": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalytics.applicationreferencedatasource.jsonmappingparameters.recordrowpath": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualrouter.portmapping.port": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualrouter.portmapping.protocol": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpoolclient.analyticsconfiguration.externalid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpoolclient.analyticsconfiguration.rolearn": {
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "Required": "No",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "cognito.userpoolclient.analyticsconfiguration.applicationid": {
            "Pattern": "^[0-9a-fA-F]+$",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.userpoolclient.analyticsconfiguration.userdatashared": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "wafv2-rulegroup-singleheader-properties": {
            "Name": {
                "Pattern": ".*\\S.*",
                "Required": "No",
                "Maximum": "64",
                "UpdateRequires": "No interruption",
                "Minimum": "1",
                "Type": "String",
                "AllowedValues": "1...64",
                "CompliantValues": "1...64"
            }
        },
        "wafv2.rulegroup.singleheader.name": {
            "Pattern": ".*\\S.*",
            "Required": "No",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "ec2.launchtemplate.elasticgpuspecification.type": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "athena.workgroup.tags.tags": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "lambda.version.provisionedconcurrencyconfiguration.provisionedconcurrentexecutions": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.route.httproute.timeout": {
            "Required": "No",
            "Type": "HttpTimeout",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.httproute.retrypolicy": {
            "Required": "No",
            "Type": "HttpRetryPolicy",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.httproute.action": {
            "Required": "Yes",
            "Type": "HttpRouteAction",
            "UpdateRequires": "No interruption"
        },
        "appmesh.route.httproute.match": {
            "Required": "Yes",
            "Type": "HttpRouteMatch",
            "UpdateRequires": "No interruption"
        },
        "glue.job.connectionslist.connections": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.s3referencedatasource.filekey": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "kinesisanalyticsv2.applicationreferencedatasource.s3referencedatasource.bucketarn": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisanalyticsv2.application.parallelismconfiguration.parallelismperkpu": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisanalyticsv2.application.parallelismconfiguration.configurationtype": {
            "Allowed values": "CUSTOM | DEFAULT",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisanalyticsv2.application.parallelismconfiguration.parallelism": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "kinesisanalyticsv2.application.parallelismconfiguration.autoscalingenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "appsync.resolver.lambdaconflicthandlerconfig.lambdaconflicthandlerarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.rule.awsvpcconfiguration.subnets": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "events.rule.awsvpcconfiguration.assignpublicip": {
            "Allowed values": "DISABLED | ENABLED",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.rule.awsvpcconfiguration.securitygroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.scalingrule.description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.scalingrule.name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.scalingrule.trigger": {
            "Required": "Yes",
            "Type": "ScalingTrigger",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.scalingrule.action": {
            "Required": "Yes",
            "Type": "ScalingAction",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskdefinition.taskdefinitionplacementconstraint.type": {
            "Allowed values": "memberOf",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.taskdefinitionplacementconstraint.expression": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "mediaconvert.jobtemplate.accelerationsettings.mode": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.containerproperties.linuxparameters.devices": {
            "Required": "No",
            "Type": [
                "Device"
            ],
            "UpdateRequires": "No interruption"
        },
        "dlm.lifecyclepolicy.parameters.excludebootvolume": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "managedblockchain.node.nodeconfiguration.instancetype": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "managedblockchain.node.nodeconfiguration.availabilityzone": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.setvariable.variablename": {
            "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
            "Required": "No",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotevents.detectormodel.setvariable.value": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "elasticloadbalancingv2.listenerrule.httprequestmethodconfig.values": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cw.dimension.name": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "cw.dimension.value": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "s3.bucket.lifecycleconfig.rule.noncurrentversionexpirationindays": {
            "Required": "Conditional",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "s3.bucket.lifecycleconfig.rule.tagfilters": {
            "Required": "No",
            "Type": [
                "TagFilter"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.lifecycleconfig.rule.transition": {
            "Required": "Conditional",
            "Type": "Transition",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.lifecycleconfig.rule.id": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition": {
            "Required": "Conditional",
            "Type": "NoncurrentVersionTransition",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.lifecycleconfig.rule.expirationdate": {
            "Required": "Conditional",
            "Type": "Timestamp",
            "UpdateRequires": "No interruption",
            "SampleValue": "1970-01-01T01:02:30.070Z"
        },
        "s3.bucket.lifecycleconfig.rule.prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.lifecycleconfig.rule.transitions": {
            "Required": "Conditional",
            "Type": [
                "Transition"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.lifecycleconfig.rule.noncurrentversiontransitions": {
            "Required": "Conditional",
            "Type": [
                "NoncurrentVersionTransition"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.lifecycleconfig.rule.abortincompletemultipartupload": {
            "Required": "Conditional",
            "Type": "AbortIncompleteMultipartUpload",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.lifecycleconfig.rule.expirationindays": {
            "Required": "Conditional",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "s3.bucket.lifecycleconfig.rule.status": {
            "Allowed values": "Disabled | Enabled",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.statementtwos.statementtwos": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-webacl-statementtwos-properties": {
            "StatementTwos": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "greengrass.functiondefinitionversion.resourceaccesspolicy.resourceid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.functiondefinitionversion.resourceaccesspolicy.permission": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.connectordefinitionversion.connector.connectorarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.connectordefinitionversion.connector.parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "Replacement",
            "SampleValue": {
                "todo": "json"
            }
        },
        "greengrass.connectordefinitionversion.connector.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "groundstation.config.antennadownlinkdemoddecodeconfig.decodeconfig": {
            "Required": "Yes",
            "Type": "DecodeConfig",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.antennadownlinkdemoddecodeconfig.demodulationconfig": {
            "Required": "Yes",
            "Type": "DemodulationConfig",
            "UpdateRequires": "No interruption"
        },
        "groundstation.config.antennadownlinkdemoddecodeconfig.spectrumconfig": {
            "Required": "Yes",
            "Type": "SpectrumConfig",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.LBCookieStickinessPolicy.policyname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.LBCookieStickinessPolicy.cookieexpirationperiod": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "efs.filesystem.elasticfilesystemtag.key": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "efs.filesystem.elasticfilesystemtag.value": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.mediapackageoutputdestinationsettings.channelid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.schemaconfiguration.databasename": {
            "Pattern": "^\\S+$",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "kinesisfirehose.deliverystream.schemaconfiguration.versionid": {
            "Pattern": "^\\S+$",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "kinesisfirehose.deliverystream.schemaconfiguration.region": {
            "Pattern": "^\\S+$",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "kinesisfirehose.deliverystream.schemaconfiguration.tablename": {
            "Pattern": "^\\S+$",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "kinesisfirehose.deliverystream.schemaconfiguration.rolearn": {
            "Pattern": "^\\S+$",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "kinesisfirehose.deliverystream.schemaconfiguration.catalogid": {
            "Pattern": "^\\S+$",
            "Required": "No",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "ec2.instance.ssmassociations.associationparameters": {
            "Required": "No",
            "Type": [
                "AssociationParameter"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.instance.ssmassociations.documentname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.forwardedvalues.cookies": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.forwardedvalues.querystringcachekeys": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.forwardedvalues.querystring": {
            "Required": "Yes",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudfront.distribution.forwardedvalues.headers": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "sagemaker.endpoint.variantproperty.variantpropertytype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.deployment.accesslogsetting.destinationarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.deployment.accesslogsetting.format": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloud9.environmentec2.repository.repositoryurl": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloud9.environmentec2.repository.pathcomponent": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot1click.project.devicetemplate.callbackoverrides": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "iot1click.project.devicetemplate.devicetype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.tcprouteaction.weightedtargets": {
            "Required": "Yes",
            "Type": [
                "WeightedTarget"
            ],
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.deployment.revision.githublocation.repository": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codedeploy.deploymentgroup.deployment.revision.githublocation.commitid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.devicedefinitionversion.device.certificatearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.devicedefinitionversion.device.thingarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.devicedefinitionversion.device.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.devicedefinitionversion.device.syncshadow": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.launchtemplate.launchtemplatedata.disableapitermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification": {
            "Required": "No",
            "Type": "CapacityReservationSpecification",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.elasticgpuspecifications": {
            "Required": "No",
            "Type": [
                "ElasticGpuSpecification"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.userdata": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.monitoring": {
            "Required": "No",
            "Type": "Monitoring",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.cpuoptions": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.networkinterfaces": {
            "Required": "No",
            "Type": [
                "NetworkInterface"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.keyname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.kernelid": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.ebsoptimized": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.launchtemplate.launchtemplatedata.securitygroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.ramdiskid": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.instanceinitiatedshutdownbehavior": {
            "Allowed values": "stop | terminate",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.launchtemplatedata.hibernationoptions": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.placement": {
            "Required": "No",
            "Type": "Placement",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.tagspecifications": {
            "Required": "No",
            "Type": [
                "TagSpecification"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.blockdevicemappings": {
            "Required": "No",
            "Type": [
                "BlockDeviceMapping"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile": {
            "Required": "No",
            "Type": "IamInstanceProfile",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.instancetype": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.elasticinferenceaccelerators": {
            "Required": "No",
            "Type": [
                "LaunchTemplateElasticInferenceAccelerator"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.metadataoptions": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.instancemarketoptions": {
            "Required": "No",
            "Type": "InstanceMarketOptions",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.licensespecifications": {
            "Required": "No",
            "Type": [
                "LicenseSpecification"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.creditspecification": {
            "Required": "No",
            "Type": "CreditSpecification",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.securitygroupids": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.launchtemplatedata.imageid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.instance.monitoring": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.instance.kernelid": {
            "Required": "No",
            "UpdateRequires": "Some interruptions"
        },
        "ec2.instance.cpuoptions": {
            "Required": "No",
            "Type": "CpuOptions",
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.ramdiskid": {
            "Required": "No",
            "UpdateRequires": "Some interruptions"
        },
        "ec2.instance.affinity": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "ec2.instance.placementgroupname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.instance.networkinterfaces": {
            "Required": "No",
            "Type": [
                "NetworkInterface"
            ],
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.subnetid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.instance.elasticinferenceaccelerators": {
            "Required": "No",
            "Type": [
                "ElasticInferenceAccelerator"
            ],
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.blockdevicemappings": {
            "Required": "No",
            "Type": [
                "BlockDeviceMapping"
            ],
            "UpdateRequires": "Some interruptions"
        },
        "ec2.instance.disableapitermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.instance.creditspecification": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.instance.privateipaddress": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.instance.licensespecifications": {
            "Required": "No",
            "Type": [
                "LicenseSpecification"
            ],
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.securitygroupids": {
            "Required": "Conditional",
            "Type": "List of String",
            "UpdateRequires": "Some interruptions"
        },
        "ec2.instance.ipv6addresscount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ec2.instance.tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.instance.tenancy": {
            "Allowed values": "dedicated | default | host",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "ec2.instance.launchtemplate": {
            "Required": "No",
            "Type": "LaunchTemplateSpecification",
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.volumes": {
            "Required": "No",
            "Type": [
                "Volume"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.instance.hostid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "ec2.instance.availabilityzone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.instance.keyname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.instance.instancetype": {
            "Required": "No",
            "UpdateRequires": "Some interruptions"
        },
        "ec2.instance.elasticgpuspecifications": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.securitygroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.additionalinfo": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "ec2.instance.hostresourcegrouparn": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.userdata": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "ec2.instance.hibernationoptions": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.imageid": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.instance.instanceinitiatedshutdownbehavior": {
            "Allowed values": "stop | terminate",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.instance.ssmassociations": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.instance.iaminstanceprofile": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.instance.sourcedestcheck": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.instance.ipv6addresses": {
            "Required": "No",
            "Type": [
                "InstanceIpv6Address"
            ],
            "UpdateRequires": "Replacement"
        },
        "ec2.instance.ebsoptimized": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Some interruptions",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "budgets.budget.spend.amount": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "budgets.budget.spend.unit": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "w6408ab1c19c15c15c27c23b7.parameters": {
            "Required": "No",
            "Type": "List of String values"
        },
        "w6408ab1c19c15c15c27c23b7.label": {
            "Required": "No",
            "Type": "AWS CloudFormation interface label"
        },
        "medialive.channel.scte20sourcesettings.source608channelnumber": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "medialive.channel.scte20sourcesettings.convert608to708": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "dynamodb.table.pointintimerecoveryspecification.pointintimerecoveryenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.taskset.loadbalancer.containerport": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskset.loadbalancer.targetgrouparn": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskset.loadbalancer.containername": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskset.loadbalancer.loadbalancername": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "cloudfront.streamingdistribution.logging.bucket": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.streamingdistribution.logging.enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudfront.streamingdistribution.logging.prefix": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.segment.setdimension.values": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.segment.setdimension.dimensiontype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.step.keyvalue.key": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "10280",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10280",
            "CompliantValues": "0...10280"
        },
        "elasticmapreduce.step.keyvalue.value": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "No",
            "Maximum": "10280",
            "UpdateRequires": "Replacement",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10280",
            "CompliantValues": "0...10280"
        },
        "wafv2-rulegroup-countrycodes-properties": {
            "CountryCodes": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "wafv2.rulegroup.countrycodes.countrycodes": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "ecs.cluster.capacityproviderstrategyitem.capacityprovider": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.cluster.capacityproviderstrategyitem.base": {
            "Minimum": "0",
            "Required": "No",
            "Maximum": "100000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...100000",
            "CompliantValues": "0...100000"
        },
        "ecs.cluster.capacityproviderstrategyitem.weight": {
            "Minimum": "0",
            "Required": "No",
            "Maximum": "1000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...1000",
            "CompliantValues": "0...1000"
        },
        "wafregional.rule.predicate.negated": {
            "Required": "Yes",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "wafregional.rule.predicate.dataid": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "wafregional.rule.predicate.type": {
            "Allowed values": "ByteMatch | GeoMatch | IPMatch | RegexMatch | SizeConstraint | SqlInjectionMatch | XssMatch",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.accessloggingpolicy.s3bucketprefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.accessloggingpolicy.enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.elb.accessloggingpolicy.emitinterval": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.elb.accessloggingpolicy.s3bucketname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.api.bodys3location.bucket": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.api.bodys3location.version": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.api.bodys3location.etag": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.api.bodys3location.key": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.ioteventsdestinationconfiguration.rolearn": {
            "Minimum": "20",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "iotanalytics.dataset.ioteventsdestinationconfiguration.inputname": {
            "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "lambda.layerversion.content.s3key": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "lambda.layerversion.content.s3bucket": {
            "Pattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
            "Required": "Yes",
            "Maximum": "63",
            "UpdateRequires": "Replacement",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...63",
            "CompliantValues": "3...63"
        },
        "lambda.layerversion.content.s3objectversion": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "robomaker.simulationapplication.robotsoftwaresuite.version": {
            "Allowed values": "Dashing | Kinetic | Melodic",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "robomaker.simulationapplication.robotsoftwaresuite.name": {
            "Allowed values": "ROS | ROS2",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.dataflowendpointgroup.endpointdetails.dataflowendpoint": {
            "Required": "No",
            "Type": "DataflowEndpoint",
            "UpdateRequires": "No interruption"
        },
        "groundstation.dataflowendpointgroup.endpointdetails.securitydetails": {
            "Required": "No",
            "Type": "SecurityDetails",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.lambda.payload": {
            "Required": "No",
            "Type": "Payload",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.lambda.functionarn": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "appmesh.virtualnode.accesslog.file": {
            "Required": "No",
            "Type": "FileAccessLog",
            "UpdateRequires": "No interruption"
        },
        "batch.computeenvironment.computeresources.instancetypes": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "batch.computeenvironment.computeresources.allocationstrategy": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "batch.computeenvironment.computeresources.launchtemplate": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "batch.computeenvironment.computeresources.type": {
            "Allowed values": "EC2 | SPOT",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "batch.computeenvironment.computeresources.minvcpus": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "batch.computeenvironment.computeresources.placementgroup": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "batch.computeenvironment.computeresources.spotiamfleetrole": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "batch.computeenvironment.computeresources.imageid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "batch.computeenvironment.computeresources.desiredvcpus": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "batch.computeenvironment.computeresources.maxvcpus": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "batch.computeenvironment.computeresources.tags": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "Replacement",
            "SampleValue": {
                "todo": "json"
            }
        },
        "batch.computeenvironment.computeresources.ec2keypair": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "batch.computeenvironment.computeresources.subnets": {
            "Required": "Yes",
            "UpdateRequires": "Replacement"
        },
        "batch.computeenvironment.computeresources.bidpercentage": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "batch.computeenvironment.computeresources.securitygroupids": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "batch.computeenvironment.computeresources.instancerole": {
            "Required": "Yes",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.volumesfrom.sourcecontainer": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.volumesfrom.readonly": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "lambda.function.code.s3bucket": {
            "Pattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
            "Required": "Conditional",
            "Maximum": "63",
            "UpdateRequires": "No interruption",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...63",
            "CompliantValues": "3...63"
        },
        "lambda.function.code.zipfile": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "lambda.function.code.s3objectversion": {
            "Minimum": "1",
            "Required": "Conditional",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "lambda.function.code.s3key": {
            "Minimum": "1",
            "Required": "Conditional",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "elasticloadbalancingv2.listenerrule.fixedresponseconfig.statuscode": {
            "Pattern": "^(2|4|5)\\d\\d$",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.fixedresponseconfig.contenttype": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...32",
            "CompliantValues": "0...32"
        },
        "elasticloadbalancingv2.listenerrule.fixedresponseconfig.messagebody": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...1024",
            "CompliantValues": "0...1024"
        },
        "ecs.service.awsvpcconfiguration.securitygroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ecs.service.awsvpcconfiguration.assignpublicip": {
            "Allowed values": "DISABLED | ENABLED",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.service.awsvpcconfiguration.subnets": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.subnets": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Some interruptions"
        },
        "ec2.elb.connectiondrainingpolicy": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.instances": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.securitygroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.accessloggingpolicy": {
            "Required": "No",
            "Type": "AccessLoggingPolicy",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.crosszone": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.elb.lbcookiestickinesspolicy": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.policies": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.connectionsettings": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.scheme": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.elb.loadbalancername": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.elb.healthcheck": {
            "Required": "No",
            "Type": "HealthCheck",
            "UpdateRequires": "Some interruptions"
        },
        "ec2.elb.appcookiestickinesspolicy": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.availabilityzones": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Some interruptions"
        },
        "ec2.elb.listeners": {
            "Required": "Yes",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "ec2.launchtemplate.licensespecification.licenseconfigurationarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.analyticsconfiguration.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.analyticsconfiguration.tagfilters": {
            "Required": "No",
            "Type": [
                "TagFilter"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.analyticsconfiguration.storageclassanalysis": {
            "Required": "Yes",
            "Type": "StorageClassAnalysis",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.analyticsconfiguration.prefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "workspaces.workspace.workspaceproperties.runningmode": {
            "Allowed values": "ALWAYS_ON | AUTO_STOP",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "workspaces.workspace.workspaceproperties.computetypename": {
            "Allowed values": "GRAPHICS | GRAPHICSPRO | PERFORMANCE | POWER | POWERPRO | STANDARD | VALUE",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "workspaces.workspace.workspaceproperties.uservolumesizegib": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "workspaces.workspace.workspaceproperties.runningmodeautostoptimeoutinminutes": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "workspaces.workspace.workspaceproperties.rootvolumesizegib": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualnode.backenddefaults.clientpolicy": {
            "Required": "No",
            "Type": "ClientPolicy",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.assetpropertyvalue.quality": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotevents.detectormodel.assetpropertyvalue.value": {
            "Required": "No",
            "Type": "AssetPropertyVariant",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.assetpropertyvalue.timestamp": {
            "Required": "No",
            "Type": "AssetPropertyTimestamp",
            "UpdateRequires": "No interruption"
        },
        "glue.trigger.notificationproperty.notifydelayafter": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "greengrass.loggerdefinition.logger.space": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "greengrass.loggerdefinition.logger.level": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.loggerdefinition.logger.component": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.loggerdefinition.logger.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.loggerdefinition.logger.type": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.bytematchstatement.texttransformations": {
            "Required": "Yes",
            "Type": [
                "TextTransformation"
            ],
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.bytematchstatement.searchstring": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.bytematchstatement.searchstringbase64": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.bytematchstatement.fieldtomatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.bytematchstatement.positionalconstraint": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "lambda.eventinvokeconfig.destinationconfig.onsuccess.destination": {
            "Pattern": "^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
            "Required": "Yes",
            "Maximum": "350",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...350",
            "CompliantValues": "0...350"
        },
        "fsx.filesystem.lustreconfiguration.importpath": {
            "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{3,4357}$",
            "Required": "No",
            "Maximum": "900",
            "UpdateRequires": "Replacement",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...900",
            "CompliantValues": "3...900"
        },
        "fsx.filesystem.lustreconfiguration.exportpath": {
            "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{3,4357}$",
            "Required": "No",
            "Maximum": "900",
            "UpdateRequires": "Replacement",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...900",
            "CompliantValues": "3...900"
        },
        "fsx.filesystem.lustreconfiguration.weeklymaintenancestarttime": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "fsx.filesystem.lustreconfiguration.perunitstoragethroughput": {
            "Minimum": "50",
            "Required": "Conditional",
            "Type": "Integer",
            "Maximum": "200",
            "UpdateRequires": "Replacement",
            "AllowedValues": "50...200",
            "CompliantValues": "50...200"
        },
        "fsx.filesystem.lustreconfiguration.copytagstobackups": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "fsx.filesystem.lustreconfiguration.dailyautomaticbackupstarttime": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "fsx.filesystem.lustreconfiguration.deploymenttype": {
            "Allowed values": "PERSISTENT_1 | SCRATCH_1 | SCRATCH_2",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "fsx.filesystem.lustreconfiguration.automaticbackupretentiondays": {
            "Minimum": "0",
            "Required": "No",
            "Maximum": "35",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...35",
            "CompliantValues": "0...35"
        },
        "fsx.filesystem.lustreconfiguration.importedfilechunksize": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "512000",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...512000",
            "CompliantValues": "1...512000"
        },
        "elasticloadbalancingv2.listener.authenticatecognitoconfig.onunauthenticatedrequest": {
            "Allowed values": "allow | authenticate | deny",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticatecognitoconfig.sessiontimeout": {
            "Required": "No",
            "Type": "Long",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.4"
        },
        "elasticloadbalancingv2.listener.authenticatecognitoconfig.sessioncookiename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticatecognitoconfig.userpoolclientid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticatecognitoconfig.scope": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticatecognitoconfig.userpooldomain": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticatecognitoconfig.userpoolarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.authenticatecognitoconfig.authenticationrequestextraparams": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.embeddedsourcesettings.convert608to708": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.embeddedsourcesettings.scte20detection": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.embeddedsourcesettings.source608channelnumber": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "medialive.channel.embeddedsourcesettings.source608tracknumber": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticbeanstalk.application.applicationresourcelifecycleconfig.versionlifecycleconfig": {
            "Required": "No",
            "Type": "ApplicationVersionLifecycleConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticbeanstalk.application.applicationresourcelifecycleconfig.servicerole": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.metrics.status": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.metrics.eventthreshold": {
            "Required": "Yes",
            "Type": "ReplicationTimeValue",
            "UpdateRequires": "No interruption"
        },
        "elasticbeanstalk.configurationtemplate.configurationoptionsetting.resourcename": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "elasticbeanstalk.configurationtemplate.configurationoptionsetting.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticbeanstalk.configurationtemplate.configurationoptionsetting.optionname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticbeanstalk.configurationtemplate.configurationoptionsetting.namespace": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.rules.rules": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "wafv2-webacl-rules-properties": {
            "Rules": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "lakeformation.permissions.datalakeprincipal.datalakeprincipalidentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.instance.elasticgpuspecification.type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "iot.topicrule.ioteventsaction.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.ioteventsaction.messageid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.ioteventsaction.inputname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "as.notificationconfigurations.topicarn": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1600",
            "CompliantValues": "1...1600"
        },
        "as.notificationconfigurations.notificationtypes": {
            "Type": "List of String",
            "Required": "No",
            "Allowed Values": "+  `autoscaling:EC2_INSTANCE_LAUNCH` \n+  `autoscaling:EC2_INSTANCE_LAUNCH_ERROR` \n+  `autoscaling:EC2_INSTANCE_TERMINATE` \n+  `autoscaling:EC2_INSTANCE_TERMINATE_ERROR` \n+  `autoscaling:TEST_NOTIFICATION",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "+  `autoscaling:EC2_INSTANCE_LAUNCH` \n+  `autoscaling:EC2_INSTANCE_LAUNCH_ERROR` \n+  `autoscaling:EC2_INSTANCE_TERMINATE` \n+  `autoscaling:EC2_INSTANCE_TERMINATE_ERROR` \n+  `autoscaling:TEST_NOTIFICATION"
            ],
            "SampleValue": "+  `autoscaling:EC2_INSTANCE_LAUNCH` \n+  `autoscaling:EC2_INSTANCE_LAUNCH_ERROR` \n+  `autoscaling:EC2_INSTANCE_TERMINATE` \n+  `autoscaling:EC2_INSTANCE_TERMINATE_ERROR` \n+  `autoscaling:TEST_NOTIFICATION",
            "CompliantValues": [
                "+  `autoscaling:EC2_INSTANCE_LAUNCH` \n+  `autoscaling:EC2_INSTANCE_LAUNCH_ERROR` \n+  `autoscaling:EC2_INSTANCE_TERMINATE` \n+  `autoscaling:EC2_INSTANCE_TERMINATE_ERROR` \n+  `autoscaling:TEST_NOTIFICATION"
            ]
        },
        "appmesh.virtualnode.virtualservicebackend.clientpolicy": {
            "Required": "No",
            "Type": "ClientPolicy",
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.virtualservicebackend.virtualservicename": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.scalingconstraints.maxcapacity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.scalingconstraints.mincapacity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cloudfront.distribution.lambdafunctionassociation.eventtype": {
            "Allowed values": "origin-request | origin-response | viewer-request | viewer-response",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.lambdafunctionassociation.includebody": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cloudfront.distribution.lambdafunctionassociation.lambdafunctionarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.stack.applicationsettings.settingsgroup": {
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.stack.applicationsettings.enabled": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "rds.optiongroup.optionconfigurations.optionname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.optiongroup.optionconfigurations.optionversion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "rds.optiongroup.optionconfigurations.port": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "rds.optiongroup.optionconfigurations.dbsecuritygroupmemberships": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "rds.optiongroup.optionconfigurations.vpcsecuritygroupmemberships": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "rds.optiongroup.optionconfigurations.optionsettings": {
            "Required": "No",
            "Type": [
                "OptionSetting"
            ],
            "UpdateRequires": "No interruption"
        },
        "glue.trigger.condition.jobname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.trigger.condition.crawlername": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.trigger.condition.crawlstate": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.trigger.condition.state": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.trigger.condition.logicaloperator": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecr.repository.lifecyclepolicy.registryid": {
            "Pattern": "[0-9]{12}",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecr.repository.lifecyclepolicy.lifecyclepolicytext": {
            "Minimum": "100",
            "Required": "No",
            "Type": "String",
            "Maximum": "30720",
            "UpdateRequires": "No interruption",
            "AllowedValues": "100...30720",
            "CompliantValues": "100...30720"
        },
        "cloudfront.distribution.origingroupfailovercriteria.statuscodes": {
            "Required": "Yes",
            "Type": "StatusCodes",
            "UpdateRequires": "No interruption"
        },
        "iot.provisioningtemplate.provisioninghook.targetarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.provisioningtemplate.provisioninghook.payloadversion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.rule.enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ses.receiptrule.rule.scanenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ses.receiptrule.rule.actions": {
            "Required": "No",
            "Type": [
                "Action"
            ],
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.rule.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.rule.recipients": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.rule.tlspolicy": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.tmpfs.mountoptions": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.tmpfs.containerpath": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.tmpfs.size": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.kernelcapabilities.add": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.kernelcapabilities.drop": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "simpledb.description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.stack.accessendpoint.endpointtype": {
            "Allowed values": "STREAMING",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.stack.accessendpoint.vpceid": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.network.interface.privateipspec.1.primary": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.network.interface.privateipspec.1.privateipaddress": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.policy.instanceports": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.policy.policytype": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.policy.policyname": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.elb.policy.loadbalancerports": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.elb.policy.attributes": {
            "Required": "Yes",
            "Type": "List of Json",
            "UpdateRequires": "No interruption"
        },
        "codebuild.project.cloudwatchlogsconfig.streamname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.cloudwatchlogsconfig.status": {
            "Allowed values": "DISABLED | ENABLED",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.cloudwatchlogsconfig.groupname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "managedblockchain.member.networkframeworkconfiguration.networkfabricconfiguration": {
            "Required": "No",
            "Type": "NetworkFabricConfiguration",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.dynamodbv2.payload": {
            "Required": "No",
            "Type": "Payload",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.dynamodbv2.tablename": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "globalaccelerator.listener.portrange.fromport": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "Maximum": "65535",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...65535",
            "CompliantValues": "1...65535"
        },
        "globalaccelerator.listener.portrange.toport": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "Maximum": "65535",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...65535",
            "CompliantValues": "1...65535"
        },
        "codebuild.project.buildstatusconfig.context": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codebuild.project.buildstatusconfig.targeturl": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "mediastore.container.metricpolicy.metricpolicyrules": {
            "Required": "No",
            "Type": [
                "MetricPolicyRule"
            ],
            "Maximum": "300",
            "UpdateRequires": "No interruption"
        },
        "mediastore.container.metricpolicy.containerlevelmetrics": {
            "Allowed values": "DISABLED | ENABLED",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.device.containerpath": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "batch.jobdefinition.device.permissions": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.device.hostpath": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.logging.accesslog": {
            "Required": "No",
            "Type": "AccessLog",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.pipeline.math.name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.math.attribute": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "iotanalytics.pipeline.math.math": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "iotanalytics.pipeline.math.next": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "backup.backupplan.backupruleresourcetype.recoverypointtags": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "SampleValue": {
                "todo": "json"
            }
        },
        "backup.backupplan.backupruleresourcetype.completionwindowminutes": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "backup.backupplan.backupruleresourcetype.startwindowminutes": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "backup.backupplan.backupruleresourcetype.scheduleexpression": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "backup.backupplan.backupruleresourcetype.targetbackupvault": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "backup.backupplan.backupruleresourcetype.lifecycle": {
            "Required": "No",
            "Type": "LifecycleResourceType",
            "UpdateRequires": "No interruption"
        },
        "backup.backupplan.backupruleresourcetype.rulename": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "backup.backupplan.backupruleresourcetype.copyactions": {
            "Required": "No",
            "Type": [
                "CopyActionResourceType"
            ],
            "UpdateRequires": "No interruption"
        },
        "appstream.directoryconfig.serviceaccountcredentials.accountpassword": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "127",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...127",
            "CompliantValues": "1...127"
        },
        "appstream.directoryconfig.serviceaccountcredentials.accountname": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypool.cognitostreams.streamname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypool.cognitostreams.rolearn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypool.cognitostreams.streamingstatus": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.spotfleet.loadbalancersconfig.classicloadbalancersconfig": {
            "Required": "No",
            "Type": "ClassicLoadBalancersConfig",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.loadbalancersconfig.targetgroupsconfig": {
            "Required": "No",
            "Type": "TargetGroupsConfig",
            "UpdateRequires": "No interruption"
        },
        "waitcondition.timeout": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waitcondition.count": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "waitcondition.handle": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.statuscodes.items": {
            "Required": "Yes",
            "Type": "List of Integer",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.statuscodes.quantity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.blockdev.template.volumesize": {
            "Required": "Conditional",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.blockdev.template.kmskeyid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.blockdev.template.snapshotid": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.blockdev.template.encrypted": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.blockdev.template.deleteontermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.blockdev.template.volumetype": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.blockdev.template.iops": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.datatraceenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigateway.deployment.stagedescription.canarysetting": {
            "Required": "No",
            "Type": "CanarySetting",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.clientcertificateid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.deployment.stagedescription.cachingenabled": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigateway.deployment.stagedescription.throttlingratelimit": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.tracingenabled": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigateway.deployment.stagedescription.throttlingburstlimit": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.cachedataencrypted": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigateway.deployment.stagedescription.variables": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.logginglevel": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.accesslogsetting": {
            "Required": "No",
            "Type": "AccessLogSetting",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.deployment.stagedescription.methodsettings": {
            "Required": "No",
            "Type": [
                "MethodSetting"
            ],
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.cachettlinseconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apigateway.deployment.stagedescription.cacheclustersize": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.deployment.stagedescription.cacheclusterenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigateway.deployment.stagedescription.documentationversion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.deployment.stagedescription.tags": {
            "Required": "No",
            "Type": [
                "Tag"
            ],
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.stagedescription.metricsenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.elb.connectionsettings.idletimeout": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "Integer",
            "Maximum": "3600",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...3600",
            "CompliantValues": "1...3600"
        },
        "apigateway.usageplan.quotasettings.offset": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apigateway.usageplan.quotasettings.limit": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "apigateway.usageplan.quotasettings.period": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ecs.service.serviceregistry.containername": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.service.serviceregistry.registryarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.service.serviceregistry.port": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.service.serviceregistry.containerport": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "iot.thing.attributepayload.attributes": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.dnsips": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "2",
            "UpdateRequires": "No interruption"
        },
        "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.username": {
            "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{1,256}$",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.filesystemadministratorsgroup": {
            "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{1,256}$",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.password": {
            "Pattern": "^.{1,256}$",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.organizationalunitdistinguishedname": {
            "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{1,2000}$",
            "Required": "No",
            "Maximum": "2000",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2000",
            "CompliantValues": "1...2000"
        },
        "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.domainname": {
            "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{1,255}$",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "ec2.localgatewayroutetablevpcassociation.tags.tags": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "budgets.budget.notificationwithsubscribers.notification": {
            "Required": "Yes",
            "Type": "Notification",
            "UpdateRequires": "No interruption"
        },
        "budgets.budget.notificationwithsubscribers.subscribers": {
            "Required": "Yes",
            "Type": [
                "Subscriber"
            ],
            "Maximum": "11",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.sns.payload": {
            "Required": "No",
            "Type": "Payload",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.sns.targetarn": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "ec2.capacityreservation.tag.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.capacityreservation.tag.key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.trafficmirrorfilterrule.trafficmirrorportrange.toport": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.trafficmirrorfilterrule.trafficmirrorportrange.fromport": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.security.group.rule.1.description": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.security.group.rule.1.sourcesecuritygroupownerid": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.1.fromport": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.security.group.rule.1.sourcesecuritygroupid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.1.ipprotocol": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.1.sourcesecuritygroupname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.1.cidripv6": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.1.sourceprefixlistid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.security.group.rule.1.toport": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.security.group.rule.1.cidrip": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.schedule.endtime": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.schedule.timezone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.schedule.islocaltime": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "pinpoint.campaign.schedule.frequency": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.schedule.starttime": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.schedule.eventfilter": {
            "Required": "No",
            "Type": "CampaignEventFilter",
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.schedule.quiettime": {
            "Required": "No",
            "Type": "QuietTime",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskset.awsvpcconfiguration.securitygroups": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskset.awsvpcconfiguration.assignpublicip": {
            "Allowed values": "DISABLED | ENABLED",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskset.awsvpcconfiguration.subnets": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "sqs.queues.delayseconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "sqs.queues.messageretentionperiod": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "sqs.queues.contentbaseddeduplication": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "sqs.queues.receivemessagewaittimeseconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "sqs.queues.queuename": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "sqs.queues.redrivepolicy": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "sqs.queues.kmsmasterkeyid": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "sqs.queues.visibilitytimeout": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "sqs.queues.fifoqueue": {
            "Required": "No",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "sqs.queues.kmsdatakeyreuseperiodseconds": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "sqs.queues.maximummessagesize": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "sqs.queues.tags": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.iaminstanceprofile.arn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigatewayv2.authorizer.jwtconfiguration.audience": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "apigatewayv2.authorizer.jwtconfiguration.issuer": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "as.launchconfig.blockdev.mapping.ebs": {
            "Required": "No",
            "Type": "BlockDevice",
            "UpdateRequires": "No interruption"
        },
        "as.launchconfig.blockdev.mapping.devicename": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "as.launchconfig.blockdev.mapping.nodevice": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "as.launchconfig.blockdev.mapping.virtualname": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...255",
            "CompliantValues": "1...255"
        },
        "batch.jobdefinition.volumes.host": {
            "Required": "No",
            "Type": "VolumesHost",
            "UpdateRequires": "No interruption"
        },
        "batch.jobdefinition.volumes.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticsearch.domain.ebsoptions.iops": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticsearch.domain.ebsoptions.ebsenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticsearch.domain.ebsoptions.volumetype": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "elasticsearch.domain.ebsoptions.volumesize": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "emr.cluster.configuration.classification": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "emr.cluster.configuration.configurations": {
            "Required": "No",
            "Type": [
                "Configuration"
            ],
            "UpdateRequires": "Replacement"
        },
        "emr.cluster.configuration.configurationproperties": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "Replacement"
        },
        "networkmanager.device.location.longitude": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "networkmanager.device.location.address": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "networkmanager.device.location.latitude": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listener.targetgroupstickinessconfig.enabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticloadbalancingv2.listener.targetgroupstickinessconfig.durationseconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "amazonmq.configurationassociation.configurationid.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amazonmq.configurationassociation.configurationid.revision": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cloudfront.distribution.customoriginconfig.originreadtimeout": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.customoriginconfig.originsslprotocols": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.customoriginconfig.httpsport": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cloudfront.distribution.customoriginconfig.originkeepalivetimeout": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.customoriginconfig.httpport": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cloudfront.distribution.customoriginconfig.originprotocolpolicy": {
            "Allowed values": "http-only | https-only | match-viewer",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "datapipeline.pipeline.parameterobjects.attributes.stringvalue": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "10240",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10240",
            "CompliantValues": "0...10240"
        },
        "datapipeline.pipeline.parameterobjects.attributes.key": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "cassandra.table.column.columnname": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "cassandra.table.column.columntype": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "ecs.service.deploymentconfiguration.maximumpercent": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "ecs.service.deploymentconfiguration.minimumhealthypercent": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "wafv2-rulegroup-taglist-properties": {
            "TagList": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "wafv2.rulegroup.taglist.taglist": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption"
        },
        "iotanalytics.dataset.trigger.schedule.scheduleexpression": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.taskset.scale.unit": {
            "Allowed values": "PERCENT",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ecs.taskset.scale.value": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "wafv2.webacl.andstatementtwo.statements": {
            "Required": "Yes",
            "Type": [
                "StatementThree"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listener.forwardconfig.targetgroups": {
            "Required": "No",
            "Type": [
                "TargetGroupTuple"
            ],
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listener.forwardconfig.targetgroupstickinessconfig": {
            "Required": "No",
            "Type": "TargetGroupStickinessConfig",
            "UpdateRequires": "No interruption"
        },
        "ec2.instance.elasticinferenceaccelerator.type": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.instance.elasticinferenceaccelerator.count": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appstream.stack.usersetting.permission": {
            "Allowed values": "DISABLED | ENABLED",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appstream.stack.usersetting.action": {
            "Allowed values": "CLIPBOARD_COPY_FROM_LOCAL_DEVICE | CLIPBOARD_COPY_TO_LOCAL_DEVICE | FILE_DOWNLOAD | FILE_UPLOAD | PRINTING_TO_LOCAL_DEVICE",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.webacl.notstatementtwo.statement": {
            "Required": "Yes",
            "Type": "StatementThree",
            "UpdateRequires": "No interruption"
        },
        "wafv2.webacl.andstatementone.statements": {
            "Required": "Yes",
            "Type": [
                "StatementTwo"
            ],
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.lifecycleconfig.rules": {
            "Required": "Yes",
            "Type": [
                "Rule"
            ],
            "UpdateRequires": "No interruption"
        },
        "glue.table.order.column": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.table.order.sortorder": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cloudfront.distribution.origingroup.id": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cloudfront.distribution.origingroup.failovercriteria": {
            "Required": "Yes",
            "Type": "OriginGroupFailoverCriteria",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origingroup.members": {
            "Required": "Yes",
            "Type": "OriginGroupMembers",
            "UpdateRequires": "No interruption"
        },
        "elasticloadbalancingv2.listenerrule.querystringkeyvalue.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticloadbalancingv2.listenerrule.querystringkeyvalue.key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.eventbuspolicy.condition.type": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.eventbuspolicy.condition.key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "events.eventbuspolicy.condition.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "sns.subscription.endpoint": {
            "Required": "Yes",
            "UpdateRequires": "Replacement"
        },
        "sns.subscription.protocol": {
            "Required": "Yes",
            "UpdateRequires": "Replacement"
        },
        "iam.accesskey.username": {
            "Pattern": "[\\w+=,.@-]+",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iam.accesskey.serial": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "iam.accesskey.status": {
            "Allowed values": "Active | Inactive",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.instancegroupconfig.autoscalingpolicy.constraints": {
            "Required": "Yes",
            "Type": "ScalingConstraints",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.instancegroupconfig.autoscalingpolicy.rules": {
            "Required": "Yes",
            "Type": [
                "ScalingRule"
            ],
            "UpdateRequires": "No interruption"
        },
        "route53.hostedzone.hostedzoneconfig.comment": {
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.stepconfig.hadoopjarstep": {
            "Required": "Yes",
            "Type": "HadoopJarStepConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.stepconfig.name": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "elasticmapreduce.cluster.stepconfig.actiononfailure": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.versioningconfiguration.maxversions": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "1000",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1000",
            "CompliantValues": "1...1000"
        },
        "iotanalytics.dataset.versioningconfiguration.unlimited": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.versioningconfig.status": {
            "Allowed values": "Enabled | Suspended",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.regexpatternsetreferencestatement.arn": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "20",
            "Type": "String",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "wafv2.rulegroup.regexpatternsetreferencestatement.fieldtomatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafv2.rulegroup.regexpatternsetreferencestatement.texttransformations": {
            "Required": "Yes",
            "Type": [
                "TextTransformation"
            ],
            "UpdateRequires": "No interruption"
        },
        "ecs.taskdefinition.containerdependency.condition": {
            "Allowed values": "COMPLETE | HEALTHY | START | SUCCESS",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdependency.containername": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.privateipadd.privateipaddress": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.launchtemplate.privateipadd.primary": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "iot.topicrule.assetpropertyvariant.stringvalue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.assetpropertyvariant.integervalue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.assetpropertyvariant.doublevalue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.assetpropertyvariant.booleanvalue": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "globalaccelerator.endpointgroup.endpointconfiguration.weight": {
            "Minimum": "0",
            "Required": "No",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...255",
            "CompliantValues": "0...255"
        },
        "globalaccelerator.endpointgroup.endpointconfiguration.clientippreservationenabled": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "globalaccelerator.endpointgroup.endpointconfiguration.endpointid": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waf.sizeconstraintset.sizeconstraint.fieldtomatch.data": {
            "Pattern": ".*\\S.*",
            "Required": "Conditional",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "waf.sizeconstraintset.sizeconstraint.fieldtomatch.type": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "elasticache.security.group.description": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waf.rule.predicates.type": {
            "Allowed values": "ByteMatch | GeoMatch | IPMatch | RegexMatch | SizeConstraint | SqlInjectionMatch | XssMatch",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waf.rule.predicates.dataid": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "waf.rule.predicates.negated": {
            "Required": "Yes",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "datapipeline.pipeline.pipelineobjects.id": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\n\\t]*",
            "Required": "Yes",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "datapipeline.pipeline.pipelineobjects.name": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\n\\t]*",
            "Required": "Yes",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "datapipeline.pipeline.pipelineobjects.fields": {
            "Required": "Yes",
            "Type": [
                "Field"
            ],
            "UpdateRequires": "No interruption"
        },
        "pinpoint.campaign.attributedimension.attributetype": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.attributedimension.values": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.restrictions.georestriction": {
            "Required": "Yes",
            "Type": "GeoRestriction",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolriskconfigurationattachment.riskexceptionconfigurationtype.blockediprangelist": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "20",
            "UpdateRequires": "No interruption"
        },
        "cognito.userpoolriskconfigurationattachment.riskexceptionconfigurationtype.skippediprangelist": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "20",
            "UpdateRequires": "No interruption"
        },
        "opsworks.layer.loadbasedautoscaling.upscaling": {
            "Required": "No",
            "Type": "AutoScalingThresholds",
            "UpdateRequires": "No interruption"
        },
        "opsworks.layer.loadbasedautoscaling.downscaling": {
            "Required": "No",
            "Type": "AutoScalingThresholds",
            "UpdateRequires": "No interruption"
        },
        "opsworks.layer.loadbasedautoscaling.enable": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "iotanalytics.pipeline.deviceregistryenrich.thingname": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "iotanalytics.pipeline.deviceregistryenrich.attribute": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "iotanalytics.pipeline.deviceregistryenrich.next": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.deviceregistryenrich.name": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "iotanalytics.pipeline.deviceregistryenrich.rolearn": {
            "Minimum": "20",
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "20...2048",
            "CompliantValues": "20...2048"
        },
        "ecs.taskdefinition.volumes.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.volumes.dockervolumeconfiguration": {
            "Required": "No",
            "Type": "DockerVolumeConfiguration",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.volumes.host": {
            "Required": "No",
            "Type": "HostVolumeProperties",
            "UpdateRequires": "Replacement"
        },
        "waf.xssmatchset.xssmatchtuple.texttransformation": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "waf.xssmatchset.xssmatchtuple.fieldtomatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "medialive.channel.networkinputsettings.servervalidation": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.networkinputsettings.hlsinputsettings": {
            "Required": "No",
            "Type": "HlsInputSettings",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.canarysetting.usestagecache": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigateway.deployment.canarysetting.stagevariableoverrides": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "apigateway.deployment.canarysetting.percenttraffic": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "eventschemas.schema.tagsentry.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "eventschemas.schema.tagsentry.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iot.topicrule.httpauthorization.sigv4": {
            "Required": "No",
            "Type": "SigV4Authorization",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskdefinition.containerdefinitions.dnssearchdomains": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.starttimeout": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.repositorycredentials": {
            "Required": "No",
            "Type": "RepositoryCredentials",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.secrets": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.dependson": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.portmappings": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.mountpoints": {
            "Required": "No",
            "Type": [
                "MountPoint"
            ],
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.memory": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.containerdefinitions.interactive": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.taskdefinition.containerdefinitions.cpu": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.environment": {
            "Required": "No",
            "Type": [
                "KeyValuePair"
            ],
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.dockersecurityoptions": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.hostname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.volumesfrom": {
            "Required": "No",
            "Type": [
                "VolumeFrom"
            ],
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.resourcerequirements": {
            "Required": "No",
            "Type": [
                "ResourceRequirement"
            ],
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.links": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.systemcontrols": {
            "Required": "No",
            "Type": [
                "SystemControl"
            ],
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.healthcheck": {
            "Required": "No",
            "Type": "HealthCheck",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.dockerlabels": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.command": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.linuxparameters": {
            "Required": "No",
            "Type": "LinuxParameters",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.logconfiguration": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.pseudoterminal": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.taskdefinition.containerdefinitions.workingdirectory": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.extrahosts": {
            "Required": "No",
            "Type": [
                "HostEntry"
            ],
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.firelensconfiguration": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.memoryreservation": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.containerdefinitions.readonlyrootfilesystem": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.taskdefinition.containerdefinitions.stoptimeout": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.entrypoint": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.image": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.essential": {
            "Required": "No",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.taskdefinition.containerdefinitions.dnsservers": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.containerdefinitions.user": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ecs.taskdefinition.containerdefinitions.disablenetworking": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.taskdefinition.containerdefinitions.privileged": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ecs.taskdefinition.containerdefinitions.ulimits": {
            "Required": "No",
            "Type": [
                "Ulimit"
            ],
            "UpdateRequires": "Replacement"
        },
        "amplify.app.autobranchcreationconfig.stage": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amplify.app.autobranchcreationconfig.basicauthconfig": {
            "Required": "No",
            "Type": "BasicAuthConfig",
            "UpdateRequires": "No interruption"
        },
        "amplify.app.autobranchcreationconfig.enableautobuild": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "amplify.app.autobranchcreationconfig.buildspec": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "amplify.app.autobranchcreationconfig.autobranchcreationpatterns": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "amplify.app.autobranchcreationconfig.environmentvariables": {
            "Required": "No",
            "Type": [
                "EnvironmentVariable"
            ],
            "UpdateRequires": "No interruption"
        },
        "amplify.app.autobranchcreationconfig.enableautobranchcreation": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "amplify.app.autobranchcreationconfig.enablepullrequestpreview": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "amplify.app.autobranchcreationconfig.pullrequestenvironmentname": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "fms.policy.resourcetag.value": {
            "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "fms.policy.resourcetag.key": {
            "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "cognito.identitypool.cognitoidentityprovider.clientid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "cognito.identitypool.cognitoidentityprovider.serversidetokencheck": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "cognito.identitypool.cognitoidentityprovider.providername": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.lifecycleconfig.rule.transition.transitiondate": {
            "Required": "Conditional",
            "Type": "Timestamp",
            "UpdateRequires": "No interruption",
            "SampleValue": "1970-01-01T01:02:30.070Z"
        },
        "s3.bucket.lifecycleconfig.rule.transition.storageclass": {
            "Allowed values": "DEEP_ARCHIVE | GLACIER | INTELLIGENT_TIERING | ONEZONE_IA | STANDARD_IA",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.lifecycleconfig.rule.transition.transitionindays": {
            "Required": "Conditional",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.eip.association.eip": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "ec2.eip.association.privateipaddress": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.eip.association.allocationid": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "ec2.eip.association.instanceid": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "ec2.eip.association.networkinterfaceid": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "Some interruptions",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.application.args": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.application.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.application.version": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.application.additionalinfo": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.sns": {
            "Required": "No",
            "Type": "Sns",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.setvariable": {
            "Required": "No",
            "Type": "SetVariable",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.iotsitewise": {
            "Required": "No",
            "Type": "IotSiteWise",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.dynamodb": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.firehose": {
            "Required": "No",
            "Type": "Firehose",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.resettimer": {
            "Required": "No",
            "Type": "ResetTimer",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.lambda": {
            "Required": "No",
            "Type": "Lambda",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.dynamodbv2": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.settimer": {
            "Required": "No",
            "Type": "SetTimer",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.iotevents": {
            "Required": "No",
            "Type": "IotEvents",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.iottopicpublish": {
            "Required": "No",
            "Type": "IotTopicPublish",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.sqs": {
            "Required": "No",
            "Type": "Sqs",
            "UpdateRequires": "No interruption"
        },
        "iotevents.detectormodel.action.cleartimer": {
            "Required": "No",
            "Type": "ClearTimer",
            "UpdateRequires": "No interruption"
        },
        "ssm.association.target.key": {
            "Pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$|resource-groups:ResourceTypeFilters|resource-groups:Name",
            "Required": "Yes",
            "Maximum": "163",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...163",
            "CompliantValues": "1...163"
        },
        "ssm.association.target.values": {
            "Required": "Yes",
            "Type": "List of String",
            "Maximum": "50",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskdefinition.healthcheck.command": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "ecs.taskdefinition.healthcheck.retries": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.healthcheck.startperiod": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.healthcheck.timeout": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.healthcheck.interval": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "medialive.channel.multiplexprogramchanneldestinationsettings.multiplexid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.multiplexprogramchanneldestinationsettings.programname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "wafv2.rulegroup.orstatementone.statements": {
            "Required": "Yes",
            "Type": [
                "StatementTwo"
            ],
            "UpdateRequires": "No interruption"
        },
        "appmesh.virtualnode.backend.virtualservice": {
            "Required": "No",
            "Type": "VirtualServiceBackend",
            "UpdateRequires": "No interruption"
        },
        "glue.datacatalogencryptionsettings.encryptionatrest.catalogencryptionmode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "glue.datacatalogencryptionsettings.encryptionatrest.sseawskmskeyid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "groundstation.config.frequency.value": {
            "Required": "Yes",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "groundstation.config.frequency.units": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.artifactstoremap.artifactstore": {
            "Required": "Conditional",
            "Type": "ArtifactStore",
            "UpdateRequires": "No interruption"
        },
        "codepipeline.pipeline.artifactstoremap.region": {
            "Minimum": "4",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "30",
            "UpdateRequires": "No interruption",
            "AllowedValues": "4...30",
            "CompliantValues": "4...30"
        },
        "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.filekey": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1024",
            "CompliantValues": "1...1024"
        },
        "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.bucketarn": {
            "Pattern": "arn:.*",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.referencerolearn": {
            "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
            "Required": "Yes",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "events.rule.runcommandparameters.runcommandtargets": {
            "Required": "Yes",
            "Type": [
                "RunCommandTarget"
            ],
            "Maximum": "5",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.instancegroupconfig.scalingaction.simplescalingpolicyconfiguration": {
            "Required": "Yes",
            "Type": "SimpleScalingPolicyConfiguration",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.instancegroupconfig.scalingaction.market": {
            "Allowed values": "ON_DEMAND | SPOT",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.scte27sourcesettings.pid": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.instance.instanceipv6address.ipv6address": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waf.webacl.rules.action": {
            "Required": "No",
            "Type": "WafAction",
            "UpdateRequires": "No interruption"
        },
        "waf.webacl.rules.ruleid": {
            "Pattern": ".*\\S.*",
            "Required": "Yes",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "waf.webacl.rules.priority": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "efs.accesspoint.rootdirectory.creationinfo": {
            "Required": "No",
            "Type": "CreationInfo",
            "UpdateRequires": "Replacement"
        },
        "efs.accesspoint.rootdirectory.path": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "Replacement",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "datapipeline.pipeline.parametervalues.id": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "datapipeline.pipeline.parametervalues.stringvalue": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "10240",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10240",
            "CompliantValues": "0...10240"
        },
        "pinpoint.campaign.limits.total": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "pinpoint.campaign.limits.messagespersecond": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "pinpoint.campaign.limits.maximumduration": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "pinpoint.campaign.limits.daily": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "medialive.channel.outputdestinationsettings.username": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.outputdestinationsettings.streamname": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.outputdestinationsettings.passwordparam": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "medialive.channel.outputdestinationsettings.url": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.stages.actions.rolearn": {
            "Pattern": "arn:aws(-[\\w]+)*:iam::[0-9]{12}:role/.*",
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.stages.actions.namespace": {
            "Pattern": "[A-Za-z0-9@\\-_]+",
            "Required": "No",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "codepipeline.pipeline.stages.actions.actiontypeid": {
            "Required": "Yes",
            "Type": "ActionTypeId",
            "UpdateRequires": "No interruption"
        },
        "codepipeline.pipeline.stages.actions.outputartifacts": {
            "Required": "No",
            "Type": [
                "OutputArtifact"
            ],
            "UpdateRequires": "No interruption"
        },
        "codepipeline.pipeline.stages.actions.name": {
            "Pattern": "[A-Za-z0-9.@\\-_]+",
            "Required": "Yes",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "codepipeline.pipeline.stages.actions.region": {
            "Minimum": "4",
            "Required": "No",
            "Type": "String",
            "Maximum": "30",
            "UpdateRequires": "No interruption",
            "AllowedValues": "4...30",
            "CompliantValues": "4...30"
        },
        "codepipeline.pipeline.stages.actions.inputartifacts": {
            "Required": "No",
            "Type": [
                "InputArtifact"
            ],
            "UpdateRequires": "No interruption"
        },
        "codepipeline.pipeline.stages.actions.runorder": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "999",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...999",
            "CompliantValues": "1...999"
        },
        "codepipeline.pipeline.stages.actions.configuration": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.inputparallelism.count": {
            "Minimum": "1",
            "Required": "No",
            "Type": "Integer",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...64",
            "CompliantValues": "1...64"
        },
        "iotevents.detectormodel.onexit.events": {
            "Required": "No",
            "Type": [
                "Event"
            ],
            "UpdateRequires": "No interruption"
        },
        "ses.receiptfilter.filter.ipfilter": {
            "Required": "Yes",
            "Type": "IpFilter",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptfilter.filter.name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.s3backupconfiguration": {
            "Required": "No",
            "Type": "S3DestinationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.s3backupmode": {
            "Allowed values": "Disabled | Enabled",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.copycommand": {
            "Required": "Yes",
            "Type": "CopyCommand",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.processingconfiguration": {
            "Required": "No",
            "Type": "ProcessingConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.clusterjdbcurl": {
            "Pattern": "jdbc:(redshift|postgresql)://((?!-)[A-Za-z0-9-]{1,63}(?<!-)\\.)+redshift\\.([a-zA-Z0-9\\.]+):\\d{1,5}/[a-zA-Z0-9_$]+",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.retryoptions": {
            "Required": "No",
            "Type": "RedshiftRetryOptions",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.cloudwatchloggingoptions": {
            "Required": "No",
            "Type": "CloudWatchLoggingOptions",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.rolearn": {
            "Pattern": "arn:.*",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.s3configuration": {
            "Required": "Yes",
            "Type": "S3DestinationConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.username": {
            "Pattern": ".*",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...512",
            "CompliantValues": "1...512"
        },
        "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.password": {
            "Pattern": ".*",
            "Required": "Yes",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "Minimum": "6",
            "Type": "String",
            "AllowedValues": "6...512",
            "CompliantValues": "6...512"
        },
        "ec2.network.interface.privateipspec.privateipaddress": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.network.interface.privateipspec.primary": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "route53.hostedzone.queryloggingconfig.cloudwatchlogsloggrouparn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.secretsmanagersecretresourcedata.additionalstaginglabelstodownload": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinitionversion.secretsmanagersecretresourcedata.arn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "appmesh.route.tagref.value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.route.tagref.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "stepfunctions.activity.tagsentry.value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "stepfunctions.activity.tagsentry.key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.segment.segmentdimensions.behavior.recency.recencytype": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.segment.segmentdimensions.behavior.recency.duration": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.campaignemailmessage.title": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.campaignemailmessage.fromaddress": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.campaignemailmessage.body": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "pinpoint.campaign.campaignemailmessage.htmlbody": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "applicationautoscaling.scalabletarget.scheduledaction.endtime": {
            "Required": "No",
            "Type": "Timestamp",
            "UpdateRequires": "No interruption",
            "SampleValue": "1970-01-01T01:02:30.070Z"
        },
        "applicationautoscaling.scalabletarget.scheduledaction.starttime": {
            "Required": "No",
            "Type": "Timestamp",
            "UpdateRequires": "No interruption",
            "SampleValue": "1970-01-01T01:02:30.070Z"
        },
        "applicationautoscaling.scalabletarget.scheduledaction.schedule": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Minimum": "1",
            "Required": "Yes",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...1600",
            "CompliantValues": "1...1600"
        },
        "applicationautoscaling.scalabletarget.scheduledaction.scalabletargetaction": {
            "Required": "No",
            "Type": "ScalableTargetAction",
            "UpdateRequires": "No interruption"
        },
        "applicationautoscaling.scalabletarget.scheduledaction.scheduledactionname": {
            "Pattern": "(?!((^[ ]+.*)|(.*([\\u0000-\\u001f]|[\\u007f-\\u009f]|[:/|])+.*)|(.*[ ]+$))).+",
            "Required": "Yes",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "ecs.service.deploymentcontroller.type": {
            "Type": "String",
            "Required": "No",
            "Allowed Values": "ECS` \\| `EXTERNAL",
            "UpdateRequires": "Replacement",
            "AllowedValues": [
                "ECS` \\| `EXTERNAL"
            ],
            "SampleValue": "ECS` \\| `EXTERNAL",
            "CompliantValues": [
                "ECS` \\| `EXTERNAL"
            ]
        },
        "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.sagemakerjobarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.destinationpath": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.ownersetting": {
            "Required": "No",
            "UpdateRequires": "Replacement"
        },
        "batch.jobdefinition.nodeproperties.mainnode": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "batch.jobdefinition.nodeproperties.numnodes": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "batch.jobdefinition.nodeproperties.noderangeproperties": {
            "Required": "Yes",
            "Type": [
                "NodeRangeProperty"
            ],
            "UpdateRequires": "No interruption"
        },
        "wafregional.sizeconstraintset.sizeconstraint.fieldtomatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "wafregional.sizeconstraintset.sizeconstraint.texttransformation": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "wafregional.sizeconstraintset.sizeconstraint.comparisonoperator": {
            "ComparisonOperator`  <a name=\"cfn-wafregional-sizeconstraintset-sizeconstraint-comparisonoperator\"></a>\nThe type of comparison you want AWS WAF to perform\\. AWS WAF uses this in combination with the provided `Size` and `FieldToMatch` to build an expression in the form of \"`Size` `ComparisonOperator` size in bytes of `FieldToMatch`\"\\. If that expression is true, the `SizeConstraint` is considered to match\\.  \n **EQ*": "Used to test if the `Size` is equal to the size of the `FieldToMatch`   \n **NE*",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "Allowed values": "EQ | GE | GT | LE | LT | NE",
            "SampleValue": "example-string"
        },
        "wafregional.sizeconstraintset.sizeconstraint.size": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "config.remediationconfiguration.remediationparametervalue.staticvalue": {
            "Required": "No",
            "Type": "StaticValue",
            "UpdateRequires": "No interruption"
        },
        "config.remediationconfiguration.remediationparametervalue.resourcevalue": {
            "Required": "No",
            "Type": "ResourceValue",
            "UpdateRequires": "No interruption"
        },
        "cloudfront.distribution.origingroupmembers.quantity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "cloudfront.distribution.origingroupmembers.items": {
            "Required": "Yes",
            "Type": [
                "OriginGroupMember"
            ],
            "Maximum": "2",
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.loadbalancerinfo.elbinfolist": {
            "Required": "No",
            "Type": [
                "ELBInfo"
            ],
            "UpdateRequires": "No interruption"
        },
        "codedeploy.deploymentgroup.loadbalancerinfo.targetgroupinfolist": {
            "Required": "Conditional",
            "Type": [
                "TargetGroupInfo"
            ],
            "UpdateRequires": "No interruption"
        },
        "codepipeline.pipeline.stages.actions.outputartifacts.name": {
            "Pattern": "[a-zA-Z0-9_\\-]+",
            "Required": "Yes",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "Minimum": "1",
            "Type": "String",
            "AllowedValues": "1...100",
            "CompliantValues": "1...100"
        },
        "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.securitygroups.groupid": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.listenertlsfilecertificate.certificatechain": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.listenertlsfilecertificate.privatekey": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.artifactstore.type": {
            "Allowed values": "S3",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "codepipeline.pipeline.artifactstore.location": {
            "Pattern": "[a-zA-Z0-9\\-\\.]+",
            "Required": "Yes",
            "Maximum": "63",
            "UpdateRequires": "No interruption",
            "Minimum": "3",
            "Type": "String",
            "AllowedValues": "3...63",
            "CompliantValues": "3...63"
        },
        "codepipeline.pipeline.artifactstore.encryptionkey": {
            "Required": "No",
            "Type": "EncryptionKey",
            "UpdateRequires": "No interruption"
        },
        "elasticsearch.domain.elasticsearchclusterconfig.dedicatedmastercount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticsearch.domain.elasticsearchclusterconfig.zoneawarenessconfig": {
            "Required": "No",
            "Type": "ZoneAwarenessConfig",
            "UpdateRequires": "No interruption"
        },
        "elasticsearch.domain.elasticsearchclusterconfig.dedicatedmasterenabled": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticsearch.domain.elasticsearchclusterconfig.instancetype": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "elasticsearch.domain.elasticsearchclusterconfig.instancecount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticsearch.domain.elasticsearchclusterconfig.zoneawarenessenabled": {
            "Required": "No",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticsearch.domain.elasticsearchclusterconfig.dedicatedmastertype": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "lambda.eventinvokeconfig.destinationconfig.onsuccess": {
            "Required": "No",
            "Type": "OnSuccess",
            "UpdateRequires": "No interruption"
        },
        "lambda.eventinvokeconfig.destinationconfig.onfailure": {
            "Required": "No",
            "Type": "OnFailure",
            "UpdateRequires": "No interruption"
        },
        "greengrass.resourcedefinition.secretsmanagersecretresourcedata.additionalstaginglabelstodownload": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "Replacement"
        },
        "greengrass.resourcedefinition.secretsmanagersecretresourcedata.arn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.scriptbootstrapactionconfig.args": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "elasticmapreduce.cluster.scriptbootstrapactionconfig.path": {
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "Required": "Yes",
            "Maximum": "10280",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...10280",
            "CompliantValues": "0...10280"
        },
        "apigateway.stage.canarysetting.percenttraffic": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "SampleValue": "123.45"
        },
        "apigateway.stage.canarysetting.deploymentid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.stage.canarysetting.stagevariableoverrides": {
            "Required": "No",
            "Type": "Map of String",
            "UpdateRequires": "No interruption"
        },
        "apigateway.stage.canarysetting.usestagecache": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "elasticmapreduce.cluster.spotprovisioningspecification.timeoutdurationminutes": {
            "Minimum": "0",
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "elasticmapreduce.cluster.spotprovisioningspecification.timeoutaction": {
            "Allowed values": "SWITCH_TO_ON_DEMAND | TERMINATE_CLUSTER",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "elasticmapreduce.cluster.spotprovisioningspecification.blockdurationminutes": {
            "Minimum": "0",
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "config.organizationconfigrule.organizationcustomrulemetadata.tagvaluescope": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "config.organizationconfigrule.organizationcustomrulemetadata.resourceidscope": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "768",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...768",
            "CompliantValues": "1...768"
        },
        "config.organizationconfigrule.organizationcustomrulemetadata.tagkeyscope": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...128",
            "CompliantValues": "1...128"
        },
        "config.organizationconfigrule.organizationcustomrulemetadata.description": {
            "Minimum": "0",
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "0...256",
            "CompliantValues": "0...256"
        },
        "config.organizationconfigrule.organizationcustomrulemetadata.lambdafunctionarn": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...256",
            "CompliantValues": "1...256"
        },
        "config.organizationconfigrule.organizationcustomrulemetadata.maximumexecutionfrequency": {
            "Allowed values": "One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "config.organizationconfigrule.organizationcustomrulemetadata.organizationconfigruletriggertypes": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "config.organizationconfigrule.organizationcustomrulemetadata.inputparameters": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "AllowedValues": "1...2048",
            "CompliantValues": "1...2048"
        },
        "config.organizationconfigrule.organizationcustomrulemetadata.resourcetypesscope": {
            "Required": "No",
            "Type": "List of String",
            "Maximum": "100",
            "UpdateRequires": "No interruption"
        },
        "opsworks.stack.chefconfiguration.berkshelfversion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.chefconfiguration.manageberkshelf": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "s3.bucket.objectlockconfiguration.rule": {
            "Required": "No",
            "Type": "ObjectLockRule",
            "UpdateRequires": "No interruption"
        },
        "s3.bucket.objectlockconfiguration.objectlockenabled": {
            "Allowed values": "Enabled",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.script.s3location.key": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.script.s3location.objectversion": {
            "Minimum": "1",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.script.s3location.bucket": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "gamelift.script.s3location.rolearn": {
            "Minimum": "1",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.healthcheck.protocol": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.healthcheck.healthythreshold": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualnode.healthcheck.timeoutmillis": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualnode.healthcheck.path": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.healthcheck.unhealthythreshold": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualnode.healthcheck.port": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "appmesh.virtualnode.healthcheck.intervalmillis": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "glue.crawler.dynamodbtarget.path": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "iotanalytics.dataset.variable.outputfileurivalue.filename": {
            "Pattern": "[\\w\\.-]{1,255}",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waf.bytematchset.bytematchtuples.targetstring": {
            "Required": "Conditional",
            "UpdateRequires": "No interruption"
        },
        "waf.bytematchset.bytematchtuples.fieldtomatch": {
            "Required": "Yes",
            "Type": "FieldToMatch",
            "UpdateRequires": "No interruption"
        },
        "waf.bytematchset.bytematchtuples.targetstringbase64": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "waf.bytematchset.bytematchtuples.texttransformation": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "waf.bytematchset.bytematchtuples.positionalconstraint": {
            "Required": "Yes",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.flinkapplicationconfiguration.monitoringconfiguration": {
            "Required": "No",
            "Type": "MonitoringConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.flinkapplicationconfiguration.parallelismconfiguration": {
            "Required": "No",
            "Type": "ParallelismConfiguration",
            "UpdateRequires": "No interruption"
        },
        "kinesisanalyticsv2.application.flinkapplicationconfiguration.checkpointconfiguration": {
            "Required": "No",
            "Type": "CheckpointConfiguration",
            "UpdateRequires": "No interruption"
        },
        "ses.receiptrule.workmailaction.topicarn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ses.receiptrule.workmailaction.organizationarn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.defaultretention.days": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "s3.bucket.defaultretention.mode": {
            "Allowed values": "COMPLIANCE | GOVERNANCE",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "s3.bucket.defaultretention.years": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "config.configurationaggregator.organizationaggregationsource.awsregions": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "config.configurationaggregator.organizationaggregationsource.rolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "config.configurationaggregator.organizationaggregationsource.allawsregions": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "managedblockchain.member.memberframeworkconfiguration.memberfabricconfiguration": {
            "Required": "No",
            "Type": "MemberFabricConfiguration",
            "UpdateRequires": "No interruption"
        },
        "ecs.taskdefinition.containerdefinitions.ulimit.hardlimit": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.containerdefinitions.ulimit.softlimit": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "SampleValue": "1"
        },
        "ecs.taskdefinition.containerdefinitions.ulimit.name": {
            "Allowed values": "core | cpu | data | fsize | locks | memlock | msgqueue | nice | nofile | nproc | rss | rtprio | rttime | sigpending | stack",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "SampleValue": "example-string"
        },
        "ec2.network.iface.embedded.deviceindex": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.network.iface.embedded.privateipaddress": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.network.iface.embedded.deleteontermination": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.network.iface.embedded.ipv6addresscount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.network.iface.embedded.networkinterfaceid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.network.iface.embedded.secondaryprivateipaddresscount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "SampleValue": "1"
        },
        "ec2.network.iface.embedded.associatepublicipaddress": {
            "Required": "No",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "ec2.network.iface.embedded.groupset": {
            "Required": "No",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "ec2.network.iface.embedded.privateipaddresses": {
            "Required": "No",
            "Type": [
                "PrivateIpAddressSpecification"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.network.iface.embedded.ipv6addresses": {
            "Required": "No",
            "Type": [
                "InstanceIpv6Address"
            ],
            "UpdateRequires": "No interruption"
        },
        "ec2.network.iface.embedded.subnetid": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "ec2.network.iface.embedded.description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "lambda.eventinvokeconfig.destinationconfig.onfailure.destination": {
            "Pattern": "^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
            "Required": "Yes",
            "Maximum": "350",
            "UpdateRequires": "No interruption",
            "Minimum": "0",
            "Type": "String",
            "AllowedValues": "0...350",
            "CompliantValues": "0...350"
        },
        "msk.cluster.nodeexporter.enabledinbroker": {
            "Required": "Yes",
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "AllowedValues": [
                "True",
                "False"
            ],
            "SampleValue": "False",
            "CompliantValues": [
                "True",
                "False"
            ]
        },
        "apigateway.restapi.s3location.version": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.restapi.s3location.bucket": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.restapi.s3location.etag": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "apigateway.restapi.s3location.key": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.source.1.sshkey": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "opsworks.stack.source.1.url": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.source.1.password": {
            "Required": "No",
            "UpdateRequires": "No interruption"
        },
        "opsworks.stack.source.1.type": {
            "Allowed values": "archive | git | s3 | svn",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.source.1.username": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "opsworks.stack.source.1.revision": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "SampleValue": "example-string"
        },
        "appmesh.virtualnode.tlsvalidationcontextacmtrust.certificateauthorityarns": {
            "Required": "Yes",
            "Type": "List of String",
            "UpdateRequires": "No interruption"
        },
        "msk.cluster.prometheus.jmxexporter": {
            "Required": "No",
            "Type": "JmxExporter",
            "UpdateRequires": "No interruption"
        },
        "msk.cluster.prometheus.nodeexporter": {
            "Required": "No",
            "Type": "NodeExporter",
            "UpdateRequires": "No interruption"
        }
    },
    "Docs2Resource": {
        "aws-iot-certificate": "AWS::IoT::Certificate",
        "aws-iot-policy": "AWS::IoT::Policy",
        "aws-iot-policyprincipalattachment": "AWS::IoT::PolicyPrincipalAttachment",
        "aws-iot-provisioningtemplate": "AWS::IoT::ProvisioningTemplate",
        "aws-iot-thing": "AWS::IoT::Thing",
        "aws-iot-thingprincipalattachment": "AWS::IoT::ThingPrincipalAttachment",
        "aws-iot-topicrule": "AWS::IoT::TopicRule",
        "aws-directoryservice-microsoftad": "AWS::DirectoryService::MicrosoftAD",
        "aws-directoryservice-simplead": "AWS::DirectoryService::SimpleAD",
        "aws-msk-cluster": "AWS::MSK::Cluster",
        "aws-rds-dbcluster": "AWS::RDS::DBCluster",
        "aws-rds-dbclusterparametergroup": "AWS::RDS::DBClusterParameterGroup",
        "aws-rds-dbinstance": "AWS::RDS::DBInstance",
        "aws-rds-dbparametergroup": "AWS::RDS::DBParameterGroup",
        "aws-rds-dbproxy": "AWS::RDS::DBProxy",
        "aws-rds-dbproxytargetgroup": "AWS::RDS::DBProxyTargetGroup",
        "aws-rds-dbsecuritygroup": "AWS::RDS::DBSecurityGroup",
        "aws-rds-dbsecuritygroupingress": "AWS::RDS::DBSecurityGroupIngress",
        "aws-rds-dbsubnetgroup": "AWS::RDS::DBSubnetGroup",
        "aws-rds-eventsubscription": "AWS::RDS::EventSubscription",
        "aws-rds-optiongroup": "AWS::RDS::OptionGroup",
        "aws-efs-accesspoint": "AWS::EFS::AccessPoint",
        "aws-efs-filesystem": "AWS::EFS::FileSystem",
        "aws-efs-mounttarget": "AWS::EFS::MountTarget",
        "aws-dynamodb-table": "AWS::DynamoDB::Table",
        "aws-mediaconvert-jobtemplate": "AWS::MediaConvert::JobTemplate",
        "aws-mediaconvert-preset": "AWS::MediaConvert::Preset",
        "aws-mediaconvert-queue": "AWS::MediaConvert::Queue",
        "aws-datapipeline-pipeline": "AWS::DataPipeline::Pipeline",
        "aws-macie-customdataidentifier": "AWS::Macie::CustomDataIdentifier",
        "aws-macie-findingsfilter": "AWS::Macie::FindingsFilter",
        "aws-macie-session": "AWS::Macie::Session",
        "aws-cloud9-environmentec2": "AWS::Cloud9::EnvironmentEC2",
        "aws-managedblockchain-member": "AWS::ManagedBlockchain::Member",
        "aws-managedblockchain-node": "AWS::ManagedBlockchain::Node",
        "aws-resourcegroups-group": "AWS::ResourceGroups::Group",
        "aws-transfer-server": "AWS::Transfer::Server",
        "aws-transfer-user": "AWS::Transfer::User",
        "aws-globalaccelerator-accelerator": "AWS::GlobalAccelerator::Accelerator",
        "aws-globalaccelerator-endpointgroup": "AWS::GlobalAccelerator::EndpointGroup",
        "aws-globalaccelerator-listener": "AWS::GlobalAccelerator::Listener",
        "aws-acmpca-certificate": "AWS::ACMPCA::Certificate",
        "aws-acmpca-certificateauthority": "AWS::ACMPCA::CertificateAuthority",
        "aws-acmpca-certificateauthorityactivation": "AWS::ACMPCA::CertificateAuthorityActivation",
        "aws-accessanalyzer-analyzer": "AWS::AccessAnalyzer::Analyzer",
        "aws-batch-computeenvironment": "AWS::Batch::ComputeEnvironment",
        "aws-batch-jobdefinition": "AWS::Batch::JobDefinition",
        "aws-batch-jobqueue": "AWS::Batch::JobQueue",
        "aws-route53-healthcheck": "AWS::Route53::HealthCheck",
        "aws-route53-hostedzone": "AWS::Route53::HostedZone",
        "aws-route53-recordset": "AWS::Route53::RecordSet",
        "aws-route53-recordsetgroup": "AWS::Route53::RecordSetGroup",
        "aws-backup-backupplan": "AWS::Backup::BackupPlan",
        "aws-backup-backupselection": "AWS::Backup::BackupSelection",
        "aws-backup-backupvault": "AWS::Backup::BackupVault",
        "aws-cloudformation-customresource": "AWS::CloudFormation::CustomResource",
        "aws-cloudformation-macro": "AWS::CloudFormation::Macro",
        "aws-cloudformation-stack": "AWS::CloudFormation::Stack",
        "aws-cloudformation-waitcondition": "AWS::CloudFormation::WaitCondition",
        "aws-cloudformation-waitconditionhandle": "AWS::CloudFormation::WaitConditionHandle",
        "aws-securityhub-hub": "AWS::SecurityHub::Hub",
        "aws-dlm-lifecyclepolicy": "AWS::DLM::LifecyclePolicy",
        "aws-guardduty-detector": "AWS::GuardDuty::Detector",
        "aws-guardduty-filter": "AWS::GuardDuty::Filter",
        "aws-guardduty-ipset": "AWS::GuardDuty::IPSet",
        "aws-guardduty-master": "AWS::GuardDuty::Master",
        "aws-guardduty-member": "AWS::GuardDuty::Member",
        "aws-guardduty-threatintelset": "AWS::GuardDuty::ThreatIntelSet",
        "aws-pinpointemail-configurationset": "AWS::PinpointEmail::ConfigurationSet",
        "aws-pinpointemail-configurationseteventdestination": "AWS::PinpointEmail::ConfigurationSetEventDestination",
        "aws-pinpointemail-dedicatedippool": "AWS::PinpointEmail::DedicatedIpPool",
        "aws-pinpointemail-identity": "AWS::PinpointEmail::Identity",
        "aws-synthetics-canary": "AWS::Synthetics::Canary",
        "aws-chatbot-slackchannelconfiguration": "AWS::Chatbot::SlackChannelConfiguration",
        "aws-redshift-cluster": "AWS::Redshift::Cluster",
        "aws-redshift-clusterparametergroup": "AWS::Redshift::ClusterParameterGroup",
        "aws-redshift-clustersecuritygroup": "AWS::Redshift::ClusterSecurityGroup",
        "aws-redshift-clustersecuritygroupingress": "AWS::Redshift::ClusterSecurityGroupIngress",
        "aws-redshift-clustersubnetgroup": "AWS::Redshift::ClusterSubnetGroup",
        "aws-cloudtrail-trail": "AWS::CloudTrail::Trail",
        "aws-gamelift-alias": "AWS::GameLift::Alias",
        "aws-gamelift-build": "AWS::GameLift::Build",
        "aws-gamelift-fleet": "AWS::GameLift::Fleet",
        "aws-gamelift-gamesessionqueue": "AWS::GameLift::GameSessionQueue",
        "aws-gamelift-matchmakingconfiguration": "AWS::GameLift::MatchmakingConfiguration",
        "aws-gamelift-matchmakingruleset": "AWS::GameLift::MatchmakingRuleSet",
        "aws-gamelift-script": "AWS::GameLift::Script",
        "aws-elasticloadbalancingv2-listener": "AWS::ElasticLoadBalancingV2::Listener",
        "aws-elasticloadbalancingv2-listenercertificate": "AWS::ElasticLoadBalancingV2::ListenerCertificate",
        "aws-elasticloadbalancingv2-listenerrule": "AWS::ElasticLoadBalancingV2::ListenerRule",
        "aws-elasticloadbalancingv2-loadbalancer": "AWS::ElasticLoadBalancingV2::LoadBalancer",
        "aws-elasticloadbalancingv2-targetgroup": "AWS::ElasticLoadBalancingV2::TargetGroup",
        "aws-apigatewayv2-api": "AWS::ApiGatewayV2::Api",
        "aws-apigatewayv2-apigatewaymanagedoverrides": "AWS::ApiGatewayV2::ApiGatewayManagedOverrides",
        "aws-apigatewayv2-apimapping": "AWS::ApiGatewayV2::ApiMapping",
        "aws-apigatewayv2-authorizer": "AWS::ApiGatewayV2::Authorizer",
        "aws-apigatewayv2-deployment": "AWS::ApiGatewayV2::Deployment",
        "aws-apigatewayv2-domainname": "AWS::ApiGatewayV2::DomainName",
        "aws-apigatewayv2-integration": "AWS::ApiGatewayV2::Integration",
        "aws-apigatewayv2-integrationresponse": "AWS::ApiGatewayV2::IntegrationResponse",
        "aws-apigatewayv2-model": "AWS::ApiGatewayV2::Model",
        "aws-apigatewayv2-route": "AWS::ApiGatewayV2::Route",
        "aws-apigatewayv2-routeresponse": "AWS::ApiGatewayV2::RouteResponse",
        "aws-apigatewayv2-stage": "AWS::ApiGatewayV2::Stage",
        "aws-apigatewayv2-vpclink": "AWS::ApiGatewayV2::VpcLink",
        "aws-elasticloadbalancing-loadbalancer": "AWS::ElasticLoadBalancing::LoadBalancer",
        "aws-mediastore-container": "AWS::MediaStore::Container",
        "aws-ssm-association": "AWS::SSM::Association",
        "aws-ssm-document": "AWS::SSM::Document",
        "aws-ssm-maintenancewindow": "AWS::SSM::MaintenanceWindow",
        "aws-ssm-maintenancewindowtarget": "AWS::SSM::MaintenanceWindowTarget",
        "aws-ssm-maintenancewindowtask": "AWS::SSM::MaintenanceWindowTask",
        "aws-ssm-parameter": "AWS::SSM::Parameter",
        "aws-ssm-patchbaseline": "AWS::SSM::PatchBaseline",
        "aws-ssm-resourcedatasync": "AWS::SSM::ResourceDataSync",
        "aws-elasticbeanstalk-application": "AWS::ElasticBeanstalk::Application",
        "aws-elasticbeanstalk-applicationversion": "AWS::ElasticBeanstalk::ApplicationVersion",
        "aws-elasticbeanstalk-configurationtemplate": "AWS::ElasticBeanstalk::ConfigurationTemplate",
        "aws-elasticbeanstalk-environment": "AWS::ElasticBeanstalk::Environment",
        "aws-ce-costcategory": "AWS::CE::CostCategory",
        "aws-iotanalytics-channel": "AWS::IoTAnalytics::Channel",
        "aws-iotanalytics-dataset": "AWS::IoTAnalytics::Dataset",
        "aws-iotanalytics-datastore": "AWS::IoTAnalytics::Datastore",
        "aws-iotanalytics-pipeline": "AWS::IoTAnalytics::Pipeline",
        "aws-codecommit-repository": "AWS::CodeCommit::Repository",
        "aws-inspector-assessmenttarget": "AWS::Inspector::AssessmentTarget",
        "aws-inspector-assessmenttemplate": "AWS::Inspector::AssessmentTemplate",
        "aws-inspector-resourcegroup": "AWS::Inspector::ResourceGroup",
        "aws-kinesisanalyticsv2-application": "AWS::KinesisAnalyticsV2::Application",
        "aws-kinesisanalyticsv2-applicationcloudwatchloggingoption": "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption",
        "aws-kinesisanalyticsv2-applicationoutput": "AWS::KinesisAnalyticsV2::ApplicationOutput",
        "aws-kinesisanalyticsv2-applicationreferencedatasource": "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource",
        "aws-greengrass-connectordefinition": "AWS::Greengrass::ConnectorDefinition",
        "aws-greengrass-connectordefinitionversion": "AWS::Greengrass::ConnectorDefinitionVersion",
        "aws-greengrass-coredefinition": "AWS::Greengrass::CoreDefinition",
        "aws-greengrass-coredefinitionversion": "AWS::Greengrass::CoreDefinitionVersion",
        "aws-greengrass-devicedefinition": "AWS::Greengrass::DeviceDefinition",
        "aws-greengrass-devicedefinitionversion": "AWS::Greengrass::DeviceDefinitionVersion",
        "aws-greengrass-functiondefinition": "AWS::Greengrass::FunctionDefinition",
        "aws-greengrass-functiondefinitionversion": "AWS::Greengrass::FunctionDefinitionVersion",
        "aws-greengrass-group": "AWS::Greengrass::Group",
        "aws-greengrass-groupversion": "AWS::Greengrass::GroupVersion",
        "aws-greengrass-loggerdefinition": "AWS::Greengrass::LoggerDefinition",
        "aws-greengrass-loggerdefinitionversion": "AWS::Greengrass::LoggerDefinitionVersion",
        "aws-greengrass-resourcedefinition": "AWS::Greengrass::ResourceDefinition",
        "aws-greengrass-resourcedefinitionversion": "AWS::Greengrass::ResourceDefinitionVersion",
        "aws-greengrass-subscriptiondefinition": "AWS::Greengrass::SubscriptionDefinition",
        "aws-greengrass-subscriptiondefinitionversion": "AWS::Greengrass::SubscriptionDefinitionVersion",
        "aws-amazonmq-broker": "AWS::AmazonMQ::Broker",
        "aws-amazonmq-configuration": "AWS::AmazonMQ::Configuration",
        "aws-amazonmq-configurationassociation": "AWS::AmazonMQ::ConfigurationAssociation",
        "aws-sqs-queue": "AWS::SQS::Queue",
        "aws-sqs-queuepolicy": "AWS::SQS::QueuePolicy",
        "aws-budgets-budget": "AWS::Budgets::Budget",
        "aws-sns-subscription": "AWS::SNS::Subscription",
        "aws-sns-topic": "AWS::SNS::Topic",
        "aws-sns-topicpolicy": "AWS::SNS::TopicPolicy",
        "aws-opsworks-app": "AWS::OpsWorks::App",
        "aws-opsworks-elasticloadbalancerattachment": "AWS::OpsWorks::ElasticLoadBalancerAttachment",
        "aws-opsworks-instance": "AWS::OpsWorks::Instance",
        "aws-opsworks-layer": "AWS::OpsWorks::Layer",
        "aws-opsworks-stack": "AWS::OpsWorks::Stack",
        "aws-opsworks-userprofile": "AWS::OpsWorks::UserProfile",
        "aws-opsworks-volume": "AWS::OpsWorks::Volume",
        "aws-cloudfront-cloudfrontoriginaccessidentity": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
        "aws-cloudfront-distribution": "AWS::CloudFront::Distribution",
        "aws-cloudfront-streamingdistribution": "AWS::CloudFront::StreamingDistribution",
        "aws-cassandra-keyspace": "AWS::Cassandra::Keyspace",
        "aws-cassandra-table": "AWS::Cassandra::Table",
        "aws-sagemaker-coderepository": "AWS::SageMaker::CodeRepository",
        "aws-sagemaker-endpoint": "AWS::SageMaker::Endpoint",
        "aws-sagemaker-endpointconfig": "AWS::SageMaker::EndpointConfig",
        "aws-sagemaker-model": "AWS::SageMaker::Model",
        "aws-sagemaker-notebookinstance": "AWS::SageMaker::NotebookInstance",
        "aws-sagemaker-notebookinstancelifecycleconfig": "AWS::SageMaker::NotebookInstanceLifecycleConfig",
        "aws-sagemaker-workteam": "AWS::SageMaker::Workteam",
        "aws-pinpoint-admchannel": "AWS::Pinpoint::ADMChannel",
        "aws-pinpoint-apnschannel": "AWS::Pinpoint::APNSChannel",
        "aws-pinpoint-apnssandboxchannel": "AWS::Pinpoint::APNSSandboxChannel",
        "aws-pinpoint-apnsvoipchannel": "AWS::Pinpoint::APNSVoipChannel",
        "aws-pinpoint-apnsvoipsandboxchannel": "AWS::Pinpoint::APNSVoipSandboxChannel",
        "aws-pinpoint-app": "AWS::Pinpoint::App",
        "aws-pinpoint-applicationsettings": "AWS::Pinpoint::ApplicationSettings",
        "aws-pinpoint-baiduchannel": "AWS::Pinpoint::BaiduChannel",
        "aws-pinpoint-campaign": "AWS::Pinpoint::Campaign",
        "aws-pinpoint-emailchannel": "AWS::Pinpoint::EmailChannel",
        "aws-pinpoint-emailtemplate": "AWS::Pinpoint::EmailTemplate",
        "aws-pinpoint-eventstream": "AWS::Pinpoint::EventStream",
        "aws-pinpoint-gcmchannel": "AWS::Pinpoint::GCMChannel",
        "aws-pinpoint-pushtemplate": "AWS::Pinpoint::PushTemplate",
        "aws-pinpoint-segment": "AWS::Pinpoint::Segment",
        "aws-pinpoint-smschannel": "AWS::Pinpoint::SMSChannel",
        "aws-pinpoint-smstemplate": "AWS::Pinpoint::SmsTemplate",
        "aws-pinpoint-voicechannel": "AWS::Pinpoint::VoiceChannel",
        "aws-cloudwatch-alarm": "AWS::CloudWatch::Alarm",
        "aws-cloudwatch-anomalydetector": "AWS::CloudWatch::AnomalyDetector",
        "aws-cloudwatch-compositealarm": "AWS::CloudWatch::CompositeAlarm",
        "aws-cloudwatch-dashboard": "AWS::CloudWatch::Dashboard",
        "aws-cloudwatch-insightrule": "AWS::CloudWatch::InsightRule",
        "aws-lakeformation-datalakesettings": "AWS::LakeFormation::DataLakeSettings",
        "aws-lakeformation-permissions": "AWS::LakeFormation::Permissions",
        "aws-lakeformation-resource": "AWS::LakeFormation::Resource",
        "aws-athena-datacatalog": "AWS::Athena::DataCatalog",
        "aws-athena-namedquery": "AWS::Athena::NamedQuery",
        "aws-athena-workgroup": "AWS::Athena::WorkGroup",
        "aws-elasticsearch-domain": "AWS::Elasticsearch::Domain",
        "aws-codestar-githubrepository": "AWS::CodeStar::GitHubRepository",
        "aws-groundstation-config": "AWS::GroundStation::Config",
        "aws-groundstation-dataflowendpointgroup": "AWS::GroundStation::DataflowEndpointGroup",
        "aws-groundstation-missionprofile": "AWS::GroundStation::MissionProfile",
        "aws-iotthingsgraph-flowtemplate": "AWS::IoTThingsGraph::FlowTemplate",
        "aws-neptune-dbcluster": "AWS::Neptune::DBCluster",
        "aws-neptune-dbclusterparametergroup": "AWS::Neptune::DBClusterParameterGroup",
        "aws-neptune-dbinstance": "AWS::Neptune::DBInstance",
        "aws-neptune-dbparametergroup": "AWS::Neptune::DBParameterGroup",
        "aws-neptune-dbsubnetgroup": "AWS::Neptune::DBSubnetGroup",
        "aws-codedeploy-application": "AWS::CodeDeploy::Application",
        "aws-codedeploy-deploymentconfig": "AWS::CodeDeploy::DeploymentConfig",
        "aws-codedeploy-deploymentgroup": "AWS::CodeDeploy::DeploymentGroup",
        "aws-eventschemas-discoverer": "AWS::EventSchemas::Discoverer",
        "aws-eventschemas-registry": "AWS::EventSchemas::Registry",
        "aws-eventschemas-registrypolicy": "AWS::EventSchemas::RegistryPolicy",
        "aws-eventschemas-schema": "AWS::EventSchemas::Schema",
        "aws-elasticache-cachecluster": "AWS::ElastiCache::CacheCluster",
        "aws-elasticache-parametergroup": "AWS::ElastiCache::ParameterGroup",
        "aws-elasticache-replicationgroup": "AWS::ElastiCache::ReplicationGroup",
        "aws-elasticache-securitygroup": "AWS::ElastiCache::SecurityGroup",
        "aws-elasticache-securitygroupingress": "AWS::ElastiCache::SecurityGroupIngress",
        "aws-elasticache-subnetgroup": "AWS::ElastiCache::SubnetGroup",
        "aws-glue-classifier": "AWS::Glue::Classifier",
        "aws-glue-connection": "AWS::Glue::Connection",
        "aws-glue-crawler": "AWS::Glue::Crawler",
        "aws-glue-database": "AWS::Glue::Database",
        "aws-glue-datacatalogencryptionsettings": "AWS::Glue::DataCatalogEncryptionSettings",
        "aws-glue-devendpoint": "AWS::Glue::DevEndpoint",
        "aws-glue-job": "AWS::Glue::Job",
        "aws-glue-mltransform": "AWS::Glue::MLTransform",
        "aws-glue-partition": "AWS::Glue::Partition",
        "aws-glue-securityconfiguration": "AWS::Glue::SecurityConfiguration",
        "aws-glue-table": "AWS::Glue::Table",
        "aws-glue-trigger": "AWS::Glue::Trigger",
        "aws-glue-workflow": "AWS::Glue::Workflow",
        "aws-codestarnotifications-notificationrule": "AWS::CodeStarNotifications::NotificationRule",
        "aws-iot1click-device": "AWS::IoT1Click::Device",
        "aws-iot1click-placement": "AWS::IoT1Click::Placement",
        "aws-iot1click-project": "AWS::IoT1Click::Project",
        "aws-autoscalingplans-scalingplan": "AWS::AutoScalingPlans::ScalingPlan",
        "aws-ecr-repository": "AWS::ECR::Repository",
        "aws-kinesisanalytics-application": "AWS::KinesisAnalytics::Application",
        "aws-kinesisanalytics-applicationoutput": "AWS::KinesisAnalytics::ApplicationOutput",
        "aws-kinesisanalytics-applicationreferencedatasource": "AWS::KinesisAnalytics::ApplicationReferenceDataSource",
        "aws-eks-cluster": "AWS::EKS::Cluster",
        "aws-eks-nodegroup": "AWS::EKS::Nodegroup",
        "aws-ses-configurationset": "AWS::SES::ConfigurationSet",
        "aws-ses-configurationseteventdestination": "AWS::SES::ConfigurationSetEventDestination",
        "aws-ses-receiptfilter": "AWS::SES::ReceiptFilter",
        "aws-ses-receiptrule": "AWS::SES::ReceiptRule",
        "aws-ses-receiptruleset": "AWS::SES::ReceiptRuleSet",
        "aws-ses-template": "AWS::SES::Template",
        "aws-sdb-domain": "AWS::SDB::Domain",
        "aws-cognito-identitypool": "AWS::Cognito::IdentityPool",
        "aws-cognito-identitypoolroleattachment": "AWS::Cognito::IdentityPoolRoleAttachment",
        "aws-cognito-userpool": "AWS::Cognito::UserPool",
        "aws-cognito-userpoolclient": "AWS::Cognito::UserPoolClient",
        "aws-cognito-userpooldomain": "AWS::Cognito::UserPoolDomain",
        "aws-cognito-userpoolgroup": "AWS::Cognito::UserPoolGroup",
        "aws-cognito-userpoolidentityprovider": "AWS::Cognito::UserPoolIdentityProvider",
        "aws-cognito-userpoolresourceserver": "AWS::Cognito::UserPoolResourceServer",
        "aws-cognito-userpoolriskconfigurationattachment": "AWS::Cognito::UserPoolRiskConfigurationAttachment",
        "aws-cognito-userpooluicustomizationattachment": "AWS::Cognito::UserPoolUICustomizationAttachment",
        "aws-cognito-userpooluser": "AWS::Cognito::UserPoolUser",
        "aws-cognito-userpoolusertogroupattachment": "AWS::Cognito::UserPoolUserToGroupAttachment",
        "aws-dax-cluster": "AWS::DAX::Cluster",
        "aws-dax-parametergroup": "AWS::DAX::ParameterGroup",
        "aws-dax-subnetgroup": "AWS::DAX::SubnetGroup",
        "aws-logs-destination": "AWS::Logs::Destination",
        "aws-logs-loggroup": "AWS::Logs::LogGroup",
        "aws-logs-logstream": "AWS::Logs::LogStream",
        "aws-logs-metricfilter": "AWS::Logs::MetricFilter",
        "aws-logs-subscriptionfilter": "AWS::Logs::SubscriptionFilter",
        "aws-kinesis-stream": "AWS::Kinesis::Stream",
        "aws-kinesis-streamconsumer": "AWS::Kinesis::StreamConsumer",
        "aws-codestarconnections-connection": "AWS::CodeStarConnections::Connection",
        "aws-qldb-ledger": "AWS::QLDB::Ledger",
        "aws-qldb-stream": "AWS::QLDB::Stream",
        "aws-fsx-filesystem": "AWS::FSx::FileSystem",
        "aws-appstream-directoryconfig": "AWS::AppStream::DirectoryConfig",
        "aws-appstream-fleet": "AWS::AppStream::Fleet",
        "aws-appstream-imagebuilder": "AWS::AppStream::ImageBuilder",
        "aws-appstream-stack": "AWS::AppStream::Stack",
        "aws-appstream-stackfleetassociation": "AWS::AppStream::StackFleetAssociation",
        "aws-appstream-stackuserassociation": "AWS::AppStream::StackUserAssociation",
        "aws-appstream-user": "AWS::AppStream::User",
        "aws-robomaker-fleet": "AWS::RoboMaker::Fleet",
        "aws-robomaker-robot": "AWS::RoboMaker::Robot",
        "aws-robomaker-robotapplication": "AWS::RoboMaker::RobotApplication",
        "aws-robomaker-robotapplicationversion": "AWS::RoboMaker::RobotApplicationVersion",
        "aws-robomaker-simulationapplication": "AWS::RoboMaker::SimulationApplication",
        "aws-robomaker-simulationapplicationversion": "AWS::RoboMaker::SimulationApplicationVersion",
        "aws-lambda-alias": "AWS::Lambda::Alias",
        "aws-lambda-eventinvokeconfig": "AWS::Lambda::EventInvokeConfig",
        "aws-lambda-eventsourcemapping": "AWS::Lambda::EventSourceMapping",
        "aws-lambda-function": "AWS::Lambda::Function",
        "aws-lambda-layerversion": "AWS::Lambda::LayerVersion",
        "aws-lambda-layerversionpermission": "AWS::Lambda::LayerVersionPermission",
        "aws-lambda-permission": "AWS::Lambda::Permission",
        "aws-lambda-version": "AWS::Lambda::Version",
        "aws-codeguruprofiler-profilinggroup": "AWS::CodeGuruProfiler::ProfilingGroup",
        "aws-s3-accesspoint": "AWS::S3::AccessPoint",
        "aws-s3-bucket": "AWS::S3::Bucket",
        "aws-s3-bucketpolicy": "AWS::S3::BucketPolicy",
        "aws-emr-cluster": "AWS::EMR::Cluster",
        "aws-emr-instancefleetconfig": "AWS::EMR::InstanceFleetConfig",
        "aws-emr-instancegroupconfig": "AWS::EMR::InstanceGroupConfig",
        "aws-emr-securityconfiguration": "AWS::EMR::SecurityConfiguration",
        "aws-emr-step": "AWS::EMR::Step",
        "aws-certificatemanager-certificate": "AWS::CertificateManager::Certificate",
        "aws-dms-certificate": "AWS::DMS::Certificate",
        "aws-dms-endpoint": "AWS::DMS::Endpoint",
        "aws-dms-eventsubscription": "AWS::DMS::EventSubscription",
        "aws-dms-replicationinstance": "AWS::DMS::ReplicationInstance",
        "aws-dms-replicationsubnetgroup": "AWS::DMS::ReplicationSubnetGroup",
        "aws-dms-replicationtask": "AWS::DMS::ReplicationTask",
        "aws-iotevents-detectormodel": "AWS::IoTEvents::DetectorModel",
        "aws-iotevents-input": "AWS::IoTEvents::Input",
        "aws-autoscaling-autoscalinggroup": "AWS::AutoScaling::AutoScalingGroup",
        "aws-autoscaling-launchconfiguration": "AWS::AutoScaling::LaunchConfiguration",
        "aws-autoscaling-lifecyclehook": "AWS::AutoScaling::LifecycleHook",
        "aws-autoscaling-scalingpolicy": "AWS::AutoScaling::ScalingPolicy",
        "aws-autoscaling-scheduledaction": "AWS::AutoScaling::ScheduledAction",
        "aws-wafv2-ipset": "AWS::WAFv2::IPSet",
        "aws-wafv2-regexpatternset": "AWS::WAFv2::RegexPatternSet",
        "aws-wafv2-rulegroup": "AWS::WAFv2::RuleGroup",
        "aws-wafv2-webacl": "AWS::WAFv2::WebACL",
        "aws-wafv2-webaclassociation": "AWS::WAFv2::WebACLAssociation",
        "aws-servicecatalog-acceptedportfolioshare": "AWS::ServiceCatalog::AcceptedPortfolioShare",
        "aws-servicecatalog-cloudformationproduct": "AWS::ServiceCatalog::CloudFormationProduct",
        "aws-servicecatalog-cloudformationprovisionedproduct": "AWS::ServiceCatalog::CloudFormationProvisionedProduct",
        "aws-servicecatalog-launchnotificationconstraint": "AWS::ServiceCatalog::LaunchNotificationConstraint",
        "aws-servicecatalog-launchroleconstraint": "AWS::ServiceCatalog::LaunchRoleConstraint",
        "aws-servicecatalog-launchtemplateconstraint": "AWS::ServiceCatalog::LaunchTemplateConstraint",
        "aws-servicecatalog-portfolio": "AWS::ServiceCatalog::Portfolio",
        "aws-servicecatalog-portfolioprincipalassociation": "AWS::ServiceCatalog::PortfolioPrincipalAssociation",
        "aws-servicecatalog-portfolioproductassociation": "AWS::ServiceCatalog::PortfolioProductAssociation",
        "aws-servicecatalog-portfolioshare": "AWS::ServiceCatalog::PortfolioShare",
        "aws-servicecatalog-resourceupdateconstraint": "AWS::ServiceCatalog::ResourceUpdateConstraint",
        "aws-servicecatalog-stacksetconstraint": "AWS::ServiceCatalog::StackSetConstraint",
        "aws-servicecatalog-tagoption": "AWS::ServiceCatalog::TagOption",
        "aws-servicecatalog-tagoptionassociation": "AWS::ServiceCatalog::TagOptionAssociation",
        "aws-config-aggregationauthorization": "AWS::Config::AggregationAuthorization",
        "aws-config-configrule": "AWS::Config::ConfigRule",
        "aws-config-configurationaggregator": "AWS::Config::ConfigurationAggregator",
        "aws-config-configurationrecorder": "AWS::Config::ConfigurationRecorder",
        "aws-config-conformancepack": "AWS::Config::ConformancePack",
        "aws-config-deliverychannel": "AWS::Config::DeliveryChannel",
        "aws-config-organizationconfigrule": "AWS::Config::OrganizationConfigRule",
        "aws-config-organizationconformancepack": "AWS::Config::OrganizationConformancePack",
        "aws-config-remediationconfiguration": "AWS::Config::RemediationConfiguration",
        "aws-applicationautoscaling-scalabletarget": "AWS::ApplicationAutoScaling::ScalableTarget",
        "aws-applicationautoscaling-scalingpolicy": "AWS::ApplicationAutoScaling::ScalingPolicy",
        "aws-events-eventbus": "AWS::Events::EventBus",
        "aws-events-eventbuspolicy": "AWS::Events::EventBusPolicy",
        "aws-events-rule": "AWS::Events::Rule",
        "aws-secretsmanager-resourcepolicy": "AWS::SecretsManager::ResourcePolicy",
        "aws-secretsmanager-rotationschedule": "AWS::SecretsManager::RotationSchedule",
        "aws-secretsmanager-secret": "AWS::SecretsManager::Secret",
        "aws-secretsmanager-secrettargetattachment": "AWS::SecretsManager::SecretTargetAttachment",
        "aws-ram-resourceshare": "AWS::RAM::ResourceShare",
        "aws-iam-accesskey": "AWS::IAM::AccessKey",
        "aws-iam-group": "AWS::IAM::Group",
        "aws-iam-instanceprofile": "AWS::IAM::InstanceProfile",
        "aws-iam-managedpolicy": "AWS::IAM::ManagedPolicy",
        "aws-iam-policy": "AWS::IAM::Policy",
        "aws-iam-role": "AWS::IAM::Role",
        "aws-iam-servicelinkedrole": "AWS::IAM::ServiceLinkedRole",
        "aws-iam-user": "AWS::IAM::User",
        "aws-iam-usertogroupaddition": "AWS::IAM::UserToGroupAddition",
        "aws-wafregional-bytematchset": "AWS::WAFRegional::ByteMatchSet",
        "aws-wafregional-geomatchset": "AWS::WAFRegional::GeoMatchSet",
        "aws-wafregional-ipset": "AWS::WAFRegional::IPSet",
        "aws-wafregional-ratebasedrule": "AWS::WAFRegional::RateBasedRule",
        "aws-wafregional-regexpatternset": "AWS::WAFRegional::RegexPatternSet",
        "aws-wafregional-rule": "AWS::WAFRegional::Rule",
        "aws-wafregional-sizeconstraintset": "AWS::WAFRegional::SizeConstraintSet",
        "aws-wafregional-sqlinjectionmatchset": "AWS::WAFRegional::SqlInjectionMatchSet",
        "aws-wafregional-webacl": "AWS::WAFRegional::WebACL",
        "aws-wafregional-webaclassociation": "AWS::WAFRegional::WebACLAssociation",
        "aws-wafregional-xssmatchset": "AWS::WAFRegional::XssMatchSet",
        "aws-route53resolver-resolverendpoint": "AWS::Route53Resolver::ResolverEndpoint",
        "aws-route53resolver-resolverrule": "AWS::Route53Resolver::ResolverRule",
        "aws-route53resolver-resolverruleassociation": "AWS::Route53Resolver::ResolverRuleAssociation",
        "aws-detective-graph": "AWS::Detective::Graph",
        "aws-detective-memberinvitation": "AWS::Detective::MemberInvitation",
        "aws-fms-notificationchannel": "AWS::FMS::NotificationChannel",
        "aws-fms-policy": "AWS::FMS::Policy",
        "aws-imagebuilder-component": "AWS::ImageBuilder::Component",
        "aws-imagebuilder-distributionconfiguration": "AWS::ImageBuilder::DistributionConfiguration",
        "aws-imagebuilder-image": "AWS::ImageBuilder::Image",
        "aws-imagebuilder-imagepipeline": "AWS::ImageBuilder::ImagePipeline",
        "aws-imagebuilder-imagerecipe": "AWS::ImageBuilder::ImageRecipe",
        "aws-imagebuilder-infrastructureconfiguration": "AWS::ImageBuilder::InfrastructureConfiguration",
        "aws-kms-alias": "AWS::KMS::Alias",
        "aws-kms-key": "AWS::KMS::Key",
        "aws-appsync-apicache": "AWS::AppSync::ApiCache",
        "aws-appsync-apikey": "AWS::AppSync::ApiKey",
        "aws-appsync-datasource": "AWS::AppSync::DataSource",
        "aws-appsync-functionconfiguration": "AWS::AppSync::FunctionConfiguration",
        "aws-appsync-graphqlapi": "AWS::AppSync::GraphQLApi",
        "aws-appsync-graphqlschema": "AWS::AppSync::GraphQLSchema",
        "aws-appsync-resolver": "AWS::AppSync::Resolver",
        "aws-workspaces-workspace": "AWS::WorkSpaces::Workspace",
        "aws-medialive-channel": "AWS::MediaLive::Channel",
        "aws-medialive-input": "AWS::MediaLive::Input",
        "aws-medialive-inputsecuritygroup": "AWS::MediaLive::InputSecurityGroup",
        "aws-docdb-dbcluster": "AWS::DocDB::DBCluster",
        "aws-docdb-dbclusterparametergroup": "AWS::DocDB::DBClusterParameterGroup",
        "aws-docdb-dbinstance": "AWS::DocDB::DBInstance",
        "aws-docdb-dbsubnetgroup": "AWS::DocDB::DBSubnetGroup",
        "aws-amplify-app": "AWS::Amplify::App",
        "aws-amplify-branch": "AWS::Amplify::Branch",
        "aws-amplify-domain": "AWS::Amplify::Domain",
        "aws-apigateway-account": "AWS::ApiGateway::Account",
        "aws-apigateway-apikey": "AWS::ApiGateway::ApiKey",
        "aws-apigateway-authorizer": "AWS::ApiGateway::Authorizer",
        "aws-apigateway-basepathmapping": "AWS::ApiGateway::BasePathMapping",
        "aws-apigateway-clientcertificate": "AWS::ApiGateway::ClientCertificate",
        "aws-apigateway-deployment": "AWS::ApiGateway::Deployment",
        "aws-apigateway-documentationpart": "AWS::ApiGateway::DocumentationPart",
        "aws-apigateway-documentationversion": "AWS::ApiGateway::DocumentationVersion",
        "aws-apigateway-domainname": "AWS::ApiGateway::DomainName",
        "aws-apigateway-gatewayresponse": "AWS::ApiGateway::GatewayResponse",
        "aws-apigateway-method": "AWS::ApiGateway::Method",
        "aws-apigateway-model": "AWS::ApiGateway::Model",
        "aws-apigateway-requestvalidator": "AWS::ApiGateway::RequestValidator",
        "aws-apigateway-resource": "AWS::ApiGateway::Resource",
        "aws-apigateway-restapi": "AWS::ApiGateway::RestApi",
        "aws-apigateway-stage": "AWS::ApiGateway::Stage",
        "aws-apigateway-usageplan": "AWS::ApiGateway::UsagePlan",
        "aws-apigateway-usageplankey": "AWS::ApiGateway::UsagePlanKey",
        "aws-apigateway-vpclink": "AWS::ApiGateway::VpcLink",
        "aws-codepipeline-customactiontype": "AWS::CodePipeline::CustomActionType",
        "aws-codepipeline-pipeline": "AWS::CodePipeline::Pipeline",
        "aws-codepipeline-webhook": "AWS::CodePipeline::Webhook",
        "aws-appconfig-application": "AWS::AppConfig::Application",
        "aws-appconfig-configurationprofile": "AWS::AppConfig::ConfigurationProfile",
        "aws-appconfig-deployment": "AWS::AppConfig::Deployment",
        "aws-appconfig-deploymentstrategy": "AWS::AppConfig::DeploymentStrategy",
        "aws-appconfig-environment": "AWS::AppConfig::Environment",
        "aws-appconfig-hostedconfigurationversion": "AWS::AppConfig::HostedConfigurationVersion",
        "aws-appmesh-mesh": "AWS::AppMesh::Mesh",
        "aws-appmesh-route": "AWS::AppMesh::Route",
        "aws-appmesh-virtualnode": "AWS::AppMesh::VirtualNode",
        "aws-appmesh-virtualrouter": "AWS::AppMesh::VirtualRouter",
        "aws-appmesh-virtualservice": "AWS::AppMesh::VirtualService",
        "aws-waf-bytematchset": "AWS::WAF::ByteMatchSet",
        "aws-waf-ipset": "AWS::WAF::IPSet",
        "aws-waf-rule": "AWS::WAF::Rule",
        "aws-waf-sizeconstraintset": "AWS::WAF::SizeConstraintSet",
        "aws-waf-sqlinjectionmatchset": "AWS::WAF::SqlInjectionMatchSet",
        "aws-waf-webacl": "AWS::WAF::WebACL",
        "aws-waf-xssmatchset": "AWS::WAF::XssMatchSet",
        "aws-servicediscovery-httpnamespace": "AWS::ServiceDiscovery::HttpNamespace",
        "aws-servicediscovery-instance": "AWS::ServiceDiscovery::Instance",
        "aws-servicediscovery-privatednsnamespace": "AWS::ServiceDiscovery::PrivateDnsNamespace",
        "aws-servicediscovery-publicdnsnamespace": "AWS::ServiceDiscovery::PublicDnsNamespace",
        "aws-servicediscovery-service": "AWS::ServiceDiscovery::Service",
        "aws-codebuild-project": "AWS::CodeBuild::Project",
        "aws-codebuild-reportgroup": "AWS::CodeBuild::ReportGroup",
        "aws-codebuild-sourcecredential": "AWS::CodeBuild::SourceCredential",
        "aws-stepfunctions-activity": "AWS::StepFunctions::Activity",
        "aws-stepfunctions-statemachine": "AWS::StepFunctions::StateMachine",
        "aws-ec2-capacityreservation": "AWS::EC2::CapacityReservation",
        "aws-ec2-clientvpnauthorizationrule": "AWS::EC2::ClientVpnAuthorizationRule",
        "aws-ec2-clientvpnendpoint": "AWS::EC2::ClientVpnEndpoint",
        "aws-ec2-clientvpnroute": "AWS::EC2::ClientVpnRoute",
        "aws-ec2-clientvpntargetnetworkassociation": "AWS::EC2::ClientVpnTargetNetworkAssociation",
        "aws-ec2-customergateway": "AWS::EC2::CustomerGateway",
        "aws-ec2-dhcpoptions": "AWS::EC2::DHCPOptions",
        "aws-ec2-ec2fleet": "AWS::EC2::EC2Fleet",
        "aws-ec2-egressonlyinternetgateway": "AWS::EC2::EgressOnlyInternetGateway",
        "aws-ec2-eip": "AWS::EC2::EIP",
        "aws-ec2-eipassociation": "AWS::EC2::EIPAssociation",
        "aws-ec2-flowlog": "AWS::EC2::FlowLog",
        "aws-ec2-gatewayroutetableassociation": "AWS::EC2::GatewayRouteTableAssociation",
        "aws-ec2-host": "AWS::EC2::Host",
        "aws-ec2-instance": "AWS::EC2::Instance",
        "aws-ec2-internetgateway": "AWS::EC2::InternetGateway",
        "aws-ec2-launchtemplate": "AWS::EC2::LaunchTemplate",
        "aws-ec2-localgatewayroute": "AWS::EC2::LocalGatewayRoute",
        "aws-ec2-localgatewayroutetablevpcassociation": "AWS::EC2::LocalGatewayRouteTableVPCAssociation",
        "aws-ec2-natgateway": "AWS::EC2::NatGateway",
        "aws-ec2-networkacl": "AWS::EC2::NetworkAcl",
        "aws-ec2-networkaclentry": "AWS::EC2::NetworkAclEntry",
        "aws-ec2-networkinterface": "AWS::EC2::NetworkInterface",
        "aws-ec2-networkinterfaceattachment": "AWS::EC2::NetworkInterfaceAttachment",
        "aws-ec2-networkinterfacepermission": "AWS::EC2::NetworkInterfacePermission",
        "aws-ec2-placementgroup": "AWS::EC2::PlacementGroup",
        "aws-ec2-prefixlist": "AWS::EC2::PrefixList",
        "aws-ec2-route": "AWS::EC2::Route",
        "aws-ec2-routetable": "AWS::EC2::RouteTable",
        "aws-ec2-securitygroup": "AWS::EC2::SecurityGroup",
        "aws-ec2-securitygroupegress": "AWS::EC2::SecurityGroupEgress",
        "aws-ec2-securitygroupingress": "AWS::EC2::SecurityGroupIngress",
        "aws-ec2-spotfleet": "AWS::EC2::SpotFleet",
        "aws-ec2-subnet": "AWS::EC2::Subnet",
        "aws-ec2-subnetcidrblock": "AWS::EC2::SubnetCidrBlock",
        "aws-ec2-subnetnetworkaclassociation": "AWS::EC2::SubnetNetworkAclAssociation",
        "aws-ec2-subnetroutetableassociation": "AWS::EC2::SubnetRouteTableAssociation",
        "aws-ec2-trafficmirrorfilter": "AWS::EC2::TrafficMirrorFilter",
        "aws-ec2-trafficmirrorfilterrule": "AWS::EC2::TrafficMirrorFilterRule",
        "aws-ec2-trafficmirrorsession": "AWS::EC2::TrafficMirrorSession",
        "aws-ec2-trafficmirrortarget": "AWS::EC2::TrafficMirrorTarget",
        "aws-ec2-transitgateway": "AWS::EC2::TransitGateway",
        "aws-ec2-transitgatewayattachment": "AWS::EC2::TransitGatewayAttachment",
        "aws-ec2-transitgatewayroute": "AWS::EC2::TransitGatewayRoute",
        "aws-ec2-transitgatewayroutetable": "AWS::EC2::TransitGatewayRouteTable",
        "aws-ec2-transitgatewayroutetableassociation": "AWS::EC2::TransitGatewayRouteTableAssociation",
        "aws-ec2-transitgatewayroutetablepropagation": "AWS::EC2::TransitGatewayRouteTablePropagation",
        "aws-ec2-volume": "AWS::EC2::Volume",
        "aws-ec2-volumeattachment": "AWS::EC2::VolumeAttachment",
        "aws-ec2-vpc": "AWS::EC2::VPC",
        "aws-ec2-vpccidrblock": "AWS::EC2::VPCCidrBlock",
        "aws-ec2-vpcdhcpoptionsassociation": "AWS::EC2::VPCDHCPOptionsAssociation",
        "aws-ec2-vpcendpoint": "AWS::EC2::VPCEndpoint",
        "aws-ec2-vpcendpointconnectionnotification": "AWS::EC2::VPCEndpointConnectionNotification",
        "aws-ec2-vpcendpointservice": "AWS::EC2::VPCEndpointService",
        "aws-ec2-vpcendpointservicepermissions": "AWS::EC2::VPCEndpointServicePermissions",
        "aws-ec2-vpcgatewayattachment": "AWS::EC2::VPCGatewayAttachment",
        "aws-ec2-vpcpeeringconnection": "AWS::EC2::VPCPeeringConnection",
        "aws-ec2-vpnconnection": "AWS::EC2::VPNConnection",
        "aws-ec2-vpnconnectionroute": "AWS::EC2::VPNConnectionRoute",
        "aws-ec2-vpngateway": "AWS::EC2::VPNGateway",
        "aws-ec2-vpngatewayroutepropagation": "AWS::EC2::VPNGatewayRoutePropagation",
        "aws-ecs-capacityprovider": "AWS::ECS::CapacityProvider",
        "aws-ecs-cluster": "AWS::ECS::Cluster",
        "aws-ecs-primarytaskset": "AWS::ECS::PrimaryTaskSet",
        "aws-ecs-service": "AWS::ECS::Service",
        "aws-ecs-taskdefinition": "AWS::ECS::TaskDefinition",
        "aws-ecs-taskset": "AWS::ECS::TaskSet",
        "aws-kinesisfirehose-deliverystream": "AWS::KinesisFirehose::DeliveryStream",
        "aws-opsworkscm-server": "AWS::OpsWorksCM::Server",
        "aws-networkmanager-customergatewayassociation": "AWS::NetworkManager::CustomerGatewayAssociation",
        "aws-networkmanager-device": "AWS::NetworkManager::Device",
        "aws-networkmanager-globalnetwork": "AWS::NetworkManager::GlobalNetwork",
        "aws-networkmanager-link": "AWS::NetworkManager::Link",
        "aws-networkmanager-linkassociation": "AWS::NetworkManager::LinkAssociation",
        "aws-networkmanager-site": "AWS::NetworkManager::Site",
        "aws-networkmanager-transitgatewayregistration": "AWS::NetworkManager::TransitGatewayRegistration"
    }
}