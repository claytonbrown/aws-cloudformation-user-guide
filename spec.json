{
    "ResourceTypes": {
        "AWS::AmazonMQ::Broker": {
            "AutoMinorVersionUpgrade": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AmazonMQ::Broker",
                "CloudResourceProperty": "AutoMinorVersionUpgrade",
                "CloudReference": "AWS::AmazonMQ::Broker.AutoMinorVersionUpgrade",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "BrokerName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AmazonMQ::Broker",
                "CloudResourceProperty": "BrokerName",
                "CloudReference": "AWS::AmazonMQ::Broker.BrokerName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Configuration": {
                "Required": "No",
                "Type": "ConfigurationId",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AmazonMQ::Broker",
                "CloudResourceProperty": "Configuration",
                "CloudReference": "AWS::AmazonMQ::Broker.Configuration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Id": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Revision": {
                        "Required": "Yes",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "DeploymentMode": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AmazonMQ::Broker",
                "CloudResourceProperty": "DeploymentMode",
                "CloudReference": "AWS::AmazonMQ::Broker.DeploymentMode",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EncryptionOptions": {
                "Required": "No",
                "Type": "EncryptionOptions",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AmazonMQ::Broker",
                "CloudResourceProperty": "EncryptionOptions",
                "CloudReference": "AWS::AmazonMQ::Broker.EncryptionOptions",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "KmsKeyId": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "UseAwsOwnedKey": {
                        "Required": "Yes",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "EngineType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AmazonMQ::Broker",
                "CloudResourceProperty": "EngineType",
                "CloudReference": "AWS::AmazonMQ::Broker.EngineType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EngineVersion": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AmazonMQ::Broker",
                "CloudResourceProperty": "EngineVersion",
                "CloudReference": "AWS::AmazonMQ::Broker.EngineVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "HostInstanceType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AmazonMQ::Broker",
                "CloudResourceProperty": "HostInstanceType",
                "CloudReference": "AWS::AmazonMQ::Broker.HostInstanceType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Logs": {
                "Required": "No",
                "Type": "LogList",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AmazonMQ::Broker",
                "CloudResourceProperty": "Logs",
                "CloudReference": "AWS::AmazonMQ::Broker.Logs",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Audit": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "General": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "MaintenanceWindowStartTime": {
                "Required": "No",
                "Type": "MaintenanceWindow",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AmazonMQ::Broker",
                "CloudResourceProperty": "MaintenanceWindowStartTime",
                "CloudReference": "AWS::AmazonMQ::Broker.MaintenanceWindowStartTime",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DayOfWeek": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "TimeOfDay": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "TimeZone": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "PubliclyAccessible": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AmazonMQ::Broker",
                "CloudResourceProperty": "PubliclyAccessible",
                "CloudReference": "AWS::AmazonMQ::Broker.PubliclyAccessible",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SecurityGroups": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "SubnetIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "Tags": {},
            "Users": {
                "Required": "Yes",
                "Type": "List of [User",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::AmazonMQ::Broker.AutoMinorVersionUpgrade": {
            "Required": "Yes",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AmazonMQ::Broker",
            "CloudResourceProperty": "AutoMinorVersionUpgrade",
            "CloudReference": "AWS::AmazonMQ::Broker.AutoMinorVersionUpgrade",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AmazonMQ::Broker.BrokerName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AmazonMQ::Broker",
            "CloudResourceProperty": "BrokerName",
            "CloudReference": "AWS::AmazonMQ::Broker.BrokerName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AmazonMQ::Broker.Configuration": {
            "Required": "No",
            "Type": "ConfigurationId",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AmazonMQ::Broker",
            "CloudResourceProperty": "Configuration",
            "CloudReference": "AWS::AmazonMQ::Broker.Configuration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Id": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Revision": {
                    "Required": "Yes",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AmazonMQ::Broker.DeploymentMode": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AmazonMQ::Broker",
            "CloudResourceProperty": "DeploymentMode",
            "CloudReference": "AWS::AmazonMQ::Broker.DeploymentMode",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AmazonMQ::Broker.EncryptionOptions": {
            "Required": "No",
            "Type": "EncryptionOptions",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AmazonMQ::Broker",
            "CloudResourceProperty": "EncryptionOptions",
            "CloudReference": "AWS::AmazonMQ::Broker.EncryptionOptions",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "KmsKeyId": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "UseAwsOwnedKey": {
                    "Required": "Yes",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AmazonMQ::Broker.EngineType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AmazonMQ::Broker",
            "CloudResourceProperty": "EngineType",
            "CloudReference": "AWS::AmazonMQ::Broker.EngineType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AmazonMQ::Broker.EngineVersion": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AmazonMQ::Broker",
            "CloudResourceProperty": "EngineVersion",
            "CloudReference": "AWS::AmazonMQ::Broker.EngineVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AmazonMQ::Broker.HostInstanceType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AmazonMQ::Broker",
            "CloudResourceProperty": "HostInstanceType",
            "CloudReference": "AWS::AmazonMQ::Broker.HostInstanceType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AmazonMQ::Broker.Logs": {
            "Required": "No",
            "Type": "LogList",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AmazonMQ::Broker",
            "CloudResourceProperty": "Logs",
            "CloudReference": "AWS::AmazonMQ::Broker.Logs",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Audit": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "General": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AmazonMQ::Broker.MaintenanceWindowStartTime": {
            "Required": "No",
            "Type": "MaintenanceWindow",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AmazonMQ::Broker",
            "CloudResourceProperty": "MaintenanceWindowStartTime",
            "CloudReference": "AWS::AmazonMQ::Broker.MaintenanceWindowStartTime",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DayOfWeek": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "TimeOfDay": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "TimeZone": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AmazonMQ::Broker.PubliclyAccessible": {
            "Required": "Yes",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AmazonMQ::Broker",
            "CloudResourceProperty": "PubliclyAccessible",
            "CloudReference": "AWS::AmazonMQ::Broker.PubliclyAccessible",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AmazonMQ::Configuration": {
            "Data": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AmazonMQ::Configuration",
                "CloudResourceProperty": "Data",
                "CloudReference": "AWS::AmazonMQ::Configuration.Data",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AmazonMQ::Configuration",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::AmazonMQ::Configuration.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EngineType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AmazonMQ::Configuration",
                "CloudResourceProperty": "EngineType",
                "CloudReference": "AWS::AmazonMQ::Configuration.EngineType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EngineVersion": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AmazonMQ::Configuration",
                "CloudResourceProperty": "EngineVersion",
                "CloudReference": "AWS::AmazonMQ::Configuration.EngineVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AmazonMQ::Configuration",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::AmazonMQ::Configuration.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [TagsEntry",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AmazonMQ::Configuration",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::AmazonMQ::Configuration.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Key": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Value": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::AmazonMQ::Configuration.Data": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AmazonMQ::Configuration",
            "CloudResourceProperty": "Data",
            "CloudReference": "AWS::AmazonMQ::Configuration.Data",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AmazonMQ::Configuration.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AmazonMQ::Configuration",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::AmazonMQ::Configuration.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AmazonMQ::Configuration.EngineType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AmazonMQ::Configuration",
            "CloudResourceProperty": "EngineType",
            "CloudReference": "AWS::AmazonMQ::Configuration.EngineType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AmazonMQ::Configuration.EngineVersion": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AmazonMQ::Configuration",
            "CloudResourceProperty": "EngineVersion",
            "CloudReference": "AWS::AmazonMQ::Configuration.EngineVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AmazonMQ::Configuration.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AmazonMQ::Configuration",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::AmazonMQ::Configuration.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AmazonMQ::Configuration.Tags": {
            "Required": "No",
            "Type": "List of [TagsEntry",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AmazonMQ::Configuration",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::AmazonMQ::Configuration.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Key": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Value": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AmazonMQ::ConfigurationAssociation": {
            "Broker": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AmazonMQ::ConfigurationAssociation",
                "CloudResourceProperty": "Broker",
                "CloudReference": "AWS::AmazonMQ::ConfigurationAssociation.Broker",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Configuration": {
                "Required": "Yes",
                "Type": "ConfigurationId",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AmazonMQ::ConfigurationAssociation",
                "CloudResourceProperty": "Configuration",
                "CloudReference": "AWS::AmazonMQ::ConfigurationAssociation.Configuration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Id": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Revision": {
                        "Required": "Yes",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::AmazonMQ::ConfigurationAssociation.Broker": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AmazonMQ::ConfigurationAssociation",
            "CloudResourceProperty": "Broker",
            "CloudReference": "AWS::AmazonMQ::ConfigurationAssociation.Broker",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AmazonMQ::ConfigurationAssociation.Configuration": {
            "Required": "Yes",
            "Type": "ConfigurationId",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AmazonMQ::ConfigurationAssociation",
            "CloudResourceProperty": "Configuration",
            "CloudReference": "AWS::AmazonMQ::ConfigurationAssociation.Configuration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Id": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Revision": {
                    "Required": "Yes",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Amplify::App": {
            "AccessToken": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Amplify::App",
                "CloudResourceProperty": "AccessToken",
                "CloudReference": "AWS::Amplify::App.AccessToken",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AutoBranchCreationConfig": {
                "Required": "No",
                "Type": "AutoBranchCreationConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Amplify::App",
                "CloudResourceProperty": "AutoBranchCreationConfig",
                "CloudReference": "AWS::Amplify::App.AutoBranchCreationConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AutoBranchCreationPatterns": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    },
                    "BasicAuthConfig": {
                        "Required": "No",
                        "Type": "BasicAuthConfig",
                        "UpdateRequires": "No interruption"
                    },
                    "BuildSpec": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "EnableAutoBranchCreation": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "EnableAutoBuild": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "EnvironmentVariables": {
                        "Required": "No",
                        "Type": "List of [EnvironmentVariable",
                        "UpdateRequires": "No interruption"
                    },
                    "Stage": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "BasicAuthConfig": {
                "Required": "No",
                "Type": "BasicAuthConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Amplify::App",
                "CloudResourceProperty": "BasicAuthConfig",
                "CloudReference": "AWS::Amplify::App.BasicAuthConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "EnableBasicAuth": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "Password": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Username": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "BuildSpec": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Amplify::App",
                "CloudResourceProperty": "BuildSpec",
                "CloudReference": "AWS::Amplify::App.BuildSpec",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CustomRules": {
                "Required": "No",
                "Type": "List of [CustomRule",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Amplify::App",
                "CloudResourceProperty": "CustomRules",
                "CloudReference": "AWS::Amplify::App.CustomRules",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Condition": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Source": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Status": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Target": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Amplify::App",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::Amplify::App.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EnvironmentVariables": {
                "Required": "No",
                "Type": "List of [EnvironmentVariable",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Amplify::App",
                "CloudResourceProperty": "EnvironmentVariables",
                "CloudReference": "AWS::Amplify::App.EnvironmentVariables",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Name": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Value": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "IAMServiceRole": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Amplify::App",
                "CloudResourceProperty": "IAMServiceRole",
                "CloudReference": "AWS::Amplify::App.IAMServiceRole",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Amplify::App",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Amplify::App.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "OauthToken": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Amplify::App",
                "CloudResourceProperty": "OauthToken",
                "CloudReference": "AWS::Amplify::App.OauthToken",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Repository": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Amplify::App",
                "CloudResourceProperty": "Repository",
                "CloudReference": "AWS::Amplify::App.Repository",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Amplify::App",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::Amplify::App.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Amplify::App.AccessToken": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Amplify::App",
            "CloudResourceProperty": "AccessToken",
            "CloudReference": "AWS::Amplify::App.AccessToken",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Amplify::App.AutoBranchCreationConfig": {
            "Required": "No",
            "Type": "AutoBranchCreationConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Amplify::App",
            "CloudResourceProperty": "AutoBranchCreationConfig",
            "CloudReference": "AWS::Amplify::App.AutoBranchCreationConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AutoBranchCreationPatterns": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                },
                "BasicAuthConfig": {
                    "Required": "No",
                    "Type": "BasicAuthConfig",
                    "UpdateRequires": "No interruption"
                },
                "BuildSpec": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "EnableAutoBranchCreation": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "EnableAutoBuild": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "EnvironmentVariables": {
                    "Required": "No",
                    "Type": "List of [EnvironmentVariable",
                    "UpdateRequires": "No interruption"
                },
                "Stage": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Amplify::App.BasicAuthConfig": {
            "Required": "No",
            "Type": "BasicAuthConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Amplify::App",
            "CloudResourceProperty": "BasicAuthConfig",
            "CloudReference": "AWS::Amplify::App.BasicAuthConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "EnableBasicAuth": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "Password": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Username": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Amplify::App.BuildSpec": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Amplify::App",
            "CloudResourceProperty": "BuildSpec",
            "CloudReference": "AWS::Amplify::App.BuildSpec",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Amplify::App.CustomRules": {
            "Required": "No",
            "Type": "List of [CustomRule",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Amplify::App",
            "CloudResourceProperty": "CustomRules",
            "CloudReference": "AWS::Amplify::App.CustomRules",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Condition": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Source": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Status": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Target": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Amplify::App.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Amplify::App",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::Amplify::App.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Amplify::App.EnvironmentVariables": {
            "Required": "No",
            "Type": "List of [EnvironmentVariable",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Amplify::App",
            "CloudResourceProperty": "EnvironmentVariables",
            "CloudReference": "AWS::Amplify::App.EnvironmentVariables",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Name": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Value": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Amplify::App.IAMServiceRole": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Amplify::App",
            "CloudResourceProperty": "IAMServiceRole",
            "CloudReference": "AWS::Amplify::App.IAMServiceRole",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Amplify::App.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Amplify::App",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Amplify::App.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Amplify::App.OauthToken": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Amplify::App",
            "CloudResourceProperty": "OauthToken",
            "CloudReference": "AWS::Amplify::App.OauthToken",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Amplify::App.Repository": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Amplify::App",
            "CloudResourceProperty": "Repository",
            "CloudReference": "AWS::Amplify::App.Repository",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Amplify::App.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Amplify::App",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::Amplify::App.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Amplify::Branch": {
            "AppId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Amplify::Branch",
                "CloudResourceProperty": "AppId",
                "CloudReference": "AWS::Amplify::Branch.AppId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "BasicAuthConfig": {
                "Required": "No",
                "Type": "BasicAuthConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Amplify::Branch",
                "CloudResourceProperty": "BasicAuthConfig",
                "CloudReference": "AWS::Amplify::Branch.BasicAuthConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "EnableBasicAuth": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "Password": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Username": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "BranchName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Amplify::Branch",
                "CloudResourceProperty": "BranchName",
                "CloudReference": "AWS::Amplify::Branch.BranchName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "BuildSpec": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Amplify::Branch",
                "CloudResourceProperty": "BuildSpec",
                "CloudReference": "AWS::Amplify::Branch.BuildSpec",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Amplify::Branch",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::Amplify::Branch.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EnableAutoBuild": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Amplify::Branch",
                "CloudResourceProperty": "EnableAutoBuild",
                "CloudReference": "AWS::Amplify::Branch.EnableAutoBuild",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EnvironmentVariables": {
                "Required": "No",
                "Type": "List of [EnvironmentVariable",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Amplify::Branch",
                "CloudResourceProperty": "EnvironmentVariables",
                "CloudReference": "AWS::Amplify::Branch.EnvironmentVariables",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Name": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Value": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Stage": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Amplify::Branch",
                "CloudResourceProperty": "Stage",
                "CloudReference": "AWS::Amplify::Branch.Stage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Amplify::Branch",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::Amplify::Branch.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Amplify::Branch.AppId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Amplify::Branch",
            "CloudResourceProperty": "AppId",
            "CloudReference": "AWS::Amplify::Branch.AppId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Amplify::Branch.BasicAuthConfig": {
            "Required": "No",
            "Type": "BasicAuthConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Amplify::Branch",
            "CloudResourceProperty": "BasicAuthConfig",
            "CloudReference": "AWS::Amplify::Branch.BasicAuthConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "EnableBasicAuth": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "Password": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Username": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Amplify::Branch.BranchName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Amplify::Branch",
            "CloudResourceProperty": "BranchName",
            "CloudReference": "AWS::Amplify::Branch.BranchName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Amplify::Branch.BuildSpec": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Amplify::Branch",
            "CloudResourceProperty": "BuildSpec",
            "CloudReference": "AWS::Amplify::Branch.BuildSpec",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Amplify::Branch.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Amplify::Branch",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::Amplify::Branch.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Amplify::Branch.EnableAutoBuild": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Amplify::Branch",
            "CloudResourceProperty": "EnableAutoBuild",
            "CloudReference": "AWS::Amplify::Branch.EnableAutoBuild",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Amplify::Branch.EnvironmentVariables": {
            "Required": "No",
            "Type": "List of [EnvironmentVariable",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Amplify::Branch",
            "CloudResourceProperty": "EnvironmentVariables",
            "CloudReference": "AWS::Amplify::Branch.EnvironmentVariables",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Name": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Value": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Amplify::Branch.Stage": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Amplify::Branch",
            "CloudResourceProperty": "Stage",
            "CloudReference": "AWS::Amplify::Branch.Stage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Amplify::Branch.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Amplify::Branch",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::Amplify::Branch.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Amplify::Domain": {
            "AppId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Amplify::Domain",
                "CloudResourceProperty": "AppId",
                "CloudReference": "AWS::Amplify::Domain.AppId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DomainName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Amplify::Domain",
                "CloudResourceProperty": "DomainName",
                "CloudReference": "AWS::Amplify::Domain.DomainName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SubDomainSettings": {
                "Required": "Yes",
                "Type": "List of [SubDomainSetting",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Amplify::Domain",
                "CloudResourceProperty": "SubDomainSettings",
                "CloudReference": "AWS::Amplify::Domain.SubDomainSettings",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "BranchName": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Prefix": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::Amplify::Domain.AppId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Amplify::Domain",
            "CloudResourceProperty": "AppId",
            "CloudReference": "AWS::Amplify::Domain.AppId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Amplify::Domain.DomainName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Amplify::Domain",
            "CloudResourceProperty": "DomainName",
            "CloudReference": "AWS::Amplify::Domain.DomainName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Amplify::Domain.SubDomainSettings": {
            "Required": "Yes",
            "Type": "List of [SubDomainSetting",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Amplify::Domain",
            "CloudResourceProperty": "SubDomainSettings",
            "CloudReference": "AWS::Amplify::Domain.SubDomainSettings",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "BranchName": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Prefix": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ApiGateway::Account": {
            "CloudWatchRoleArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Account",
                "CloudResourceProperty": "CloudWatchRoleArn",
                "CloudReference": "AWS::ApiGateway::Account.CloudWatchRoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGateway::Account.CloudWatchRoleArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Account",
            "CloudResourceProperty": "CloudWatchRoleArn",
            "CloudReference": "AWS::ApiGateway::Account.CloudWatchRoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::ApiKey": {
            "CustomerId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::ApiKey",
                "CloudResourceProperty": "CustomerId",
                "CloudReference": "AWS::ApiGateway::ApiKey.CustomerId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::ApiKey",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ApiGateway::ApiKey.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::ApiKey",
                "CloudResourceProperty": "Enabled",
                "CloudReference": "AWS::ApiGateway::ApiKey.Enabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "GenerateDistinctId": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::ApiKey",
                "CloudResourceProperty": "GenerateDistinctId",
                "CloudReference": "AWS::ApiGateway::ApiKey.GenerateDistinctId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::ApiKey",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::ApiGateway::ApiKey.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "StageKeys": {
                "Required": "No",
                "Type": "List of [StageKey",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::ApiKey",
                "CloudResourceProperty": "StageKeys",
                "CloudReference": "AWS::ApiGateway::ApiKey.StageKeys",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "RestApiId": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "StageName": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::ApiKey",
                "CloudResourceProperty": "Value",
                "CloudReference": "AWS::ApiGateway::ApiKey.Value",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGateway::ApiKey.CustomerId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::ApiKey",
            "CloudResourceProperty": "CustomerId",
            "CloudReference": "AWS::ApiGateway::ApiKey.CustomerId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::ApiKey.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::ApiKey",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ApiGateway::ApiKey.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::ApiKey.Enabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::ApiKey",
            "CloudResourceProperty": "Enabled",
            "CloudReference": "AWS::ApiGateway::ApiKey.Enabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::ApiKey.GenerateDistinctId": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::ApiKey",
            "CloudResourceProperty": "GenerateDistinctId",
            "CloudReference": "AWS::ApiGateway::ApiKey.GenerateDistinctId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::ApiKey.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::ApiKey",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::ApiGateway::ApiKey.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::ApiKey.StageKeys": {
            "Required": "No",
            "Type": "List of [StageKey",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::ApiKey",
            "CloudResourceProperty": "StageKeys",
            "CloudReference": "AWS::ApiGateway::ApiKey.StageKeys",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "RestApiId": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "StageName": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ApiGateway::ApiKey.Value": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::ApiKey",
            "CloudResourceProperty": "Value",
            "CloudReference": "AWS::ApiGateway::ApiKey.Value",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Authorizer": {
            "AuthType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Authorizer",
                "CloudResourceProperty": "AuthType",
                "CloudReference": "AWS::ApiGateway::Authorizer.AuthType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AuthorizerCredentials": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Authorizer",
                "CloudResourceProperty": "AuthorizerCredentials",
                "CloudReference": "AWS::ApiGateway::Authorizer.AuthorizerCredentials",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AuthorizerResultTtlInSeconds": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Authorizer",
                "CloudResourceProperty": "AuthorizerResultTtlInSeconds",
                "CloudReference": "AWS::ApiGateway::Authorizer.AuthorizerResultTtlInSeconds",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AuthorizerUri": {},
            "IdentitySource": {},
            "IdentityValidationExpression": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Authorizer",
                "CloudResourceProperty": "IdentityValidationExpression",
                "CloudReference": "AWS::ApiGateway::Authorizer.IdentityValidationExpression",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Authorizer",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::ApiGateway::Authorizer.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ProviderARNs": {},
            "RestApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::Authorizer",
                "CloudResourceProperty": "RestApiId",
                "CloudReference": "AWS::ApiGateway::Authorizer.RestApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Authorizer",
                "CloudResourceProperty": "Type",
                "CloudReference": "AWS::ApiGateway::Authorizer.Type",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGateway::Authorizer.AuthType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Authorizer",
            "CloudResourceProperty": "AuthType",
            "CloudReference": "AWS::ApiGateway::Authorizer.AuthType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Authorizer.AuthorizerCredentials": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Authorizer",
            "CloudResourceProperty": "AuthorizerCredentials",
            "CloudReference": "AWS::ApiGateway::Authorizer.AuthorizerCredentials",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Authorizer.AuthorizerResultTtlInSeconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Authorizer",
            "CloudResourceProperty": "AuthorizerResultTtlInSeconds",
            "CloudReference": "AWS::ApiGateway::Authorizer.AuthorizerResultTtlInSeconds",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Authorizer.IdentityValidationExpression": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Authorizer",
            "CloudResourceProperty": "IdentityValidationExpression",
            "CloudReference": "AWS::ApiGateway::Authorizer.IdentityValidationExpression",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Authorizer.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Authorizer",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::ApiGateway::Authorizer.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Authorizer.RestApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::Authorizer",
            "CloudResourceProperty": "RestApiId",
            "CloudReference": "AWS::ApiGateway::Authorizer.RestApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Authorizer.Type": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Authorizer",
            "CloudResourceProperty": "Type",
            "CloudReference": "AWS::ApiGateway::Authorizer.Type",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::BasePathMapping": {
            "BasePath": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::BasePathMapping",
                "CloudResourceProperty": "BasePath",
                "CloudReference": "AWS::ApiGateway::BasePathMapping.BasePath",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DomainName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::BasePathMapping",
                "CloudResourceProperty": "DomainName",
                "CloudReference": "AWS::ApiGateway::BasePathMapping.DomainName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RestApiId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::BasePathMapping",
                "CloudResourceProperty": "RestApiId",
                "CloudReference": "AWS::ApiGateway::BasePathMapping.RestApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Stage": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::BasePathMapping",
                "CloudResourceProperty": "Stage",
                "CloudReference": "AWS::ApiGateway::BasePathMapping.Stage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGateway::BasePathMapping.BasePath": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::BasePathMapping",
            "CloudResourceProperty": "BasePath",
            "CloudReference": "AWS::ApiGateway::BasePathMapping.BasePath",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::BasePathMapping.DomainName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::BasePathMapping",
            "CloudResourceProperty": "DomainName",
            "CloudReference": "AWS::ApiGateway::BasePathMapping.DomainName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::BasePathMapping.RestApiId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::BasePathMapping",
            "CloudResourceProperty": "RestApiId",
            "CloudReference": "AWS::ApiGateway::BasePathMapping.RestApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::BasePathMapping.Stage": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::BasePathMapping",
            "CloudResourceProperty": "Stage",
            "CloudReference": "AWS::ApiGateway::BasePathMapping.Stage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::ClientCertificate": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::ClientCertificate",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ApiGateway::ClientCertificate.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGateway::ClientCertificate.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::ClientCertificate",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ApiGateway::ClientCertificate.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Deployment": {
            "DeploymentCanarySettings": {
                "Required": "No",
                "Type": "DeploymentCanarySettings",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::Deployment",
                "CloudResourceProperty": "DeploymentCanarySettings",
                "CloudReference": "AWS::ApiGateway::Deployment.DeploymentCanarySettings",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "PercentTraffic": {
                        "Required": "No",
                        "Type": "Double",
                        "UpdateRequires": "Replacement"
                    },
                    "StageVariableOverrides": {
                        "Required": "No",
                        "Type": "Map of String",
                        "UpdateRequires": "Replacement"
                    },
                    "UseStageCache": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Deployment",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ApiGateway::Deployment.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RestApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::Deployment",
                "CloudResourceProperty": "RestApiId",
                "CloudReference": "AWS::ApiGateway::Deployment.RestApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "StageDescription": {
                "Required": "No",
                "Type": "StageDescription",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Deployment",
                "CloudResourceProperty": "StageDescription",
                "CloudReference": "AWS::ApiGateway::Deployment.StageDescription",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AccessLogSetting": {
                        "Required": "No",
                        "Type": "AccessLogSetting",
                        "UpdateRequires": "No interruption"
                    },
                    "CacheClusterEnabled": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "CacheClusterSize": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "CacheDataEncrypted": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "CacheTtlInSeconds": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "CachingEnabled": {
                        "AllowedValues": [
                            "True",
                            "False"
                        ]
                    },
                    "CanarySetting": {
                        "Required": "No",
                        "Type": "CanarySetting",
                        "UpdateRequires": "No interruption"
                    },
                    "ClientCertificateId": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "DataTraceEnabled": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "Description": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "DocumentationVersion": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "LoggingLevel": {},
                    "MethodSettings": {
                        "Required": "No",
                        "Type": "List of [MethodSetting",
                        "UpdateRequires": "No interruption"
                    },
                    "MetricsEnabled": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "Tags": {
                        "Required": "No",
                        "Type": "List of [Tag",
                        "UpdateRequires": "No interruption"
                    },
                    "ThrottlingBurstLimit": {},
                    "ThrottlingRateLimit": {},
                    "TracingEnabled": {
                        "AllowedValues": [
                            "True",
                            "False"
                        ]
                    },
                    "Variables": {
                        "Required": "No",
                        "Type": "Map of String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "StageName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Deployment",
                "CloudResourceProperty": "StageName",
                "CloudReference": "AWS::ApiGateway::Deployment.StageName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGateway::Deployment.DeploymentCanarySettings": {
            "Required": "No",
            "Type": "DeploymentCanarySettings",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::Deployment",
            "CloudResourceProperty": "DeploymentCanarySettings",
            "CloudReference": "AWS::ApiGateway::Deployment.DeploymentCanarySettings",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "PercentTraffic": {
                    "Required": "No",
                    "Type": "Double",
                    "UpdateRequires": "Replacement"
                },
                "StageVariableOverrides": {
                    "Required": "No",
                    "Type": "Map of String",
                    "UpdateRequires": "Replacement"
                },
                "UseStageCache": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::ApiGateway::Deployment.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Deployment",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ApiGateway::Deployment.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Deployment.RestApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::Deployment",
            "CloudResourceProperty": "RestApiId",
            "CloudReference": "AWS::ApiGateway::Deployment.RestApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Deployment.StageDescription": {
            "Required": "No",
            "Type": "StageDescription",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Deployment",
            "CloudResourceProperty": "StageDescription",
            "CloudReference": "AWS::ApiGateway::Deployment.StageDescription",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AccessLogSetting": {
                    "Required": "No",
                    "Type": "AccessLogSetting",
                    "UpdateRequires": "No interruption"
                },
                "CacheClusterEnabled": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "CacheClusterSize": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "CacheDataEncrypted": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "CacheTtlInSeconds": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "CachingEnabled": {
                    "AllowedValues": [
                        "True",
                        "False"
                    ]
                },
                "CanarySetting": {
                    "Required": "No",
                    "Type": "CanarySetting",
                    "UpdateRequires": "No interruption"
                },
                "ClientCertificateId": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "DataTraceEnabled": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "Description": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "DocumentationVersion": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "LoggingLevel": {},
                "MethodSettings": {
                    "Required": "No",
                    "Type": "List of [MethodSetting",
                    "UpdateRequires": "No interruption"
                },
                "MetricsEnabled": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "Tags": {
                    "Required": "No",
                    "Type": "List of [Tag",
                    "UpdateRequires": "No interruption"
                },
                "ThrottlingBurstLimit": {},
                "ThrottlingRateLimit": {},
                "TracingEnabled": {
                    "AllowedValues": [
                        "True",
                        "False"
                    ]
                },
                "Variables": {
                    "Required": "No",
                    "Type": "Map of String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ApiGateway::Deployment.StageName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Deployment",
            "CloudResourceProperty": "StageName",
            "CloudReference": "AWS::ApiGateway::Deployment.StageName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::DocumentationPart": {
            "Location": {
                "Required": "Yes",
                "Type": "Location",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::DocumentationPart",
                "CloudResourceProperty": "Location",
                "CloudReference": "AWS::ApiGateway::DocumentationPart.Location",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Method": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "Name": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "Path": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "StatusCode": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "Type": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "Properties": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::DocumentationPart",
                "CloudResourceProperty": "Properties",
                "CloudReference": "AWS::ApiGateway::DocumentationPart.Properties",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RestApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::DocumentationPart",
                "CloudResourceProperty": "RestApiId",
                "CloudReference": "AWS::ApiGateway::DocumentationPart.RestApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGateway::DocumentationPart.Location": {
            "Required": "Yes",
            "Type": "Location",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::DocumentationPart",
            "CloudResourceProperty": "Location",
            "CloudReference": "AWS::ApiGateway::DocumentationPart.Location",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Method": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "Name": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "Path": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "StatusCode": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "Type": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::ApiGateway::DocumentationPart.Properties": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::DocumentationPart",
            "CloudResourceProperty": "Properties",
            "CloudReference": "AWS::ApiGateway::DocumentationPart.Properties",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::DocumentationPart.RestApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::DocumentationPart",
            "CloudResourceProperty": "RestApiId",
            "CloudReference": "AWS::ApiGateway::DocumentationPart.RestApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::DocumentationVersion": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::DocumentationVersion",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ApiGateway::DocumentationVersion.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DocumentationVersion": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::DocumentationVersion",
                "CloudResourceProperty": "DocumentationVersion",
                "CloudReference": "AWS::ApiGateway::DocumentationVersion.DocumentationVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RestApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::DocumentationVersion",
                "CloudResourceProperty": "RestApiId",
                "CloudReference": "AWS::ApiGateway::DocumentationVersion.RestApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGateway::DocumentationVersion.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::DocumentationVersion",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ApiGateway::DocumentationVersion.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::DocumentationVersion.DocumentationVersion": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::DocumentationVersion",
            "CloudResourceProperty": "DocumentationVersion",
            "CloudReference": "AWS::ApiGateway::DocumentationVersion.DocumentationVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::DocumentationVersion.RestApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::DocumentationVersion",
            "CloudResourceProperty": "RestApiId",
            "CloudReference": "AWS::ApiGateway::DocumentationVersion.RestApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::DomainName": {
            "CertificateArn": {},
            "DomainName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::DomainName",
                "CloudResourceProperty": "DomainName",
                "CloudReference": "AWS::ApiGateway::DomainName.DomainName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EndpointConfiguration": {
                "Required": "No",
                "Type": "EndpointConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::DomainName",
                "CloudResourceProperty": "EndpointConfiguration",
                "CloudReference": "AWS::ApiGateway::DomainName.EndpointConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Types": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "RegionalCertificateArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::DomainName",
                "CloudResourceProperty": "RegionalCertificateArn",
                "CloudReference": "AWS::ApiGateway::DomainName.RegionalCertificateArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGateway::DomainName.DomainName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::DomainName",
            "CloudResourceProperty": "DomainName",
            "CloudReference": "AWS::ApiGateway::DomainName.DomainName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::DomainName.EndpointConfiguration": {
            "Required": "No",
            "Type": "EndpointConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::DomainName",
            "CloudResourceProperty": "EndpointConfiguration",
            "CloudReference": "AWS::ApiGateway::DomainName.EndpointConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Types": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ApiGateway::DomainName.RegionalCertificateArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::DomainName",
            "CloudResourceProperty": "RegionalCertificateArn",
            "CloudReference": "AWS::ApiGateway::DomainName.RegionalCertificateArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::GatewayResponse": {
            "ResponseParameters": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "ResponseTemplates": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "ResponseType": {},
            "RestApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "StatusCode": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::ApiGateway::Method": {
            "ApiKeyRequired": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Method",
                "CloudResourceProperty": "ApiKeyRequired",
                "CloudReference": "AWS::ApiGateway::Method.ApiKeyRequired",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AuthorizationScopes": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "AuthorizationType": {},
            "AuthorizerId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "HttpMethod": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Integration": {
                "Required": "No",
                "Type": "Integration",
                "UpdateRequires": "No interruption"
            },
            "MethodResponses": {
                "Required": "No",
                "Type": "List of [MethodResponse",
                "UpdateRequires": "No interruption"
            },
            "OperationName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RequestModels": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "RequestParameters": {},
            "RequestValidatorId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ResourceId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RestApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::ApiGateway::Method.ApiKeyRequired": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Method",
            "CloudResourceProperty": "ApiKeyRequired",
            "CloudReference": "AWS::ApiGateway::Method.ApiKeyRequired",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Model": {
            "ContentType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::Model",
                "CloudResourceProperty": "ContentType",
                "CloudReference": "AWS::ApiGateway::Model.ContentType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Model",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ApiGateway::Model.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::Model",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::ApiGateway::Model.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RestApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::Model",
                "CloudResourceProperty": "RestApiId",
                "CloudReference": "AWS::ApiGateway::Model.RestApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Schema": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Model",
                "CloudResourceProperty": "Schema",
                "CloudReference": "AWS::ApiGateway::Model.Schema",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGateway::Model.ContentType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::Model",
            "CloudResourceProperty": "ContentType",
            "CloudReference": "AWS::ApiGateway::Model.ContentType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Model.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Model",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ApiGateway::Model.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Model.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::Model",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::ApiGateway::Model.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Model.RestApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::Model",
            "CloudResourceProperty": "RestApiId",
            "CloudReference": "AWS::ApiGateway::Model.RestApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Model.Schema": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Model",
            "CloudResourceProperty": "Schema",
            "CloudReference": "AWS::ApiGateway::Model.Schema",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::RequestValidator": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::RequestValidator",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::ApiGateway::RequestValidator.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RestApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::RequestValidator",
                "CloudResourceProperty": "RestApiId",
                "CloudReference": "AWS::ApiGateway::RequestValidator.RestApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ValidateRequestBody": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::RequestValidator",
                "CloudResourceProperty": "ValidateRequestBody",
                "CloudReference": "AWS::ApiGateway::RequestValidator.ValidateRequestBody",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ValidateRequestParameters": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::RequestValidator",
                "CloudResourceProperty": "ValidateRequestParameters",
                "CloudReference": "AWS::ApiGateway::RequestValidator.ValidateRequestParameters",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGateway::RequestValidator.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::RequestValidator",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::ApiGateway::RequestValidator.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::RequestValidator.RestApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::RequestValidator",
            "CloudResourceProperty": "RestApiId",
            "CloudReference": "AWS::ApiGateway::RequestValidator.RestApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::RequestValidator.ValidateRequestBody": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::RequestValidator",
            "CloudResourceProperty": "ValidateRequestBody",
            "CloudReference": "AWS::ApiGateway::RequestValidator.ValidateRequestBody",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::RequestValidator.ValidateRequestParameters": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::RequestValidator",
            "CloudResourceProperty": "ValidateRequestParameters",
            "CloudReference": "AWS::ApiGateway::RequestValidator.ValidateRequestParameters",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Resource": {
            "ParentId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::Resource",
                "CloudResourceProperty": "ParentId",
                "CloudReference": "AWS::ApiGateway::Resource.ParentId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PathPart": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::Resource",
                "CloudResourceProperty": "PathPart",
                "CloudReference": "AWS::ApiGateway::Resource.PathPart",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RestApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::Resource",
                "CloudResourceProperty": "RestApiId",
                "CloudReference": "AWS::ApiGateway::Resource.RestApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGateway::Resource.ParentId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::Resource",
            "CloudResourceProperty": "ParentId",
            "CloudReference": "AWS::ApiGateway::Resource.ParentId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Resource.PathPart": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::Resource",
            "CloudResourceProperty": "PathPart",
            "CloudReference": "AWS::ApiGateway::Resource.PathPart",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Resource.RestApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::Resource",
            "CloudResourceProperty": "RestApiId",
            "CloudReference": "AWS::ApiGateway::Resource.RestApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::RestApi": {
            "ApiKeySourceType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::RestApi",
                "CloudResourceProperty": "ApiKeySourceType",
                "CloudReference": "AWS::ApiGateway::RestApi.ApiKeySourceType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "BinaryMediaTypes": {},
            "Body": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::RestApi",
                "CloudResourceProperty": "Body",
                "CloudReference": "AWS::ApiGateway::RestApi.Body",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "BodyS3Location": {
                "Required": "No",
                "Type": "S3Location",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::RestApi",
                "CloudResourceProperty": "BodyS3Location",
                "CloudReference": "AWS::ApiGateway::RestApi.BodyS3Location",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Bucket": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "ETag": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Key": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Version": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "CloneFrom": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::RestApi",
                "CloudResourceProperty": "CloneFrom",
                "CloudReference": "AWS::ApiGateway::RestApi.CloneFrom",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::RestApi",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ApiGateway::RestApi.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EndpointConfiguration": {
                "Required": "No",
                "Type": "EndpointConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::RestApi",
                "CloudResourceProperty": "EndpointConfiguration",
                "CloudReference": "AWS::ApiGateway::RestApi.EndpointConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Types": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "FailOnWarnings": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::RestApi",
                "CloudResourceProperty": "FailOnWarnings",
                "CloudReference": "AWS::ApiGateway::RestApi.FailOnWarnings",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MinimumCompressionSize": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::RestApi",
                "CloudResourceProperty": "MinimumCompressionSize",
                "CloudReference": "AWS::ApiGateway::RestApi.MinimumCompressionSize",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::RestApi",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::ApiGateway::RestApi.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Parameters": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "Policy": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::ApiGateway::RestApi.ApiKeySourceType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::RestApi",
            "CloudResourceProperty": "ApiKeySourceType",
            "CloudReference": "AWS::ApiGateway::RestApi.ApiKeySourceType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::RestApi.Body": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::RestApi",
            "CloudResourceProperty": "Body",
            "CloudReference": "AWS::ApiGateway::RestApi.Body",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::RestApi.BodyS3Location": {
            "Required": "No",
            "Type": "S3Location",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::RestApi",
            "CloudResourceProperty": "BodyS3Location",
            "CloudReference": "AWS::ApiGateway::RestApi.BodyS3Location",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Bucket": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "ETag": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Key": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Version": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ApiGateway::RestApi.CloneFrom": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::RestApi",
            "CloudResourceProperty": "CloneFrom",
            "CloudReference": "AWS::ApiGateway::RestApi.CloneFrom",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::RestApi.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::RestApi",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ApiGateway::RestApi.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::RestApi.EndpointConfiguration": {
            "Required": "No",
            "Type": "EndpointConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::RestApi",
            "CloudResourceProperty": "EndpointConfiguration",
            "CloudReference": "AWS::ApiGateway::RestApi.EndpointConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Types": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ApiGateway::RestApi.FailOnWarnings": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::RestApi",
            "CloudResourceProperty": "FailOnWarnings",
            "CloudReference": "AWS::ApiGateway::RestApi.FailOnWarnings",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::RestApi.MinimumCompressionSize": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::RestApi",
            "CloudResourceProperty": "MinimumCompressionSize",
            "CloudReference": "AWS::ApiGateway::RestApi.MinimumCompressionSize",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::RestApi.Name": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::RestApi",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::ApiGateway::RestApi.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Stage": {
            "AccessLogSetting": {
                "Required": "No",
                "Type": "AccessLogSetting",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Stage",
                "CloudResourceProperty": "AccessLogSetting",
                "CloudReference": "AWS::ApiGateway::Stage.AccessLogSetting",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DestinationArn": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Format": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "CacheClusterEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Stage",
                "CloudResourceProperty": "CacheClusterEnabled",
                "CloudReference": "AWS::ApiGateway::Stage.CacheClusterEnabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CacheClusterSize": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Stage",
                "CloudResourceProperty": "CacheClusterSize",
                "CloudReference": "AWS::ApiGateway::Stage.CacheClusterSize",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CanarySetting": {
                "Required": "No",
                "Type": "CanarySetting",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Stage",
                "CloudResourceProperty": "CanarySetting",
                "CloudReference": "AWS::ApiGateway::Stage.CanarySetting",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DeploymentId": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "PercentTraffic": {
                        "Required": "No",
                        "Type": "Double",
                        "UpdateRequires": "No interruption"
                    },
                    "StageVariableOverrides": {
                        "Required": "No",
                        "Type": "Map of String",
                        "UpdateRequires": "No interruption"
                    },
                    "UseStageCache": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "ClientCertificateId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Stage",
                "CloudResourceProperty": "ClientCertificateId",
                "CloudReference": "AWS::ApiGateway::Stage.ClientCertificateId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DeploymentId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Stage",
                "CloudResourceProperty": "DeploymentId",
                "CloudReference": "AWS::ApiGateway::Stage.DeploymentId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Stage",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ApiGateway::Stage.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DocumentationVersion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Stage",
                "CloudResourceProperty": "DocumentationVersion",
                "CloudReference": "AWS::ApiGateway::Stage.DocumentationVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MethodSettings": {
                "Required": "No",
                "Type": "List of [MethodSetting",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Stage",
                "CloudResourceProperty": "MethodSettings",
                "CloudReference": "AWS::ApiGateway::Stage.MethodSettings",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "RestApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::Stage",
                "CloudResourceProperty": "RestApiId",
                "CloudReference": "AWS::ApiGateway::Stage.RestApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "StageName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::Stage",
                "CloudResourceProperty": "StageName",
                "CloudReference": "AWS::ApiGateway::Stage.StageName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::Stage",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::ApiGateway::Stage.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "TracingEnabled": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Variables": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::ApiGateway::Stage.AccessLogSetting": {
            "Required": "No",
            "Type": "AccessLogSetting",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Stage",
            "CloudResourceProperty": "AccessLogSetting",
            "CloudReference": "AWS::ApiGateway::Stage.AccessLogSetting",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DestinationArn": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Format": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ApiGateway::Stage.CacheClusterEnabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Stage",
            "CloudResourceProperty": "CacheClusterEnabled",
            "CloudReference": "AWS::ApiGateway::Stage.CacheClusterEnabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Stage.CacheClusterSize": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Stage",
            "CloudResourceProperty": "CacheClusterSize",
            "CloudReference": "AWS::ApiGateway::Stage.CacheClusterSize",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Stage.CanarySetting": {
            "Required": "No",
            "Type": "CanarySetting",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Stage",
            "CloudResourceProperty": "CanarySetting",
            "CloudReference": "AWS::ApiGateway::Stage.CanarySetting",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DeploymentId": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "PercentTraffic": {
                    "Required": "No",
                    "Type": "Double",
                    "UpdateRequires": "No interruption"
                },
                "StageVariableOverrides": {
                    "Required": "No",
                    "Type": "Map of String",
                    "UpdateRequires": "No interruption"
                },
                "UseStageCache": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ApiGateway::Stage.ClientCertificateId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Stage",
            "CloudResourceProperty": "ClientCertificateId",
            "CloudReference": "AWS::ApiGateway::Stage.ClientCertificateId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Stage.DeploymentId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Stage",
            "CloudResourceProperty": "DeploymentId",
            "CloudReference": "AWS::ApiGateway::Stage.DeploymentId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Stage.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Stage",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ApiGateway::Stage.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Stage.DocumentationVersion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Stage",
            "CloudResourceProperty": "DocumentationVersion",
            "CloudReference": "AWS::ApiGateway::Stage.DocumentationVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Stage.MethodSettings": {
            "Required": "No",
            "Type": "List of [MethodSetting",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Stage",
            "CloudResourceProperty": "MethodSettings",
            "CloudReference": "AWS::ApiGateway::Stage.MethodSettings",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Stage.RestApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::Stage",
            "CloudResourceProperty": "RestApiId",
            "CloudReference": "AWS::ApiGateway::Stage.RestApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Stage.StageName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::Stage",
            "CloudResourceProperty": "StageName",
            "CloudReference": "AWS::ApiGateway::Stage.StageName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::Stage.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::Stage",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::ApiGateway::Stage.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::UsagePlan": {
            "ApiStages": {
                "Required": "No",
                "Type": "List of [ApiStage",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::UsagePlan",
                "CloudResourceProperty": "ApiStages",
                "CloudReference": "AWS::ApiGateway::UsagePlan.ApiStages",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ApiId": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Stage": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Throttle": {
                        "Required": "No",
                        "Type": "Map of [ThrottleSettings",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::UsagePlan",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ApiGateway::UsagePlan.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Quota": {
                "Required": "No",
                "Type": "QuotaSettings",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::UsagePlan",
                "CloudResourceProperty": "Quota",
                "CloudReference": "AWS::ApiGateway::UsagePlan.Quota",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Limit": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "Offset": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "Period": {}
                }
            },
            "Throttle": {
                "Required": "No",
                "Type": "ThrottleSettings",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::UsagePlan",
                "CloudResourceProperty": "Throttle",
                "CloudReference": "AWS::ApiGateway::UsagePlan.Throttle",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "BurstLimit": {},
                    "RateLimit": {}
                }
            },
            "UsagePlanName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::UsagePlan",
                "CloudResourceProperty": "UsagePlanName",
                "CloudReference": "AWS::ApiGateway::UsagePlan.UsagePlanName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGateway::UsagePlan.ApiStages": {
            "Required": "No",
            "Type": "List of [ApiStage",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::UsagePlan",
            "CloudResourceProperty": "ApiStages",
            "CloudReference": "AWS::ApiGateway::UsagePlan.ApiStages",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ApiId": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Stage": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Throttle": {
                    "Required": "No",
                    "Type": "Map of [ThrottleSettings",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ApiGateway::UsagePlan.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::UsagePlan",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ApiGateway::UsagePlan.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::UsagePlan.Quota": {
            "Required": "No",
            "Type": "QuotaSettings",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::UsagePlan",
            "CloudResourceProperty": "Quota",
            "CloudReference": "AWS::ApiGateway::UsagePlan.Quota",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Limit": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "Offset": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "Period": {}
            }
        },
        "AWS::ApiGateway::UsagePlan.Throttle": {
            "Required": "No",
            "Type": "ThrottleSettings",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::UsagePlan",
            "CloudResourceProperty": "Throttle",
            "CloudReference": "AWS::ApiGateway::UsagePlan.Throttle",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "BurstLimit": {},
                "RateLimit": {}
            }
        },
        "AWS::ApiGateway::UsagePlan.UsagePlanName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::UsagePlan",
            "CloudResourceProperty": "UsagePlanName",
            "CloudReference": "AWS::ApiGateway::UsagePlan.UsagePlanName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::UsagePlanKey": {
            "KeyId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::UsagePlanKey",
                "CloudResourceProperty": "KeyId",
                "CloudReference": "AWS::ApiGateway::UsagePlanKey.KeyId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "KeyType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::UsagePlanKey",
                "CloudResourceProperty": "KeyType",
                "CloudReference": "AWS::ApiGateway::UsagePlanKey.KeyType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "UsagePlanId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGateway::UsagePlanKey",
                "CloudResourceProperty": "UsagePlanId",
                "CloudReference": "AWS::ApiGateway::UsagePlanKey.UsagePlanId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGateway::UsagePlanKey.KeyId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::UsagePlanKey",
            "CloudResourceProperty": "KeyId",
            "CloudReference": "AWS::ApiGateway::UsagePlanKey.KeyId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::UsagePlanKey.KeyType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::UsagePlanKey",
            "CloudResourceProperty": "KeyType",
            "CloudReference": "AWS::ApiGateway::UsagePlanKey.KeyType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::UsagePlanKey.UsagePlanId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGateway::UsagePlanKey",
            "CloudResourceProperty": "UsagePlanId",
            "CloudReference": "AWS::ApiGateway::UsagePlanKey.UsagePlanId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::VpcLink": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::VpcLink",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ApiGateway::VpcLink.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGateway::VpcLink",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::ApiGateway::VpcLink.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TargetArns": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            }
        },
        "AWS::ApiGateway::VpcLink.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::VpcLink",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ApiGateway::VpcLink.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGateway::VpcLink.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGateway::VpcLink",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::ApiGateway::VpcLink.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Api": {
            "ApiKeySelectionExpression": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Api",
                "CloudResourceProperty": "ApiKeySelectionExpression",
                "CloudReference": "AWS::ApiGatewayV2::Api.ApiKeySelectionExpression",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Api",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ApiGatewayV2::Api.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DisableSchemaValidation": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Api",
                "CloudResourceProperty": "DisableSchemaValidation",
                "CloudReference": "AWS::ApiGatewayV2::Api.DisableSchemaValidation",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Api",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::ApiGatewayV2::Api.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ProtocolType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGatewayV2::Api",
                "CloudResourceProperty": "ProtocolType",
                "CloudReference": "AWS::ApiGatewayV2::Api.ProtocolType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RouteSelectionExpression": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Api",
                "CloudResourceProperty": "RouteSelectionExpression",
                "CloudReference": "AWS::ApiGatewayV2::Api.RouteSelectionExpression",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Version": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Api",
                "CloudResourceProperty": "Version",
                "CloudReference": "AWS::ApiGatewayV2::Api.Version",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGatewayV2::Api.ApiKeySelectionExpression": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Api",
            "CloudResourceProperty": "ApiKeySelectionExpression",
            "CloudReference": "AWS::ApiGatewayV2::Api.ApiKeySelectionExpression",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Api.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Api",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ApiGatewayV2::Api.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Api.DisableSchemaValidation": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Api",
            "CloudResourceProperty": "DisableSchemaValidation",
            "CloudReference": "AWS::ApiGatewayV2::Api.DisableSchemaValidation",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Api.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Api",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::ApiGatewayV2::Api.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Api.ProtocolType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGatewayV2::Api",
            "CloudResourceProperty": "ProtocolType",
            "CloudReference": "AWS::ApiGatewayV2::Api.ProtocolType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Api.RouteSelectionExpression": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Api",
            "CloudResourceProperty": "RouteSelectionExpression",
            "CloudReference": "AWS::ApiGatewayV2::Api.RouteSelectionExpression",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Api.Version": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Api",
            "CloudResourceProperty": "Version",
            "CloudReference": "AWS::ApiGatewayV2::Api.Version",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::ApiMapping": {
            "ApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGatewayV2::ApiMapping",
                "CloudResourceProperty": "ApiId",
                "CloudReference": "AWS::ApiGatewayV2::ApiMapping.ApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ApiMappingKey": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::ApiMapping",
                "CloudResourceProperty": "ApiMappingKey",
                "CloudReference": "AWS::ApiGatewayV2::ApiMapping.ApiMappingKey",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DomainName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGatewayV2::ApiMapping",
                "CloudResourceProperty": "DomainName",
                "CloudReference": "AWS::ApiGatewayV2::ApiMapping.DomainName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Stage": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::ApiMapping",
                "CloudResourceProperty": "Stage",
                "CloudReference": "AWS::ApiGatewayV2::ApiMapping.Stage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGatewayV2::ApiMapping.ApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGatewayV2::ApiMapping",
            "CloudResourceProperty": "ApiId",
            "CloudReference": "AWS::ApiGatewayV2::ApiMapping.ApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::ApiMapping.ApiMappingKey": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::ApiMapping",
            "CloudResourceProperty": "ApiMappingKey",
            "CloudReference": "AWS::ApiGatewayV2::ApiMapping.ApiMappingKey",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::ApiMapping.DomainName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGatewayV2::ApiMapping",
            "CloudResourceProperty": "DomainName",
            "CloudReference": "AWS::ApiGatewayV2::ApiMapping.DomainName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::ApiMapping.Stage": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::ApiMapping",
            "CloudResourceProperty": "Stage",
            "CloudReference": "AWS::ApiGatewayV2::ApiMapping.Stage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Authorizer": {
            "ApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGatewayV2::Authorizer",
                "CloudResourceProperty": "ApiId",
                "CloudReference": "AWS::ApiGatewayV2::Authorizer.ApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AuthorizerCredentialsArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Authorizer",
                "CloudResourceProperty": "AuthorizerCredentialsArn",
                "CloudReference": "AWS::ApiGatewayV2::Authorizer.AuthorizerCredentialsArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AuthorizerResultTtlInSeconds": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Authorizer",
                "CloudResourceProperty": "AuthorizerResultTtlInSeconds",
                "CloudReference": "AWS::ApiGatewayV2::Authorizer.AuthorizerResultTtlInSeconds",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AuthorizerType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Authorizer",
                "CloudResourceProperty": "AuthorizerType",
                "CloudReference": "AWS::ApiGatewayV2::Authorizer.AuthorizerType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AuthorizerUri": {},
            "IdentitySource": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "IdentityValidationExpression": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::ApiGatewayV2::Authorizer.ApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGatewayV2::Authorizer",
            "CloudResourceProperty": "ApiId",
            "CloudReference": "AWS::ApiGatewayV2::Authorizer.ApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Authorizer.AuthorizerCredentialsArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Authorizer",
            "CloudResourceProperty": "AuthorizerCredentialsArn",
            "CloudReference": "AWS::ApiGatewayV2::Authorizer.AuthorizerCredentialsArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Authorizer.AuthorizerResultTtlInSeconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Authorizer",
            "CloudResourceProperty": "AuthorizerResultTtlInSeconds",
            "CloudReference": "AWS::ApiGatewayV2::Authorizer.AuthorizerResultTtlInSeconds",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Authorizer.AuthorizerType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Authorizer",
            "CloudResourceProperty": "AuthorizerType",
            "CloudReference": "AWS::ApiGatewayV2::Authorizer.AuthorizerType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Deployment": {
            "ApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGatewayV2::Deployment",
                "CloudResourceProperty": "ApiId",
                "CloudReference": "AWS::ApiGatewayV2::Deployment.ApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Deployment",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ApiGatewayV2::Deployment.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "StageName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Deployment",
                "CloudResourceProperty": "StageName",
                "CloudReference": "AWS::ApiGatewayV2::Deployment.StageName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGatewayV2::Deployment.ApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGatewayV2::Deployment",
            "CloudResourceProperty": "ApiId",
            "CloudReference": "AWS::ApiGatewayV2::Deployment.ApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Deployment.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Deployment",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ApiGatewayV2::Deployment.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Deployment.StageName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Deployment",
            "CloudResourceProperty": "StageName",
            "CloudReference": "AWS::ApiGatewayV2::Deployment.StageName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::DomainName": {
            "DomainName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGatewayV2::DomainName",
                "CloudResourceProperty": "DomainName",
                "CloudReference": "AWS::ApiGatewayV2::DomainName.DomainName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DomainNameConfigurations": {
                "Required": "No",
                "Type": "List of [DomainNameConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::DomainName",
                "CloudResourceProperty": "DomainNameConfigurations",
                "CloudReference": "AWS::ApiGatewayV2::DomainName.DomainNameConfigurations",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "CertificateArn": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "CertificateName": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "EndpointType": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::ApiGatewayV2::DomainName.DomainName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGatewayV2::DomainName",
            "CloudResourceProperty": "DomainName",
            "CloudReference": "AWS::ApiGatewayV2::DomainName.DomainName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::DomainName.DomainNameConfigurations": {
            "Required": "No",
            "Type": "List of [DomainNameConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::DomainName",
            "CloudResourceProperty": "DomainNameConfigurations",
            "CloudReference": "AWS::ApiGatewayV2::DomainName.DomainNameConfigurations",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "CertificateArn": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "CertificateName": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "EndpointType": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ApiGatewayV2::Integration": {
            "ApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGatewayV2::Integration",
                "CloudResourceProperty": "ApiId",
                "CloudReference": "AWS::ApiGatewayV2::Integration.ApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ConnectionType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Integration",
                "CloudResourceProperty": "ConnectionType",
                "CloudReference": "AWS::ApiGatewayV2::Integration.ConnectionType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ContentHandlingStrategy": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Integration",
                "CloudResourceProperty": "ContentHandlingStrategy",
                "CloudReference": "AWS::ApiGatewayV2::Integration.ContentHandlingStrategy",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CredentialsArn": {},
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Integration",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ApiGatewayV2::Integration.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "IntegrationMethod": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Integration",
                "CloudResourceProperty": "IntegrationMethod",
                "CloudReference": "AWS::ApiGatewayV2::Integration.IntegrationMethod",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "IntegrationType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Integration",
                "CloudResourceProperty": "IntegrationType",
                "CloudReference": "AWS::ApiGatewayV2::Integration.IntegrationType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "IntegrationUri": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Integration",
                "CloudResourceProperty": "IntegrationUri",
                "CloudReference": "AWS::ApiGatewayV2::Integration.IntegrationUri",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PassthroughBehavior": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Integration",
                "CloudResourceProperty": "PassthroughBehavior",
                "CloudReference": "AWS::ApiGatewayV2::Integration.PassthroughBehavior",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RequestParameters": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Integration",
                "CloudResourceProperty": "RequestParameters",
                "CloudReference": "AWS::ApiGatewayV2::Integration.RequestParameters",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RequestTemplates": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Integration",
                "CloudResourceProperty": "RequestTemplates",
                "CloudReference": "AWS::ApiGatewayV2::Integration.RequestTemplates",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TemplateSelectionExpression": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Integration",
                "CloudResourceProperty": "TemplateSelectionExpression",
                "CloudReference": "AWS::ApiGatewayV2::Integration.TemplateSelectionExpression",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TimeoutInMillis": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Integration",
                "CloudResourceProperty": "TimeoutInMillis",
                "CloudReference": "AWS::ApiGatewayV2::Integration.TimeoutInMillis",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGatewayV2::Integration.ApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGatewayV2::Integration",
            "CloudResourceProperty": "ApiId",
            "CloudReference": "AWS::ApiGatewayV2::Integration.ApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Integration.ConnectionType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Integration",
            "CloudResourceProperty": "ConnectionType",
            "CloudReference": "AWS::ApiGatewayV2::Integration.ConnectionType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Integration.ContentHandlingStrategy": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Integration",
            "CloudResourceProperty": "ContentHandlingStrategy",
            "CloudReference": "AWS::ApiGatewayV2::Integration.ContentHandlingStrategy",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Integration.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Integration",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ApiGatewayV2::Integration.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Integration.IntegrationMethod": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Integration",
            "CloudResourceProperty": "IntegrationMethod",
            "CloudReference": "AWS::ApiGatewayV2::Integration.IntegrationMethod",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Integration.IntegrationType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Integration",
            "CloudResourceProperty": "IntegrationType",
            "CloudReference": "AWS::ApiGatewayV2::Integration.IntegrationType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Integration.IntegrationUri": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Integration",
            "CloudResourceProperty": "IntegrationUri",
            "CloudReference": "AWS::ApiGatewayV2::Integration.IntegrationUri",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Integration.PassthroughBehavior": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Integration",
            "CloudResourceProperty": "PassthroughBehavior",
            "CloudReference": "AWS::ApiGatewayV2::Integration.PassthroughBehavior",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Integration.RequestParameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Integration",
            "CloudResourceProperty": "RequestParameters",
            "CloudReference": "AWS::ApiGatewayV2::Integration.RequestParameters",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Integration.RequestTemplates": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Integration",
            "CloudResourceProperty": "RequestTemplates",
            "CloudReference": "AWS::ApiGatewayV2::Integration.RequestTemplates",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Integration.TemplateSelectionExpression": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Integration",
            "CloudResourceProperty": "TemplateSelectionExpression",
            "CloudReference": "AWS::ApiGatewayV2::Integration.TemplateSelectionExpression",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Integration.TimeoutInMillis": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Integration",
            "CloudResourceProperty": "TimeoutInMillis",
            "CloudReference": "AWS::ApiGatewayV2::Integration.TimeoutInMillis",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::IntegrationResponse": {
            "ApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::IntegrationResponse",
                "CloudResourceProperty": "ApiId",
                "CloudReference": "AWS::ApiGatewayV2::IntegrationResponse.ApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ContentHandlingStrategy": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::IntegrationResponse",
                "CloudResourceProperty": "ContentHandlingStrategy",
                "CloudReference": "AWS::ApiGatewayV2::IntegrationResponse.ContentHandlingStrategy",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "IntegrationId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::IntegrationResponse",
                "CloudResourceProperty": "IntegrationId",
                "CloudReference": "AWS::ApiGatewayV2::IntegrationResponse.IntegrationId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "IntegrationResponseKey": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::IntegrationResponse",
                "CloudResourceProperty": "IntegrationResponseKey",
                "CloudReference": "AWS::ApiGatewayV2::IntegrationResponse.IntegrationResponseKey",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ResponseParameters": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::IntegrationResponse",
                "CloudResourceProperty": "ResponseParameters",
                "CloudReference": "AWS::ApiGatewayV2::IntegrationResponse.ResponseParameters",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ResponseTemplates": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::IntegrationResponse",
                "CloudResourceProperty": "ResponseTemplates",
                "CloudReference": "AWS::ApiGatewayV2::IntegrationResponse.ResponseTemplates",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TemplateSelectionExpression": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::IntegrationResponse",
                "CloudResourceProperty": "TemplateSelectionExpression",
                "CloudReference": "AWS::ApiGatewayV2::IntegrationResponse.TemplateSelectionExpression",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGatewayV2::IntegrationResponse.ApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::IntegrationResponse",
            "CloudResourceProperty": "ApiId",
            "CloudReference": "AWS::ApiGatewayV2::IntegrationResponse.ApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::IntegrationResponse.ContentHandlingStrategy": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::IntegrationResponse",
            "CloudResourceProperty": "ContentHandlingStrategy",
            "CloudReference": "AWS::ApiGatewayV2::IntegrationResponse.ContentHandlingStrategy",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::IntegrationResponse.IntegrationId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::IntegrationResponse",
            "CloudResourceProperty": "IntegrationId",
            "CloudReference": "AWS::ApiGatewayV2::IntegrationResponse.IntegrationId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::IntegrationResponse.IntegrationResponseKey": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::IntegrationResponse",
            "CloudResourceProperty": "IntegrationResponseKey",
            "CloudReference": "AWS::ApiGatewayV2::IntegrationResponse.IntegrationResponseKey",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::IntegrationResponse.ResponseParameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::IntegrationResponse",
            "CloudResourceProperty": "ResponseParameters",
            "CloudReference": "AWS::ApiGatewayV2::IntegrationResponse.ResponseParameters",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::IntegrationResponse.ResponseTemplates": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::IntegrationResponse",
            "CloudResourceProperty": "ResponseTemplates",
            "CloudReference": "AWS::ApiGatewayV2::IntegrationResponse.ResponseTemplates",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::IntegrationResponse.TemplateSelectionExpression": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::IntegrationResponse",
            "CloudResourceProperty": "TemplateSelectionExpression",
            "CloudReference": "AWS::ApiGatewayV2::IntegrationResponse.TemplateSelectionExpression",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Model": {
            "ApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGatewayV2::Model",
                "CloudResourceProperty": "ApiId",
                "CloudReference": "AWS::ApiGatewayV2::Model.ApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ContentType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Model",
                "CloudResourceProperty": "ContentType",
                "CloudReference": "AWS::ApiGatewayV2::Model.ContentType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Model",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ApiGatewayV2::Model.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Model",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::ApiGatewayV2::Model.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Schema": {
                "Required": "Yes",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Model",
                "CloudResourceProperty": "Schema",
                "CloudReference": "AWS::ApiGatewayV2::Model.Schema",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGatewayV2::Model.ApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGatewayV2::Model",
            "CloudResourceProperty": "ApiId",
            "CloudReference": "AWS::ApiGatewayV2::Model.ApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Model.ContentType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Model",
            "CloudResourceProperty": "ContentType",
            "CloudReference": "AWS::ApiGatewayV2::Model.ContentType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Model.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Model",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ApiGatewayV2::Model.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Model.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Model",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::ApiGatewayV2::Model.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Model.Schema": {
            "Required": "Yes",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Model",
            "CloudResourceProperty": "Schema",
            "CloudReference": "AWS::ApiGatewayV2::Model.Schema",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Route": {
            "ApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGatewayV2::Route",
                "CloudResourceProperty": "ApiId",
                "CloudReference": "AWS::ApiGatewayV2::Route.ApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ApiKeyRequired": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Route",
                "CloudResourceProperty": "ApiKeyRequired",
                "CloudReference": "AWS::ApiGatewayV2::Route.ApiKeyRequired",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AuthorizationScopes": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "AuthorizationType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "AuthorizerId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ModelSelectionExpression": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "OperationName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RequestModels": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "RequestParameters": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "RouteKey": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RouteResponseSelectionExpression": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Target": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::ApiGatewayV2::Route.ApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGatewayV2::Route",
            "CloudResourceProperty": "ApiId",
            "CloudReference": "AWS::ApiGatewayV2::Route.ApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Route.ApiKeyRequired": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Route",
            "CloudResourceProperty": "ApiKeyRequired",
            "CloudReference": "AWS::ApiGatewayV2::Route.ApiKeyRequired",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::RouteResponse": {
            "ApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGatewayV2::RouteResponse",
                "CloudResourceProperty": "ApiId",
                "CloudReference": "AWS::ApiGatewayV2::RouteResponse.ApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ModelSelectionExpression": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::RouteResponse",
                "CloudResourceProperty": "ModelSelectionExpression",
                "CloudReference": "AWS::ApiGatewayV2::RouteResponse.ModelSelectionExpression",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ResponseModels": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::RouteResponse",
                "CloudResourceProperty": "ResponseModels",
                "CloudReference": "AWS::ApiGatewayV2::RouteResponse.ResponseModels",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ResponseParameters": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::RouteResponse",
                "CloudResourceProperty": "ResponseParameters",
                "CloudReference": "AWS::ApiGatewayV2::RouteResponse.ResponseParameters",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RouteId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGatewayV2::RouteResponse",
                "CloudResourceProperty": "RouteId",
                "CloudReference": "AWS::ApiGatewayV2::RouteResponse.RouteId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RouteResponseKey": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::RouteResponse",
                "CloudResourceProperty": "RouteResponseKey",
                "CloudReference": "AWS::ApiGatewayV2::RouteResponse.RouteResponseKey",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGatewayV2::RouteResponse.ApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGatewayV2::RouteResponse",
            "CloudResourceProperty": "ApiId",
            "CloudReference": "AWS::ApiGatewayV2::RouteResponse.ApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::RouteResponse.ModelSelectionExpression": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::RouteResponse",
            "CloudResourceProperty": "ModelSelectionExpression",
            "CloudReference": "AWS::ApiGatewayV2::RouteResponse.ModelSelectionExpression",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::RouteResponse.ResponseModels": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::RouteResponse",
            "CloudResourceProperty": "ResponseModels",
            "CloudReference": "AWS::ApiGatewayV2::RouteResponse.ResponseModels",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::RouteResponse.ResponseParameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::RouteResponse",
            "CloudResourceProperty": "ResponseParameters",
            "CloudReference": "AWS::ApiGatewayV2::RouteResponse.ResponseParameters",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::RouteResponse.RouteId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGatewayV2::RouteResponse",
            "CloudResourceProperty": "RouteId",
            "CloudReference": "AWS::ApiGatewayV2::RouteResponse.RouteId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::RouteResponse.RouteResponseKey": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::RouteResponse",
            "CloudResourceProperty": "RouteResponseKey",
            "CloudReference": "AWS::ApiGatewayV2::RouteResponse.RouteResponseKey",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Stage": {
            "AccessLogSettings": {
                "Required": "No",
                "Type": "AccessLogSettings",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Stage",
                "CloudResourceProperty": "AccessLogSettings",
                "CloudReference": "AWS::ApiGatewayV2::Stage.AccessLogSettings",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DestinationArn": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Format": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "ApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGatewayV2::Stage",
                "CloudResourceProperty": "ApiId",
                "CloudReference": "AWS::ApiGatewayV2::Stage.ApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ClientCertificateId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Stage",
                "CloudResourceProperty": "ClientCertificateId",
                "CloudReference": "AWS::ApiGatewayV2::Stage.ClientCertificateId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DefaultRouteSettings": {
                "Required": "No",
                "Type": "RouteSettings",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Stage",
                "CloudResourceProperty": "DefaultRouteSettings",
                "CloudReference": "AWS::ApiGatewayV2::Stage.DefaultRouteSettings",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DataTraceEnabled": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "DetailedMetricsEnabled": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "LoggingLevel": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "ThrottlingBurstLimit": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "ThrottlingRateLimit": {
                        "Required": "No",
                        "Type": "Double",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "DeploymentId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Stage",
                "CloudResourceProperty": "DeploymentId",
                "CloudReference": "AWS::ApiGatewayV2::Stage.DeploymentId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Stage",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ApiGatewayV2::Stage.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RouteSettings": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Stage",
                "CloudResourceProperty": "RouteSettings",
                "CloudReference": "AWS::ApiGatewayV2::Stage.RouteSettings",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "StageName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApiGatewayV2::Stage",
                "CloudResourceProperty": "StageName",
                "CloudReference": "AWS::ApiGatewayV2::Stage.StageName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "StageVariables": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApiGatewayV2::Stage",
                "CloudResourceProperty": "StageVariables",
                "CloudReference": "AWS::ApiGatewayV2::Stage.StageVariables",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ApiGatewayV2::Stage.AccessLogSettings": {
            "Required": "No",
            "Type": "AccessLogSettings",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Stage",
            "CloudResourceProperty": "AccessLogSettings",
            "CloudReference": "AWS::ApiGatewayV2::Stage.AccessLogSettings",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DestinationArn": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Format": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ApiGatewayV2::Stage.ApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGatewayV2::Stage",
            "CloudResourceProperty": "ApiId",
            "CloudReference": "AWS::ApiGatewayV2::Stage.ApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Stage.ClientCertificateId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Stage",
            "CloudResourceProperty": "ClientCertificateId",
            "CloudReference": "AWS::ApiGatewayV2::Stage.ClientCertificateId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Stage.DefaultRouteSettings": {
            "Required": "No",
            "Type": "RouteSettings",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Stage",
            "CloudResourceProperty": "DefaultRouteSettings",
            "CloudReference": "AWS::ApiGatewayV2::Stage.DefaultRouteSettings",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DataTraceEnabled": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "DetailedMetricsEnabled": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "LoggingLevel": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "ThrottlingBurstLimit": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "ThrottlingRateLimit": {
                    "Required": "No",
                    "Type": "Double",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ApiGatewayV2::Stage.DeploymentId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Stage",
            "CloudResourceProperty": "DeploymentId",
            "CloudReference": "AWS::ApiGatewayV2::Stage.DeploymentId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Stage.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Stage",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ApiGatewayV2::Stage.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Stage.RouteSettings": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Stage",
            "CloudResourceProperty": "RouteSettings",
            "CloudReference": "AWS::ApiGatewayV2::Stage.RouteSettings",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Stage.StageName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApiGatewayV2::Stage",
            "CloudResourceProperty": "StageName",
            "CloudReference": "AWS::ApiGatewayV2::Stage.StageName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApiGatewayV2::Stage.StageVariables": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApiGatewayV2::Stage",
            "CloudResourceProperty": "StageVariables",
            "CloudReference": "AWS::ApiGatewayV2::Stage.StageVariables",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApplicationAutoScaling::ScalableTarget": {
            "MaxCapacity": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApplicationAutoScaling::ScalableTarget",
                "CloudResourceProperty": "MaxCapacity",
                "CloudReference": "AWS::ApplicationAutoScaling::ScalableTarget.MaxCapacity",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MinCapacity": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApplicationAutoScaling::ScalableTarget",
                "CloudResourceProperty": "MinCapacity",
                "CloudReference": "AWS::ApplicationAutoScaling::ScalableTarget.MinCapacity",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ResourceId": {},
            "RoleARN": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApplicationAutoScaling::ScalableTarget",
                "CloudResourceProperty": "RoleARN",
                "CloudReference": "AWS::ApplicationAutoScaling::ScalableTarget.RoleARN",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ScalableDimension": {},
            "ScheduledActions": {
                "Required": "No",
                "Type": "List of [ScheduledAction",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApplicationAutoScaling::ScalableTarget",
                "CloudResourceProperty": "ScheduledActions",
                "CloudReference": "AWS::ApplicationAutoScaling::ScalableTarget.ScheduledActions",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "EndTime": {
                        "Required": "No",
                        "Type": "Timestamp",
                        "UpdateRequires": "No interruption"
                    },
                    "ScalableTargetAction": {
                        "Required": "No",
                        "Type": "ScalableTargetAction",
                        "UpdateRequires": "No interruption"
                    },
                    "Schedule": {},
                    "ScheduledActionName": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "256",
                        "Pattern": "(?!((^[ ]+.*)|(.*([\\u0000-\\u001f]|[\\u007f-\\u009f]|[:/|])+.*)|(.*[ ]+$))).+",
                        "UpdateRequires": "No interruption"
                    },
                    "StartTime": {
                        "Required": "No",
                        "Type": "Timestamp",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "ServiceNamespace": {},
            "SuspendedState": {}
        },
        "AWS::ApplicationAutoScaling::ScalableTarget.MaxCapacity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApplicationAutoScaling::ScalableTarget",
            "CloudResourceProperty": "MaxCapacity",
            "CloudReference": "AWS::ApplicationAutoScaling::ScalableTarget.MaxCapacity",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApplicationAutoScaling::ScalableTarget.MinCapacity": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApplicationAutoScaling::ScalableTarget",
            "CloudResourceProperty": "MinCapacity",
            "CloudReference": "AWS::ApplicationAutoScaling::ScalableTarget.MinCapacity",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApplicationAutoScaling::ScalableTarget.RoleARN": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApplicationAutoScaling::ScalableTarget",
            "CloudResourceProperty": "RoleARN",
            "CloudReference": "AWS::ApplicationAutoScaling::ScalableTarget.RoleARN",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApplicationAutoScaling::ScalableTarget.ScheduledActions": {
            "Required": "No",
            "Type": "List of [ScheduledAction",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApplicationAutoScaling::ScalableTarget",
            "CloudResourceProperty": "ScheduledActions",
            "CloudReference": "AWS::ApplicationAutoScaling::ScalableTarget.ScheduledActions",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "EndTime": {
                    "Required": "No",
                    "Type": "Timestamp",
                    "UpdateRequires": "No interruption"
                },
                "ScalableTargetAction": {
                    "Required": "No",
                    "Type": "ScalableTargetAction",
                    "UpdateRequires": "No interruption"
                },
                "Schedule": {},
                "ScheduledActionName": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "256",
                    "Pattern": "(?!((^[ ]+.*)|(.*([\\u0000-\\u001f]|[\\u007f-\\u009f]|[:/|])+.*)|(.*[ ]+$))).+",
                    "UpdateRequires": "No interruption"
                },
                "StartTime": {
                    "Required": "No",
                    "Type": "Timestamp",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ApplicationAutoScaling::ScalingPolicy": {
            "PolicyName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "Pattern": "\\p{Print}+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApplicationAutoScaling::ScalingPolicy",
                "CloudResourceProperty": "PolicyName",
                "CloudReference": "AWS::ApplicationAutoScaling::ScalingPolicy.PolicyName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PolicyType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApplicationAutoScaling::ScalingPolicy",
                "CloudResourceProperty": "PolicyType",
                "CloudReference": "AWS::ApplicationAutoScaling::ScalingPolicy.PolicyType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ResourceId": {},
            "ScalableDimension": {},
            "ScalingTargetId": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ApplicationAutoScaling::ScalingPolicy",
                "CloudResourceProperty": "ScalingTargetId",
                "CloudReference": "AWS::ApplicationAutoScaling::ScalingPolicy.ScalingTargetId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ServiceNamespace": {},
            "StepScalingPolicyConfiguration": {
                "Required": "No",
                "Type": "StepScalingPolicyConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApplicationAutoScaling::ScalingPolicy",
                "CloudResourceProperty": "StepScalingPolicyConfiguration",
                "CloudReference": "AWS::ApplicationAutoScaling::ScalingPolicy.StepScalingPolicyConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AdjustmentType": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "ChangeInCapacity",
                            "ExactCapacity",
                            "PercentChangeInCapacity"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "Cooldown": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "MetricAggregationType": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "Average",
                            "Maximum",
                            "Minimum"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "MinAdjustmentMagnitude": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "StepAdjustments": {
                        "Required": "No",
                        "Type": "List of [StepAdjustment",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "TargetTrackingScalingPolicyConfiguration": {
                "Required": "No",
                "Type": "TargetTrackingScalingPolicyConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ApplicationAutoScaling::ScalingPolicy",
                "CloudResourceProperty": "TargetTrackingScalingPolicyConfiguration",
                "CloudReference": "AWS::ApplicationAutoScaling::ScalingPolicy.TargetTrackingScalingPolicyConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "CustomizedMetricSpecification": {
                        "Required": "No",
                        "Type": "CustomizedMetricSpecification",
                        "UpdateRequires": "No interruption"
                    },
                    "DisableScaleIn": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "PredefinedMetricSpecification": {
                        "Required": "No",
                        "Type": "PredefinedMetricSpecification",
                        "UpdateRequires": "No interruption"
                    },
                    "ScaleInCooldown": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "ScaleOutCooldown": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "TargetValue": {
                        "Required": "Yes",
                        "Type": "Double",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::ApplicationAutoScaling::ScalingPolicy.PolicyName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "256",
            "Pattern": "\\p{Print}+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApplicationAutoScaling::ScalingPolicy",
            "CloudResourceProperty": "PolicyName",
            "CloudReference": "AWS::ApplicationAutoScaling::ScalingPolicy.PolicyName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApplicationAutoScaling::ScalingPolicy.PolicyType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApplicationAutoScaling::ScalingPolicy",
            "CloudResourceProperty": "PolicyType",
            "CloudReference": "AWS::ApplicationAutoScaling::ScalingPolicy.PolicyType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApplicationAutoScaling::ScalingPolicy.ScalingTargetId": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ApplicationAutoScaling::ScalingPolicy",
            "CloudResourceProperty": "ScalingTargetId",
            "CloudReference": "AWS::ApplicationAutoScaling::ScalingPolicy.ScalingTargetId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ApplicationAutoScaling::ScalingPolicy.StepScalingPolicyConfiguration": {
            "Required": "No",
            "Type": "StepScalingPolicyConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApplicationAutoScaling::ScalingPolicy",
            "CloudResourceProperty": "StepScalingPolicyConfiguration",
            "CloudReference": "AWS::ApplicationAutoScaling::ScalingPolicy.StepScalingPolicyConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AdjustmentType": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "ChangeInCapacity",
                        "ExactCapacity",
                        "PercentChangeInCapacity"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "Cooldown": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "MetricAggregationType": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "Average",
                        "Maximum",
                        "Minimum"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "MinAdjustmentMagnitude": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "StepAdjustments": {
                    "Required": "No",
                    "Type": "List of [StepAdjustment",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ApplicationAutoScaling::ScalingPolicy.TargetTrackingScalingPolicyConfiguration": {
            "Required": "No",
            "Type": "TargetTrackingScalingPolicyConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ApplicationAutoScaling::ScalingPolicy",
            "CloudResourceProperty": "TargetTrackingScalingPolicyConfiguration",
            "CloudReference": "AWS::ApplicationAutoScaling::ScalingPolicy.TargetTrackingScalingPolicyConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "CustomizedMetricSpecification": {
                    "Required": "No",
                    "Type": "CustomizedMetricSpecification",
                    "UpdateRequires": "No interruption"
                },
                "DisableScaleIn": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "PredefinedMetricSpecification": {
                    "Required": "No",
                    "Type": "PredefinedMetricSpecification",
                    "UpdateRequires": "No interruption"
                },
                "ScaleInCooldown": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "ScaleOutCooldown": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "TargetValue": {
                    "Required": "Yes",
                    "Type": "Double",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppMesh::Mesh": {
            "MeshName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppMesh::Mesh",
                "CloudResourceProperty": "MeshName",
                "CloudReference": "AWS::AppMesh::Mesh.MeshName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Spec": {
                "Required": "No",
                "Type": "MeshSpec",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppMesh::Mesh",
                "CloudResourceProperty": "Spec",
                "CloudReference": "AWS::AppMesh::Mesh.Spec",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "EgressFilter": {
                        "Required": "No",
                        "Type": "EgressFilter",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [TagRef",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppMesh::Mesh",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::AppMesh::Mesh.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Key": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Value": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::AppMesh::Mesh.MeshName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppMesh::Mesh",
            "CloudResourceProperty": "MeshName",
            "CloudReference": "AWS::AppMesh::Mesh.MeshName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppMesh::Mesh.Spec": {
            "Required": "No",
            "Type": "MeshSpec",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppMesh::Mesh",
            "CloudResourceProperty": "Spec",
            "CloudReference": "AWS::AppMesh::Mesh.Spec",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "EgressFilter": {
                    "Required": "No",
                    "Type": "EgressFilter",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppMesh::Mesh.Tags": {
            "Required": "No",
            "Type": "List of [TagRef",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppMesh::Mesh",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::AppMesh::Mesh.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Key": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Value": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppMesh::Route": {
            "MeshName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppMesh::Route",
                "CloudResourceProperty": "MeshName",
                "CloudReference": "AWS::AppMesh::Route.MeshName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RouteName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppMesh::Route",
                "CloudResourceProperty": "RouteName",
                "CloudReference": "AWS::AppMesh::Route.RouteName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Spec": {
                "Required": "Yes",
                "Type": "RouteSpec",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppMesh::Route",
                "CloudResourceProperty": "Spec",
                "CloudReference": "AWS::AppMesh::Route.Spec",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "HttpRoute": {
                        "Required": "No",
                        "Type": "HttpRoute",
                        "UpdateRequires": "No interruption"
                    },
                    "TcpRoute": {
                        "Required": "No",
                        "Type": "TcpRoute",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [TagRef",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppMesh::Route",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::AppMesh::Route.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Key": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Value": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "VirtualRouterName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppMesh::Route",
                "CloudResourceProperty": "VirtualRouterName",
                "CloudReference": "AWS::AppMesh::Route.VirtualRouterName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::AppMesh::Route.MeshName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppMesh::Route",
            "CloudResourceProperty": "MeshName",
            "CloudReference": "AWS::AppMesh::Route.MeshName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppMesh::Route.RouteName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppMesh::Route",
            "CloudResourceProperty": "RouteName",
            "CloudReference": "AWS::AppMesh::Route.RouteName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppMesh::Route.Spec": {
            "Required": "Yes",
            "Type": "RouteSpec",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppMesh::Route",
            "CloudResourceProperty": "Spec",
            "CloudReference": "AWS::AppMesh::Route.Spec",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "HttpRoute": {
                    "Required": "No",
                    "Type": "HttpRoute",
                    "UpdateRequires": "No interruption"
                },
                "TcpRoute": {
                    "Required": "No",
                    "Type": "TcpRoute",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppMesh::Route.Tags": {
            "Required": "No",
            "Type": "List of [TagRef",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppMesh::Route",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::AppMesh::Route.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Key": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Value": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppMesh::Route.VirtualRouterName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppMesh::Route",
            "CloudResourceProperty": "VirtualRouterName",
            "CloudReference": "AWS::AppMesh::Route.VirtualRouterName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppMesh::VirtualNode": {
            "MeshName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppMesh::VirtualNode",
                "CloudResourceProperty": "MeshName",
                "CloudReference": "AWS::AppMesh::VirtualNode.MeshName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Spec": {
                "Required": "Yes",
                "Type": "VirtualNodeSpec",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppMesh::VirtualNode",
                "CloudResourceProperty": "Spec",
                "CloudReference": "AWS::AppMesh::VirtualNode.Spec",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Backends": {
                        "Required": "No",
                        "Type": "List of [Backend",
                        "UpdateRequires": "No interruption"
                    },
                    "Listeners": {
                        "Required": "No",
                        "Type": "List of [Listener",
                        "UpdateRequires": "No interruption"
                    },
                    "Logging": {
                        "Required": "No",
                        "Type": "Logging",
                        "UpdateRequires": "No interruption"
                    },
                    "ServiceDiscovery": {
                        "Required": "No",
                        "Type": "ServiceDiscovery",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [TagRef",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppMesh::VirtualNode",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::AppMesh::VirtualNode.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Key": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Value": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "VirtualNodeName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppMesh::VirtualNode",
                "CloudResourceProperty": "VirtualNodeName",
                "CloudReference": "AWS::AppMesh::VirtualNode.VirtualNodeName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::AppMesh::VirtualNode.MeshName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppMesh::VirtualNode",
            "CloudResourceProperty": "MeshName",
            "CloudReference": "AWS::AppMesh::VirtualNode.MeshName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppMesh::VirtualNode.Spec": {
            "Required": "Yes",
            "Type": "VirtualNodeSpec",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppMesh::VirtualNode",
            "CloudResourceProperty": "Spec",
            "CloudReference": "AWS::AppMesh::VirtualNode.Spec",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Backends": {
                    "Required": "No",
                    "Type": "List of [Backend",
                    "UpdateRequires": "No interruption"
                },
                "Listeners": {
                    "Required": "No",
                    "Type": "List of [Listener",
                    "UpdateRequires": "No interruption"
                },
                "Logging": {
                    "Required": "No",
                    "Type": "Logging",
                    "UpdateRequires": "No interruption"
                },
                "ServiceDiscovery": {
                    "Required": "No",
                    "Type": "ServiceDiscovery",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppMesh::VirtualNode.Tags": {
            "Required": "No",
            "Type": "List of [TagRef",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppMesh::VirtualNode",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::AppMesh::VirtualNode.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Key": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Value": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppMesh::VirtualNode.VirtualNodeName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppMesh::VirtualNode",
            "CloudResourceProperty": "VirtualNodeName",
            "CloudReference": "AWS::AppMesh::VirtualNode.VirtualNodeName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppMesh::VirtualRouter": {
            "MeshName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppMesh::VirtualRouter",
                "CloudResourceProperty": "MeshName",
                "CloudReference": "AWS::AppMesh::VirtualRouter.MeshName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Spec": {
                "Required": "Yes",
                "Type": "VirtualRouterSpec",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppMesh::VirtualRouter",
                "CloudResourceProperty": "Spec",
                "CloudReference": "AWS::AppMesh::VirtualRouter.Spec",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Listeners": {
                        "Required": "Yes",
                        "Type": "List of [VirtualRouterListener",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [TagRef",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppMesh::VirtualRouter",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::AppMesh::VirtualRouter.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Key": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Value": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "VirtualRouterName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppMesh::VirtualRouter",
                "CloudResourceProperty": "VirtualRouterName",
                "CloudReference": "AWS::AppMesh::VirtualRouter.VirtualRouterName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::AppMesh::VirtualRouter.MeshName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppMesh::VirtualRouter",
            "CloudResourceProperty": "MeshName",
            "CloudReference": "AWS::AppMesh::VirtualRouter.MeshName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppMesh::VirtualRouter.Spec": {
            "Required": "Yes",
            "Type": "VirtualRouterSpec",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppMesh::VirtualRouter",
            "CloudResourceProperty": "Spec",
            "CloudReference": "AWS::AppMesh::VirtualRouter.Spec",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Listeners": {
                    "Required": "Yes",
                    "Type": "List of [VirtualRouterListener",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppMesh::VirtualRouter.Tags": {
            "Required": "No",
            "Type": "List of [TagRef",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppMesh::VirtualRouter",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::AppMesh::VirtualRouter.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Key": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Value": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppMesh::VirtualRouter.VirtualRouterName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppMesh::VirtualRouter",
            "CloudResourceProperty": "VirtualRouterName",
            "CloudReference": "AWS::AppMesh::VirtualRouter.VirtualRouterName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppMesh::VirtualService": {
            "MeshName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppMesh::VirtualService",
                "CloudResourceProperty": "MeshName",
                "CloudReference": "AWS::AppMesh::VirtualService.MeshName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Spec": {
                "Required": "Yes",
                "Type": "VirtualServiceSpec",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppMesh::VirtualService",
                "CloudResourceProperty": "Spec",
                "CloudReference": "AWS::AppMesh::VirtualService.Spec",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Provider": {
                        "Required": "No",
                        "Type": "VirtualServiceProvider",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [TagRef",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppMesh::VirtualService",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::AppMesh::VirtualService.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Key": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Value": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "VirtualServiceName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppMesh::VirtualService",
                "CloudResourceProperty": "VirtualServiceName",
                "CloudReference": "AWS::AppMesh::VirtualService.VirtualServiceName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::AppMesh::VirtualService.MeshName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppMesh::VirtualService",
            "CloudResourceProperty": "MeshName",
            "CloudReference": "AWS::AppMesh::VirtualService.MeshName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppMesh::VirtualService.Spec": {
            "Required": "Yes",
            "Type": "VirtualServiceSpec",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppMesh::VirtualService",
            "CloudResourceProperty": "Spec",
            "CloudReference": "AWS::AppMesh::VirtualService.Spec",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Provider": {
                    "Required": "No",
                    "Type": "VirtualServiceProvider",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppMesh::VirtualService.Tags": {
            "Required": "No",
            "Type": "List of [TagRef",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppMesh::VirtualService",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::AppMesh::VirtualService.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Key": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Value": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppMesh::VirtualService.VirtualServiceName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppMesh::VirtualService",
            "CloudResourceProperty": "VirtualServiceName",
            "CloudReference": "AWS::AppMesh::VirtualService.VirtualServiceName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::DirectoryConfig": {
            "DirectoryName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppStream::DirectoryConfig",
                "CloudResourceProperty": "DirectoryName",
                "CloudReference": "AWS::AppStream::DirectoryConfig.DirectoryName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "OrganizationalUnitDistinguishedNames": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "ServiceAccountCredentials": {
                "Required": "Yes",
                "Type": "ServiceAccountCredentials",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::AppStream::DirectoryConfig.DirectoryName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppStream::DirectoryConfig",
            "CloudResourceProperty": "DirectoryName",
            "CloudReference": "AWS::AppStream::DirectoryConfig.DirectoryName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::Fleet": {
            "ComputeCapacity": {
                "Required": "Yes",
                "Type": "ComputeCapacity",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::Fleet",
                "CloudResourceProperty": "ComputeCapacity",
                "CloudReference": "AWS::AppStream::Fleet.ComputeCapacity",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DesiredInstances": {
                        "Required": "Yes",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "256",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::Fleet",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::AppStream::Fleet.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DisconnectTimeoutInSeconds": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::Fleet",
                "CloudResourceProperty": "DisconnectTimeoutInSeconds",
                "CloudReference": "AWS::AppStream::Fleet.DisconnectTimeoutInSeconds",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DisplayName": {
                "Required": "No",
                "Type": "String",
                "Maximum": "100",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::Fleet",
                "CloudResourceProperty": "DisplayName",
                "CloudReference": "AWS::AppStream::Fleet.DisplayName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DomainJoinInfo": {
                "Required": "No",
                "Type": "DomainJoinInfo",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::Fleet",
                "CloudResourceProperty": "DomainJoinInfo",
                "CloudReference": "AWS::AppStream::Fleet.DomainJoinInfo",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DirectoryName": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "OrganizationalUnitDistinguishedName": {
                        "Required": "No",
                        "Type": "String",
                        "Maximum": "2000",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "EnableDefaultInternetAccess": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::Fleet",
                "CloudResourceProperty": "EnableDefaultInternetAccess",
                "CloudReference": "AWS::AppStream::Fleet.EnableDefaultInternetAccess",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "FleetType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "ALWAYS_ON",
                    "ON_DEMAND"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppStream::Fleet",
                "CloudResourceProperty": "FleetType",
                "CloudReference": "AWS::AppStream::Fleet.FleetType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "IdleDisconnectTimeoutInSeconds": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::Fleet",
                "CloudResourceProperty": "IdleDisconnectTimeoutInSeconds",
                "CloudReference": "AWS::AppStream::Fleet.IdleDisconnectTimeoutInSeconds",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ImageArn": {
                "Required": "No",
                "Type": "String",
                "Pattern": "^arn:aws:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::Fleet",
                "CloudResourceProperty": "ImageArn",
                "CloudReference": "AWS::AppStream::Fleet.ImageArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ImageName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::Fleet",
                "CloudResourceProperty": "ImageName",
                "CloudReference": "AWS::AppStream::Fleet.ImageName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InstanceType": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::Fleet",
                "CloudResourceProperty": "InstanceType",
                "CloudReference": "AWS::AppStream::Fleet.InstanceType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MaxUserDurationInSeconds": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::Fleet",
                "CloudResourceProperty": "MaxUserDurationInSeconds",
                "CloudReference": "AWS::AppStream::Fleet.MaxUserDurationInSeconds",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,100}$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppStream::Fleet",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::AppStream::Fleet.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {},
            "VpcConfig": {
                "Required": "No",
                "Type": "VpcConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::Fleet",
                "CloudResourceProperty": "VpcConfig",
                "CloudReference": "AWS::AppStream::Fleet.VpcConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "SecurityGroupIds": {
                        "Required": "No",
                        "Type": "List of String",
                        "Maximum": "5",
                        "UpdateRequires": "No interruption"
                    },
                    "SubnetIds": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::AppStream::Fleet.ComputeCapacity": {
            "Required": "Yes",
            "Type": "ComputeCapacity",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::Fleet",
            "CloudResourceProperty": "ComputeCapacity",
            "CloudReference": "AWS::AppStream::Fleet.ComputeCapacity",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DesiredInstances": {
                    "Required": "Yes",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppStream::Fleet.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::Fleet",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::AppStream::Fleet.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::Fleet.DisconnectTimeoutInSeconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::Fleet",
            "CloudResourceProperty": "DisconnectTimeoutInSeconds",
            "CloudReference": "AWS::AppStream::Fleet.DisconnectTimeoutInSeconds",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::Fleet.DisplayName": {
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::Fleet",
            "CloudResourceProperty": "DisplayName",
            "CloudReference": "AWS::AppStream::Fleet.DisplayName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::Fleet.DomainJoinInfo": {
            "Required": "No",
            "Type": "DomainJoinInfo",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::Fleet",
            "CloudResourceProperty": "DomainJoinInfo",
            "CloudReference": "AWS::AppStream::Fleet.DomainJoinInfo",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DirectoryName": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "OrganizationalUnitDistinguishedName": {
                    "Required": "No",
                    "Type": "String",
                    "Maximum": "2000",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppStream::Fleet.EnableDefaultInternetAccess": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::Fleet",
            "CloudResourceProperty": "EnableDefaultInternetAccess",
            "CloudReference": "AWS::AppStream::Fleet.EnableDefaultInternetAccess",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::Fleet.FleetType": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "ALWAYS_ON",
                "ON_DEMAND"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppStream::Fleet",
            "CloudResourceProperty": "FleetType",
            "CloudReference": "AWS::AppStream::Fleet.FleetType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::Fleet.IdleDisconnectTimeoutInSeconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::Fleet",
            "CloudResourceProperty": "IdleDisconnectTimeoutInSeconds",
            "CloudReference": "AWS::AppStream::Fleet.IdleDisconnectTimeoutInSeconds",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::Fleet.ImageArn": {
            "Required": "No",
            "Type": "String",
            "Pattern": "^arn:aws:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::Fleet",
            "CloudResourceProperty": "ImageArn",
            "CloudReference": "AWS::AppStream::Fleet.ImageArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::Fleet.ImageName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::Fleet",
            "CloudResourceProperty": "ImageName",
            "CloudReference": "AWS::AppStream::Fleet.ImageName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::Fleet.InstanceType": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::Fleet",
            "CloudResourceProperty": "InstanceType",
            "CloudReference": "AWS::AppStream::Fleet.InstanceType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::Fleet.MaxUserDurationInSeconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::Fleet",
            "CloudResourceProperty": "MaxUserDurationInSeconds",
            "CloudReference": "AWS::AppStream::Fleet.MaxUserDurationInSeconds",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::Fleet.Name": {
            "Required": "No",
            "Type": "String",
            "Pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,100}$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppStream::Fleet",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::AppStream::Fleet.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::Fleet.VpcConfig": {
            "Required": "No",
            "Type": "VpcConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::Fleet",
            "CloudResourceProperty": "VpcConfig",
            "CloudReference": "AWS::AppStream::Fleet.VpcConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "SecurityGroupIds": {
                    "Required": "No",
                    "Type": "List of String",
                    "Maximum": "5",
                    "UpdateRequires": "No interruption"
                },
                "SubnetIds": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppStream::ImageBuilder": {
            "AppstreamAgentVersion": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::ImageBuilder",
                "CloudResourceProperty": "AppstreamAgentVersion",
                "CloudReference": "AWS::AppStream::ImageBuilder.AppstreamAgentVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "256",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::ImageBuilder",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::AppStream::ImageBuilder.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DisplayName": {
                "Required": "No",
                "Type": "String",
                "Maximum": "100",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::ImageBuilder",
                "CloudResourceProperty": "DisplayName",
                "CloudReference": "AWS::AppStream::ImageBuilder.DisplayName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DomainJoinInfo": {
                "Required": "No",
                "Type": "DomainJoinInfo",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::ImageBuilder",
                "CloudResourceProperty": "DomainJoinInfo",
                "CloudReference": "AWS::AppStream::ImageBuilder.DomainJoinInfo",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DirectoryName": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "OrganizationalUnitDistinguishedName": {
                        "Required": "No",
                        "Type": "String",
                        "Maximum": "2000",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "EnableDefaultInternetAccess": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::ImageBuilder",
                "CloudResourceProperty": "EnableDefaultInternetAccess",
                "CloudReference": "AWS::AppStream::ImageBuilder.EnableDefaultInternetAccess",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ImageArn": {
                "Required": "No",
                "Type": "String",
                "Pattern": "^arn:aws:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::ImageBuilder",
                "CloudResourceProperty": "ImageArn",
                "CloudReference": "AWS::AppStream::ImageBuilder.ImageArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ImageName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::ImageBuilder",
                "CloudResourceProperty": "ImageName",
                "CloudReference": "AWS::AppStream::ImageBuilder.ImageName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InstanceType": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::ImageBuilder",
                "CloudResourceProperty": "InstanceType",
                "CloudReference": "AWS::AppStream::ImageBuilder.InstanceType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,100}$",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::ImageBuilder",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::AppStream::ImageBuilder.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {},
            "VpcConfig": {
                "Required": "No",
                "Type": "VpcConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::ImageBuilder",
                "CloudResourceProperty": "VpcConfig",
                "CloudReference": "AWS::AppStream::ImageBuilder.VpcConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "SecurityGroupIds": {
                        "Required": "No",
                        "Type": "List of String",
                        "Maximum": "5",
                        "UpdateRequires": "No interruption"
                    },
                    "SubnetIds": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::AppStream::ImageBuilder.AppstreamAgentVersion": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::ImageBuilder",
            "CloudResourceProperty": "AppstreamAgentVersion",
            "CloudReference": "AWS::AppStream::ImageBuilder.AppstreamAgentVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::ImageBuilder.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::ImageBuilder",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::AppStream::ImageBuilder.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::ImageBuilder.DisplayName": {
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::ImageBuilder",
            "CloudResourceProperty": "DisplayName",
            "CloudReference": "AWS::AppStream::ImageBuilder.DisplayName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::ImageBuilder.DomainJoinInfo": {
            "Required": "No",
            "Type": "DomainJoinInfo",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::ImageBuilder",
            "CloudResourceProperty": "DomainJoinInfo",
            "CloudReference": "AWS::AppStream::ImageBuilder.DomainJoinInfo",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DirectoryName": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "OrganizationalUnitDistinguishedName": {
                    "Required": "No",
                    "Type": "String",
                    "Maximum": "2000",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppStream::ImageBuilder.EnableDefaultInternetAccess": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::ImageBuilder",
            "CloudResourceProperty": "EnableDefaultInternetAccess",
            "CloudReference": "AWS::AppStream::ImageBuilder.EnableDefaultInternetAccess",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::ImageBuilder.ImageArn": {
            "Required": "No",
            "Type": "String",
            "Pattern": "^arn:aws:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::ImageBuilder",
            "CloudResourceProperty": "ImageArn",
            "CloudReference": "AWS::AppStream::ImageBuilder.ImageArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::ImageBuilder.ImageName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::ImageBuilder",
            "CloudResourceProperty": "ImageName",
            "CloudReference": "AWS::AppStream::ImageBuilder.ImageName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::ImageBuilder.InstanceType": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::ImageBuilder",
            "CloudResourceProperty": "InstanceType",
            "CloudReference": "AWS::AppStream::ImageBuilder.InstanceType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::ImageBuilder.Name": {
            "Required": "No",
            "Type": "String",
            "Pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,100}$",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::ImageBuilder",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::AppStream::ImageBuilder.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::ImageBuilder.VpcConfig": {
            "Required": "No",
            "Type": "VpcConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::ImageBuilder",
            "CloudResourceProperty": "VpcConfig",
            "CloudReference": "AWS::AppStream::ImageBuilder.VpcConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "SecurityGroupIds": {
                    "Required": "No",
                    "Type": "List of String",
                    "Maximum": "5",
                    "UpdateRequires": "No interruption"
                },
                "SubnetIds": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppStream::Stack": {
            "ApplicationSettings": {
                "Required": "No",
                "Type": "ApplicationSettings",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::Stack",
                "CloudResourceProperty": "ApplicationSettings",
                "CloudReference": "AWS::AppStream::Stack.ApplicationSettings",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Enabled": {
                        "Required": "Yes",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "SettingsGroup": {
                        "Required": "No",
                        "Type": "String",
                        "Maximum": "100",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "AttributesToDelete": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "DeleteStorageConnectors": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            },
            "DisplayName": {
                "Required": "No",
                "Type": "String",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            },
            "FeedbackURL": {
                "Required": "No",
                "Type": "String",
                "Maximum": "1000",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,100}$",
                "UpdateRequires": "Replacement"
            },
            "RedirectURL": {
                "Required": "No",
                "Type": "String",
                "Maximum": "1000",
                "UpdateRequires": "No interruption"
            },
            "StorageConnectors": {
                "Required": "No",
                "Type": "List of [StorageConnector",
                "UpdateRequires": "No interruption"
            },
            "Tags": {},
            "UserSettings": {
                "Required": "No",
                "Type": "List of [UserSetting",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::AppStream::Stack.ApplicationSettings": {
            "Required": "No",
            "Type": "ApplicationSettings",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::Stack",
            "CloudResourceProperty": "ApplicationSettings",
            "CloudReference": "AWS::AppStream::Stack.ApplicationSettings",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Enabled": {
                    "Required": "Yes",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "SettingsGroup": {
                    "Required": "No",
                    "Type": "String",
                    "Maximum": "100",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppStream::StackFleetAssociation": {
            "FleetName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::StackFleetAssociation",
                "CloudResourceProperty": "FleetName",
                "CloudReference": "AWS::AppStream::StackFleetAssociation.FleetName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "StackName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppStream::StackFleetAssociation",
                "CloudResourceProperty": "StackName",
                "CloudReference": "AWS::AppStream::StackFleetAssociation.StackName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::AppStream::StackFleetAssociation.FleetName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::StackFleetAssociation",
            "CloudResourceProperty": "FleetName",
            "CloudReference": "AWS::AppStream::StackFleetAssociation.FleetName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::StackFleetAssociation.StackName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppStream::StackFleetAssociation",
            "CloudResourceProperty": "StackName",
            "CloudReference": "AWS::AppStream::StackFleetAssociation.StackName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::StackUserAssociation": {
            "AuthenticationType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "API",
                    "SAML",
                    "USERPOOL"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppStream::StackUserAssociation",
                "CloudResourceProperty": "AuthenticationType",
                "CloudReference": "AWS::AppStream::StackUserAssociation.AuthenticationType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SendEmailNotification": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppStream::StackUserAssociation",
                "CloudResourceProperty": "SendEmailNotification",
                "CloudReference": "AWS::AppStream::StackUserAssociation.SendEmailNotification",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "StackName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppStream::StackUserAssociation",
                "CloudResourceProperty": "StackName",
                "CloudReference": "AWS::AppStream::StackUserAssociation.StackName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "UserName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppStream::StackUserAssociation",
                "CloudResourceProperty": "UserName",
                "CloudReference": "AWS::AppStream::StackUserAssociation.UserName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::AppStream::StackUserAssociation.AuthenticationType": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "API",
                "SAML",
                "USERPOOL"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppStream::StackUserAssociation",
            "CloudResourceProperty": "AuthenticationType",
            "CloudReference": "AWS::AppStream::StackUserAssociation.AuthenticationType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::StackUserAssociation.SendEmailNotification": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppStream::StackUserAssociation",
            "CloudResourceProperty": "SendEmailNotification",
            "CloudReference": "AWS::AppStream::StackUserAssociation.SendEmailNotification",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::StackUserAssociation.StackName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppStream::StackUserAssociation",
            "CloudResourceProperty": "StackName",
            "CloudReference": "AWS::AppStream::StackUserAssociation.StackName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::StackUserAssociation.UserName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppStream::StackUserAssociation",
            "CloudResourceProperty": "UserName",
            "CloudReference": "AWS::AppStream::StackUserAssociation.UserName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::User": {
            "AuthenticationType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "API",
                    "SAML",
                    "USERPOOL"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppStream::User",
                "CloudResourceProperty": "AuthenticationType",
                "CloudReference": "AWS::AppStream::User.AuthenticationType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "FirstName": {
                "Required": "No",
                "Type": "String",
                "Maximum": "2048",
                "Pattern": "^[A-Za-z0-9_\\-\\s]+$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppStream::User",
                "CloudResourceProperty": "FirstName",
                "CloudReference": "AWS::AppStream::User.FirstName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "LastName": {
                "Required": "No",
                "Type": "String",
                "Maximum": "2048",
                "Pattern": "^[A-Za-z0-9_\\-\\s]+$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppStream::User",
                "CloudResourceProperty": "LastName",
                "CloudReference": "AWS::AppStream::User.LastName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MessageAction": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "RESEND",
                    "SUPPRESS"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppStream::User",
                "CloudResourceProperty": "MessageAction",
                "CloudReference": "AWS::AppStream::User.MessageAction",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "UserName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppStream::User",
                "CloudResourceProperty": "UserName",
                "CloudReference": "AWS::AppStream::User.UserName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::AppStream::User.AuthenticationType": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "API",
                "SAML",
                "USERPOOL"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppStream::User",
            "CloudResourceProperty": "AuthenticationType",
            "CloudReference": "AWS::AppStream::User.AuthenticationType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::User.FirstName": {
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "Pattern": "^[A-Za-z0-9_\\-\\s]+$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppStream::User",
            "CloudResourceProperty": "FirstName",
            "CloudReference": "AWS::AppStream::User.FirstName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::User.LastName": {
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "Pattern": "^[A-Za-z0-9_\\-\\s]+$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppStream::User",
            "CloudResourceProperty": "LastName",
            "CloudReference": "AWS::AppStream::User.LastName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::User.MessageAction": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "RESEND",
                "SUPPRESS"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppStream::User",
            "CloudResourceProperty": "MessageAction",
            "CloudReference": "AWS::AppStream::User.MessageAction",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppStream::User.UserName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppStream::User",
            "CloudResourceProperty": "UserName",
            "CloudReference": "AWS::AppStream::User.UserName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::ApiKey": {
            "ApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppSync::ApiKey",
                "CloudResourceProperty": "ApiId",
                "CloudReference": "AWS::AppSync::ApiKey.ApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::ApiKey",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::AppSync::ApiKey.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Expires": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::ApiKey",
                "CloudResourceProperty": "Expires",
                "CloudReference": "AWS::AppSync::ApiKey.Expires",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::AppSync::ApiKey.ApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppSync::ApiKey",
            "CloudResourceProperty": "ApiId",
            "CloudReference": "AWS::AppSync::ApiKey.ApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::ApiKey.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::ApiKey",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::AppSync::ApiKey.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::ApiKey.Expires": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::ApiKey",
            "CloudResourceProperty": "Expires",
            "CloudReference": "AWS::AppSync::ApiKey.Expires",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::DataSource": {
            "ApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppSync::DataSource",
                "CloudResourceProperty": "ApiId",
                "CloudReference": "AWS::AppSync::DataSource.ApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::DataSource",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::AppSync::DataSource.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DynamoDBConfig": {
                "Required": "No",
                "Type": "DynamoDBConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::DataSource",
                "CloudResourceProperty": "DynamoDBConfig",
                "CloudReference": "AWS::AppSync::DataSource.DynamoDBConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AwsRegion": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "TableName": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "UseCallerCredentials": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "ElasticsearchConfig": {
                "Required": "No",
                "Type": "ElasticsearchConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::DataSource",
                "CloudResourceProperty": "ElasticsearchConfig",
                "CloudReference": "AWS::AppSync::DataSource.ElasticsearchConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AwsRegion": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Endpoint": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "HttpConfig": {
                "Required": "No",
                "Type": "HttpConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::DataSource",
                "CloudResourceProperty": "HttpConfig",
                "CloudReference": "AWS::AppSync::DataSource.HttpConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AuthorizationConfig": {
                        "Required": "No",
                        "Type": "AuthorizationConfig",
                        "UpdateRequires": "No interruption"
                    },
                    "Endpoint": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "LambdaConfig": {
                "Required": "No",
                "Type": "LambdaConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::DataSource",
                "CloudResourceProperty": "LambdaConfig",
                "CloudReference": "AWS::AppSync::DataSource.LambdaConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "LambdaFunctionArn": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppSync::DataSource",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::AppSync::DataSource.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RelationalDatabaseConfig": {
                "Required": "No",
                "Type": "RelationalDatabaseConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::DataSource",
                "CloudResourceProperty": "RelationalDatabaseConfig",
                "CloudReference": "AWS::AppSync::DataSource.RelationalDatabaseConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "RdsHttpEndpointConfig": {
                        "Required": "No",
                        "Type": "RdsHttpEndpointConfig",
                        "UpdateRequires": "No interruption"
                    },
                    "RelationalDatabaseSourceType": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "ServiceRoleArn": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::DataSource",
                "CloudResourceProperty": "ServiceRoleArn",
                "CloudReference": "AWS::AppSync::DataSource.ServiceRoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Type": {
                "Type`  <a name=\"cfn-appsync-datasource-type\"></a>\nThe type of the data source\\.  \n+  **AMAZON\\_DYNAMODB*": "The data source is an Amazon DynamoDB table\\.\n+  **AMAZON\\_ELASTICSEARCH*",
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::DataSource",
                "CloudResourceProperty": "Type",
                "CloudReference": "AWS::AppSync::DataSource.Type",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::AppSync::DataSource.ApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppSync::DataSource",
            "CloudResourceProperty": "ApiId",
            "CloudReference": "AWS::AppSync::DataSource.ApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::DataSource.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::DataSource",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::AppSync::DataSource.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::DataSource.DynamoDBConfig": {
            "Required": "No",
            "Type": "DynamoDBConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::DataSource",
            "CloudResourceProperty": "DynamoDBConfig",
            "CloudReference": "AWS::AppSync::DataSource.DynamoDBConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AwsRegion": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "TableName": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "UseCallerCredentials": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppSync::DataSource.ElasticsearchConfig": {
            "Required": "No",
            "Type": "ElasticsearchConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::DataSource",
            "CloudResourceProperty": "ElasticsearchConfig",
            "CloudReference": "AWS::AppSync::DataSource.ElasticsearchConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AwsRegion": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Endpoint": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppSync::DataSource.HttpConfig": {
            "Required": "No",
            "Type": "HttpConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::DataSource",
            "CloudResourceProperty": "HttpConfig",
            "CloudReference": "AWS::AppSync::DataSource.HttpConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AuthorizationConfig": {
                    "Required": "No",
                    "Type": "AuthorizationConfig",
                    "UpdateRequires": "No interruption"
                },
                "Endpoint": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppSync::DataSource.LambdaConfig": {
            "Required": "No",
            "Type": "LambdaConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::DataSource",
            "CloudResourceProperty": "LambdaConfig",
            "CloudReference": "AWS::AppSync::DataSource.LambdaConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "LambdaFunctionArn": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppSync::DataSource.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppSync::DataSource",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::AppSync::DataSource.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::DataSource.RelationalDatabaseConfig": {
            "Required": "No",
            "Type": "RelationalDatabaseConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::DataSource",
            "CloudResourceProperty": "RelationalDatabaseConfig",
            "CloudReference": "AWS::AppSync::DataSource.RelationalDatabaseConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "RdsHttpEndpointConfig": {
                    "Required": "No",
                    "Type": "RdsHttpEndpointConfig",
                    "UpdateRequires": "No interruption"
                },
                "RelationalDatabaseSourceType": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppSync::DataSource.ServiceRoleArn": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::DataSource",
            "CloudResourceProperty": "ServiceRoleArn",
            "CloudReference": "AWS::AppSync::DataSource.ServiceRoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::DataSource.Type": {
            "Type`  <a name=\"cfn-appsync-datasource-type\"></a>\nThe type of the data source\\.  \n+  **AMAZON\\_DYNAMODB*": "The data source is an Amazon DynamoDB table\\.\n+  **AMAZON\\_ELASTICSEARCH*",
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::DataSource",
            "CloudResourceProperty": "Type",
            "CloudReference": "AWS::AppSync::DataSource.Type",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::FunctionConfiguration": {
            "ApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppSync::FunctionConfiguration",
                "CloudResourceProperty": "ApiId",
                "CloudReference": "AWS::AppSync::FunctionConfiguration.ApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DataSourceName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::FunctionConfiguration",
                "CloudResourceProperty": "DataSourceName",
                "CloudReference": "AWS::AppSync::FunctionConfiguration.DataSourceName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::FunctionConfiguration",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::AppSync::FunctionConfiguration.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "FunctionVersion": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::FunctionConfiguration",
                "CloudResourceProperty": "FunctionVersion",
                "CloudReference": "AWS::AppSync::FunctionConfiguration.FunctionVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::FunctionConfiguration",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::AppSync::FunctionConfiguration.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RequestMappingTemplate": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::FunctionConfiguration",
                "CloudResourceProperty": "RequestMappingTemplate",
                "CloudReference": "AWS::AppSync::FunctionConfiguration.RequestMappingTemplate",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RequestMappingTemplateS3Location": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::FunctionConfiguration",
                "CloudResourceProperty": "RequestMappingTemplateS3Location",
                "CloudReference": "AWS::AppSync::FunctionConfiguration.RequestMappingTemplateS3Location",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ResponseMappingTemplate": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::FunctionConfiguration",
                "CloudResourceProperty": "ResponseMappingTemplate",
                "CloudReference": "AWS::AppSync::FunctionConfiguration.ResponseMappingTemplate",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ResponseMappingTemplateS3Location": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::FunctionConfiguration",
                "CloudResourceProperty": "ResponseMappingTemplateS3Location",
                "CloudReference": "AWS::AppSync::FunctionConfiguration.ResponseMappingTemplateS3Location",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::AppSync::FunctionConfiguration.ApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppSync::FunctionConfiguration",
            "CloudResourceProperty": "ApiId",
            "CloudReference": "AWS::AppSync::FunctionConfiguration.ApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::FunctionConfiguration.DataSourceName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::FunctionConfiguration",
            "CloudResourceProperty": "DataSourceName",
            "CloudReference": "AWS::AppSync::FunctionConfiguration.DataSourceName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::FunctionConfiguration.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::FunctionConfiguration",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::AppSync::FunctionConfiguration.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::FunctionConfiguration.FunctionVersion": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::FunctionConfiguration",
            "CloudResourceProperty": "FunctionVersion",
            "CloudReference": "AWS::AppSync::FunctionConfiguration.FunctionVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::FunctionConfiguration.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::FunctionConfiguration",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::AppSync::FunctionConfiguration.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::FunctionConfiguration.RequestMappingTemplate": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::FunctionConfiguration",
            "CloudResourceProperty": "RequestMappingTemplate",
            "CloudReference": "AWS::AppSync::FunctionConfiguration.RequestMappingTemplate",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::FunctionConfiguration.RequestMappingTemplateS3Location": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::FunctionConfiguration",
            "CloudResourceProperty": "RequestMappingTemplateS3Location",
            "CloudReference": "AWS::AppSync::FunctionConfiguration.RequestMappingTemplateS3Location",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::FunctionConfiguration.ResponseMappingTemplate": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::FunctionConfiguration",
            "CloudResourceProperty": "ResponseMappingTemplate",
            "CloudReference": "AWS::AppSync::FunctionConfiguration.ResponseMappingTemplate",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::FunctionConfiguration.ResponseMappingTemplateS3Location": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::FunctionConfiguration",
            "CloudResourceProperty": "ResponseMappingTemplateS3Location",
            "CloudReference": "AWS::AppSync::FunctionConfiguration.ResponseMappingTemplateS3Location",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::GraphQLApi": {
            "AdditionalAuthenticationProviders": {
                "Required": "No",
                "Type": "AdditionalAuthenticationProviders",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::GraphQLApi",
                "CloudResourceProperty": "AdditionalAuthenticationProviders",
                "CloudReference": "AWS::AppSync::GraphQLApi.AdditionalAuthenticationProviders",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AuthenticationType": {},
            "LogConfig": {
                "Required": "No",
                "Type": "LogConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::GraphQLApi",
                "CloudResourceProperty": "LogConfig",
                "CloudReference": "AWS::AppSync::GraphQLApi.LogConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "CloudWatchLogsRoleArn": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "ExcludeVerboseContent": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "FieldLogLevel": {
                        "FieldLogLevel`  <a name=\"cfn-appsync-graphqlapi-logconfig-fieldloglevel\"></a>\nThe field logging level\\. Values can be NONE, ERROR, or ALL\\.   \n+  **NONE*": "No field\\-level logs are captured\\.\n+  **ERROR*",
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::GraphQLApi",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::AppSync::GraphQLApi.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "OpenIDConnectConfig": {
                "Required": "No",
                "Type": "OpenIDConnectConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::GraphQLApi",
                "CloudResourceProperty": "OpenIDConnectConfig",
                "CloudReference": "AWS::AppSync::GraphQLApi.OpenIDConnectConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AuthTTL": {
                        "Required": "No",
                        "Type": "Double",
                        "UpdateRequires": "No interruption"
                    },
                    "ClientId": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "IatTTL": {
                        "Required": "No",
                        "Type": "Double",
                        "UpdateRequires": "No interruption"
                    },
                    "Issuer": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Tags": {
                "Required": "No",
                "Type": "Tags",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::GraphQLApi",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::AppSync::GraphQLApi.Tags",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "UserPoolConfig": {
                "Required": "No",
                "Type": "UserPoolConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::GraphQLApi",
                "CloudResourceProperty": "UserPoolConfig",
                "CloudReference": "AWS::AppSync::GraphQLApi.UserPoolConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AppIdClientRegex": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "AwsRegion": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "DefaultAction": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "UserPoolId": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::AppSync::GraphQLApi.AdditionalAuthenticationProviders": {
            "Required": "No",
            "Type": "AdditionalAuthenticationProviders",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::GraphQLApi",
            "CloudResourceProperty": "AdditionalAuthenticationProviders",
            "CloudReference": "AWS::AppSync::GraphQLApi.AdditionalAuthenticationProviders",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::GraphQLApi.LogConfig": {
            "Required": "No",
            "Type": "LogConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::GraphQLApi",
            "CloudResourceProperty": "LogConfig",
            "CloudReference": "AWS::AppSync::GraphQLApi.LogConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "CloudWatchLogsRoleArn": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "ExcludeVerboseContent": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "FieldLogLevel": {
                    "FieldLogLevel`  <a name=\"cfn-appsync-graphqlapi-logconfig-fieldloglevel\"></a>\nThe field logging level\\. Values can be NONE, ERROR, or ALL\\.   \n+  **NONE*": "No field\\-level logs are captured\\.\n+  **ERROR*",
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppSync::GraphQLApi.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::GraphQLApi",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::AppSync::GraphQLApi.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::GraphQLApi.OpenIDConnectConfig": {
            "Required": "No",
            "Type": "OpenIDConnectConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::GraphQLApi",
            "CloudResourceProperty": "OpenIDConnectConfig",
            "CloudReference": "AWS::AppSync::GraphQLApi.OpenIDConnectConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AuthTTL": {
                    "Required": "No",
                    "Type": "Double",
                    "UpdateRequires": "No interruption"
                },
                "ClientId": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "IatTTL": {
                    "Required": "No",
                    "Type": "Double",
                    "UpdateRequires": "No interruption"
                },
                "Issuer": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppSync::GraphQLApi.Tags": {
            "Required": "No",
            "Type": "Tags",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::GraphQLApi",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::AppSync::GraphQLApi.Tags",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::GraphQLApi.UserPoolConfig": {
            "Required": "No",
            "Type": "UserPoolConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::GraphQLApi",
            "CloudResourceProperty": "UserPoolConfig",
            "CloudReference": "AWS::AppSync::GraphQLApi.UserPoolConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AppIdClientRegex": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "AwsRegion": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "DefaultAction": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "UserPoolId": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppSync::GraphQLSchema": {
            "ApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppSync::GraphQLSchema",
                "CloudResourceProperty": "ApiId",
                "CloudReference": "AWS::AppSync::GraphQLSchema.ApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Definition": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::GraphQLSchema",
                "CloudResourceProperty": "Definition",
                "CloudReference": "AWS::AppSync::GraphQLSchema.Definition",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DefinitionS3Location": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::GraphQLSchema",
                "CloudResourceProperty": "DefinitionS3Location",
                "CloudReference": "AWS::AppSync::GraphQLSchema.DefinitionS3Location",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::AppSync::GraphQLSchema.ApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppSync::GraphQLSchema",
            "CloudResourceProperty": "ApiId",
            "CloudReference": "AWS::AppSync::GraphQLSchema.ApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::GraphQLSchema.Definition": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::GraphQLSchema",
            "CloudResourceProperty": "Definition",
            "CloudReference": "AWS::AppSync::GraphQLSchema.Definition",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::GraphQLSchema.DefinitionS3Location": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::GraphQLSchema",
            "CloudResourceProperty": "DefinitionS3Location",
            "CloudReference": "AWS::AppSync::GraphQLSchema.DefinitionS3Location",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::Resolver": {
            "ApiId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppSync::Resolver",
                "CloudResourceProperty": "ApiId",
                "CloudReference": "AWS::AppSync::Resolver.ApiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DataSourceName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::Resolver",
                "CloudResourceProperty": "DataSourceName",
                "CloudReference": "AWS::AppSync::Resolver.DataSourceName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "FieldName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppSync::Resolver",
                "CloudResourceProperty": "FieldName",
                "CloudReference": "AWS::AppSync::Resolver.FieldName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Kind": {
                "Kind`  <a name=\"cfn-appsync-resolver-kind\"></a>\nThe resolver type\\.  \n+  **UNIT*": "A UNIT resolver type\\. A UNIT resolver is the default resolver type\\. A UNIT resolver enables you to execute a GraphQL query against a single data source\\.\n+  **PIPELINE*",
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::Resolver",
                "CloudResourceProperty": "Kind",
                "CloudReference": "AWS::AppSync::Resolver.Kind",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PipelineConfig": {
                "Required": "No",
                "Type": "PipelineConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::Resolver",
                "CloudResourceProperty": "PipelineConfig",
                "CloudReference": "AWS::AppSync::Resolver.PipelineConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Functions": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "RequestMappingTemplate": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::Resolver",
                "CloudResourceProperty": "RequestMappingTemplate",
                "CloudReference": "AWS::AppSync::Resolver.RequestMappingTemplate",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RequestMappingTemplateS3Location": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::Resolver",
                "CloudResourceProperty": "RequestMappingTemplateS3Location",
                "CloudReference": "AWS::AppSync::Resolver.RequestMappingTemplateS3Location",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ResponseMappingTemplate": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::Resolver",
                "CloudResourceProperty": "ResponseMappingTemplate",
                "CloudReference": "AWS::AppSync::Resolver.ResponseMappingTemplate",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ResponseMappingTemplateS3Location": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AppSync::Resolver",
                "CloudResourceProperty": "ResponseMappingTemplateS3Location",
                "CloudReference": "AWS::AppSync::Resolver.ResponseMappingTemplateS3Location",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TypeName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::AppSync::Resolver",
                "CloudResourceProperty": "TypeName",
                "CloudReference": "AWS::AppSync::Resolver.TypeName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::AppSync::Resolver.ApiId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppSync::Resolver",
            "CloudResourceProperty": "ApiId",
            "CloudReference": "AWS::AppSync::Resolver.ApiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::Resolver.DataSourceName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::Resolver",
            "CloudResourceProperty": "DataSourceName",
            "CloudReference": "AWS::AppSync::Resolver.DataSourceName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::Resolver.FieldName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppSync::Resolver",
            "CloudResourceProperty": "FieldName",
            "CloudReference": "AWS::AppSync::Resolver.FieldName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::Resolver.Kind": {
            "Kind`  <a name=\"cfn-appsync-resolver-kind\"></a>\nThe resolver type\\.  \n+  **UNIT*": "A UNIT resolver type\\. A UNIT resolver is the default resolver type\\. A UNIT resolver enables you to execute a GraphQL query against a single data source\\.\n+  **PIPELINE*",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::Resolver",
            "CloudResourceProperty": "Kind",
            "CloudReference": "AWS::AppSync::Resolver.Kind",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::Resolver.PipelineConfig": {
            "Required": "No",
            "Type": "PipelineConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::Resolver",
            "CloudResourceProperty": "PipelineConfig",
            "CloudReference": "AWS::AppSync::Resolver.PipelineConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Functions": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AppSync::Resolver.RequestMappingTemplate": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::Resolver",
            "CloudResourceProperty": "RequestMappingTemplate",
            "CloudReference": "AWS::AppSync::Resolver.RequestMappingTemplate",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::Resolver.RequestMappingTemplateS3Location": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::Resolver",
            "CloudResourceProperty": "RequestMappingTemplateS3Location",
            "CloudReference": "AWS::AppSync::Resolver.RequestMappingTemplateS3Location",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::Resolver.ResponseMappingTemplate": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::Resolver",
            "CloudResourceProperty": "ResponseMappingTemplate",
            "CloudReference": "AWS::AppSync::Resolver.ResponseMappingTemplate",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::Resolver.ResponseMappingTemplateS3Location": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AppSync::Resolver",
            "CloudResourceProperty": "ResponseMappingTemplateS3Location",
            "CloudReference": "AWS::AppSync::Resolver.ResponseMappingTemplateS3Location",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AppSync::Resolver.TypeName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::AppSync::Resolver",
            "CloudResourceProperty": "TypeName",
            "CloudReference": "AWS::AppSync::Resolver.TypeName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Athena::NamedQuery": {
            "Database": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Athena::NamedQuery",
                "CloudResourceProperty": "Database",
                "CloudReference": "AWS::Athena::NamedQuery.Database",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Athena::NamedQuery",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::Athena::NamedQuery.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Athena::NamedQuery",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Athena::NamedQuery.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "QueryString": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "262144",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Athena::NamedQuery",
                "CloudResourceProperty": "QueryString",
                "CloudReference": "AWS::Athena::NamedQuery.QueryString",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Athena::NamedQuery.Database": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "255",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Athena::NamedQuery",
            "CloudResourceProperty": "Database",
            "CloudReference": "AWS::Athena::NamedQuery.Database",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Athena::NamedQuery.Description": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Athena::NamedQuery",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::Athena::NamedQuery.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Athena::NamedQuery.Name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Athena::NamedQuery",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Athena::NamedQuery.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Athena::NamedQuery.QueryString": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "262144",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Athena::NamedQuery",
            "CloudResourceProperty": "QueryString",
            "CloudReference": "AWS::Athena::NamedQuery.QueryString",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::AutoScalingPlans::ScalingPlan": {
            "ApplicationSource": {
                "Required": "Yes",
                "Type": "ApplicationSource",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AutoScalingPlans::ScalingPlan",
                "CloudResourceProperty": "ApplicationSource",
                "CloudReference": "AWS::AutoScalingPlans::ScalingPlan.ApplicationSource",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "CloudFormationStackARN": {
                        "Required": "No",
                        "Type": "String",
                        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                        "UpdateRequires": "No interruption"
                    },
                    "TagFilters": {
                        "Required": "No",
                        "Type": "List of [TagFilter",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "ScalingInstructions": {
                "Required": "Yes",
                "Type": "List of [ScalingInstruction",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::AutoScalingPlans::ScalingPlan",
                "CloudResourceProperty": "ScalingInstructions",
                "CloudReference": "AWS::AutoScalingPlans::ScalingPlan.ScalingInstructions",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "CustomizedLoadMetricSpecification": {},
                    "DisableDynamicScaling": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "MaxCapacity": {},
                    "MinCapacity": {
                        "Required": "Yes",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "PredefinedLoadMetricSpecification": {},
                    "PredictiveScalingMaxCapacityBehavior": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "SetForecastCapacityToMaxCapacity",
                            "SetMaxCapacityAboveForecastCapacity",
                            "SetMaxCapacityToForecastCapacity"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "PredictiveScalingMaxCapacityBuffer": {},
                    "PredictiveScalingMode": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "ForecastAndScale",
                            "ForecastOnly"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "ResourceId": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "1600",
                        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                        "UpdateRequires": "No interruption"
                    },
                    "ScalableDimension": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "autoscaling:autoScalingGroup:DesiredCapacity",
                            "dynamodb:index:ReadCapacityUnits",
                            "dynamodb:index:WriteCapacityUnits",
                            "dynamodb:table:ReadCapacityUnits",
                            "dynamodb:table:WriteCapacityUnits",
                            "ec2:spot-fleet-request:TargetCapacity",
                            "ecs:service:DesiredCount",
                            "rds:cluster:ReadReplicaCount"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "ScalingPolicyUpdateBehavior": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "KeepExternalPolicies",
                            "ReplaceExternalPolicies"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "ScheduledActionBufferTime": {
                        "Required": "No",
                        "Type": "Integer",
                        "Minimum": "0",
                        "UpdateRequires": "No interruption"
                    },
                    "ServiceNamespace": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "autoscaling",
                            "dynamodb",
                            "ec2",
                            "ecs",
                            "rds"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "TargetTrackingConfigurations": {
                        "Required": "Yes",
                        "Type": "List of [TargetTrackingConfiguration",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::AutoScalingPlans::ScalingPlan.ApplicationSource": {
            "Required": "Yes",
            "Type": "ApplicationSource",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AutoScalingPlans::ScalingPlan",
            "CloudResourceProperty": "ApplicationSource",
            "CloudReference": "AWS::AutoScalingPlans::ScalingPlan.ApplicationSource",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "CloudFormationStackARN": {
                    "Required": "No",
                    "Type": "String",
                    "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                    "UpdateRequires": "No interruption"
                },
                "TagFilters": {
                    "Required": "No",
                    "Type": "List of [TagFilter",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::AutoScalingPlans::ScalingPlan.ScalingInstructions": {
            "Required": "Yes",
            "Type": "List of [ScalingInstruction",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::AutoScalingPlans::ScalingPlan",
            "CloudResourceProperty": "ScalingInstructions",
            "CloudReference": "AWS::AutoScalingPlans::ScalingPlan.ScalingInstructions",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "CustomizedLoadMetricSpecification": {},
                "DisableDynamicScaling": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "MaxCapacity": {},
                "MinCapacity": {
                    "Required": "Yes",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "PredefinedLoadMetricSpecification": {},
                "PredictiveScalingMaxCapacityBehavior": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "SetForecastCapacityToMaxCapacity",
                        "SetMaxCapacityAboveForecastCapacity",
                        "SetMaxCapacityToForecastCapacity"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "PredictiveScalingMaxCapacityBuffer": {},
                "PredictiveScalingMode": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "ForecastAndScale",
                        "ForecastOnly"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "ResourceId": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "1600",
                    "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                    "UpdateRequires": "No interruption"
                },
                "ScalableDimension": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "autoscaling:autoScalingGroup:DesiredCapacity",
                        "dynamodb:index:ReadCapacityUnits",
                        "dynamodb:index:WriteCapacityUnits",
                        "dynamodb:table:ReadCapacityUnits",
                        "dynamodb:table:WriteCapacityUnits",
                        "ec2:spot-fleet-request:TargetCapacity",
                        "ecs:service:DesiredCount",
                        "rds:cluster:ReadReplicaCount"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "ScalingPolicyUpdateBehavior": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "KeepExternalPolicies",
                        "ReplaceExternalPolicies"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "ScheduledActionBufferTime": {
                    "Required": "No",
                    "Type": "Integer",
                    "Minimum": "0",
                    "UpdateRequires": "No interruption"
                },
                "ServiceNamespace": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "autoscaling",
                        "dynamodb",
                        "ec2",
                        "ecs",
                        "rds"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "TargetTrackingConfigurations": {
                    "Required": "Yes",
                    "Type": "List of [TargetTrackingConfiguration",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Backup::BackupPlan": {
            "BackupPlan": {
                "Required": "Yes",
                "Type": "BackupPlanResourceType",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Backup::BackupPlan",
                "CloudResourceProperty": "BackupPlan",
                "CloudReference": "AWS::Backup::BackupPlan.BackupPlan",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "BackupPlanName": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "BackupPlanRule": {
                        "Required": "Yes",
                        "Type": "List of [BackupRuleResourceType",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "BackupPlanTags": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Backup::BackupPlan",
                "CloudResourceProperty": "BackupPlanTags",
                "CloudReference": "AWS::Backup::BackupPlan.BackupPlanTags",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Backup::BackupPlan.BackupPlan": {
            "Required": "Yes",
            "Type": "BackupPlanResourceType",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Backup::BackupPlan",
            "CloudResourceProperty": "BackupPlan",
            "CloudReference": "AWS::Backup::BackupPlan.BackupPlan",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "BackupPlanName": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "BackupPlanRule": {
                    "Required": "Yes",
                    "Type": "List of [BackupRuleResourceType",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Backup::BackupPlan.BackupPlanTags": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Backup::BackupPlan",
            "CloudResourceProperty": "BackupPlanTags",
            "CloudReference": "AWS::Backup::BackupPlan.BackupPlanTags",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Backup::BackupSelection": {
            "BackupPlanId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Backup::BackupSelection",
                "CloudResourceProperty": "BackupPlanId",
                "CloudReference": "AWS::Backup::BackupSelection.BackupPlanId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "BackupSelection": {
                "Required": "Yes",
                "Type": "BackupSelectionResourceType",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Backup::BackupSelection",
                "CloudResourceProperty": "BackupSelection",
                "CloudReference": "AWS::Backup::BackupSelection.BackupSelection",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "IamRoleArn": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "ListOfTags": {
                        "Required": "No",
                        "Type": "List of [ConditionResourceType",
                        "UpdateRequires": "No interruption"
                    },
                    "Resources": {},
                    "SelectionName": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::Backup::BackupSelection.BackupPlanId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Backup::BackupSelection",
            "CloudResourceProperty": "BackupPlanId",
            "CloudReference": "AWS::Backup::BackupSelection.BackupPlanId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Backup::BackupSelection.BackupSelection": {
            "Required": "Yes",
            "Type": "BackupSelectionResourceType",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Backup::BackupSelection",
            "CloudResourceProperty": "BackupSelection",
            "CloudReference": "AWS::Backup::BackupSelection.BackupSelection",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "IamRoleArn": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "ListOfTags": {
                    "Required": "No",
                    "Type": "List of [ConditionResourceType",
                    "UpdateRequires": "No interruption"
                },
                "Resources": {},
                "SelectionName": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Backup::BackupVault": {
            "AccessPolicy": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Backup::BackupVault",
                "CloudResourceProperty": "AccessPolicy",
                "CloudReference": "AWS::Backup::BackupVault.AccessPolicy",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "BackupVaultName": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^[a-zA-Z0-9\\-\\_\\.]{1,50}$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Backup::BackupVault",
                "CloudResourceProperty": "BackupVaultName",
                "CloudReference": "AWS::Backup::BackupVault.BackupVaultName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "BackupVaultTags": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Backup::BackupVault",
                "CloudResourceProperty": "BackupVaultTags",
                "CloudReference": "AWS::Backup::BackupVault.BackupVaultTags",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EncryptionKeyArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Backup::BackupVault",
                "CloudResourceProperty": "EncryptionKeyArn",
                "CloudReference": "AWS::Backup::BackupVault.EncryptionKeyArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Notifications": {
                "Required": "No",
                "Type": "NotificationObjectType",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Backup::BackupVault",
                "CloudResourceProperty": "Notifications",
                "CloudReference": "AWS::Backup::BackupVault.Notifications",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "BackupVaultEvents": {
                        "Required": "Yes",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    },
                    "SNSTopicArn": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::Backup::BackupVault.AccessPolicy": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Backup::BackupVault",
            "CloudResourceProperty": "AccessPolicy",
            "CloudReference": "AWS::Backup::BackupVault.AccessPolicy",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Backup::BackupVault.BackupVaultName": {
            "Required": "Yes",
            "Type": "String",
            "Pattern": "^[a-zA-Z0-9\\-\\_\\.]{1,50}$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Backup::BackupVault",
            "CloudResourceProperty": "BackupVaultName",
            "CloudReference": "AWS::Backup::BackupVault.BackupVaultName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Backup::BackupVault.BackupVaultTags": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Backup::BackupVault",
            "CloudResourceProperty": "BackupVaultTags",
            "CloudReference": "AWS::Backup::BackupVault.BackupVaultTags",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Backup::BackupVault.EncryptionKeyArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Backup::BackupVault",
            "CloudResourceProperty": "EncryptionKeyArn",
            "CloudReference": "AWS::Backup::BackupVault.EncryptionKeyArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Backup::BackupVault.Notifications": {
            "Required": "No",
            "Type": "NotificationObjectType",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Backup::BackupVault",
            "CloudResourceProperty": "Notifications",
            "CloudReference": "AWS::Backup::BackupVault.Notifications",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "BackupVaultEvents": {
                    "Required": "Yes",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                },
                "SNSTopicArn": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Batch::ComputeEnvironment": {
            "ComputeEnvironmentName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Batch::ComputeEnvironment",
                "CloudResourceProperty": "ComputeEnvironmentName",
                "CloudReference": "AWS::Batch::ComputeEnvironment.ComputeEnvironmentName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ComputeResources": {},
            "ServiceRole": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Batch::ComputeEnvironment",
                "CloudResourceProperty": "ServiceRole",
                "CloudReference": "AWS::Batch::ComputeEnvironment.ServiceRole",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "State": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "DISABLED",
                    "ENABLED"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Batch::ComputeEnvironment",
                "CloudResourceProperty": "State",
                "CloudReference": "AWS::Batch::ComputeEnvironment.State",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Type": {}
        },
        "AWS::Batch::ComputeEnvironment.ComputeEnvironmentName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Batch::ComputeEnvironment",
            "CloudResourceProperty": "ComputeEnvironmentName",
            "CloudReference": "AWS::Batch::ComputeEnvironment.ComputeEnvironmentName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Batch::ComputeEnvironment.ServiceRole": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Batch::ComputeEnvironment",
            "CloudResourceProperty": "ServiceRole",
            "CloudReference": "AWS::Batch::ComputeEnvironment.ServiceRole",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Batch::ComputeEnvironment.State": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "DISABLED",
                "ENABLED"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Batch::ComputeEnvironment",
            "CloudResourceProperty": "State",
            "CloudReference": "AWS::Batch::ComputeEnvironment.State",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Batch::JobDefinition": {
            "ContainerProperties": {
                "Required": "No",
                "Type": "ContainerProperties",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Batch::JobDefinition",
                "CloudResourceProperty": "ContainerProperties",
                "CloudReference": "AWS::Batch::JobDefinition.ContainerProperties",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Command": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    },
                    "Environment": {
                        "Required": "No",
                        "Type": "List",
                        "UpdateRequires": "No interruption"
                    },
                    "Image": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "InstanceType": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "JobRoleArn": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "LinuxParameters": {
                        "Required": "No",
                        "Type": "LinuxParameters",
                        "UpdateRequires": "No interruption"
                    },
                    "Memory": {},
                    "MountPoints": {
                        "Required": "No",
                        "Type": "List",
                        "UpdateRequires": "No interruption"
                    },
                    "Privileged": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "ReadonlyRootFilesystem": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "ResourceRequirements": {
                        "Required": "No",
                        "Type": "List of [ResourceRequirement",
                        "UpdateRequires": "No interruption"
                    },
                    "Ulimits": {
                        "Required": "No",
                        "Type": "List of [Ulimit",
                        "UpdateRequires": "No interruption"
                    },
                    "User": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Vcpus": {
                        "Required": "Yes",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "Volumes": {
                        "Required": "No",
                        "Type": "List",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "JobDefinitionName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Batch::JobDefinition",
                "CloudResourceProperty": "JobDefinitionName",
                "CloudReference": "AWS::Batch::JobDefinition.JobDefinitionName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "NodeProperties": {
                "Required": "No",
                "Type": "NodeProperties",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Batch::JobDefinition",
                "CloudResourceProperty": "NodeProperties",
                "CloudReference": "AWS::Batch::JobDefinition.NodeProperties",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "MainNode": {
                        "Required": "Yes",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "NodeRangeProperties": {
                        "Required": "Yes",
                        "Type": "List of [NodeRangeProperty",
                        "UpdateRequires": "No interruption"
                    },
                    "NumNodes": {
                        "Required": "Yes",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Parameters": {},
            "RetryStrategy": {
                "Required": "No",
                "Type": "RetryStrategy",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Batch::JobDefinition",
                "CloudResourceProperty": "RetryStrategy",
                "CloudReference": "AWS::Batch::JobDefinition.RetryStrategy",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Attempts": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Timeout": {
                "Required": "No",
                "Type": "Timeout",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Batch::JobDefinition",
                "CloudResourceProperty": "Timeout",
                "CloudReference": "AWS::Batch::JobDefinition.Timeout",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AttemptDurationSeconds": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Batch::JobDefinition",
                "CloudResourceProperty": "Type",
                "CloudReference": "AWS::Batch::JobDefinition.Type",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Batch::JobDefinition.ContainerProperties": {
            "Required": "No",
            "Type": "ContainerProperties",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Batch::JobDefinition",
            "CloudResourceProperty": "ContainerProperties",
            "CloudReference": "AWS::Batch::JobDefinition.ContainerProperties",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Command": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                },
                "Environment": {
                    "Required": "No",
                    "Type": "List",
                    "UpdateRequires": "No interruption"
                },
                "Image": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "InstanceType": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "JobRoleArn": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "LinuxParameters": {
                    "Required": "No",
                    "Type": "LinuxParameters",
                    "UpdateRequires": "No interruption"
                },
                "Memory": {},
                "MountPoints": {
                    "Required": "No",
                    "Type": "List",
                    "UpdateRequires": "No interruption"
                },
                "Privileged": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "ReadonlyRootFilesystem": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "ResourceRequirements": {
                    "Required": "No",
                    "Type": "List of [ResourceRequirement",
                    "UpdateRequires": "No interruption"
                },
                "Ulimits": {
                    "Required": "No",
                    "Type": "List of [Ulimit",
                    "UpdateRequires": "No interruption"
                },
                "User": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Vcpus": {
                    "Required": "Yes",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "Volumes": {
                    "Required": "No",
                    "Type": "List",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Batch::JobDefinition.JobDefinitionName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Batch::JobDefinition",
            "CloudResourceProperty": "JobDefinitionName",
            "CloudReference": "AWS::Batch::JobDefinition.JobDefinitionName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Batch::JobDefinition.NodeProperties": {
            "Required": "No",
            "Type": "NodeProperties",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Batch::JobDefinition",
            "CloudResourceProperty": "NodeProperties",
            "CloudReference": "AWS::Batch::JobDefinition.NodeProperties",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "MainNode": {
                    "Required": "Yes",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "NodeRangeProperties": {
                    "Required": "Yes",
                    "Type": "List of [NodeRangeProperty",
                    "UpdateRequires": "No interruption"
                },
                "NumNodes": {
                    "Required": "Yes",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Batch::JobDefinition.RetryStrategy": {
            "Required": "No",
            "Type": "RetryStrategy",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Batch::JobDefinition",
            "CloudResourceProperty": "RetryStrategy",
            "CloudReference": "AWS::Batch::JobDefinition.RetryStrategy",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Attempts": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Batch::JobDefinition.Timeout": {
            "Required": "No",
            "Type": "Timeout",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Batch::JobDefinition",
            "CloudResourceProperty": "Timeout",
            "CloudReference": "AWS::Batch::JobDefinition.Timeout",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AttemptDurationSeconds": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Batch::JobDefinition.Type": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Batch::JobDefinition",
            "CloudResourceProperty": "Type",
            "CloudReference": "AWS::Batch::JobDefinition.Type",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Batch::JobQueue": {
            "ComputeEnvironmentOrder": {
                "Required": "Yes",
                "Type": "List",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Batch::JobQueue",
                "CloudResourceProperty": "ComputeEnvironmentOrder",
                "CloudReference": "AWS::Batch::JobQueue.ComputeEnvironmentOrder",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "JobQueueName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Batch::JobQueue",
                "CloudResourceProperty": "JobQueueName",
                "CloudReference": "AWS::Batch::JobQueue.JobQueueName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Priority": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Batch::JobQueue",
                "CloudResourceProperty": "Priority",
                "CloudReference": "AWS::Batch::JobQueue.Priority",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "State": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "DISABLED",
                    "ENABLED"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Batch::JobQueue",
                "CloudResourceProperty": "State",
                "CloudReference": "AWS::Batch::JobQueue.State",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Batch::JobQueue.ComputeEnvironmentOrder": {
            "Required": "Yes",
            "Type": "List",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Batch::JobQueue",
            "CloudResourceProperty": "ComputeEnvironmentOrder",
            "CloudReference": "AWS::Batch::JobQueue.ComputeEnvironmentOrder",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Batch::JobQueue.JobQueueName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Batch::JobQueue",
            "CloudResourceProperty": "JobQueueName",
            "CloudReference": "AWS::Batch::JobQueue.JobQueueName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Batch::JobQueue.Priority": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Batch::JobQueue",
            "CloudResourceProperty": "Priority",
            "CloudReference": "AWS::Batch::JobQueue.Priority",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Batch::JobQueue.State": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "DISABLED",
                "ENABLED"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Batch::JobQueue",
            "CloudResourceProperty": "State",
            "CloudReference": "AWS::Batch::JobQueue.State",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Budgets::Budget": {
            "Budget": {
                "Required": "Yes",
                "Type": "BudgetData",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Budgets::Budget",
                "CloudResourceProperty": "Budget",
                "CloudReference": "AWS::Budgets::Budget.Budget",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "BudgetLimit": {
                        "Required": "No",
                        "Type": "Spend",
                        "UpdateRequires": "No interruption"
                    },
                    "BudgetName": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "BudgetType": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "COST",
                            "RI_COVERAGE",
                            "RI_UTILIZATION",
                            "USAGE"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "CostFilters": {
                        "Required": "No",
                        "Type": "Json",
                        "UpdateRequires": "No interruption"
                    },
                    "CostTypes": {
                        "Required": "No",
                        "Type": "CostTypes",
                        "UpdateRequires": "No interruption"
                    },
                    "TimePeriod": {
                        "Required": "No",
                        "Type": "TimePeriod",
                        "UpdateRequires": "No interruption"
                    },
                    "TimeUnit": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "ANNUALLY",
                            "DAILY",
                            "MONTHLY",
                            "QUARTERLY"
                        ],
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "NotificationsWithSubscribers": {
                "Required": "No",
                "Type": "List of [NotificationWithSubscribers",
                "Maximum": "5",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Budgets::Budget",
                "CloudResourceProperty": "NotificationsWithSubscribers",
                "CloudReference": "AWS::Budgets::Budget.NotificationsWithSubscribers",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Notification": {
                        "Required": "Yes",
                        "Type": "Notification",
                        "UpdateRequires": "No interruption"
                    },
                    "Subscribers": {
                        "Required": "Yes",
                        "Type": "List of [Subscriber",
                        "Maximum": "11",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::Budgets::Budget.Budget": {
            "Required": "Yes",
            "Type": "BudgetData",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Budgets::Budget",
            "CloudResourceProperty": "Budget",
            "CloudReference": "AWS::Budgets::Budget.Budget",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "BudgetLimit": {
                    "Required": "No",
                    "Type": "Spend",
                    "UpdateRequires": "No interruption"
                },
                "BudgetName": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "BudgetType": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "COST",
                        "RI_COVERAGE",
                        "RI_UTILIZATION",
                        "USAGE"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "CostFilters": {
                    "Required": "No",
                    "Type": "Json",
                    "UpdateRequires": "No interruption"
                },
                "CostTypes": {
                    "Required": "No",
                    "Type": "CostTypes",
                    "UpdateRequires": "No interruption"
                },
                "TimePeriod": {
                    "Required": "No",
                    "Type": "TimePeriod",
                    "UpdateRequires": "No interruption"
                },
                "TimeUnit": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "ANNUALLY",
                        "DAILY",
                        "MONTHLY",
                        "QUARTERLY"
                    ],
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Budgets::Budget.NotificationsWithSubscribers": {
            "Required": "No",
            "Type": "List of [NotificationWithSubscribers",
            "Maximum": "5",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Budgets::Budget",
            "CloudResourceProperty": "NotificationsWithSubscribers",
            "CloudReference": "AWS::Budgets::Budget.NotificationsWithSubscribers",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Notification": {
                    "Required": "Yes",
                    "Type": "Notification",
                    "UpdateRequires": "No interruption"
                },
                "Subscribers": {
                    "Required": "Yes",
                    "Type": "List of [Subscriber",
                    "Maximum": "11",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CertificateManager::Certificate": {
            "DomainName": {},
            "DomainValidationOptions": {
                "Required": "No",
                "Type": "List of [DomainValidationOption",
                "Maximum": "100",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CertificateManager::Certificate",
                "CloudResourceProperty": "DomainValidationOptions",
                "CloudReference": "AWS::CertificateManager::Certificate.DomainValidationOptions",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DomainName": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "253",
                        "Pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                        "UpdateRequires": "No interruption"
                    },
                    "ValidationDomain": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "253",
                        "Pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "SubjectAlternativeNames": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "100",
                "UpdateRequires": "Replacement"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "50",
                "UpdateRequires": "No interruption"
            },
            "ValidationMethod": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "DNS",
                    "EMAIL"
                ],
                "UpdateRequires": "Replacement"
            }
        },
        "AWS::CertificateManager::Certificate.DomainValidationOptions": {
            "Required": "No",
            "Type": "List of [DomainValidationOption",
            "Maximum": "100",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CertificateManager::Certificate",
            "CloudResourceProperty": "DomainValidationOptions",
            "CloudReference": "AWS::CertificateManager::Certificate.DomainValidationOptions",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DomainName": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "253",
                    "Pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                    "UpdateRequires": "No interruption"
                },
                "ValidationDomain": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "253",
                    "Pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Cloud9::EnvironmentEC2": {
            "AutomaticStopTimeMinutes": {
                "Required": "No",
                "Type": "Integer",
                "Maximum": "20160",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Cloud9::EnvironmentEC2",
                "CloudResourceProperty": "AutomaticStopTimeMinutes",
                "CloudReference": "AWS::Cloud9::EnvironmentEC2.AutomaticStopTimeMinutes",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "200",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Cloud9::EnvironmentEC2",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::Cloud9::EnvironmentEC2.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InstanceType": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "5",
                "Maximum": "20",
                "Pattern": "^[a-z][1-9][.][a-z0-9]+$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Cloud9::EnvironmentEC2",
                "CloudResourceProperty": "InstanceType",
                "CloudReference": "AWS::Cloud9::EnvironmentEC2.InstanceType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Cloud9::EnvironmentEC2",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Cloud9::EnvironmentEC2.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "OwnerArn": {
                "Required": "No",
                "Type": "String",
                "Pattern": "arn:aws:(iam|sts)::\\d+:(root|user|federated-user|assumed-role)\\/?\\S*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Cloud9::EnvironmentEC2",
                "CloudResourceProperty": "OwnerArn",
                "CloudReference": "AWS::Cloud9::EnvironmentEC2.OwnerArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Repositories": {
                "Required": "No",
                "Type": "List of [Repository",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Cloud9::EnvironmentEC2",
                "CloudResourceProperty": "Repositories",
                "CloudReference": "AWS::Cloud9::EnvironmentEC2.Repositories",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "PathComponent": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "RepositoryUrl": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "SubnetId": {
                "Required": "No",
                "Type": "String",
                "Minimum": "5",
                "Maximum": "30",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Cloud9::EnvironmentEC2",
                "CloudResourceProperty": "SubnetId",
                "CloudReference": "AWS::Cloud9::EnvironmentEC2.SubnetId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Cloud9::EnvironmentEC2.AutomaticStopTimeMinutes": {
            "Required": "No",
            "Type": "Integer",
            "Maximum": "20160",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Cloud9::EnvironmentEC2",
            "CloudResourceProperty": "AutomaticStopTimeMinutes",
            "CloudReference": "AWS::Cloud9::EnvironmentEC2.AutomaticStopTimeMinutes",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cloud9::EnvironmentEC2.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "200",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Cloud9::EnvironmentEC2",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::Cloud9::EnvironmentEC2.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cloud9::EnvironmentEC2.InstanceType": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "5",
            "Maximum": "20",
            "Pattern": "^[a-z][1-9][.][a-z0-9]+$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Cloud9::EnvironmentEC2",
            "CloudResourceProperty": "InstanceType",
            "CloudReference": "AWS::Cloud9::EnvironmentEC2.InstanceType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cloud9::EnvironmentEC2.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Cloud9::EnvironmentEC2",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Cloud9::EnvironmentEC2.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cloud9::EnvironmentEC2.OwnerArn": {
            "Required": "No",
            "Type": "String",
            "Pattern": "arn:aws:(iam|sts)::\\d+:(root|user|federated-user|assumed-role)\\/?\\S*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Cloud9::EnvironmentEC2",
            "CloudResourceProperty": "OwnerArn",
            "CloudReference": "AWS::Cloud9::EnvironmentEC2.OwnerArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cloud9::EnvironmentEC2.Repositories": {
            "Required": "No",
            "Type": "List of [Repository",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Cloud9::EnvironmentEC2",
            "CloudResourceProperty": "Repositories",
            "CloudReference": "AWS::Cloud9::EnvironmentEC2.Repositories",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "PathComponent": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "RepositoryUrl": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Cloud9::EnvironmentEC2.SubnetId": {
            "Required": "No",
            "Type": "String",
            "Minimum": "5",
            "Maximum": "30",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Cloud9::EnvironmentEC2",
            "CloudResourceProperty": "SubnetId",
            "CloudReference": "AWS::Cloud9::EnvironmentEC2.SubnetId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudFormation::Macro": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudFormation::Macro",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::CloudFormation::Macro.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "FunctionName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudFormation::Macro",
                "CloudResourceProperty": "FunctionName",
                "CloudReference": "AWS::CloudFormation::Macro.FunctionName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "LogGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudFormation::Macro",
                "CloudResourceProperty": "LogGroupName",
                "CloudReference": "AWS::CloudFormation::Macro.LogGroupName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "LogRoleARN": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudFormation::Macro",
                "CloudResourceProperty": "LogRoleARN",
                "CloudReference": "AWS::CloudFormation::Macro.LogRoleARN",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CloudFormation::Macro",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::CloudFormation::Macro.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::CloudFormation::Macro.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudFormation::Macro",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::CloudFormation::Macro.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudFormation::Macro.FunctionName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudFormation::Macro",
            "CloudResourceProperty": "FunctionName",
            "CloudReference": "AWS::CloudFormation::Macro.FunctionName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudFormation::Macro.LogGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudFormation::Macro",
            "CloudResourceProperty": "LogGroupName",
            "CloudReference": "AWS::CloudFormation::Macro.LogGroupName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudFormation::Macro.LogRoleARN": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudFormation::Macro",
            "CloudResourceProperty": "LogRoleARN",
            "CloudReference": "AWS::CloudFormation::Macro.LogRoleARN",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudFormation::Macro.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CloudFormation::Macro",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::CloudFormation::Macro.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudFront::CloudFrontOriginAccessIdentity": {
            "CloudFrontOriginAccessIdentityConfig": {
                "Required": "Yes",
                "Type": "CloudFrontOriginAccessIdentityConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
                "CloudResourceProperty": "CloudFrontOriginAccessIdentityConfig",
                "CloudReference": "AWS::CloudFront::CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Comment": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::CloudFront::CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig": {
            "Required": "Yes",
            "Type": "CloudFrontOriginAccessIdentityConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
            "CloudResourceProperty": "CloudFrontOriginAccessIdentityConfig",
            "CloudReference": "AWS::CloudFront::CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Comment": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CloudFront::Distribution": {
            "DistributionConfig": {
                "Required": "Yes",
                "Type": "DistributionConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudFront::Distribution",
                "CloudResourceProperty": "DistributionConfig",
                "CloudReference": "AWS::CloudFront::Distribution.DistributionConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Aliases": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    },
                    "CacheBehaviors": {
                        "Required": "No",
                        "Type": "List of [CacheBehavior",
                        "UpdateRequires": "No interruption"
                    },
                    "Comment": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "CustomErrorResponses": {},
                    "DefaultCacheBehavior": {
                        "Required": "No",
                        "Type": "DefaultCacheBehavior",
                        "UpdateRequires": "No interruption"
                    },
                    "DefaultRootObject": {},
                    "Enabled": {
                        "Required": "Yes",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "HttpVersion": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "http1.1",
                            "http2"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "IPV6Enabled": {
                        "AllowedValues": [
                            "True",
                            "False"
                        ]
                    },
                    "Logging": {},
                    "Origins": {
                        "Required": "No",
                        "Type": "List of [Origin",
                        "UpdateRequires": "No interruption"
                    },
                    "PriceClass": {},
                    "Restrictions": {
                        "Required": "No",
                        "Type": "Restrictions",
                        "UpdateRequires": "No interruption"
                    },
                    "ViewerCertificate": {
                        "Required": "No",
                        "Type": "ViewerCertificate",
                        "UpdateRequires": "No interruption"
                    },
                    "WebACLId": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudFront::Distribution",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::CloudFront::Distribution.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::CloudFront::Distribution.DistributionConfig": {
            "Required": "Yes",
            "Type": "DistributionConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudFront::Distribution",
            "CloudResourceProperty": "DistributionConfig",
            "CloudReference": "AWS::CloudFront::Distribution.DistributionConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Aliases": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                },
                "CacheBehaviors": {
                    "Required": "No",
                    "Type": "List of [CacheBehavior",
                    "UpdateRequires": "No interruption"
                },
                "Comment": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "CustomErrorResponses": {},
                "DefaultCacheBehavior": {
                    "Required": "No",
                    "Type": "DefaultCacheBehavior",
                    "UpdateRequires": "No interruption"
                },
                "DefaultRootObject": {},
                "Enabled": {
                    "Required": "Yes",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "HttpVersion": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "http1.1",
                        "http2"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "IPV6Enabled": {
                    "AllowedValues": [
                        "True",
                        "False"
                    ]
                },
                "Logging": {},
                "Origins": {
                    "Required": "No",
                    "Type": "List of [Origin",
                    "UpdateRequires": "No interruption"
                },
                "PriceClass": {},
                "Restrictions": {
                    "Required": "No",
                    "Type": "Restrictions",
                    "UpdateRequires": "No interruption"
                },
                "ViewerCertificate": {
                    "Required": "No",
                    "Type": "ViewerCertificate",
                    "UpdateRequires": "No interruption"
                },
                "WebACLId": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CloudFront::Distribution.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudFront::Distribution",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::CloudFront::Distribution.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudFront::StreamingDistribution": {
            "StreamingDistributionConfig": {
                "Required": "Yes",
                "Type": "StreamingDistributionConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudFront::StreamingDistribution",
                "CloudResourceProperty": "StreamingDistributionConfig",
                "CloudReference": "AWS::CloudFront::StreamingDistribution.StreamingDistributionConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Aliases": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    },
                    "Comment": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Enabled": {
                        "Required": "Yes",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "Logging": {
                        "Required": "No",
                        "Type": "Logging",
                        "UpdateRequires": "No interruption"
                    },
                    "PriceClass": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "PriceClass_100",
                            "PriceClass_200",
                            "PriceClass_All"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "S3Origin": {
                        "Required": "Yes",
                        "Type": "S3Origin",
                        "UpdateRequires": "No interruption"
                    },
                    "TrustedSigners": {}
                }
            },
            "Tags": {
                "Required": "Yes",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudFront::StreamingDistribution",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::CloudFront::StreamingDistribution.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::CloudFront::StreamingDistribution.StreamingDistributionConfig": {
            "Required": "Yes",
            "Type": "StreamingDistributionConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudFront::StreamingDistribution",
            "CloudResourceProperty": "StreamingDistributionConfig",
            "CloudReference": "AWS::CloudFront::StreamingDistribution.StreamingDistributionConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Aliases": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                },
                "Comment": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Enabled": {
                    "Required": "Yes",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "Logging": {
                    "Required": "No",
                    "Type": "Logging",
                    "UpdateRequires": "No interruption"
                },
                "PriceClass": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "PriceClass_100",
                        "PriceClass_200",
                        "PriceClass_All"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "S3Origin": {
                    "Required": "Yes",
                    "Type": "S3Origin",
                    "UpdateRequires": "No interruption"
                },
                "TrustedSigners": {}
            }
        },
        "AWS::CloudFront::StreamingDistribution.Tags": {
            "Required": "Yes",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudFront::StreamingDistribution",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::CloudFront::StreamingDistribution.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudTrail::Trail": {
            "CloudWatchLogsLogGroupArn": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudTrail::Trail",
                "CloudResourceProperty": "CloudWatchLogsLogGroupArn",
                "CloudReference": "AWS::CloudTrail::Trail.CloudWatchLogsLogGroupArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CloudWatchLogsRoleArn": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudTrail::Trail",
                "CloudResourceProperty": "CloudWatchLogsRoleArn",
                "CloudReference": "AWS::CloudTrail::Trail.CloudWatchLogsRoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EnableLogFileValidation": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudTrail::Trail",
                "CloudResourceProperty": "EnableLogFileValidation",
                "CloudReference": "AWS::CloudTrail::Trail.EnableLogFileValidation",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EventSelectors": {
                "Required": "No",
                "Type": "List of [EventSelector",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudTrail::Trail",
                "CloudResourceProperty": "EventSelectors",
                "CloudReference": "AWS::CloudTrail::Trail.EventSelectors",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DataResources": {},
                    "IncludeManagementEvents": {
                        "AllowedValues": [
                            "True",
                            "False"
                        ]
                    },
                    "ReadWriteType": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "All",
                            "ReadOnly",
                            "WriteOnly"
                        ],
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "IncludeGlobalServiceEvents": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudTrail::Trail",
                "CloudResourceProperty": "IncludeGlobalServiceEvents",
                "CloudReference": "AWS::CloudTrail::Trail.IncludeGlobalServiceEvents",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "IsLogging": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudTrail::Trail",
                "CloudResourceProperty": "IsLogging",
                "CloudReference": "AWS::CloudTrail::Trail.IsLogging",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "IsMultiRegionTrail": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudTrail::Trail",
                "CloudResourceProperty": "IsMultiRegionTrail",
                "CloudReference": "AWS::CloudTrail::Trail.IsMultiRegionTrail",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "KMSKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudTrail::Trail",
                "CloudResourceProperty": "KMSKeyId",
                "CloudReference": "AWS::CloudTrail::Trail.KMSKeyId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "S3BucketName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudTrail::Trail",
                "CloudResourceProperty": "S3BucketName",
                "CloudReference": "AWS::CloudTrail::Trail.S3BucketName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "S3KeyPrefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudTrail::Trail",
                "CloudResourceProperty": "S3KeyPrefix",
                "CloudReference": "AWS::CloudTrail::Trail.S3KeyPrefix",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SnsTopicName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudTrail::Trail",
                "CloudResourceProperty": "SnsTopicName",
                "CloudReference": "AWS::CloudTrail::Trail.SnsTopicName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudTrail::Trail",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::CloudTrail::Trail.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "TrailName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CloudTrail::Trail",
                "CloudResourceProperty": "TrailName",
                "CloudReference": "AWS::CloudTrail::Trail.TrailName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::CloudTrail::Trail.CloudWatchLogsLogGroupArn": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudTrail::Trail",
            "CloudResourceProperty": "CloudWatchLogsLogGroupArn",
            "CloudReference": "AWS::CloudTrail::Trail.CloudWatchLogsLogGroupArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudTrail::Trail.CloudWatchLogsRoleArn": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudTrail::Trail",
            "CloudResourceProperty": "CloudWatchLogsRoleArn",
            "CloudReference": "AWS::CloudTrail::Trail.CloudWatchLogsRoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudTrail::Trail.EnableLogFileValidation": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudTrail::Trail",
            "CloudResourceProperty": "EnableLogFileValidation",
            "CloudReference": "AWS::CloudTrail::Trail.EnableLogFileValidation",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudTrail::Trail.EventSelectors": {
            "Required": "No",
            "Type": "List of [EventSelector",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudTrail::Trail",
            "CloudResourceProperty": "EventSelectors",
            "CloudReference": "AWS::CloudTrail::Trail.EventSelectors",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DataResources": {},
                "IncludeManagementEvents": {
                    "AllowedValues": [
                        "True",
                        "False"
                    ]
                },
                "ReadWriteType": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "All",
                        "ReadOnly",
                        "WriteOnly"
                    ],
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CloudTrail::Trail.IncludeGlobalServiceEvents": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudTrail::Trail",
            "CloudResourceProperty": "IncludeGlobalServiceEvents",
            "CloudReference": "AWS::CloudTrail::Trail.IncludeGlobalServiceEvents",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudTrail::Trail.IsLogging": {
            "Required": "Yes",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudTrail::Trail",
            "CloudResourceProperty": "IsLogging",
            "CloudReference": "AWS::CloudTrail::Trail.IsLogging",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudTrail::Trail.IsMultiRegionTrail": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudTrail::Trail",
            "CloudResourceProperty": "IsMultiRegionTrail",
            "CloudReference": "AWS::CloudTrail::Trail.IsMultiRegionTrail",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudTrail::Trail.KMSKeyId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudTrail::Trail",
            "CloudResourceProperty": "KMSKeyId",
            "CloudReference": "AWS::CloudTrail::Trail.KMSKeyId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudTrail::Trail.S3BucketName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudTrail::Trail",
            "CloudResourceProperty": "S3BucketName",
            "CloudReference": "AWS::CloudTrail::Trail.S3BucketName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudTrail::Trail.S3KeyPrefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudTrail::Trail",
            "CloudResourceProperty": "S3KeyPrefix",
            "CloudReference": "AWS::CloudTrail::Trail.S3KeyPrefix",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudTrail::Trail.SnsTopicName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudTrail::Trail",
            "CloudResourceProperty": "SnsTopicName",
            "CloudReference": "AWS::CloudTrail::Trail.SnsTopicName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudTrail::Trail.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudTrail::Trail",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::CloudTrail::Trail.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudTrail::Trail.TrailName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CloudTrail::Trail",
            "CloudResourceProperty": "TrailName",
            "CloudReference": "AWS::CloudTrail::Trail.TrailName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudWatch::AnomalyDetector": {
            "Configuration": {
                "Required": "No",
                "Type": "Configuration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudWatch::AnomalyDetector",
                "CloudResourceProperty": "Configuration",
                "CloudReference": "AWS::CloudWatch::AnomalyDetector.Configuration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ExcludedTimeRanges": {
                        "Required": "No",
                        "Type": "List of [Range",
                        "UpdateRequires": "No interruption"
                    },
                    "MetricTimeZone": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Dimensions": {
                "Required": "No",
                "Type": "List of [Dimension",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CloudWatch::AnomalyDetector",
                "CloudResourceProperty": "Dimensions",
                "CloudReference": "AWS::CloudWatch::AnomalyDetector.Dimensions",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Name": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "255",
                        "UpdateRequires": "Replacement"
                    },
                    "Value": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "255",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "MetricName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CloudWatch::AnomalyDetector",
                "CloudResourceProperty": "MetricName",
                "CloudReference": "AWS::CloudWatch::AnomalyDetector.MetricName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Namespace": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CloudWatch::AnomalyDetector",
                "CloudResourceProperty": "Namespace",
                "CloudReference": "AWS::CloudWatch::AnomalyDetector.Namespace",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Stat": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CloudWatch::AnomalyDetector",
                "CloudResourceProperty": "Stat",
                "CloudReference": "AWS::CloudWatch::AnomalyDetector.Stat",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::CloudWatch::AnomalyDetector.Configuration": {
            "Required": "No",
            "Type": "Configuration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudWatch::AnomalyDetector",
            "CloudResourceProperty": "Configuration",
            "CloudReference": "AWS::CloudWatch::AnomalyDetector.Configuration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ExcludedTimeRanges": {
                    "Required": "No",
                    "Type": "List of [Range",
                    "UpdateRequires": "No interruption"
                },
                "MetricTimeZone": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CloudWatch::AnomalyDetector.Dimensions": {
            "Required": "No",
            "Type": "List of [Dimension",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CloudWatch::AnomalyDetector",
            "CloudResourceProperty": "Dimensions",
            "CloudReference": "AWS::CloudWatch::AnomalyDetector.Dimensions",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Name": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "255",
                    "UpdateRequires": "Replacement"
                },
                "Value": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "255",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::CloudWatch::AnomalyDetector.MetricName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CloudWatch::AnomalyDetector",
            "CloudResourceProperty": "MetricName",
            "CloudReference": "AWS::CloudWatch::AnomalyDetector.MetricName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudWatch::AnomalyDetector.Namespace": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CloudWatch::AnomalyDetector",
            "CloudResourceProperty": "Namespace",
            "CloudReference": "AWS::CloudWatch::AnomalyDetector.Namespace",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudWatch::AnomalyDetector.Stat": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CloudWatch::AnomalyDetector",
            "CloudResourceProperty": "Stat",
            "CloudReference": "AWS::CloudWatch::AnomalyDetector.Stat",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudWatch::Dashboard": {
            "DashboardBody": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CloudWatch::Dashboard",
                "CloudResourceProperty": "DashboardBody",
                "CloudReference": "AWS::CloudWatch::Dashboard.DashboardBody",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DashboardName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CloudWatch::Dashboard",
                "CloudResourceProperty": "DashboardName",
                "CloudReference": "AWS::CloudWatch::Dashboard.DashboardName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::CloudWatch::Dashboard.DashboardBody": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CloudWatch::Dashboard",
            "CloudResourceProperty": "DashboardBody",
            "CloudReference": "AWS::CloudWatch::Dashboard.DashboardBody",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CloudWatch::Dashboard.DashboardName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CloudWatch::Dashboard",
            "CloudResourceProperty": "DashboardName",
            "CloudReference": "AWS::CloudWatch::Dashboard.DashboardName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeBuild::Project": {
            "Artifacts": {
                "Required": "Yes",
                "Type": "Artifacts",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeBuild::Project",
                "CloudResourceProperty": "Artifacts",
                "CloudReference": "AWS::CodeBuild::Project.Artifacts",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ArtifactIdentifier": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "EncryptionDisabled": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "Location": {
                        "Required": "Conditional",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Name": {
                        "Required": "Conditional",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "NamespaceType": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "BUILD_ID",
                            "NONE"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "OverrideArtifactName": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "Packaging": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "NONE",
                            "ZIP"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "Path": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Type": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "CODEPIPELINE",
                            "NO_ARTIFACTS",
                            "S3"
                        ],
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "BadgeEnabled": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Cache": {
                "Required": "No",
                "Type": "ProjectCache",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeBuild::Project",
                "CloudResourceProperty": "Cache",
                "CloudReference": "AWS::CodeBuild::Project.Cache",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Location": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Modes": {},
                    "Type": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "LOCAL",
                            "NO_CACHE",
                            "S3"
                        ],
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "255",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeBuild::Project",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::CodeBuild::Project.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EncryptionKey": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeBuild::Project",
                "CloudResourceProperty": "EncryptionKey",
                "CloudReference": "AWS::CodeBuild::Project.EncryptionKey",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Environment": {
                "Required": "Yes",
                "Type": "Environment",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeBuild::Project",
                "CloudResourceProperty": "Environment",
                "CloudReference": "AWS::CodeBuild::Project.Environment",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Certificate": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "ComputeType": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "EnvironmentVariables": {
                        "Required": "No",
                        "Type": "List of [EnvironmentVariable",
                        "UpdateRequires": "No interruption"
                    },
                    "Image": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "UpdateRequires": "No interruption"
                    },
                    "ImagePullCredentialsType": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "CODEBUILD",
                            "SERVICE_ROLE"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "PrivilegedMode": {
                        "AllowedValues": [
                            "True",
                            "False"
                        ]
                    },
                    "RegistryCredential": {
                        "Required": "No",
                        "Type": "RegistryCredential",
                        "UpdateRequires": "No interruption"
                    },
                    "Type": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "LINUX_CONTAINER",
                            "WINDOWS_CONTAINER"
                        ],
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "LogsConfig": {
                "Required": "No",
                "Type": "LogsConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeBuild::Project",
                "CloudResourceProperty": "LogsConfig",
                "CloudReference": "AWS::CodeBuild::Project.LogsConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "CloudWatchLogs": {
                        "Required": "No",
                        "Type": "CloudWatchLogsConfig",
                        "UpdateRequires": "No interruption"
                    },
                    "S3Logs": {
                        "Required": "No",
                        "Type": "S3LogsConfig",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "2",
                "Maximum": "255",
                "Pattern": "[A-Za-z0-9][A-Za-z0-9\\-_]{1,254}",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CodeBuild::Project",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::CodeBuild::Project.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "QueuedTimeoutInMinutes": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "5",
                "Maximum": "480",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeBuild::Project",
                "CloudResourceProperty": "QueuedTimeoutInMinutes",
                "CloudReference": "AWS::CodeBuild::Project.QueuedTimeoutInMinutes",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SecondaryArtifacts": {
                "Required": "No",
                "Type": "List of [Artifacts",
                "Maximum": "12",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeBuild::Project",
                "CloudResourceProperty": "SecondaryArtifacts",
                "CloudReference": "AWS::CodeBuild::Project.SecondaryArtifacts",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ArtifactIdentifier": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "EncryptionDisabled": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "Location": {
                        "Required": "Conditional",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Name": {
                        "Required": "Conditional",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "NamespaceType": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "BUILD_ID",
                            "NONE"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "OverrideArtifactName": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "Packaging": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "NONE",
                            "ZIP"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "Path": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Type": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "CODEPIPELINE",
                            "NO_ARTIFACTS",
                            "S3"
                        ],
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "SecondarySourceVersions": {
                "Required": "No",
                "Type": "List of [ProjectSourceVersion",
                "Maximum": "12",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeBuild::Project",
                "CloudResourceProperty": "SecondarySourceVersions",
                "CloudReference": "AWS::CodeBuild::Project.SecondarySourceVersions",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "SourceIdentifier": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "SourceVersion": {}
                }
            },
            "SecondarySources": {
                "Required": "No",
                "Type": "List of [Source",
                "Maximum": "12",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeBuild::Project",
                "CloudResourceProperty": "SecondarySources",
                "CloudReference": "AWS::CodeBuild::Project.SecondarySources",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Auth": {
                        "Required": "No",
                        "Type": "SourceAuth",
                        "UpdateRequires": "No interruption"
                    },
                    "BuildSpec": {},
                    "GitCloneDepth": {
                        "Required": "No",
                        "Type": "Integer",
                        "Minimum": "0",
                        "UpdateRequires": "No interruption"
                    },
                    "GitSubmodulesConfig": {
                        "Required": "No",
                        "Type": "GitSubmodulesConfig",
                        "UpdateRequires": "No interruption"
                    },
                    "InsecureSsl": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "Location": {},
                    "ReportBuildStatus": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "SourceIdentifier": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Type": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "BITBUCKET",
                            "CODECOMMIT",
                            "CODEPIPELINE",
                            "GITHUB",
                            "GITHUB_ENTERPRISE",
                            "NO_SOURCE",
                            "S3"
                        ],
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "ServiceRole": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeBuild::Project",
                "CloudResourceProperty": "ServiceRole",
                "CloudReference": "AWS::CodeBuild::Project.ServiceRole",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Source": {
                "Required": "Yes",
                "Type": "Source",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeBuild::Project",
                "CloudResourceProperty": "Source",
                "CloudReference": "AWS::CodeBuild::Project.Source",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Auth": {
                        "Required": "No",
                        "Type": "SourceAuth",
                        "UpdateRequires": "No interruption"
                    },
                    "BuildSpec": {},
                    "GitCloneDepth": {
                        "Required": "No",
                        "Type": "Integer",
                        "Minimum": "0",
                        "UpdateRequires": "No interruption"
                    },
                    "GitSubmodulesConfig": {
                        "Required": "No",
                        "Type": "GitSubmodulesConfig",
                        "UpdateRequires": "No interruption"
                    },
                    "InsecureSsl": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "Location": {},
                    "ReportBuildStatus": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "SourceIdentifier": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Type": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "BITBUCKET",
                            "CODECOMMIT",
                            "CODEPIPELINE",
                            "GITHUB",
                            "GITHUB_ENTERPRISE",
                            "NO_SOURCE",
                            "S3"
                        ],
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "SourceVersion": {},
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "50",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeBuild::Project",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::CodeBuild::Project.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "TimeoutInMinutes": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "5",
                "Maximum": "480",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeBuild::Project",
                "CloudResourceProperty": "TimeoutInMinutes",
                "CloudReference": "AWS::CodeBuild::Project.TimeoutInMinutes",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Triggers": {
                "Required": "No",
                "Type": "ProjectTriggers",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeBuild::Project",
                "CloudResourceProperty": "Triggers",
                "CloudReference": "AWS::CodeBuild::Project.Triggers",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "FilterGroups": {
                        "Required": "No",
                        "Type": "List of [FilterGroup",
                        "UpdateRequires": "No interruption"
                    },
                    "Webhook": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "VpcConfig": {}
        },
        "AWS::CodeBuild::Project.Artifacts": {
            "Required": "Yes",
            "Type": "Artifacts",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeBuild::Project",
            "CloudResourceProperty": "Artifacts",
            "CloudReference": "AWS::CodeBuild::Project.Artifacts",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ArtifactIdentifier": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "EncryptionDisabled": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "Location": {
                    "Required": "Conditional",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Name": {
                    "Required": "Conditional",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "NamespaceType": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "BUILD_ID",
                        "NONE"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "OverrideArtifactName": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "Packaging": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "NONE",
                        "ZIP"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "Path": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Type": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "CODEPIPELINE",
                        "NO_ARTIFACTS",
                        "S3"
                    ],
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CodeBuild::Project.Cache": {
            "Required": "No",
            "Type": "ProjectCache",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeBuild::Project",
            "CloudResourceProperty": "Cache",
            "CloudReference": "AWS::CodeBuild::Project.Cache",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Location": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Modes": {},
                "Type": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "LOCAL",
                        "NO_CACHE",
                        "S3"
                    ],
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CodeBuild::Project.Description": {
            "Required": "No",
            "Type": "String",
            "Minimum": "0",
            "Maximum": "255",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeBuild::Project",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::CodeBuild::Project.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeBuild::Project.EncryptionKey": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeBuild::Project",
            "CloudResourceProperty": "EncryptionKey",
            "CloudReference": "AWS::CodeBuild::Project.EncryptionKey",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeBuild::Project.Environment": {
            "Required": "Yes",
            "Type": "Environment",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeBuild::Project",
            "CloudResourceProperty": "Environment",
            "CloudReference": "AWS::CodeBuild::Project.Environment",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Certificate": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "ComputeType": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "EnvironmentVariables": {
                    "Required": "No",
                    "Type": "List of [EnvironmentVariable",
                    "UpdateRequires": "No interruption"
                },
                "Image": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "UpdateRequires": "No interruption"
                },
                "ImagePullCredentialsType": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "CODEBUILD",
                        "SERVICE_ROLE"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "PrivilegedMode": {
                    "AllowedValues": [
                        "True",
                        "False"
                    ]
                },
                "RegistryCredential": {
                    "Required": "No",
                    "Type": "RegistryCredential",
                    "UpdateRequires": "No interruption"
                },
                "Type": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "LINUX_CONTAINER",
                        "WINDOWS_CONTAINER"
                    ],
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CodeBuild::Project.LogsConfig": {
            "Required": "No",
            "Type": "LogsConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeBuild::Project",
            "CloudResourceProperty": "LogsConfig",
            "CloudReference": "AWS::CodeBuild::Project.LogsConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "CloudWatchLogs": {
                    "Required": "No",
                    "Type": "CloudWatchLogsConfig",
                    "UpdateRequires": "No interruption"
                },
                "S3Logs": {
                    "Required": "No",
                    "Type": "S3LogsConfig",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CodeBuild::Project.Name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "2",
            "Maximum": "255",
            "Pattern": "[A-Za-z0-9][A-Za-z0-9\\-_]{1,254}",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CodeBuild::Project",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::CodeBuild::Project.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeBuild::Project.QueuedTimeoutInMinutes": {
            "Required": "No",
            "Type": "Integer",
            "Minimum": "5",
            "Maximum": "480",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeBuild::Project",
            "CloudResourceProperty": "QueuedTimeoutInMinutes",
            "CloudReference": "AWS::CodeBuild::Project.QueuedTimeoutInMinutes",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeBuild::Project.SecondaryArtifacts": {
            "Required": "No",
            "Type": "List of [Artifacts",
            "Maximum": "12",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeBuild::Project",
            "CloudResourceProperty": "SecondaryArtifacts",
            "CloudReference": "AWS::CodeBuild::Project.SecondaryArtifacts",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ArtifactIdentifier": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "EncryptionDisabled": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "Location": {
                    "Required": "Conditional",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Name": {
                    "Required": "Conditional",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "NamespaceType": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "BUILD_ID",
                        "NONE"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "OverrideArtifactName": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "Packaging": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "NONE",
                        "ZIP"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "Path": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Type": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "CODEPIPELINE",
                        "NO_ARTIFACTS",
                        "S3"
                    ],
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CodeBuild::Project.SecondarySourceVersions": {
            "Required": "No",
            "Type": "List of [ProjectSourceVersion",
            "Maximum": "12",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeBuild::Project",
            "CloudResourceProperty": "SecondarySourceVersions",
            "CloudReference": "AWS::CodeBuild::Project.SecondarySourceVersions",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "SourceIdentifier": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "SourceVersion": {}
            }
        },
        "AWS::CodeBuild::Project.SecondarySources": {
            "Required": "No",
            "Type": "List of [Source",
            "Maximum": "12",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeBuild::Project",
            "CloudResourceProperty": "SecondarySources",
            "CloudReference": "AWS::CodeBuild::Project.SecondarySources",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Auth": {
                    "Required": "No",
                    "Type": "SourceAuth",
                    "UpdateRequires": "No interruption"
                },
                "BuildSpec": {},
                "GitCloneDepth": {
                    "Required": "No",
                    "Type": "Integer",
                    "Minimum": "0",
                    "UpdateRequires": "No interruption"
                },
                "GitSubmodulesConfig": {
                    "Required": "No",
                    "Type": "GitSubmodulesConfig",
                    "UpdateRequires": "No interruption"
                },
                "InsecureSsl": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "Location": {},
                "ReportBuildStatus": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "SourceIdentifier": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Type": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "BITBUCKET",
                        "CODECOMMIT",
                        "CODEPIPELINE",
                        "GITHUB",
                        "GITHUB_ENTERPRISE",
                        "NO_SOURCE",
                        "S3"
                    ],
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CodeBuild::Project.ServiceRole": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeBuild::Project",
            "CloudResourceProperty": "ServiceRole",
            "CloudReference": "AWS::CodeBuild::Project.ServiceRole",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeBuild::Project.Source": {
            "Required": "Yes",
            "Type": "Source",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeBuild::Project",
            "CloudResourceProperty": "Source",
            "CloudReference": "AWS::CodeBuild::Project.Source",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Auth": {
                    "Required": "No",
                    "Type": "SourceAuth",
                    "UpdateRequires": "No interruption"
                },
                "BuildSpec": {},
                "GitCloneDepth": {
                    "Required": "No",
                    "Type": "Integer",
                    "Minimum": "0",
                    "UpdateRequires": "No interruption"
                },
                "GitSubmodulesConfig": {
                    "Required": "No",
                    "Type": "GitSubmodulesConfig",
                    "UpdateRequires": "No interruption"
                },
                "InsecureSsl": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "Location": {},
                "ReportBuildStatus": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "SourceIdentifier": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Type": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "BITBUCKET",
                        "CODECOMMIT",
                        "CODEPIPELINE",
                        "GITHUB",
                        "GITHUB_ENTERPRISE",
                        "NO_SOURCE",
                        "S3"
                    ],
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CodeBuild::Project.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "Maximum": "50",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeBuild::Project",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::CodeBuild::Project.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeBuild::Project.TimeoutInMinutes": {
            "Required": "No",
            "Type": "Integer",
            "Minimum": "5",
            "Maximum": "480",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeBuild::Project",
            "CloudResourceProperty": "TimeoutInMinutes",
            "CloudReference": "AWS::CodeBuild::Project.TimeoutInMinutes",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeBuild::Project.Triggers": {
            "Required": "No",
            "Type": "ProjectTriggers",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeBuild::Project",
            "CloudResourceProperty": "Triggers",
            "CloudReference": "AWS::CodeBuild::Project.Triggers",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "FilterGroups": {
                    "Required": "No",
                    "Type": "List of [FilterGroup",
                    "UpdateRequires": "No interruption"
                },
                "Webhook": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CodeBuild::SourceCredential": {
            "AuthType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "BASIC_AUTH",
                    "OAUTH",
                    "PERSONAL_ACCESS_TOKEN"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeBuild::SourceCredential",
                "CloudResourceProperty": "AuthType",
                "CloudReference": "AWS::CodeBuild::SourceCredential.AuthType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ServerType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "BITBUCKET",
                    "GITHUB",
                    "GITHUB_ENTERPRISE"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CodeBuild::SourceCredential",
                "CloudResourceProperty": "ServerType",
                "CloudReference": "AWS::CodeBuild::SourceCredential.ServerType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Token": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeBuild::SourceCredential",
                "CloudResourceProperty": "Token",
                "CloudReference": "AWS::CodeBuild::SourceCredential.Token",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Username": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeBuild::SourceCredential",
                "CloudResourceProperty": "Username",
                "CloudReference": "AWS::CodeBuild::SourceCredential.Username",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::CodeBuild::SourceCredential.AuthType": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "BASIC_AUTH",
                "OAUTH",
                "PERSONAL_ACCESS_TOKEN"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeBuild::SourceCredential",
            "CloudResourceProperty": "AuthType",
            "CloudReference": "AWS::CodeBuild::SourceCredential.AuthType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeBuild::SourceCredential.ServerType": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "BITBUCKET",
                "GITHUB",
                "GITHUB_ENTERPRISE"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CodeBuild::SourceCredential",
            "CloudResourceProperty": "ServerType",
            "CloudReference": "AWS::CodeBuild::SourceCredential.ServerType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeBuild::SourceCredential.Token": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeBuild::SourceCredential",
            "CloudResourceProperty": "Token",
            "CloudReference": "AWS::CodeBuild::SourceCredential.Token",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeBuild::SourceCredential.Username": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeBuild::SourceCredential",
            "CloudResourceProperty": "Username",
            "CloudReference": "AWS::CodeBuild::SourceCredential.Username",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeCommit::Repository": {
            "Code": {
                "Required": "No",
                "Type": "Code",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeCommit::Repository",
                "CloudResourceProperty": "Code",
                "CloudReference": "AWS::CodeCommit::Repository.Code",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "S3": {
                        "Required": "Yes",
                        "Type": "S3",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "RepositoryDescription": {
                "Required": "No",
                "Type": "String",
                "Maximum": "1000",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeCommit::Repository",
                "CloudResourceProperty": "RepositoryDescription",
                "CloudReference": "AWS::CodeCommit::Repository.RepositoryDescription",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RepositoryName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "[\\w\\.-]+",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeCommit::Repository",
                "CloudResourceProperty": "RepositoryName",
                "CloudReference": "AWS::CodeCommit::Repository.RepositoryName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeCommit::Repository",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::CodeCommit::Repository.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "Triggers": {
                "Required": "No",
                "Type": "List of [RepositoryTrigger",
                "UpdateRequires": "Some interruptions",
                "CloudResourceType": "AWS::CodeCommit::Repository",
                "CloudResourceProperty": "Triggers",
                "CloudReference": "AWS::CodeCommit::Repository.Triggers",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Branches": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    },
                    "CustomData": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "DestinationArn": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Events": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    },
                    "Name": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::CodeCommit::Repository.Code": {
            "Required": "No",
            "Type": "Code",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeCommit::Repository",
            "CloudResourceProperty": "Code",
            "CloudReference": "AWS::CodeCommit::Repository.Code",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "S3": {
                    "Required": "Yes",
                    "Type": "S3",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CodeCommit::Repository.RepositoryDescription": {
            "Required": "No",
            "Type": "String",
            "Maximum": "1000",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeCommit::Repository",
            "CloudResourceProperty": "RepositoryDescription",
            "CloudReference": "AWS::CodeCommit::Repository.RepositoryDescription",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeCommit::Repository.RepositoryName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "Pattern": "[\\w\\.-]+",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeCommit::Repository",
            "CloudResourceProperty": "RepositoryName",
            "CloudReference": "AWS::CodeCommit::Repository.RepositoryName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeCommit::Repository.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeCommit::Repository",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::CodeCommit::Repository.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeCommit::Repository.Triggers": {
            "Required": "No",
            "Type": "List of [RepositoryTrigger",
            "UpdateRequires": "Some interruptions",
            "CloudResourceType": "AWS::CodeCommit::Repository",
            "CloudResourceProperty": "Triggers",
            "CloudReference": "AWS::CodeCommit::Repository.Triggers",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Branches": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                },
                "CustomData": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "DestinationArn": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Events": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                },
                "Name": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CodeDeploy::Application": {
            "ApplicationName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CodeDeploy::Application",
                "CloudResourceProperty": "ApplicationName",
                "CloudReference": "AWS::CodeDeploy::Application.ApplicationName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ComputePlatform": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "ECS",
                    "Lambda",
                    "Server"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CodeDeploy::Application",
                "CloudResourceProperty": "ComputePlatform",
                "CloudReference": "AWS::CodeDeploy::Application.ComputePlatform",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::CodeDeploy::Application.ApplicationName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CodeDeploy::Application",
            "CloudResourceProperty": "ApplicationName",
            "CloudReference": "AWS::CodeDeploy::Application.ApplicationName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeDeploy::Application.ComputePlatform": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "ECS",
                "Lambda",
                "Server"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CodeDeploy::Application",
            "CloudResourceProperty": "ComputePlatform",
            "CloudReference": "AWS::CodeDeploy::Application.ComputePlatform",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeDeploy::DeploymentConfig": {
            "DeploymentConfigName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CodeDeploy::DeploymentConfig",
                "CloudResourceProperty": "DeploymentConfigName",
                "CloudReference": "AWS::CodeDeploy::DeploymentConfig.DeploymentConfigName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MinimumHealthyHosts": {
                "Required": "No",
                "Type": "MinimumHealthyHosts",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CodeDeploy::DeploymentConfig",
                "CloudResourceProperty": "MinimumHealthyHosts",
                "CloudReference": "AWS::CodeDeploy::DeploymentConfig.MinimumHealthyHosts",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Type": {},
                    "Value": {
                        "Required": "Yes",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::CodeDeploy::DeploymentConfig.DeploymentConfigName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CodeDeploy::DeploymentConfig",
            "CloudResourceProperty": "DeploymentConfigName",
            "CloudReference": "AWS::CodeDeploy::DeploymentConfig.DeploymentConfigName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeDeploy::DeploymentConfig.MinimumHealthyHosts": {
            "Required": "No",
            "Type": "MinimumHealthyHosts",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CodeDeploy::DeploymentConfig",
            "CloudResourceProperty": "MinimumHealthyHosts",
            "CloudReference": "AWS::CodeDeploy::DeploymentConfig.MinimumHealthyHosts",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Type": {},
                "Value": {
                    "Required": "Yes",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CodeDeploy::DeploymentGroup": {
            "AlarmConfiguration": {
                "Required": "No",
                "Type": "AlarmConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeDeploy::DeploymentGroup",
                "CloudResourceProperty": "AlarmConfiguration",
                "CloudReference": "AWS::CodeDeploy::DeploymentGroup.AlarmConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Alarms": {
                        "Required": "No",
                        "Type": "List of [Alarm",
                        "UpdateRequires": "No interruption"
                    },
                    "Enabled": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "IgnorePollAlarmFailure": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "ApplicationName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CodeDeploy::DeploymentGroup",
                "CloudResourceProperty": "ApplicationName",
                "CloudReference": "AWS::CodeDeploy::DeploymentGroup.ApplicationName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AutoRollbackConfiguration": {
                "Required": "No",
                "Type": "AutoRollbackConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodeDeploy::DeploymentGroup",
                "CloudResourceProperty": "AutoRollbackConfiguration",
                "CloudReference": "AWS::CodeDeploy::DeploymentGroup.AutoRollbackConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Enabled": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "Events": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "AutoScalingGroups": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Deployment": {
                "Required": "No",
                "Type": "Deployment",
                "UpdateRequires": "No interruption"
            },
            "DeploymentConfigName": {},
            "DeploymentGroupName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "Replacement"
            },
            "DeploymentStyle": {
                "Required": "No",
                "Type": "DeploymentStyle",
                "UpdateRequires": "No interruption"
            },
            "Ec2TagFilters": {
                "Required": "No",
                "Type": "List of [EC2TagFilter",
                "UpdateRequires": "No interruption"
            },
            "Ec2TagSet": {
                "Required": "No",
                "Type": "EC2TagSet",
                "UpdateRequires": "No interruption"
            },
            "LoadBalancerInfo": {},
            "OnPremisesInstanceTagFilters": {},
            "OnPremisesTagSet": {
                "Required": "No",
                "Type": "OnPremisesTagSet",
                "UpdateRequires": "No interruption"
            },
            "ServiceRoleArn": {},
            "TriggerConfigurations": {
                "Required": "No",
                "Type": "List of [TriggerConfig",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::CodeDeploy::DeploymentGroup.AlarmConfiguration": {
            "Required": "No",
            "Type": "AlarmConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeDeploy::DeploymentGroup",
            "CloudResourceProperty": "AlarmConfiguration",
            "CloudReference": "AWS::CodeDeploy::DeploymentGroup.AlarmConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Alarms": {
                    "Required": "No",
                    "Type": "List of [Alarm",
                    "UpdateRequires": "No interruption"
                },
                "Enabled": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "IgnorePollAlarmFailure": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CodeDeploy::DeploymentGroup.ApplicationName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CodeDeploy::DeploymentGroup",
            "CloudResourceProperty": "ApplicationName",
            "CloudReference": "AWS::CodeDeploy::DeploymentGroup.ApplicationName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeDeploy::DeploymentGroup.AutoRollbackConfiguration": {
            "Required": "No",
            "Type": "AutoRollbackConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodeDeploy::DeploymentGroup",
            "CloudResourceProperty": "AutoRollbackConfiguration",
            "CloudReference": "AWS::CodeDeploy::DeploymentGroup.AutoRollbackConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Enabled": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "Events": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CodePipeline::CustomActionType": {
            "Category": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "Approval",
                    "Build",
                    "Deploy",
                    "Invoke",
                    "Source",
                    "Test"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CodePipeline::CustomActionType",
                "CloudResourceProperty": "Category",
                "CloudReference": "AWS::CodePipeline::CustomActionType.Category",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ConfigurationProperties": {
                "Required": "No",
                "Type": "List",
                "Maximum": "10",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CodePipeline::CustomActionType",
                "CloudResourceProperty": "ConfigurationProperties",
                "CloudReference": "AWS::CodePipeline::CustomActionType.ConfigurationProperties",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InputArtifactDetails": {
                "Required": "Yes",
                "Type": "ArtifactDetails",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CodePipeline::CustomActionType",
                "CloudResourceProperty": "InputArtifactDetails",
                "CloudReference": "AWS::CodePipeline::CustomActionType.InputArtifactDetails",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "MaximumCount": {
                        "Required": "Yes",
                        "Type": "Integer",
                        "Minimum": "0",
                        "Maximum": "5",
                        "UpdateRequires": "No interruption"
                    },
                    "MinimumCount": {
                        "Required": "Yes",
                        "Type": "Integer",
                        "Minimum": "0",
                        "Maximum": "5",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "OutputArtifactDetails": {
                "Required": "Yes",
                "Type": "ArtifactDetails",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CodePipeline::CustomActionType",
                "CloudResourceProperty": "OutputArtifactDetails",
                "CloudReference": "AWS::CodePipeline::CustomActionType.OutputArtifactDetails",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "MaximumCount": {
                        "Required": "Yes",
                        "Type": "Integer",
                        "Minimum": "0",
                        "Maximum": "5",
                        "UpdateRequires": "No interruption"
                    },
                    "MinimumCount": {
                        "Required": "Yes",
                        "Type": "Integer",
                        "Minimum": "0",
                        "Maximum": "5",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Provider": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "25",
                "Pattern": "[0-9A-Za-z_-]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CodePipeline::CustomActionType",
                "CloudResourceProperty": "Provider",
                "CloudReference": "AWS::CodePipeline::CustomActionType.Provider",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Settings": {
                "Required": "No",
                "Type": "Settings",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CodePipeline::CustomActionType",
                "CloudResourceProperty": "Settings",
                "CloudReference": "AWS::CodePipeline::CustomActionType.Settings",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "EntityUrlTemplate": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "2048",
                        "UpdateRequires": "No interruption"
                    },
                    "ExecutionUrlTemplate": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "2048",
                        "UpdateRequires": "No interruption"
                    },
                    "RevisionUrlTemplate": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "2048",
                        "UpdateRequires": "No interruption"
                    },
                    "ThirdPartyConfigurationUrl": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "2048",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Version": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "9",
                "Pattern": "[0-9A-Za-z_-]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CodePipeline::CustomActionType",
                "CloudResourceProperty": "Version",
                "CloudReference": "AWS::CodePipeline::CustomActionType.Version",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::CodePipeline::CustomActionType.Category": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "Approval",
                "Build",
                "Deploy",
                "Invoke",
                "Source",
                "Test"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CodePipeline::CustomActionType",
            "CloudResourceProperty": "Category",
            "CloudReference": "AWS::CodePipeline::CustomActionType.Category",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodePipeline::CustomActionType.ConfigurationProperties": {
            "Required": "No",
            "Type": "List",
            "Maximum": "10",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CodePipeline::CustomActionType",
            "CloudResourceProperty": "ConfigurationProperties",
            "CloudReference": "AWS::CodePipeline::CustomActionType.ConfigurationProperties",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodePipeline::CustomActionType.InputArtifactDetails": {
            "Required": "Yes",
            "Type": "ArtifactDetails",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CodePipeline::CustomActionType",
            "CloudResourceProperty": "InputArtifactDetails",
            "CloudReference": "AWS::CodePipeline::CustomActionType.InputArtifactDetails",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "MaximumCount": {
                    "Required": "Yes",
                    "Type": "Integer",
                    "Minimum": "0",
                    "Maximum": "5",
                    "UpdateRequires": "No interruption"
                },
                "MinimumCount": {
                    "Required": "Yes",
                    "Type": "Integer",
                    "Minimum": "0",
                    "Maximum": "5",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CodePipeline::CustomActionType.OutputArtifactDetails": {
            "Required": "Yes",
            "Type": "ArtifactDetails",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CodePipeline::CustomActionType",
            "CloudResourceProperty": "OutputArtifactDetails",
            "CloudReference": "AWS::CodePipeline::CustomActionType.OutputArtifactDetails",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "MaximumCount": {
                    "Required": "Yes",
                    "Type": "Integer",
                    "Minimum": "0",
                    "Maximum": "5",
                    "UpdateRequires": "No interruption"
                },
                "MinimumCount": {
                    "Required": "Yes",
                    "Type": "Integer",
                    "Minimum": "0",
                    "Maximum": "5",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CodePipeline::CustomActionType.Provider": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "25",
            "Pattern": "[0-9A-Za-z_-]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CodePipeline::CustomActionType",
            "CloudResourceProperty": "Provider",
            "CloudReference": "AWS::CodePipeline::CustomActionType.Provider",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodePipeline::CustomActionType.Settings": {
            "Required": "No",
            "Type": "Settings",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CodePipeline::CustomActionType",
            "CloudResourceProperty": "Settings",
            "CloudReference": "AWS::CodePipeline::CustomActionType.Settings",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "EntityUrlTemplate": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "2048",
                    "UpdateRequires": "No interruption"
                },
                "ExecutionUrlTemplate": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "2048",
                    "UpdateRequires": "No interruption"
                },
                "RevisionUrlTemplate": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "2048",
                    "UpdateRequires": "No interruption"
                },
                "ThirdPartyConfigurationUrl": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "2048",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CodePipeline::CustomActionType.Version": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "9",
            "Pattern": "[0-9A-Za-z_-]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CodePipeline::CustomActionType",
            "CloudResourceProperty": "Version",
            "CloudReference": "AWS::CodePipeline::CustomActionType.Version",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodePipeline::Pipeline": {
            "ArtifactStore": {
                "Required": "No",
                "Type": "ArtifactStore",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodePipeline::Pipeline",
                "CloudResourceProperty": "ArtifactStore",
                "CloudReference": "AWS::CodePipeline::Pipeline.ArtifactStore",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "EncryptionKey": {
                        "Required": "No",
                        "Type": "EncryptionKey",
                        "UpdateRequires": "No interruption"
                    },
                    "Location": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "3",
                        "Maximum": "63",
                        "Pattern": "[a-zA-Z0-9\\-\\.]+",
                        "UpdateRequires": "No interruption"
                    },
                    "Type": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "S3"
                        ],
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "ArtifactStores": {
                "Required": "No",
                "Type": "List of [ArtifactStoreMap",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodePipeline::Pipeline",
                "CloudResourceProperty": "ArtifactStores",
                "CloudReference": "AWS::CodePipeline::Pipeline.ArtifactStores",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ArtifactStore": {
                        "Required": "Yes",
                        "Type": "ArtifactStore",
                        "UpdateRequires": "No interruption"
                    },
                    "Region": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "4",
                        "Maximum": "30",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "DisableInboundStageTransitions": {
                "Required": "No",
                "Type": "List of [StageTransition",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodePipeline::Pipeline",
                "CloudResourceProperty": "DisableInboundStageTransitions",
                "CloudReference": "AWS::CodePipeline::Pipeline.DisableInboundStageTransitions",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "[A-Za-z0-9.@\\-_]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CodePipeline::Pipeline",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::CodePipeline::Pipeline.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RestartExecutionOnUpdate": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodePipeline::Pipeline",
                "CloudResourceProperty": "RestartExecutionOnUpdate",
                "CloudReference": "AWS::CodePipeline::Pipeline.RestartExecutionOnUpdate",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "Maximum": "1024",
                "Pattern": "arn:aws(-[\\w]+)*:iam::[0-9]{12}:role/.*",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodePipeline::Pipeline",
                "CloudResourceProperty": "RoleArn",
                "CloudReference": "AWS::CodePipeline::Pipeline.RoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Stages": {
                "Required": "Yes",
                "Type": "List of [StageDeclaration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodePipeline::Pipeline",
                "CloudResourceProperty": "Stages",
                "CloudReference": "AWS::CodePipeline::Pipeline.Stages",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::CodePipeline::Pipeline.ArtifactStore": {
            "Required": "No",
            "Type": "ArtifactStore",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodePipeline::Pipeline",
            "CloudResourceProperty": "ArtifactStore",
            "CloudReference": "AWS::CodePipeline::Pipeline.ArtifactStore",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "EncryptionKey": {
                    "Required": "No",
                    "Type": "EncryptionKey",
                    "UpdateRequires": "No interruption"
                },
                "Location": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "3",
                    "Maximum": "63",
                    "Pattern": "[a-zA-Z0-9\\-\\.]+",
                    "UpdateRequires": "No interruption"
                },
                "Type": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "S3"
                    ],
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CodePipeline::Pipeline.ArtifactStores": {
            "Required": "No",
            "Type": "List of [ArtifactStoreMap",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodePipeline::Pipeline",
            "CloudResourceProperty": "ArtifactStores",
            "CloudReference": "AWS::CodePipeline::Pipeline.ArtifactStores",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ArtifactStore": {
                    "Required": "Yes",
                    "Type": "ArtifactStore",
                    "UpdateRequires": "No interruption"
                },
                "Region": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "4",
                    "Maximum": "30",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CodePipeline::Pipeline.DisableInboundStageTransitions": {
            "Required": "No",
            "Type": "List of [StageTransition",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodePipeline::Pipeline",
            "CloudResourceProperty": "DisableInboundStageTransitions",
            "CloudReference": "AWS::CodePipeline::Pipeline.DisableInboundStageTransitions",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodePipeline::Pipeline.Name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "Pattern": "[A-Za-z0-9.@\\-_]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CodePipeline::Pipeline",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::CodePipeline::Pipeline.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodePipeline::Pipeline.RestartExecutionOnUpdate": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodePipeline::Pipeline",
            "CloudResourceProperty": "RestartExecutionOnUpdate",
            "CloudReference": "AWS::CodePipeline::Pipeline.RestartExecutionOnUpdate",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodePipeline::Pipeline.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "Pattern": "arn:aws(-[\\w]+)*:iam::[0-9]{12}:role/.*",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodePipeline::Pipeline",
            "CloudResourceProperty": "RoleArn",
            "CloudReference": "AWS::CodePipeline::Pipeline.RoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodePipeline::Pipeline.Stages": {
            "Required": "Yes",
            "Type": "List of [StageDeclaration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodePipeline::Pipeline",
            "CloudResourceProperty": "Stages",
            "CloudReference": "AWS::CodePipeline::Pipeline.Stages",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodePipeline::Webhook": {
            "Authentication": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "GITHUB_HMAC",
                    "IP",
                    "UNAUTHENTICATED"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodePipeline::Webhook",
                "CloudResourceProperty": "Authentication",
                "CloudReference": "AWS::CodePipeline::Webhook.Authentication",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AuthenticationConfiguration": {
                "Required": "Yes",
                "Type": "WebhookAuthConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodePipeline::Webhook",
                "CloudResourceProperty": "AuthenticationConfiguration",
                "CloudReference": "AWS::CodePipeline::Webhook.AuthenticationConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AllowedIPRange": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "100",
                        "UpdateRequires": "No interruption"
                    },
                    "SecretToken": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "100",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Filters": {
                "Required": "Yes",
                "Type": "List of [WebhookFilterRule",
                "Maximum": "5",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodePipeline::Webhook",
                "CloudResourceProperty": "Filters",
                "CloudReference": "AWS::CodePipeline::Webhook.Filters",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "JsonPath": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "150",
                        "UpdateRequires": "No interruption"
                    },
                    "MatchEquals": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "150",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "[A-Za-z0-9.@\\-_]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::CodePipeline::Webhook",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::CodePipeline::Webhook.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RegisterWithThirdParty": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodePipeline::Webhook",
                "CloudResourceProperty": "RegisterWithThirdParty",
                "CloudReference": "AWS::CodePipeline::Webhook.RegisterWithThirdParty",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TargetAction": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "[A-Za-z0-9.@\\-_]+",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodePipeline::Webhook",
                "CloudResourceProperty": "TargetAction",
                "CloudReference": "AWS::CodePipeline::Webhook.TargetAction",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TargetPipeline": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "[A-Za-z0-9.@\\-_]+",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodePipeline::Webhook",
                "CloudResourceProperty": "TargetPipeline",
                "CloudReference": "AWS::CodePipeline::Webhook.TargetPipeline",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TargetPipelineVersion": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::CodePipeline::Webhook",
                "CloudResourceProperty": "TargetPipelineVersion",
                "CloudReference": "AWS::CodePipeline::Webhook.TargetPipelineVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::CodePipeline::Webhook.Authentication": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "GITHUB_HMAC",
                "IP",
                "UNAUTHENTICATED"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodePipeline::Webhook",
            "CloudResourceProperty": "Authentication",
            "CloudReference": "AWS::CodePipeline::Webhook.Authentication",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodePipeline::Webhook.AuthenticationConfiguration": {
            "Required": "Yes",
            "Type": "WebhookAuthConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodePipeline::Webhook",
            "CloudResourceProperty": "AuthenticationConfiguration",
            "CloudReference": "AWS::CodePipeline::Webhook.AuthenticationConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AllowedIPRange": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "100",
                    "UpdateRequires": "No interruption"
                },
                "SecretToken": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "100",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CodePipeline::Webhook.Filters": {
            "Required": "Yes",
            "Type": "List of [WebhookFilterRule",
            "Maximum": "5",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodePipeline::Webhook",
            "CloudResourceProperty": "Filters",
            "CloudReference": "AWS::CodePipeline::Webhook.Filters",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "JsonPath": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "150",
                    "UpdateRequires": "No interruption"
                },
                "MatchEquals": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "150",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::CodePipeline::Webhook.Name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "Pattern": "[A-Za-z0-9.@\\-_]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::CodePipeline::Webhook",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::CodePipeline::Webhook.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodePipeline::Webhook.RegisterWithThirdParty": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodePipeline::Webhook",
            "CloudResourceProperty": "RegisterWithThirdParty",
            "CloudReference": "AWS::CodePipeline::Webhook.RegisterWithThirdParty",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodePipeline::Webhook.TargetAction": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "Pattern": "[A-Za-z0-9.@\\-_]+",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodePipeline::Webhook",
            "CloudResourceProperty": "TargetAction",
            "CloudReference": "AWS::CodePipeline::Webhook.TargetAction",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodePipeline::Webhook.TargetPipeline": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "Pattern": "[A-Za-z0-9.@\\-_]+",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodePipeline::Webhook",
            "CloudResourceProperty": "TargetPipeline",
            "CloudReference": "AWS::CodePipeline::Webhook.TargetPipeline",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodePipeline::Webhook.TargetPipelineVersion": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::CodePipeline::Webhook",
            "CloudResourceProperty": "TargetPipelineVersion",
            "CloudReference": "AWS::CodePipeline::Webhook.TargetPipelineVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeStar::GitHubRepository": {
            "Code": {
                "Required": "No",
                "Type": "Code",
                "UpdateRequires": "Updates are not supported\\.",
                "CloudResourceType": "AWS::CodeStar::GitHubRepository",
                "CloudResourceProperty": "Code",
                "CloudReference": "AWS::CodeStar::GitHubRepository.Code",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "S3": {
                        "Required": "Yes",
                        "Type": "S3",
                        "UpdateRequires": "Updates are not supported\\."
                    }
                }
            },
            "EnableIssues": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Updates are not supported\\.",
                "CloudResourceType": "AWS::CodeStar::GitHubRepository",
                "CloudResourceProperty": "EnableIssues",
                "CloudReference": "AWS::CodeStar::GitHubRepository.EnableIssues",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "IsPrivate": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Updates are not supported\\.",
                "CloudResourceType": "AWS::CodeStar::GitHubRepository",
                "CloudResourceProperty": "IsPrivate",
                "CloudReference": "AWS::CodeStar::GitHubRepository.IsPrivate",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RepositoryAccessToken": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Updates are not supported\\.",
                "CloudResourceType": "AWS::CodeStar::GitHubRepository",
                "CloudResourceProperty": "RepositoryAccessToken",
                "CloudReference": "AWS::CodeStar::GitHubRepository.RepositoryAccessToken",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RepositoryDescription": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Updates are not supported\\.",
                "CloudResourceType": "AWS::CodeStar::GitHubRepository",
                "CloudResourceProperty": "RepositoryDescription",
                "CloudReference": "AWS::CodeStar::GitHubRepository.RepositoryDescription",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RepositoryName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Updates are not supported\\.",
                "CloudResourceType": "AWS::CodeStar::GitHubRepository",
                "CloudResourceProperty": "RepositoryName",
                "CloudReference": "AWS::CodeStar::GitHubRepository.RepositoryName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RepositoryOwner": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Updates are not supported\\.\n\n#",
                "CloudResourceType": "AWS::CodeStar::GitHubRepository",
                "CloudResourceProperty": "RepositoryOwner",
                "CloudReference": "AWS::CodeStar::GitHubRepository.RepositoryOwner",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::CodeStar::GitHubRepository.Code": {
            "Required": "No",
            "Type": "Code",
            "UpdateRequires": "Updates are not supported\\.",
            "CloudResourceType": "AWS::CodeStar::GitHubRepository",
            "CloudResourceProperty": "Code",
            "CloudReference": "AWS::CodeStar::GitHubRepository.Code",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "S3": {
                    "Required": "Yes",
                    "Type": "S3",
                    "UpdateRequires": "Updates are not supported\\."
                }
            }
        },
        "AWS::CodeStar::GitHubRepository.EnableIssues": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "Updates are not supported\\.",
            "CloudResourceType": "AWS::CodeStar::GitHubRepository",
            "CloudResourceProperty": "EnableIssues",
            "CloudReference": "AWS::CodeStar::GitHubRepository.EnableIssues",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeStar::GitHubRepository.IsPrivate": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "Updates are not supported\\.",
            "CloudResourceType": "AWS::CodeStar::GitHubRepository",
            "CloudResourceProperty": "IsPrivate",
            "CloudReference": "AWS::CodeStar::GitHubRepository.IsPrivate",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeStar::GitHubRepository.RepositoryAccessToken": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Updates are not supported\\.",
            "CloudResourceType": "AWS::CodeStar::GitHubRepository",
            "CloudResourceProperty": "RepositoryAccessToken",
            "CloudReference": "AWS::CodeStar::GitHubRepository.RepositoryAccessToken",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeStar::GitHubRepository.RepositoryDescription": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Updates are not supported\\.",
            "CloudResourceType": "AWS::CodeStar::GitHubRepository",
            "CloudResourceProperty": "RepositoryDescription",
            "CloudReference": "AWS::CodeStar::GitHubRepository.RepositoryDescription",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeStar::GitHubRepository.RepositoryName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Updates are not supported\\.",
            "CloudResourceType": "AWS::CodeStar::GitHubRepository",
            "CloudResourceProperty": "RepositoryName",
            "CloudReference": "AWS::CodeStar::GitHubRepository.RepositoryName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::CodeStar::GitHubRepository.RepositoryOwner": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Updates are not supported\\.\n\n#",
            "CloudResourceType": "AWS::CodeStar::GitHubRepository",
            "CloudResourceProperty": "RepositoryOwner",
            "CloudReference": "AWS::CodeStar::GitHubRepository.RepositoryOwner",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cognito::IdentityPool": {
            "AllowUnauthenticatedIdentities": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::IdentityPool",
                "CloudResourceProperty": "AllowUnauthenticatedIdentities",
                "CloudReference": "AWS::Cognito::IdentityPool.AllowUnauthenticatedIdentities",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CognitoEvents": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::IdentityPool",
                "CloudResourceProperty": "CognitoEvents",
                "CloudReference": "AWS::Cognito::IdentityPool.CognitoEvents",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CognitoIdentityProviders": {
                "Required": "No",
                "Type": "List of [CognitoIdentityProvider",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::IdentityPool",
                "CloudResourceProperty": "CognitoIdentityProviders",
                "CloudReference": "AWS::Cognito::IdentityPool.CognitoIdentityProviders",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ClientId": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "ProviderName": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "ServerSideTokenCheck": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "CognitoStreams": {
                "Required": "No",
                "Type": "CognitoStreams",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::IdentityPool",
                "CloudResourceProperty": "CognitoStreams",
                "CloudReference": "AWS::Cognito::IdentityPool.CognitoStreams",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "RoleArn": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "StreamName": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "StreamingStatus": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "DeveloperProviderName": {
                "Minimum length": "1",
                "Maximum length": "100",
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::IdentityPool",
                "CloudResourceProperty": "DeveloperProviderName",
                "CloudReference": "AWS::Cognito::IdentityPool.DeveloperProviderName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "IdentityPoolName": {
                "Minimum length": "1",
                "Maximum length": "128",
                "Pattern": "[\\w ]+",
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::IdentityPool",
                "CloudResourceProperty": "IdentityPoolName",
                "CloudReference": "AWS::Cognito::IdentityPool.IdentityPoolName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "OpenIdConnectProviderARNs": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "PushSync": {
                "Required": "No",
                "Type": "PushSync",
                "UpdateRequires": "No interruption"
            },
            "SamlProviderARNs": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "SupportedLoginProviders": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::Cognito::IdentityPool.AllowUnauthenticatedIdentities": {
            "Required": "Yes",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::IdentityPool",
            "CloudResourceProperty": "AllowUnauthenticatedIdentities",
            "CloudReference": "AWS::Cognito::IdentityPool.AllowUnauthenticatedIdentities",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cognito::IdentityPool.CognitoEvents": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::IdentityPool",
            "CloudResourceProperty": "CognitoEvents",
            "CloudReference": "AWS::Cognito::IdentityPool.CognitoEvents",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cognito::IdentityPool.CognitoIdentityProviders": {
            "Required": "No",
            "Type": "List of [CognitoIdentityProvider",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::IdentityPool",
            "CloudResourceProperty": "CognitoIdentityProviders",
            "CloudReference": "AWS::Cognito::IdentityPool.CognitoIdentityProviders",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ClientId": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "ProviderName": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "ServerSideTokenCheck": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Cognito::IdentityPool.CognitoStreams": {
            "Required": "No",
            "Type": "CognitoStreams",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::IdentityPool",
            "CloudResourceProperty": "CognitoStreams",
            "CloudReference": "AWS::Cognito::IdentityPool.CognitoStreams",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "RoleArn": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "StreamName": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "StreamingStatus": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Cognito::IdentityPool.DeveloperProviderName": {
            "Minimum length": "1",
            "Maximum length": "100",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::IdentityPool",
            "CloudResourceProperty": "DeveloperProviderName",
            "CloudReference": "AWS::Cognito::IdentityPool.DeveloperProviderName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cognito::IdentityPool.IdentityPoolName": {
            "Minimum length": "1",
            "Maximum length": "128",
            "Pattern": "[\\w ]+",
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::IdentityPool",
            "CloudResourceProperty": "IdentityPoolName",
            "CloudReference": "AWS::Cognito::IdentityPool.IdentityPoolName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cognito::IdentityPoolRoleAttachment": {
            "IdentityPoolId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Cognito::IdentityPoolRoleAttachment",
                "CloudResourceProperty": "IdentityPoolId",
                "CloudReference": "AWS::Cognito::IdentityPoolRoleAttachment.IdentityPoolId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RoleMappings": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::IdentityPoolRoleAttachment",
                "CloudResourceProperty": "RoleMappings",
                "CloudReference": "AWS::Cognito::IdentityPoolRoleAttachment.RoleMappings",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Roles": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::IdentityPoolRoleAttachment",
                "CloudResourceProperty": "Roles",
                "CloudReference": "AWS::Cognito::IdentityPoolRoleAttachment.Roles",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Cognito::IdentityPoolRoleAttachment.IdentityPoolId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Cognito::IdentityPoolRoleAttachment",
            "CloudResourceProperty": "IdentityPoolId",
            "CloudReference": "AWS::Cognito::IdentityPoolRoleAttachment.IdentityPoolId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cognito::IdentityPoolRoleAttachment.RoleMappings": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::IdentityPoolRoleAttachment",
            "CloudResourceProperty": "RoleMappings",
            "CloudReference": "AWS::Cognito::IdentityPoolRoleAttachment.RoleMappings",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cognito::IdentityPoolRoleAttachment.Roles": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::IdentityPoolRoleAttachment",
            "CloudResourceProperty": "Roles",
            "CloudReference": "AWS::Cognito::IdentityPoolRoleAttachment.Roles",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cognito::UserPool": {
            "AdminCreateUserConfig": {
                "Required": "No",
                "Type": "AdminCreateUserConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::UserPool",
                "CloudResourceProperty": "AdminCreateUserConfig",
                "CloudReference": "AWS::Cognito::UserPool.AdminCreateUserConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AllowAdminCreateUserOnly": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "InviteMessageTemplate": {
                        "Required": "No",
                        "Type": "InviteMessageTemplate",
                        "UpdateRequires": "No interruption"
                    },
                    "UnusedAccountValidityDays": {
                        "Required": "No",
                        "Type": "Double",
                        "Minimum": "0",
                        "Maximum": "365",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "AliasAttributes": {},
            "AutoVerifiedAttributes": {},
            "DeviceConfiguration": {
                "Required": "No",
                "Type": "DeviceConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::UserPool",
                "CloudResourceProperty": "DeviceConfiguration",
                "CloudReference": "AWS::Cognito::UserPool.DeviceConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ChallengeRequiredOnNewDevice": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "DeviceOnlyRememberedOnUserPrompt": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "EmailConfiguration": {
                "Required": "No",
                "Type": "EmailConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::UserPool",
                "CloudResourceProperty": "EmailConfiguration",
                "CloudReference": "AWS::Cognito::UserPool.EmailConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "EmailSendingAccount": {},
                    "ReplyToEmailAddress": {
                        "Required": "No",
                        "Type": "String",
                        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+@[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
                        "UpdateRequires": "No interruption"
                    },
                    "SourceArn": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "20",
                        "Maximum": "2048",
                        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "EmailVerificationMessage": {
                "Required": "No",
                "Type": "String",
                "Minimum": "6",
                "Maximum": "20000",
                "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{####\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::UserPool",
                "CloudResourceProperty": "EmailVerificationMessage",
                "CloudReference": "AWS::Cognito::UserPool.EmailVerificationMessage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EmailVerificationSubject": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "140",
                "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::UserPool",
                "CloudResourceProperty": "EmailVerificationSubject",
                "CloudReference": "AWS::Cognito::UserPool.EmailVerificationSubject",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "LambdaConfig": {
                "Required": "No",
                "Type": "LambdaConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::UserPool",
                "CloudResourceProperty": "LambdaConfig",
                "CloudReference": "AWS::Cognito::UserPool.LambdaConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "CreateAuthChallenge": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "20",
                        "Maximum": "2048",
                        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                        "UpdateRequires": "No interruption"
                    },
                    "CustomMessage": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "20",
                        "Maximum": "2048",
                        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                        "UpdateRequires": "No interruption"
                    },
                    "DefineAuthChallenge": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "20",
                        "Maximum": "2048",
                        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                        "UpdateRequires": "No interruption"
                    },
                    "PostAuthentication": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "20",
                        "Maximum": "2048",
                        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                        "UpdateRequires": "No interruption"
                    },
                    "PostConfirmation": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "20",
                        "Maximum": "2048",
                        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                        "UpdateRequires": "No interruption"
                    },
                    "PreAuthentication": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "20",
                        "Maximum": "2048",
                        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                        "UpdateRequires": "No interruption"
                    },
                    "PreSignUp": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "20",
                        "Maximum": "2048",
                        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                        "UpdateRequires": "No interruption"
                    },
                    "VerifyAuthChallengeResponse": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "20",
                        "Maximum": "2048",
                        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "MfaConfiguration": {},
            "OFF": {},
            "ON": {},
            "OPTIONAL": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::UserPool",
                "CloudResourceProperty": "OPTIONAL",
                "CloudReference": "AWS::Cognito::UserPool.OPTIONAL",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Policies": {
                "Required": "No",
                "Type": "Policies",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::UserPool",
                "CloudResourceProperty": "Policies",
                "CloudReference": "AWS::Cognito::UserPool.Policies",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "PasswordPolicy": {
                        "Required": "No",
                        "Type": "PasswordPolicy",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Schema": {
                "Required": "No",
                "Type": "List of [SchemaAttribute",
                "Maximum": "50",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Cognito::UserPool",
                "CloudResourceProperty": "Schema",
                "CloudReference": "AWS::Cognito::UserPool.Schema",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AttributeDataType": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "Boolean",
                            "DateTime",
                            "Number",
                            "String"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "DeveloperOnlyAttribute": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "Mutable": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "Name": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "20",
                        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
                        "UpdateRequires": "No interruption"
                    },
                    "NumberAttributeConstraints": {
                        "Required": "No",
                        "Type": "NumberAttributeConstraints",
                        "UpdateRequires": "No interruption"
                    },
                    "Required": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "StringAttributeConstraints": {
                        "Required": "No",
                        "Type": "StringAttributeConstraints",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "SmsAuthenticationMessage": {
                "Required": "No",
                "Type": "String",
                "Minimum": "6",
                "Maximum": "140",
                "Pattern": ".*\\{####\\}.*",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::UserPool",
                "CloudResourceProperty": "SmsAuthenticationMessage",
                "CloudReference": "AWS::Cognito::UserPool.SmsAuthenticationMessage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SmsConfiguration": {
                "Required": "No",
                "Type": "SmsConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::UserPool",
                "CloudResourceProperty": "SmsConfiguration",
                "CloudReference": "AWS::Cognito::UserPool.SmsConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ExternalId": {},
                    "SnsCallerArn": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "20",
                        "Maximum": "2048",
                        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "SmsVerificationMessage": {
                "Required": "No",
                "Type": "String",
                "Minimum": "6",
                "Maximum": "140",
                "Pattern": ".*\\{####\\}.*",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::UserPool",
                "CloudResourceProperty": "SmsVerificationMessage",
                "CloudReference": "AWS::Cognito::UserPool.SmsVerificationMessage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "UsernameAttributes": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "UserPoolAddOns": {
                "Required": "No",
                "Type": "UserPoolAddOns",
                "UpdateRequires": "No interruption"
            },
            "UserPoolName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\w\\s+=,.@-]+",
                "UpdateRequires": "Replacement"
            },
            "UserPoolTags": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "VerificationMessageTemplate": {
                "Required": "No",
                "Type": "VerificationMessageTemplate",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::Cognito::UserPool.AdminCreateUserConfig": {
            "Required": "No",
            "Type": "AdminCreateUserConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::UserPool",
            "CloudResourceProperty": "AdminCreateUserConfig",
            "CloudReference": "AWS::Cognito::UserPool.AdminCreateUserConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AllowAdminCreateUserOnly": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "InviteMessageTemplate": {
                    "Required": "No",
                    "Type": "InviteMessageTemplate",
                    "UpdateRequires": "No interruption"
                },
                "UnusedAccountValidityDays": {
                    "Required": "No",
                    "Type": "Double",
                    "Minimum": "0",
                    "Maximum": "365",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Cognito::UserPool.DeviceConfiguration": {
            "Required": "No",
            "Type": "DeviceConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::UserPool",
            "CloudResourceProperty": "DeviceConfiguration",
            "CloudReference": "AWS::Cognito::UserPool.DeviceConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ChallengeRequiredOnNewDevice": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "DeviceOnlyRememberedOnUserPrompt": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Cognito::UserPool.EmailConfiguration": {
            "Required": "No",
            "Type": "EmailConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::UserPool",
            "CloudResourceProperty": "EmailConfiguration",
            "CloudReference": "AWS::Cognito::UserPool.EmailConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "EmailSendingAccount": {},
                "ReplyToEmailAddress": {
                    "Required": "No",
                    "Type": "String",
                    "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+@[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
                    "UpdateRequires": "No interruption"
                },
                "SourceArn": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "20",
                    "Maximum": "2048",
                    "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Cognito::UserPool.EmailVerificationMessage": {
            "Required": "No",
            "Type": "String",
            "Minimum": "6",
            "Maximum": "20000",
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{####\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::UserPool",
            "CloudResourceProperty": "EmailVerificationMessage",
            "CloudReference": "AWS::Cognito::UserPool.EmailVerificationMessage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cognito::UserPool.EmailVerificationSubject": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "140",
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::UserPool",
            "CloudResourceProperty": "EmailVerificationSubject",
            "CloudReference": "AWS::Cognito::UserPool.EmailVerificationSubject",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cognito::UserPool.LambdaConfig": {
            "Required": "No",
            "Type": "LambdaConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::UserPool",
            "CloudResourceProperty": "LambdaConfig",
            "CloudReference": "AWS::Cognito::UserPool.LambdaConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "CreateAuthChallenge": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "20",
                    "Maximum": "2048",
                    "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                    "UpdateRequires": "No interruption"
                },
                "CustomMessage": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "20",
                    "Maximum": "2048",
                    "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                    "UpdateRequires": "No interruption"
                },
                "DefineAuthChallenge": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "20",
                    "Maximum": "2048",
                    "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                    "UpdateRequires": "No interruption"
                },
                "PostAuthentication": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "20",
                    "Maximum": "2048",
                    "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                    "UpdateRequires": "No interruption"
                },
                "PostConfirmation": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "20",
                    "Maximum": "2048",
                    "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                    "UpdateRequires": "No interruption"
                },
                "PreAuthentication": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "20",
                    "Maximum": "2048",
                    "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                    "UpdateRequires": "No interruption"
                },
                "PreSignUp": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "20",
                    "Maximum": "2048",
                    "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                    "UpdateRequires": "No interruption"
                },
                "VerifyAuthChallengeResponse": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "20",
                    "Maximum": "2048",
                    "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Cognito::UserPool.OPTIONAL": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::UserPool",
            "CloudResourceProperty": "OPTIONAL",
            "CloudReference": "AWS::Cognito::UserPool.OPTIONAL",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cognito::UserPool.Policies": {
            "Required": "No",
            "Type": "Policies",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::UserPool",
            "CloudResourceProperty": "Policies",
            "CloudReference": "AWS::Cognito::UserPool.Policies",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "PasswordPolicy": {
                    "Required": "No",
                    "Type": "PasswordPolicy",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Cognito::UserPool.Schema": {
            "Required": "No",
            "Type": "List of [SchemaAttribute",
            "Maximum": "50",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Cognito::UserPool",
            "CloudResourceProperty": "Schema",
            "CloudReference": "AWS::Cognito::UserPool.Schema",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AttributeDataType": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "Boolean",
                        "DateTime",
                        "Number",
                        "String"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "DeveloperOnlyAttribute": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "Mutable": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "Name": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "20",
                    "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
                    "UpdateRequires": "No interruption"
                },
                "NumberAttributeConstraints": {
                    "Required": "No",
                    "Type": "NumberAttributeConstraints",
                    "UpdateRequires": "No interruption"
                },
                "Required": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "StringAttributeConstraints": {
                    "Required": "No",
                    "Type": "StringAttributeConstraints",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Cognito::UserPool.SmsAuthenticationMessage": {
            "Required": "No",
            "Type": "String",
            "Minimum": "6",
            "Maximum": "140",
            "Pattern": ".*\\{####\\}.*",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::UserPool",
            "CloudResourceProperty": "SmsAuthenticationMessage",
            "CloudReference": "AWS::Cognito::UserPool.SmsAuthenticationMessage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cognito::UserPool.SmsConfiguration": {
            "Required": "No",
            "Type": "SmsConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::UserPool",
            "CloudResourceProperty": "SmsConfiguration",
            "CloudReference": "AWS::Cognito::UserPool.SmsConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ExternalId": {},
                "SnsCallerArn": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "20",
                    "Maximum": "2048",
                    "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Cognito::UserPool.SmsVerificationMessage": {
            "Required": "No",
            "Type": "String",
            "Minimum": "6",
            "Maximum": "140",
            "Pattern": ".*\\{####\\}.*",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::UserPool",
            "CloudResourceProperty": "SmsVerificationMessage",
            "CloudReference": "AWS::Cognito::UserPool.SmsVerificationMessage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cognito::UserPoolClient": {
            "AllowedOAuthFlows": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "3",
                "UpdateRequires": "No interruption"
            },
            "AllowedOAuthFlowsUserPoolClient": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "AllowedOAuthScopes": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "25",
                "UpdateRequires": "No interruption"
            },
            "AnalyticsConfiguration": {
                "Required": "No",
                "Type": "AnalyticsConfiguration",
                "UpdateRequires": "No interruption"
            },
            "CallbackURLs": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            },
            "ClientName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\w\\s+=,.@-]+",
                "UpdateRequires": "No interruption"
            },
            "DefaultRedirectURI": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
                "UpdateRequires": "No interruption"
            },
            "ExplicitAuthFlows": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "GenerateSecret": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "LogoutURLs": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            },
            "ReadAttributes": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "RefreshTokenValidity": {
                "Required": "No",
                "Type": "Double",
                "Minimum": "0",
                "Maximum": "3650",
                "UpdateRequires": "No interruption"
            },
            "SupportedIdentityProviders": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "UserPoolId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "55",
                "Pattern": "[\\w-]+_[0-9a-zA-Z]+",
                "UpdateRequires": "Replacement"
            },
            "WriteAttributes": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::Cognito::UserPoolGroup": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "2048",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::UserPoolGroup",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::Cognito::UserPoolGroup.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "GroupName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Cognito::UserPoolGroup",
                "CloudResourceProperty": "GroupName",
                "CloudReference": "AWS::Cognito::UserPoolGroup.GroupName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Precedence": {
                "Required": "No",
                "Type": "Double",
                "Minimum": "0",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::UserPoolGroup",
                "CloudResourceProperty": "Precedence",
                "CloudReference": "AWS::Cognito::UserPoolGroup.Precedence",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RoleArn": {
                "Required": "No",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "2048",
                "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Cognito::UserPoolGroup",
                "CloudResourceProperty": "RoleArn",
                "CloudReference": "AWS::Cognito::UserPoolGroup.RoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "UserPoolId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "55",
                "Pattern": "[\\w-]+_[0-9a-zA-Z]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Cognito::UserPoolGroup",
                "CloudResourceProperty": "UserPoolId",
                "CloudReference": "AWS::Cognito::UserPoolGroup.UserPoolId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Cognito::UserPoolGroup.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::UserPoolGroup",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::Cognito::UserPoolGroup.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cognito::UserPoolGroup.GroupName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Cognito::UserPoolGroup",
            "CloudResourceProperty": "GroupName",
            "CloudReference": "AWS::Cognito::UserPoolGroup.GroupName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cognito::UserPoolGroup.Precedence": {
            "Required": "No",
            "Type": "Double",
            "Minimum": "0",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::UserPoolGroup",
            "CloudResourceProperty": "Precedence",
            "CloudReference": "AWS::Cognito::UserPoolGroup.Precedence",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cognito::UserPoolGroup.RoleArn": {
            "Required": "No",
            "Type": "String",
            "Minimum": "20",
            "Maximum": "2048",
            "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Cognito::UserPoolGroup",
            "CloudResourceProperty": "RoleArn",
            "CloudReference": "AWS::Cognito::UserPoolGroup.RoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cognito::UserPoolGroup.UserPoolId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "55",
            "Pattern": "[\\w-]+_[0-9a-zA-Z]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Cognito::UserPoolGroup",
            "CloudResourceProperty": "UserPoolId",
            "CloudReference": "AWS::Cognito::UserPoolGroup.UserPoolId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cognito::UserPoolUser": {
            "DesiredDeliveryMediums": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "ForceAliasCreation": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "MessageAction": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "RESEND",
                    "SUPPRESS"
                ],
                "UpdateRequires": "Replacement"
            },
            "UserAttributes": {
                "UserAttributes`  <a name=\"cfn-cognito-userpooluser-userattributes\"></a>\nAn array of name\\-value pairs that contain user attributes and attribute values to be set for the user to be created\\. You can create a user without specifying any attributes other than `Username`\\. However, any attributes that you specify as required \\(in [https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateUserPool.html](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateUserPool.html) or in the **Attributes** tab of the console\\) must be supplied either by you \\(in your call to `AdminCreateUser`\\) or by the user \\(when he or she signs up in response to your welcome message\\)\\.  \nFor custom attributes, you must prepend the `custom:` prefix to the attribute name\\.  \nTo send a message inviting the user to sign up, you must specify the user's email address or phone number\\. This can be done in your call to AdminCreateUser or in the **Users** tab of the Amazon Cognito console for managing your user pools\\.  \nIn your call to `AdminCreateUser`, you can set the `email_verified` attribute to `True`, and you can set the `phone_number_verified` attribute to `True`\\. \\(You can also do this by calling [https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminUpdateUserAttributes.html](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminUpdateUserAttributes.html)\\.\\)  \n+  **email*": "The email address of the user to whom the message that contains the code and username will be sent\\. Required if the `email_verified` attribute is set to `True`, or if `\"EMAIL\"` is specified in the `DesiredDeliveryMediums` parameter\\.\n+  **phone\\_number*",
                "Required": "No",
                "Type": "List of [AttributeType",
                "UpdateRequires": "Replacement"
            },
            "UserPoolId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "55",
                "Pattern": "[\\w-]+_[0-9a-zA-Z]+",
                "UpdateRequires": "Replacement"
            },
            "Username": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
                "UpdateRequires": "Replacement"
            },
            "ValidationData": {
                "Required": "No",
                "Type": "List of [AttributeType",
                "UpdateRequires": "Replacement"
            }
        },
        "AWS::Cognito::UserPoolUserToGroupAttachment": {
            "GroupName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Cognito::UserPoolUserToGroupAttachment",
                "CloudResourceProperty": "GroupName",
                "CloudReference": "AWS::Cognito::UserPoolUserToGroupAttachment.GroupName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "UserPoolId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "55",
                "Pattern": "[\\w-]+_[0-9a-zA-Z]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Cognito::UserPoolUserToGroupAttachment",
                "CloudResourceProperty": "UserPoolId",
                "CloudReference": "AWS::Cognito::UserPoolUserToGroupAttachment.UserPoolId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Username": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Cognito::UserPoolUserToGroupAttachment",
                "CloudResourceProperty": "Username",
                "CloudReference": "AWS::Cognito::UserPoolUserToGroupAttachment.Username",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Cognito::UserPoolUserToGroupAttachment.GroupName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Cognito::UserPoolUserToGroupAttachment",
            "CloudResourceProperty": "GroupName",
            "CloudReference": "AWS::Cognito::UserPoolUserToGroupAttachment.GroupName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cognito::UserPoolUserToGroupAttachment.UserPoolId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "55",
            "Pattern": "[\\w-]+_[0-9a-zA-Z]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Cognito::UserPoolUserToGroupAttachment",
            "CloudResourceProperty": "UserPoolId",
            "CloudReference": "AWS::Cognito::UserPoolUserToGroupAttachment.UserPoolId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Cognito::UserPoolUserToGroupAttachment.Username": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Cognito::UserPoolUserToGroupAttachment",
            "CloudResourceProperty": "Username",
            "CloudReference": "AWS::Cognito::UserPoolUserToGroupAttachment.Username",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::AggregationAuthorization": {
            "AuthorizedAccountId": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "\\d{12}",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Config::AggregationAuthorization",
                "CloudResourceProperty": "AuthorizedAccountId",
                "CloudReference": "AWS::Config::AggregationAuthorization.AuthorizedAccountId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AuthorizedAwsRegion": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "64",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Config::AggregationAuthorization",
                "CloudResourceProperty": "AuthorizedAwsRegion",
                "CloudReference": "AWS::Config::AggregationAuthorization.AuthorizedAwsRegion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Config::AggregationAuthorization.AuthorizedAccountId": {
            "Required": "Yes",
            "Type": "String",
            "Pattern": "\\d{12}",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Config::AggregationAuthorization",
            "CloudResourceProperty": "AuthorizedAccountId",
            "CloudReference": "AWS::Config::AggregationAuthorization.AuthorizedAccountId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::AggregationAuthorization.AuthorizedAwsRegion": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "64",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Config::AggregationAuthorization",
            "CloudResourceProperty": "AuthorizedAwsRegion",
            "CloudReference": "AWS::Config::AggregationAuthorization.AuthorizedAwsRegion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::ConfigRule": {
            "ConfigRuleName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "64",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Config::ConfigRule",
                "CloudResourceProperty": "ConfigRuleName",
                "CloudReference": "AWS::Config::ConfigRule.ConfigRuleName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::ConfigRule",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::Config::ConfigRule.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InputParameters": {
                "Required": "No",
                "Type": "Json",
                "Minimum": "1",
                "Maximum": "1024",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::ConfigRule",
                "CloudResourceProperty": "InputParameters",
                "CloudReference": "AWS::Config::ConfigRule.InputParameters",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MaximumExecutionFrequency": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "One_Hour",
                    "Six_Hours",
                    "Three_Hours",
                    "Twelve_Hours",
                    "TwentyFour_Hours"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::ConfigRule",
                "CloudResourceProperty": "MaximumExecutionFrequency",
                "CloudReference": "AWS::Config::ConfigRule.MaximumExecutionFrequency",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Scope": {
                "Required": "No",
                "Type": "Scope",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::ConfigRule",
                "CloudResourceProperty": "Scope",
                "CloudReference": "AWS::Config::ConfigRule.Scope",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ComplianceResourceId": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "768",
                        "UpdateRequires": "No interruption"
                    },
                    "ComplianceResourceTypes": {
                        "Required": "No",
                        "Type": "List of String",
                        "Maximum": "100",
                        "UpdateRequires": "No interruption"
                    },
                    "TagKey": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "128",
                        "UpdateRequires": "No interruption"
                    },
                    "TagValue": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "256",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Source": {
                "Required": "Yes",
                "Type": "Source",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::ConfigRule",
                "CloudResourceProperty": "Source",
                "CloudReference": "AWS::Config::ConfigRule.Source",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Owner": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "AWS",
                            "CUSTOM_LAMBDA"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "SourceDetails": {
                        "Required": "No",
                        "Type": "List of [SourceDetail",
                        "Maximum": "25",
                        "UpdateRequires": "No interruption"
                    },
                    "SourceIdentifier": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "256",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::Config::ConfigRule.ConfigRuleName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "64",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Config::ConfigRule",
            "CloudResourceProperty": "ConfigRuleName",
            "CloudReference": "AWS::Config::ConfigRule.ConfigRuleName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::ConfigRule.Description": {
            "Required": "No",
            "Type": "String",
            "Minimum": "0",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::ConfigRule",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::Config::ConfigRule.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::ConfigRule.InputParameters": {
            "Required": "No",
            "Type": "Json",
            "Minimum": "1",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::ConfigRule",
            "CloudResourceProperty": "InputParameters",
            "CloudReference": "AWS::Config::ConfigRule.InputParameters",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::ConfigRule.MaximumExecutionFrequency": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "One_Hour",
                "Six_Hours",
                "Three_Hours",
                "Twelve_Hours",
                "TwentyFour_Hours"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::ConfigRule",
            "CloudResourceProperty": "MaximumExecutionFrequency",
            "CloudReference": "AWS::Config::ConfigRule.MaximumExecutionFrequency",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::ConfigRule.Scope": {
            "Required": "No",
            "Type": "Scope",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::ConfigRule",
            "CloudResourceProperty": "Scope",
            "CloudReference": "AWS::Config::ConfigRule.Scope",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ComplianceResourceId": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "768",
                    "UpdateRequires": "No interruption"
                },
                "ComplianceResourceTypes": {
                    "Required": "No",
                    "Type": "List of String",
                    "Maximum": "100",
                    "UpdateRequires": "No interruption"
                },
                "TagKey": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "128",
                    "UpdateRequires": "No interruption"
                },
                "TagValue": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "256",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Config::ConfigRule.Source": {
            "Required": "Yes",
            "Type": "Source",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::ConfigRule",
            "CloudResourceProperty": "Source",
            "CloudReference": "AWS::Config::ConfigRule.Source",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Owner": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "AWS",
                        "CUSTOM_LAMBDA"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "SourceDetails": {
                    "Required": "No",
                    "Type": "List of [SourceDetail",
                    "Maximum": "25",
                    "UpdateRequires": "No interruption"
                },
                "SourceIdentifier": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "256",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Config::ConfigurationAggregator": {
            "AccountAggregationSources": {
                "Required": "No",
                "Type": "List of [AccountAggregationSource",
                "Maximum": "1",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::ConfigurationAggregator",
                "CloudResourceProperty": "AccountAggregationSources",
                "CloudReference": "AWS::Config::ConfigurationAggregator.AccountAggregationSources",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AccountIds": {
                        "Required": "Yes",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    },
                    "AllAwsRegions": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "AwsRegions": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "ConfigurationAggregatorName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "Pattern": "[\\w\\-]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Config::ConfigurationAggregator",
                "CloudResourceProperty": "ConfigurationAggregatorName",
                "CloudReference": "AWS::Config::ConfigurationAggregator.ConfigurationAggregatorName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "OrganizationAggregationSource": {
                "Required": "No",
                "Type": "OrganizationAggregationSource",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::ConfigurationAggregator",
                "CloudResourceProperty": "OrganizationAggregationSource",
                "CloudReference": "AWS::Config::ConfigurationAggregator.OrganizationAggregationSource",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AllAwsRegions": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "AwsRegions": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    },
                    "RoleArn": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::Config::ConfigurationAggregator.AccountAggregationSources": {
            "Required": "No",
            "Type": "List of [AccountAggregationSource",
            "Maximum": "1",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::ConfigurationAggregator",
            "CloudResourceProperty": "AccountAggregationSources",
            "CloudReference": "AWS::Config::ConfigurationAggregator.AccountAggregationSources",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AccountIds": {
                    "Required": "Yes",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                },
                "AllAwsRegions": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "AwsRegions": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Config::ConfigurationAggregator.ConfigurationAggregatorName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "256",
            "Pattern": "[\\w\\-]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Config::ConfigurationAggregator",
            "CloudResourceProperty": "ConfigurationAggregatorName",
            "CloudReference": "AWS::Config::ConfigurationAggregator.ConfigurationAggregatorName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::ConfigurationAggregator.OrganizationAggregationSource": {
            "Required": "No",
            "Type": "OrganizationAggregationSource",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::ConfigurationAggregator",
            "CloudResourceProperty": "OrganizationAggregationSource",
            "CloudReference": "AWS::Config::ConfigurationAggregator.OrganizationAggregationSource",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AllAwsRegions": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "AwsRegions": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                },
                "RoleArn": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Config::ConfigurationRecorder": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Config::ConfigurationRecorder",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Config::ConfigurationRecorder.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RecordingGroup": {
                "Required": "No",
                "Type": "RecordingGroup",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::ConfigurationRecorder",
                "CloudResourceProperty": "RecordingGroup",
                "CloudReference": "AWS::Config::ConfigurationRecorder.RecordingGroup",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AllSupported": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "IncludeGlobalResourceTypes": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "ResourceTypes": {}
                }
            },
            "RoleARN": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::ConfigurationRecorder",
                "CloudResourceProperty": "RoleARN",
                "CloudReference": "AWS::Config::ConfigurationRecorder.RoleARN",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Config::ConfigurationRecorder.Name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Config::ConfigurationRecorder",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Config::ConfigurationRecorder.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::ConfigurationRecorder.RecordingGroup": {
            "Required": "No",
            "Type": "RecordingGroup",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::ConfigurationRecorder",
            "CloudResourceProperty": "RecordingGroup",
            "CloudReference": "AWS::Config::ConfigurationRecorder.RecordingGroup",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AllSupported": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "IncludeGlobalResourceTypes": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "ResourceTypes": {}
            }
        },
        "AWS::Config::ConfigurationRecorder.RoleARN": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::ConfigurationRecorder",
            "CloudResourceProperty": "RoleARN",
            "CloudReference": "AWS::Config::ConfigurationRecorder.RoleARN",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::DeliveryChannel": {
            "ConfigSnapshotDeliveryProperties": {
                "Required": "No",
                "Type": "ConfigSnapshotDeliveryProperties",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::DeliveryChannel",
                "CloudResourceProperty": "ConfigSnapshotDeliveryProperties",
                "CloudReference": "AWS::Config::DeliveryChannel.ConfigSnapshotDeliveryProperties",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DeliveryFrequency": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "One_Hour",
                            "Six_Hours",
                            "Three_Hours",
                            "Twelve_Hours",
                            "TwentyFour_Hours"
                        ],
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Config::DeliveryChannel",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Config::DeliveryChannel.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "S3BucketName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::DeliveryChannel",
                "CloudResourceProperty": "S3BucketName",
                "CloudReference": "AWS::Config::DeliveryChannel.S3BucketName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "S3KeyPrefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::DeliveryChannel",
                "CloudResourceProperty": "S3KeyPrefix",
                "CloudReference": "AWS::Config::DeliveryChannel.S3KeyPrefix",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SnsTopicARN": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::DeliveryChannel",
                "CloudResourceProperty": "SnsTopicARN",
                "CloudReference": "AWS::Config::DeliveryChannel.SnsTopicARN",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Config::DeliveryChannel.ConfigSnapshotDeliveryProperties": {
            "Required": "No",
            "Type": "ConfigSnapshotDeliveryProperties",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::DeliveryChannel",
            "CloudResourceProperty": "ConfigSnapshotDeliveryProperties",
            "CloudReference": "AWS::Config::DeliveryChannel.ConfigSnapshotDeliveryProperties",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DeliveryFrequency": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "One_Hour",
                        "Six_Hours",
                        "Three_Hours",
                        "Twelve_Hours",
                        "TwentyFour_Hours"
                    ],
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Config::DeliveryChannel.Name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Config::DeliveryChannel",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Config::DeliveryChannel.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::DeliveryChannel.S3BucketName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::DeliveryChannel",
            "CloudResourceProperty": "S3BucketName",
            "CloudReference": "AWS::Config::DeliveryChannel.S3BucketName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::DeliveryChannel.S3KeyPrefix": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::DeliveryChannel",
            "CloudResourceProperty": "S3KeyPrefix",
            "CloudReference": "AWS::Config::DeliveryChannel.S3KeyPrefix",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::DeliveryChannel.SnsTopicARN": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::DeliveryChannel",
            "CloudResourceProperty": "SnsTopicARN",
            "CloudReference": "AWS::Config::DeliveryChannel.SnsTopicARN",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::OrganizationConfigRule": {
            "ExcludedAccounts": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "1000",
                "UpdateRequires": "No interruption"
            },
            "OrganizationConfigRuleName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "64",
                "UpdateRequires": "Replacement"
            },
            "OrganizationCustomRuleMetadata": {
                "Required": "No",
                "Type": "OrganizationCustomRuleMetadata",
                "UpdateRequires": "No interruption"
            },
            "OrganizationManagedRuleMetadata": {
                "Required": "No",
                "Type": "OrganizationManagedRuleMetadata",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::Config::RemediationConfiguration": {
            "Automatic": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::RemediationConfiguration",
                "CloudResourceProperty": "Automatic",
                "CloudReference": "AWS::Config::RemediationConfiguration.Automatic",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ConfigRuleName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": ".*\\S.*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Config::RemediationConfiguration",
                "CloudResourceProperty": "ConfigRuleName",
                "CloudReference": "AWS::Config::RemediationConfiguration.ConfigRuleName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ExecutionControls": {
                "Required": "No",
                "Type": "ExecutionControls",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::RemediationConfiguration",
                "CloudResourceProperty": "ExecutionControls",
                "CloudReference": "AWS::Config::RemediationConfiguration.ExecutionControls",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "SsmControls": {
                        "Required": "No",
                        "Type": "SsmControls",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "MaximumAutomaticAttempts": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "25",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::RemediationConfiguration",
                "CloudResourceProperty": "MaximumAutomaticAttempts",
                "CloudReference": "AWS::Config::RemediationConfiguration.MaximumAutomaticAttempts",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Parameters": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::RemediationConfiguration",
                "CloudResourceProperty": "Parameters",
                "CloudReference": "AWS::Config::RemediationConfiguration.Parameters",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ResourceType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::RemediationConfiguration",
                "CloudResourceProperty": "ResourceType",
                "CloudReference": "AWS::Config::RemediationConfiguration.ResourceType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RetryAttemptSeconds": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::RemediationConfiguration",
                "CloudResourceProperty": "RetryAttemptSeconds",
                "CloudReference": "AWS::Config::RemediationConfiguration.RetryAttemptSeconds",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TargetId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::RemediationConfiguration",
                "CloudResourceProperty": "TargetId",
                "CloudReference": "AWS::Config::RemediationConfiguration.TargetId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TargetType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "SSM_DOCUMENT"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::RemediationConfiguration",
                "CloudResourceProperty": "TargetType",
                "CloudReference": "AWS::Config::RemediationConfiguration.TargetType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TargetVersion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Config::RemediationConfiguration",
                "CloudResourceProperty": "TargetVersion",
                "CloudReference": "AWS::Config::RemediationConfiguration.TargetVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Config::RemediationConfiguration.Automatic": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::RemediationConfiguration",
            "CloudResourceProperty": "Automatic",
            "CloudReference": "AWS::Config::RemediationConfiguration.Automatic",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::RemediationConfiguration.ConfigRuleName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": ".*\\S.*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Config::RemediationConfiguration",
            "CloudResourceProperty": "ConfigRuleName",
            "CloudReference": "AWS::Config::RemediationConfiguration.ConfigRuleName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::RemediationConfiguration.ExecutionControls": {
            "Required": "No",
            "Type": "ExecutionControls",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::RemediationConfiguration",
            "CloudResourceProperty": "ExecutionControls",
            "CloudReference": "AWS::Config::RemediationConfiguration.ExecutionControls",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "SsmControls": {
                    "Required": "No",
                    "Type": "SsmControls",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Config::RemediationConfiguration.MaximumAutomaticAttempts": {
            "Required": "No",
            "Type": "Integer",
            "Minimum": "1",
            "Maximum": "25",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::RemediationConfiguration",
            "CloudResourceProperty": "MaximumAutomaticAttempts",
            "CloudReference": "AWS::Config::RemediationConfiguration.MaximumAutomaticAttempts",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::RemediationConfiguration.Parameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::RemediationConfiguration",
            "CloudResourceProperty": "Parameters",
            "CloudReference": "AWS::Config::RemediationConfiguration.Parameters",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::RemediationConfiguration.ResourceType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::RemediationConfiguration",
            "CloudResourceProperty": "ResourceType",
            "CloudReference": "AWS::Config::RemediationConfiguration.ResourceType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::RemediationConfiguration.RetryAttemptSeconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::RemediationConfiguration",
            "CloudResourceProperty": "RetryAttemptSeconds",
            "CloudReference": "AWS::Config::RemediationConfiguration.RetryAttemptSeconds",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::RemediationConfiguration.TargetId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::RemediationConfiguration",
            "CloudResourceProperty": "TargetId",
            "CloudReference": "AWS::Config::RemediationConfiguration.TargetId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::RemediationConfiguration.TargetType": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "SSM_DOCUMENT"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::RemediationConfiguration",
            "CloudResourceProperty": "TargetType",
            "CloudReference": "AWS::Config::RemediationConfiguration.TargetType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Config::RemediationConfiguration.TargetVersion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Config::RemediationConfiguration",
            "CloudResourceProperty": "TargetVersion",
            "CloudReference": "AWS::Config::RemediationConfiguration.TargetVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DataPipeline::Pipeline": {
            "Activate": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DataPipeline::Pipeline",
                "CloudResourceProperty": "Activate",
                "CloudReference": "AWS::DataPipeline::Pipeline.Activate",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "1024",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DataPipeline::Pipeline",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::DataPipeline::Pipeline.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\n\\t]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DataPipeline::Pipeline",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::DataPipeline::Pipeline.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ParameterObjects": {
                "Required": "Yes",
                "Type": "List of [ParameterObject",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DataPipeline::Pipeline",
                "CloudResourceProperty": "ParameterObjects",
                "CloudReference": "AWS::DataPipeline::Pipeline.ParameterObjects",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "ParameterValues": {
                "Required": "No",
                "Type": "List of [ParameterValue",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DataPipeline::Pipeline",
                "CloudResourceProperty": "ParameterValues",
                "CloudReference": "AWS::DataPipeline::Pipeline.ParameterValues",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "PipelineObjects": {},
            "PipelineTags": {}
        },
        "AWS::DataPipeline::Pipeline.Activate": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DataPipeline::Pipeline",
            "CloudResourceProperty": "Activate",
            "CloudReference": "AWS::DataPipeline::Pipeline.Activate",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DataPipeline::Pipeline.Description": {
            "Required": "No",
            "Type": "String",
            "Minimum": "0",
            "Maximum": "1024",
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DataPipeline::Pipeline",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::DataPipeline::Pipeline.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DataPipeline::Pipeline.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "1024",
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\n\\t]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DataPipeline::Pipeline",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::DataPipeline::Pipeline.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DataPipeline::Pipeline.ParameterObjects": {
            "Required": "Yes",
            "Type": "List of [ParameterObject",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DataPipeline::Pipeline",
            "CloudResourceProperty": "ParameterObjects",
            "CloudReference": "AWS::DataPipeline::Pipeline.ParameterObjects",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DataPipeline::Pipeline.ParameterValues": {
            "Required": "No",
            "Type": "List of [ParameterValue",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DataPipeline::Pipeline",
            "CloudResourceProperty": "ParameterValues",
            "CloudReference": "AWS::DataPipeline::Pipeline.ParameterValues",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DAX::Cluster": {
            "AvailabilityZones": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "ClusterName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "IAMRoleARN": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "NodeType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "NotificationTopicARN": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ParameterGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PreferredMaintenanceWindow": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ReplicationFactor": {},
            "SSESpecification": {
                "Required": "No",
                "Type": "SSESpecification",
                "UpdateRequires": "Replacement"
            },
            "SecurityGroupIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "SubnetGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Tags": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::DAX::ParameterGroup": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DAX::ParameterGroup",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::DAX::ParameterGroup.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ParameterGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DAX::ParameterGroup",
                "CloudResourceProperty": "ParameterGroupName",
                "CloudReference": "AWS::DAX::ParameterGroup.ParameterGroupName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ParameterNameValues": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DAX::ParameterGroup",
                "CloudResourceProperty": "ParameterNameValues",
                "CloudReference": "AWS::DAX::ParameterGroup.ParameterNameValues",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::DAX::ParameterGroup.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DAX::ParameterGroup",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::DAX::ParameterGroup.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DAX::ParameterGroup.ParameterGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DAX::ParameterGroup",
            "CloudResourceProperty": "ParameterGroupName",
            "CloudReference": "AWS::DAX::ParameterGroup.ParameterGroupName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DAX::ParameterGroup.ParameterNameValues": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DAX::ParameterGroup",
            "CloudResourceProperty": "ParameterNameValues",
            "CloudReference": "AWS::DAX::ParameterGroup.ParameterNameValues",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DAX::SubnetGroup": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DAX::SubnetGroup",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::DAX::SubnetGroup.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SubnetGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DAX::SubnetGroup",
                "CloudResourceProperty": "SubnetGroupName",
                "CloudReference": "AWS::DAX::SubnetGroup.SubnetGroupName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SubnetIds": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::DAX::SubnetGroup.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DAX::SubnetGroup",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::DAX::SubnetGroup.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DAX::SubnetGroup.SubnetGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DAX::SubnetGroup",
            "CloudResourceProperty": "SubnetGroupName",
            "CloudReference": "AWS::DAX::SubnetGroup.SubnetGroupName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DirectoryService::MicrosoftAD": {
            "CreateAlias": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DirectoryService::MicrosoftAD",
                "CloudResourceProperty": "CreateAlias",
                "CloudReference": "AWS::DirectoryService::MicrosoftAD.CreateAlias",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Edition": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Enterprise",
                    "Standard"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DirectoryService::MicrosoftAD",
                "CloudResourceProperty": "Edition",
                "CloudReference": "AWS::DirectoryService::MicrosoftAD.Edition",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EnableSso": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DirectoryService::MicrosoftAD",
                "CloudResourceProperty": "EnableSso",
                "CloudReference": "AWS::DirectoryService::MicrosoftAD.EnableSso",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^([a-zA-Z0-9]+[\\\\.-])+([a-zA-Z0-9])+$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DirectoryService::MicrosoftAD",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::DirectoryService::MicrosoftAD.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Password": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "(?=^.{8,64}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9\\s])(?=.*[a-z])|(?=.*[^A-Za-z0-9\\s])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\\s]))^.*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DirectoryService::MicrosoftAD",
                "CloudResourceProperty": "Password",
                "CloudReference": "AWS::DirectoryService::MicrosoftAD.Password",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ShortName": {
                "Required": "No",
                "Type": "String",
                "Pattern": "^[^\\\\/:*?\\\"\\<\\>|.]+[^\\\\/:*?\\\"<>|]*$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DirectoryService::MicrosoftAD",
                "CloudResourceProperty": "ShortName",
                "CloudReference": "AWS::DirectoryService::MicrosoftAD.ShortName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "VpcSettings": {
                "Required": "Yes",
                "Type": "VpcSettings",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DirectoryService::MicrosoftAD",
                "CloudResourceProperty": "VpcSettings",
                "CloudReference": "AWS::DirectoryService::MicrosoftAD.VpcSettings",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "SubnetIds": {
                        "Required": "Yes",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    },
                    "VpcId": {
                        "Required": "Yes",
                        "Type": "String",
                        "Pattern": "^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::DirectoryService::MicrosoftAD.CreateAlias": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DirectoryService::MicrosoftAD",
            "CloudResourceProperty": "CreateAlias",
            "CloudReference": "AWS::DirectoryService::MicrosoftAD.CreateAlias",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DirectoryService::MicrosoftAD.Edition": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "Enterprise",
                "Standard"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DirectoryService::MicrosoftAD",
            "CloudResourceProperty": "Edition",
            "CloudReference": "AWS::DirectoryService::MicrosoftAD.Edition",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DirectoryService::MicrosoftAD.EnableSso": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DirectoryService::MicrosoftAD",
            "CloudResourceProperty": "EnableSso",
            "CloudReference": "AWS::DirectoryService::MicrosoftAD.EnableSso",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DirectoryService::MicrosoftAD.Name": {
            "Required": "Yes",
            "Type": "String",
            "Pattern": "^([a-zA-Z0-9]+[\\\\.-])+([a-zA-Z0-9])+$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DirectoryService::MicrosoftAD",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::DirectoryService::MicrosoftAD.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DirectoryService::MicrosoftAD.Password": {
            "Required": "Yes",
            "Type": "String",
            "Pattern": "(?=^.{8,64}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9\\s])(?=.*[a-z])|(?=.*[^A-Za-z0-9\\s])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\\s]))^.*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DirectoryService::MicrosoftAD",
            "CloudResourceProperty": "Password",
            "CloudReference": "AWS::DirectoryService::MicrosoftAD.Password",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DirectoryService::MicrosoftAD.ShortName": {
            "Required": "No",
            "Type": "String",
            "Pattern": "^[^\\\\/:*?\\\"\\<\\>|.]+[^\\\\/:*?\\\"<>|]*$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DirectoryService::MicrosoftAD",
            "CloudResourceProperty": "ShortName",
            "CloudReference": "AWS::DirectoryService::MicrosoftAD.ShortName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DirectoryService::MicrosoftAD.VpcSettings": {
            "Required": "Yes",
            "Type": "VpcSettings",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DirectoryService::MicrosoftAD",
            "CloudResourceProperty": "VpcSettings",
            "CloudReference": "AWS::DirectoryService::MicrosoftAD.VpcSettings",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "SubnetIds": {
                    "Required": "Yes",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                },
                "VpcId": {
                    "Required": "Yes",
                    "Type": "String",
                    "Pattern": "^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::DirectoryService::SimpleAD": {
            "CreateAlias": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DirectoryService::SimpleAD",
                "CloudResourceProperty": "CreateAlias",
                "CloudReference": "AWS::DirectoryService::SimpleAD.CreateAlias",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "128",
                "Pattern": "^([a-zA-Z0-9_])[\\\\a-zA-Z0-9_@#%*+=:?./!\\s-]*$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DirectoryService::SimpleAD",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::DirectoryService::SimpleAD.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EnableSso": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DirectoryService::SimpleAD",
                "CloudResourceProperty": "EnableSso",
                "CloudReference": "AWS::DirectoryService::SimpleAD.EnableSso",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^([a-zA-Z0-9]+[\\\\.-])+([a-zA-Z0-9])+$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DirectoryService::SimpleAD",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::DirectoryService::SimpleAD.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Password": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "(?=^.{8,64}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9\\s])(?=.*[a-z])|(?=.*[^A-Za-z0-9\\s])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\\s]))^.*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DirectoryService::SimpleAD",
                "CloudResourceProperty": "Password",
                "CloudReference": "AWS::DirectoryService::SimpleAD.Password",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ShortName": {
                "Required": "No",
                "Type": "String",
                "Pattern": "^[^\\\\/:*?\\\"\\<\\>|.]+[^\\\\/:*?\\\"<>|]*$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DirectoryService::SimpleAD",
                "CloudResourceProperty": "ShortName",
                "CloudReference": "AWS::DirectoryService::SimpleAD.ShortName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Size": {},
            "VpcSettings": {
                "Required": "Yes",
                "Type": "VpcSettings",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DirectoryService::SimpleAD",
                "CloudResourceProperty": "VpcSettings",
                "CloudReference": "AWS::DirectoryService::SimpleAD.VpcSettings",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "SubnetIds": {
                        "Required": "Yes",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    },
                    "VpcId": {
                        "Required": "Yes",
                        "Type": "String",
                        "Pattern": "^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::DirectoryService::SimpleAD.CreateAlias": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DirectoryService::SimpleAD",
            "CloudResourceProperty": "CreateAlias",
            "CloudReference": "AWS::DirectoryService::SimpleAD.CreateAlias",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DirectoryService::SimpleAD.Description": {
            "Required": "No",
            "Type": "String",
            "Minimum": "0",
            "Maximum": "128",
            "Pattern": "^([a-zA-Z0-9_])[\\\\a-zA-Z0-9_@#%*+=:?./!\\s-]*$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DirectoryService::SimpleAD",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::DirectoryService::SimpleAD.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DirectoryService::SimpleAD.EnableSso": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DirectoryService::SimpleAD",
            "CloudResourceProperty": "EnableSso",
            "CloudReference": "AWS::DirectoryService::SimpleAD.EnableSso",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DirectoryService::SimpleAD.Name": {
            "Required": "Yes",
            "Type": "String",
            "Pattern": "^([a-zA-Z0-9]+[\\\\.-])+([a-zA-Z0-9])+$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DirectoryService::SimpleAD",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::DirectoryService::SimpleAD.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DirectoryService::SimpleAD.Password": {
            "Required": "Yes",
            "Type": "String",
            "Pattern": "(?=^.{8,64}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9\\s])(?=.*[a-z])|(?=.*[^A-Za-z0-9\\s])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\\s]))^.*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DirectoryService::SimpleAD",
            "CloudResourceProperty": "Password",
            "CloudReference": "AWS::DirectoryService::SimpleAD.Password",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DirectoryService::SimpleAD.ShortName": {
            "Required": "No",
            "Type": "String",
            "Pattern": "^[^\\\\/:*?\\\"\\<\\>|.]+[^\\\\/:*?\\\"<>|]*$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DirectoryService::SimpleAD",
            "CloudResourceProperty": "ShortName",
            "CloudReference": "AWS::DirectoryService::SimpleAD.ShortName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DirectoryService::SimpleAD.VpcSettings": {
            "Required": "Yes",
            "Type": "VpcSettings",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DirectoryService::SimpleAD",
            "CloudResourceProperty": "VpcSettings",
            "CloudReference": "AWS::DirectoryService::SimpleAD.VpcSettings",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "SubnetIds": {
                    "Required": "Yes",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                },
                "VpcId": {
                    "Required": "Yes",
                    "Type": "String",
                    "Pattern": "^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::DLM::LifecyclePolicy": {
            "Description": {
                "Required": "Conditional",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "500",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DLM::LifecyclePolicy",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::DLM::LifecyclePolicy.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ExecutionRoleArn": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DLM::LifecyclePolicy",
                "CloudResourceProperty": "ExecutionRoleArn",
                "CloudReference": "AWS::DLM::LifecyclePolicy.ExecutionRoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PolicyDetails": {
                "Required": "Conditional",
                "Type": "PolicyDetails",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DLM::LifecyclePolicy",
                "CloudResourceProperty": "PolicyDetails",
                "CloudReference": "AWS::DLM::LifecyclePolicy.PolicyDetails",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ResourceTypes": {
                        "Required": "Yes",
                        "Type": "List of String",
                        "Maximum": "1",
                        "UpdateRequires": "No interruption"
                    },
                    "Schedules": {
                        "Required": "No",
                        "Type": "List of [Schedule",
                        "Maximum": "1",
                        "UpdateRequires": "No interruption"
                    },
                    "TargetTags": {
                        "Required": "No",
                        "Type": "List of [Tag",
                        "Maximum": "50",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "State": {
                "Required": "Conditional",
                "Type": "String",
                "AllowedValues": [
                    "DISABLED",
                    "ENABLED",
                    "ERROR"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DLM::LifecyclePolicy",
                "CloudResourceProperty": "State",
                "CloudReference": "AWS::DLM::LifecyclePolicy.State",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::DLM::LifecyclePolicy.Description": {
            "Required": "Conditional",
            "Type": "String",
            "Minimum": "0",
            "Maximum": "500",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DLM::LifecyclePolicy",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::DLM::LifecyclePolicy.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DLM::LifecyclePolicy.ExecutionRoleArn": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DLM::LifecyclePolicy",
            "CloudResourceProperty": "ExecutionRoleArn",
            "CloudReference": "AWS::DLM::LifecyclePolicy.ExecutionRoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DLM::LifecyclePolicy.PolicyDetails": {
            "Required": "Conditional",
            "Type": "PolicyDetails",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DLM::LifecyclePolicy",
            "CloudResourceProperty": "PolicyDetails",
            "CloudReference": "AWS::DLM::LifecyclePolicy.PolicyDetails",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ResourceTypes": {
                    "Required": "Yes",
                    "Type": "List of String",
                    "Maximum": "1",
                    "UpdateRequires": "No interruption"
                },
                "Schedules": {
                    "Required": "No",
                    "Type": "List of [Schedule",
                    "Maximum": "1",
                    "UpdateRequires": "No interruption"
                },
                "TargetTags": {
                    "Required": "No",
                    "Type": "List of [Tag",
                    "Maximum": "50",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::DLM::LifecyclePolicy.State": {
            "Required": "Conditional",
            "Type": "String",
            "AllowedValues": [
                "DISABLED",
                "ENABLED",
                "ERROR"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DLM::LifecyclePolicy",
            "CloudResourceProperty": "State",
            "CloudReference": "AWS::DLM::LifecyclePolicy.State",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::Certificate": {
            "CertificateIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DMS::Certificate",
                "CloudResourceProperty": "CertificateIdentifier",
                "CloudReference": "AWS::DMS::Certificate.CertificateIdentifier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CertificatePem": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DMS::Certificate",
                "CloudResourceProperty": "CertificatePem",
                "CloudReference": "AWS::DMS::Certificate.CertificatePem",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CertificateWallet": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DMS::Certificate",
                "CloudResourceProperty": "CertificateWallet",
                "CloudReference": "AWS::DMS::Certificate.CertificateWallet",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::DMS::Certificate.CertificateIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DMS::Certificate",
            "CloudResourceProperty": "CertificateIdentifier",
            "CloudReference": "AWS::DMS::Certificate.CertificateIdentifier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::Certificate.CertificatePem": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DMS::Certificate",
            "CloudResourceProperty": "CertificatePem",
            "CloudReference": "AWS::DMS::Certificate.CertificatePem",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::Certificate.CertificateWallet": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DMS::Certificate",
            "CloudResourceProperty": "CertificateWallet",
            "CloudReference": "AWS::DMS::Certificate.CertificateWallet",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::Endpoint": {
            "CertificateArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::Endpoint",
                "CloudResourceProperty": "CertificateArn",
                "CloudReference": "AWS::DMS::Endpoint.CertificateArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DatabaseName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::Endpoint",
                "CloudResourceProperty": "DatabaseName",
                "CloudReference": "AWS::DMS::Endpoint.DatabaseName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DynamoDbSettings": {},
            "ElasticsearchSettings": {},
            "EndpointIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::Endpoint",
                "CloudResourceProperty": "EndpointIdentifier",
                "CloudReference": "AWS::DMS::Endpoint.EndpointIdentifier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EndpointType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "source",
                    "target"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::Endpoint",
                "CloudResourceProperty": "EndpointType",
                "CloudReference": "AWS::DMS::Endpoint.EndpointType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EngineName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::Endpoint",
                "CloudResourceProperty": "EngineName",
                "CloudReference": "AWS::DMS::Endpoint.EngineName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ExtraConnectionAttributes": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::Endpoint",
                "CloudResourceProperty": "ExtraConnectionAttributes",
                "CloudReference": "AWS::DMS::Endpoint.ExtraConnectionAttributes",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "KinesisSettings": {},
            "KmsKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DMS::Endpoint",
                "CloudResourceProperty": "KmsKeyId",
                "CloudReference": "AWS::DMS::Endpoint.KmsKeyId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MongoDbSettings": {},
            "Password": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::Endpoint",
                "CloudResourceProperty": "Password",
                "CloudReference": "AWS::DMS::Endpoint.Password",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Port": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::Endpoint",
                "CloudResourceProperty": "Port",
                "CloudReference": "AWS::DMS::Endpoint.Port",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "S3Settings": {},
            "ServerName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::Endpoint",
                "CloudResourceProperty": "ServerName",
                "CloudReference": "AWS::DMS::Endpoint.ServerName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SslMode": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "none",
                    "require",
                    "verify-ca",
                    "verify-full"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::Endpoint",
                "CloudResourceProperty": "SslMode",
                "CloudReference": "AWS::DMS::Endpoint.SslMode",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DMS::Endpoint",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::DMS::Endpoint.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "Username": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::Endpoint",
                "CloudResourceProperty": "Username",
                "CloudReference": "AWS::DMS::Endpoint.Username",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::DMS::Endpoint.CertificateArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::Endpoint",
            "CloudResourceProperty": "CertificateArn",
            "CloudReference": "AWS::DMS::Endpoint.CertificateArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::Endpoint.DatabaseName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::Endpoint",
            "CloudResourceProperty": "DatabaseName",
            "CloudReference": "AWS::DMS::Endpoint.DatabaseName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::Endpoint.EndpointIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::Endpoint",
            "CloudResourceProperty": "EndpointIdentifier",
            "CloudReference": "AWS::DMS::Endpoint.EndpointIdentifier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::Endpoint.EndpointType": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "source",
                "target"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::Endpoint",
            "CloudResourceProperty": "EndpointType",
            "CloudReference": "AWS::DMS::Endpoint.EndpointType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::Endpoint.EngineName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::Endpoint",
            "CloudResourceProperty": "EngineName",
            "CloudReference": "AWS::DMS::Endpoint.EngineName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::Endpoint.ExtraConnectionAttributes": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::Endpoint",
            "CloudResourceProperty": "ExtraConnectionAttributes",
            "CloudReference": "AWS::DMS::Endpoint.ExtraConnectionAttributes",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::Endpoint.KmsKeyId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DMS::Endpoint",
            "CloudResourceProperty": "KmsKeyId",
            "CloudReference": "AWS::DMS::Endpoint.KmsKeyId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::Endpoint.Password": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::Endpoint",
            "CloudResourceProperty": "Password",
            "CloudReference": "AWS::DMS::Endpoint.Password",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::Endpoint.Port": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::Endpoint",
            "CloudResourceProperty": "Port",
            "CloudReference": "AWS::DMS::Endpoint.Port",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::Endpoint.ServerName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::Endpoint",
            "CloudResourceProperty": "ServerName",
            "CloudReference": "AWS::DMS::Endpoint.ServerName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::Endpoint.SslMode": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "none",
                "require",
                "verify-ca",
                "verify-full"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::Endpoint",
            "CloudResourceProperty": "SslMode",
            "CloudReference": "AWS::DMS::Endpoint.SslMode",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::Endpoint.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DMS::Endpoint",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::DMS::Endpoint.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::Endpoint.Username": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::Endpoint",
            "CloudResourceProperty": "Username",
            "CloudReference": "AWS::DMS::Endpoint.Username",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::EventSubscription": {
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::EventSubscription",
                "CloudResourceProperty": "Enabled",
                "CloudReference": "AWS::DMS::EventSubscription.Enabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EventCategories": {},
            "SnsTopicArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::EventSubscription",
                "CloudResourceProperty": "SnsTopicArn",
                "CloudReference": "AWS::DMS::EventSubscription.SnsTopicArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SourceIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "SourceType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SubscriptionName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "Replacement"
            }
        },
        "AWS::DMS::EventSubscription.Enabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::EventSubscription",
            "CloudResourceProperty": "Enabled",
            "CloudReference": "AWS::DMS::EventSubscription.Enabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::EventSubscription.SnsTopicArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::EventSubscription",
            "CloudResourceProperty": "SnsTopicArn",
            "CloudReference": "AWS::DMS::EventSubscription.SnsTopicArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationInstance": {
            "AllocatedStorage": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::ReplicationInstance",
                "CloudResourceProperty": "AllocatedStorage",
                "CloudReference": "AWS::DMS::ReplicationInstance.AllocatedStorage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AllowMajorVersionUpgrade": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::ReplicationInstance",
                "CloudResourceProperty": "AllowMajorVersionUpgrade",
                "CloudReference": "AWS::DMS::ReplicationInstance.AllowMajorVersionUpgrade",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AutoMinorVersionUpgrade": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::ReplicationInstance",
                "CloudResourceProperty": "AutoMinorVersionUpgrade",
                "CloudReference": "AWS::DMS::ReplicationInstance.AutoMinorVersionUpgrade",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AvailabilityZone": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DMS::ReplicationInstance",
                "CloudResourceProperty": "AvailabilityZone",
                "CloudReference": "AWS::DMS::ReplicationInstance.AvailabilityZone",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EngineVersion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::ReplicationInstance",
                "CloudResourceProperty": "EngineVersion",
                "CloudReference": "AWS::DMS::ReplicationInstance.EngineVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "KmsKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DMS::ReplicationInstance",
                "CloudResourceProperty": "KmsKeyId",
                "CloudReference": "AWS::DMS::ReplicationInstance.KmsKeyId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MultiAZ": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::ReplicationInstance",
                "CloudResourceProperty": "MultiAZ",
                "CloudReference": "AWS::DMS::ReplicationInstance.MultiAZ",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PreferredMaintenanceWindow": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::ReplicationInstance",
                "CloudResourceProperty": "PreferredMaintenanceWindow",
                "CloudReference": "AWS::DMS::ReplicationInstance.PreferredMaintenanceWindow",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PubliclyAccessible": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DMS::ReplicationInstance",
                "CloudResourceProperty": "PubliclyAccessible",
                "CloudReference": "AWS::DMS::ReplicationInstance.PubliclyAccessible",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ReplicationInstanceClass": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::ReplicationInstance",
                "CloudResourceProperty": "ReplicationInstanceClass",
                "CloudReference": "AWS::DMS::ReplicationInstance.ReplicationInstanceClass",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ReplicationInstanceIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::ReplicationInstance",
                "CloudResourceProperty": "ReplicationInstanceIdentifier",
                "CloudReference": "AWS::DMS::ReplicationInstance.ReplicationInstanceIdentifier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ReplicationSubnetGroupIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DMS::ReplicationInstance",
                "CloudResourceProperty": "ReplicationSubnetGroupIdentifier",
                "CloudReference": "AWS::DMS::ReplicationInstance.ReplicationSubnetGroupIdentifier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DMS::ReplicationInstance",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::DMS::ReplicationInstance.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "VpcSecurityGroupIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::DMS::ReplicationInstance.AllocatedStorage": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::ReplicationInstance",
            "CloudResourceProperty": "AllocatedStorage",
            "CloudReference": "AWS::DMS::ReplicationInstance.AllocatedStorage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationInstance.AllowMajorVersionUpgrade": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::ReplicationInstance",
            "CloudResourceProperty": "AllowMajorVersionUpgrade",
            "CloudReference": "AWS::DMS::ReplicationInstance.AllowMajorVersionUpgrade",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationInstance.AutoMinorVersionUpgrade": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::ReplicationInstance",
            "CloudResourceProperty": "AutoMinorVersionUpgrade",
            "CloudReference": "AWS::DMS::ReplicationInstance.AutoMinorVersionUpgrade",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationInstance.AvailabilityZone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DMS::ReplicationInstance",
            "CloudResourceProperty": "AvailabilityZone",
            "CloudReference": "AWS::DMS::ReplicationInstance.AvailabilityZone",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationInstance.EngineVersion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::ReplicationInstance",
            "CloudResourceProperty": "EngineVersion",
            "CloudReference": "AWS::DMS::ReplicationInstance.EngineVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationInstance.KmsKeyId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DMS::ReplicationInstance",
            "CloudResourceProperty": "KmsKeyId",
            "CloudReference": "AWS::DMS::ReplicationInstance.KmsKeyId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationInstance.MultiAZ": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::ReplicationInstance",
            "CloudResourceProperty": "MultiAZ",
            "CloudReference": "AWS::DMS::ReplicationInstance.MultiAZ",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationInstance.PreferredMaintenanceWindow": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::ReplicationInstance",
            "CloudResourceProperty": "PreferredMaintenanceWindow",
            "CloudReference": "AWS::DMS::ReplicationInstance.PreferredMaintenanceWindow",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationInstance.PubliclyAccessible": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DMS::ReplicationInstance",
            "CloudResourceProperty": "PubliclyAccessible",
            "CloudReference": "AWS::DMS::ReplicationInstance.PubliclyAccessible",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationInstance.ReplicationInstanceClass": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::ReplicationInstance",
            "CloudResourceProperty": "ReplicationInstanceClass",
            "CloudReference": "AWS::DMS::ReplicationInstance.ReplicationInstanceClass",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationInstance.ReplicationInstanceIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::ReplicationInstance",
            "CloudResourceProperty": "ReplicationInstanceIdentifier",
            "CloudReference": "AWS::DMS::ReplicationInstance.ReplicationInstanceIdentifier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationInstance.ReplicationSubnetGroupIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DMS::ReplicationInstance",
            "CloudResourceProperty": "ReplicationSubnetGroupIdentifier",
            "CloudReference": "AWS::DMS::ReplicationInstance.ReplicationSubnetGroupIdentifier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationInstance.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DMS::ReplicationInstance",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::DMS::ReplicationInstance.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationSubnetGroup": {
            "ReplicationSubnetGroupDescription": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::ReplicationSubnetGroup",
                "CloudResourceProperty": "ReplicationSubnetGroupDescription",
                "CloudReference": "AWS::DMS::ReplicationSubnetGroup.ReplicationSubnetGroupDescription",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ReplicationSubnetGroupIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DMS::ReplicationSubnetGroup",
                "CloudResourceProperty": "ReplicationSubnetGroupIdentifier",
                "CloudReference": "AWS::DMS::ReplicationSubnetGroup.ReplicationSubnetGroupIdentifier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SubnetIds": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "Replacement"
            }
        },
        "AWS::DMS::ReplicationSubnetGroup.ReplicationSubnetGroupDescription": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::ReplicationSubnetGroup",
            "CloudResourceProperty": "ReplicationSubnetGroupDescription",
            "CloudReference": "AWS::DMS::ReplicationSubnetGroup.ReplicationSubnetGroupDescription",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationSubnetGroup.ReplicationSubnetGroupIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DMS::ReplicationSubnetGroup",
            "CloudResourceProperty": "ReplicationSubnetGroupIdentifier",
            "CloudReference": "AWS::DMS::ReplicationSubnetGroup.ReplicationSubnetGroupIdentifier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationTask": {
            "CdcStartPosition": {},
            "CdcStartTime": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::ReplicationTask",
                "CloudResourceProperty": "CdcStartTime",
                "CloudReference": "AWS::DMS::ReplicationTask.CdcStartTime",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CdcStopPosition": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::ReplicationTask",
                "CloudResourceProperty": "CdcStopPosition",
                "CloudReference": "AWS::DMS::ReplicationTask.CdcStopPosition",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MigrationType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "cdc",
                    "full-load",
                    "full-load-and-cdc"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::ReplicationTask",
                "CloudResourceProperty": "MigrationType",
                "CloudReference": "AWS::DMS::ReplicationTask.MigrationType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ReplicationInstanceArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DMS::ReplicationTask",
                "CloudResourceProperty": "ReplicationInstanceArn",
                "CloudReference": "AWS::DMS::ReplicationTask.ReplicationInstanceArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ReplicationTaskIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DMS::ReplicationTask",
                "CloudResourceProperty": "ReplicationTaskIdentifier",
                "CloudReference": "AWS::DMS::ReplicationTask.ReplicationTaskIdentifier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ReplicationTaskSettings": {},
            "SourceEndpointArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DMS::ReplicationTask",
                "CloudResourceProperty": "SourceEndpointArn",
                "CloudReference": "AWS::DMS::ReplicationTask.SourceEndpointArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TableMappings": {},
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DMS::ReplicationTask",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::DMS::ReplicationTask.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "TargetEndpointArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DMS::ReplicationTask",
                "CloudResourceProperty": "TargetEndpointArn",
                "CloudReference": "AWS::DMS::ReplicationTask.TargetEndpointArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::DMS::ReplicationTask.CdcStartTime": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::ReplicationTask",
            "CloudResourceProperty": "CdcStartTime",
            "CloudReference": "AWS::DMS::ReplicationTask.CdcStartTime",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationTask.CdcStopPosition": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::ReplicationTask",
            "CloudResourceProperty": "CdcStopPosition",
            "CloudReference": "AWS::DMS::ReplicationTask.CdcStopPosition",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationTask.MigrationType": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "cdc",
                "full-load",
                "full-load-and-cdc"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::ReplicationTask",
            "CloudResourceProperty": "MigrationType",
            "CloudReference": "AWS::DMS::ReplicationTask.MigrationType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationTask.ReplicationInstanceArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DMS::ReplicationTask",
            "CloudResourceProperty": "ReplicationInstanceArn",
            "CloudReference": "AWS::DMS::ReplicationTask.ReplicationInstanceArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationTask.ReplicationTaskIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DMS::ReplicationTask",
            "CloudResourceProperty": "ReplicationTaskIdentifier",
            "CloudReference": "AWS::DMS::ReplicationTask.ReplicationTaskIdentifier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationTask.SourceEndpointArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DMS::ReplicationTask",
            "CloudResourceProperty": "SourceEndpointArn",
            "CloudReference": "AWS::DMS::ReplicationTask.SourceEndpointArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationTask.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DMS::ReplicationTask",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::DMS::ReplicationTask.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DMS::ReplicationTask.TargetEndpointArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DMS::ReplicationTask",
            "CloudResourceProperty": "TargetEndpointArn",
            "CloudReference": "AWS::DMS::ReplicationTask.TargetEndpointArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DocDB::DBCluster": {
            "AvailabilityZones": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "BackupRetentionPeriod": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "DBClusterIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "DBClusterParameterGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DBSubnetGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "EngineVersion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "KmsKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "MasterUserPassword": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MasterUsername": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Port": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "PreferredBackupWindow": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PreferredMaintenanceWindow": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SnapshotIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "StorageEncrypted": {
                "Required": "Conditional",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            },
            "VpcSecurityGroupIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::DocDB::DBClusterParameterGroup": {
            "Description": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DocDB::DBClusterParameterGroup",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::DocDB::DBClusterParameterGroup.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Family": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DocDB::DBClusterParameterGroup",
                "CloudResourceProperty": "Family",
                "CloudReference": "AWS::DocDB::DBClusterParameterGroup.Family",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DocDB::DBClusterParameterGroup",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::DocDB::DBClusterParameterGroup.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Parameters": {
                "Required": "Yes",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DocDB::DBClusterParameterGroup",
                "CloudResourceProperty": "Parameters",
                "CloudReference": "AWS::DocDB::DBClusterParameterGroup.Parameters",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DocDB::DBClusterParameterGroup",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::DocDB::DBClusterParameterGroup.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::DocDB::DBClusterParameterGroup.Description": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DocDB::DBClusterParameterGroup",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::DocDB::DBClusterParameterGroup.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DocDB::DBClusterParameterGroup.Family": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DocDB::DBClusterParameterGroup",
            "CloudResourceProperty": "Family",
            "CloudReference": "AWS::DocDB::DBClusterParameterGroup.Family",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DocDB::DBClusterParameterGroup.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DocDB::DBClusterParameterGroup",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::DocDB::DBClusterParameterGroup.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DocDB::DBClusterParameterGroup.Parameters": {
            "Required": "Yes",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DocDB::DBClusterParameterGroup",
            "CloudResourceProperty": "Parameters",
            "CloudReference": "AWS::DocDB::DBClusterParameterGroup.Parameters",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DocDB::DBClusterParameterGroup.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DocDB::DBClusterParameterGroup",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::DocDB::DBClusterParameterGroup.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DocDB::DBInstance": {
            "AutoMinorVersionUpgrade": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DocDB::DBInstance",
                "CloudResourceProperty": "AutoMinorVersionUpgrade",
                "CloudReference": "AWS::DocDB::DBInstance.AutoMinorVersionUpgrade",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AvailabilityZone": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DocDB::DBInstance",
                "CloudResourceProperty": "AvailabilityZone",
                "CloudReference": "AWS::DocDB::DBInstance.AvailabilityZone",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DBClusterIdentifier": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DocDB::DBInstance",
                "CloudResourceProperty": "DBClusterIdentifier",
                "CloudReference": "AWS::DocDB::DBInstance.DBClusterIdentifier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DBInstanceClass": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DocDB::DBInstance",
                "CloudResourceProperty": "DBInstanceClass",
                "CloudReference": "AWS::DocDB::DBInstance.DBInstanceClass",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DBInstanceIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DocDB::DBInstance",
                "CloudResourceProperty": "DBInstanceIdentifier",
                "CloudReference": "AWS::DocDB::DBInstance.DBInstanceIdentifier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PreferredMaintenanceWindow": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DocDB::DBInstance",
                "CloudResourceProperty": "PreferredMaintenanceWindow",
                "CloudReference": "AWS::DocDB::DBInstance.PreferredMaintenanceWindow",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DocDB::DBInstance",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::DocDB::DBInstance.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::DocDB::DBInstance.AutoMinorVersionUpgrade": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DocDB::DBInstance",
            "CloudResourceProperty": "AutoMinorVersionUpgrade",
            "CloudReference": "AWS::DocDB::DBInstance.AutoMinorVersionUpgrade",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DocDB::DBInstance.AvailabilityZone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DocDB::DBInstance",
            "CloudResourceProperty": "AvailabilityZone",
            "CloudReference": "AWS::DocDB::DBInstance.AvailabilityZone",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DocDB::DBInstance.DBClusterIdentifier": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DocDB::DBInstance",
            "CloudResourceProperty": "DBClusterIdentifier",
            "CloudReference": "AWS::DocDB::DBInstance.DBClusterIdentifier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DocDB::DBInstance.DBInstanceClass": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DocDB::DBInstance",
            "CloudResourceProperty": "DBInstanceClass",
            "CloudReference": "AWS::DocDB::DBInstance.DBInstanceClass",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DocDB::DBInstance.DBInstanceIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DocDB::DBInstance",
            "CloudResourceProperty": "DBInstanceIdentifier",
            "CloudReference": "AWS::DocDB::DBInstance.DBInstanceIdentifier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DocDB::DBInstance.PreferredMaintenanceWindow": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DocDB::DBInstance",
            "CloudResourceProperty": "PreferredMaintenanceWindow",
            "CloudReference": "AWS::DocDB::DBInstance.PreferredMaintenanceWindow",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DocDB::DBInstance.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DocDB::DBInstance",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::DocDB::DBInstance.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DocDB::DBSubnetGroup": {
            "DBSubnetGroupDescription": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DocDB::DBSubnetGroup",
                "CloudResourceProperty": "DBSubnetGroupDescription",
                "CloudReference": "AWS::DocDB::DBSubnetGroup.DBSubnetGroupDescription",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DBSubnetGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DocDB::DBSubnetGroup",
                "CloudResourceProperty": "DBSubnetGroupName",
                "CloudReference": "AWS::DocDB::DBSubnetGroup.DBSubnetGroupName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SubnetIds": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::DocDB::DBSubnetGroup.DBSubnetGroupDescription": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DocDB::DBSubnetGroup",
            "CloudResourceProperty": "DBSubnetGroupDescription",
            "CloudReference": "AWS::DocDB::DBSubnetGroup.DBSubnetGroupDescription",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DocDB::DBSubnetGroup.DBSubnetGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DocDB::DBSubnetGroup",
            "CloudResourceProperty": "DBSubnetGroupName",
            "CloudReference": "AWS::DocDB::DBSubnetGroup.DBSubnetGroupName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DynamoDB::Table": {
            "AttributeDefinitions": {
                "Required": "No",
                "Type": "List of [AttributeDefinition",
                "CloudResourceType": "AWS::DynamoDB::Table",
                "CloudResourceProperty": "AttributeDefinitions",
                "CloudReference": "AWS::DynamoDB::Table.AttributeDefinitions",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "BillingMode": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DynamoDB::Table",
                "CloudResourceProperty": "BillingMode",
                "CloudReference": "AWS::DynamoDB::Table.BillingMode",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "GlobalSecondaryIndexes": {
                "Required": "No",
                "Type": "List of [GlobalSecondaryIndex",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DynamoDB::Table",
                "CloudResourceProperty": "GlobalSecondaryIndexes",
                "CloudReference": "AWS::DynamoDB::Table.GlobalSecondaryIndexes",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "KeySchema": {
                "Required": "Yes",
                "Type": "List",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DynamoDB::Table",
                "CloudResourceProperty": "KeySchema",
                "CloudReference": "AWS::DynamoDB::Table.KeySchema",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "LocalSecondaryIndexes": {
                "Required": "No",
                "Type": "List of [LocalSecondaryIndex",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DynamoDB::Table",
                "CloudResourceProperty": "LocalSecondaryIndexes",
                "CloudReference": "AWS::DynamoDB::Table.LocalSecondaryIndexes",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "PointInTimeRecoverySpecification": {
                "Required": "No",
                "Type": "PointInTimeRecoverySpecification",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DynamoDB::Table",
                "CloudResourceProperty": "PointInTimeRecoverySpecification",
                "CloudReference": "AWS::DynamoDB::Table.PointInTimeRecoverySpecification",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "PointInTimeRecoveryEnabled": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "ProvisionedThroughput": {
                "Required": "Conditional",
                "Type": "ProvisionedThroughput",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DynamoDB::Table",
                "CloudResourceProperty": "ProvisionedThroughput",
                "CloudReference": "AWS::DynamoDB::Table.ProvisionedThroughput",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SSESpecification": {
                "Required": "No",
                "Type": "SSESpecification",
                "CloudResourceType": "AWS::DynamoDB::Table",
                "CloudResourceProperty": "SSESpecification",
                "CloudReference": "AWS::DynamoDB::Table.SSESpecification",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "KMSMasterKeyId": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "SSEEnabled": {
                        "Required": "Yes",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "SSEType": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "AES256",
                            "KMS"
                        ],
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "StreamSpecification": {
                "Required": "No",
                "Type": "StreamSpecification",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DynamoDB::Table",
                "CloudResourceProperty": "StreamSpecification",
                "CloudReference": "AWS::DynamoDB::Table.StreamSpecification",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TableName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "255",
                "Pattern": "[a-zA-Z0-9_.-]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::DynamoDB::Table",
                "CloudResourceProperty": "TableName",
                "CloudReference": "AWS::DynamoDB::Table.TableName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DynamoDB::Table",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::DynamoDB::Table.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "TimeToLiveSpecification": {
                "Required": "No",
                "Type": "TimeToLiveSpecification",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::DynamoDB::Table",
                "CloudResourceProperty": "TimeToLiveSpecification",
                "CloudReference": "AWS::DynamoDB::Table.TimeToLiveSpecification",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::DynamoDB::Table.AttributeDefinitions": {
            "Required": "No",
            "Type": "List of [AttributeDefinition",
            "CloudResourceType": "AWS::DynamoDB::Table",
            "CloudResourceProperty": "AttributeDefinitions",
            "CloudReference": "AWS::DynamoDB::Table.AttributeDefinitions",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DynamoDB::Table.BillingMode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DynamoDB::Table",
            "CloudResourceProperty": "BillingMode",
            "CloudReference": "AWS::DynamoDB::Table.BillingMode",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DynamoDB::Table.GlobalSecondaryIndexes": {
            "Required": "No",
            "Type": "List of [GlobalSecondaryIndex",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DynamoDB::Table",
            "CloudResourceProperty": "GlobalSecondaryIndexes",
            "CloudReference": "AWS::DynamoDB::Table.GlobalSecondaryIndexes",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DynamoDB::Table.KeySchema": {
            "Required": "Yes",
            "Type": "List",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DynamoDB::Table",
            "CloudResourceProperty": "KeySchema",
            "CloudReference": "AWS::DynamoDB::Table.KeySchema",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DynamoDB::Table.LocalSecondaryIndexes": {
            "Required": "No",
            "Type": "List of [LocalSecondaryIndex",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DynamoDB::Table",
            "CloudResourceProperty": "LocalSecondaryIndexes",
            "CloudReference": "AWS::DynamoDB::Table.LocalSecondaryIndexes",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DynamoDB::Table.PointInTimeRecoverySpecification": {
            "Required": "No",
            "Type": "PointInTimeRecoverySpecification",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DynamoDB::Table",
            "CloudResourceProperty": "PointInTimeRecoverySpecification",
            "CloudReference": "AWS::DynamoDB::Table.PointInTimeRecoverySpecification",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "PointInTimeRecoveryEnabled": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::DynamoDB::Table.ProvisionedThroughput": {
            "Required": "Conditional",
            "Type": "ProvisionedThroughput",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DynamoDB::Table",
            "CloudResourceProperty": "ProvisionedThroughput",
            "CloudReference": "AWS::DynamoDB::Table.ProvisionedThroughput",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DynamoDB::Table.SSESpecification": {
            "Required": "No",
            "Type": "SSESpecification",
            "CloudResourceType": "AWS::DynamoDB::Table",
            "CloudResourceProperty": "SSESpecification",
            "CloudReference": "AWS::DynamoDB::Table.SSESpecification",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "KMSMasterKeyId": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "SSEEnabled": {
                    "Required": "Yes",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "SSEType": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "AES256",
                        "KMS"
                    ],
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::DynamoDB::Table.StreamSpecification": {
            "Required": "No",
            "Type": "StreamSpecification",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DynamoDB::Table",
            "CloudResourceProperty": "StreamSpecification",
            "CloudReference": "AWS::DynamoDB::Table.StreamSpecification",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DynamoDB::Table.TableName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "3",
            "Maximum": "255",
            "Pattern": "[a-zA-Z0-9_.-]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::DynamoDB::Table",
            "CloudResourceProperty": "TableName",
            "CloudReference": "AWS::DynamoDB::Table.TableName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DynamoDB::Table.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DynamoDB::Table",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::DynamoDB::Table.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::DynamoDB::Table.TimeToLiveSpecification": {
            "Required": "No",
            "Type": "TimeToLiveSpecification",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::DynamoDB::Table",
            "CloudResourceProperty": "TimeToLiveSpecification",
            "CloudReference": "AWS::DynamoDB::Table.TimeToLiveSpecification",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::CapacityReservation": {
            "AvailabilityZone": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::CapacityReservation",
                "CloudResourceProperty": "AvailabilityZone",
                "CloudReference": "AWS::EC2::CapacityReservation.AvailabilityZone",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EbsOptimized": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::CapacityReservation",
                "CloudResourceProperty": "EbsOptimized",
                "CloudReference": "AWS::EC2::CapacityReservation.EbsOptimized",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EndDate": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::CapacityReservation",
                "CloudResourceProperty": "EndDate",
                "CloudReference": "AWS::EC2::CapacityReservation.EndDate",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EndDateType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "limited",
                    "unlimited"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::CapacityReservation",
                "CloudResourceProperty": "EndDateType",
                "CloudReference": "AWS::EC2::CapacityReservation.EndDateType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EphemeralStorage": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::CapacityReservation",
                "CloudResourceProperty": "EphemeralStorage",
                "CloudReference": "AWS::EC2::CapacityReservation.EphemeralStorage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InstanceCount": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::CapacityReservation",
                "CloudResourceProperty": "InstanceCount",
                "CloudReference": "AWS::EC2::CapacityReservation.InstanceCount",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InstanceMatchCriteria": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "open",
                    "targeted"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::CapacityReservation",
                "CloudResourceProperty": "InstanceMatchCriteria",
                "CloudReference": "AWS::EC2::CapacityReservation.InstanceMatchCriteria",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InstancePlatform": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "Linux/UNIX",
                    "Red Hat Enterprise Linux",
                    "SUSE Linux",
                    "Windows",
                    "Windows with SQL Server",
                    "Windows with SQL Server Enterprise",
                    "Windows with SQL Server Standard",
                    "Windows with SQL Server Web"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::CapacityReservation",
                "CloudResourceProperty": "InstancePlatform",
                "CloudReference": "AWS::EC2::CapacityReservation.InstancePlatform",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InstanceType": {},
            "TagSpecifications": {
                "Required": "No",
                "Type": "List of [TagSpecification",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::CapacityReservation",
                "CloudResourceProperty": "TagSpecifications",
                "CloudReference": "AWS::EC2::CapacityReservation.TagSpecifications",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ResourceType": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "client-vpn-endpoint",
                            "customer-gateway",
                            "dedicated-host",
                            "dhcp-options",
                            "elastic-ip",
                            "fleet",
                            "fpga-image",
                            "host-reservation",
                            "image",
                            "instance",
                            "internet-gateway",
                            "launch-template",
                            "natgateway",
                            "network-acl",
                            "network-interface",
                            "reserved-instances",
                            "route-table",
                            "security-group",
                            "snapshot",
                            "spot-instances-request",
                            "subnet",
                            "transit-gateway",
                            "transit-gateway-attachment",
                            "transit-gateway-route-table",
                            "volume",
                            "vpc",
                            "vpc-peering-connection",
                            "vpn-connection",
                            "vpn-gateway"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "Tags": {
                        "Required": "No",
                        "Type": "List of [Tag",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Tenancy": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "dedicated",
                    "default"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::CapacityReservation",
                "CloudResourceProperty": "Tenancy",
                "CloudReference": "AWS::EC2::CapacityReservation.Tenancy",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::CapacityReservation.AvailabilityZone": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::CapacityReservation",
            "CloudResourceProperty": "AvailabilityZone",
            "CloudReference": "AWS::EC2::CapacityReservation.AvailabilityZone",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::CapacityReservation.EbsOptimized": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::CapacityReservation",
            "CloudResourceProperty": "EbsOptimized",
            "CloudReference": "AWS::EC2::CapacityReservation.EbsOptimized",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::CapacityReservation.EndDate": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::CapacityReservation",
            "CloudResourceProperty": "EndDate",
            "CloudReference": "AWS::EC2::CapacityReservation.EndDate",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::CapacityReservation.EndDateType": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "limited",
                "unlimited"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::CapacityReservation",
            "CloudResourceProperty": "EndDateType",
            "CloudReference": "AWS::EC2::CapacityReservation.EndDateType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::CapacityReservation.EphemeralStorage": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::CapacityReservation",
            "CloudResourceProperty": "EphemeralStorage",
            "CloudReference": "AWS::EC2::CapacityReservation.EphemeralStorage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::CapacityReservation.InstanceCount": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::CapacityReservation",
            "CloudResourceProperty": "InstanceCount",
            "CloudReference": "AWS::EC2::CapacityReservation.InstanceCount",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::CapacityReservation.InstanceMatchCriteria": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "open",
                "targeted"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::CapacityReservation",
            "CloudResourceProperty": "InstanceMatchCriteria",
            "CloudReference": "AWS::EC2::CapacityReservation.InstanceMatchCriteria",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::CapacityReservation.InstancePlatform": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "Linux/UNIX",
                "Red Hat Enterprise Linux",
                "SUSE Linux",
                "Windows",
                "Windows with SQL Server",
                "Windows with SQL Server Enterprise",
                "Windows with SQL Server Standard",
                "Windows with SQL Server Web"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::CapacityReservation",
            "CloudResourceProperty": "InstancePlatform",
            "CloudReference": "AWS::EC2::CapacityReservation.InstancePlatform",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::CapacityReservation.TagSpecifications": {
            "Required": "No",
            "Type": "List of [TagSpecification",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::CapacityReservation",
            "CloudResourceProperty": "TagSpecifications",
            "CloudReference": "AWS::EC2::CapacityReservation.TagSpecifications",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ResourceType": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "client-vpn-endpoint",
                        "customer-gateway",
                        "dedicated-host",
                        "dhcp-options",
                        "elastic-ip",
                        "fleet",
                        "fpga-image",
                        "host-reservation",
                        "image",
                        "instance",
                        "internet-gateway",
                        "launch-template",
                        "natgateway",
                        "network-acl",
                        "network-interface",
                        "reserved-instances",
                        "route-table",
                        "security-group",
                        "snapshot",
                        "spot-instances-request",
                        "subnet",
                        "transit-gateway",
                        "transit-gateway-attachment",
                        "transit-gateway-route-table",
                        "volume",
                        "vpc",
                        "vpc-peering-connection",
                        "vpn-connection",
                        "vpn-gateway"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "Tags": {
                    "Required": "No",
                    "Type": "List of [Tag",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::EC2::CapacityReservation.Tenancy": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "dedicated",
                "default"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::CapacityReservation",
            "CloudResourceProperty": "Tenancy",
            "CloudReference": "AWS::EC2::CapacityReservation.Tenancy",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::ClientVpnAuthorizationRule": {
            "AccessGroupId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::ClientVpnAuthorizationRule",
                "CloudResourceProperty": "AccessGroupId",
                "CloudReference": "AWS::EC2::ClientVpnAuthorizationRule.AccessGroupId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AuthorizeAllGroups": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::ClientVpnAuthorizationRule",
                "CloudResourceProperty": "AuthorizeAllGroups",
                "CloudReference": "AWS::EC2::ClientVpnAuthorizationRule.AuthorizeAllGroups",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ClientVpnEndpointId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::ClientVpnAuthorizationRule",
                "CloudResourceProperty": "ClientVpnEndpointId",
                "CloudReference": "AWS::EC2::ClientVpnAuthorizationRule.ClientVpnEndpointId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::ClientVpnAuthorizationRule",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::EC2::ClientVpnAuthorizationRule.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TargetNetworkCidr": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::ClientVpnAuthorizationRule",
                "CloudResourceProperty": "TargetNetworkCidr",
                "CloudReference": "AWS::EC2::ClientVpnAuthorizationRule.TargetNetworkCidr",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::ClientVpnAuthorizationRule.AccessGroupId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::ClientVpnAuthorizationRule",
            "CloudResourceProperty": "AccessGroupId",
            "CloudReference": "AWS::EC2::ClientVpnAuthorizationRule.AccessGroupId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::ClientVpnAuthorizationRule.AuthorizeAllGroups": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::ClientVpnAuthorizationRule",
            "CloudResourceProperty": "AuthorizeAllGroups",
            "CloudReference": "AWS::EC2::ClientVpnAuthorizationRule.AuthorizeAllGroups",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::ClientVpnAuthorizationRule.ClientVpnEndpointId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::ClientVpnAuthorizationRule",
            "CloudResourceProperty": "ClientVpnEndpointId",
            "CloudReference": "AWS::EC2::ClientVpnAuthorizationRule.ClientVpnEndpointId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::ClientVpnAuthorizationRule.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::ClientVpnAuthorizationRule",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::EC2::ClientVpnAuthorizationRule.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::ClientVpnAuthorizationRule.TargetNetworkCidr": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::ClientVpnAuthorizationRule",
            "CloudResourceProperty": "TargetNetworkCidr",
            "CloudReference": "AWS::EC2::ClientVpnAuthorizationRule.TargetNetworkCidr",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::ClientVpnEndpoint": {
            "AuthenticationOptions": {
                "Required": "Yes",
                "Type": "List of [ClientAuthenticationRequest",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::ClientVpnEndpoint",
                "CloudResourceProperty": "AuthenticationOptions",
                "CloudReference": "AWS::EC2::ClientVpnEndpoint.AuthenticationOptions",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ActiveDirectory": {},
                    "MutualAuthentication": {},
                    "Type": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "certificate-authentication",
                            "directory-service-authentication"
                        ],
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "ClientCidrBlock": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::ClientVpnEndpoint",
                "CloudResourceProperty": "ClientCidrBlock",
                "CloudReference": "AWS::EC2::ClientVpnEndpoint.ClientCidrBlock",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ConnectionLogOptions": {
                "Required": "Yes",
                "Type": "ConnectionLogOptions",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::ClientVpnEndpoint",
                "CloudResourceProperty": "ConnectionLogOptions",
                "CloudReference": "AWS::EC2::ClientVpnEndpoint.ConnectionLogOptions",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "CloudwatchLogGroup": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "CloudwatchLogStream": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Enabled": {
                        "Required": "Yes",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::ClientVpnEndpoint",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::EC2::ClientVpnEndpoint.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DnsServers": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "ServerCertificateArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TagSpecifications": {
                "Required": "No",
                "Type": "List of [TagSpecification",
                "UpdateRequires": "Replacement"
            },
            "TransportProtocol": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "tcp",
                    "udp"
                ],
                "UpdateRequires": "Replacement"
            }
        },
        "AWS::EC2::ClientVpnEndpoint.AuthenticationOptions": {
            "Required": "Yes",
            "Type": "List of [ClientAuthenticationRequest",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::ClientVpnEndpoint",
            "CloudResourceProperty": "AuthenticationOptions",
            "CloudReference": "AWS::EC2::ClientVpnEndpoint.AuthenticationOptions",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ActiveDirectory": {},
                "MutualAuthentication": {},
                "Type": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "certificate-authentication",
                        "directory-service-authentication"
                    ],
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::EC2::ClientVpnEndpoint.ClientCidrBlock": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::ClientVpnEndpoint",
            "CloudResourceProperty": "ClientCidrBlock",
            "CloudReference": "AWS::EC2::ClientVpnEndpoint.ClientCidrBlock",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::ClientVpnEndpoint.ConnectionLogOptions": {
            "Required": "Yes",
            "Type": "ConnectionLogOptions",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::ClientVpnEndpoint",
            "CloudResourceProperty": "ConnectionLogOptions",
            "CloudReference": "AWS::EC2::ClientVpnEndpoint.ConnectionLogOptions",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "CloudwatchLogGroup": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "CloudwatchLogStream": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Enabled": {
                    "Required": "Yes",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::EC2::ClientVpnEndpoint.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::ClientVpnEndpoint",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::EC2::ClientVpnEndpoint.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::ClientVpnRoute": {
            "ClientVpnEndpointId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::ClientVpnRoute",
                "CloudResourceProperty": "ClientVpnEndpointId",
                "CloudReference": "AWS::EC2::ClientVpnRoute.ClientVpnEndpointId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::ClientVpnRoute",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::EC2::ClientVpnRoute.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DestinationCidrBlock": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::ClientVpnRoute",
                "CloudResourceProperty": "DestinationCidrBlock",
                "CloudReference": "AWS::EC2::ClientVpnRoute.DestinationCidrBlock",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TargetVpcSubnetId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::ClientVpnRoute",
                "CloudResourceProperty": "TargetVpcSubnetId",
                "CloudReference": "AWS::EC2::ClientVpnRoute.TargetVpcSubnetId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::ClientVpnRoute.ClientVpnEndpointId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::ClientVpnRoute",
            "CloudResourceProperty": "ClientVpnEndpointId",
            "CloudReference": "AWS::EC2::ClientVpnRoute.ClientVpnEndpointId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::ClientVpnRoute.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::ClientVpnRoute",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::EC2::ClientVpnRoute.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::ClientVpnRoute.DestinationCidrBlock": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::ClientVpnRoute",
            "CloudResourceProperty": "DestinationCidrBlock",
            "CloudReference": "AWS::EC2::ClientVpnRoute.DestinationCidrBlock",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::ClientVpnRoute.TargetVpcSubnetId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::ClientVpnRoute",
            "CloudResourceProperty": "TargetVpcSubnetId",
            "CloudReference": "AWS::EC2::ClientVpnRoute.TargetVpcSubnetId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::ClientVpnTargetNetworkAssociation": {
            "ClientVpnEndpointId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::ClientVpnTargetNetworkAssociation",
                "CloudResourceProperty": "ClientVpnEndpointId",
                "CloudReference": "AWS::EC2::ClientVpnTargetNetworkAssociation.ClientVpnEndpointId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SubnetId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::ClientVpnTargetNetworkAssociation",
                "CloudResourceProperty": "SubnetId",
                "CloudReference": "AWS::EC2::ClientVpnTargetNetworkAssociation.SubnetId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::ClientVpnTargetNetworkAssociation.ClientVpnEndpointId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::ClientVpnTargetNetworkAssociation",
            "CloudResourceProperty": "ClientVpnEndpointId",
            "CloudReference": "AWS::EC2::ClientVpnTargetNetworkAssociation.ClientVpnEndpointId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::ClientVpnTargetNetworkAssociation.SubnetId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::ClientVpnTargetNetworkAssociation",
            "CloudResourceProperty": "SubnetId",
            "CloudReference": "AWS::EC2::ClientVpnTargetNetworkAssociation.SubnetId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::EC2Fleet": {
            "ExcessCapacityTerminationPolicy": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "no-termination",
                    "termination"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::EC2Fleet",
                "CloudResourceProperty": "ExcessCapacityTerminationPolicy",
                "CloudReference": "AWS::EC2::EC2Fleet.ExcessCapacityTerminationPolicy",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "LaunchTemplateConfigs": {
                "Required": "Yes",
                "Type": "List of [FleetLaunchTemplateConfigRequest",
                "Maximum": "50",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::EC2Fleet",
                "CloudResourceProperty": "LaunchTemplateConfigs",
                "CloudReference": "AWS::EC2::EC2Fleet.LaunchTemplateConfigs",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "LaunchTemplateSpecification": {
                        "Required": "No",
                        "Type": "FleetLaunchTemplateSpecificationRequest",
                        "UpdateRequires": "No interruption"
                    },
                    "Overrides": {
                        "Required": "No",
                        "Type": "List of [FleetLaunchTemplateOverridesRequest",
                        "Maximum": "50",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "OnDemandOptions": {
                "Required": "No",
                "Type": "OnDemandOptionsRequest",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::EC2Fleet",
                "CloudResourceProperty": "OnDemandOptions",
                "CloudReference": "AWS::EC2::EC2Fleet.OnDemandOptions",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AllocationStrategy": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "lowest-price",
                            "prioritized"
                        ],
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "ReplaceUnhealthyInstances": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::EC2Fleet",
                "CloudResourceProperty": "ReplaceUnhealthyInstances",
                "CloudReference": "AWS::EC2::EC2Fleet.ReplaceUnhealthyInstances",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SpotOptions": {
                "Required": "No",
                "Type": "SpotOptionsRequest",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::EC2Fleet",
                "CloudResourceProperty": "SpotOptions",
                "CloudReference": "AWS::EC2::EC2Fleet.SpotOptions",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AllocationStrategy": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "diversified",
                            "lowest-price"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "InstanceInterruptionBehavior": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "hibernate",
                            "stop",
                            "terminate"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "InstancePoolsToUseCount": {}
                }
            },
            "TagSpecifications": {
                "Required": "No",
                "Type": "List of [TagSpecification",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::EC2Fleet",
                "CloudResourceProperty": "TagSpecifications",
                "CloudReference": "AWS::EC2::EC2Fleet.TagSpecifications",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ResourceType": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "client-vpn-endpoint",
                            "customer-gateway",
                            "dedicated-host",
                            "dhcp-options",
                            "elastic-ip",
                            "fleet",
                            "fpga-image",
                            "host-reservation",
                            "image",
                            "instance",
                            "internet-gateway",
                            "launch-template",
                            "natgateway",
                            "network-acl",
                            "network-interface",
                            "reserved-instances",
                            "route-table",
                            "security-group",
                            "snapshot",
                            "spot-instances-request",
                            "subnet",
                            "transit-gateway",
                            "transit-gateway-attachment",
                            "transit-gateway-route-table",
                            "volume",
                            "vpc",
                            "vpc-peering-connection",
                            "vpn-connection",
                            "vpn-gateway"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "Tags": {
                        "Required": "No",
                        "Type": "List of [TagRequest",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "TargetCapacitySpecification": {
                "Required": "Yes",
                "Type": "TargetCapacitySpecificationRequest",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::EC2Fleet",
                "CloudResourceProperty": "TargetCapacitySpecification",
                "CloudReference": "AWS::EC2::EC2Fleet.TargetCapacitySpecification",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DefaultTargetCapacityType": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "on-demand",
                            "spot"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "OnDemandTargetCapacity": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "SpotTargetCapacity": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "TotalTargetCapacity": {
                        "Required": "Yes",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "TerminateInstancesWithExpiration": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::EC2Fleet",
                "CloudResourceProperty": "TerminateInstancesWithExpiration",
                "CloudReference": "AWS::EC2::EC2Fleet.TerminateInstancesWithExpiration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Type": {},
            "ValidFrom": {},
            "ValidUntil": {}
        },
        "AWS::EC2::EC2Fleet.ExcessCapacityTerminationPolicy": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "no-termination",
                "termination"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::EC2Fleet",
            "CloudResourceProperty": "ExcessCapacityTerminationPolicy",
            "CloudReference": "AWS::EC2::EC2Fleet.ExcessCapacityTerminationPolicy",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::EC2Fleet.LaunchTemplateConfigs": {
            "Required": "Yes",
            "Type": "List of [FleetLaunchTemplateConfigRequest",
            "Maximum": "50",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::EC2Fleet",
            "CloudResourceProperty": "LaunchTemplateConfigs",
            "CloudReference": "AWS::EC2::EC2Fleet.LaunchTemplateConfigs",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "LaunchTemplateSpecification": {
                    "Required": "No",
                    "Type": "FleetLaunchTemplateSpecificationRequest",
                    "UpdateRequires": "No interruption"
                },
                "Overrides": {
                    "Required": "No",
                    "Type": "List of [FleetLaunchTemplateOverridesRequest",
                    "Maximum": "50",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::EC2::EC2Fleet.OnDemandOptions": {
            "Required": "No",
            "Type": "OnDemandOptionsRequest",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::EC2Fleet",
            "CloudResourceProperty": "OnDemandOptions",
            "CloudReference": "AWS::EC2::EC2Fleet.OnDemandOptions",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AllocationStrategy": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "lowest-price",
                        "prioritized"
                    ],
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::EC2::EC2Fleet.ReplaceUnhealthyInstances": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::EC2Fleet",
            "CloudResourceProperty": "ReplaceUnhealthyInstances",
            "CloudReference": "AWS::EC2::EC2Fleet.ReplaceUnhealthyInstances",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::EC2Fleet.SpotOptions": {
            "Required": "No",
            "Type": "SpotOptionsRequest",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::EC2Fleet",
            "CloudResourceProperty": "SpotOptions",
            "CloudReference": "AWS::EC2::EC2Fleet.SpotOptions",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AllocationStrategy": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "diversified",
                        "lowest-price"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "InstanceInterruptionBehavior": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "hibernate",
                        "stop",
                        "terminate"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "InstancePoolsToUseCount": {}
            }
        },
        "AWS::EC2::EC2Fleet.TagSpecifications": {
            "Required": "No",
            "Type": "List of [TagSpecification",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::EC2Fleet",
            "CloudResourceProperty": "TagSpecifications",
            "CloudReference": "AWS::EC2::EC2Fleet.TagSpecifications",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ResourceType": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "client-vpn-endpoint",
                        "customer-gateway",
                        "dedicated-host",
                        "dhcp-options",
                        "elastic-ip",
                        "fleet",
                        "fpga-image",
                        "host-reservation",
                        "image",
                        "instance",
                        "internet-gateway",
                        "launch-template",
                        "natgateway",
                        "network-acl",
                        "network-interface",
                        "reserved-instances",
                        "route-table",
                        "security-group",
                        "snapshot",
                        "spot-instances-request",
                        "subnet",
                        "transit-gateway",
                        "transit-gateway-attachment",
                        "transit-gateway-route-table",
                        "volume",
                        "vpc",
                        "vpc-peering-connection",
                        "vpn-connection",
                        "vpn-gateway"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "Tags": {
                    "Required": "No",
                    "Type": "List of [TagRequest",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::EC2::EC2Fleet.TargetCapacitySpecification": {
            "Required": "Yes",
            "Type": "TargetCapacitySpecificationRequest",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::EC2Fleet",
            "CloudResourceProperty": "TargetCapacitySpecification",
            "CloudReference": "AWS::EC2::EC2Fleet.TargetCapacitySpecification",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DefaultTargetCapacityType": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "on-demand",
                        "spot"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "OnDemandTargetCapacity": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "SpotTargetCapacity": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "TotalTargetCapacity": {
                    "Required": "Yes",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::EC2::EC2Fleet.TerminateInstancesWithExpiration": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::EC2Fleet",
            "CloudResourceProperty": "TerminateInstancesWithExpiration",
            "CloudReference": "AWS::EC2::EC2Fleet.TerminateInstancesWithExpiration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::EgressOnlyInternetGateway": {
            "VpcId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::EgressOnlyInternetGateway",
                "CloudResourceProperty": "VpcId",
                "CloudReference": "AWS::EC2::EgressOnlyInternetGateway.VpcId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::EgressOnlyInternetGateway.VpcId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::EgressOnlyInternetGateway",
            "CloudResourceProperty": "VpcId",
            "CloudReference": "AWS::EC2::EgressOnlyInternetGateway.VpcId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::FlowLog": {
            "DeliverLogsPermissionArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::FlowLog",
                "CloudResourceProperty": "DeliverLogsPermissionArn",
                "CloudReference": "AWS::EC2::FlowLog.DeliverLogsPermissionArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "LogDestination": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::FlowLog",
                "CloudResourceProperty": "LogDestination",
                "CloudReference": "AWS::EC2::FlowLog.LogDestination",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "LogDestinationType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "cloud-watch-logs",
                    "s3"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::FlowLog",
                "CloudResourceProperty": "LogDestinationType",
                "CloudReference": "AWS::EC2::FlowLog.LogDestinationType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "LogGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::FlowLog",
                "CloudResourceProperty": "LogGroupName",
                "CloudReference": "AWS::EC2::FlowLog.LogGroupName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ResourceId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::FlowLog",
                "CloudResourceProperty": "ResourceId",
                "CloudReference": "AWS::EC2::FlowLog.ResourceId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ResourceType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "NetworkInterface",
                    "Subnet",
                    "VPC"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::FlowLog",
                "CloudResourceProperty": "ResourceType",
                "CloudReference": "AWS::EC2::FlowLog.ResourceType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TrafficType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ACCEPT",
                    "ALL",
                    "REJECT"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::FlowLog",
                "CloudResourceProperty": "TrafficType",
                "CloudReference": "AWS::EC2::FlowLog.TrafficType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::FlowLog.DeliverLogsPermissionArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::FlowLog",
            "CloudResourceProperty": "DeliverLogsPermissionArn",
            "CloudReference": "AWS::EC2::FlowLog.DeliverLogsPermissionArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::FlowLog.LogDestination": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::FlowLog",
            "CloudResourceProperty": "LogDestination",
            "CloudReference": "AWS::EC2::FlowLog.LogDestination",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::FlowLog.LogDestinationType": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "cloud-watch-logs",
                "s3"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::FlowLog",
            "CloudResourceProperty": "LogDestinationType",
            "CloudReference": "AWS::EC2::FlowLog.LogDestinationType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::FlowLog.LogGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::FlowLog",
            "CloudResourceProperty": "LogGroupName",
            "CloudReference": "AWS::EC2::FlowLog.LogGroupName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::FlowLog.ResourceId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::FlowLog",
            "CloudResourceProperty": "ResourceId",
            "CloudReference": "AWS::EC2::FlowLog.ResourceId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::FlowLog.ResourceType": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "NetworkInterface",
                "Subnet",
                "VPC"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::FlowLog",
            "CloudResourceProperty": "ResourceType",
            "CloudReference": "AWS::EC2::FlowLog.ResourceType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::FlowLog.TrafficType": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "ACCEPT",
                "ALL",
                "REJECT"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::FlowLog",
            "CloudResourceProperty": "TrafficType",
            "CloudReference": "AWS::EC2::FlowLog.TrafficType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::Host": {
            "AutoPlacement": {},
            "AvailabilityZone": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::Host",
                "CloudResourceProperty": "AvailabilityZone",
                "CloudReference": "AWS::EC2::Host.AvailabilityZone",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "HostRecovery": {},
            "InstanceType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::Host",
                "CloudResourceProperty": "InstanceType",
                "CloudReference": "AWS::EC2::Host.InstanceType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::Host.AvailabilityZone": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::Host",
            "CloudResourceProperty": "AvailabilityZone",
            "CloudReference": "AWS::EC2::Host.AvailabilityZone",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::Host.InstanceType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::Host",
            "CloudResourceProperty": "InstanceType",
            "CloudReference": "AWS::EC2::Host.InstanceType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::InternetGateway": {
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::InternetGateway",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::EC2::InternetGateway.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::InternetGateway.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::InternetGateway",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::EC2::InternetGateway.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::LaunchTemplate": {
            "LaunchTemplateData": {
                "Required": "No",
                "Type": "LaunchTemplateData",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::LaunchTemplate",
                "CloudResourceProperty": "LaunchTemplateData",
                "CloudReference": "AWS::EC2::LaunchTemplate.LaunchTemplateData",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "BlockDeviceMappings": {
                        "Required": "No",
                        "Type": "List of [BlockDeviceMapping",
                        "UpdateRequires": "No interruption"
                    },
                    "CapacityReservationSpecification": {
                        "Required": "No",
                        "Type": "CapacityReservationSpecification",
                        "UpdateRequires": "No interruption"
                    },
                    "CpuOptions": {},
                    "CreditSpecification": {
                        "Required": "No",
                        "Type": "CreditSpecification",
                        "UpdateRequires": "No interruption"
                    },
                    "DisableApiTermination": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "EbsOptimized": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "ElasticGpuSpecifications": {
                        "Required": "No",
                        "Type": "List of [ElasticGpuSpecification",
                        "UpdateRequires": "No interruption"
                    },
                    "ElasticInferenceAccelerators": {
                        "Required": "No",
                        "Type": "List of [LaunchTemplateElasticInferenceAccelerator",
                        "UpdateRequires": "No interruption"
                    },
                    "HibernationOptions": {},
                    "IamInstanceProfile": {
                        "Required": "No",
                        "Type": "IamInstanceProfile",
                        "UpdateRequires": "No interruption"
                    },
                    "ImageId": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "InstanceInitiatedShutdownBehavior": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "stop",
                            "terminate"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "InstanceMarketOptions": {
                        "Required": "No",
                        "Type": "InstanceMarketOptions",
                        "UpdateRequires": "No interruption"
                    },
                    "InstanceType": {},
                    "KernelId": {},
                    "KeyName": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "LicenseSpecifications": {
                        "Required": "No",
                        "Type": "List of [LicenseSpecification",
                        "UpdateRequires": "No interruption"
                    },
                    "Monitoring": {
                        "Required": "No",
                        "Type": "Monitoring",
                        "UpdateRequires": "No interruption"
                    },
                    "NetworkInterfaces": {
                        "Required": "No",
                        "Type": "List of [NetworkInterface",
                        "UpdateRequires": "No interruption"
                    },
                    "Placement": {
                        "Required": "No",
                        "Type": "Placement",
                        "UpdateRequires": "No interruption"
                    },
                    "RamDiskId": {},
                    "SecurityGroupIds": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    },
                    "SecurityGroups": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    },
                    "TagSpecifications": {
                        "Required": "No",
                        "Type": "List of [TagSpecification",
                        "UpdateRequires": "No interruption"
                    },
                    "UserData": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "LaunchTemplateName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "128",
                "Pattern": "[a-zA-Z0-9\\(\\)\\.\\-/_]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::LaunchTemplate",
                "CloudResourceProperty": "LaunchTemplateName",
                "CloudReference": "AWS::EC2::LaunchTemplate.LaunchTemplateName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::LaunchTemplate.LaunchTemplateData": {
            "Required": "No",
            "Type": "LaunchTemplateData",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::LaunchTemplate",
            "CloudResourceProperty": "LaunchTemplateData",
            "CloudReference": "AWS::EC2::LaunchTemplate.LaunchTemplateData",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "BlockDeviceMappings": {
                    "Required": "No",
                    "Type": "List of [BlockDeviceMapping",
                    "UpdateRequires": "No interruption"
                },
                "CapacityReservationSpecification": {
                    "Required": "No",
                    "Type": "CapacityReservationSpecification",
                    "UpdateRequires": "No interruption"
                },
                "CpuOptions": {},
                "CreditSpecification": {
                    "Required": "No",
                    "Type": "CreditSpecification",
                    "UpdateRequires": "No interruption"
                },
                "DisableApiTermination": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "EbsOptimized": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "ElasticGpuSpecifications": {
                    "Required": "No",
                    "Type": "List of [ElasticGpuSpecification",
                    "UpdateRequires": "No interruption"
                },
                "ElasticInferenceAccelerators": {
                    "Required": "No",
                    "Type": "List of [LaunchTemplateElasticInferenceAccelerator",
                    "UpdateRequires": "No interruption"
                },
                "HibernationOptions": {},
                "IamInstanceProfile": {
                    "Required": "No",
                    "Type": "IamInstanceProfile",
                    "UpdateRequires": "No interruption"
                },
                "ImageId": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "InstanceInitiatedShutdownBehavior": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "stop",
                        "terminate"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "InstanceMarketOptions": {
                    "Required": "No",
                    "Type": "InstanceMarketOptions",
                    "UpdateRequires": "No interruption"
                },
                "InstanceType": {},
                "KernelId": {},
                "KeyName": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "LicenseSpecifications": {
                    "Required": "No",
                    "Type": "List of [LicenseSpecification",
                    "UpdateRequires": "No interruption"
                },
                "Monitoring": {
                    "Required": "No",
                    "Type": "Monitoring",
                    "UpdateRequires": "No interruption"
                },
                "NetworkInterfaces": {
                    "Required": "No",
                    "Type": "List of [NetworkInterface",
                    "UpdateRequires": "No interruption"
                },
                "Placement": {
                    "Required": "No",
                    "Type": "Placement",
                    "UpdateRequires": "No interruption"
                },
                "RamDiskId": {},
                "SecurityGroupIds": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                },
                "SecurityGroups": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                },
                "TagSpecifications": {
                    "Required": "No",
                    "Type": "List of [TagSpecification",
                    "UpdateRequires": "No interruption"
                },
                "UserData": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::EC2::LaunchTemplate.LaunchTemplateName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "3",
            "Maximum": "128",
            "Pattern": "[a-zA-Z0-9\\(\\)\\.\\-/_]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::LaunchTemplate",
            "CloudResourceProperty": "LaunchTemplateName",
            "CloudReference": "AWS::EC2::LaunchTemplate.LaunchTemplateName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::NatGateway": {
            "AllocationId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::NatGateway",
                "CloudResourceProperty": "AllocationId",
                "CloudReference": "AWS::EC2::NatGateway.AllocationId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SubnetId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::NatGateway",
                "CloudResourceProperty": "SubnetId",
                "CloudReference": "AWS::EC2::NatGateway.SubnetId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::NatGateway",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::EC2::NatGateway.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::NatGateway.AllocationId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::NatGateway",
            "CloudResourceProperty": "AllocationId",
            "CloudReference": "AWS::EC2::NatGateway.AllocationId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::NatGateway.SubnetId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::NatGateway",
            "CloudResourceProperty": "SubnetId",
            "CloudReference": "AWS::EC2::NatGateway.SubnetId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::NatGateway.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::NatGateway",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::EC2::NatGateway.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::NetworkInterfacePermission": {
            "AwsAccountId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::NetworkInterfacePermission",
                "CloudResourceProperty": "AwsAccountId",
                "CloudReference": "AWS::EC2::NetworkInterfacePermission.AwsAccountId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "NetworkInterfaceId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::NetworkInterfacePermission",
                "CloudResourceProperty": "NetworkInterfaceId",
                "CloudReference": "AWS::EC2::NetworkInterfacePermission.NetworkInterfaceId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Permission": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "EIP-ASSOCIATE",
                    "INSTANCE-ATTACH"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::NetworkInterfacePermission",
                "CloudResourceProperty": "Permission",
                "CloudReference": "AWS::EC2::NetworkInterfacePermission.Permission",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::NetworkInterfacePermission.AwsAccountId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::NetworkInterfacePermission",
            "CloudResourceProperty": "AwsAccountId",
            "CloudReference": "AWS::EC2::NetworkInterfacePermission.AwsAccountId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::NetworkInterfacePermission.NetworkInterfaceId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::NetworkInterfacePermission",
            "CloudResourceProperty": "NetworkInterfaceId",
            "CloudReference": "AWS::EC2::NetworkInterfacePermission.NetworkInterfaceId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::NetworkInterfacePermission.Permission": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "EIP-ASSOCIATE",
                "INSTANCE-ATTACH"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::NetworkInterfacePermission",
            "CloudResourceProperty": "Permission",
            "CloudReference": "AWS::EC2::NetworkInterfacePermission.Permission",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::PlacementGroup": {
            "Strategy": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "cluster",
                    "partition",
                    "spread"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::PlacementGroup",
                "CloudResourceProperty": "Strategy",
                "CloudReference": "AWS::EC2::PlacementGroup.Strategy",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::PlacementGroup.Strategy": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "cluster",
                "partition",
                "spread"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::PlacementGroup",
            "CloudResourceProperty": "Strategy",
            "CloudReference": "AWS::EC2::PlacementGroup.Strategy",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::Route": {
            "DestinationCidrBlock": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::Route",
                "CloudResourceProperty": "DestinationCidrBlock",
                "CloudReference": "AWS::EC2::Route.DestinationCidrBlock",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DestinationIpv6CidrBlock": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::Route",
                "CloudResourceProperty": "DestinationIpv6CidrBlock",
                "CloudReference": "AWS::EC2::Route.DestinationIpv6CidrBlock",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EgressOnlyInternetGatewayId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::Route",
                "CloudResourceProperty": "EgressOnlyInternetGatewayId",
                "CloudReference": "AWS::EC2::Route.EgressOnlyInternetGatewayId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "GatewayId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::Route",
                "CloudResourceProperty": "GatewayId",
                "CloudReference": "AWS::EC2::Route.GatewayId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InstanceId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::Route",
                "CloudResourceProperty": "InstanceId",
                "CloudReference": "AWS::EC2::Route.InstanceId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "NatGatewayId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::Route",
                "CloudResourceProperty": "NatGatewayId",
                "CloudReference": "AWS::EC2::Route.NatGatewayId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "NetworkInterfaceId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::Route",
                "CloudResourceProperty": "NetworkInterfaceId",
                "CloudReference": "AWS::EC2::Route.NetworkInterfaceId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RouteTableId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::Route",
                "CloudResourceProperty": "RouteTableId",
                "CloudReference": "AWS::EC2::Route.RouteTableId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TransitGatewayId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::Route",
                "CloudResourceProperty": "TransitGatewayId",
                "CloudReference": "AWS::EC2::Route.TransitGatewayId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "VpcPeeringConnectionId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::Route",
                "CloudResourceProperty": "VpcPeeringConnectionId",
                "CloudReference": "AWS::EC2::Route.VpcPeeringConnectionId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::Route.DestinationCidrBlock": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::Route",
            "CloudResourceProperty": "DestinationCidrBlock",
            "CloudReference": "AWS::EC2::Route.DestinationCidrBlock",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::Route.DestinationIpv6CidrBlock": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::Route",
            "CloudResourceProperty": "DestinationIpv6CidrBlock",
            "CloudReference": "AWS::EC2::Route.DestinationIpv6CidrBlock",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::Route.EgressOnlyInternetGatewayId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::Route",
            "CloudResourceProperty": "EgressOnlyInternetGatewayId",
            "CloudReference": "AWS::EC2::Route.EgressOnlyInternetGatewayId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::Route.GatewayId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::Route",
            "CloudResourceProperty": "GatewayId",
            "CloudReference": "AWS::EC2::Route.GatewayId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::Route.InstanceId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::Route",
            "CloudResourceProperty": "InstanceId",
            "CloudReference": "AWS::EC2::Route.InstanceId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::Route.NatGatewayId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::Route",
            "CloudResourceProperty": "NatGatewayId",
            "CloudReference": "AWS::EC2::Route.NatGatewayId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::Route.NetworkInterfaceId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::Route",
            "CloudResourceProperty": "NetworkInterfaceId",
            "CloudReference": "AWS::EC2::Route.NetworkInterfaceId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::Route.RouteTableId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::Route",
            "CloudResourceProperty": "RouteTableId",
            "CloudReference": "AWS::EC2::Route.RouteTableId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::Route.TransitGatewayId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::Route",
            "CloudResourceProperty": "TransitGatewayId",
            "CloudReference": "AWS::EC2::Route.TransitGatewayId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::Route.VpcPeeringConnectionId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::Route",
            "CloudResourceProperty": "VpcPeeringConnectionId",
            "CloudReference": "AWS::EC2::Route.VpcPeeringConnectionId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::SpotFleet": {
            "SpotFleetRequestConfigData": {
                "Required": "Yes",
                "Type": "SpotFleetRequestConfigData",
                "CloudResourceType": "AWS::EC2::SpotFleet",
                "CloudResourceProperty": "SpotFleetRequestConfigData",
                "CloudReference": "AWS::EC2::SpotFleet.SpotFleetRequestConfigData",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AllocationStrategy": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "diversified",
                            "lowestPrice"
                        ],
                        "UpdateRequires": "Replacement"
                    },
                    "ExcessCapacityTerminationPolicy": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "default",
                            "noTermination"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "IamFleetRole": {},
                    "InstanceInterruptionBehavior": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "hibernate",
                            "stop",
                            "terminate"
                        ],
                        "UpdateRequires": "Replacement"
                    },
                    "LaunchSpecifications": {
                        "Required": "Conditional",
                        "Type": "List of [SpotFleetLaunchSpecification",
                        "UpdateRequires": "Replacement"
                    },
                    "LaunchTemplateConfigs": {
                        "Required": "Conditional",
                        "Type": "List of [LaunchTemplateConfig",
                        "UpdateRequires": "Replacement"
                    },
                    "LoadBalancersConfig": {
                        "Required": "No",
                        "Type": "LoadBalancersConfig",
                        "UpdateRequires": "Replacement"
                    },
                    "ReplaceUnhealthyInstances": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "Replacement"
                    },
                    "SpotPrice": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "TargetCapacity": {
                        "Required": "Yes",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "TerminateInstancesWithExpiration": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "Replacement"
                    },
                    "Type": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "instant",
                            "maintain",
                            "request"
                        ],
                        "UpdateRequires": "Replacement"
                    },
                    "ValidFrom": {},
                    "ValidUntil": {}
                }
            }
        },
        "AWS::EC2::SpotFleet.SpotFleetRequestConfigData": {
            "Required": "Yes",
            "Type": "SpotFleetRequestConfigData",
            "CloudResourceType": "AWS::EC2::SpotFleet",
            "CloudResourceProperty": "SpotFleetRequestConfigData",
            "CloudReference": "AWS::EC2::SpotFleet.SpotFleetRequestConfigData",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AllocationStrategy": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "diversified",
                        "lowestPrice"
                    ],
                    "UpdateRequires": "Replacement"
                },
                "ExcessCapacityTerminationPolicy": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "default",
                        "noTermination"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "IamFleetRole": {},
                "InstanceInterruptionBehavior": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "hibernate",
                        "stop",
                        "terminate"
                    ],
                    "UpdateRequires": "Replacement"
                },
                "LaunchSpecifications": {
                    "Required": "Conditional",
                    "Type": "List of [SpotFleetLaunchSpecification",
                    "UpdateRequires": "Replacement"
                },
                "LaunchTemplateConfigs": {
                    "Required": "Conditional",
                    "Type": "List of [LaunchTemplateConfig",
                    "UpdateRequires": "Replacement"
                },
                "LoadBalancersConfig": {
                    "Required": "No",
                    "Type": "LoadBalancersConfig",
                    "UpdateRequires": "Replacement"
                },
                "ReplaceUnhealthyInstances": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "Replacement"
                },
                "SpotPrice": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "TargetCapacity": {
                    "Required": "Yes",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "TerminateInstancesWithExpiration": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "Replacement"
                },
                "Type": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "instant",
                        "maintain",
                        "request"
                    ],
                    "UpdateRequires": "Replacement"
                },
                "ValidFrom": {},
                "ValidUntil": {}
            }
        },
        "AWS::EC2::Subnet": {
            "AssignIpv6AddressOnCreation": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::Subnet",
                "CloudResourceProperty": "AssignIpv6AddressOnCreation",
                "CloudReference": "AWS::EC2::Subnet.AssignIpv6AddressOnCreation",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AvailabilityZone": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::Subnet",
                "CloudResourceProperty": "AvailabilityZone",
                "CloudReference": "AWS::EC2::Subnet.AvailabilityZone",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CidrBlock": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::Subnet",
                "CloudResourceProperty": "CidrBlock",
                "CloudReference": "AWS::EC2::Subnet.CidrBlock",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Ipv6CidrBlock": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::Subnet",
                "CloudResourceProperty": "Ipv6CidrBlock",
                "CloudReference": "AWS::EC2::Subnet.Ipv6CidrBlock",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MapPublicIpOnLaunch": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::Subnet",
                "CloudResourceProperty": "MapPublicIpOnLaunch",
                "CloudReference": "AWS::EC2::Subnet.MapPublicIpOnLaunch",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::Subnet",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::EC2::Subnet.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "VpcId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::Subnet",
                "CloudResourceProperty": "VpcId",
                "CloudReference": "AWS::EC2::Subnet.VpcId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::Subnet.AssignIpv6AddressOnCreation": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::Subnet",
            "CloudResourceProperty": "AssignIpv6AddressOnCreation",
            "CloudReference": "AWS::EC2::Subnet.AssignIpv6AddressOnCreation",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::Subnet.AvailabilityZone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::Subnet",
            "CloudResourceProperty": "AvailabilityZone",
            "CloudReference": "AWS::EC2::Subnet.AvailabilityZone",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::Subnet.CidrBlock": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::Subnet",
            "CloudResourceProperty": "CidrBlock",
            "CloudReference": "AWS::EC2::Subnet.CidrBlock",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::Subnet.Ipv6CidrBlock": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::Subnet",
            "CloudResourceProperty": "Ipv6CidrBlock",
            "CloudReference": "AWS::EC2::Subnet.Ipv6CidrBlock",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::Subnet.MapPublicIpOnLaunch": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::Subnet",
            "CloudResourceProperty": "MapPublicIpOnLaunch",
            "CloudReference": "AWS::EC2::Subnet.MapPublicIpOnLaunch",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::Subnet.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::Subnet",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::EC2::Subnet.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::Subnet.VpcId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::Subnet",
            "CloudResourceProperty": "VpcId",
            "CloudReference": "AWS::EC2::Subnet.VpcId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::SubnetCidrBlock": {
            "Ipv6CidrBlock": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::SubnetCidrBlock",
                "CloudResourceProperty": "Ipv6CidrBlock",
                "CloudReference": "AWS::EC2::SubnetCidrBlock.Ipv6CidrBlock",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SubnetId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::SubnetCidrBlock",
                "CloudResourceProperty": "SubnetId",
                "CloudReference": "AWS::EC2::SubnetCidrBlock.SubnetId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::SubnetCidrBlock.Ipv6CidrBlock": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::SubnetCidrBlock",
            "CloudResourceProperty": "Ipv6CidrBlock",
            "CloudReference": "AWS::EC2::SubnetCidrBlock.Ipv6CidrBlock",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::SubnetCidrBlock.SubnetId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::SubnetCidrBlock",
            "CloudResourceProperty": "SubnetId",
            "CloudReference": "AWS::EC2::SubnetCidrBlock.SubnetId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::TransitGateway": {
            "AmazonSideAsn": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::TransitGateway",
                "CloudResourceProperty": "AmazonSideAsn",
                "CloudReference": "AWS::EC2::TransitGateway.AmazonSideAsn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AutoAcceptSharedAttachments": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "disable",
                    "enable"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::TransitGateway",
                "CloudResourceProperty": "AutoAcceptSharedAttachments",
                "CloudReference": "AWS::EC2::TransitGateway.AutoAcceptSharedAttachments",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DefaultRouteTableAssociation": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "disable",
                    "enable"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::TransitGateway",
                "CloudResourceProperty": "DefaultRouteTableAssociation",
                "CloudReference": "AWS::EC2::TransitGateway.DefaultRouteTableAssociation",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DefaultRouteTablePropagation": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "disable",
                    "enable"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::TransitGateway",
                "CloudResourceProperty": "DefaultRouteTablePropagation",
                "CloudReference": "AWS::EC2::TransitGateway.DefaultRouteTablePropagation",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::TransitGateway",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::EC2::TransitGateway.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DnsSupport": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "disable",
                    "enable"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::TransitGateway",
                "CloudResourceProperty": "DnsSupport",
                "CloudReference": "AWS::EC2::TransitGateway.DnsSupport",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::TransitGateway",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::EC2::TransitGateway.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "VpnEcmpSupport": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "disable",
                    "enable"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::TransitGateway",
                "CloudResourceProperty": "VpnEcmpSupport",
                "CloudReference": "AWS::EC2::TransitGateway.VpnEcmpSupport",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::TransitGateway.AmazonSideAsn": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::TransitGateway",
            "CloudResourceProperty": "AmazonSideAsn",
            "CloudReference": "AWS::EC2::TransitGateway.AmazonSideAsn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::TransitGateway.AutoAcceptSharedAttachments": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "disable",
                "enable"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::TransitGateway",
            "CloudResourceProperty": "AutoAcceptSharedAttachments",
            "CloudReference": "AWS::EC2::TransitGateway.AutoAcceptSharedAttachments",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::TransitGateway.DefaultRouteTableAssociation": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "disable",
                "enable"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::TransitGateway",
            "CloudResourceProperty": "DefaultRouteTableAssociation",
            "CloudReference": "AWS::EC2::TransitGateway.DefaultRouteTableAssociation",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::TransitGateway.DefaultRouteTablePropagation": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "disable",
                "enable"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::TransitGateway",
            "CloudResourceProperty": "DefaultRouteTablePropagation",
            "CloudReference": "AWS::EC2::TransitGateway.DefaultRouteTablePropagation",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::TransitGateway.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::TransitGateway",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::EC2::TransitGateway.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::TransitGateway.DnsSupport": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "disable",
                "enable"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::TransitGateway",
            "CloudResourceProperty": "DnsSupport",
            "CloudReference": "AWS::EC2::TransitGateway.DnsSupport",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::TransitGateway.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::TransitGateway",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::EC2::TransitGateway.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::TransitGateway.VpnEcmpSupport": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "disable",
                "enable"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::TransitGateway",
            "CloudResourceProperty": "VpnEcmpSupport",
            "CloudReference": "AWS::EC2::TransitGateway.VpnEcmpSupport",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::TransitGatewayAttachment": {
            "SubnetIds": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "Replacement"
            },
            "TransitGatewayId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "VpcId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "AWS::EC2::TransitGatewayRoute": {
            "Blackhole": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::TransitGatewayRoute",
                "CloudResourceProperty": "Blackhole",
                "CloudReference": "AWS::EC2::TransitGatewayRoute.Blackhole",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DestinationCidrBlock": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::TransitGatewayRoute",
                "CloudResourceProperty": "DestinationCidrBlock",
                "CloudReference": "AWS::EC2::TransitGatewayRoute.DestinationCidrBlock",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TransitGatewayAttachmentId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::TransitGatewayRoute",
                "CloudResourceProperty": "TransitGatewayAttachmentId",
                "CloudReference": "AWS::EC2::TransitGatewayRoute.TransitGatewayAttachmentId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TransitGatewayRouteTableId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::TransitGatewayRoute",
                "CloudResourceProperty": "TransitGatewayRouteTableId",
                "CloudReference": "AWS::EC2::TransitGatewayRoute.TransitGatewayRouteTableId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::TransitGatewayRoute.Blackhole": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::TransitGatewayRoute",
            "CloudResourceProperty": "Blackhole",
            "CloudReference": "AWS::EC2::TransitGatewayRoute.Blackhole",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::TransitGatewayRoute.DestinationCidrBlock": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::TransitGatewayRoute",
            "CloudResourceProperty": "DestinationCidrBlock",
            "CloudReference": "AWS::EC2::TransitGatewayRoute.DestinationCidrBlock",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::TransitGatewayRoute.TransitGatewayAttachmentId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::TransitGatewayRoute",
            "CloudResourceProperty": "TransitGatewayAttachmentId",
            "CloudReference": "AWS::EC2::TransitGatewayRoute.TransitGatewayAttachmentId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::TransitGatewayRoute.TransitGatewayRouteTableId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::TransitGatewayRoute",
            "CloudResourceProperty": "TransitGatewayRouteTableId",
            "CloudReference": "AWS::EC2::TransitGatewayRoute.TransitGatewayRouteTableId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::TransitGatewayRouteTable": {
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::TransitGatewayRouteTable",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::EC2::TransitGatewayRouteTable.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "TransitGatewayId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::TransitGatewayRouteTable",
                "CloudResourceProperty": "TransitGatewayId",
                "CloudReference": "AWS::EC2::TransitGatewayRouteTable.TransitGatewayId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::TransitGatewayRouteTable.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::TransitGatewayRouteTable",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::EC2::TransitGatewayRouteTable.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::TransitGatewayRouteTable.TransitGatewayId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::TransitGatewayRouteTable",
            "CloudResourceProperty": "TransitGatewayId",
            "CloudReference": "AWS::EC2::TransitGatewayRouteTable.TransitGatewayId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::TransitGatewayRouteTableAssociation": {
            "TransitGatewayAttachmentId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::TransitGatewayRouteTableAssociation",
                "CloudResourceProperty": "TransitGatewayAttachmentId",
                "CloudReference": "AWS::EC2::TransitGatewayRouteTableAssociation.TransitGatewayAttachmentId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TransitGatewayRouteTableId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::TransitGatewayRouteTableAssociation",
                "CloudResourceProperty": "TransitGatewayRouteTableId",
                "CloudReference": "AWS::EC2::TransitGatewayRouteTableAssociation.TransitGatewayRouteTableId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::TransitGatewayRouteTableAssociation.TransitGatewayAttachmentId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::TransitGatewayRouteTableAssociation",
            "CloudResourceProperty": "TransitGatewayAttachmentId",
            "CloudReference": "AWS::EC2::TransitGatewayRouteTableAssociation.TransitGatewayAttachmentId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::TransitGatewayRouteTableAssociation.TransitGatewayRouteTableId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::TransitGatewayRouteTableAssociation",
            "CloudResourceProperty": "TransitGatewayRouteTableId",
            "CloudReference": "AWS::EC2::TransitGatewayRouteTableAssociation.TransitGatewayRouteTableId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::TransitGatewayRouteTablePropagation": {
            "TransitGatewayAttachmentId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::TransitGatewayRouteTablePropagation",
                "CloudResourceProperty": "TransitGatewayAttachmentId",
                "CloudReference": "AWS::EC2::TransitGatewayRouteTablePropagation.TransitGatewayAttachmentId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TransitGatewayRouteTableId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::TransitGatewayRouteTablePropagation",
                "CloudResourceProperty": "TransitGatewayRouteTableId",
                "CloudReference": "AWS::EC2::TransitGatewayRouteTablePropagation.TransitGatewayRouteTableId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::TransitGatewayRouteTablePropagation.TransitGatewayAttachmentId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::TransitGatewayRouteTablePropagation",
            "CloudResourceProperty": "TransitGatewayAttachmentId",
            "CloudReference": "AWS::EC2::TransitGatewayRouteTablePropagation.TransitGatewayAttachmentId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::TransitGatewayRouteTablePropagation.TransitGatewayRouteTableId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::TransitGatewayRouteTablePropagation",
            "CloudResourceProperty": "TransitGatewayRouteTableId",
            "CloudReference": "AWS::EC2::TransitGatewayRouteTablePropagation.TransitGatewayRouteTableId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::VPC": {
            "CidrBlock": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::VPC",
                "CloudResourceProperty": "CidrBlock",
                "CloudReference": "AWS::EC2::VPC.CidrBlock",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EnableDnsHostnames": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::VPC",
                "CloudResourceProperty": "EnableDnsHostnames",
                "CloudReference": "AWS::EC2::VPC.EnableDnsHostnames",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EnableDnsSupport": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::VPC",
                "CloudResourceProperty": "EnableDnsSupport",
                "CloudReference": "AWS::EC2::VPC.EnableDnsSupport",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InstanceTenancy": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "dedicated",
                    "default",
                    "host"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::VPC",
                "CloudResourceProperty": "InstanceTenancy",
                "CloudReference": "AWS::EC2::VPC.InstanceTenancy",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::VPC",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::EC2::VPC.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::VPC.CidrBlock": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::VPC",
            "CloudResourceProperty": "CidrBlock",
            "CloudReference": "AWS::EC2::VPC.CidrBlock",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::VPC.EnableDnsHostnames": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::VPC",
            "CloudResourceProperty": "EnableDnsHostnames",
            "CloudReference": "AWS::EC2::VPC.EnableDnsHostnames",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::VPC.EnableDnsSupport": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::VPC",
            "CloudResourceProperty": "EnableDnsSupport",
            "CloudReference": "AWS::EC2::VPC.EnableDnsSupport",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::VPC.InstanceTenancy": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "dedicated",
                "default",
                "host"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::VPC",
            "CloudResourceProperty": "InstanceTenancy",
            "CloudReference": "AWS::EC2::VPC.InstanceTenancy",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::VPC.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::VPC",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::EC2::VPC.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::VPCCidrBlock": {
            "AmazonProvidedIpv6CidrBlock": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::VPCCidrBlock",
                "CloudResourceProperty": "AmazonProvidedIpv6CidrBlock",
                "CloudReference": "AWS::EC2::VPCCidrBlock.AmazonProvidedIpv6CidrBlock",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CidrBlock": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::VPCCidrBlock",
                "CloudResourceProperty": "CidrBlock",
                "CloudReference": "AWS::EC2::VPCCidrBlock.CidrBlock",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "VpcId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::VPCCidrBlock",
                "CloudResourceProperty": "VpcId",
                "CloudReference": "AWS::EC2::VPCCidrBlock.VpcId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::VPCCidrBlock.AmazonProvidedIpv6CidrBlock": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::VPCCidrBlock",
            "CloudResourceProperty": "AmazonProvidedIpv6CidrBlock",
            "CloudReference": "AWS::EC2::VPCCidrBlock.AmazonProvidedIpv6CidrBlock",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::VPCCidrBlock.CidrBlock": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::VPCCidrBlock",
            "CloudResourceProperty": "CidrBlock",
            "CloudReference": "AWS::EC2::VPCCidrBlock.CidrBlock",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::VPCCidrBlock.VpcId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::VPCCidrBlock",
            "CloudResourceProperty": "VpcId",
            "CloudReference": "AWS::EC2::VPCCidrBlock.VpcId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::VPCEndpoint": {
            "PolicyDocument": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::VPCEndpoint",
                "CloudResourceProperty": "PolicyDocument",
                "CloudReference": "AWS::EC2::VPCEndpoint.PolicyDocument",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PrivateDnsEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::VPCEndpoint",
                "CloudResourceProperty": "PrivateDnsEnabled",
                "CloudReference": "AWS::EC2::VPCEndpoint.PrivateDnsEnabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RouteTableIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "SecurityGroupIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "ServiceName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SubnetIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "VpcEndpointType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Gateway",
                    "Interface"
                ],
                "UpdateRequires": "Replacement"
            },
            "VpcId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "AWS::EC2::VPCEndpoint.PolicyDocument": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::VPCEndpoint",
            "CloudResourceProperty": "PolicyDocument",
            "CloudReference": "AWS::EC2::VPCEndpoint.PolicyDocument",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::VPCEndpoint.PrivateDnsEnabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::VPCEndpoint",
            "CloudResourceProperty": "PrivateDnsEnabled",
            "CloudReference": "AWS::EC2::VPCEndpoint.PrivateDnsEnabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::VPCEndpointConnectionNotification": {
            "ConnectionEvents": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "ConnectionNotificationArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ServiceId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "VPCEndpointId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "AWS::EC2::VPCEndpointService": {
            "AcceptanceRequired": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::VPCEndpointService",
                "CloudResourceProperty": "AcceptanceRequired",
                "CloudReference": "AWS::EC2::VPCEndpointService.AcceptanceRequired",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "NetworkLoadBalancerArns": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::EC2::VPCEndpointService.AcceptanceRequired": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::VPCEndpointService",
            "CloudResourceProperty": "AcceptanceRequired",
            "CloudReference": "AWS::EC2::VPCEndpointService.AcceptanceRequired",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::VPCEndpointServicePermissions": {
            "AllowedPrincipals": {},
            "ServiceId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::VPCEndpointServicePermissions",
                "CloudResourceProperty": "ServiceId",
                "CloudReference": "AWS::EC2::VPCEndpointServicePermissions.ServiceId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::VPCEndpointServicePermissions.ServiceId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::VPCEndpointServicePermissions",
            "CloudResourceProperty": "ServiceId",
            "CloudReference": "AWS::EC2::VPCEndpointServicePermissions.ServiceId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::VPCPeeringConnection": {
            "PeerOwnerId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::VPCPeeringConnection",
                "CloudResourceProperty": "PeerOwnerId",
                "CloudReference": "AWS::EC2::VPCPeeringConnection.PeerOwnerId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PeerRegion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::VPCPeeringConnection",
                "CloudResourceProperty": "PeerRegion",
                "CloudReference": "AWS::EC2::VPCPeeringConnection.PeerRegion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PeerRoleArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::VPCPeeringConnection",
                "CloudResourceProperty": "PeerRoleArn",
                "CloudReference": "AWS::EC2::VPCPeeringConnection.PeerRoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PeerVpcId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::VPCPeeringConnection",
                "CloudResourceProperty": "PeerVpcId",
                "CloudReference": "AWS::EC2::VPCPeeringConnection.PeerVpcId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EC2::VPCPeeringConnection",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::EC2::VPCPeeringConnection.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "VpcId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EC2::VPCPeeringConnection",
                "CloudResourceProperty": "VpcId",
                "CloudReference": "AWS::EC2::VPCPeeringConnection.VpcId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EC2::VPCPeeringConnection.PeerOwnerId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::VPCPeeringConnection",
            "CloudResourceProperty": "PeerOwnerId",
            "CloudReference": "AWS::EC2::VPCPeeringConnection.PeerOwnerId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::VPCPeeringConnection.PeerRegion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::VPCPeeringConnection",
            "CloudResourceProperty": "PeerRegion",
            "CloudReference": "AWS::EC2::VPCPeeringConnection.PeerRegion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::VPCPeeringConnection.PeerRoleArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::VPCPeeringConnection",
            "CloudResourceProperty": "PeerRoleArn",
            "CloudReference": "AWS::EC2::VPCPeeringConnection.PeerRoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::VPCPeeringConnection.PeerVpcId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::VPCPeeringConnection",
            "CloudResourceProperty": "PeerVpcId",
            "CloudReference": "AWS::EC2::VPCPeeringConnection.PeerVpcId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::VPCPeeringConnection.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EC2::VPCPeeringConnection",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::EC2::VPCPeeringConnection.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EC2::VPCPeeringConnection.VpcId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EC2::VPCPeeringConnection",
            "CloudResourceProperty": "VpcId",
            "CloudReference": "AWS::EC2::VPCPeeringConnection.VpcId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ECR::Repository": {
            "LifecyclePolicy": {
                "Required": "No",
                "Type": "LifecyclePolicy",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ECR::Repository",
                "CloudResourceProperty": "LifecyclePolicy",
                "CloudReference": "AWS::ECR::Repository.LifecyclePolicy",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "LifecyclePolicyText": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "100",
                        "Maximum": "30720",
                        "UpdateRequires": "No interruption"
                    },
                    "RegistryId": {
                        "Required": "No",
                        "Type": "String",
                        "Pattern": "[0-9]{12}",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "RepositoryName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "2",
                "Maximum": "256",
                "Pattern": "(?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ECR::Repository",
                "CloudResourceProperty": "RepositoryName",
                "CloudReference": "AWS::ECR::Repository.RepositoryName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RepositoryPolicyText": {},
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ECR::Repository",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::ECR::Repository.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ECR::Repository.LifecyclePolicy": {
            "Required": "No",
            "Type": "LifecyclePolicy",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ECR::Repository",
            "CloudResourceProperty": "LifecyclePolicy",
            "CloudReference": "AWS::ECR::Repository.LifecyclePolicy",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "LifecyclePolicyText": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "100",
                    "Maximum": "30720",
                    "UpdateRequires": "No interruption"
                },
                "RegistryId": {
                    "Required": "No",
                    "Type": "String",
                    "Pattern": "[0-9]{12}",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ECR::Repository.RepositoryName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "2",
            "Maximum": "256",
            "Pattern": "(?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ECR::Repository",
            "CloudResourceProperty": "RepositoryName",
            "CloudReference": "AWS::ECR::Repository.RepositoryName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ECR::Repository.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ECR::Repository",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::ECR::Repository.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ECS::Cluster": {
            "ClusterName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ECS::Cluster",
                "CloudResourceProperty": "ClusterName",
                "CloudReference": "AWS::ECS::Cluster.ClusterName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ECS::Cluster.ClusterName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ECS::Cluster",
            "CloudResourceProperty": "ClusterName",
            "CloudReference": "AWS::ECS::Cluster.ClusterName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ECS::Service": {
            "Cluster": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ECS::Service",
                "CloudResourceProperty": "Cluster",
                "CloudReference": "AWS::ECS::Service.Cluster",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DeploymentConfiguration": {
                "Required": "No",
                "Type": "DeploymentConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ECS::Service",
                "CloudResourceProperty": "DeploymentConfiguration",
                "CloudReference": "AWS::ECS::Service.DeploymentConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "MaximumPercent": {},
                    "MinimumHealthyPercent": {}
                }
            },
            "DesiredCount": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ECS::Service",
                "CloudResourceProperty": "DesiredCount",
                "CloudReference": "AWS::ECS::Service.DesiredCount",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "HealthCheckGracePeriodSeconds": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ECS::Service",
                "CloudResourceProperty": "HealthCheckGracePeriodSeconds",
                "CloudReference": "AWS::ECS::Service.HealthCheckGracePeriodSeconds",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "LaunchType": {},
            "LoadBalancers": {},
            "NetworkConfiguration": {},
            "PlacementConstraints": {
                "Required": "No",
                "Type": "List of [PlacementConstraint",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ECS::Service",
                "CloudResourceProperty": "PlacementConstraints",
                "CloudReference": "AWS::ECS::Service.PlacementConstraints",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Expression": {},
                    "Type": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "distinctInstance",
                            "memberOf"
                        ],
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "PlacementStrategies": {},
            "PlatformVersion": {},
            "Role": {},
            "SchedulingStrategy": {},
            "ServiceName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ECS::Service",
                "CloudResourceProperty": "ServiceName",
                "CloudReference": "AWS::ECS::Service.ServiceName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ServiceRegistries": {
                "Required": "No",
                "Type": "List of [ServiceRegistry",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ECS::Service",
                "CloudResourceProperty": "ServiceRegistries",
                "CloudReference": "AWS::ECS::Service.ServiceRegistries",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ContainerName": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "ContainerPort": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "Replacement"
                    },
                    "Port": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "Replacement"
                    },
                    "RegistryArn": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "TaskDefinition": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ECS::Service",
                "CloudResourceProperty": "TaskDefinition",
                "CloudReference": "AWS::ECS::Service.TaskDefinition",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ECS::Service.Cluster": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ECS::Service",
            "CloudResourceProperty": "Cluster",
            "CloudReference": "AWS::ECS::Service.Cluster",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ECS::Service.DeploymentConfiguration": {
            "Required": "No",
            "Type": "DeploymentConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ECS::Service",
            "CloudResourceProperty": "DeploymentConfiguration",
            "CloudReference": "AWS::ECS::Service.DeploymentConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "MaximumPercent": {},
                "MinimumHealthyPercent": {}
            }
        },
        "AWS::ECS::Service.DesiredCount": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ECS::Service",
            "CloudResourceProperty": "DesiredCount",
            "CloudReference": "AWS::ECS::Service.DesiredCount",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ECS::Service.HealthCheckGracePeriodSeconds": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ECS::Service",
            "CloudResourceProperty": "HealthCheckGracePeriodSeconds",
            "CloudReference": "AWS::ECS::Service.HealthCheckGracePeriodSeconds",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ECS::Service.PlacementConstraints": {
            "Required": "No",
            "Type": "List of [PlacementConstraint",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ECS::Service",
            "CloudResourceProperty": "PlacementConstraints",
            "CloudReference": "AWS::ECS::Service.PlacementConstraints",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Expression": {},
                "Type": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "distinctInstance",
                        "memberOf"
                    ],
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::ECS::Service.ServiceName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ECS::Service",
            "CloudResourceProperty": "ServiceName",
            "CloudReference": "AWS::ECS::Service.ServiceName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ECS::Service.ServiceRegistries": {
            "Required": "No",
            "Type": "List of [ServiceRegistry",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ECS::Service",
            "CloudResourceProperty": "ServiceRegistries",
            "CloudReference": "AWS::ECS::Service.ServiceRegistries",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ContainerName": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "ContainerPort": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "Replacement"
                },
                "Port": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "Replacement"
                },
                "RegistryArn": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::ECS::Service.TaskDefinition": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ECS::Service",
            "CloudResourceProperty": "TaskDefinition",
            "CloudReference": "AWS::ECS::Service.TaskDefinition",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ECS::TaskDefinition": {
            "ContainerDefinitions": {},
            "Cpu": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ECS::TaskDefinition",
                "CloudResourceProperty": "Cpu",
                "CloudReference": "AWS::ECS::TaskDefinition.Cpu",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ExecutionRoleArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ECS::TaskDefinition",
                "CloudResourceProperty": "ExecutionRoleArn",
                "CloudReference": "AWS::ECS::TaskDefinition.ExecutionRoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Family": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ECS::TaskDefinition",
                "CloudResourceProperty": "Family",
                "CloudReference": "AWS::ECS::TaskDefinition.Family",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "IpcMode": {},
            "Memory": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ECS::TaskDefinition",
                "CloudResourceProperty": "Memory",
                "CloudReference": "AWS::ECS::TaskDefinition.Memory",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "NetworkMode": {},
            "PidMode": {},
            "PlacementConstraints": {
                "Required": "No",
                "Type": "List of [TaskDefinitionPlacementConstraint",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ECS::TaskDefinition",
                "CloudResourceProperty": "PlacementConstraints",
                "CloudReference": "AWS::ECS::TaskDefinition.PlacementConstraints",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Expression": {},
                    "Type": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "memberOf"
                        ],
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "ProxyConfiguration": {},
            "RequiresCompatibilities": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "50",
                "UpdateRequires": "No interruption"
            },
            "TaskRoleArn": {},
            "Volumes": {}
        },
        "AWS::ECS::TaskDefinition.Cpu": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ECS::TaskDefinition",
            "CloudResourceProperty": "Cpu",
            "CloudReference": "AWS::ECS::TaskDefinition.Cpu",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ECS::TaskDefinition.ExecutionRoleArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ECS::TaskDefinition",
            "CloudResourceProperty": "ExecutionRoleArn",
            "CloudReference": "AWS::ECS::TaskDefinition.ExecutionRoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ECS::TaskDefinition.Family": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ECS::TaskDefinition",
            "CloudResourceProperty": "Family",
            "CloudReference": "AWS::ECS::TaskDefinition.Family",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ECS::TaskDefinition.Memory": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ECS::TaskDefinition",
            "CloudResourceProperty": "Memory",
            "CloudReference": "AWS::ECS::TaskDefinition.Memory",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ECS::TaskDefinition.PlacementConstraints": {
            "Required": "No",
            "Type": "List of [TaskDefinitionPlacementConstraint",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ECS::TaskDefinition",
            "CloudResourceProperty": "PlacementConstraints",
            "CloudReference": "AWS::ECS::TaskDefinition.PlacementConstraints",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Expression": {},
                "Type": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "memberOf"
                    ],
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::EFS::FileSystem": {
            "Encrypted": {
                "Required": "Conditional",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EFS::FileSystem",
                "CloudResourceProperty": "Encrypted",
                "CloudReference": "AWS::EFS::FileSystem.Encrypted",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "FileSystemTags": {
                "Required": "No",
                "Type": "List of [ElasticFileSystemTag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EFS::FileSystem",
                "CloudResourceProperty": "FileSystemTags",
                "CloudReference": "AWS::EFS::FileSystem.FileSystemTags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "KmsKeyId": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EFS::FileSystem",
                "CloudResourceProperty": "KmsKeyId",
                "CloudReference": "AWS::EFS::FileSystem.KmsKeyId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PerformanceMode": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "generalPurpose",
                    "maxIO"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EFS::FileSystem",
                "CloudResourceProperty": "PerformanceMode",
                "CloudReference": "AWS::EFS::FileSystem.PerformanceMode",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ProvisionedThroughputInMibps": {},
            "ThroughputMode": {}
        },
        "AWS::EFS::FileSystem.Encrypted": {
            "Required": "Conditional",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EFS::FileSystem",
            "CloudResourceProperty": "Encrypted",
            "CloudReference": "AWS::EFS::FileSystem.Encrypted",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EFS::FileSystem.FileSystemTags": {
            "Required": "No",
            "Type": "List of [ElasticFileSystemTag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EFS::FileSystem",
            "CloudResourceProperty": "FileSystemTags",
            "CloudReference": "AWS::EFS::FileSystem.FileSystemTags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EFS::FileSystem.KmsKeyId": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "2048",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EFS::FileSystem",
            "CloudResourceProperty": "KmsKeyId",
            "CloudReference": "AWS::EFS::FileSystem.KmsKeyId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EFS::FileSystem.PerformanceMode": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "generalPurpose",
                "maxIO"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EFS::FileSystem",
            "CloudResourceProperty": "PerformanceMode",
            "CloudReference": "AWS::EFS::FileSystem.PerformanceMode",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EFS::MountTarget": {
            "FileSystemId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EFS::MountTarget",
                "CloudResourceProperty": "FileSystemId",
                "CloudReference": "AWS::EFS::MountTarget.FileSystemId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "IpAddress": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EFS::MountTarget",
                "CloudResourceProperty": "IpAddress",
                "CloudReference": "AWS::EFS::MountTarget.IpAddress",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SecurityGroups": {
                "Required": "Yes",
                "Type": "List of String",
                "Maximum": "5",
                "UpdateRequires": "No interruption"
            },
            "SubnetId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "AWS::EFS::MountTarget.FileSystemId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EFS::MountTarget",
            "CloudResourceProperty": "FileSystemId",
            "CloudReference": "AWS::EFS::MountTarget.FileSystemId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EFS::MountTarget.IpAddress": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EFS::MountTarget",
            "CloudResourceProperty": "IpAddress",
            "CloudReference": "AWS::EFS::MountTarget.IpAddress",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EKS::Cluster": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EKS::Cluster",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::EKS::Cluster.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ResourcesVpcConfig": {},
            "RoleArn": {},
            "Version": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EKS::Cluster",
                "CloudResourceProperty": "Version",
                "CloudReference": "AWS::EKS::Cluster.Version",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EKS::Cluster.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EKS::Cluster",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::EKS::Cluster.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EKS::Cluster.Version": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EKS::Cluster",
            "CloudResourceProperty": "Version",
            "CloudReference": "AWS::EKS::Cluster.Version",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElastiCache::ReplicationGroup": {
            "AtRestEncryptionEnabled": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "AuthToken": {},
            "AutomaticFailoverEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElastiCache::ReplicationGroup",
                "CloudResourceProperty": "AutomaticFailoverEnabled",
                "CloudReference": "AWS::ElastiCache::ReplicationGroup.AutomaticFailoverEnabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AutoMinorVersionUpgrade": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElastiCache::ReplicationGroup",
                "CloudResourceProperty": "AutoMinorVersionUpgrade",
                "CloudReference": "AWS::ElastiCache::ReplicationGroup.AutoMinorVersionUpgrade",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CacheNodeType": {},
            "CacheParameterGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElastiCache::ReplicationGroup",
                "CloudResourceProperty": "CacheParameterGroupName",
                "CloudReference": "AWS::ElastiCache::ReplicationGroup.CacheParameterGroupName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CacheSecurityGroupNames": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "CacheSubnetGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Engine": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "EngineVersion": {},
            "KmsKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "NodeGroupConfiguration": {},
            "NodeGroupConfiguration ": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "Some interruptions"
            },
            "NotificationTopicArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "NumCacheClusters": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "NumNodeGroups": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Some interruptions"
            },
            "Port": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "PreferredCacheClusterAZs": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "PreferredMaintenanceWindow": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PrimaryClusterId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ReplicasPerNodeGroup": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "ReplicationGroupDescription": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ReplicationGroupId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SecurityGroupIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "SnapshotArns": {},
            "SnapshotName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SnapshotRetentionLimit": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "SnapshottingClusterId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SnapshotWindow": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            },
            "TransitEncryptionEnabled": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            }
        },
        "AWS::ElastiCache::ReplicationGroup.AutomaticFailoverEnabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElastiCache::ReplicationGroup",
            "CloudResourceProperty": "AutomaticFailoverEnabled",
            "CloudReference": "AWS::ElastiCache::ReplicationGroup.AutomaticFailoverEnabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElastiCache::ReplicationGroup.AutoMinorVersionUpgrade": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElastiCache::ReplicationGroup",
            "CloudResourceProperty": "AutoMinorVersionUpgrade",
            "CloudReference": "AWS::ElastiCache::ReplicationGroup.AutoMinorVersionUpgrade",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElastiCache::ReplicationGroup.CacheParameterGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElastiCache::ReplicationGroup",
            "CloudResourceProperty": "CacheParameterGroupName",
            "CloudReference": "AWS::ElastiCache::ReplicationGroup.CacheParameterGroupName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticBeanstalk::ConfigurationTemplate": {
            "ApplicationName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ElasticBeanstalk::ConfigurationTemplate",
                "CloudResourceProperty": "ApplicationName",
                "CloudReference": "AWS::ElasticBeanstalk::ConfigurationTemplate.ApplicationName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "200",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticBeanstalk::ConfigurationTemplate",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ElasticBeanstalk::ConfigurationTemplate.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EnvironmentId": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ElasticBeanstalk::ConfigurationTemplate",
                "CloudResourceProperty": "EnvironmentId",
                "CloudReference": "AWS::ElasticBeanstalk::ConfigurationTemplate.EnvironmentId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "OptionSettings": {},
            "PlatformArn": {},
            "SolutionStackName": {},
            "SourceConfiguration": {
                "Required": "Conditional",
                "Type": "SourceConfiguration",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ElasticBeanstalk::ConfigurationTemplate",
                "CloudResourceProperty": "SourceConfiguration",
                "CloudReference": "AWS::ElasticBeanstalk::ConfigurationTemplate.SourceConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ApplicationName": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "100",
                        "UpdateRequires": "No interruption"
                    },
                    "TemplateName": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "100",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::ElasticBeanstalk::ConfigurationTemplate.ApplicationName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ElasticBeanstalk::ConfigurationTemplate",
            "CloudResourceProperty": "ApplicationName",
            "CloudReference": "AWS::ElasticBeanstalk::ConfigurationTemplate.ApplicationName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticBeanstalk::ConfigurationTemplate.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "200",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticBeanstalk::ConfigurationTemplate",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ElasticBeanstalk::ConfigurationTemplate.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticBeanstalk::ConfigurationTemplate.EnvironmentId": {
            "Required": "Conditional",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ElasticBeanstalk::ConfigurationTemplate",
            "CloudResourceProperty": "EnvironmentId",
            "CloudReference": "AWS::ElasticBeanstalk::ConfigurationTemplate.EnvironmentId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticBeanstalk::ConfigurationTemplate.SourceConfiguration": {
            "Required": "Conditional",
            "Type": "SourceConfiguration",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ElasticBeanstalk::ConfigurationTemplate",
            "CloudResourceProperty": "SourceConfiguration",
            "CloudReference": "AWS::ElasticBeanstalk::ConfigurationTemplate.SourceConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ApplicationName": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "100",
                    "UpdateRequires": "No interruption"
                },
                "TemplateName": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "100",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ElasticLoadBalancingV2::Listener": {
            "Certificates": {
                "Required": "Conditional",
                "Type": "List of [Certificate",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::Listener",
                "CloudResourceProperty": "Certificates",
                "CloudReference": "AWS::ElasticLoadBalancingV2::Listener.Certificates",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "DefaultActions": {
                "Required": "Yes",
                "Type": "List of [Action",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::Listener",
                "CloudResourceProperty": "DefaultActions",
                "CloudReference": "AWS::ElasticLoadBalancingV2::Listener.DefaultActions",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "LoadBalancerArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::Listener",
                "CloudResourceProperty": "LoadBalancerArn",
                "CloudReference": "AWS::ElasticLoadBalancingV2::Listener.LoadBalancerArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Port": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "65535",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::Listener",
                "CloudResourceProperty": "Port",
                "CloudReference": "AWS::ElasticLoadBalancingV2::Listener.Port",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Protocol": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "HTTP",
                    "HTTPS",
                    "TCP",
                    "TLS"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::Listener",
                "CloudResourceProperty": "Protocol",
                "CloudReference": "AWS::ElasticLoadBalancingV2::Listener.Protocol",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SslPolicy": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::Listener",
                "CloudResourceProperty": "SslPolicy",
                "CloudReference": "AWS::ElasticLoadBalancingV2::Listener.SslPolicy",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ElasticLoadBalancingV2::Listener.Certificates": {
            "Required": "Conditional",
            "Type": "List of [Certificate",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::Listener",
            "CloudResourceProperty": "Certificates",
            "CloudReference": "AWS::ElasticLoadBalancingV2::Listener.Certificates",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::Listener.DefaultActions": {
            "Required": "Yes",
            "Type": "List of [Action",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::Listener",
            "CloudResourceProperty": "DefaultActions",
            "CloudReference": "AWS::ElasticLoadBalancingV2::Listener.DefaultActions",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::Listener.LoadBalancerArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::Listener",
            "CloudResourceProperty": "LoadBalancerArn",
            "CloudReference": "AWS::ElasticLoadBalancingV2::Listener.LoadBalancerArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::Listener.Port": {
            "Required": "Yes",
            "Type": "Integer",
            "Minimum": "1",
            "Maximum": "65535",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::Listener",
            "CloudResourceProperty": "Port",
            "CloudReference": "AWS::ElasticLoadBalancingV2::Listener.Port",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::Listener.Protocol": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "HTTP",
                "HTTPS",
                "TCP",
                "TLS"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::Listener",
            "CloudResourceProperty": "Protocol",
            "CloudReference": "AWS::ElasticLoadBalancingV2::Listener.Protocol",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::Listener.SslPolicy": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::Listener",
            "CloudResourceProperty": "SslPolicy",
            "CloudReference": "AWS::ElasticLoadBalancingV2::Listener.SslPolicy",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::ListenerCertificate": {
            "Certificates": {
                "Required": "Yes",
                "Type": "List of [Certificate",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::ListenerCertificate",
                "CloudResourceProperty": "Certificates",
                "CloudReference": "AWS::ElasticLoadBalancingV2::ListenerCertificate.Certificates",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "ListenerArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::ListenerCertificate",
                "CloudResourceProperty": "ListenerArn",
                "CloudReference": "AWS::ElasticLoadBalancingV2::ListenerCertificate.ListenerArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ElasticLoadBalancingV2::ListenerCertificate.Certificates": {
            "Required": "Yes",
            "Type": "List of [Certificate",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::ListenerCertificate",
            "CloudResourceProperty": "Certificates",
            "CloudReference": "AWS::ElasticLoadBalancingV2::ListenerCertificate.Certificates",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::ListenerCertificate.ListenerArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::ListenerCertificate",
            "CloudResourceProperty": "ListenerArn",
            "CloudReference": "AWS::ElasticLoadBalancingV2::ListenerCertificate.ListenerArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::ListenerRule": {
            "Actions": {
                "Required": "Yes",
                "Type": "List of [Action",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::ListenerRule",
                "CloudResourceProperty": "Actions",
                "CloudReference": "AWS::ElasticLoadBalancingV2::ListenerRule.Actions",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "Conditions": {
                "Required": "Yes",
                "Type": "List of [RuleCondition",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::ListenerRule",
                "CloudResourceProperty": "Conditions",
                "CloudReference": "AWS::ElasticLoadBalancingV2::ListenerRule.Conditions",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "ListenerArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::ListenerRule",
                "CloudResourceProperty": "ListenerArn",
                "CloudReference": "AWS::ElasticLoadBalancingV2::ListenerRule.ListenerArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Priority": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "50000",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::ListenerRule",
                "CloudResourceProperty": "Priority",
                "CloudReference": "AWS::ElasticLoadBalancingV2::ListenerRule.Priority",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ElasticLoadBalancingV2::ListenerRule.Actions": {
            "Required": "Yes",
            "Type": "List of [Action",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::ListenerRule",
            "CloudResourceProperty": "Actions",
            "CloudReference": "AWS::ElasticLoadBalancingV2::ListenerRule.Actions",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::ListenerRule.Conditions": {
            "Required": "Yes",
            "Type": "List of [RuleCondition",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::ListenerRule",
            "CloudResourceProperty": "Conditions",
            "CloudReference": "AWS::ElasticLoadBalancingV2::ListenerRule.Conditions",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::ListenerRule.ListenerArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::ListenerRule",
            "CloudResourceProperty": "ListenerArn",
            "CloudReference": "AWS::ElasticLoadBalancingV2::ListenerRule.ListenerArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::ListenerRule.Priority": {
            "Required": "Yes",
            "Type": "Integer",
            "Minimum": "1",
            "Maximum": "50000",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::ListenerRule",
            "CloudResourceProperty": "Priority",
            "CloudReference": "AWS::ElasticLoadBalancingV2::ListenerRule.Priority",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::LoadBalancer": {
            "IpAddressType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "dualstack",
                    "ipv4"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                "CloudResourceProperty": "IpAddressType",
                "CloudReference": "AWS::ElasticLoadBalancingV2::LoadBalancer.IpAddressType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "LoadBalancerAttributes": {
                "Required": "No",
                "Type": "List of [LoadBalancerAttribute",
                "Maximum": "20",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                "CloudResourceProperty": "LoadBalancerAttributes",
                "CloudReference": "AWS::ElasticLoadBalancingV2::LoadBalancer.LoadBalancerAttributes",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::ElasticLoadBalancingV2::LoadBalancer.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Scheme": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "internal",
                    "internet-facing"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                "CloudResourceProperty": "Scheme",
                "CloudReference": "AWS::ElasticLoadBalancingV2::LoadBalancer.Scheme",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SecurityGroups": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "SubnetMappings": {
                "Required": "No",
                "Type": "List of [SubnetMapping",
                "UpdateRequires": "Replacement"
            },
            "Subnets": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "application",
                    "network"
                ],
                "UpdateRequires": "Replacement"
            }
        },
        "AWS::ElasticLoadBalancingV2::LoadBalancer.IpAddressType": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "dualstack",
                "ipv4"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "CloudResourceProperty": "IpAddressType",
            "CloudReference": "AWS::ElasticLoadBalancingV2::LoadBalancer.IpAddressType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::LoadBalancer.LoadBalancerAttributes": {
            "Required": "No",
            "Type": "List of [LoadBalancerAttribute",
            "Maximum": "20",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "CloudResourceProperty": "LoadBalancerAttributes",
            "CloudReference": "AWS::ElasticLoadBalancingV2::LoadBalancer.LoadBalancerAttributes",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::LoadBalancer.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::ElasticLoadBalancingV2::LoadBalancer.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::LoadBalancer.Scheme": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "internal",
                "internet-facing"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "CloudResourceProperty": "Scheme",
            "CloudReference": "AWS::ElasticLoadBalancingV2::LoadBalancer.Scheme",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup": {
            "HealthCheckEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
                "CloudResourceProperty": "HealthCheckEnabled",
                "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckEnabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "HealthCheckIntervalSeconds": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "5",
                "Maximum": "300",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
                "CloudResourceProperty": "HealthCheckIntervalSeconds",
                "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckIntervalSeconds",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "HealthCheckPath": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
                "CloudResourceProperty": "HealthCheckPath",
                "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckPath",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "HealthCheckPort": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
                "CloudResourceProperty": "HealthCheckPort",
                "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckPort",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "HealthCheckProtocol": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "HTTP",
                    "HTTPS",
                    "TCP",
                    "TLS"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
                "CloudResourceProperty": "HealthCheckProtocol",
                "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckProtocol",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "HealthCheckTimeoutSeconds": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "2",
                "Maximum": "120",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
                "CloudResourceProperty": "HealthCheckTimeoutSeconds",
                "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckTimeoutSeconds",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "HealthyThresholdCount": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "2",
                "Maximum": "10",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
                "CloudResourceProperty": "HealthyThresholdCount",
                "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.HealthyThresholdCount",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Matcher": {
                "Required": "No",
                "Type": "Matcher",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
                "CloudResourceProperty": "Matcher",
                "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.Matcher",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "HttpCode": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Port": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "65535",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
                "CloudResourceProperty": "Port",
                "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.Port",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Protocol": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "HTTP",
                    "HTTPS",
                    "TCP",
                    "TLS"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
                "CloudResourceProperty": "Protocol",
                "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.Protocol",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "TargetGroupAttributes": {
                "Required": "No",
                "Type": "List of [TargetGroupAttribute",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
                "CloudResourceProperty": "TargetGroupAttributes",
                "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.TargetGroupAttributes",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Key": {
                        "Required": "No",
                        "Type": "String",
                        "Maximum": "256",
                        "Pattern": "^[a-zA-Z0-9._]+$",
                        "UpdateRequires": "No interruption"
                    },
                    "Value": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "TargetType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "instance",
                    "ip",
                    "lambda"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
                "CloudResourceProperty": "TargetType",
                "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.TargetType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Targets": {
                "Required": "No",
                "Type": "List of [TargetDescription",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
                "CloudResourceProperty": "Targets",
                "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.Targets",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AvailabilityZone": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Id": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Port": {
                        "Required": "No",
                        "Type": "Integer",
                        "Minimum": "1",
                        "Maximum": "65535",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "UnhealthyThresholdCount": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "2",
                "Maximum": "10",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
                "CloudResourceProperty": "UnhealthyThresholdCount",
                "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.UnhealthyThresholdCount",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "VpcId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
                "CloudResourceProperty": "VpcId",
                "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.VpcId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckEnabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "CloudResourceProperty": "HealthCheckEnabled",
            "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckEnabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckIntervalSeconds": {
            "Required": "No",
            "Type": "Integer",
            "Minimum": "5",
            "Maximum": "300",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "CloudResourceProperty": "HealthCheckIntervalSeconds",
            "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckIntervalSeconds",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckPath": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "CloudResourceProperty": "HealthCheckPath",
            "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckPath",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckPort": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "CloudResourceProperty": "HealthCheckPort",
            "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckPort",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckProtocol": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "HTTP",
                "HTTPS",
                "TCP",
                "TLS"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "CloudResourceProperty": "HealthCheckProtocol",
            "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckProtocol",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckTimeoutSeconds": {
            "Required": "No",
            "Type": "Integer",
            "Minimum": "2",
            "Maximum": "120",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "CloudResourceProperty": "HealthCheckTimeoutSeconds",
            "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckTimeoutSeconds",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup.HealthyThresholdCount": {
            "Required": "No",
            "Type": "Integer",
            "Minimum": "2",
            "Maximum": "10",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "CloudResourceProperty": "HealthyThresholdCount",
            "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.HealthyThresholdCount",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup.Matcher": {
            "Required": "No",
            "Type": "Matcher",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "CloudResourceProperty": "Matcher",
            "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.Matcher",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "HttpCode": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup.Port": {
            "Required": "No",
            "Type": "Integer",
            "Minimum": "1",
            "Maximum": "65535",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "CloudResourceProperty": "Port",
            "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.Port",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup.Protocol": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "HTTP",
                "HTTPS",
                "TCP",
                "TLS"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "CloudResourceProperty": "Protocol",
            "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.Protocol",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup.TargetGroupAttributes": {
            "Required": "No",
            "Type": "List of [TargetGroupAttribute",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "CloudResourceProperty": "TargetGroupAttributes",
            "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.TargetGroupAttributes",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Key": {
                    "Required": "No",
                    "Type": "String",
                    "Maximum": "256",
                    "Pattern": "^[a-zA-Z0-9._]+$",
                    "UpdateRequires": "No interruption"
                },
                "Value": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup.TargetType": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "instance",
                "ip",
                "lambda"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "CloudResourceProperty": "TargetType",
            "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.TargetType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup.Targets": {
            "Required": "No",
            "Type": "List of [TargetDescription",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "CloudResourceProperty": "Targets",
            "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.Targets",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AvailabilityZone": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Id": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Port": {
                    "Required": "No",
                    "Type": "Integer",
                    "Minimum": "1",
                    "Maximum": "65535",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup.UnhealthyThresholdCount": {
            "Required": "No",
            "Type": "Integer",
            "Minimum": "2",
            "Maximum": "10",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "CloudResourceProperty": "UnhealthyThresholdCount",
            "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.UnhealthyThresholdCount",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup.VpcId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "CloudResourceProperty": "VpcId",
            "CloudReference": "AWS::ElasticLoadBalancingV2::TargetGroup.VpcId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Elasticsearch::Domain": {
            "AccessPolicies": {},
            "AdvancedOptions": {},
            "DomainName": {},
            "EBSOptions": {},
            "ElasticsearchClusterConfig": {
                "Required": "No",
                "Type": "ElasticsearchClusterConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Elasticsearch::Domain",
                "CloudResourceProperty": "ElasticsearchClusterConfig",
                "CloudReference": "AWS::Elasticsearch::Domain.ElasticsearchClusterConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DedicatedMasterCount": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "DedicatedMasterEnabled": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "DedicatedMasterType": {},
                    "InstanceCount": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "InstanceType": {},
                    "ZoneAwarenessConfig": {
                        "Required": "No",
                        "Type": "ZoneAwarenessConfig",
                        "UpdateRequires": "No interruption"
                    },
                    "ZoneAwarenessEnabled": {
                        "AllowedValues": [
                            "True",
                            "False"
                        ]
                    }
                }
            },
            "ElasticsearchVersion": {},
            "EncryptionAtRestOptions": {
                "Required": "No",
                "Type": "EncryptionAtRestOptions",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Elasticsearch::Domain",
                "CloudResourceProperty": "EncryptionAtRestOptions",
                "CloudReference": "AWS::Elasticsearch::Domain.EncryptionAtRestOptions",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Enabled": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "Replacement"
                    },
                    "KmsKeyId": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "NodeToNodeEncryptionOptions": {
                "Required": "No",
                "Type": "NodeToNodeEncryptionOptions",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Elasticsearch::Domain",
                "CloudResourceProperty": "NodeToNodeEncryptionOptions",
                "CloudReference": "AWS::Elasticsearch::Domain.NodeToNodeEncryptionOptions",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Enabled": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "SnapshotOptions": {
                "Required": "No",
                "Type": "SnapshotOptions",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Elasticsearch::Domain",
                "CloudResourceProperty": "SnapshotOptions",
                "CloudReference": "AWS::Elasticsearch::Domain.SnapshotOptions",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AutomatedSnapshotStartHour": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Elasticsearch::Domain",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::Elasticsearch::Domain.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "VPCOptions": {}
        },
        "AWS::Elasticsearch::Domain.ElasticsearchClusterConfig": {
            "Required": "No",
            "Type": "ElasticsearchClusterConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Elasticsearch::Domain",
            "CloudResourceProperty": "ElasticsearchClusterConfig",
            "CloudReference": "AWS::Elasticsearch::Domain.ElasticsearchClusterConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DedicatedMasterCount": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "DedicatedMasterEnabled": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "DedicatedMasterType": {},
                "InstanceCount": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "InstanceType": {},
                "ZoneAwarenessConfig": {
                    "Required": "No",
                    "Type": "ZoneAwarenessConfig",
                    "UpdateRequires": "No interruption"
                },
                "ZoneAwarenessEnabled": {
                    "AllowedValues": [
                        "True",
                        "False"
                    ]
                }
            }
        },
        "AWS::Elasticsearch::Domain.EncryptionAtRestOptions": {
            "Required": "No",
            "Type": "EncryptionAtRestOptions",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Elasticsearch::Domain",
            "CloudResourceProperty": "EncryptionAtRestOptions",
            "CloudReference": "AWS::Elasticsearch::Domain.EncryptionAtRestOptions",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Enabled": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "Replacement"
                },
                "KmsKeyId": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::Elasticsearch::Domain.NodeToNodeEncryptionOptions": {
            "Required": "No",
            "Type": "NodeToNodeEncryptionOptions",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Elasticsearch::Domain",
            "CloudResourceProperty": "NodeToNodeEncryptionOptions",
            "CloudReference": "AWS::Elasticsearch::Domain.NodeToNodeEncryptionOptions",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Enabled": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::Elasticsearch::Domain.SnapshotOptions": {
            "Required": "No",
            "Type": "SnapshotOptions",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Elasticsearch::Domain",
            "CloudResourceProperty": "SnapshotOptions",
            "CloudReference": "AWS::Elasticsearch::Domain.SnapshotOptions",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AutomatedSnapshotStartHour": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Elasticsearch::Domain.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Elasticsearch::Domain",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::Elasticsearch::Domain.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EMR::InstanceGroupConfig": {
            "AutoScalingPolicy": {},
            "BidPrice": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EMR::InstanceGroupConfig",
                "CloudResourceProperty": "BidPrice",
                "CloudReference": "AWS::EMR::InstanceGroupConfig.BidPrice",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Configurations": {
                "Required": "No",
                "Type": "List of [Configuration",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EMR::InstanceGroupConfig",
                "CloudResourceProperty": "Configurations",
                "CloudReference": "AWS::EMR::InstanceGroupConfig.Configurations",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "EbsConfiguration": {
                "Required": "No",
                "Type": "EbsConfiguration",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EMR::InstanceGroupConfig",
                "CloudResourceProperty": "EbsConfiguration",
                "CloudReference": "AWS::EMR::InstanceGroupConfig.EbsConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InstanceCount": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::EMR::InstanceGroupConfig",
                "CloudResourceProperty": "InstanceCount",
                "CloudReference": "AWS::EMR::InstanceGroupConfig.InstanceCount",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InstanceRole": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "CORE",
                    "MASTER",
                    "TASK"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EMR::InstanceGroupConfig",
                "CloudResourceProperty": "InstanceRole",
                "CloudReference": "AWS::EMR::InstanceGroupConfig.InstanceRole",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InstanceType": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EMR::InstanceGroupConfig",
                "CloudResourceProperty": "InstanceType",
                "CloudReference": "AWS::EMR::InstanceGroupConfig.InstanceType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "JobFlowId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EMR::InstanceGroupConfig",
                "CloudResourceProperty": "JobFlowId",
                "CloudReference": "AWS::EMR::InstanceGroupConfig.JobFlowId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Market": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "ON_DEMAND",
                    "SPOT"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EMR::InstanceGroupConfig",
                "CloudResourceProperty": "Market",
                "CloudReference": "AWS::EMR::InstanceGroupConfig.Market",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EMR::InstanceGroupConfig",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::EMR::InstanceGroupConfig.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EMR::InstanceGroupConfig.BidPrice": {
            "Required": "No",
            "Type": "String",
            "Minimum": "0",
            "Maximum": "256",
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EMR::InstanceGroupConfig",
            "CloudResourceProperty": "BidPrice",
            "CloudReference": "AWS::EMR::InstanceGroupConfig.BidPrice",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EMR::InstanceGroupConfig.Configurations": {
            "Required": "No",
            "Type": "List of [Configuration",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EMR::InstanceGroupConfig",
            "CloudResourceProperty": "Configurations",
            "CloudReference": "AWS::EMR::InstanceGroupConfig.Configurations",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EMR::InstanceGroupConfig.EbsConfiguration": {
            "Required": "No",
            "Type": "EbsConfiguration",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EMR::InstanceGroupConfig",
            "CloudResourceProperty": "EbsConfiguration",
            "CloudReference": "AWS::EMR::InstanceGroupConfig.EbsConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EMR::InstanceGroupConfig.InstanceCount": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::EMR::InstanceGroupConfig",
            "CloudResourceProperty": "InstanceCount",
            "CloudReference": "AWS::EMR::InstanceGroupConfig.InstanceCount",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EMR::InstanceGroupConfig.InstanceRole": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "CORE",
                "MASTER",
                "TASK"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EMR::InstanceGroupConfig",
            "CloudResourceProperty": "InstanceRole",
            "CloudReference": "AWS::EMR::InstanceGroupConfig.InstanceRole",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EMR::InstanceGroupConfig.InstanceType": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "256",
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EMR::InstanceGroupConfig",
            "CloudResourceProperty": "InstanceType",
            "CloudReference": "AWS::EMR::InstanceGroupConfig.InstanceType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EMR::InstanceGroupConfig.JobFlowId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EMR::InstanceGroupConfig",
            "CloudResourceProperty": "JobFlowId",
            "CloudReference": "AWS::EMR::InstanceGroupConfig.JobFlowId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EMR::InstanceGroupConfig.Market": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "ON_DEMAND",
                "SPOT"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EMR::InstanceGroupConfig",
            "CloudResourceProperty": "Market",
            "CloudReference": "AWS::EMR::InstanceGroupConfig.Market",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EMR::InstanceGroupConfig.Name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "0",
            "Maximum": "256",
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EMR::InstanceGroupConfig",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::EMR::InstanceGroupConfig.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EMR::SecurityConfiguration": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "10280",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EMR::SecurityConfiguration",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::EMR::SecurityConfiguration.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SecurityConfiguration": {
                "Required": "Yes",
                "Type": "Json",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EMR::SecurityConfiguration",
                "CloudResourceProperty": "SecurityConfiguration",
                "CloudReference": "AWS::EMR::SecurityConfiguration.SecurityConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EMR::SecurityConfiguration.Name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "0",
            "Maximum": "10280",
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EMR::SecurityConfiguration",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::EMR::SecurityConfiguration.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EMR::SecurityConfiguration.SecurityConfiguration": {
            "Required": "Yes",
            "Type": "Json",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EMR::SecurityConfiguration",
            "CloudResourceProperty": "SecurityConfiguration",
            "CloudReference": "AWS::EMR::SecurityConfiguration.SecurityConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EMR::Step": {
            "ActionOnFailure": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "CANCEL_AND_WAIT",
                    "CONTINUE",
                    "TERMINATE_CLUSTER",
                    "TERMINATE_JOB_FLOW"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EMR::Step",
                "CloudResourceProperty": "ActionOnFailure",
                "CloudReference": "AWS::EMR::Step.ActionOnFailure",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "HadoopJarStep": {
                "Required": "Yes",
                "Type": "HadoopJarStepConfig",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EMR::Step",
                "CloudResourceProperty": "HadoopJarStep",
                "CloudReference": "AWS::EMR::Step.HadoopJarStep",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "JobFlowId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EMR::Step",
                "CloudResourceProperty": "JobFlowId",
                "CloudReference": "AWS::EMR::Step.JobFlowId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::EMR::Step",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::EMR::Step.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::EMR::Step.ActionOnFailure": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "CANCEL_AND_WAIT",
                "CONTINUE",
                "TERMINATE_CLUSTER",
                "TERMINATE_JOB_FLOW"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EMR::Step",
            "CloudResourceProperty": "ActionOnFailure",
            "CloudReference": "AWS::EMR::Step.ActionOnFailure",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EMR::Step.HadoopJarStep": {
            "Required": "Yes",
            "Type": "HadoopJarStepConfig",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EMR::Step",
            "CloudResourceProperty": "HadoopJarStep",
            "CloudReference": "AWS::EMR::Step.HadoopJarStep",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EMR::Step.JobFlowId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "0",
            "Maximum": "256",
            "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EMR::Step",
            "CloudResourceProperty": "JobFlowId",
            "CloudReference": "AWS::EMR::Step.JobFlowId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::EMR::Step.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::EMR::Step",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::EMR::Step.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Events::EventBusPolicy": {
            "Action": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "64",
                "Pattern": "events:[a-zA-Z]+",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Events::EventBusPolicy",
                "CloudResourceProperty": "Action",
                "CloudReference": "AWS::Events::EventBusPolicy.Action",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Condition": {},
            "Principal": {},
            "StatementId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "64",
                "Pattern": "[a-zA-Z0-9-_]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Events::EventBusPolicy",
                "CloudResourceProperty": "StatementId",
                "CloudReference": "AWS::Events::EventBusPolicy.StatementId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Events::EventBusPolicy.Action": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "64",
            "Pattern": "events:[a-zA-Z]+",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Events::EventBusPolicy",
            "CloudResourceProperty": "Action",
            "CloudReference": "AWS::Events::EventBusPolicy.Action",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Events::EventBusPolicy.StatementId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "64",
            "Pattern": "[a-zA-Z0-9-_]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Events::EventBusPolicy",
            "CloudResourceProperty": "StatementId",
            "CloudReference": "AWS::Events::EventBusPolicy.StatementId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Events::Rule": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "512",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Events::Rule",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::Events::Rule.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EventPattern": {},
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "64",
                "Pattern": "[\\.\\-_A-Za-z0-9]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Events::Rule",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Events::Rule.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RoleArn": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1600",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Events::Rule",
                "CloudResourceProperty": "RoleArn",
                "CloudReference": "AWS::Events::Rule.RoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ScheduleExpression": {
                "Required": "No",
                "Type": "String",
                "Maximum": "256",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Events::Rule",
                "CloudResourceProperty": "ScheduleExpression",
                "CloudReference": "AWS::Events::Rule.ScheduleExpression",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "State": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "DISABLED",
                    "ENABLED"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Events::Rule",
                "CloudResourceProperty": "State",
                "CloudReference": "AWS::Events::Rule.State",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Targets": {}
        },
        "AWS::Events::Rule.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "512",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Events::Rule",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::Events::Rule.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Events::Rule.Name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "64",
            "Pattern": "[\\.\\-_A-Za-z0-9]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Events::Rule",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Events::Rule.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Events::Rule.RoleArn": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Events::Rule",
            "CloudResourceProperty": "RoleArn",
            "CloudReference": "AWS::Events::Rule.RoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Events::Rule.ScheduleExpression": {
            "Required": "No",
            "Type": "String",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Events::Rule",
            "CloudResourceProperty": "ScheduleExpression",
            "CloudReference": "AWS::Events::Rule.ScheduleExpression",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Events::Rule.State": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "DISABLED",
                "ENABLED"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Events::Rule",
            "CloudResourceProperty": "State",
            "CloudReference": "AWS::Events::Rule.State",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::FSx::FileSystem": {
            "BackupId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::FSx::FileSystem",
                "CloudResourceProperty": "BackupId",
                "CloudReference": "AWS::FSx::FileSystem.BackupId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "FileSystemType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "LUSTRE",
                    "WINDOWS"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::FSx::FileSystem",
                "CloudResourceProperty": "FileSystemType",
                "CloudReference": "AWS::FSx::FileSystem.FileSystemType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "KmsKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::FSx::FileSystem",
                "CloudResourceProperty": "KmsKeyId",
                "CloudReference": "AWS::FSx::FileSystem.KmsKeyId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "LustreConfiguration": {
                "Required": "No",
                "Type": "LustreConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::FSx::FileSystem",
                "CloudResourceProperty": "LustreConfiguration",
                "CloudReference": "AWS::FSx::FileSystem.LustreConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ExportPath": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "3",
                        "Maximum": "900",
                        "UpdateRequires": "Replacement"
                    },
                    "ImportPath": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "3",
                        "Maximum": "900",
                        "UpdateRequires": "Replacement"
                    },
                    "ImportedFileChunkSize": {
                        "Required": "No",
                        "Type": "Integer",
                        "Minimum": "1",
                        "Maximum": "512000",
                        "UpdateRequires": "Replacement"
                    },
                    "WeeklyMaintenanceStartTime": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "SecurityGroupIds": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "50",
                "UpdateRequires": "Replacement"
            },
            "StorageCapacity": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "UpdateRequires": "Replacement"
            },
            "SubnetIds": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "50",
                "UpdateRequires": "Replacement"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "50",
                "UpdateRequires": "No interruption"
            },
            "WindowsConfiguration": {
                "Required": "No",
                "Type": "WindowsConfiguration",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::FSx::FileSystem.BackupId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::FSx::FileSystem",
            "CloudResourceProperty": "BackupId",
            "CloudReference": "AWS::FSx::FileSystem.BackupId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::FSx::FileSystem.FileSystemType": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "LUSTRE",
                "WINDOWS"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::FSx::FileSystem",
            "CloudResourceProperty": "FileSystemType",
            "CloudReference": "AWS::FSx::FileSystem.FileSystemType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::FSx::FileSystem.KmsKeyId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::FSx::FileSystem",
            "CloudResourceProperty": "KmsKeyId",
            "CloudReference": "AWS::FSx::FileSystem.KmsKeyId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::FSx::FileSystem.LustreConfiguration": {
            "Required": "No",
            "Type": "LustreConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::FSx::FileSystem",
            "CloudResourceProperty": "LustreConfiguration",
            "CloudReference": "AWS::FSx::FileSystem.LustreConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ExportPath": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "3",
                    "Maximum": "900",
                    "UpdateRequires": "Replacement"
                },
                "ImportPath": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "3",
                    "Maximum": "900",
                    "UpdateRequires": "Replacement"
                },
                "ImportedFileChunkSize": {
                    "Required": "No",
                    "Type": "Integer",
                    "Minimum": "1",
                    "Maximum": "512000",
                    "UpdateRequires": "Replacement"
                },
                "WeeklyMaintenanceStartTime": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::GameLift::Alias": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GameLift::Alias",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::GameLift::Alias.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "Pattern": ".*\\S.*",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GameLift::Alias",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::GameLift::Alias.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RoutingStrategy": {
                "Required": "Yes",
                "Type": "RoutingStrategy",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GameLift::Alias",
                "CloudResourceProperty": "RoutingStrategy",
                "CloudReference": "AWS::GameLift::Alias.RoutingStrategy",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "FleetId": {},
                    "Message": {},
                    "Type": {}
                }
            }
        },
        "AWS::GameLift::Alias.Description": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GameLift::Alias",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::GameLift::Alias.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GameLift::Alias.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "1024",
            "Pattern": ".*\\S.*",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GameLift::Alias",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::GameLift::Alias.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GameLift::Alias.RoutingStrategy": {
            "Required": "Yes",
            "Type": "RoutingStrategy",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GameLift::Alias",
            "CloudResourceProperty": "RoutingStrategy",
            "CloudReference": "AWS::GameLift::Alias.RoutingStrategy",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "FleetId": {},
                "Message": {},
                "Type": {}
            }
        },
        "AWS::GameLift::Build": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GameLift::Build",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::GameLift::Build.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "StorageLocation": {
                "Required": "No",
                "Type": "S3Location",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::GameLift::Build",
                "CloudResourceProperty": "StorageLocation",
                "CloudReference": "AWS::GameLift::Build.StorageLocation",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Version": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GameLift::Build",
                "CloudResourceProperty": "Version",
                "CloudReference": "AWS::GameLift::Build.Version",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::GameLift::Build.Name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GameLift::Build",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::GameLift::Build.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GameLift::Build.StorageLocation": {
            "Required": "No",
            "Type": "S3Location",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::GameLift::Build",
            "CloudResourceProperty": "StorageLocation",
            "CloudReference": "AWS::GameLift::Build.StorageLocation",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GameLift::Build.Version": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GameLift::Build",
            "CloudResourceProperty": "Version",
            "CloudReference": "AWS::GameLift::Build.Version",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GameLift::Fleet": {
            "BuildId": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^build-\\S+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::GameLift::Fleet",
                "CloudResourceProperty": "BuildId",
                "CloudReference": "AWS::GameLift::Fleet.BuildId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GameLift::Fleet",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::GameLift::Fleet.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DesiredEC2Instances": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "0",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GameLift::Fleet",
                "CloudResourceProperty": "DesiredEC2Instances",
                "CloudReference": "AWS::GameLift::Fleet.DesiredEC2Instances",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EC2InboundPermissions": {
                "Required": "No",
                "Type": "List of [IpPermission",
                "Maximum": "50",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GameLift::Fleet",
                "CloudResourceProperty": "EC2InboundPermissions",
                "CloudReference": "AWS::GameLift::Fleet.EC2InboundPermissions",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "EC2InstanceType": {},
            "LogPaths": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "MaxSize": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "0",
                "UpdateRequires": "No interruption"
            },
            "MinSize": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "0",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "UpdateRequires": "No interruption"
            },
            "ServerLaunchParameters": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "UpdateRequires": "Replacement"
            },
            "ServerLaunchPath": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "UpdateRequires": "Replacement"
            }
        },
        "AWS::GameLift::Fleet.BuildId": {
            "Required": "Yes",
            "Type": "String",
            "Pattern": "^build-\\S+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::GameLift::Fleet",
            "CloudResourceProperty": "BuildId",
            "CloudReference": "AWS::GameLift::Fleet.BuildId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GameLift::Fleet.Description": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GameLift::Fleet",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::GameLift::Fleet.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GameLift::Fleet.DesiredEC2Instances": {
            "Required": "Yes",
            "Type": "Integer",
            "Minimum": "0",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GameLift::Fleet",
            "CloudResourceProperty": "DesiredEC2Instances",
            "CloudReference": "AWS::GameLift::Fleet.DesiredEC2Instances",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GameLift::Fleet.EC2InboundPermissions": {
            "Required": "No",
            "Type": "List of [IpPermission",
            "Maximum": "50",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GameLift::Fleet",
            "CloudResourceProperty": "EC2InboundPermissions",
            "CloudReference": "AWS::GameLift::Fleet.EC2InboundPermissions",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Classifier": {
            "CsvClassifier": {
                "Required": "No",
                "Type": "CsvClassifier",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Classifier",
                "CloudResourceProperty": "CsvClassifier",
                "CloudReference": "AWS::Glue::Classifier.CsvClassifier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AllowSingleColumn": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "ContainsHeader": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Delimiter": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "DisableValueTrimming": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "Header": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    },
                    "Name": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "QuoteSymbol": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "GrokClassifier": {
                "Required": "No",
                "Type": "GrokClassifier",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Classifier",
                "CloudResourceProperty": "GrokClassifier",
                "CloudReference": "AWS::Glue::Classifier.GrokClassifier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Classification": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "CustomPatterns": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "GrokPattern": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Name": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "JsonClassifier": {
                "Required": "No",
                "Type": "JsonClassifier",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Classifier",
                "CloudResourceProperty": "JsonClassifier",
                "CloudReference": "AWS::Glue::Classifier.JsonClassifier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "JsonPath": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Name": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "XMLClassifier": {
                "Required": "No",
                "Type": "XMLClassifier",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Classifier",
                "CloudResourceProperty": "XMLClassifier",
                "CloudReference": "AWS::Glue::Classifier.XMLClassifier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Classification": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Name": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "RowTag": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::Glue::Classifier.CsvClassifier": {
            "Required": "No",
            "Type": "CsvClassifier",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Classifier",
            "CloudResourceProperty": "CsvClassifier",
            "CloudReference": "AWS::Glue::Classifier.CsvClassifier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AllowSingleColumn": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "ContainsHeader": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Delimiter": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "DisableValueTrimming": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "Header": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                },
                "Name": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "QuoteSymbol": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Glue::Classifier.GrokClassifier": {
            "Required": "No",
            "Type": "GrokClassifier",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Classifier",
            "CloudResourceProperty": "GrokClassifier",
            "CloudReference": "AWS::Glue::Classifier.GrokClassifier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Classification": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "CustomPatterns": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "GrokPattern": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Name": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::Glue::Classifier.JsonClassifier": {
            "Required": "No",
            "Type": "JsonClassifier",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Classifier",
            "CloudResourceProperty": "JsonClassifier",
            "CloudReference": "AWS::Glue::Classifier.JsonClassifier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "JsonPath": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Name": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::Glue::Classifier.XMLClassifier": {
            "Required": "No",
            "Type": "XMLClassifier",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Classifier",
            "CloudResourceProperty": "XMLClassifier",
            "CloudReference": "AWS::Glue::Classifier.XMLClassifier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Classification": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Name": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "RowTag": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Glue::Connection": {
            "CatalogId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Glue::Connection",
                "CloudResourceProperty": "CatalogId",
                "CloudReference": "AWS::Glue::Connection.CatalogId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ConnectionInput": {
                "Required": "Yes",
                "Type": "ConnectionInput",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Connection",
                "CloudResourceProperty": "ConnectionInput",
                "CloudReference": "AWS::Glue::Connection.ConnectionInput",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ConnectionProperties": {
                        "Required": "Yes",
                        "Type": "Json",
                        "UpdateRequires": "No interruption"
                    },
                    "ConnectionType": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Description": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "MatchCriteria": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    },
                    "Name": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "PhysicalConnectionRequirements": {
                        "Required": "No",
                        "Type": "PhysicalConnectionRequirements",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::Glue::Connection.CatalogId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Glue::Connection",
            "CloudResourceProperty": "CatalogId",
            "CloudReference": "AWS::Glue::Connection.CatalogId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Connection.ConnectionInput": {
            "Required": "Yes",
            "Type": "ConnectionInput",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Connection",
            "CloudResourceProperty": "ConnectionInput",
            "CloudReference": "AWS::Glue::Connection.ConnectionInput",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ConnectionProperties": {
                    "Required": "Yes",
                    "Type": "Json",
                    "UpdateRequires": "No interruption"
                },
                "ConnectionType": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Description": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "MatchCriteria": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                },
                "Name": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "PhysicalConnectionRequirements": {
                    "Required": "No",
                    "Type": "PhysicalConnectionRequirements",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Glue::Crawler": {
            "Classifiers": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Configuration": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "CrawlerSecurityConfiguration": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DatabaseName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Role": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Schedule": {
                "Required": "No",
                "Type": "Schedule",
                "UpdateRequires": "No interruption"
            },
            "SchemaChangePolicy": {
                "Required": "No",
                "Type": "SchemaChangePolicy",
                "UpdateRequires": "No interruption"
            },
            "TablePrefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "Targets": {
                "Required": "Yes",
                "Type": "Targets",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::Glue::Database": {
            "CatalogId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Glue::Database",
                "CloudResourceProperty": "CatalogId",
                "CloudReference": "AWS::Glue::Database.CatalogId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DatabaseInput": {
                "Required": "Yes",
                "Type": "DatabaseInput",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Database",
                "CloudResourceProperty": "DatabaseInput",
                "CloudReference": "AWS::Glue::Database.DatabaseInput",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Description": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "LocationUri": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Name": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "Parameters": {
                        "Required": "No",
                        "Type": "Json",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::Glue::Database.CatalogId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Glue::Database",
            "CloudResourceProperty": "CatalogId",
            "CloudReference": "AWS::Glue::Database.CatalogId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Database.DatabaseInput": {
            "Required": "Yes",
            "Type": "DatabaseInput",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Database",
            "CloudResourceProperty": "DatabaseInput",
            "CloudReference": "AWS::Glue::Database.DatabaseInput",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Description": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "LocationUri": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Name": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "Parameters": {
                    "Required": "No",
                    "Type": "Json",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Glue::DataCatalogEncryptionSettings": {
            "CatalogId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Glue::DataCatalogEncryptionSettings",
                "CloudResourceProperty": "CatalogId",
                "CloudReference": "AWS::Glue::DataCatalogEncryptionSettings.CatalogId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DataCatalogEncryptionSettings": {
                "Required": "Yes",
                "Type": "DataCatalogEncryptionSettings",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::DataCatalogEncryptionSettings",
                "CloudResourceProperty": "DataCatalogEncryptionSettings",
                "CloudReference": "AWS::Glue::DataCatalogEncryptionSettings.DataCatalogEncryptionSettings",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ConnectionPasswordEncryption": {
                        "Required": "No",
                        "Type": "ConnectionPasswordEncryption",
                        "UpdateRequires": "No interruption"
                    },
                    "EncryptionAtRest": {
                        "Required": "No",
                        "Type": "EncryptionAtRest",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::Glue::DataCatalogEncryptionSettings.CatalogId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Glue::DataCatalogEncryptionSettings",
            "CloudResourceProperty": "CatalogId",
            "CloudReference": "AWS::Glue::DataCatalogEncryptionSettings.CatalogId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::DataCatalogEncryptionSettings.DataCatalogEncryptionSettings": {
            "Required": "Yes",
            "Type": "DataCatalogEncryptionSettings",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::DataCatalogEncryptionSettings",
            "CloudResourceProperty": "DataCatalogEncryptionSettings",
            "CloudReference": "AWS::Glue::DataCatalogEncryptionSettings.DataCatalogEncryptionSettings",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ConnectionPasswordEncryption": {
                    "Required": "No",
                    "Type": "ConnectionPasswordEncryption",
                    "UpdateRequires": "No interruption"
                },
                "EncryptionAtRest": {
                    "Required": "No",
                    "Type": "EncryptionAtRest",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Glue::DevEndpoint": {
            "EndpointName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Glue::DevEndpoint",
                "CloudResourceProperty": "EndpointName",
                "CloudReference": "AWS::Glue::DevEndpoint.EndpointName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ExtraJarsS3Path": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::DevEndpoint",
                "CloudResourceProperty": "ExtraJarsS3Path",
                "CloudReference": "AWS::Glue::DevEndpoint.ExtraJarsS3Path",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ExtraPythonLibsS3Path": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::DevEndpoint",
                "CloudResourceProperty": "ExtraPythonLibsS3Path",
                "CloudReference": "AWS::Glue::DevEndpoint.ExtraPythonLibsS3Path",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "NumberOfNodes": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::DevEndpoint",
                "CloudResourceProperty": "NumberOfNodes",
                "CloudReference": "AWS::Glue::DevEndpoint.NumberOfNodes",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PublicKey": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::DevEndpoint",
                "CloudResourceProperty": "PublicKey",
                "CloudReference": "AWS::Glue::DevEndpoint.PublicKey",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::DevEndpoint",
                "CloudResourceProperty": "RoleArn",
                "CloudReference": "AWS::Glue::DevEndpoint.RoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SecurityConfiguration": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::DevEndpoint",
                "CloudResourceProperty": "SecurityConfiguration",
                "CloudReference": "AWS::Glue::DevEndpoint.SecurityConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SecurityGroupIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "SubnetId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::Glue::DevEndpoint.EndpointName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Glue::DevEndpoint",
            "CloudResourceProperty": "EndpointName",
            "CloudReference": "AWS::Glue::DevEndpoint.EndpointName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::DevEndpoint.ExtraJarsS3Path": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::DevEndpoint",
            "CloudResourceProperty": "ExtraJarsS3Path",
            "CloudReference": "AWS::Glue::DevEndpoint.ExtraJarsS3Path",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::DevEndpoint.ExtraPythonLibsS3Path": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::DevEndpoint",
            "CloudResourceProperty": "ExtraPythonLibsS3Path",
            "CloudReference": "AWS::Glue::DevEndpoint.ExtraPythonLibsS3Path",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::DevEndpoint.NumberOfNodes": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::DevEndpoint",
            "CloudResourceProperty": "NumberOfNodes",
            "CloudReference": "AWS::Glue::DevEndpoint.NumberOfNodes",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::DevEndpoint.PublicKey": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::DevEndpoint",
            "CloudResourceProperty": "PublicKey",
            "CloudReference": "AWS::Glue::DevEndpoint.PublicKey",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::DevEndpoint.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::DevEndpoint",
            "CloudResourceProperty": "RoleArn",
            "CloudReference": "AWS::Glue::DevEndpoint.RoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::DevEndpoint.SecurityConfiguration": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::DevEndpoint",
            "CloudResourceProperty": "SecurityConfiguration",
            "CloudReference": "AWS::Glue::DevEndpoint.SecurityConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Job": {
            "AllocatedCapacity": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Job",
                "CloudResourceProperty": "AllocatedCapacity",
                "CloudReference": "AWS::Glue::Job.AllocatedCapacity",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Command": {
                "Required": "Yes",
                "Type": "JobCommand",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Job",
                "CloudResourceProperty": "Command",
                "CloudReference": "AWS::Glue::Job.Command",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Name": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "PythonVersion": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "ScriptLocation": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Connections": {
                "Required": "No",
                "Type": "ConnectionsList",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Job",
                "CloudResourceProperty": "Connections",
                "CloudReference": "AWS::Glue::Job.Connections",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Connections": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "DefaultArguments": {},
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Job",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::Glue::Job.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ExecutionProperty": {
                "Required": "No",
                "Type": "ExecutionProperty",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Job",
                "CloudResourceProperty": "ExecutionProperty",
                "CloudReference": "AWS::Glue::Job.ExecutionProperty",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "MaxConcurrentRuns": {
                        "Required": "No",
                        "Type": "Double",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "GlueVersion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Job",
                "CloudResourceProperty": "GlueVersion",
                "CloudReference": "AWS::Glue::Job.GlueVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "LogUri": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Job",
                "CloudResourceProperty": "LogUri",
                "CloudReference": "AWS::Glue::Job.LogUri",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MaxCapacity": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Job",
                "CloudResourceProperty": "MaxCapacity",
                "CloudReference": "AWS::Glue::Job.MaxCapacity",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MaxRetries": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Job",
                "CloudResourceProperty": "MaxRetries",
                "CloudReference": "AWS::Glue::Job.MaxRetries",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Glue::Job",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Glue::Job.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "NumberOfWorkers": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Job",
                "CloudResourceProperty": "NumberOfWorkers",
                "CloudReference": "AWS::Glue::Job.NumberOfWorkers",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Role": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Job",
                "CloudResourceProperty": "Role",
                "CloudReference": "AWS::Glue::Job.Role",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SecurityConfiguration": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Job",
                "CloudResourceProperty": "SecurityConfiguration",
                "CloudReference": "AWS::Glue::Job.SecurityConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Job",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::Glue::Job.Tags",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "WorkerType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Job",
                "CloudResourceProperty": "WorkerType",
                "CloudReference": "AWS::Glue::Job.WorkerType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Glue::Job.AllocatedCapacity": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Job",
            "CloudResourceProperty": "AllocatedCapacity",
            "CloudReference": "AWS::Glue::Job.AllocatedCapacity",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Job.Command": {
            "Required": "Yes",
            "Type": "JobCommand",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Job",
            "CloudResourceProperty": "Command",
            "CloudReference": "AWS::Glue::Job.Command",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Name": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "PythonVersion": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "ScriptLocation": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Glue::Job.Connections": {
            "Required": "No",
            "Type": "ConnectionsList",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Job",
            "CloudResourceProperty": "Connections",
            "CloudReference": "AWS::Glue::Job.Connections",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Connections": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Glue::Job.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Job",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::Glue::Job.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Job.ExecutionProperty": {
            "Required": "No",
            "Type": "ExecutionProperty",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Job",
            "CloudResourceProperty": "ExecutionProperty",
            "CloudReference": "AWS::Glue::Job.ExecutionProperty",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "MaxConcurrentRuns": {
                    "Required": "No",
                    "Type": "Double",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Glue::Job.GlueVersion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Job",
            "CloudResourceProperty": "GlueVersion",
            "CloudReference": "AWS::Glue::Job.GlueVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Job.LogUri": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Job",
            "CloudResourceProperty": "LogUri",
            "CloudReference": "AWS::Glue::Job.LogUri",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Job.MaxCapacity": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Job",
            "CloudResourceProperty": "MaxCapacity",
            "CloudReference": "AWS::Glue::Job.MaxCapacity",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Job.MaxRetries": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Job",
            "CloudResourceProperty": "MaxRetries",
            "CloudReference": "AWS::Glue::Job.MaxRetries",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Job.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Glue::Job",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Glue::Job.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Job.NumberOfWorkers": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Job",
            "CloudResourceProperty": "NumberOfWorkers",
            "CloudReference": "AWS::Glue::Job.NumberOfWorkers",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Job.Role": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Job",
            "CloudResourceProperty": "Role",
            "CloudReference": "AWS::Glue::Job.Role",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Job.SecurityConfiguration": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Job",
            "CloudResourceProperty": "SecurityConfiguration",
            "CloudReference": "AWS::Glue::Job.SecurityConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Job.Tags": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Job",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::Glue::Job.Tags",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Job.WorkerType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Job",
            "CloudResourceProperty": "WorkerType",
            "CloudReference": "AWS::Glue::Job.WorkerType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::MLTransform": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::MLTransform",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::Glue::MLTransform.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InputRecordTables": {
                "Required": "Yes",
                "Type": "InputRecordTables",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Glue::MLTransform",
                "CloudResourceProperty": "InputRecordTables",
                "CloudReference": "AWS::Glue::MLTransform.InputRecordTables",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "GlueTables": {
                        "Required": "No",
                        "Type": "List",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "MaxCapacity": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::MLTransform",
                "CloudResourceProperty": "MaxCapacity",
                "CloudReference": "AWS::Glue::MLTransform.MaxCapacity",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MaxRetries": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::MLTransform",
                "CloudResourceProperty": "MaxRetries",
                "CloudReference": "AWS::Glue::MLTransform.MaxRetries",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::MLTransform",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Glue::MLTransform.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "NumberOfWorkers": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::MLTransform",
                "CloudResourceProperty": "NumberOfWorkers",
                "CloudReference": "AWS::Glue::MLTransform.NumberOfWorkers",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Role": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::MLTransform",
                "CloudResourceProperty": "Role",
                "CloudReference": "AWS::Glue::MLTransform.Role",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Timeout": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::MLTransform",
                "CloudResourceProperty": "Timeout",
                "CloudReference": "AWS::Glue::MLTransform.Timeout",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TransformParameters": {
                "Required": "Yes",
                "Type": "TransformParameters",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::MLTransform",
                "CloudResourceProperty": "TransformParameters",
                "CloudReference": "AWS::Glue::MLTransform.TransformParameters",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "FindMatchesParameters": {
                        "Required": "No",
                        "Type": "FindMatchesParameters",
                        "UpdateRequires": "No interruption"
                    },
                    "TransformType": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "WorkerType": {}
        },
        "AWS::Glue::MLTransform.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::MLTransform",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::Glue::MLTransform.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::MLTransform.InputRecordTables": {
            "Required": "Yes",
            "Type": "InputRecordTables",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Glue::MLTransform",
            "CloudResourceProperty": "InputRecordTables",
            "CloudReference": "AWS::Glue::MLTransform.InputRecordTables",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "GlueTables": {
                    "Required": "No",
                    "Type": "List",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Glue::MLTransform.MaxCapacity": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::MLTransform",
            "CloudResourceProperty": "MaxCapacity",
            "CloudReference": "AWS::Glue::MLTransform.MaxCapacity",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::MLTransform.MaxRetries": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::MLTransform",
            "CloudResourceProperty": "MaxRetries",
            "CloudReference": "AWS::Glue::MLTransform.MaxRetries",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::MLTransform.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::MLTransform",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Glue::MLTransform.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::MLTransform.NumberOfWorkers": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::MLTransform",
            "CloudResourceProperty": "NumberOfWorkers",
            "CloudReference": "AWS::Glue::MLTransform.NumberOfWorkers",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::MLTransform.Role": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::MLTransform",
            "CloudResourceProperty": "Role",
            "CloudReference": "AWS::Glue::MLTransform.Role",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::MLTransform.Timeout": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::MLTransform",
            "CloudResourceProperty": "Timeout",
            "CloudReference": "AWS::Glue::MLTransform.Timeout",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::MLTransform.TransformParameters": {
            "Required": "Yes",
            "Type": "TransformParameters",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::MLTransform",
            "CloudResourceProperty": "TransformParameters",
            "CloudReference": "AWS::Glue::MLTransform.TransformParameters",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "FindMatchesParameters": {
                    "Required": "No",
                    "Type": "FindMatchesParameters",
                    "UpdateRequires": "No interruption"
                },
                "TransformType": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Glue::Partition": {
            "CatalogId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Glue::Partition",
                "CloudResourceProperty": "CatalogId",
                "CloudReference": "AWS::Glue::Partition.CatalogId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DatabaseName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Glue::Partition",
                "CloudResourceProperty": "DatabaseName",
                "CloudReference": "AWS::Glue::Partition.DatabaseName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PartitionInput": {
                "Required": "Yes",
                "Type": "PartitionInput",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Partition",
                "CloudResourceProperty": "PartitionInput",
                "CloudReference": "AWS::Glue::Partition.PartitionInput",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Parameters": {
                        "Required": "No",
                        "Type": "Json",
                        "UpdateRequires": "No interruption"
                    },
                    "StorageDescriptor": {
                        "Required": "No",
                        "Type": "StorageDescriptor",
                        "UpdateRequires": "No interruption"
                    },
                    "Values": {
                        "Required": "Yes",
                        "Type": "List of String",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "TableName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Glue::Partition",
                "CloudResourceProperty": "TableName",
                "CloudReference": "AWS::Glue::Partition.TableName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Glue::Partition.CatalogId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Glue::Partition",
            "CloudResourceProperty": "CatalogId",
            "CloudReference": "AWS::Glue::Partition.CatalogId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Partition.DatabaseName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Glue::Partition",
            "CloudResourceProperty": "DatabaseName",
            "CloudReference": "AWS::Glue::Partition.DatabaseName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Partition.PartitionInput": {
            "Required": "Yes",
            "Type": "PartitionInput",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Partition",
            "CloudResourceProperty": "PartitionInput",
            "CloudReference": "AWS::Glue::Partition.PartitionInput",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Parameters": {
                    "Required": "No",
                    "Type": "Json",
                    "UpdateRequires": "No interruption"
                },
                "StorageDescriptor": {
                    "Required": "No",
                    "Type": "StorageDescriptor",
                    "UpdateRequires": "No interruption"
                },
                "Values": {
                    "Required": "Yes",
                    "Type": "List of String",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::Glue::Partition.TableName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Glue::Partition",
            "CloudResourceProperty": "TableName",
            "CloudReference": "AWS::Glue::Partition.TableName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::SecurityConfiguration": {
            "EncryptionConfiguration": {
                "Required": "Yes",
                "Type": "EncryptionConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::SecurityConfiguration",
                "CloudResourceProperty": "EncryptionConfiguration",
                "CloudReference": "AWS::Glue::SecurityConfiguration.EncryptionConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "CloudWatchEncryption": {
                        "Required": "No",
                        "Type": "CloudWatchEncryption",
                        "UpdateRequires": "No interruption"
                    },
                    "JobBookmarksEncryption": {
                        "Required": "No",
                        "Type": "JobBookmarksEncryption",
                        "UpdateRequires": "No interruption"
                    },
                    "S3Encryptions": {
                        "Required": "No",
                        "Type": "List",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Glue::SecurityConfiguration",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Glue::SecurityConfiguration.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Glue::SecurityConfiguration.EncryptionConfiguration": {
            "Required": "Yes",
            "Type": "EncryptionConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::SecurityConfiguration",
            "CloudResourceProperty": "EncryptionConfiguration",
            "CloudReference": "AWS::Glue::SecurityConfiguration.EncryptionConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "CloudWatchEncryption": {
                    "Required": "No",
                    "Type": "CloudWatchEncryption",
                    "UpdateRequires": "No interruption"
                },
                "JobBookmarksEncryption": {
                    "Required": "No",
                    "Type": "JobBookmarksEncryption",
                    "UpdateRequires": "No interruption"
                },
                "S3Encryptions": {
                    "Required": "No",
                    "Type": "List",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Glue::SecurityConfiguration.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Glue::SecurityConfiguration",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Glue::SecurityConfiguration.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Table": {
            "CatalogId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Glue::Table",
                "CloudResourceProperty": "CatalogId",
                "CloudReference": "AWS::Glue::Table.CatalogId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DatabaseName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Glue::Table",
                "CloudResourceProperty": "DatabaseName",
                "CloudReference": "AWS::Glue::Table.DatabaseName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TableInput": {
                "Required": "Yes",
                "Type": "TableInput",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Table",
                "CloudResourceProperty": "TableInput",
                "CloudReference": "AWS::Glue::Table.TableInput",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Description": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Name": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "Owner": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Parameters": {
                        "Required": "No",
                        "Type": "Json",
                        "UpdateRequires": "No interruption"
                    },
                    "PartitionKeys": {
                        "Required": "No",
                        "Type": "List of [Column",
                        "UpdateRequires": "No interruption"
                    },
                    "Retention": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "StorageDescriptor": {
                        "Required": "No",
                        "Type": "StorageDescriptor",
                        "UpdateRequires": "No interruption"
                    },
                    "TableType": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "ViewExpandedText": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "ViewOriginalText": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::Glue::Table.CatalogId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Glue::Table",
            "CloudResourceProperty": "CatalogId",
            "CloudReference": "AWS::Glue::Table.CatalogId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Table.DatabaseName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Glue::Table",
            "CloudResourceProperty": "DatabaseName",
            "CloudReference": "AWS::Glue::Table.DatabaseName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Table.TableInput": {
            "Required": "Yes",
            "Type": "TableInput",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Table",
            "CloudResourceProperty": "TableInput",
            "CloudReference": "AWS::Glue::Table.TableInput",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Description": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Name": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "Owner": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Parameters": {
                    "Required": "No",
                    "Type": "Json",
                    "UpdateRequires": "No interruption"
                },
                "PartitionKeys": {
                    "Required": "No",
                    "Type": "List of [Column",
                    "UpdateRequires": "No interruption"
                },
                "Retention": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "StorageDescriptor": {
                    "Required": "No",
                    "Type": "StorageDescriptor",
                    "UpdateRequires": "No interruption"
                },
                "TableType": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "ViewExpandedText": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "ViewOriginalText": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Glue::Trigger": {
            "Actions": {
                "Required": "Yes",
                "Type": "List of [Action",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Trigger",
                "CloudResourceProperty": "Actions",
                "CloudReference": "AWS::Glue::Trigger.Actions",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Arguments": {},
                    "JobName": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "SecurityConfiguration": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Trigger",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::Glue::Trigger.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Glue::Trigger",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Glue::Trigger.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Predicate": {
                "Required": "No",
                "Type": "Predicate",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Trigger",
                "CloudResourceProperty": "Predicate",
                "CloudReference": "AWS::Glue::Trigger.Predicate",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Conditions": {
                        "Required": "No",
                        "Type": "List of [Condition",
                        "UpdateRequires": "No interruption"
                    },
                    "Logical": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Schedule": {},
            "Tags": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Trigger",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::Glue::Trigger.Tags",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Glue::Trigger",
                "CloudResourceProperty": "Type",
                "CloudReference": "AWS::Glue::Trigger.Type",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Glue::Trigger.Actions": {
            "Required": "Yes",
            "Type": "List of [Action",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Trigger",
            "CloudResourceProperty": "Actions",
            "CloudReference": "AWS::Glue::Trigger.Actions",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Arguments": {},
                "JobName": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "SecurityConfiguration": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Glue::Trigger.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Trigger",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::Glue::Trigger.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Trigger.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Glue::Trigger",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Glue::Trigger.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Trigger.Predicate": {
            "Required": "No",
            "Type": "Predicate",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Trigger",
            "CloudResourceProperty": "Predicate",
            "CloudReference": "AWS::Glue::Trigger.Predicate",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Conditions": {
                    "Required": "No",
                    "Type": "List of [Condition",
                    "UpdateRequires": "No interruption"
                },
                "Logical": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Glue::Trigger.Tags": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Trigger",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::Glue::Trigger.Tags",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Glue::Trigger.Type": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Glue::Trigger",
            "CloudResourceProperty": "Type",
            "CloudReference": "AWS::Glue::Trigger.Type",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::ConnectorDefinition": {
            "InitialVersion": {
                "Required": "No",
                "Type": "ConnectorDefinitionVersion",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::ConnectorDefinition",
                "CloudResourceProperty": "InitialVersion",
                "CloudReference": "AWS::Greengrass::ConnectorDefinition.InitialVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Connectors": {
                        "Required": "Yes",
                        "Type": "List of [Connector",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Greengrass::ConnectorDefinition",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Greengrass::ConnectorDefinition.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {},
            "": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Greengrass::ConnectorDefinition",
                "CloudResourceProperty": "",
                "CloudReference": "AWS::Greengrass::ConnectorDefinition.",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Greengrass::ConnectorDefinition.InitialVersion": {
            "Required": "No",
            "Type": "ConnectorDefinitionVersion",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::ConnectorDefinition",
            "CloudResourceProperty": "InitialVersion",
            "CloudReference": "AWS::Greengrass::ConnectorDefinition.InitialVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Connectors": {
                    "Required": "Yes",
                    "Type": "List of [Connector",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::Greengrass::ConnectorDefinition.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Greengrass::ConnectorDefinition",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Greengrass::ConnectorDefinition.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::ConnectorDefinition.": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Greengrass::ConnectorDefinition",
            "CloudResourceProperty": "",
            "CloudReference": "AWS::Greengrass::ConnectorDefinition.",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::ConnectorDefinitionVersion": {
            "ConnectorDefinitionId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::ConnectorDefinitionVersion",
                "CloudResourceProperty": "ConnectorDefinitionId",
                "CloudReference": "AWS::Greengrass::ConnectorDefinitionVersion.ConnectorDefinitionId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Connectors": {
                "Required": "Yes",
                "Type": "List of [Connector",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::ConnectorDefinitionVersion",
                "CloudResourceProperty": "Connectors",
                "CloudReference": "AWS::Greengrass::ConnectorDefinitionVersion.Connectors",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ConnectorArn": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "Id": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "Parameters": {
                        "Required": "No",
                        "Type": "Json",
                        "UpdateRequires": "Replacement"
                    }
                }
            }
        },
        "AWS::Greengrass::ConnectorDefinitionVersion.ConnectorDefinitionId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::ConnectorDefinitionVersion",
            "CloudResourceProperty": "ConnectorDefinitionId",
            "CloudReference": "AWS::Greengrass::ConnectorDefinitionVersion.ConnectorDefinitionId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::ConnectorDefinitionVersion.Connectors": {
            "Required": "Yes",
            "Type": "List of [Connector",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::ConnectorDefinitionVersion",
            "CloudResourceProperty": "Connectors",
            "CloudReference": "AWS::Greengrass::ConnectorDefinitionVersion.Connectors",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ConnectorArn": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "Id": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "Parameters": {
                    "Required": "No",
                    "Type": "Json",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::Greengrass::CoreDefinition": {
            "InitialVersion": {
                "Required": "No",
                "Type": "CoreDefinitionVersion",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::CoreDefinition",
                "CloudResourceProperty": "InitialVersion",
                "CloudReference": "AWS::Greengrass::CoreDefinition.InitialVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Cores": {
                        "Required": "Yes",
                        "Type": "List of [Core",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Greengrass::CoreDefinition",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Greengrass::CoreDefinition.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {},
            "": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Greengrass::CoreDefinition",
                "CloudResourceProperty": "",
                "CloudReference": "AWS::Greengrass::CoreDefinition.",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Greengrass::CoreDefinition.InitialVersion": {
            "Required": "No",
            "Type": "CoreDefinitionVersion",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::CoreDefinition",
            "CloudResourceProperty": "InitialVersion",
            "CloudReference": "AWS::Greengrass::CoreDefinition.InitialVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Cores": {
                    "Required": "Yes",
                    "Type": "List of [Core",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::Greengrass::CoreDefinition.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Greengrass::CoreDefinition",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Greengrass::CoreDefinition.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::CoreDefinition.": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Greengrass::CoreDefinition",
            "CloudResourceProperty": "",
            "CloudReference": "AWS::Greengrass::CoreDefinition.",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::CoreDefinitionVersion": {
            "CoreDefinitionId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::CoreDefinitionVersion",
                "CloudResourceProperty": "CoreDefinitionId",
                "CloudReference": "AWS::Greengrass::CoreDefinitionVersion.CoreDefinitionId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Cores": {
                "Required": "Yes",
                "Type": "List of [Core",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::CoreDefinitionVersion",
                "CloudResourceProperty": "Cores",
                "CloudReference": "AWS::Greengrass::CoreDefinitionVersion.Cores",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "CertificateArn": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "Id": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "SyncShadow": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "Replacement"
                    },
                    "ThingArn": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    }
                }
            }
        },
        "AWS::Greengrass::CoreDefinitionVersion.CoreDefinitionId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::CoreDefinitionVersion",
            "CloudResourceProperty": "CoreDefinitionId",
            "CloudReference": "AWS::Greengrass::CoreDefinitionVersion.CoreDefinitionId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::CoreDefinitionVersion.Cores": {
            "Required": "Yes",
            "Type": "List of [Core",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::CoreDefinitionVersion",
            "CloudResourceProperty": "Cores",
            "CloudReference": "AWS::Greengrass::CoreDefinitionVersion.Cores",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "CertificateArn": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "Id": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "SyncShadow": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "Replacement"
                },
                "ThingArn": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::Greengrass::DeviceDefinition": {
            "InitialVersion": {
                "Required": "No",
                "Type": "DeviceDefinitionVersion",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::DeviceDefinition",
                "CloudResourceProperty": "InitialVersion",
                "CloudReference": "AWS::Greengrass::DeviceDefinition.InitialVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Devices": {
                        "Required": "Yes",
                        "Type": "List of [Device",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Greengrass::DeviceDefinition",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Greengrass::DeviceDefinition.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {},
            "": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Greengrass::DeviceDefinition",
                "CloudResourceProperty": "",
                "CloudReference": "AWS::Greengrass::DeviceDefinition.",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Greengrass::DeviceDefinition.InitialVersion": {
            "Required": "No",
            "Type": "DeviceDefinitionVersion",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::DeviceDefinition",
            "CloudResourceProperty": "InitialVersion",
            "CloudReference": "AWS::Greengrass::DeviceDefinition.InitialVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Devices": {
                    "Required": "Yes",
                    "Type": "List of [Device",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::Greengrass::DeviceDefinition.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Greengrass::DeviceDefinition",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Greengrass::DeviceDefinition.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::DeviceDefinition.": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Greengrass::DeviceDefinition",
            "CloudResourceProperty": "",
            "CloudReference": "AWS::Greengrass::DeviceDefinition.",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::DeviceDefinitionVersion": {
            "DeviceDefinitionId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::DeviceDefinitionVersion",
                "CloudResourceProperty": "DeviceDefinitionId",
                "CloudReference": "AWS::Greengrass::DeviceDefinitionVersion.DeviceDefinitionId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Devices": {
                "Required": "Yes",
                "Type": "List of [Device",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::DeviceDefinitionVersion",
                "CloudResourceProperty": "Devices",
                "CloudReference": "AWS::Greengrass::DeviceDefinitionVersion.Devices",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "CertificateArn": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "Id": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "SyncShadow": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "Replacement"
                    },
                    "ThingArn": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    }
                }
            }
        },
        "AWS::Greengrass::DeviceDefinitionVersion.DeviceDefinitionId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::DeviceDefinitionVersion",
            "CloudResourceProperty": "DeviceDefinitionId",
            "CloudReference": "AWS::Greengrass::DeviceDefinitionVersion.DeviceDefinitionId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::DeviceDefinitionVersion.Devices": {
            "Required": "Yes",
            "Type": "List of [Device",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::DeviceDefinitionVersion",
            "CloudResourceProperty": "Devices",
            "CloudReference": "AWS::Greengrass::DeviceDefinitionVersion.Devices",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "CertificateArn": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "Id": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "SyncShadow": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "Replacement"
                },
                "ThingArn": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::Greengrass::FunctionDefinition": {
            "InitialVersion": {
                "Required": "No",
                "Type": "FunctionDefinitionVersion",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::FunctionDefinition",
                "CloudResourceProperty": "InitialVersion",
                "CloudReference": "AWS::Greengrass::FunctionDefinition.InitialVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DefaultConfig": {
                        "Required": "No",
                        "Type": "DefaultConfig",
                        "UpdateRequires": "Replacement"
                    },
                    "Functions": {
                        "Required": "Yes",
                        "Type": "List of [Function",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Greengrass::FunctionDefinition",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Greengrass::FunctionDefinition.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {},
            "": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Greengrass::FunctionDefinition",
                "CloudResourceProperty": "",
                "CloudReference": "AWS::Greengrass::FunctionDefinition.",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Greengrass::FunctionDefinition.InitialVersion": {
            "Required": "No",
            "Type": "FunctionDefinitionVersion",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::FunctionDefinition",
            "CloudResourceProperty": "InitialVersion",
            "CloudReference": "AWS::Greengrass::FunctionDefinition.InitialVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DefaultConfig": {
                    "Required": "No",
                    "Type": "DefaultConfig",
                    "UpdateRequires": "Replacement"
                },
                "Functions": {
                    "Required": "Yes",
                    "Type": "List of [Function",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::Greengrass::FunctionDefinition.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Greengrass::FunctionDefinition",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Greengrass::FunctionDefinition.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::FunctionDefinition.": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Greengrass::FunctionDefinition",
            "CloudResourceProperty": "",
            "CloudReference": "AWS::Greengrass::FunctionDefinition.",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::FunctionDefinitionVersion": {
            "DefaultConfig": {
                "Required": "No",
                "Type": "DefaultConfig",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::FunctionDefinitionVersion",
                "CloudResourceProperty": "DefaultConfig",
                "CloudReference": "AWS::Greengrass::FunctionDefinitionVersion.DefaultConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Execution": {
                        "Required": "Yes",
                        "Type": "Execution",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "FunctionDefinitionId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::FunctionDefinitionVersion",
                "CloudResourceProperty": "FunctionDefinitionId",
                "CloudReference": "AWS::Greengrass::FunctionDefinitionVersion.FunctionDefinitionId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Functions": {
                "Required": "Yes",
                "Type": "List of [Function",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::FunctionDefinitionVersion",
                "CloudResourceProperty": "Functions",
                "CloudReference": "AWS::Greengrass::FunctionDefinitionVersion.Functions",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "FunctionArn": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "FunctionConfiguration": {
                        "Required": "Yes",
                        "Type": "FunctionConfiguration",
                        "UpdateRequires": "Replacement"
                    },
                    "Id": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    }
                }
            }
        },
        "AWS::Greengrass::FunctionDefinitionVersion.DefaultConfig": {
            "Required": "No",
            "Type": "DefaultConfig",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::FunctionDefinitionVersion",
            "CloudResourceProperty": "DefaultConfig",
            "CloudReference": "AWS::Greengrass::FunctionDefinitionVersion.DefaultConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Execution": {
                    "Required": "Yes",
                    "Type": "Execution",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Greengrass::FunctionDefinitionVersion.FunctionDefinitionId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::FunctionDefinitionVersion",
            "CloudResourceProperty": "FunctionDefinitionId",
            "CloudReference": "AWS::Greengrass::FunctionDefinitionVersion.FunctionDefinitionId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::FunctionDefinitionVersion.Functions": {
            "Required": "Yes",
            "Type": "List of [Function",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::FunctionDefinitionVersion",
            "CloudResourceProperty": "Functions",
            "CloudReference": "AWS::Greengrass::FunctionDefinitionVersion.Functions",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "FunctionArn": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "FunctionConfiguration": {
                    "Required": "Yes",
                    "Type": "FunctionConfiguration",
                    "UpdateRequires": "Replacement"
                },
                "Id": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::Greengrass::Group": {
            "InitialVersion": {
                "Required": "No",
                "Type": "GroupVersion",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::Group",
                "CloudResourceProperty": "InitialVersion",
                "CloudReference": "AWS::Greengrass::Group.InitialVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ConnectorDefinitionVersionArn": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "CoreDefinitionVersionArn": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "DeviceDefinitionVersionArn": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "FunctionDefinitionVersionArn": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "LoggerDefinitionVersionArn": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "ResourceDefinitionVersionArn": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "SubscriptionDefinitionVersionArn": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Greengrass::Group",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Greengrass::Group.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RoleArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Greengrass::Group",
                "CloudResourceProperty": "RoleArn",
                "CloudReference": "AWS::Greengrass::Group.RoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {},
            "": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Greengrass::Group",
                "CloudResourceProperty": "",
                "CloudReference": "AWS::Greengrass::Group.",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Greengrass::Group.InitialVersion": {
            "Required": "No",
            "Type": "GroupVersion",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::Group",
            "CloudResourceProperty": "InitialVersion",
            "CloudReference": "AWS::Greengrass::Group.InitialVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ConnectorDefinitionVersionArn": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "CoreDefinitionVersionArn": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "DeviceDefinitionVersionArn": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "FunctionDefinitionVersionArn": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "LoggerDefinitionVersionArn": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "ResourceDefinitionVersionArn": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "SubscriptionDefinitionVersionArn": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::Greengrass::Group.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Greengrass::Group",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Greengrass::Group.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::Group.RoleArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Greengrass::Group",
            "CloudResourceProperty": "RoleArn",
            "CloudReference": "AWS::Greengrass::Group.RoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::Group.": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Greengrass::Group",
            "CloudResourceProperty": "",
            "CloudReference": "AWS::Greengrass::Group.",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::GroupVersion": {
            "ConnectorDefinitionVersionArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::GroupVersion",
                "CloudResourceProperty": "ConnectorDefinitionVersionArn",
                "CloudReference": "AWS::Greengrass::GroupVersion.ConnectorDefinitionVersionArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CoreDefinitionVersionArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::GroupVersion",
                "CloudResourceProperty": "CoreDefinitionVersionArn",
                "CloudReference": "AWS::Greengrass::GroupVersion.CoreDefinitionVersionArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DeviceDefinitionVersionArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::GroupVersion",
                "CloudResourceProperty": "DeviceDefinitionVersionArn",
                "CloudReference": "AWS::Greengrass::GroupVersion.DeviceDefinitionVersionArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "FunctionDefinitionVersionArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::GroupVersion",
                "CloudResourceProperty": "FunctionDefinitionVersionArn",
                "CloudReference": "AWS::Greengrass::GroupVersion.FunctionDefinitionVersionArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "GroupId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::GroupVersion",
                "CloudResourceProperty": "GroupId",
                "CloudReference": "AWS::Greengrass::GroupVersion.GroupId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "LoggerDefinitionVersionArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::GroupVersion",
                "CloudResourceProperty": "LoggerDefinitionVersionArn",
                "CloudReference": "AWS::Greengrass::GroupVersion.LoggerDefinitionVersionArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ResourceDefinitionVersionArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::GroupVersion",
                "CloudResourceProperty": "ResourceDefinitionVersionArn",
                "CloudReference": "AWS::Greengrass::GroupVersion.ResourceDefinitionVersionArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SubscriptionDefinitionVersionArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::GroupVersion",
                "CloudResourceProperty": "SubscriptionDefinitionVersionArn",
                "CloudReference": "AWS::Greengrass::GroupVersion.SubscriptionDefinitionVersionArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Greengrass::GroupVersion.ConnectorDefinitionVersionArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::GroupVersion",
            "CloudResourceProperty": "ConnectorDefinitionVersionArn",
            "CloudReference": "AWS::Greengrass::GroupVersion.ConnectorDefinitionVersionArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::GroupVersion.CoreDefinitionVersionArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::GroupVersion",
            "CloudResourceProperty": "CoreDefinitionVersionArn",
            "CloudReference": "AWS::Greengrass::GroupVersion.CoreDefinitionVersionArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::GroupVersion.DeviceDefinitionVersionArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::GroupVersion",
            "CloudResourceProperty": "DeviceDefinitionVersionArn",
            "CloudReference": "AWS::Greengrass::GroupVersion.DeviceDefinitionVersionArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::GroupVersion.FunctionDefinitionVersionArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::GroupVersion",
            "CloudResourceProperty": "FunctionDefinitionVersionArn",
            "CloudReference": "AWS::Greengrass::GroupVersion.FunctionDefinitionVersionArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::GroupVersion.GroupId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::GroupVersion",
            "CloudResourceProperty": "GroupId",
            "CloudReference": "AWS::Greengrass::GroupVersion.GroupId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::GroupVersion.LoggerDefinitionVersionArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::GroupVersion",
            "CloudResourceProperty": "LoggerDefinitionVersionArn",
            "CloudReference": "AWS::Greengrass::GroupVersion.LoggerDefinitionVersionArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::GroupVersion.ResourceDefinitionVersionArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::GroupVersion",
            "CloudResourceProperty": "ResourceDefinitionVersionArn",
            "CloudReference": "AWS::Greengrass::GroupVersion.ResourceDefinitionVersionArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::GroupVersion.SubscriptionDefinitionVersionArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::GroupVersion",
            "CloudResourceProperty": "SubscriptionDefinitionVersionArn",
            "CloudReference": "AWS::Greengrass::GroupVersion.SubscriptionDefinitionVersionArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::LoggerDefinition": {
            "InitialVersion": {
                "Required": "No",
                "Type": "LoggerDefinitionVersion",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::LoggerDefinition",
                "CloudResourceProperty": "InitialVersion",
                "CloudReference": "AWS::Greengrass::LoggerDefinition.InitialVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Loggers": {
                        "Required": "Yes",
                        "Type": "List of [Logger",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Greengrass::LoggerDefinition",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Greengrass::LoggerDefinition.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {},
            "": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Greengrass::LoggerDefinition",
                "CloudResourceProperty": "",
                "CloudReference": "AWS::Greengrass::LoggerDefinition.",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Greengrass::LoggerDefinition.InitialVersion": {
            "Required": "No",
            "Type": "LoggerDefinitionVersion",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::LoggerDefinition",
            "CloudResourceProperty": "InitialVersion",
            "CloudReference": "AWS::Greengrass::LoggerDefinition.InitialVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Loggers": {
                    "Required": "Yes",
                    "Type": "List of [Logger",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::Greengrass::LoggerDefinition.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Greengrass::LoggerDefinition",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Greengrass::LoggerDefinition.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::LoggerDefinition.": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Greengrass::LoggerDefinition",
            "CloudResourceProperty": "",
            "CloudReference": "AWS::Greengrass::LoggerDefinition.",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::LoggerDefinitionVersion": {
            "LoggerDefinitionId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::LoggerDefinitionVersion",
                "CloudResourceProperty": "LoggerDefinitionId",
                "CloudReference": "AWS::Greengrass::LoggerDefinitionVersion.LoggerDefinitionId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Loggers": {
                "Required": "Yes",
                "Type": "List of [Logger",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::LoggerDefinitionVersion",
                "CloudResourceProperty": "Loggers",
                "CloudReference": "AWS::Greengrass::LoggerDefinitionVersion.Loggers",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Component": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "Id": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "Level": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "Space": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "Replacement"
                    },
                    "Type": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    }
                }
            }
        },
        "AWS::Greengrass::LoggerDefinitionVersion.LoggerDefinitionId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::LoggerDefinitionVersion",
            "CloudResourceProperty": "LoggerDefinitionId",
            "CloudReference": "AWS::Greengrass::LoggerDefinitionVersion.LoggerDefinitionId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::LoggerDefinitionVersion.Loggers": {
            "Required": "Yes",
            "Type": "List of [Logger",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::LoggerDefinitionVersion",
            "CloudResourceProperty": "Loggers",
            "CloudReference": "AWS::Greengrass::LoggerDefinitionVersion.Loggers",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Component": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "Id": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "Level": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "Space": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "Replacement"
                },
                "Type": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::Greengrass::ResourceDefinition": {
            "InitialVersion": {
                "Required": "No",
                "Type": "ResourceDefinitionVersion",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::ResourceDefinition",
                "CloudResourceProperty": "InitialVersion",
                "CloudReference": "AWS::Greengrass::ResourceDefinition.InitialVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Resources": {
                        "Required": "Yes",
                        "Type": "List of [ResourceInstance",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Greengrass::ResourceDefinition",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Greengrass::ResourceDefinition.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {},
            "": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Greengrass::ResourceDefinition",
                "CloudResourceProperty": "",
                "CloudReference": "AWS::Greengrass::ResourceDefinition.",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Greengrass::ResourceDefinition.InitialVersion": {
            "Required": "No",
            "Type": "ResourceDefinitionVersion",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::ResourceDefinition",
            "CloudResourceProperty": "InitialVersion",
            "CloudReference": "AWS::Greengrass::ResourceDefinition.InitialVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Resources": {
                    "Required": "Yes",
                    "Type": "List of [ResourceInstance",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::Greengrass::ResourceDefinition.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Greengrass::ResourceDefinition",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Greengrass::ResourceDefinition.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::ResourceDefinition.": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Greengrass::ResourceDefinition",
            "CloudResourceProperty": "",
            "CloudReference": "AWS::Greengrass::ResourceDefinition.",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::ResourceDefinitionVersion": {
            "ResourceDefinitionId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::ResourceDefinitionVersion",
                "CloudResourceProperty": "ResourceDefinitionId",
                "CloudReference": "AWS::Greengrass::ResourceDefinitionVersion.ResourceDefinitionId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Resources": {
                "Required": "Yes",
                "Type": "List of [ResourceInstance",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::ResourceDefinitionVersion",
                "CloudResourceProperty": "Resources",
                "CloudReference": "AWS::Greengrass::ResourceDefinitionVersion.Resources",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Id": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "Name": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "ResourceDataContainer": {
                        "Required": "Yes",
                        "Type": "ResourceDataContainer",
                        "UpdateRequires": "Replacement"
                    }
                }
            }
        },
        "AWS::Greengrass::ResourceDefinitionVersion.ResourceDefinitionId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::ResourceDefinitionVersion",
            "CloudResourceProperty": "ResourceDefinitionId",
            "CloudReference": "AWS::Greengrass::ResourceDefinitionVersion.ResourceDefinitionId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::ResourceDefinitionVersion.Resources": {
            "Required": "Yes",
            "Type": "List of [ResourceInstance",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::ResourceDefinitionVersion",
            "CloudResourceProperty": "Resources",
            "CloudReference": "AWS::Greengrass::ResourceDefinitionVersion.Resources",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Id": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "Name": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "ResourceDataContainer": {
                    "Required": "Yes",
                    "Type": "ResourceDataContainer",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::Greengrass::SubscriptionDefinition": {
            "InitialVersion": {
                "Required": "No",
                "Type": "SubscriptionDefinitionVersion",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::SubscriptionDefinition",
                "CloudResourceProperty": "InitialVersion",
                "CloudReference": "AWS::Greengrass::SubscriptionDefinition.InitialVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Subscriptions": {
                        "Required": "Yes",
                        "Type": "List of [Subscription",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Greengrass::SubscriptionDefinition",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Greengrass::SubscriptionDefinition.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {},
            "": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Greengrass::SubscriptionDefinition",
                "CloudResourceProperty": "",
                "CloudReference": "AWS::Greengrass::SubscriptionDefinition.",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Greengrass::SubscriptionDefinition.InitialVersion": {
            "Required": "No",
            "Type": "SubscriptionDefinitionVersion",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::SubscriptionDefinition",
            "CloudResourceProperty": "InitialVersion",
            "CloudReference": "AWS::Greengrass::SubscriptionDefinition.InitialVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Subscriptions": {
                    "Required": "Yes",
                    "Type": "List of [Subscription",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::Greengrass::SubscriptionDefinition.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Greengrass::SubscriptionDefinition",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Greengrass::SubscriptionDefinition.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::SubscriptionDefinition.": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Greengrass::SubscriptionDefinition",
            "CloudResourceProperty": "",
            "CloudReference": "AWS::Greengrass::SubscriptionDefinition.",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::SubscriptionDefinitionVersion": {
            "SubscriptionDefinitionId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::SubscriptionDefinitionVersion",
                "CloudResourceProperty": "SubscriptionDefinitionId",
                "CloudReference": "AWS::Greengrass::SubscriptionDefinitionVersion.SubscriptionDefinitionId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Subscriptions": {
                "Required": "Yes",
                "Type": "List of [Subscription",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Greengrass::SubscriptionDefinitionVersion",
                "CloudResourceProperty": "Subscriptions",
                "CloudReference": "AWS::Greengrass::SubscriptionDefinitionVersion.Subscriptions",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Id": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "Source": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "Subject": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "Target": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    }
                }
            }
        },
        "AWS::Greengrass::SubscriptionDefinitionVersion.SubscriptionDefinitionId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::SubscriptionDefinitionVersion",
            "CloudResourceProperty": "SubscriptionDefinitionId",
            "CloudReference": "AWS::Greengrass::SubscriptionDefinitionVersion.SubscriptionDefinitionId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Greengrass::SubscriptionDefinitionVersion.Subscriptions": {
            "Required": "Yes",
            "Type": "List of [Subscription",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Greengrass::SubscriptionDefinitionVersion",
            "CloudResourceProperty": "Subscriptions",
            "CloudReference": "AWS::Greengrass::SubscriptionDefinitionVersion.Subscriptions",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Id": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "Source": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "Subject": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "Target": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::GuardDuty::Detector": {
            "Enable": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GuardDuty::Detector",
                "CloudResourceProperty": "Enable",
                "CloudReference": "AWS::GuardDuty::Detector.Enable",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "FindingPublishingFrequency": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GuardDuty::Detector",
                "CloudResourceProperty": "FindingPublishingFrequency",
                "CloudReference": "AWS::GuardDuty::Detector.FindingPublishingFrequency",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::GuardDuty::Detector.Enable": {
            "Required": "Yes",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GuardDuty::Detector",
            "CloudResourceProperty": "Enable",
            "CloudReference": "AWS::GuardDuty::Detector.Enable",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::Detector.FindingPublishingFrequency": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GuardDuty::Detector",
            "CloudResourceProperty": "FindingPublishingFrequency",
            "CloudReference": "AWS::GuardDuty::Detector.FindingPublishingFrequency",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::Filter": {
            "Action": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GuardDuty::Filter",
                "CloudResourceProperty": "Action",
                "CloudReference": "AWS::GuardDuty::Filter.Action",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GuardDuty::Filter",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::GuardDuty::Filter.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DetectorId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::GuardDuty::Filter",
                "CloudResourceProperty": "DetectorId",
                "CloudReference": "AWS::GuardDuty::Filter.DetectorId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "FindingCriteria": {
                "Required": "Yes",
                "Type": "FindingCriteria",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GuardDuty::Filter",
                "CloudResourceProperty": "FindingCriteria",
                "CloudReference": "AWS::GuardDuty::Filter.FindingCriteria",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Criterion": {
                        "Required": "No",
                        "Type": "Json",
                        "UpdateRequires": "No interruption"
                    },
                    "ItemType": {
                        "Required": "No",
                        "Type": "Condition",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::GuardDuty::Filter",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::GuardDuty::Filter.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Rank": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GuardDuty::Filter",
                "CloudResourceProperty": "Rank",
                "CloudReference": "AWS::GuardDuty::Filter.Rank",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::GuardDuty::Filter.Action": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GuardDuty::Filter",
            "CloudResourceProperty": "Action",
            "CloudReference": "AWS::GuardDuty::Filter.Action",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::Filter.Description": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GuardDuty::Filter",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::GuardDuty::Filter.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::Filter.DetectorId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::GuardDuty::Filter",
            "CloudResourceProperty": "DetectorId",
            "CloudReference": "AWS::GuardDuty::Filter.DetectorId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::Filter.FindingCriteria": {
            "Required": "Yes",
            "Type": "FindingCriteria",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GuardDuty::Filter",
            "CloudResourceProperty": "FindingCriteria",
            "CloudReference": "AWS::GuardDuty::Filter.FindingCriteria",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Criterion": {
                    "Required": "No",
                    "Type": "Json",
                    "UpdateRequires": "No interruption"
                },
                "ItemType": {
                    "Required": "No",
                    "Type": "Condition",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::GuardDuty::Filter.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::GuardDuty::Filter",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::GuardDuty::Filter.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::Filter.Rank": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GuardDuty::Filter",
            "CloudResourceProperty": "Rank",
            "CloudReference": "AWS::GuardDuty::Filter.Rank",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::IPSet": {
            "Activate": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GuardDuty::IPSet",
                "CloudResourceProperty": "Activate",
                "CloudReference": "AWS::GuardDuty::IPSet.Activate",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DetectorId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::GuardDuty::IPSet",
                "CloudResourceProperty": "DetectorId",
                "CloudReference": "AWS::GuardDuty::IPSet.DetectorId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Format": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::GuardDuty::IPSet",
                "CloudResourceProperty": "Format",
                "CloudReference": "AWS::GuardDuty::IPSet.Format",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Location": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GuardDuty::IPSet",
                "CloudResourceProperty": "Location",
                "CloudReference": "AWS::GuardDuty::IPSet.Location",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GuardDuty::IPSet",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::GuardDuty::IPSet.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::GuardDuty::IPSet.Activate": {
            "Required": "Yes",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GuardDuty::IPSet",
            "CloudResourceProperty": "Activate",
            "CloudReference": "AWS::GuardDuty::IPSet.Activate",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::IPSet.DetectorId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::GuardDuty::IPSet",
            "CloudResourceProperty": "DetectorId",
            "CloudReference": "AWS::GuardDuty::IPSet.DetectorId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::IPSet.Format": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::GuardDuty::IPSet",
            "CloudResourceProperty": "Format",
            "CloudReference": "AWS::GuardDuty::IPSet.Format",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::IPSet.Location": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GuardDuty::IPSet",
            "CloudResourceProperty": "Location",
            "CloudReference": "AWS::GuardDuty::IPSet.Location",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::IPSet.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GuardDuty::IPSet",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::GuardDuty::IPSet.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::Master": {
            "DetectorId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::GuardDuty::Master",
                "CloudResourceProperty": "DetectorId",
                "CloudReference": "AWS::GuardDuty::Master.DetectorId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InvitationId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::GuardDuty::Master",
                "CloudResourceProperty": "InvitationId",
                "CloudReference": "AWS::GuardDuty::Master.InvitationId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MasterId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::GuardDuty::Master",
                "CloudResourceProperty": "MasterId",
                "CloudReference": "AWS::GuardDuty::Master.MasterId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::GuardDuty::Master.DetectorId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::GuardDuty::Master",
            "CloudResourceProperty": "DetectorId",
            "CloudReference": "AWS::GuardDuty::Master.DetectorId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::Master.InvitationId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::GuardDuty::Master",
            "CloudResourceProperty": "InvitationId",
            "CloudReference": "AWS::GuardDuty::Master.InvitationId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::Master.MasterId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::GuardDuty::Master",
            "CloudResourceProperty": "MasterId",
            "CloudReference": "AWS::GuardDuty::Master.MasterId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::Member": {
            "DetectorId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::GuardDuty::Member",
                "CloudResourceProperty": "DetectorId",
                "CloudReference": "AWS::GuardDuty::Member.DetectorId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DisableEmailNotification": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GuardDuty::Member",
                "CloudResourceProperty": "DisableEmailNotification",
                "CloudReference": "AWS::GuardDuty::Member.DisableEmailNotification",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Email": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::GuardDuty::Member",
                "CloudResourceProperty": "Email",
                "CloudReference": "AWS::GuardDuty::Member.Email",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MemberId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::GuardDuty::Member",
                "CloudResourceProperty": "MemberId",
                "CloudReference": "AWS::GuardDuty::Member.MemberId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Message": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GuardDuty::Member",
                "CloudResourceProperty": "Message",
                "CloudReference": "AWS::GuardDuty::Member.Message",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Status": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GuardDuty::Member",
                "CloudResourceProperty": "Status",
                "CloudReference": "AWS::GuardDuty::Member.Status",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::GuardDuty::Member.DetectorId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::GuardDuty::Member",
            "CloudResourceProperty": "DetectorId",
            "CloudReference": "AWS::GuardDuty::Member.DetectorId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::Member.DisableEmailNotification": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GuardDuty::Member",
            "CloudResourceProperty": "DisableEmailNotification",
            "CloudReference": "AWS::GuardDuty::Member.DisableEmailNotification",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::Member.Email": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::GuardDuty::Member",
            "CloudResourceProperty": "Email",
            "CloudReference": "AWS::GuardDuty::Member.Email",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::Member.MemberId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::GuardDuty::Member",
            "CloudResourceProperty": "MemberId",
            "CloudReference": "AWS::GuardDuty::Member.MemberId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::Member.Message": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GuardDuty::Member",
            "CloudResourceProperty": "Message",
            "CloudReference": "AWS::GuardDuty::Member.Message",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::Member.Status": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GuardDuty::Member",
            "CloudResourceProperty": "Status",
            "CloudReference": "AWS::GuardDuty::Member.Status",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::ThreatIntelSet": {
            "Activate": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GuardDuty::ThreatIntelSet",
                "CloudResourceProperty": "Activate",
                "CloudReference": "AWS::GuardDuty::ThreatIntelSet.Activate",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DetectorId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::GuardDuty::ThreatIntelSet",
                "CloudResourceProperty": "DetectorId",
                "CloudReference": "AWS::GuardDuty::ThreatIntelSet.DetectorId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Format": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::GuardDuty::ThreatIntelSet",
                "CloudResourceProperty": "Format",
                "CloudReference": "AWS::GuardDuty::ThreatIntelSet.Format",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Location": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GuardDuty::ThreatIntelSet",
                "CloudResourceProperty": "Location",
                "CloudReference": "AWS::GuardDuty::ThreatIntelSet.Location",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::GuardDuty::ThreatIntelSet",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::GuardDuty::ThreatIntelSet.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::GuardDuty::ThreatIntelSet.Activate": {
            "Required": "Yes",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GuardDuty::ThreatIntelSet",
            "CloudResourceProperty": "Activate",
            "CloudReference": "AWS::GuardDuty::ThreatIntelSet.Activate",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::ThreatIntelSet.DetectorId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::GuardDuty::ThreatIntelSet",
            "CloudResourceProperty": "DetectorId",
            "CloudReference": "AWS::GuardDuty::ThreatIntelSet.DetectorId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::ThreatIntelSet.Format": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::GuardDuty::ThreatIntelSet",
            "CloudResourceProperty": "Format",
            "CloudReference": "AWS::GuardDuty::ThreatIntelSet.Format",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::ThreatIntelSet.Location": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GuardDuty::ThreatIntelSet",
            "CloudResourceProperty": "Location",
            "CloudReference": "AWS::GuardDuty::ThreatIntelSet.Location",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::GuardDuty::ThreatIntelSet.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::GuardDuty::ThreatIntelSet",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::GuardDuty::ThreatIntelSet.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IAM::InstanceProfile": {
            "InstanceProfileName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\w+=,.@-]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IAM::InstanceProfile",
                "CloudResourceProperty": "InstanceProfileName",
                "CloudReference": "AWS::IAM::InstanceProfile.InstanceProfileName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Path": {},
            "Roles": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::IAM::InstanceProfile.InstanceProfileName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "[\\w+=,.@-]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IAM::InstanceProfile",
            "CloudResourceProperty": "InstanceProfileName",
            "CloudReference": "AWS::IAM::InstanceProfile.InstanceProfileName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IAM::ManagedPolicy": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "1000",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IAM::ManagedPolicy",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::IAM::ManagedPolicy.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Groups": {
                "Required": "No",
                "Type": "List of String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\w+=,.@-]+",
                "UpdateRequires": "No interruption"
            },
            "ManagedPolicyName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Path": {},
            "PolicyDocument": {
                "Required": "Yes",
                "Type": "Json",
                "Minimum": "1",
                "Maximum": "131072",
                "Pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
                "UpdateRequires": "No interruption"
            },
            "Roles": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Users": {
                "Required": "No",
                "Type": "List of String",
                "Minimum": "1",
                "Maximum": "64",
                "Pattern": "[\\w+=,.@-]+",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::IAM::ManagedPolicy.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "1000",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IAM::ManagedPolicy",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::IAM::ManagedPolicy.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IAM::Policy": {
            "Groups": {
                "Required": "No",
                "Type": "List of String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\w+=,.@-]+",
                "UpdateRequires": "No interruption"
            },
            "PolicyDocument": {
                "Required": "Yes",
                "Type": "Json",
                "Minimum": "1",
                "Maximum": "131072",
                "Pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
                "UpdateRequires": "No interruption"
            },
            "PolicyName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\w+=,.@-]+",
                "UpdateRequires": "No interruption"
            },
            "Roles": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Users": {
                "Required": "No",
                "Type": "List of String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\w+=,.@-]+",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::IAM::Role": {
            "AssumeRolePolicyDocument": {},
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "1000",
                "Pattern": "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IAM::Role",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::IAM::Role.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ManagedPolicyArns": {},
            "MaxSessionDuration": {},
            "Path": {},
            "PermissionsBoundary": {},
            "Policies": {},
            "RoleName": {},
            "Tags": {}
        },
        "AWS::IAM::Role.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "1000",
            "Pattern": "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IAM::Role",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::IAM::Role.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IAM::ServiceLinkedRole": {
            "AWSServiceName": {},
            "CustomSuffix": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "64",
                "Pattern": "[\\w+=,.@-]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IAM::ServiceLinkedRole",
                "CloudResourceProperty": "CustomSuffix",
                "CloudReference": "AWS::IAM::ServiceLinkedRole.CustomSuffix",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "1000",
                "Pattern": "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IAM::ServiceLinkedRole",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::IAM::ServiceLinkedRole.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::IAM::ServiceLinkedRole.CustomSuffix": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "64",
            "Pattern": "[\\w+=,.@-]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IAM::ServiceLinkedRole",
            "CloudResourceProperty": "CustomSuffix",
            "CloudReference": "AWS::IAM::ServiceLinkedRole.CustomSuffix",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IAM::ServiceLinkedRole.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "1000",
            "Pattern": "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IAM::ServiceLinkedRole",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::IAM::ServiceLinkedRole.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Inspector::AssessmentTarget": {
            "AssessmentTargetName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "140",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Inspector::AssessmentTarget",
                "CloudResourceProperty": "AssessmentTargetName",
                "CloudReference": "AWS::Inspector::AssessmentTarget.AssessmentTargetName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ResourceGroupArn": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "300",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Inspector::AssessmentTarget",
                "CloudResourceProperty": "ResourceGroupArn",
                "CloudReference": "AWS::Inspector::AssessmentTarget.ResourceGroupArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Inspector::AssessmentTarget.AssessmentTargetName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "140",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Inspector::AssessmentTarget",
            "CloudResourceProperty": "AssessmentTargetName",
            "CloudReference": "AWS::Inspector::AssessmentTarget.AssessmentTargetName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Inspector::AssessmentTarget.ResourceGroupArn": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "300",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Inspector::AssessmentTarget",
            "CloudResourceProperty": "ResourceGroupArn",
            "CloudReference": "AWS::Inspector::AssessmentTarget.ResourceGroupArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Inspector::AssessmentTemplate": {
            "AssessmentTargetArn": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "300",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Inspector::AssessmentTemplate",
                "CloudResourceProperty": "AssessmentTargetArn",
                "CloudReference": "AWS::Inspector::AssessmentTemplate.AssessmentTargetArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AssessmentTemplateName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "140",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Inspector::AssessmentTemplate",
                "CloudResourceProperty": "AssessmentTemplateName",
                "CloudReference": "AWS::Inspector::AssessmentTemplate.AssessmentTemplateName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DurationInSeconds": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "180",
                "Maximum": "86400",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Inspector::AssessmentTemplate",
                "CloudResourceProperty": "DurationInSeconds",
                "CloudReference": "AWS::Inspector::AssessmentTemplate.DurationInSeconds",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RulesPackageArns": {
                "Required": "Yes",
                "Type": "List of String",
                "Maximum": "50",
                "UpdateRequires": "Replacement"
            },
            "UserAttributesForFindings": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "10",
                "UpdateRequires": "Replacement"
            }
        },
        "AWS::Inspector::AssessmentTemplate.AssessmentTargetArn": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "300",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Inspector::AssessmentTemplate",
            "CloudResourceProperty": "AssessmentTargetArn",
            "CloudReference": "AWS::Inspector::AssessmentTemplate.AssessmentTargetArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Inspector::AssessmentTemplate.AssessmentTemplateName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "140",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Inspector::AssessmentTemplate",
            "CloudResourceProperty": "AssessmentTemplateName",
            "CloudReference": "AWS::Inspector::AssessmentTemplate.AssessmentTemplateName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Inspector::AssessmentTemplate.DurationInSeconds": {
            "Required": "Yes",
            "Type": "Integer",
            "Minimum": "180",
            "Maximum": "86400",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Inspector::AssessmentTemplate",
            "CloudResourceProperty": "DurationInSeconds",
            "CloudReference": "AWS::Inspector::AssessmentTemplate.DurationInSeconds",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Inspector::ResourceGroup": {
            "ResourceGroupTags": {
                "Required": "Yes",
                "Type": "List of [Tag",
                "Maximum": "10",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Inspector::ResourceGroup",
                "CloudResourceProperty": "ResourceGroupTags",
                "CloudReference": "AWS::Inspector::ResourceGroup.ResourceGroupTags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Inspector::ResourceGroup.ResourceGroupTags": {
            "Required": "Yes",
            "Type": "List of [Tag",
            "Maximum": "10",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Inspector::ResourceGroup",
            "CloudResourceProperty": "ResourceGroupTags",
            "CloudReference": "AWS::Inspector::ResourceGroup.ResourceGroupTags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoT::Certificate": {
            "CertificateSigningRequest": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoT::Certificate",
                "CloudResourceProperty": "CertificateSigningRequest",
                "CloudReference": "AWS::IoT::Certificate.CertificateSigningRequest",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Status": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoT::Certificate",
                "CloudResourceProperty": "Status",
                "CloudReference": "AWS::IoT::Certificate.Status",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::IoT::Certificate.CertificateSigningRequest": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoT::Certificate",
            "CloudResourceProperty": "CertificateSigningRequest",
            "CloudReference": "AWS::IoT::Certificate.CertificateSigningRequest",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoT::Certificate.Status": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoT::Certificate",
            "CloudResourceProperty": "Status",
            "CloudReference": "AWS::IoT::Certificate.Status",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoT::Policy": {
            "PolicyDocument": {
                "Required": "Yes",
                "Type": "Json",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoT::Policy",
                "CloudResourceProperty": "PolicyDocument",
                "CloudReference": "AWS::IoT::Policy.PolicyDocument",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PolicyName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoT::Policy",
                "CloudResourceProperty": "PolicyName",
                "CloudReference": "AWS::IoT::Policy.PolicyName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::IoT::Policy.PolicyDocument": {
            "Required": "Yes",
            "Type": "Json",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoT::Policy",
            "CloudResourceProperty": "PolicyDocument",
            "CloudReference": "AWS::IoT::Policy.PolicyDocument",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoT::Policy.PolicyName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoT::Policy",
            "CloudResourceProperty": "PolicyName",
            "CloudReference": "AWS::IoT::Policy.PolicyName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoT::PolicyPrincipalAttachment": {
            "PolicyName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoT::PolicyPrincipalAttachment",
                "CloudResourceProperty": "PolicyName",
                "CloudReference": "AWS::IoT::PolicyPrincipalAttachment.PolicyName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Principal": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoT::PolicyPrincipalAttachment",
                "CloudResourceProperty": "Principal",
                "CloudReference": "AWS::IoT::PolicyPrincipalAttachment.Principal",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::IoT::PolicyPrincipalAttachment.PolicyName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoT::PolicyPrincipalAttachment",
            "CloudResourceProperty": "PolicyName",
            "CloudReference": "AWS::IoT::PolicyPrincipalAttachment.PolicyName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoT::PolicyPrincipalAttachment.Principal": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoT::PolicyPrincipalAttachment",
            "CloudResourceProperty": "Principal",
            "CloudReference": "AWS::IoT::PolicyPrincipalAttachment.Principal",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoT::Thing": {
            "AttributePayload": {
                "Required": "No",
                "Type": "AttributePayload",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoT::Thing",
                "CloudResourceProperty": "AttributePayload",
                "CloudReference": "AWS::IoT::Thing.AttributePayload",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Attributes": {
                        "Required": "No",
                        "Type": "Map of String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "ThingName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoT::Thing",
                "CloudResourceProperty": "ThingName",
                "CloudReference": "AWS::IoT::Thing.ThingName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::IoT::Thing.AttributePayload": {
            "Required": "No",
            "Type": "AttributePayload",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoT::Thing",
            "CloudResourceProperty": "AttributePayload",
            "CloudReference": "AWS::IoT::Thing.AttributePayload",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Attributes": {
                    "Required": "No",
                    "Type": "Map of String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::IoT::Thing.ThingName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoT::Thing",
            "CloudResourceProperty": "ThingName",
            "CloudReference": "AWS::IoT::Thing.ThingName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoT::ThingPrincipalAttachment": {
            "Principal": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoT::ThingPrincipalAttachment",
                "CloudResourceProperty": "Principal",
                "CloudReference": "AWS::IoT::ThingPrincipalAttachment.Principal",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ThingName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoT::ThingPrincipalAttachment",
                "CloudResourceProperty": "ThingName",
                "CloudReference": "AWS::IoT::ThingPrincipalAttachment.ThingName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::IoT::ThingPrincipalAttachment.Principal": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoT::ThingPrincipalAttachment",
            "CloudResourceProperty": "Principal",
            "CloudReference": "AWS::IoT::ThingPrincipalAttachment.Principal",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoT::ThingPrincipalAttachment.ThingName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoT::ThingPrincipalAttachment",
            "CloudResourceProperty": "ThingName",
            "CloudReference": "AWS::IoT::ThingPrincipalAttachment.ThingName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoT::TopicRule": {
            "RuleName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoT::TopicRule",
                "CloudResourceProperty": "RuleName",
                "CloudReference": "AWS::IoT::TopicRule.RuleName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TopicRulePayload": {
                "Required": "Yes",
                "Type": "TopicRulePayload",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoT::TopicRule",
                "CloudResourceProperty": "TopicRulePayload",
                "CloudReference": "AWS::IoT::TopicRule.TopicRulePayload",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Actions": {
                        "Required": "Yes",
                        "Type": "List of [Action",
                        "UpdateRequires": "No interruption"
                    },
                    "AwsIotSqlVersion": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Description": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "ErrorAction": {
                        "Required": "No",
                        "Type": "Action",
                        "UpdateRequires": "No interruption"
                    },
                    "RuleDisabled": {
                        "Required": "Yes",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "Sql": {}
                }
            }
        },
        "AWS::IoT::TopicRule.RuleName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoT::TopicRule",
            "CloudResourceProperty": "RuleName",
            "CloudReference": "AWS::IoT::TopicRule.RuleName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoT::TopicRule.TopicRulePayload": {
            "Required": "Yes",
            "Type": "TopicRulePayload",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoT::TopicRule",
            "CloudResourceProperty": "TopicRulePayload",
            "CloudReference": "AWS::IoT::TopicRule.TopicRulePayload",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Actions": {
                    "Required": "Yes",
                    "Type": "List of [Action",
                    "UpdateRequires": "No interruption"
                },
                "AwsIotSqlVersion": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Description": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "ErrorAction": {
                    "Required": "No",
                    "Type": "Action",
                    "UpdateRequires": "No interruption"
                },
                "RuleDisabled": {
                    "Required": "Yes",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "Sql": {}
            }
        },
        "AWS::IoT1Click::Device": {
            "DeviceId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoT1Click::Device",
                "CloudResourceProperty": "DeviceId",
                "CloudReference": "AWS::IoT1Click::Device.DeviceId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Enabled": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoT1Click::Device",
                "CloudResourceProperty": "Enabled",
                "CloudReference": "AWS::IoT1Click::Device.Enabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::IoT1Click::Device.DeviceId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoT1Click::Device",
            "CloudResourceProperty": "DeviceId",
            "CloudReference": "AWS::IoT1Click::Device.DeviceId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoT1Click::Device.Enabled": {
            "Required": "Yes",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoT1Click::Device",
            "CloudResourceProperty": "Enabled",
            "CloudReference": "AWS::IoT1Click::Device.Enabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoT1Click::Placement": {
            "AssociatedDevices": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoT1Click::Placement",
                "CloudResourceProperty": "AssociatedDevices",
                "CloudReference": "AWS::IoT1Click::Placement.AssociatedDevices",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Attributes": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoT1Click::Placement",
                "CloudResourceProperty": "Attributes",
                "CloudReference": "AWS::IoT1Click::Placement.Attributes",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PlacementName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoT1Click::Placement",
                "CloudResourceProperty": "PlacementName",
                "CloudReference": "AWS::IoT1Click::Placement.PlacementName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ProjectName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoT1Click::Placement",
                "CloudResourceProperty": "ProjectName",
                "CloudReference": "AWS::IoT1Click::Placement.ProjectName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::IoT1Click::Placement.AssociatedDevices": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoT1Click::Placement",
            "CloudResourceProperty": "AssociatedDevices",
            "CloudReference": "AWS::IoT1Click::Placement.AssociatedDevices",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoT1Click::Placement.Attributes": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoT1Click::Placement",
            "CloudResourceProperty": "Attributes",
            "CloudReference": "AWS::IoT1Click::Placement.Attributes",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoT1Click::Placement.PlacementName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoT1Click::Placement",
            "CloudResourceProperty": "PlacementName",
            "CloudReference": "AWS::IoT1Click::Placement.PlacementName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoT1Click::Placement.ProjectName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoT1Click::Placement",
            "CloudResourceProperty": "ProjectName",
            "CloudReference": "AWS::IoT1Click::Placement.ProjectName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoT1Click::Project": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoT1Click::Project",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::IoT1Click::Project.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PlacementTemplate": {
                "Required": "Yes",
                "Type": "PlacementTemplate",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoT1Click::Project",
                "CloudResourceProperty": "PlacementTemplate",
                "CloudReference": "AWS::IoT1Click::Project.PlacementTemplate",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DefaultAttributes": {
                        "Required": "No",
                        "Type": "Json",
                        "UpdateRequires": "No interruption"
                    },
                    "DeviceTemplates": {
                        "Required": "No",
                        "Type": "Json",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "ProjectName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoT1Click::Project",
                "CloudResourceProperty": "ProjectName",
                "CloudReference": "AWS::IoT1Click::Project.ProjectName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::IoT1Click::Project.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoT1Click::Project",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::IoT1Click::Project.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoT1Click::Project.PlacementTemplate": {
            "Required": "Yes",
            "Type": "PlacementTemplate",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoT1Click::Project",
            "CloudResourceProperty": "PlacementTemplate",
            "CloudReference": "AWS::IoT1Click::Project.PlacementTemplate",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DefaultAttributes": {
                    "Required": "No",
                    "Type": "Json",
                    "UpdateRequires": "No interruption"
                },
                "DeviceTemplates": {
                    "Required": "No",
                    "Type": "Json",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::IoT1Click::Project.ProjectName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoT1Click::Project",
            "CloudResourceProperty": "ProjectName",
            "CloudReference": "AWS::IoT1Click::Project.ProjectName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoTAnalytics::Channel": {
            "ChannelName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "^[a-zA-Z0-9_]+$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoTAnalytics::Channel",
                "CloudResourceProperty": "ChannelName",
                "CloudReference": "AWS::IoTAnalytics::Channel.ChannelName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ChannelStorage": {
                "Required": "No",
                "Type": "ChannelStorage",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTAnalytics::Channel",
                "CloudResourceProperty": "ChannelStorage",
                "CloudReference": "AWS::IoTAnalytics::Channel.ChannelStorage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "CustomerManagedS3": {
                        "Required": "No",
                        "Type": "CustomerManagedS3",
                        "UpdateRequires": "No interruption"
                    },
                    "ServiceManagedS3": {
                        "Required": "No",
                        "Type": "ServiceManagedS3",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "RetentionPeriod": {
                "Required": "No",
                "Type": "RetentionPeriod",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTAnalytics::Channel",
                "CloudResourceProperty": "RetentionPeriod",
                "CloudReference": "AWS::IoTAnalytics::Channel.RetentionPeriod",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "NumberOfDays": {
                        "Required": "No",
                        "Type": "Integer",
                        "Minimum": "1",
                        "UpdateRequires": "No interruption"
                    },
                    "Unlimited": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "50",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTAnalytics::Channel",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::IoTAnalytics::Channel.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::IoTAnalytics::Channel.ChannelName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "^[a-zA-Z0-9_]+$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoTAnalytics::Channel",
            "CloudResourceProperty": "ChannelName",
            "CloudReference": "AWS::IoTAnalytics::Channel.ChannelName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoTAnalytics::Channel.ChannelStorage": {
            "Required": "No",
            "Type": "ChannelStorage",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTAnalytics::Channel",
            "CloudResourceProperty": "ChannelStorage",
            "CloudReference": "AWS::IoTAnalytics::Channel.ChannelStorage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "CustomerManagedS3": {
                    "Required": "No",
                    "Type": "CustomerManagedS3",
                    "UpdateRequires": "No interruption"
                },
                "ServiceManagedS3": {
                    "Required": "No",
                    "Type": "ServiceManagedS3",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::IoTAnalytics::Channel.RetentionPeriod": {
            "Required": "No",
            "Type": "RetentionPeriod",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTAnalytics::Channel",
            "CloudResourceProperty": "RetentionPeriod",
            "CloudReference": "AWS::IoTAnalytics::Channel.RetentionPeriod",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "NumberOfDays": {
                    "Required": "No",
                    "Type": "Integer",
                    "Minimum": "1",
                    "UpdateRequires": "No interruption"
                },
                "Unlimited": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::IoTAnalytics::Channel.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "Maximum": "50",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTAnalytics::Channel",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::IoTAnalytics::Channel.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoTAnalytics::Dataset": {
            "Actions": {
                "Required": "Yes",
                "Type": "List of [Action",
                "Maximum": "1",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTAnalytics::Dataset",
                "CloudResourceProperty": "Actions",
                "CloudReference": "AWS::IoTAnalytics::Dataset.Actions",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ActionName": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "128",
                        "Pattern": "^[a-zA-Z0-9_]+$",
                        "UpdateRequires": "No interruption"
                    },
                    "ContainerAction": {
                        "Required": "No",
                        "Type": "ContainerAction",
                        "UpdateRequires": "No interruption"
                    },
                    "QueryAction": {
                        "Required": "No",
                        "Type": "QueryAction",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "ContentDeliveryRules": {
                "Required": "No",
                "Type": "List of [DatasetContentDeliveryRule",
                "Maximum": "20",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTAnalytics::Dataset",
                "CloudResourceProperty": "ContentDeliveryRules",
                "CloudReference": "AWS::IoTAnalytics::Dataset.ContentDeliveryRules",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Destination": {
                        "Required": "Yes",
                        "Type": "DatasetContentDeliveryRuleDestination",
                        "UpdateRequires": "No interruption"
                    },
                    "EntryName": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "DatasetName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "^[a-zA-Z0-9_]+$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoTAnalytics::Dataset",
                "CloudResourceProperty": "DatasetName",
                "CloudReference": "AWS::IoTAnalytics::Dataset.DatasetName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RetentionPeriod": {
                "Required": "No",
                "Type": "RetentionPeriod",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTAnalytics::Dataset",
                "CloudResourceProperty": "RetentionPeriod",
                "CloudReference": "AWS::IoTAnalytics::Dataset.RetentionPeriod",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "NumberOfDays": {
                        "Required": "Yes",
                        "Type": "Integer",
                        "Minimum": "1",
                        "UpdateRequires": "No interruption"
                    },
                    "Unlimited": {
                        "Required": "Yes",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "50",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTAnalytics::Dataset",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::IoTAnalytics::Dataset.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "Triggers": {
                "Required": "No",
                "Type": "List of [Trigger",
                "Maximum": "5",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTAnalytics::Dataset",
                "CloudResourceProperty": "Triggers",
                "CloudReference": "AWS::IoTAnalytics::Dataset.Triggers",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Schedule": {
                        "Required": "No",
                        "Type": "Schedule",
                        "UpdateRequires": "No interruption"
                    },
                    "TriggeringDataset": {
                        "Required": "No",
                        "Type": "TriggeringDataset",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "VersioningConfiguration": {
                "Required": "No",
                "Type": "VersioningConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTAnalytics::Dataset",
                "CloudResourceProperty": "VersioningConfiguration",
                "CloudReference": "AWS::IoTAnalytics::Dataset.VersioningConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "MaxVersions": {
                        "Required": "No",
                        "Type": "Integer",
                        "Minimum": "1",
                        "Maximum": "1000",
                        "UpdateRequires": "No interruption"
                    },
                    "Unlimited": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::IoTAnalytics::Dataset.Actions": {
            "Required": "Yes",
            "Type": "List of [Action",
            "Maximum": "1",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTAnalytics::Dataset",
            "CloudResourceProperty": "Actions",
            "CloudReference": "AWS::IoTAnalytics::Dataset.Actions",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ActionName": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "128",
                    "Pattern": "^[a-zA-Z0-9_]+$",
                    "UpdateRequires": "No interruption"
                },
                "ContainerAction": {
                    "Required": "No",
                    "Type": "ContainerAction",
                    "UpdateRequires": "No interruption"
                },
                "QueryAction": {
                    "Required": "No",
                    "Type": "QueryAction",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::IoTAnalytics::Dataset.ContentDeliveryRules": {
            "Required": "No",
            "Type": "List of [DatasetContentDeliveryRule",
            "Maximum": "20",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTAnalytics::Dataset",
            "CloudResourceProperty": "ContentDeliveryRules",
            "CloudReference": "AWS::IoTAnalytics::Dataset.ContentDeliveryRules",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Destination": {
                    "Required": "Yes",
                    "Type": "DatasetContentDeliveryRuleDestination",
                    "UpdateRequires": "No interruption"
                },
                "EntryName": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::IoTAnalytics::Dataset.DatasetName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "^[a-zA-Z0-9_]+$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoTAnalytics::Dataset",
            "CloudResourceProperty": "DatasetName",
            "CloudReference": "AWS::IoTAnalytics::Dataset.DatasetName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoTAnalytics::Dataset.RetentionPeriod": {
            "Required": "No",
            "Type": "RetentionPeriod",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTAnalytics::Dataset",
            "CloudResourceProperty": "RetentionPeriod",
            "CloudReference": "AWS::IoTAnalytics::Dataset.RetentionPeriod",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "NumberOfDays": {
                    "Required": "Yes",
                    "Type": "Integer",
                    "Minimum": "1",
                    "UpdateRequires": "No interruption"
                },
                "Unlimited": {
                    "Required": "Yes",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::IoTAnalytics::Dataset.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "Maximum": "50",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTAnalytics::Dataset",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::IoTAnalytics::Dataset.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoTAnalytics::Dataset.Triggers": {
            "Required": "No",
            "Type": "List of [Trigger",
            "Maximum": "5",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTAnalytics::Dataset",
            "CloudResourceProperty": "Triggers",
            "CloudReference": "AWS::IoTAnalytics::Dataset.Triggers",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Schedule": {
                    "Required": "No",
                    "Type": "Schedule",
                    "UpdateRequires": "No interruption"
                },
                "TriggeringDataset": {
                    "Required": "No",
                    "Type": "TriggeringDataset",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::IoTAnalytics::Dataset.VersioningConfiguration": {
            "Required": "No",
            "Type": "VersioningConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTAnalytics::Dataset",
            "CloudResourceProperty": "VersioningConfiguration",
            "CloudReference": "AWS::IoTAnalytics::Dataset.VersioningConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "MaxVersions": {
                    "Required": "No",
                    "Type": "Integer",
                    "Minimum": "1",
                    "Maximum": "1000",
                    "UpdateRequires": "No interruption"
                },
                "Unlimited": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::IoTAnalytics::Datastore": {
            "DatastoreName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "^[a-zA-Z0-9_]+$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoTAnalytics::Datastore",
                "CloudResourceProperty": "DatastoreName",
                "CloudReference": "AWS::IoTAnalytics::Datastore.DatastoreName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DatastoreStorage": {
                "Required": "No",
                "Type": "DatastoreStorage",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTAnalytics::Datastore",
                "CloudResourceProperty": "DatastoreStorage",
                "CloudReference": "AWS::IoTAnalytics::Datastore.DatastoreStorage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "CustomerManagedS3": {
                        "Required": "No",
                        "Type": "CustomerManagedS3",
                        "UpdateRequires": "No interruption"
                    },
                    "ServiceManagedS3": {
                        "Required": "No",
                        "Type": "ServiceManagedS3",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "RetentionPeriod": {
                "Required": "No",
                "Type": "RetentionPeriod",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTAnalytics::Datastore",
                "CloudResourceProperty": "RetentionPeriod",
                "CloudReference": "AWS::IoTAnalytics::Datastore.RetentionPeriod",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "NumberOfDays": {
                        "Required": "No",
                        "Type": "Integer",
                        "Minimum": "1",
                        "UpdateRequires": "No interruption"
                    },
                    "Unlimited": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "50",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTAnalytics::Datastore",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::IoTAnalytics::Datastore.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::IoTAnalytics::Datastore.DatastoreName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "^[a-zA-Z0-9_]+$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoTAnalytics::Datastore",
            "CloudResourceProperty": "DatastoreName",
            "CloudReference": "AWS::IoTAnalytics::Datastore.DatastoreName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoTAnalytics::Datastore.DatastoreStorage": {
            "Required": "No",
            "Type": "DatastoreStorage",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTAnalytics::Datastore",
            "CloudResourceProperty": "DatastoreStorage",
            "CloudReference": "AWS::IoTAnalytics::Datastore.DatastoreStorage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "CustomerManagedS3": {
                    "Required": "No",
                    "Type": "CustomerManagedS3",
                    "UpdateRequires": "No interruption"
                },
                "ServiceManagedS3": {
                    "Required": "No",
                    "Type": "ServiceManagedS3",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::IoTAnalytics::Datastore.RetentionPeriod": {
            "Required": "No",
            "Type": "RetentionPeriod",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTAnalytics::Datastore",
            "CloudResourceProperty": "RetentionPeriod",
            "CloudReference": "AWS::IoTAnalytics::Datastore.RetentionPeriod",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "NumberOfDays": {
                    "Required": "No",
                    "Type": "Integer",
                    "Minimum": "1",
                    "UpdateRequires": "No interruption"
                },
                "Unlimited": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::IoTAnalytics::Datastore.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "Maximum": "50",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTAnalytics::Datastore",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::IoTAnalytics::Datastore.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoTAnalytics::Pipeline": {
            "PipelineActivities": {},
            "PipelineName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "^[a-zA-Z0-9_]+$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoTAnalytics::Pipeline",
                "CloudResourceProperty": "PipelineName",
                "CloudReference": "AWS::IoTAnalytics::Pipeline.PipelineName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "50",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTAnalytics::Pipeline",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::IoTAnalytics::Pipeline.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::IoTAnalytics::Pipeline.PipelineName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "^[a-zA-Z0-9_]+$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoTAnalytics::Pipeline",
            "CloudResourceProperty": "PipelineName",
            "CloudReference": "AWS::IoTAnalytics::Pipeline.PipelineName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoTAnalytics::Pipeline.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "Maximum": "50",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTAnalytics::Pipeline",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::IoTAnalytics::Pipeline.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoTEvents::DetectorModel": {
            "DetectorModelDefinition": {
                "Required": "No",
                "Type": "DetectorModelDefinition",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTEvents::DetectorModel",
                "CloudResourceProperty": "DetectorModelDefinition",
                "CloudReference": "AWS::IoTEvents::DetectorModel.DetectorModelDefinition",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "InitialStateName": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "128",
                        "UpdateRequires": "No interruption"
                    },
                    "States": {
                        "Required": "No",
                        "Type": "List of [State",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "DetectorModelDescription": {
                "Required": "No",
                "Type": "String",
                "Maximum": "128",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTEvents::DetectorModel",
                "CloudResourceProperty": "DetectorModelDescription",
                "CloudReference": "AWS::IoTEvents::DetectorModel.DetectorModelDescription",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DetectorModelName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "^[a-zA-Z0-9_-]+$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoTEvents::DetectorModel",
                "CloudResourceProperty": "DetectorModelName",
                "CloudReference": "AWS::IoTEvents::DetectorModel.DetectorModelName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Key": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "^((`[\\w\\- ]+`)|([\\w\\-]+))(\\.((`[\\w- ]+`)|([\\w\\-]+)))*$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoTEvents::DetectorModel",
                "CloudResourceProperty": "Key",
                "CloudReference": "AWS::IoTEvents::DetectorModel.Key",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RoleArn": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTEvents::DetectorModel",
                "CloudResourceProperty": "RoleArn",
                "CloudReference": "AWS::IoTEvents::DetectorModel.RoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTEvents::DetectorModel",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::IoTEvents::DetectorModel.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::IoTEvents::DetectorModel.DetectorModelDefinition": {
            "Required": "No",
            "Type": "DetectorModelDefinition",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTEvents::DetectorModel",
            "CloudResourceProperty": "DetectorModelDefinition",
            "CloudReference": "AWS::IoTEvents::DetectorModel.DetectorModelDefinition",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "InitialStateName": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "128",
                    "UpdateRequires": "No interruption"
                },
                "States": {
                    "Required": "No",
                    "Type": "List of [State",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::IoTEvents::DetectorModel.DetectorModelDescription": {
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTEvents::DetectorModel",
            "CloudResourceProperty": "DetectorModelDescription",
            "CloudReference": "AWS::IoTEvents::DetectorModel.DetectorModelDescription",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoTEvents::DetectorModel.DetectorModelName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "^[a-zA-Z0-9_-]+$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoTEvents::DetectorModel",
            "CloudResourceProperty": "DetectorModelName",
            "CloudReference": "AWS::IoTEvents::DetectorModel.DetectorModelName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoTEvents::DetectorModel.Key": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "^((`[\\w\\- ]+`)|([\\w\\-]+))(\\.((`[\\w- ]+`)|([\\w\\-]+)))*$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoTEvents::DetectorModel",
            "CloudResourceProperty": "Key",
            "CloudReference": "AWS::IoTEvents::DetectorModel.Key",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoTEvents::DetectorModel.RoleArn": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTEvents::DetectorModel",
            "CloudResourceProperty": "RoleArn",
            "CloudReference": "AWS::IoTEvents::DetectorModel.RoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoTEvents::DetectorModel.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTEvents::DetectorModel",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::IoTEvents::DetectorModel.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoTEvents::Input": {
            "InputDefinition": {
                "Required": "No",
                "Type": "InputDefinition",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTEvents::Input",
                "CloudResourceProperty": "InputDefinition",
                "CloudReference": "AWS::IoTEvents::Input.InputDefinition",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Attributes": {
                        "Required": "No",
                        "Type": "List of [Attribute",
                        "Maximum": "200",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "InputDescription": {
                "Required": "No",
                "Type": "String",
                "Maximum": "128",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTEvents::Input",
                "CloudResourceProperty": "InputDescription",
                "CloudReference": "AWS::IoTEvents::Input.InputDescription",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InputName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::IoTEvents::Input",
                "CloudResourceProperty": "InputName",
                "CloudReference": "AWS::IoTEvents::Input.InputName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTEvents::Input",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::IoTEvents::Input.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::IoTEvents::Input.InputDefinition": {
            "Required": "No",
            "Type": "InputDefinition",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTEvents::Input",
            "CloudResourceProperty": "InputDefinition",
            "CloudReference": "AWS::IoTEvents::Input.InputDefinition",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Attributes": {
                    "Required": "No",
                    "Type": "List of [Attribute",
                    "Maximum": "200",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::IoTEvents::Input.InputDescription": {
            "Required": "No",
            "Type": "String",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTEvents::Input",
            "CloudResourceProperty": "InputDescription",
            "CloudReference": "AWS::IoTEvents::Input.InputDescription",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoTEvents::Input.InputName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::IoTEvents::Input",
            "CloudResourceProperty": "InputName",
            "CloudReference": "AWS::IoTEvents::Input.InputName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoTEvents::Input.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTEvents::Input",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::IoTEvents::Input.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoTThingsGraph::FlowTemplate": {
            "CompatibleNamespaceVersion": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTThingsGraph::FlowTemplate",
                "CloudResourceProperty": "CompatibleNamespaceVersion",
                "CloudReference": "AWS::IoTThingsGraph::FlowTemplate.CompatibleNamespaceVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Definition": {
                "Required": "Yes",
                "Type": "DefinitionDocument",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::IoTThingsGraph::FlowTemplate",
                "CloudResourceProperty": "Definition",
                "CloudReference": "AWS::IoTThingsGraph::FlowTemplate.Definition",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Language": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Text": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::IoTThingsGraph::FlowTemplate.CompatibleNamespaceVersion": {
            "Required": "No",
            "Type": "Double",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTThingsGraph::FlowTemplate",
            "CloudResourceProperty": "CompatibleNamespaceVersion",
            "CloudReference": "AWS::IoTThingsGraph::FlowTemplate.CompatibleNamespaceVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::IoTThingsGraph::FlowTemplate.Definition": {
            "Required": "Yes",
            "Type": "DefinitionDocument",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::IoTThingsGraph::FlowTemplate",
            "CloudResourceProperty": "Definition",
            "CloudReference": "AWS::IoTThingsGraph::FlowTemplate.Definition",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Language": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Text": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Kinesis::Stream": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[a-zA-Z0-9_.-]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Kinesis::Stream",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Kinesis::Stream.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RetentionPeriodHours": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "168",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Kinesis::Stream",
                "CloudResourceProperty": "RetentionPeriodHours",
                "CloudReference": "AWS::Kinesis::Stream.RetentionPeriodHours",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ShardCount": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "100000",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Kinesis::Stream",
                "CloudResourceProperty": "ShardCount",
                "CloudReference": "AWS::Kinesis::Stream.ShardCount",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "StreamEncryption": {
                "Required": "No",
                "Type": "StreamEncryption",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Kinesis::Stream",
                "CloudResourceProperty": "StreamEncryption",
                "CloudReference": "AWS::Kinesis::Stream.StreamEncryption",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "EncryptionType": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "KMS",
                            "NONE"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "KeyId": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "2048",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Tags": {}
        },
        "AWS::Kinesis::Stream.Name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "[a-zA-Z0-9_.-]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Kinesis::Stream",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Kinesis::Stream.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Kinesis::Stream.RetentionPeriodHours": {
            "Required": "No",
            "Type": "Integer",
            "Minimum": "1",
            "Maximum": "168",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Kinesis::Stream",
            "CloudResourceProperty": "RetentionPeriodHours",
            "CloudReference": "AWS::Kinesis::Stream.RetentionPeriodHours",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Kinesis::Stream.ShardCount": {
            "Required": "Yes",
            "Type": "Integer",
            "Minimum": "1",
            "Maximum": "100000",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Kinesis::Stream",
            "CloudResourceProperty": "ShardCount",
            "CloudReference": "AWS::Kinesis::Stream.ShardCount",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Kinesis::Stream.StreamEncryption": {
            "Required": "No",
            "Type": "StreamEncryption",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Kinesis::Stream",
            "CloudResourceProperty": "StreamEncryption",
            "CloudReference": "AWS::Kinesis::Stream.StreamEncryption",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "EncryptionType": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "KMS",
                        "NONE"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "KeyId": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "2048",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Kinesis::StreamConsumer": {
            "ConsumerName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[a-zA-Z0-9_.-]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Kinesis::StreamConsumer",
                "CloudResourceProperty": "ConsumerName",
                "CloudReference": "AWS::Kinesis::StreamConsumer.ConsumerName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "StreamARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:aws.*:kinesis:.*:\\d{12}:stream/.+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Kinesis::StreamConsumer",
                "CloudResourceProperty": "StreamARN",
                "CloudReference": "AWS::Kinesis::StreamConsumer.StreamARN",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Kinesis::StreamConsumer.ConsumerName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "[a-zA-Z0-9_.-]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Kinesis::StreamConsumer",
            "CloudResourceProperty": "ConsumerName",
            "CloudReference": "AWS::Kinesis::StreamConsumer.ConsumerName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Kinesis::StreamConsumer.StreamARN": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "2048",
            "Pattern": "arn:aws.*:kinesis:.*:\\d{12}:stream/.+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Kinesis::StreamConsumer",
            "CloudResourceProperty": "StreamARN",
            "CloudReference": "AWS::Kinesis::StreamConsumer.StreamARN",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::KinesisAnalytics::Application": {
            "ApplicationCode": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "102400",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::KinesisAnalytics::Application",
                "CloudResourceProperty": "ApplicationCode",
                "CloudReference": "AWS::KinesisAnalytics::Application.ApplicationCode",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ApplicationDescription": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "1024",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::KinesisAnalytics::Application",
                "CloudResourceProperty": "ApplicationDescription",
                "CloudReference": "AWS::KinesisAnalytics::Application.ApplicationDescription",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ApplicationName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[a-zA-Z0-9_.-]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::KinesisAnalytics::Application",
                "CloudResourceProperty": "ApplicationName",
                "CloudReference": "AWS::KinesisAnalytics::Application.ApplicationName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Inputs": {
                "Required": "Yes",
                "Type": "List of [Input",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::KinesisAnalytics::Application",
                "CloudResourceProperty": "Inputs",
                "CloudReference": "AWS::KinesisAnalytics::Application.Inputs",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "InputParallelism": {
                        "Required": "No",
                        "Type": "InputParallelism",
                        "UpdateRequires": "No interruption"
                    },
                    "InputProcessingConfiguration": {
                        "Required": "No",
                        "Type": "InputProcessingConfiguration",
                        "UpdateRequires": "No interruption"
                    },
                    "InputSchema": {
                        "Required": "Yes",
                        "Type": "InputSchema",
                        "UpdateRequires": "No interruption"
                    },
                    "KinesisFirehoseInput": {
                        "Required": "Conditional",
                        "Type": "KinesisFirehoseInput",
                        "UpdateRequires": "No interruption"
                    },
                    "KinesisStreamsInput": {
                        "Required": "Conditional",
                        "Type": "KinesisStreamsInput",
                        "UpdateRequires": "No interruption"
                    },
                    "NamePrefix": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "32",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::KinesisAnalytics::Application.ApplicationCode": {
            "Required": "No",
            "Type": "String",
            "Minimum": "0",
            "Maximum": "102400",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::KinesisAnalytics::Application",
            "CloudResourceProperty": "ApplicationCode",
            "CloudReference": "AWS::KinesisAnalytics::Application.ApplicationCode",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::KinesisAnalytics::Application.ApplicationDescription": {
            "Required": "No",
            "Type": "String",
            "Minimum": "0",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::KinesisAnalytics::Application",
            "CloudResourceProperty": "ApplicationDescription",
            "CloudReference": "AWS::KinesisAnalytics::Application.ApplicationDescription",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::KinesisAnalytics::Application.ApplicationName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "[a-zA-Z0-9_.-]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::KinesisAnalytics::Application",
            "CloudResourceProperty": "ApplicationName",
            "CloudReference": "AWS::KinesisAnalytics::Application.ApplicationName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::KinesisAnalytics::Application.Inputs": {
            "Required": "Yes",
            "Type": "List of [Input",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::KinesisAnalytics::Application",
            "CloudResourceProperty": "Inputs",
            "CloudReference": "AWS::KinesisAnalytics::Application.Inputs",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "InputParallelism": {
                    "Required": "No",
                    "Type": "InputParallelism",
                    "UpdateRequires": "No interruption"
                },
                "InputProcessingConfiguration": {
                    "Required": "No",
                    "Type": "InputProcessingConfiguration",
                    "UpdateRequires": "No interruption"
                },
                "InputSchema": {
                    "Required": "Yes",
                    "Type": "InputSchema",
                    "UpdateRequires": "No interruption"
                },
                "KinesisFirehoseInput": {
                    "Required": "Conditional",
                    "Type": "KinesisFirehoseInput",
                    "UpdateRequires": "No interruption"
                },
                "KinesisStreamsInput": {
                    "Required": "Conditional",
                    "Type": "KinesisStreamsInput",
                    "UpdateRequires": "No interruption"
                },
                "NamePrefix": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "32",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::KinesisAnalytics::ApplicationOutput": {
            "ApplicationName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[a-zA-Z0-9_.-]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::KinesisAnalytics::ApplicationOutput",
                "CloudResourceProperty": "ApplicationName",
                "CloudReference": "AWS::KinesisAnalytics::ApplicationOutput.ApplicationName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Output": {
                "Required": "Yes",
                "Type": "Output",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::KinesisAnalytics::ApplicationOutput",
                "CloudResourceProperty": "Output",
                "CloudReference": "AWS::KinesisAnalytics::ApplicationOutput.Output",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DestinationSchema": {
                        "Required": "Yes",
                        "Type": "DestinationSchema",
                        "UpdateRequires": "No interruption"
                    },
                    "KinesisFirehoseOutput": {
                        "Required": "No",
                        "Type": "KinesisFirehoseOutput",
                        "UpdateRequires": "No interruption"
                    },
                    "KinesisStreamsOutput": {
                        "Required": "No",
                        "Type": "KinesisStreamsOutput",
                        "UpdateRequires": "No interruption"
                    },
                    "LambdaOutput": {
                        "Required": "No",
                        "Type": "LambdaOutput",
                        "UpdateRequires": "No interruption"
                    },
                    "Name": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "32",
                        "UpdateRequires": "Replacement"
                    }
                }
            }
        },
        "AWS::KinesisAnalytics::ApplicationOutput.ApplicationName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "[a-zA-Z0-9_.-]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::KinesisAnalytics::ApplicationOutput",
            "CloudResourceProperty": "ApplicationName",
            "CloudReference": "AWS::KinesisAnalytics::ApplicationOutput.ApplicationName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::KinesisAnalytics::ApplicationOutput.Output": {
            "Required": "Yes",
            "Type": "Output",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::KinesisAnalytics::ApplicationOutput",
            "CloudResourceProperty": "Output",
            "CloudReference": "AWS::KinesisAnalytics::ApplicationOutput.Output",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DestinationSchema": {
                    "Required": "Yes",
                    "Type": "DestinationSchema",
                    "UpdateRequires": "No interruption"
                },
                "KinesisFirehoseOutput": {
                    "Required": "No",
                    "Type": "KinesisFirehoseOutput",
                    "UpdateRequires": "No interruption"
                },
                "KinesisStreamsOutput": {
                    "Required": "No",
                    "Type": "KinesisStreamsOutput",
                    "UpdateRequires": "No interruption"
                },
                "LambdaOutput": {
                    "Required": "No",
                    "Type": "LambdaOutput",
                    "UpdateRequires": "No interruption"
                },
                "Name": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "32",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::KinesisAnalytics::ApplicationReferenceDataSource": {
            "ApplicationName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[a-zA-Z0-9_.-]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::KinesisAnalytics::ApplicationReferenceDataSource",
                "CloudResourceProperty": "ApplicationName",
                "CloudReference": "AWS::KinesisAnalytics::ApplicationReferenceDataSource.ApplicationName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ReferenceDataSource": {
                "Required": "Yes",
                "Type": "ReferenceDataSource",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::KinesisAnalytics::ApplicationReferenceDataSource",
                "CloudResourceProperty": "ReferenceDataSource",
                "CloudReference": "AWS::KinesisAnalytics::ApplicationReferenceDataSource.ReferenceDataSource",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ReferenceSchema": {
                        "Required": "Yes",
                        "Type": "ReferenceSchema",
                        "UpdateRequires": "No interruption"
                    },
                    "S3ReferenceDataSource": {
                        "Required": "No",
                        "Type": "S3ReferenceDataSource",
                        "UpdateRequires": "No interruption"
                    },
                    "TableName": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "32",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::KinesisAnalytics::ApplicationReferenceDataSource.ApplicationName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "[a-zA-Z0-9_.-]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::KinesisAnalytics::ApplicationReferenceDataSource",
            "CloudResourceProperty": "ApplicationName",
            "CloudReference": "AWS::KinesisAnalytics::ApplicationReferenceDataSource.ApplicationName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::KinesisAnalytics::ApplicationReferenceDataSource.ReferenceDataSource": {
            "Required": "Yes",
            "Type": "ReferenceDataSource",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::KinesisAnalytics::ApplicationReferenceDataSource",
            "CloudResourceProperty": "ReferenceDataSource",
            "CloudReference": "AWS::KinesisAnalytics::ApplicationReferenceDataSource.ReferenceDataSource",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ReferenceSchema": {
                    "Required": "Yes",
                    "Type": "ReferenceSchema",
                    "UpdateRequires": "No interruption"
                },
                "S3ReferenceDataSource": {
                    "Required": "No",
                    "Type": "S3ReferenceDataSource",
                    "UpdateRequires": "No interruption"
                },
                "TableName": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "32",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::KinesisAnalyticsV2::Application": {
            "ApplicationConfiguration": {
                "Required": "No",
                "Type": "ApplicationConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::KinesisAnalyticsV2::Application",
                "CloudResourceProperty": "ApplicationConfiguration",
                "CloudReference": "AWS::KinesisAnalyticsV2::Application.ApplicationConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ApplicationCodeConfiguration": {
                        "Required": "Conditional",
                        "Type": "ApplicationCodeConfiguration",
                        "UpdateRequires": "No interruption"
                    },
                    "ApplicationSnapshotConfiguration": {
                        "Required": "No",
                        "Type": "ApplicationSnapshotConfiguration",
                        "UpdateRequires": "No interruption"
                    },
                    "EnvironmentProperties": {
                        "Required": "No",
                        "Type": "EnvironmentProperties",
                        "UpdateRequires": "No interruption"
                    },
                    "FlinkApplicationConfiguration": {
                        "Required": "No",
                        "Type": "FlinkApplicationConfiguration",
                        "UpdateRequires": "No interruption"
                    },
                    "SqlApplicationConfiguration": {
                        "Required": "No",
                        "Type": "SqlApplicationConfiguration",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "ApplicationDescription": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "1024",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::KinesisAnalyticsV2::Application",
                "CloudResourceProperty": "ApplicationDescription",
                "CloudReference": "AWS::KinesisAnalyticsV2::Application.ApplicationDescription",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ApplicationName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[a-zA-Z0-9_.-]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::KinesisAnalyticsV2::Application",
                "CloudResourceProperty": "ApplicationName",
                "CloudReference": "AWS::KinesisAnalyticsV2::Application.ApplicationName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RuntimeEnvironment": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "FLINK-1_6",
                    "SQL-1_0"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::KinesisAnalyticsV2::Application",
                "CloudResourceProperty": "RuntimeEnvironment",
                "CloudReference": "AWS::KinesisAnalyticsV2::Application.RuntimeEnvironment",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ServiceExecutionRole": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::KinesisAnalyticsV2::Application",
                "CloudResourceProperty": "ServiceExecutionRole",
                "CloudReference": "AWS::KinesisAnalyticsV2::Application.ServiceExecutionRole",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::KinesisAnalyticsV2::Application.ApplicationConfiguration": {
            "Required": "No",
            "Type": "ApplicationConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::KinesisAnalyticsV2::Application",
            "CloudResourceProperty": "ApplicationConfiguration",
            "CloudReference": "AWS::KinesisAnalyticsV2::Application.ApplicationConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ApplicationCodeConfiguration": {
                    "Required": "Conditional",
                    "Type": "ApplicationCodeConfiguration",
                    "UpdateRequires": "No interruption"
                },
                "ApplicationSnapshotConfiguration": {
                    "Required": "No",
                    "Type": "ApplicationSnapshotConfiguration",
                    "UpdateRequires": "No interruption"
                },
                "EnvironmentProperties": {
                    "Required": "No",
                    "Type": "EnvironmentProperties",
                    "UpdateRequires": "No interruption"
                },
                "FlinkApplicationConfiguration": {
                    "Required": "No",
                    "Type": "FlinkApplicationConfiguration",
                    "UpdateRequires": "No interruption"
                },
                "SqlApplicationConfiguration": {
                    "Required": "No",
                    "Type": "SqlApplicationConfiguration",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::KinesisAnalyticsV2::Application.ApplicationDescription": {
            "Required": "No",
            "Type": "String",
            "Minimum": "0",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::KinesisAnalyticsV2::Application",
            "CloudResourceProperty": "ApplicationDescription",
            "CloudReference": "AWS::KinesisAnalyticsV2::Application.ApplicationDescription",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::KinesisAnalyticsV2::Application.ApplicationName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "[a-zA-Z0-9_.-]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::KinesisAnalyticsV2::Application",
            "CloudResourceProperty": "ApplicationName",
            "CloudReference": "AWS::KinesisAnalyticsV2::Application.ApplicationName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::KinesisAnalyticsV2::Application.RuntimeEnvironment": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "FLINK-1_6",
                "SQL-1_0"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::KinesisAnalyticsV2::Application",
            "CloudResourceProperty": "RuntimeEnvironment",
            "CloudReference": "AWS::KinesisAnalyticsV2::Application.RuntimeEnvironment",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::KinesisAnalyticsV2::Application.ServiceExecutionRole": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "2048",
            "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::KinesisAnalyticsV2::Application",
            "CloudResourceProperty": "ServiceExecutionRole",
            "CloudReference": "AWS::KinesisAnalyticsV2::Application.ServiceExecutionRole",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption": {
            "ApplicationName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[a-zA-Z0-9_.-]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption",
                "CloudResourceProperty": "ApplicationName",
                "CloudReference": "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption.ApplicationName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CloudWatchLoggingOption": {
                "Required": "Yes",
                "Type": "CloudWatchLoggingOption",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption",
                "CloudResourceProperty": "CloudWatchLoggingOption",
                "CloudReference": "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption.CloudWatchLoggingOption",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "LogStreamARN": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "2048",
                        "Pattern": "arn:.*",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption.ApplicationName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "[a-zA-Z0-9_.-]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption",
            "CloudResourceProperty": "ApplicationName",
            "CloudReference": "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption.ApplicationName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption.CloudWatchLoggingOption": {
            "Required": "Yes",
            "Type": "CloudWatchLoggingOption",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption",
            "CloudResourceProperty": "CloudWatchLoggingOption",
            "CloudReference": "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption.CloudWatchLoggingOption",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "LogStreamARN": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "2048",
                    "Pattern": "arn:.*",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::KinesisAnalyticsV2::ApplicationOutput": {
            "ApplicationName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[a-zA-Z0-9_.-]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::KinesisAnalyticsV2::ApplicationOutput",
                "CloudResourceProperty": "ApplicationName",
                "CloudReference": "AWS::KinesisAnalyticsV2::ApplicationOutput.ApplicationName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Output": {
                "Required": "Yes",
                "Type": "Output",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::KinesisAnalyticsV2::ApplicationOutput",
                "CloudResourceProperty": "Output",
                "CloudReference": "AWS::KinesisAnalyticsV2::ApplicationOutput.Output",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DestinationSchema": {
                        "Required": "Yes",
                        "Type": "DestinationSchema",
                        "UpdateRequires": "No interruption"
                    },
                    "KinesisFirehoseOutput": {
                        "Required": "No",
                        "Type": "KinesisFirehoseOutput",
                        "UpdateRequires": "No interruption"
                    },
                    "KinesisStreamsOutput": {
                        "Required": "No",
                        "Type": "KinesisStreamsOutput",
                        "UpdateRequires": "No interruption"
                    },
                    "LambdaOutput": {
                        "Required": "No",
                        "Type": "LambdaOutput",
                        "UpdateRequires": "No interruption"
                    },
                    "Name": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "32",
                        "UpdateRequires": "Replacement"
                    }
                }
            }
        },
        "AWS::KinesisAnalyticsV2::ApplicationOutput.ApplicationName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "[a-zA-Z0-9_.-]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::KinesisAnalyticsV2::ApplicationOutput",
            "CloudResourceProperty": "ApplicationName",
            "CloudReference": "AWS::KinesisAnalyticsV2::ApplicationOutput.ApplicationName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::KinesisAnalyticsV2::ApplicationOutput.Output": {
            "Required": "Yes",
            "Type": "Output",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::KinesisAnalyticsV2::ApplicationOutput",
            "CloudResourceProperty": "Output",
            "CloudReference": "AWS::KinesisAnalyticsV2::ApplicationOutput.Output",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DestinationSchema": {
                    "Required": "Yes",
                    "Type": "DestinationSchema",
                    "UpdateRequires": "No interruption"
                },
                "KinesisFirehoseOutput": {
                    "Required": "No",
                    "Type": "KinesisFirehoseOutput",
                    "UpdateRequires": "No interruption"
                },
                "KinesisStreamsOutput": {
                    "Required": "No",
                    "Type": "KinesisStreamsOutput",
                    "UpdateRequires": "No interruption"
                },
                "LambdaOutput": {
                    "Required": "No",
                    "Type": "LambdaOutput",
                    "UpdateRequires": "No interruption"
                },
                "Name": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "32",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource": {
            "ApplicationName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[a-zA-Z0-9_.-]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource",
                "CloudResourceProperty": "ApplicationName",
                "CloudReference": "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource.ApplicationName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ReferenceDataSource": {
                "Required": "Yes",
                "Type": "ReferenceDataSource",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource",
                "CloudResourceProperty": "ReferenceDataSource",
                "CloudReference": "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource.ReferenceDataSource",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ReferenceSchema": {
                        "Required": "Yes",
                        "Type": "ReferenceSchema",
                        "UpdateRequires": "No interruption"
                    },
                    "S3ReferenceDataSource": {
                        "Required": "No",
                        "Type": "S3ReferenceDataSource",
                        "UpdateRequires": "No interruption"
                    },
                    "TableName": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "32",
                        "UpdateRequires": "Replacement"
                    }
                }
            }
        },
        "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource.ApplicationName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "[a-zA-Z0-9_.-]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource",
            "CloudResourceProperty": "ApplicationName",
            "CloudReference": "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource.ApplicationName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource.ReferenceDataSource": {
            "Required": "Yes",
            "Type": "ReferenceDataSource",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource",
            "CloudResourceProperty": "ReferenceDataSource",
            "CloudReference": "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource.ReferenceDataSource",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ReferenceSchema": {
                    "Required": "Yes",
                    "Type": "ReferenceSchema",
                    "UpdateRequires": "No interruption"
                },
                "S3ReferenceDataSource": {
                    "Required": "No",
                    "Type": "S3ReferenceDataSource",
                    "UpdateRequires": "No interruption"
                },
                "TableName": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "32",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::KinesisFirehose::DeliveryStream": {
            "DeliveryStreamName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "64",
                "Pattern": "[a-zA-Z0-9_.-]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::KinesisFirehose::DeliveryStream",
                "CloudResourceProperty": "DeliveryStreamName",
                "CloudReference": "AWS::KinesisFirehose::DeliveryStream.DeliveryStreamName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DeliveryStreamType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "DirectPut",
                    "KinesisStreamAsSource"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::KinesisFirehose::DeliveryStream",
                "CloudResourceProperty": "DeliveryStreamType",
                "CloudReference": "AWS::KinesisFirehose::DeliveryStream.DeliveryStreamType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ElasticsearchDestinationConfiguration": {
                "Required": "Conditional",
                "Type": "ElasticsearchDestinationConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::KinesisFirehose::DeliveryStream",
                "CloudResourceProperty": "ElasticsearchDestinationConfiguration",
                "CloudReference": "AWS::KinesisFirehose::DeliveryStream.ElasticsearchDestinationConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "BufferingHints": {
                        "Required": "Yes",
                        "Type": "ElasticsearchBufferingHints",
                        "UpdateRequires": "No interruption"
                    },
                    "CloudWatchLoggingOptions": {
                        "Required": "No",
                        "Type": "CloudWatchLoggingOptions",
                        "UpdateRequires": "No interruption"
                    },
                    "DomainARN": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "512",
                        "Pattern": "arn:.*",
                        "UpdateRequires": "No interruption"
                    },
                    "IndexName": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "80",
                        "UpdateRequires": "No interruption"
                    },
                    "IndexRotationPeriod": {},
                    "ProcessingConfiguration": {
                        "Required": "No",
                        "Type": "ProcessingConfiguration",
                        "UpdateRequires": "No interruption"
                    },
                    "RetryOptions": {
                        "Required": "Yes",
                        "Type": "ElasticsearchRetryOptions",
                        "UpdateRequires": "No interruption"
                    },
                    "RoleARN": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "512",
                        "Pattern": "arn:.*",
                        "UpdateRequires": "No interruption"
                    },
                    "S3BackupMode": {},
                    "S3Configuration": {
                        "Required": "Yes",
                        "Type": "S3DestinationConfiguration",
                        "UpdateRequires": "No interruption"
                    },
                    "TypeName": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "100",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "ExtendedS3DestinationConfiguration": {
                "Required": "Conditional",
                "Type": "ExtendedS3DestinationConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::KinesisFirehose::DeliveryStream",
                "CloudResourceProperty": "ExtendedS3DestinationConfiguration",
                "CloudReference": "AWS::KinesisFirehose::DeliveryStream.ExtendedS3DestinationConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "BucketARN": {},
                    "BufferingHints": {
                        "Required": "Yes",
                        "Type": "BufferingHints",
                        "UpdateRequires": "No interruption"
                    },
                    "CloudWatchLoggingOptions": {
                        "Required": "No",
                        "Type": "CloudWatchLoggingOptions",
                        "UpdateRequires": "No interruption"
                    },
                    "CompressionFormat": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "GZIP",
                            "Snappy",
                            "UNCOMPRESSED",
                            "ZIP"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "DataFormatConversionConfiguration": {
                        "Required": "No",
                        "Type": "DataFormatConversionConfiguration",
                        "UpdateRequires": "No interruption"
                    },
                    "EncryptionConfiguration": {
                        "Required": "No",
                        "Type": "EncryptionConfiguration",
                        "UpdateRequires": "No interruption"
                    },
                    "ErrorOutputPrefix": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Prefix": {},
                    "ProcessingConfiguration": {
                        "Required": "No",
                        "Type": "ProcessingConfiguration",
                        "UpdateRequires": "No interruption"
                    },
                    "RoleARN": {},
                    "S3BackupConfiguration": {
                        "Required": "No",
                        "Type": "S3DestinationConfiguration",
                        "UpdateRequires": "No interruption"
                    },
                    "S3BackupMode": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "Disabled",
                            "Enabled"
                        ],
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "KinesisStreamSourceConfiguration": {
                "Required": "No",
                "Type": "KinesisStreamSourceConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::KinesisFirehose::DeliveryStream",
                "CloudResourceProperty": "KinesisStreamSourceConfiguration",
                "CloudReference": "AWS::KinesisFirehose::DeliveryStream.KinesisStreamSourceConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "KinesisStreamARN": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "512",
                        "Pattern": "arn:.*",
                        "UpdateRequires": "No interruption"
                    },
                    "RoleARN": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "512",
                        "Pattern": "arn:.*",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "RedshiftDestinationConfiguration": {
                "Required": "Conditional",
                "Type": "RedshiftDestinationConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::KinesisFirehose::DeliveryStream",
                "CloudResourceProperty": "RedshiftDestinationConfiguration",
                "CloudReference": "AWS::KinesisFirehose::DeliveryStream.RedshiftDestinationConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "CloudWatchLoggingOptions": {
                        "Required": "No",
                        "Type": "CloudWatchLoggingOptions",
                        "UpdateRequires": "No interruption"
                    },
                    "ClusterJDBCURL": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Pattern": "jdbc:(redshift|postgresql)://((?!-)[A-Za-z0-9-]{1,63}(?<!-)\\.)+redshift\\.amazonaws\\.com:\\d{1,5}/[a-zA-Z0-9_$]+",
                        "UpdateRequires": "No interruption"
                    },
                    "CopyCommand": {
                        "Required": "Yes",
                        "Type": "CopyCommand",
                        "UpdateRequires": "No interruption"
                    },
                    "Password": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "6",
                        "UpdateRequires": "No interruption"
                    },
                    "ProcessingConfiguration": {
                        "Required": "No",
                        "Type": "ProcessingConfiguration",
                        "UpdateRequires": "No interruption"
                    },
                    "RoleARN": {},
                    "S3Configuration": {
                        "Required": "Yes",
                        "Type": "S3DestinationConfiguration",
                        "UpdateRequires": "No interruption"
                    },
                    "Username": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "S3DestinationConfiguration": {
                "Required": "Conditional",
                "Type": "S3DestinationConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::KinesisFirehose::DeliveryStream",
                "CloudResourceProperty": "S3DestinationConfiguration",
                "CloudReference": "AWS::KinesisFirehose::DeliveryStream.S3DestinationConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "BucketARN": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "2048",
                        "Pattern": "arn:.*",
                        "UpdateRequires": "No interruption"
                    },
                    "BufferingHints": {
                        "Required": "Yes",
                        "Type": "BufferingHints",
                        "UpdateRequires": "No interruption"
                    },
                    "CloudWatchLoggingOptions": {
                        "Required": "No",
                        "Type": "CloudWatchLoggingOptions",
                        "UpdateRequires": "No interruption"
                    },
                    "CompressionFormat": {},
                    "EncryptionConfiguration": {
                        "Required": "No",
                        "Type": "EncryptionConfiguration",
                        "UpdateRequires": "No interruption"
                    },
                    "ErrorOutputPrefix": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Prefix": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "RoleARN": {}
                }
            },
            "SplunkDestinationConfiguration": {
                "Required": "No",
                "Type": "SplunkDestinationConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::KinesisFirehose::DeliveryStream",
                "CloudResourceProperty": "SplunkDestinationConfiguration",
                "CloudReference": "AWS::KinesisFirehose::DeliveryStream.SplunkDestinationConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "CloudWatchLoggingOptions": {
                        "Required": "No",
                        "Type": "CloudWatchLoggingOptions",
                        "UpdateRequires": "No interruption"
                    },
                    "HECAcknowledgmentTimeoutInSeconds": {
                        "Required": "No",
                        "Type": "Integer",
                        "Minimum": "180",
                        "Maximum": "600",
                        "UpdateRequires": "No interruption"
                    },
                    "HECEndpoint": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "HECEndpointType": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "Event",
                            "Raw"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "HECToken": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "ProcessingConfiguration": {
                        "Required": "No",
                        "Type": "ProcessingConfiguration",
                        "UpdateRequires": "No interruption"
                    },
                    "RetryOptions": {
                        "Required": "No",
                        "Type": "SplunkRetryOptions",
                        "UpdateRequires": "No interruption"
                    },
                    "S3BackupMode": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "AllEvents",
                            "FailedEventsOnly"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "S3Configuration": {
                        "Required": "Yes",
                        "Type": "S3DestinationConfiguration",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::KinesisFirehose::DeliveryStream.DeliveryStreamName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "64",
            "Pattern": "[a-zA-Z0-9_.-]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::KinesisFirehose::DeliveryStream",
            "CloudResourceProperty": "DeliveryStreamName",
            "CloudReference": "AWS::KinesisFirehose::DeliveryStream.DeliveryStreamName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::KinesisFirehose::DeliveryStream.DeliveryStreamType": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "DirectPut",
                "KinesisStreamAsSource"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::KinesisFirehose::DeliveryStream",
            "CloudResourceProperty": "DeliveryStreamType",
            "CloudReference": "AWS::KinesisFirehose::DeliveryStream.DeliveryStreamType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::KinesisFirehose::DeliveryStream.ElasticsearchDestinationConfiguration": {
            "Required": "Conditional",
            "Type": "ElasticsearchDestinationConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::KinesisFirehose::DeliveryStream",
            "CloudResourceProperty": "ElasticsearchDestinationConfiguration",
            "CloudReference": "AWS::KinesisFirehose::DeliveryStream.ElasticsearchDestinationConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "BufferingHints": {
                    "Required": "Yes",
                    "Type": "ElasticsearchBufferingHints",
                    "UpdateRequires": "No interruption"
                },
                "CloudWatchLoggingOptions": {
                    "Required": "No",
                    "Type": "CloudWatchLoggingOptions",
                    "UpdateRequires": "No interruption"
                },
                "DomainARN": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "512",
                    "Pattern": "arn:.*",
                    "UpdateRequires": "No interruption"
                },
                "IndexName": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "80",
                    "UpdateRequires": "No interruption"
                },
                "IndexRotationPeriod": {},
                "ProcessingConfiguration": {
                    "Required": "No",
                    "Type": "ProcessingConfiguration",
                    "UpdateRequires": "No interruption"
                },
                "RetryOptions": {
                    "Required": "Yes",
                    "Type": "ElasticsearchRetryOptions",
                    "UpdateRequires": "No interruption"
                },
                "RoleARN": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "512",
                    "Pattern": "arn:.*",
                    "UpdateRequires": "No interruption"
                },
                "S3BackupMode": {},
                "S3Configuration": {
                    "Required": "Yes",
                    "Type": "S3DestinationConfiguration",
                    "UpdateRequires": "No interruption"
                },
                "TypeName": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "100",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::KinesisFirehose::DeliveryStream.ExtendedS3DestinationConfiguration": {
            "Required": "Conditional",
            "Type": "ExtendedS3DestinationConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::KinesisFirehose::DeliveryStream",
            "CloudResourceProperty": "ExtendedS3DestinationConfiguration",
            "CloudReference": "AWS::KinesisFirehose::DeliveryStream.ExtendedS3DestinationConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "BucketARN": {},
                "BufferingHints": {
                    "Required": "Yes",
                    "Type": "BufferingHints",
                    "UpdateRequires": "No interruption"
                },
                "CloudWatchLoggingOptions": {
                    "Required": "No",
                    "Type": "CloudWatchLoggingOptions",
                    "UpdateRequires": "No interruption"
                },
                "CompressionFormat": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "GZIP",
                        "Snappy",
                        "UNCOMPRESSED",
                        "ZIP"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "DataFormatConversionConfiguration": {
                    "Required": "No",
                    "Type": "DataFormatConversionConfiguration",
                    "UpdateRequires": "No interruption"
                },
                "EncryptionConfiguration": {
                    "Required": "No",
                    "Type": "EncryptionConfiguration",
                    "UpdateRequires": "No interruption"
                },
                "ErrorOutputPrefix": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Prefix": {},
                "ProcessingConfiguration": {
                    "Required": "No",
                    "Type": "ProcessingConfiguration",
                    "UpdateRequires": "No interruption"
                },
                "RoleARN": {},
                "S3BackupConfiguration": {
                    "Required": "No",
                    "Type": "S3DestinationConfiguration",
                    "UpdateRequires": "No interruption"
                },
                "S3BackupMode": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "Disabled",
                        "Enabled"
                    ],
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::KinesisFirehose::DeliveryStream.KinesisStreamSourceConfiguration": {
            "Required": "No",
            "Type": "KinesisStreamSourceConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::KinesisFirehose::DeliveryStream",
            "CloudResourceProperty": "KinesisStreamSourceConfiguration",
            "CloudReference": "AWS::KinesisFirehose::DeliveryStream.KinesisStreamSourceConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "KinesisStreamARN": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "512",
                    "Pattern": "arn:.*",
                    "UpdateRequires": "No interruption"
                },
                "RoleARN": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "512",
                    "Pattern": "arn:.*",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::KinesisFirehose::DeliveryStream.RedshiftDestinationConfiguration": {
            "Required": "Conditional",
            "Type": "RedshiftDestinationConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::KinesisFirehose::DeliveryStream",
            "CloudResourceProperty": "RedshiftDestinationConfiguration",
            "CloudReference": "AWS::KinesisFirehose::DeliveryStream.RedshiftDestinationConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "CloudWatchLoggingOptions": {
                    "Required": "No",
                    "Type": "CloudWatchLoggingOptions",
                    "UpdateRequires": "No interruption"
                },
                "ClusterJDBCURL": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Pattern": "jdbc:(redshift|postgresql)://((?!-)[A-Za-z0-9-]{1,63}(?<!-)\\.)+redshift\\.amazonaws\\.com:\\d{1,5}/[a-zA-Z0-9_$]+",
                    "UpdateRequires": "No interruption"
                },
                "CopyCommand": {
                    "Required": "Yes",
                    "Type": "CopyCommand",
                    "UpdateRequires": "No interruption"
                },
                "Password": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "6",
                    "UpdateRequires": "No interruption"
                },
                "ProcessingConfiguration": {
                    "Required": "No",
                    "Type": "ProcessingConfiguration",
                    "UpdateRequires": "No interruption"
                },
                "RoleARN": {},
                "S3Configuration": {
                    "Required": "Yes",
                    "Type": "S3DestinationConfiguration",
                    "UpdateRequires": "No interruption"
                },
                "Username": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::KinesisFirehose::DeliveryStream.S3DestinationConfiguration": {
            "Required": "Conditional",
            "Type": "S3DestinationConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::KinesisFirehose::DeliveryStream",
            "CloudResourceProperty": "S3DestinationConfiguration",
            "CloudReference": "AWS::KinesisFirehose::DeliveryStream.S3DestinationConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "BucketARN": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "2048",
                    "Pattern": "arn:.*",
                    "UpdateRequires": "No interruption"
                },
                "BufferingHints": {
                    "Required": "Yes",
                    "Type": "BufferingHints",
                    "UpdateRequires": "No interruption"
                },
                "CloudWatchLoggingOptions": {
                    "Required": "No",
                    "Type": "CloudWatchLoggingOptions",
                    "UpdateRequires": "No interruption"
                },
                "CompressionFormat": {},
                "EncryptionConfiguration": {
                    "Required": "No",
                    "Type": "EncryptionConfiguration",
                    "UpdateRequires": "No interruption"
                },
                "ErrorOutputPrefix": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Prefix": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "RoleARN": {}
            }
        },
        "AWS::KinesisFirehose::DeliveryStream.SplunkDestinationConfiguration": {
            "Required": "No",
            "Type": "SplunkDestinationConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::KinesisFirehose::DeliveryStream",
            "CloudResourceProperty": "SplunkDestinationConfiguration",
            "CloudReference": "AWS::KinesisFirehose::DeliveryStream.SplunkDestinationConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "CloudWatchLoggingOptions": {
                    "Required": "No",
                    "Type": "CloudWatchLoggingOptions",
                    "UpdateRequires": "No interruption"
                },
                "HECAcknowledgmentTimeoutInSeconds": {
                    "Required": "No",
                    "Type": "Integer",
                    "Minimum": "180",
                    "Maximum": "600",
                    "UpdateRequires": "No interruption"
                },
                "HECEndpoint": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "HECEndpointType": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "Event",
                        "Raw"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "HECToken": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "ProcessingConfiguration": {
                    "Required": "No",
                    "Type": "ProcessingConfiguration",
                    "UpdateRequires": "No interruption"
                },
                "RetryOptions": {
                    "Required": "No",
                    "Type": "SplunkRetryOptions",
                    "UpdateRequires": "No interruption"
                },
                "S3BackupMode": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "AllEvents",
                        "FailedEventsOnly"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "S3Configuration": {
                    "Required": "Yes",
                    "Type": "S3DestinationConfiguration",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::KMS::Alias": {
            "AliasName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "Pattern": "^[a-zA-Z0-9:/_-]+$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::KMS::Alias",
                "CloudResourceProperty": "AliasName",
                "CloudReference": "AWS::KMS::Alias.AliasName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TargetKeyId": {}
        },
        "AWS::KMS::Alias.AliasName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "256",
            "Pattern": "^[a-zA-Z0-9:/_-]+$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::KMS::Alias",
            "CloudResourceProperty": "AliasName",
            "CloudReference": "AWS::KMS::Alias.AliasName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::KMS::Key": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "8192",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::KMS::Key",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::KMS::Key.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EnableKeyRotation": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Enabled": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "KeyPolicy": {},
            "KeyUsage": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "ENCRYPT_DECRYPT"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::KMS::Key",
                "CloudResourceProperty": "KeyUsage",
                "CloudReference": "AWS::KMS::Key.KeyUsage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PendingWindowInDays": {},
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::KMS::Key",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::KMS::Key.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::KMS::Key.Description": {
            "Required": "No",
            "Type": "String",
            "Minimum": "0",
            "Maximum": "8192",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::KMS::Key",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::KMS::Key.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::KMS::Key.KeyUsage": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "ENCRYPT_DECRYPT"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::KMS::Key",
            "CloudResourceProperty": "KeyUsage",
            "CloudReference": "AWS::KMS::Key.KeyUsage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::KMS::Key.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::KMS::Key",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::KMS::Key.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::LakeFormation::DataLakeSettings": {
            "Admins": {
                "Required": "No",
                "Type": "Admins",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::LakeFormation::DataLakeSettings",
                "CloudResourceProperty": "Admins",
                "CloudReference": "AWS::LakeFormation::DataLakeSettings.Admins",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::LakeFormation::DataLakeSettings.Admins": {
            "Required": "No",
            "Type": "Admins",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::LakeFormation::DataLakeSettings",
            "CloudResourceProperty": "Admins",
            "CloudReference": "AWS::LakeFormation::DataLakeSettings.Admins",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::LakeFormation::Permissions": {
            "DataLakePrincipal": {
                "Required": "Yes",
                "Type": "DataLakePrincipal",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::LakeFormation::Permissions",
                "CloudResourceProperty": "DataLakePrincipal",
                "CloudReference": "AWS::LakeFormation::Permissions.DataLakePrincipal",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DataLakePrincipalIdentifier": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Permissions": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "PermissionsWithGrantOption": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Resource": {
                "Required": "Yes",
                "Type": "Resource",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::LakeFormation::Permissions.DataLakePrincipal": {
            "Required": "Yes",
            "Type": "DataLakePrincipal",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::LakeFormation::Permissions",
            "CloudResourceProperty": "DataLakePrincipal",
            "CloudReference": "AWS::LakeFormation::Permissions.DataLakePrincipal",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DataLakePrincipalIdentifier": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::LakeFormation::Resource": {
            "ResourceArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::LakeFormation::Resource",
                "CloudResourceProperty": "ResourceArn",
                "CloudReference": "AWS::LakeFormation::Resource.ResourceArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RoleArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::LakeFormation::Resource",
                "CloudResourceProperty": "RoleArn",
                "CloudReference": "AWS::LakeFormation::Resource.RoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "UseServiceLinkedRole": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::LakeFormation::Resource",
                "CloudResourceProperty": "UseServiceLinkedRole",
                "CloudReference": "AWS::LakeFormation::Resource.UseServiceLinkedRole",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::LakeFormation::Resource.ResourceArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::LakeFormation::Resource",
            "CloudResourceProperty": "ResourceArn",
            "CloudReference": "AWS::LakeFormation::Resource.ResourceArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::LakeFormation::Resource.RoleArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::LakeFormation::Resource",
            "CloudResourceProperty": "RoleArn",
            "CloudReference": "AWS::LakeFormation::Resource.RoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::LakeFormation::Resource.UseServiceLinkedRole": {
            "Required": "Yes",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::LakeFormation::Resource",
            "CloudResourceProperty": "UseServiceLinkedRole",
            "CloudReference": "AWS::LakeFormation::Resource.UseServiceLinkedRole",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Lambda::Alias": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Lambda::Alias",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::Lambda::Alias.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "FunctionName": {},
            "FunctionVersion": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "Pattern": "(\\$LATEST|[0-9]+)",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Lambda::Alias",
                "CloudResourceProperty": "FunctionVersion",
                "CloudReference": "AWS::Lambda::Alias.FunctionVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_]+)",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Lambda::Alias",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Lambda::Alias.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RoutingConfig": {
                "Required": "No",
                "Type": "AliasRoutingConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Lambda::Alias",
                "CloudResourceProperty": "RoutingConfig",
                "CloudReference": "AWS::Lambda::Alias.RoutingConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AdditionalVersionWeights": {
                        "Required": "Yes",
                        "Type": "List of [VersionWeight",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::Lambda::Alias.Description": {
            "Required": "No",
            "Type": "String",
            "Minimum": "0",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Lambda::Alias",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::Lambda::Alias.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Lambda::Alias.FunctionVersion": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "1024",
            "Pattern": "(\\$LATEST|[0-9]+)",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Lambda::Alias",
            "CloudResourceProperty": "FunctionVersion",
            "CloudReference": "AWS::Lambda::Alias.FunctionVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Lambda::Alias.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "Pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_]+)",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Lambda::Alias",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Lambda::Alias.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Lambda::Alias.RoutingConfig": {
            "Required": "No",
            "Type": "AliasRoutingConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Lambda::Alias",
            "CloudResourceProperty": "RoutingConfig",
            "CloudReference": "AWS::Lambda::Alias.RoutingConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AdditionalVersionWeights": {
                    "Required": "Yes",
                    "Type": "List of [VersionWeight",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Lambda::EventSourceMapping": {
            "BatchSize": {},
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Lambda::EventSourceMapping",
                "CloudResourceProperty": "Enabled",
                "CloudReference": "AWS::Lambda::EventSourceMapping.Enabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EventSourceArn": {},
            "FunctionName": {},
            "MaximumBatchingWindowInSeconds": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "0",
                "Maximum": "300",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Lambda::EventSourceMapping",
                "CloudResourceProperty": "MaximumBatchingWindowInSeconds",
                "CloudReference": "AWS::Lambda::EventSourceMapping.MaximumBatchingWindowInSeconds",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "StartingPosition": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "AT_TIMESTAMP",
                    "LATEST",
                    "TRIM_HORIZON"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Lambda::EventSourceMapping",
                "CloudResourceProperty": "StartingPosition",
                "CloudReference": "AWS::Lambda::EventSourceMapping.StartingPosition",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Lambda::EventSourceMapping.Enabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Lambda::EventSourceMapping",
            "CloudResourceProperty": "Enabled",
            "CloudReference": "AWS::Lambda::EventSourceMapping.Enabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Lambda::EventSourceMapping.MaximumBatchingWindowInSeconds": {
            "Required": "No",
            "Type": "Integer",
            "Minimum": "0",
            "Maximum": "300",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Lambda::EventSourceMapping",
            "CloudResourceProperty": "MaximumBatchingWindowInSeconds",
            "CloudReference": "AWS::Lambda::EventSourceMapping.MaximumBatchingWindowInSeconds",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Lambda::EventSourceMapping.StartingPosition": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "AT_TIMESTAMP",
                "LATEST",
                "TRIM_HORIZON"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Lambda::EventSourceMapping",
            "CloudResourceProperty": "StartingPosition",
            "CloudReference": "AWS::Lambda::EventSourceMapping.StartingPosition",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Lambda::Function": {
            "Code": {
                "Required": "Yes",
                "Type": "Code",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Lambda::Function",
                "CloudResourceProperty": "Code",
                "CloudReference": "AWS::Lambda::Function.Code",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "S3Bucket": {
                        "Required": "Conditional",
                        "Type": "String",
                        "Minimum": "3",
                        "Maximum": "63",
                        "Pattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
                        "UpdateRequires": "No interruption"
                    },
                    "S3Key": {
                        "Required": "Conditional",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "1024",
                        "UpdateRequires": "No interruption"
                    },
                    "S3ObjectVersion": {
                        "Required": "Conditional",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "1024",
                        "UpdateRequires": "No interruption"
                    },
                    "ZipFile": {
                        "Required": "Conditional",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "DeadLetterConfig": {
                "Required": "No",
                "Type": "DeadLetterConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Lambda::Function",
                "CloudResourceProperty": "DeadLetterConfig",
                "CloudReference": "AWS::Lambda::Function.DeadLetterConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "TargetArn": {
                        "Required": "No",
                        "Type": "String",
                        "Pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Lambda::Function",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::Lambda::Function.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Environment": {
                "Required": "No",
                "Type": "Environment",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Lambda::Function",
                "CloudResourceProperty": "Environment",
                "CloudReference": "AWS::Lambda::Function.Environment",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Variables": {
                        "Required": "No",
                        "Type": "Map of String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "FunctionName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "140",
                "Pattern": "(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\\d{1}:)?(\\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\\$LATEST|[a-zA-Z0-9-_]+))?",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Lambda::Function",
                "CloudResourceProperty": "FunctionName",
                "CloudReference": "AWS::Lambda::Function.FunctionName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Handler": {
                "Required": "Yes",
                "Type": "String",
                "Maximum": "128",
                "Pattern": "[^\\s]+",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Lambda::Function",
                "CloudResourceProperty": "Handler",
                "CloudReference": "AWS::Lambda::Function.Handler",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "KmsKeyArn": {
                "Required": "No",
                "Type": "String",
                "Pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Lambda::Function",
                "CloudResourceProperty": "KmsKeyArn",
                "CloudReference": "AWS::Lambda::Function.KmsKeyArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Layers": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "MemorySize": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "128",
                "Maximum": "3008",
                "UpdateRequires": "No interruption"
            },
            "ReservedConcurrentExecutions": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "0",
                "UpdateRequires": "No interruption"
            },
            "Role": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
                "UpdateRequires": "No interruption"
            },
            "Runtime": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "dotnetcore1.0",
                    "dotnetcore2.1",
                    "go1.x",
                    "java8",
                    "nodejs10.x",
                    "nodejs8.10",
                    "provided",
                    "python2.7",
                    "python3.6",
                    "python3.7",
                    "ruby2.5"
                ],
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            },
            "Timeout": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            },
            "TracingConfig": {
                "Required": "No",
                "Type": "TracingConfig",
                "UpdateRequires": "No interruption"
            },
            "VpcConfig": {
                "Required": "No",
                "Type": "VpcConfig",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::Lambda::Function.Code": {
            "Required": "Yes",
            "Type": "Code",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Lambda::Function",
            "CloudResourceProperty": "Code",
            "CloudReference": "AWS::Lambda::Function.Code",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "S3Bucket": {
                    "Required": "Conditional",
                    "Type": "String",
                    "Minimum": "3",
                    "Maximum": "63",
                    "Pattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
                    "UpdateRequires": "No interruption"
                },
                "S3Key": {
                    "Required": "Conditional",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "1024",
                    "UpdateRequires": "No interruption"
                },
                "S3ObjectVersion": {
                    "Required": "Conditional",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "1024",
                    "UpdateRequires": "No interruption"
                },
                "ZipFile": {
                    "Required": "Conditional",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Lambda::Function.DeadLetterConfig": {
            "Required": "No",
            "Type": "DeadLetterConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Lambda::Function",
            "CloudResourceProperty": "DeadLetterConfig",
            "CloudReference": "AWS::Lambda::Function.DeadLetterConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "TargetArn": {
                    "Required": "No",
                    "Type": "String",
                    "Pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Lambda::Function.Description": {
            "Required": "No",
            "Type": "String",
            "Minimum": "0",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Lambda::Function",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::Lambda::Function.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Lambda::Function.Environment": {
            "Required": "No",
            "Type": "Environment",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Lambda::Function",
            "CloudResourceProperty": "Environment",
            "CloudReference": "AWS::Lambda::Function.Environment",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Variables": {
                    "Required": "No",
                    "Type": "Map of String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Lambda::Function.FunctionName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "140",
            "Pattern": "(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\\d{1}:)?(\\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\\$LATEST|[a-zA-Z0-9-_]+))?",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Lambda::Function",
            "CloudResourceProperty": "FunctionName",
            "CloudReference": "AWS::Lambda::Function.FunctionName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Lambda::Function.Handler": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "128",
            "Pattern": "[^\\s]+",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Lambda::Function",
            "CloudResourceProperty": "Handler",
            "CloudReference": "AWS::Lambda::Function.Handler",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Lambda::Function.KmsKeyArn": {
            "Required": "No",
            "Type": "String",
            "Pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Lambda::Function",
            "CloudResourceProperty": "KmsKeyArn",
            "CloudReference": "AWS::Lambda::Function.KmsKeyArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Lambda::LayerVersion": {
            "CompatibleRuntimes": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "5",
                "UpdateRequires": "Replacement"
            },
            "Content": {
                "Required": "Yes",
                "Type": "Content",
                "UpdateRequires": "Replacement"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "UpdateRequires": "Replacement"
            },
            "LayerName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "140",
                "Pattern": "(arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\\d{12}:layer:[a-zA-Z0-9-_]+)|[a-zA-Z0-9-_]+",
                "UpdateRequires": "Replacement"
            },
            "LicenseInfo": {
                "Required": "No",
                "Type": "String",
                "Maximum": "512",
                "UpdateRequires": "Replacement"
            }
        },
        "AWS::Lambda::LayerVersionPermission": {
            "Action": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "lambda:GetLayerVersion",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Lambda::LayerVersionPermission",
                "CloudResourceProperty": "Action",
                "CloudReference": "AWS::Lambda::LayerVersionPermission.Action",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "LayerVersionArn": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "140",
                "Pattern": "(arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\\d{12}:layer:[a-zA-Z0-9-_]+)|[a-zA-Z0-9-_]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Lambda::LayerVersionPermission",
                "CloudResourceProperty": "LayerVersionArn",
                "CloudReference": "AWS::Lambda::LayerVersionPermission.LayerVersionArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "OrganizationId": {},
            "Principal": {}
        },
        "AWS::Lambda::LayerVersionPermission.Action": {
            "Required": "Yes",
            "Type": "String",
            "Pattern": "lambda:GetLayerVersion",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Lambda::LayerVersionPermission",
            "CloudResourceProperty": "Action",
            "CloudReference": "AWS::Lambda::LayerVersionPermission.Action",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Lambda::LayerVersionPermission.LayerVersionArn": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "140",
            "Pattern": "(arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\\d{12}:layer:[a-zA-Z0-9-_]+)|[a-zA-Z0-9-_]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Lambda::LayerVersionPermission",
            "CloudResourceProperty": "LayerVersionArn",
            "CloudReference": "AWS::Lambda::LayerVersionPermission.LayerVersionArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Lambda::Permission": {
            "Action": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "(lambda:[*]|lambda:[a-zA-Z]+|[*])",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Lambda::Permission",
                "CloudResourceProperty": "Action",
                "CloudReference": "AWS::Lambda::Permission.Action",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EventSourceToken": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[a-zA-Z0-9._\\-]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Lambda::Permission",
                "CloudResourceProperty": "EventSourceToken",
                "CloudReference": "AWS::Lambda::Permission.EventSourceToken",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "FunctionName": {},
            "Principal": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": ".*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Lambda::Permission",
                "CloudResourceProperty": "Principal",
                "CloudReference": "AWS::Lambda::Permission.Principal",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SourceAccount": {
                "Required": "No",
                "Type": "String",
                "Pattern": "\\d{12}",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Lambda::Permission",
                "CloudResourceProperty": "SourceAccount",
                "CloudReference": "AWS::Lambda::Permission.SourceAccount",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SourceArn": {
                "Required": "No",
                "Type": "String",
                "Pattern": "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Lambda::Permission",
                "CloudResourceProperty": "SourceArn",
                "CloudReference": "AWS::Lambda::Permission.SourceArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Lambda::Permission.Action": {
            "Required": "Yes",
            "Type": "String",
            "Pattern": "(lambda:[*]|lambda:[a-zA-Z]+|[*])",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Lambda::Permission",
            "CloudResourceProperty": "Action",
            "CloudReference": "AWS::Lambda::Permission.Action",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Lambda::Permission.EventSourceToken": {
            "Required": "No",
            "Type": "String",
            "Minimum": "0",
            "Maximum": "256",
            "Pattern": "[a-zA-Z0-9._\\-]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Lambda::Permission",
            "CloudResourceProperty": "EventSourceToken",
            "CloudReference": "AWS::Lambda::Permission.EventSourceToken",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Lambda::Permission.Principal": {
            "Required": "Yes",
            "Type": "String",
            "Pattern": ".*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Lambda::Permission",
            "CloudResourceProperty": "Principal",
            "CloudReference": "AWS::Lambda::Permission.Principal",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Lambda::Permission.SourceAccount": {
            "Required": "No",
            "Type": "String",
            "Pattern": "\\d{12}",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Lambda::Permission",
            "CloudResourceProperty": "SourceAccount",
            "CloudReference": "AWS::Lambda::Permission.SourceAccount",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Lambda::Permission.SourceArn": {
            "Required": "No",
            "Type": "String",
            "Pattern": "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Lambda::Permission",
            "CloudResourceProperty": "SourceArn",
            "CloudReference": "AWS::Lambda::Permission.SourceArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Lambda::Version": {
            "CodeSha256": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Lambda::Version",
                "CloudResourceProperty": "CodeSha256",
                "CloudReference": "AWS::Lambda::Version.CodeSha256",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Lambda::Version",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::Lambda::Version.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "FunctionName": {}
        },
        "AWS::Lambda::Version.CodeSha256": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Lambda::Version",
            "CloudResourceProperty": "CodeSha256",
            "CloudReference": "AWS::Lambda::Version.CodeSha256",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Lambda::Version.Description": {
            "Required": "No",
            "Type": "String",
            "Minimum": "0",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Lambda::Version",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::Lambda::Version.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Logs::Destination": {
            "DestinationName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "512",
                "Pattern": "[^:*]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Logs::Destination",
                "CloudResourceProperty": "DestinationName",
                "CloudReference": "AWS::Logs::Destination.DestinationName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DestinationPolicy": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Logs::Destination",
                "CloudResourceProperty": "DestinationPolicy",
                "CloudReference": "AWS::Logs::Destination.DestinationPolicy",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Logs::Destination",
                "CloudResourceProperty": "RoleArn",
                "CloudReference": "AWS::Logs::Destination.RoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TargetArn": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Logs::Destination",
                "CloudResourceProperty": "TargetArn",
                "CloudReference": "AWS::Logs::Destination.TargetArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Logs::Destination.DestinationName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "512",
            "Pattern": "[^:*]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Logs::Destination",
            "CloudResourceProperty": "DestinationName",
            "CloudReference": "AWS::Logs::Destination.DestinationName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Logs::Destination.DestinationPolicy": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Logs::Destination",
            "CloudResourceProperty": "DestinationPolicy",
            "CloudReference": "AWS::Logs::Destination.DestinationPolicy",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Logs::Destination.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Logs::Destination",
            "CloudResourceProperty": "RoleArn",
            "CloudReference": "AWS::Logs::Destination.RoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Logs::Destination.TargetArn": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Logs::Destination",
            "CloudResourceProperty": "TargetArn",
            "CloudReference": "AWS::Logs::Destination.TargetArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Logs::LogGroup": {
            "LogGroupName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "512",
                "Pattern": "[\\.\\-_/#A-Za-z0-9]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Logs::LogGroup",
                "CloudResourceProperty": "LogGroupName",
                "CloudReference": "AWS::Logs::LogGroup.LogGroupName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RetentionInDays": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Logs::LogGroup",
                "CloudResourceProperty": "RetentionInDays",
                "CloudReference": "AWS::Logs::LogGroup.RetentionInDays",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Logs::LogGroup.LogGroupName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "512",
            "Pattern": "[\\.\\-_/#A-Za-z0-9]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Logs::LogGroup",
            "CloudResourceProperty": "LogGroupName",
            "CloudReference": "AWS::Logs::LogGroup.LogGroupName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Logs::LogGroup.RetentionInDays": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Logs::LogGroup",
            "CloudResourceProperty": "RetentionInDays",
            "CloudReference": "AWS::Logs::LogGroup.RetentionInDays",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Logs::LogStream": {
            "LogGroupName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "512",
                "Pattern": "[\\.\\-_/#A-Za-z0-9]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Logs::LogStream",
                "CloudResourceProperty": "LogGroupName",
                "CloudReference": "AWS::Logs::LogStream.LogGroupName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "LogStreamName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "512",
                "Pattern": "[^:*]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Logs::LogStream",
                "CloudResourceProperty": "LogStreamName",
                "CloudReference": "AWS::Logs::LogStream.LogStreamName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Logs::LogStream.LogGroupName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "512",
            "Pattern": "[\\.\\-_/#A-Za-z0-9]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Logs::LogStream",
            "CloudResourceProperty": "LogGroupName",
            "CloudReference": "AWS::Logs::LogStream.LogGroupName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Logs::LogStream.LogStreamName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "512",
            "Pattern": "[^:*]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Logs::LogStream",
            "CloudResourceProperty": "LogStreamName",
            "CloudReference": "AWS::Logs::LogStream.LogStreamName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Logs::MetricFilter": {
            "FilterPattern": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Logs::MetricFilter",
                "CloudResourceProperty": "FilterPattern",
                "CloudReference": "AWS::Logs::MetricFilter.FilterPattern",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "LogGroupName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "512",
                "Pattern": "[\\.\\-_/#A-Za-z0-9]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Logs::MetricFilter",
                "CloudResourceProperty": "LogGroupName",
                "CloudReference": "AWS::Logs::MetricFilter.LogGroupName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MetricTransformations": {
                "Required": "Yes",
                "Type": "List of [MetricTransformation",
                "Maximum": "1",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Logs::MetricFilter",
                "CloudResourceProperty": "MetricTransformations",
                "CloudReference": "AWS::Logs::MetricFilter.MetricTransformations",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DefaultValue": {
                        "Required": "No",
                        "Type": "Double",
                        "UpdateRequires": "No interruption"
                    },
                    "MetricName": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "MetricNamespace": {
                        "Required": "Yes",
                        "Type": "String",
                        "Maximum": "255",
                        "Pattern": "[^:*$]*",
                        "UpdateRequires": "No interruption"
                    },
                    "MetricValue": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::Logs::MetricFilter.FilterPattern": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Logs::MetricFilter",
            "CloudResourceProperty": "FilterPattern",
            "CloudReference": "AWS::Logs::MetricFilter.FilterPattern",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Logs::MetricFilter.LogGroupName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "512",
            "Pattern": "[\\.\\-_/#A-Za-z0-9]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Logs::MetricFilter",
            "CloudResourceProperty": "LogGroupName",
            "CloudReference": "AWS::Logs::MetricFilter.LogGroupName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Logs::MetricFilter.MetricTransformations": {
            "Required": "Yes",
            "Type": "List of [MetricTransformation",
            "Maximum": "1",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Logs::MetricFilter",
            "CloudResourceProperty": "MetricTransformations",
            "CloudReference": "AWS::Logs::MetricFilter.MetricTransformations",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DefaultValue": {
                    "Required": "No",
                    "Type": "Double",
                    "UpdateRequires": "No interruption"
                },
                "MetricName": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "MetricNamespace": {
                    "Required": "Yes",
                    "Type": "String",
                    "Maximum": "255",
                    "Pattern": "[^:*$]*",
                    "UpdateRequires": "No interruption"
                },
                "MetricValue": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Logs::SubscriptionFilter": {
            "DestinationArn": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Logs::SubscriptionFilter",
                "CloudResourceProperty": "DestinationArn",
                "CloudReference": "AWS::Logs::SubscriptionFilter.DestinationArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "FilterPattern": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Logs::SubscriptionFilter",
                "CloudResourceProperty": "FilterPattern",
                "CloudReference": "AWS::Logs::SubscriptionFilter.FilterPattern",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "LogGroupName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "512",
                "Pattern": "[\\.\\-_/#A-Za-z0-9]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Logs::SubscriptionFilter",
                "CloudResourceProperty": "LogGroupName",
                "CloudReference": "AWS::Logs::SubscriptionFilter.LogGroupName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RoleArn": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Logs::SubscriptionFilter",
                "CloudResourceProperty": "RoleArn",
                "CloudReference": "AWS::Logs::SubscriptionFilter.RoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Logs::SubscriptionFilter.DestinationArn": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Logs::SubscriptionFilter",
            "CloudResourceProperty": "DestinationArn",
            "CloudReference": "AWS::Logs::SubscriptionFilter.DestinationArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Logs::SubscriptionFilter.FilterPattern": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Logs::SubscriptionFilter",
            "CloudResourceProperty": "FilterPattern",
            "CloudReference": "AWS::Logs::SubscriptionFilter.FilterPattern",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Logs::SubscriptionFilter.LogGroupName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "512",
            "Pattern": "[\\.\\-_/#A-Za-z0-9]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Logs::SubscriptionFilter",
            "CloudResourceProperty": "LogGroupName",
            "CloudReference": "AWS::Logs::SubscriptionFilter.LogGroupName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Logs::SubscriptionFilter.RoleArn": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Logs::SubscriptionFilter",
            "CloudResourceProperty": "RoleArn",
            "CloudReference": "AWS::Logs::SubscriptionFilter.RoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ManagedBlockchain::Member": {
            "InvitationId": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "32",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ManagedBlockchain::Member",
                "CloudResourceProperty": "InvitationId",
                "CloudReference": "AWS::ManagedBlockchain::Member.InvitationId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MemberConfiguration": {
                "Required": "Yes",
                "Type": "MemberConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ManagedBlockchain::Member",
                "CloudResourceProperty": "MemberConfiguration",
                "CloudReference": "AWS::ManagedBlockchain::Member.MemberConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Description": {
                        "Required": "No",
                        "Type": "String",
                        "Maximum": "128",
                        "UpdateRequires": "No interruption"
                    },
                    "MemberFrameworkConfiguration": {
                        "Required": "No",
                        "Type": "MemberFrameworkConfiguration",
                        "UpdateRequires": "No interruption"
                    },
                    "Name": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "64",
                        "Pattern": "^(?!-)^[^0-9](?!.*--)[A-Za-z0-9-]+[^- ]$",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "NetworkConfiguration": {
                "Required": "No",
                "Type": "NetworkConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ManagedBlockchain::Member",
                "CloudResourceProperty": "NetworkConfiguration",
                "CloudReference": "AWS::ManagedBlockchain::Member.NetworkConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Description": {
                        "Required": "No",
                        "Type": "String",
                        "Maximum": "128",
                        "UpdateRequires": "No interruption"
                    },
                    "Framework": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "HYPERLEDGER_FABRIC"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "FrameworkVersion": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "8",
                        "UpdateRequires": "No interruption"
                    },
                    "Name": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "64",
                        "Pattern": ".*\\S.*",
                        "UpdateRequires": "No interruption"
                    },
                    "NetworkFrameworkConfiguration": {
                        "Required": "No",
                        "Type": "NetworkFrameworkConfiguration",
                        "UpdateRequires": "No interruption"
                    },
                    "VotingPolicy": {
                        "Required": "Yes",
                        "Type": "VotingPolicy",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "NetworkId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ManagedBlockchain::Member",
                "CloudResourceProperty": "NetworkId",
                "CloudReference": "AWS::ManagedBlockchain::Member.NetworkId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ManagedBlockchain::Member.InvitationId": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "32",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ManagedBlockchain::Member",
            "CloudResourceProperty": "InvitationId",
            "CloudReference": "AWS::ManagedBlockchain::Member.InvitationId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ManagedBlockchain::Member.MemberConfiguration": {
            "Required": "Yes",
            "Type": "MemberConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ManagedBlockchain::Member",
            "CloudResourceProperty": "MemberConfiguration",
            "CloudReference": "AWS::ManagedBlockchain::Member.MemberConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Description": {
                    "Required": "No",
                    "Type": "String",
                    "Maximum": "128",
                    "UpdateRequires": "No interruption"
                },
                "MemberFrameworkConfiguration": {
                    "Required": "No",
                    "Type": "MemberFrameworkConfiguration",
                    "UpdateRequires": "No interruption"
                },
                "Name": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "64",
                    "Pattern": "^(?!-)^[^0-9](?!.*--)[A-Za-z0-9-]+[^- ]$",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ManagedBlockchain::Member.NetworkConfiguration": {
            "Required": "No",
            "Type": "NetworkConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ManagedBlockchain::Member",
            "CloudResourceProperty": "NetworkConfiguration",
            "CloudReference": "AWS::ManagedBlockchain::Member.NetworkConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Description": {
                    "Required": "No",
                    "Type": "String",
                    "Maximum": "128",
                    "UpdateRequires": "No interruption"
                },
                "Framework": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "HYPERLEDGER_FABRIC"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "FrameworkVersion": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "8",
                    "UpdateRequires": "No interruption"
                },
                "Name": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "64",
                    "Pattern": ".*\\S.*",
                    "UpdateRequires": "No interruption"
                },
                "NetworkFrameworkConfiguration": {
                    "Required": "No",
                    "Type": "NetworkFrameworkConfiguration",
                    "UpdateRequires": "No interruption"
                },
                "VotingPolicy": {
                    "Required": "Yes",
                    "Type": "VotingPolicy",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ManagedBlockchain::Member.NetworkId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ManagedBlockchain::Member",
            "CloudResourceProperty": "NetworkId",
            "CloudReference": "AWS::ManagedBlockchain::Member.NetworkId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ManagedBlockchain::Node": {
            "MemberId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ManagedBlockchain::Node",
                "CloudResourceProperty": "MemberId",
                "CloudReference": "AWS::ManagedBlockchain::Node.MemberId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "NetworkId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ManagedBlockchain::Node",
                "CloudResourceProperty": "NetworkId",
                "CloudReference": "AWS::ManagedBlockchain::Node.NetworkId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "NodeConfiguration": {
                "Required": "Yes",
                "Type": "NodeConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ManagedBlockchain::Node",
                "CloudResourceProperty": "NodeConfiguration",
                "CloudReference": "AWS::ManagedBlockchain::Node.NodeConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AvailabilityZone": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "InstanceType": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::ManagedBlockchain::Node.MemberId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ManagedBlockchain::Node",
            "CloudResourceProperty": "MemberId",
            "CloudReference": "AWS::ManagedBlockchain::Node.MemberId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ManagedBlockchain::Node.NetworkId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ManagedBlockchain::Node",
            "CloudResourceProperty": "NetworkId",
            "CloudReference": "AWS::ManagedBlockchain::Node.NetworkId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ManagedBlockchain::Node.NodeConfiguration": {
            "Required": "Yes",
            "Type": "NodeConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ManagedBlockchain::Node",
            "CloudResourceProperty": "NodeConfiguration",
            "CloudReference": "AWS::ManagedBlockchain::Node.NodeConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AvailabilityZone": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "InstanceType": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::MediaLive::Channel": {
            "ChannelClass": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::MediaLive::Channel",
                "CloudResourceProperty": "ChannelClass",
                "CloudReference": "AWS::MediaLive::Channel.ChannelClass",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Destinations": {
                "Required": "No",
                "Type": "List of [OutputDestination",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::MediaLive::Channel",
                "CloudResourceProperty": "Destinations",
                "CloudReference": "AWS::MediaLive::Channel.Destinations",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Id": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "MediaPackageSettings": {
                        "Required": "No",
                        "Type": "List of [MediaPackageOutputDestinationSettings",
                        "UpdateRequires": "No interruption"
                    },
                    "Settings": {
                        "Required": "No",
                        "Type": "List of [OutputDestinationSettings",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "EncoderSettings": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::MediaLive::Channel",
                "CloudResourceProperty": "EncoderSettings",
                "CloudReference": "AWS::MediaLive::Channel.EncoderSettings",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InputAttachments": {
                "Required": "No",
                "Type": "List of [InputAttachment",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::MediaLive::Channel",
                "CloudResourceProperty": "InputAttachments",
                "CloudReference": "AWS::MediaLive::Channel.InputAttachments",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "InputAttachmentName": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "InputId": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "InputSettings": {
                        "Required": "No",
                        "Type": "InputSettings",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "InputSpecification": {
                "Required": "No",
                "Type": "InputSpecification",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::MediaLive::Channel",
                "CloudResourceProperty": "InputSpecification",
                "CloudReference": "AWS::MediaLive::Channel.InputSpecification",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Codec": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "MaximumBitrate": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Resolution": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "LogLevel": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::MediaLive::Channel",
                "CloudResourceProperty": "LogLevel",
                "CloudReference": "AWS::MediaLive::Channel.LogLevel",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::MediaLive::Channel",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::MediaLive::Channel.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RoleArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::MediaLive::Channel",
                "CloudResourceProperty": "RoleArn",
                "CloudReference": "AWS::MediaLive::Channel.RoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::MediaLive::Channel",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::MediaLive::Channel.Tags",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::MediaLive::Channel.ChannelClass": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::MediaLive::Channel",
            "CloudResourceProperty": "ChannelClass",
            "CloudReference": "AWS::MediaLive::Channel.ChannelClass",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::MediaLive::Channel.Destinations": {
            "Required": "No",
            "Type": "List of [OutputDestination",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::MediaLive::Channel",
            "CloudResourceProperty": "Destinations",
            "CloudReference": "AWS::MediaLive::Channel.Destinations",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Id": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "MediaPackageSettings": {
                    "Required": "No",
                    "Type": "List of [MediaPackageOutputDestinationSettings",
                    "UpdateRequires": "No interruption"
                },
                "Settings": {
                    "Required": "No",
                    "Type": "List of [OutputDestinationSettings",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::MediaLive::Channel.EncoderSettings": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::MediaLive::Channel",
            "CloudResourceProperty": "EncoderSettings",
            "CloudReference": "AWS::MediaLive::Channel.EncoderSettings",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::MediaLive::Channel.InputAttachments": {
            "Required": "No",
            "Type": "List of [InputAttachment",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::MediaLive::Channel",
            "CloudResourceProperty": "InputAttachments",
            "CloudReference": "AWS::MediaLive::Channel.InputAttachments",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "InputAttachmentName": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "InputId": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "InputSettings": {
                    "Required": "No",
                    "Type": "InputSettings",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::MediaLive::Channel.InputSpecification": {
            "Required": "No",
            "Type": "InputSpecification",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::MediaLive::Channel",
            "CloudResourceProperty": "InputSpecification",
            "CloudReference": "AWS::MediaLive::Channel.InputSpecification",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Codec": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "MaximumBitrate": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Resolution": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::MediaLive::Channel.LogLevel": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::MediaLive::Channel",
            "CloudResourceProperty": "LogLevel",
            "CloudReference": "AWS::MediaLive::Channel.LogLevel",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::MediaLive::Channel.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::MediaLive::Channel",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::MediaLive::Channel.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::MediaLive::Channel.RoleArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::MediaLive::Channel",
            "CloudResourceProperty": "RoleArn",
            "CloudReference": "AWS::MediaLive::Channel.RoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::MediaLive::Channel.Tags": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::MediaLive::Channel",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::MediaLive::Channel.Tags",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::MediaLive::Input": {
            "Destinations": {
                "Required": "No",
                "Type": "List of [InputDestinationRequest",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::MediaLive::Input",
                "CloudResourceProperty": "Destinations",
                "CloudReference": "AWS::MediaLive::Input.Destinations",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "StreamName": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "InputSecurityGroups": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "MediaConnectFlows": {
                "Required": "No",
                "Type": "List of [MediaConnectFlowRequest",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Sources": {
                "Required": "No",
                "Type": "List of [InputSourceRequest",
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Vpc": {
                "Required": "No",
                "Type": "InputVpcRequest",
                "UpdateRequires": "Replacement"
            }
        },
        "AWS::MediaLive::Input.Destinations": {
            "Required": "No",
            "Type": "List of [InputDestinationRequest",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::MediaLive::Input",
            "CloudResourceProperty": "Destinations",
            "CloudReference": "AWS::MediaLive::Input.Destinations",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "StreamName": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::MediaLive::InputSecurityGroup": {
            "Tags": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::MediaLive::InputSecurityGroup",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::MediaLive::InputSecurityGroup.Tags",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "WhitelistRules": {
                "Required": "No",
                "Type": "List of [InputWhitelistRuleCidr",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::MediaLive::InputSecurityGroup",
                "CloudResourceProperty": "WhitelistRules",
                "CloudReference": "AWS::MediaLive::InputSecurityGroup.WhitelistRules",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Cidr": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::MediaLive::InputSecurityGroup.Tags": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::MediaLive::InputSecurityGroup",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::MediaLive::InputSecurityGroup.Tags",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::MediaLive::InputSecurityGroup.WhitelistRules": {
            "Required": "No",
            "Type": "List of [InputWhitelistRuleCidr",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::MediaLive::InputSecurityGroup",
            "CloudResourceProperty": "WhitelistRules",
            "CloudReference": "AWS::MediaLive::InputSecurityGroup.WhitelistRules",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Cidr": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::MediaStore::Container": {
            "AccessLoggingEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::MediaStore::Container",
                "CloudResourceProperty": "AccessLoggingEnabled",
                "CloudReference": "AWS::MediaStore::Container.AccessLoggingEnabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ContainerName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[\\w-]+",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::MediaStore::Container",
                "CloudResourceProperty": "ContainerName",
                "CloudReference": "AWS::MediaStore::Container.ContainerName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CorsPolicy": {
                "Required": "No",
                "Type": "List of [CorsRule",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::MediaStore::Container",
                "CloudResourceProperty": "CorsPolicy",
                "CloudReference": "AWS::MediaStore::Container.CorsPolicy",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AllowedHeaders": {},
                    "AllowedMethods": {
                        "Required": "No",
                        "Type": "List of String",
                        "Maximum": "4",
                        "UpdateRequires": "Replacement"
                    },
                    "AllowedOrigins": {},
                    "ExposeHeaders": {
                        "Required": "No",
                        "Type": "List of String",
                        "Maximum": "100",
                        "UpdateRequires": "No interruption"
                    },
                    "MaxAgeSeconds": {
                        "Required": "No",
                        "Type": "Integer",
                        "Minimum": "0",
                        "Maximum": "2147483647",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "LifecyclePolicy": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::MediaStore::Container",
                "CloudResourceProperty": "LifecyclePolicy",
                "CloudReference": "AWS::MediaStore::Container.LifecyclePolicy",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Policy": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::MediaStore::Container",
                "CloudResourceProperty": "Policy",
                "CloudReference": "AWS::MediaStore::Container.Policy",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::MediaStore::Container.AccessLoggingEnabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::MediaStore::Container",
            "CloudResourceProperty": "AccessLoggingEnabled",
            "CloudReference": "AWS::MediaStore::Container.AccessLoggingEnabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::MediaStore::Container.ContainerName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "255",
            "Pattern": "[\\w-]+",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::MediaStore::Container",
            "CloudResourceProperty": "ContainerName",
            "CloudReference": "AWS::MediaStore::Container.ContainerName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::MediaStore::Container.CorsPolicy": {
            "Required": "No",
            "Type": "List of [CorsRule",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::MediaStore::Container",
            "CloudResourceProperty": "CorsPolicy",
            "CloudReference": "AWS::MediaStore::Container.CorsPolicy",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AllowedHeaders": {},
                "AllowedMethods": {
                    "Required": "No",
                    "Type": "List of String",
                    "Maximum": "4",
                    "UpdateRequires": "Replacement"
                },
                "AllowedOrigins": {},
                "ExposeHeaders": {
                    "Required": "No",
                    "Type": "List of String",
                    "Maximum": "100",
                    "UpdateRequires": "No interruption"
                },
                "MaxAgeSeconds": {
                    "Required": "No",
                    "Type": "Integer",
                    "Minimum": "0",
                    "Maximum": "2147483647",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::MediaStore::Container.LifecyclePolicy": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::MediaStore::Container",
            "CloudResourceProperty": "LifecyclePolicy",
            "CloudReference": "AWS::MediaStore::Container.LifecyclePolicy",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::MediaStore::Container.Policy": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::MediaStore::Container",
            "CloudResourceProperty": "Policy",
            "CloudReference": "AWS::MediaStore::Container.Policy",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::MSK::Cluster": {
            "BrokerNodeGroupInfo": {
                "Required": "Yes",
                "Type": "BrokerNodeGroupInfo",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::MSK::Cluster",
                "CloudResourceProperty": "BrokerNodeGroupInfo",
                "CloudReference": "AWS::MSK::Cluster.BrokerNodeGroupInfo",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "BrokerAZDistribution": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "ClientSubnets": {
                        "Required": "Yes",
                        "Type": "List of String",
                        "UpdateRequires": "Replacement"
                    },
                    "InstanceType": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "SecurityGroups": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "Replacement"
                    },
                    "StorageInfo": {
                        "Required": "No",
                        "Type": "StorageInfo",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "ClientAuthentication": {
                "Required": "No",
                "Type": "ClientAuthentication",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::MSK::Cluster",
                "CloudResourceProperty": "ClientAuthentication",
                "CloudReference": "AWS::MSK::Cluster.ClientAuthentication",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Tls": {
                        "Required": "No",
                        "Type": "Tls",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "ClusterName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::MSK::Cluster",
                "CloudResourceProperty": "ClusterName",
                "CloudReference": "AWS::MSK::Cluster.ClusterName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ConfigurationInfo": {
                "Required": "No",
                "Type": "ConfigurationInfo",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::MSK::Cluster",
                "CloudResourceProperty": "ConfigurationInfo",
                "CloudReference": "AWS::MSK::Cluster.ConfigurationInfo",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Arn": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "Revision": {
                        "Required": "Yes",
                        "Type": "Integer",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "EncryptionInfo": {
                "Required": "No",
                "Type": "EncryptionInfo",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::MSK::Cluster",
                "CloudResourceProperty": "EncryptionInfo",
                "CloudReference": "AWS::MSK::Cluster.EncryptionInfo",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "EncryptionAtRest": {
                        "Required": "No",
                        "Type": "EncryptionAtRest",
                        "UpdateRequires": "Replacement"
                    },
                    "EncryptionInTransit": {
                        "Required": "No",
                        "Type": "EncryptionInTransit",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "EnhancedMonitoring": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::MSK::Cluster",
                "CloudResourceProperty": "EnhancedMonitoring",
                "CloudReference": "AWS::MSK::Cluster.EnhancedMonitoring",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "KafkaVersion": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::MSK::Cluster",
                "CloudResourceProperty": "KafkaVersion",
                "CloudReference": "AWS::MSK::Cluster.KafkaVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "NumberOfBrokerNodes": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::MSK::Cluster",
                "CloudResourceProperty": "NumberOfBrokerNodes",
                "CloudReference": "AWS::MSK::Cluster.NumberOfBrokerNodes",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::MSK::Cluster",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::MSK::Cluster.Tags",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::MSK::Cluster.BrokerNodeGroupInfo": {
            "Required": "Yes",
            "Type": "BrokerNodeGroupInfo",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::MSK::Cluster",
            "CloudResourceProperty": "BrokerNodeGroupInfo",
            "CloudReference": "AWS::MSK::Cluster.BrokerNodeGroupInfo",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "BrokerAZDistribution": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "ClientSubnets": {
                    "Required": "Yes",
                    "Type": "List of String",
                    "UpdateRequires": "Replacement"
                },
                "InstanceType": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "SecurityGroups": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "Replacement"
                },
                "StorageInfo": {
                    "Required": "No",
                    "Type": "StorageInfo",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::MSK::Cluster.ClientAuthentication": {
            "Required": "No",
            "Type": "ClientAuthentication",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::MSK::Cluster",
            "CloudResourceProperty": "ClientAuthentication",
            "CloudReference": "AWS::MSK::Cluster.ClientAuthentication",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Tls": {
                    "Required": "No",
                    "Type": "Tls",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::MSK::Cluster.ClusterName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::MSK::Cluster",
            "CloudResourceProperty": "ClusterName",
            "CloudReference": "AWS::MSK::Cluster.ClusterName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::MSK::Cluster.ConfigurationInfo": {
            "Required": "No",
            "Type": "ConfigurationInfo",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::MSK::Cluster",
            "CloudResourceProperty": "ConfigurationInfo",
            "CloudReference": "AWS::MSK::Cluster.ConfigurationInfo",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Arn": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "Revision": {
                    "Required": "Yes",
                    "Type": "Integer",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::MSK::Cluster.EncryptionInfo": {
            "Required": "No",
            "Type": "EncryptionInfo",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::MSK::Cluster",
            "CloudResourceProperty": "EncryptionInfo",
            "CloudReference": "AWS::MSK::Cluster.EncryptionInfo",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "EncryptionAtRest": {
                    "Required": "No",
                    "Type": "EncryptionAtRest",
                    "UpdateRequires": "Replacement"
                },
                "EncryptionInTransit": {
                    "Required": "No",
                    "Type": "EncryptionInTransit",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::MSK::Cluster.EnhancedMonitoring": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::MSK::Cluster",
            "CloudResourceProperty": "EnhancedMonitoring",
            "CloudReference": "AWS::MSK::Cluster.EnhancedMonitoring",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::MSK::Cluster.KafkaVersion": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::MSK::Cluster",
            "CloudResourceProperty": "KafkaVersion",
            "CloudReference": "AWS::MSK::Cluster.KafkaVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::MSK::Cluster.NumberOfBrokerNodes": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::MSK::Cluster",
            "CloudResourceProperty": "NumberOfBrokerNodes",
            "CloudReference": "AWS::MSK::Cluster.NumberOfBrokerNodes",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::MSK::Cluster.Tags": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::MSK::Cluster",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::MSK::Cluster.Tags",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBCluster": {
            "AvailabilityZones": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "BackupRetentionPeriod": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "DBClusterIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "DBClusterParameterGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DBSubnetGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "EnableCloudwatchLogsExports": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "IamAuthEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "KmsKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Port": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "PreferredBackupWindow": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PreferredMaintenanceWindow": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SnapshotIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "StorageEncrypted": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            },
            "VpcSecurityGroupIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::Neptune::DBClusterParameterGroup": {
            "Description": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Neptune::DBClusterParameterGroup",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::Neptune::DBClusterParameterGroup.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Family": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Neptune::DBClusterParameterGroup",
                "CloudResourceProperty": "Family",
                "CloudReference": "AWS::Neptune::DBClusterParameterGroup.Family",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Neptune::DBClusterParameterGroup",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Neptune::DBClusterParameterGroup.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Parameters": {
                "Required": "Yes",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Neptune::DBClusterParameterGroup",
                "CloudResourceProperty": "Parameters",
                "CloudReference": "AWS::Neptune::DBClusterParameterGroup.Parameters",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Neptune::DBClusterParameterGroup",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::Neptune::DBClusterParameterGroup.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Neptune::DBClusterParameterGroup.Description": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Neptune::DBClusterParameterGroup",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::Neptune::DBClusterParameterGroup.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBClusterParameterGroup.Family": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Neptune::DBClusterParameterGroup",
            "CloudResourceProperty": "Family",
            "CloudReference": "AWS::Neptune::DBClusterParameterGroup.Family",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBClusterParameterGroup.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Neptune::DBClusterParameterGroup",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Neptune::DBClusterParameterGroup.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBClusterParameterGroup.Parameters": {
            "Required": "Yes",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Neptune::DBClusterParameterGroup",
            "CloudResourceProperty": "Parameters",
            "CloudReference": "AWS::Neptune::DBClusterParameterGroup.Parameters",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBClusterParameterGroup.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Neptune::DBClusterParameterGroup",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::Neptune::DBClusterParameterGroup.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBInstance": {
            "AllowMajorVersionUpgrade": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Neptune::DBInstance",
                "CloudResourceProperty": "AllowMajorVersionUpgrade",
                "CloudReference": "AWS::Neptune::DBInstance.AllowMajorVersionUpgrade",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AutoMinorVersionUpgrade": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Neptune::DBInstance",
                "CloudResourceProperty": "AutoMinorVersionUpgrade",
                "CloudReference": "AWS::Neptune::DBInstance.AutoMinorVersionUpgrade",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AvailabilityZone": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Neptune::DBInstance",
                "CloudResourceProperty": "AvailabilityZone",
                "CloudReference": "AWS::Neptune::DBInstance.AvailabilityZone",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DBClusterIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Neptune::DBInstance",
                "CloudResourceProperty": "DBClusterIdentifier",
                "CloudReference": "AWS::Neptune::DBInstance.DBClusterIdentifier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DBInstanceClass": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Neptune::DBInstance",
                "CloudResourceProperty": "DBInstanceClass",
                "CloudReference": "AWS::Neptune::DBInstance.DBInstanceClass",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DBInstanceIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Neptune::DBInstance",
                "CloudResourceProperty": "DBInstanceIdentifier",
                "CloudReference": "AWS::Neptune::DBInstance.DBInstanceIdentifier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DBParameterGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Neptune::DBInstance",
                "CloudResourceProperty": "DBParameterGroupName",
                "CloudReference": "AWS::Neptune::DBInstance.DBParameterGroupName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DBSnapshotIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Neptune::DBInstance",
                "CloudResourceProperty": "DBSnapshotIdentifier",
                "CloudReference": "AWS::Neptune::DBInstance.DBSnapshotIdentifier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DBSubnetGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Neptune::DBInstance",
                "CloudResourceProperty": "DBSubnetGroupName",
                "CloudReference": "AWS::Neptune::DBInstance.DBSubnetGroupName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PreferredMaintenanceWindow": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Neptune::DBInstance",
                "CloudResourceProperty": "PreferredMaintenanceWindow",
                "CloudReference": "AWS::Neptune::DBInstance.PreferredMaintenanceWindow",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Neptune::DBInstance",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::Neptune::DBInstance.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Neptune::DBInstance.AllowMajorVersionUpgrade": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Neptune::DBInstance",
            "CloudResourceProperty": "AllowMajorVersionUpgrade",
            "CloudReference": "AWS::Neptune::DBInstance.AllowMajorVersionUpgrade",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBInstance.AutoMinorVersionUpgrade": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Neptune::DBInstance",
            "CloudResourceProperty": "AutoMinorVersionUpgrade",
            "CloudReference": "AWS::Neptune::DBInstance.AutoMinorVersionUpgrade",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBInstance.AvailabilityZone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Neptune::DBInstance",
            "CloudResourceProperty": "AvailabilityZone",
            "CloudReference": "AWS::Neptune::DBInstance.AvailabilityZone",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBInstance.DBClusterIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Neptune::DBInstance",
            "CloudResourceProperty": "DBClusterIdentifier",
            "CloudReference": "AWS::Neptune::DBInstance.DBClusterIdentifier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBInstance.DBInstanceClass": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Neptune::DBInstance",
            "CloudResourceProperty": "DBInstanceClass",
            "CloudReference": "AWS::Neptune::DBInstance.DBInstanceClass",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBInstance.DBInstanceIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Neptune::DBInstance",
            "CloudResourceProperty": "DBInstanceIdentifier",
            "CloudReference": "AWS::Neptune::DBInstance.DBInstanceIdentifier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBInstance.DBParameterGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Neptune::DBInstance",
            "CloudResourceProperty": "DBParameterGroupName",
            "CloudReference": "AWS::Neptune::DBInstance.DBParameterGroupName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBInstance.DBSnapshotIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Neptune::DBInstance",
            "CloudResourceProperty": "DBSnapshotIdentifier",
            "CloudReference": "AWS::Neptune::DBInstance.DBSnapshotIdentifier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBInstance.DBSubnetGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Neptune::DBInstance",
            "CloudResourceProperty": "DBSubnetGroupName",
            "CloudReference": "AWS::Neptune::DBInstance.DBSubnetGroupName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBInstance.PreferredMaintenanceWindow": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Neptune::DBInstance",
            "CloudResourceProperty": "PreferredMaintenanceWindow",
            "CloudReference": "AWS::Neptune::DBInstance.PreferredMaintenanceWindow",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBInstance.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Neptune::DBInstance",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::Neptune::DBInstance.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBParameterGroup": {
            "Description": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Neptune::DBParameterGroup",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::Neptune::DBParameterGroup.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Family": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Neptune::DBParameterGroup",
                "CloudResourceProperty": "Family",
                "CloudReference": "AWS::Neptune::DBParameterGroup.Family",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Neptune::DBParameterGroup",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Neptune::DBParameterGroup.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Parameters": {
                "Required": "Yes",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Neptune::DBParameterGroup",
                "CloudResourceProperty": "Parameters",
                "CloudReference": "AWS::Neptune::DBParameterGroup.Parameters",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Neptune::DBParameterGroup",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::Neptune::DBParameterGroup.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Neptune::DBParameterGroup.Description": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Neptune::DBParameterGroup",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::Neptune::DBParameterGroup.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBParameterGroup.Family": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Neptune::DBParameterGroup",
            "CloudResourceProperty": "Family",
            "CloudReference": "AWS::Neptune::DBParameterGroup.Family",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBParameterGroup.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Neptune::DBParameterGroup",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Neptune::DBParameterGroup.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBParameterGroup.Parameters": {
            "Required": "Yes",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Neptune::DBParameterGroup",
            "CloudResourceProperty": "Parameters",
            "CloudReference": "AWS::Neptune::DBParameterGroup.Parameters",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBParameterGroup.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Neptune::DBParameterGroup",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::Neptune::DBParameterGroup.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBSubnetGroup": {
            "DBSubnetGroupDescription": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Neptune::DBSubnetGroup",
                "CloudResourceProperty": "DBSubnetGroupDescription",
                "CloudReference": "AWS::Neptune::DBSubnetGroup.DBSubnetGroupDescription",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DBSubnetGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Neptune::DBSubnetGroup",
                "CloudResourceProperty": "DBSubnetGroupName",
                "CloudReference": "AWS::Neptune::DBSubnetGroup.DBSubnetGroupName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SubnetIds": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::Neptune::DBSubnetGroup.DBSubnetGroupDescription": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Neptune::DBSubnetGroup",
            "CloudResourceProperty": "DBSubnetGroupDescription",
            "CloudReference": "AWS::Neptune::DBSubnetGroup.DBSubnetGroupDescription",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Neptune::DBSubnetGroup.DBSubnetGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Neptune::DBSubnetGroup",
            "CloudResourceProperty": "DBSubnetGroupName",
            "CloudReference": "AWS::Neptune::DBSubnetGroup.DBSubnetGroupName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorks::App": {
            "AppSource": {
                "Required": "No",
                "Type": "Source",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::OpsWorks::App",
                "CloudResourceProperty": "AppSource",
                "CloudReference": "AWS::OpsWorks::App.AppSource",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Attributes": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "DataSources": {
                "Required": "No",
                "Type": "List of [DataSource",
                "UpdateRequires": "No interruption"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Domains": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "EnableSsl": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Environment": {
                "Required": "No",
                "Type": "List of [EnvironmentVariable",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Shortname": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SslConfiguration": {
                "Required": "No",
                "Type": "SslConfiguration",
                "UpdateRequires": "No interruption"
            },
            "StackId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "aws-flow-ruby",
                    "java",
                    "nodejs",
                    "other",
                    "php",
                    "rails",
                    "static"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::OpsWorks::App.AppSource": {
            "Required": "No",
            "Type": "Source",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::OpsWorks::App",
            "CloudResourceProperty": "AppSource",
            "CloudReference": "AWS::OpsWorks::App.AppSource",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorks::Instance": {
            "AgentVersion": {},
            "AmiId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::OpsWorks::Instance",
                "CloudResourceProperty": "AmiId",
                "CloudReference": "AWS::OpsWorks::Instance.AmiId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Architecture": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "i386",
                    "x86_64"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::OpsWorks::Instance",
                "CloudResourceProperty": "Architecture",
                "CloudReference": "AWS::OpsWorks::Instance.Architecture",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AutoScalingType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "load",
                    "timer"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::OpsWorks::Instance",
                "CloudResourceProperty": "AutoScalingType",
                "CloudReference": "AWS::OpsWorks::Instance.AutoScalingType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AvailabilityZone": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::OpsWorks::Instance",
                "CloudResourceProperty": "AvailabilityZone",
                "CloudReference": "AWS::OpsWorks::Instance.AvailabilityZone",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "BlockDeviceMappings": {
                "Required": "No",
                "Type": "List of [BlockDeviceMapping",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::OpsWorks::Instance",
                "CloudResourceProperty": "BlockDeviceMappings",
                "CloudReference": "AWS::OpsWorks::Instance.BlockDeviceMappings",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DeviceName": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Ebs": {
                        "Required": "Conditional",
                        "Type": "EbsBlockDevice",
                        "UpdateRequires": "No interruption"
                    },
                    "NoDevice": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "VirtualName": {
                        "Required": "Conditional",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "EbsOptimized": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::OpsWorks::Instance",
                "CloudResourceProperty": "EbsOptimized",
                "CloudReference": "AWS::OpsWorks::Instance.EbsOptimized",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ElasticIps": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Hostname": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "InstallUpdatesOnBoot": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "InstanceType": {},
            "LayerIds": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Os": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RootDeviceType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "ebs",
                    "instance-store"
                ],
                "UpdateRequires": "Replacement"
            },
            "SshKeyName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "StackId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SubnetId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Tenancy": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "TimeBasedAutoScaling": {
                "Required": "No",
                "Type": "TimeBasedAutoScaling",
                "AllowedValues": [
                    "load",
                    "timer"
                ],
                "UpdateRequires": "Replacement"
            },
            "VirtualizationType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Volumes": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::OpsWorks::Instance.AmiId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::OpsWorks::Instance",
            "CloudResourceProperty": "AmiId",
            "CloudReference": "AWS::OpsWorks::Instance.AmiId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorks::Instance.Architecture": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "i386",
                "x86_64"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::OpsWorks::Instance",
            "CloudResourceProperty": "Architecture",
            "CloudReference": "AWS::OpsWorks::Instance.Architecture",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorks::Instance.AutoScalingType": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "load",
                "timer"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::OpsWorks::Instance",
            "CloudResourceProperty": "AutoScalingType",
            "CloudReference": "AWS::OpsWorks::Instance.AutoScalingType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorks::Instance.AvailabilityZone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::OpsWorks::Instance",
            "CloudResourceProperty": "AvailabilityZone",
            "CloudReference": "AWS::OpsWorks::Instance.AvailabilityZone",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorks::Instance.BlockDeviceMappings": {
            "Required": "No",
            "Type": "List of [BlockDeviceMapping",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::OpsWorks::Instance",
            "CloudResourceProperty": "BlockDeviceMappings",
            "CloudReference": "AWS::OpsWorks::Instance.BlockDeviceMappings",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DeviceName": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Ebs": {
                    "Required": "Conditional",
                    "Type": "EbsBlockDevice",
                    "UpdateRequires": "No interruption"
                },
                "NoDevice": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "VirtualName": {
                    "Required": "Conditional",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::OpsWorks::Instance.EbsOptimized": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::OpsWorks::Instance",
            "CloudResourceProperty": "EbsOptimized",
            "CloudReference": "AWS::OpsWorks::Instance.EbsOptimized",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorks::Layer": {
            "Attributes": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "AutoAssignElasticIps": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "AutoAssignPublicIps": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "CustomInstanceProfileArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "CustomJson": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "CustomRecipes": {
                "Required": "No",
                "Type": "Recipes",
                "UpdateRequires": "No interruption"
            },
            "CustomSecurityGroupIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "EnableAutoHealing": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "InstallUpdatesOnBoot": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "LifecycleEventConfiguration": {
                "Required": "No",
                "Type": "LifecycleEventConfiguration",
                "UpdateRequires": "No interruption"
            },
            "LoadBasedAutoScaling": {
                "Required": "No",
                "Type": "LoadBasedAutoScaling",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Packages": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Shortname": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "StackId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "aws-flow-ruby",
                    "custom",
                    "db-master",
                    "ecs-cluster",
                    "java-app",
                    "lb",
                    "memcached",
                    "monitoring-master",
                    "nodejs-app",
                    "php-app",
                    "rails-app",
                    "web"
                ],
                "UpdateRequires": "Replacement"
            },
            "UseEbsOptimizedInstances": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "VolumeConfigurations": {
                "Required": "No",
                "Type": "List of [VolumeConfiguration",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::OpsWorks::Stack": {
            "AgentVersion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::OpsWorks::Stack",
                "CloudResourceProperty": "AgentVersion",
                "CloudReference": "AWS::OpsWorks::Stack.AgentVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Attributes": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "ChefConfiguration": {
                "Required": "No",
                "Type": "ChefConfiguration",
                "UpdateRequires": "No interruption"
            },
            "CloneAppIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "ClonePermissions": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "ConfigurationManager": {
                "Required": "No",
                "Type": "StackConfigurationManager",
                "UpdateRequires": "No interruption"
            },
            "CustomCookbooksSource": {
                "Required": "No",
                "Type": "Source",
                "UpdateRequires": "No interruption"
            },
            "CustomJson": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "DefaultAvailabilityZone": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DefaultInstanceProfileArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DefaultOs": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DefaultRootDeviceType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "ebs",
                    "instance-store"
                ],
                "UpdateRequires": "No interruption"
            },
            "DefaultSshKeyName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DefaultSubnetId": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "EcsClusterArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ElasticIps": {
                "Required": "No",
                "Type": "List of [ElasticIp",
                "UpdateRequires": "No interruption"
            },
            "HostnameTheme": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RdsDbInstances": {
                "Required": "No",
                "Type": "List of [RdsDbInstance",
                "UpdateRequires": "No interruption"
            },
            "ServiceRoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SourceStackId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            },
            "UseCustomCookbooks": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "UseOpsworksSecurityGroups": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "VpcId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "AWS::OpsWorks::Stack.AgentVersion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::OpsWorks::Stack",
            "CloudResourceProperty": "AgentVersion",
            "CloudReference": "AWS::OpsWorks::Stack.AgentVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorks::UserProfile": {
            "AllowSelfManagement": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::OpsWorks::UserProfile",
                "CloudResourceProperty": "AllowSelfManagement",
                "CloudReference": "AWS::OpsWorks::UserProfile.AllowSelfManagement",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "IamUserArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::OpsWorks::UserProfile",
                "CloudResourceProperty": "IamUserArn",
                "CloudReference": "AWS::OpsWorks::UserProfile.IamUserArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SshPublicKey": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::OpsWorks::UserProfile",
                "CloudResourceProperty": "SshPublicKey",
                "CloudReference": "AWS::OpsWorks::UserProfile.SshPublicKey",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SshUsername": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::OpsWorks::UserProfile",
                "CloudResourceProperty": "SshUsername",
                "CloudReference": "AWS::OpsWorks::UserProfile.SshUsername",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::OpsWorks::UserProfile.AllowSelfManagement": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::OpsWorks::UserProfile",
            "CloudResourceProperty": "AllowSelfManagement",
            "CloudReference": "AWS::OpsWorks::UserProfile.AllowSelfManagement",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorks::UserProfile.IamUserArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::OpsWorks::UserProfile",
            "CloudResourceProperty": "IamUserArn",
            "CloudReference": "AWS::OpsWorks::UserProfile.IamUserArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorks::UserProfile.SshPublicKey": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::OpsWorks::UserProfile",
            "CloudResourceProperty": "SshPublicKey",
            "CloudReference": "AWS::OpsWorks::UserProfile.SshPublicKey",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorks::UserProfile.SshUsername": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::OpsWorks::UserProfile",
            "CloudResourceProperty": "SshUsername",
            "CloudReference": "AWS::OpsWorks::UserProfile.SshUsername",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorks::Volume": {
            "Ec2VolumeId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::OpsWorks::Volume",
                "CloudResourceProperty": "Ec2VolumeId",
                "CloudReference": "AWS::OpsWorks::Volume.Ec2VolumeId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MountPoint": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::OpsWorks::Volume",
                "CloudResourceProperty": "MountPoint",
                "CloudReference": "AWS::OpsWorks::Volume.MountPoint",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::OpsWorks::Volume",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::OpsWorks::Volume.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "StackId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::OpsWorks::Volume",
                "CloudResourceProperty": "StackId",
                "CloudReference": "AWS::OpsWorks::Volume.StackId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::OpsWorks::Volume.Ec2VolumeId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::OpsWorks::Volume",
            "CloudResourceProperty": "Ec2VolumeId",
            "CloudReference": "AWS::OpsWorks::Volume.Ec2VolumeId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorks::Volume.MountPoint": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::OpsWorks::Volume",
            "CloudResourceProperty": "MountPoint",
            "CloudReference": "AWS::OpsWorks::Volume.MountPoint",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorks::Volume.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::OpsWorks::Volume",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::OpsWorks::Volume.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorks::Volume.StackId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::OpsWorks::Volume",
            "CloudResourceProperty": "StackId",
            "CloudReference": "AWS::OpsWorks::Volume.StackId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorksCM::Server": {
            "AssociatePublicIpAddress": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::OpsWorksCM::Server",
                "CloudResourceProperty": "AssociatePublicIpAddress",
                "CloudReference": "AWS::OpsWorksCM::Server.AssociatePublicIpAddress",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "BackupId": {
                "Required": "No",
                "Type": "String",
                "Maximum": "79",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::OpsWorksCM::Server",
                "CloudResourceProperty": "BackupId",
                "CloudReference": "AWS::OpsWorksCM::Server.BackupId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "BackupRetentionCount": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::OpsWorksCM::Server",
                "CloudResourceProperty": "BackupRetentionCount",
                "CloudReference": "AWS::OpsWorksCM::Server.BackupRetentionCount",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DisableAutomatedBackup": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::OpsWorksCM::Server",
                "CloudResourceProperty": "DisableAutomatedBackup",
                "CloudReference": "AWS::OpsWorksCM::Server.DisableAutomatedBackup",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Engine": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::OpsWorksCM::Server",
                "CloudResourceProperty": "Engine",
                "CloudReference": "AWS::OpsWorksCM::Server.Engine",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EngineAttributes": {},
            "EngineModel": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::OpsWorksCM::Server",
                "CloudResourceProperty": "EngineModel",
                "CloudReference": "AWS::OpsWorksCM::Server.EngineModel",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EngineVersion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::OpsWorksCM::Server",
                "CloudResourceProperty": "EngineVersion",
                "CloudReference": "AWS::OpsWorksCM::Server.EngineVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InstanceProfileArn": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "arn:aws:iam::[0-9]{12}:instance-profile/.*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::OpsWorksCM::Server",
                "CloudResourceProperty": "InstanceProfileArn",
                "CloudReference": "AWS::OpsWorksCM::Server.InstanceProfileArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InstanceType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::OpsWorksCM::Server",
                "CloudResourceProperty": "InstanceType",
                "CloudReference": "AWS::OpsWorksCM::Server.InstanceType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "KeyPair": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::OpsWorksCM::Server",
                "CloudResourceProperty": "KeyPair",
                "CloudReference": "AWS::OpsWorksCM::Server.KeyPair",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PreferredBackupWindow": {},
            "PreferredMaintenanceWindow": {},
            "SecurityGroupIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "ServerName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "40",
                "Pattern": "[a-zA-Z][a-zA-Z0-9\\-]*",
                "UpdateRequires": "Replacement"
            },
            "ServiceRoleArn": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "arn:aws:iam::[0-9]{12}:role/.*",
                "UpdateRequires": "Replacement"
            },
            "SubnetIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            }
        },
        "AWS::OpsWorksCM::Server.AssociatePublicIpAddress": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::OpsWorksCM::Server",
            "CloudResourceProperty": "AssociatePublicIpAddress",
            "CloudReference": "AWS::OpsWorksCM::Server.AssociatePublicIpAddress",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorksCM::Server.BackupId": {
            "Required": "No",
            "Type": "String",
            "Maximum": "79",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::OpsWorksCM::Server",
            "CloudResourceProperty": "BackupId",
            "CloudReference": "AWS::OpsWorksCM::Server.BackupId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorksCM::Server.BackupRetentionCount": {
            "Required": "No",
            "Type": "Integer",
            "Minimum": "1",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::OpsWorksCM::Server",
            "CloudResourceProperty": "BackupRetentionCount",
            "CloudReference": "AWS::OpsWorksCM::Server.BackupRetentionCount",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorksCM::Server.DisableAutomatedBackup": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::OpsWorksCM::Server",
            "CloudResourceProperty": "DisableAutomatedBackup",
            "CloudReference": "AWS::OpsWorksCM::Server.DisableAutomatedBackup",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorksCM::Server.Engine": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::OpsWorksCM::Server",
            "CloudResourceProperty": "Engine",
            "CloudReference": "AWS::OpsWorksCM::Server.Engine",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorksCM::Server.EngineModel": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::OpsWorksCM::Server",
            "CloudResourceProperty": "EngineModel",
            "CloudReference": "AWS::OpsWorksCM::Server.EngineModel",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorksCM::Server.EngineVersion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::OpsWorksCM::Server",
            "CloudResourceProperty": "EngineVersion",
            "CloudReference": "AWS::OpsWorksCM::Server.EngineVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorksCM::Server.InstanceProfileArn": {
            "Required": "Yes",
            "Type": "String",
            "Pattern": "arn:aws:iam::[0-9]{12}:instance-profile/.*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::OpsWorksCM::Server",
            "CloudResourceProperty": "InstanceProfileArn",
            "CloudReference": "AWS::OpsWorksCM::Server.InstanceProfileArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorksCM::Server.InstanceType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::OpsWorksCM::Server",
            "CloudResourceProperty": "InstanceType",
            "CloudReference": "AWS::OpsWorksCM::Server.InstanceType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::OpsWorksCM::Server.KeyPair": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::OpsWorksCM::Server",
            "CloudResourceProperty": "KeyPair",
            "CloudReference": "AWS::OpsWorksCM::Server.KeyPair",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::ADMChannel": {
            "ApplicationId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Pinpoint::ADMChannel",
                "CloudResourceProperty": "ApplicationId",
                "CloudReference": "AWS::Pinpoint::ADMChannel.ApplicationId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ClientId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::ADMChannel",
                "CloudResourceProperty": "ClientId",
                "CloudReference": "AWS::Pinpoint::ADMChannel.ClientId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ClientSecret": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::ADMChannel",
                "CloudResourceProperty": "ClientSecret",
                "CloudReference": "AWS::Pinpoint::ADMChannel.ClientSecret",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::ADMChannel",
                "CloudResourceProperty": "Enabled",
                "CloudReference": "AWS::Pinpoint::ADMChannel.Enabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Pinpoint::ADMChannel.ApplicationId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Pinpoint::ADMChannel",
            "CloudResourceProperty": "ApplicationId",
            "CloudReference": "AWS::Pinpoint::ADMChannel.ApplicationId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::ADMChannel.ClientId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::ADMChannel",
            "CloudResourceProperty": "ClientId",
            "CloudReference": "AWS::Pinpoint::ADMChannel.ClientId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::ADMChannel.ClientSecret": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::ADMChannel",
            "CloudResourceProperty": "ClientSecret",
            "CloudReference": "AWS::Pinpoint::ADMChannel.ClientSecret",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::ADMChannel.Enabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::ADMChannel",
            "CloudResourceProperty": "Enabled",
            "CloudReference": "AWS::Pinpoint::ADMChannel.Enabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSChannel": {
            "ApplicationId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Pinpoint::APNSChannel",
                "CloudResourceProperty": "ApplicationId",
                "CloudReference": "AWS::Pinpoint::APNSChannel.ApplicationId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "BundleId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSChannel",
                "CloudResourceProperty": "BundleId",
                "CloudReference": "AWS::Pinpoint::APNSChannel.BundleId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Certificate": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSChannel",
                "CloudResourceProperty": "Certificate",
                "CloudReference": "AWS::Pinpoint::APNSChannel.Certificate",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DefaultAuthenticationMethod": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSChannel",
                "CloudResourceProperty": "DefaultAuthenticationMethod",
                "CloudReference": "AWS::Pinpoint::APNSChannel.DefaultAuthenticationMethod",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSChannel",
                "CloudResourceProperty": "Enabled",
                "CloudReference": "AWS::Pinpoint::APNSChannel.Enabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PrivateKey": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSChannel",
                "CloudResourceProperty": "PrivateKey",
                "CloudReference": "AWS::Pinpoint::APNSChannel.PrivateKey",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TeamId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSChannel",
                "CloudResourceProperty": "TeamId",
                "CloudReference": "AWS::Pinpoint::APNSChannel.TeamId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TokenKey": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSChannel",
                "CloudResourceProperty": "TokenKey",
                "CloudReference": "AWS::Pinpoint::APNSChannel.TokenKey",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TokenKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSChannel",
                "CloudResourceProperty": "TokenKeyId",
                "CloudReference": "AWS::Pinpoint::APNSChannel.TokenKeyId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Pinpoint::APNSChannel.ApplicationId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Pinpoint::APNSChannel",
            "CloudResourceProperty": "ApplicationId",
            "CloudReference": "AWS::Pinpoint::APNSChannel.ApplicationId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSChannel.BundleId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSChannel",
            "CloudResourceProperty": "BundleId",
            "CloudReference": "AWS::Pinpoint::APNSChannel.BundleId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSChannel.Certificate": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSChannel",
            "CloudResourceProperty": "Certificate",
            "CloudReference": "AWS::Pinpoint::APNSChannel.Certificate",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSChannel.DefaultAuthenticationMethod": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSChannel",
            "CloudResourceProperty": "DefaultAuthenticationMethod",
            "CloudReference": "AWS::Pinpoint::APNSChannel.DefaultAuthenticationMethod",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSChannel.Enabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSChannel",
            "CloudResourceProperty": "Enabled",
            "CloudReference": "AWS::Pinpoint::APNSChannel.Enabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSChannel.PrivateKey": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSChannel",
            "CloudResourceProperty": "PrivateKey",
            "CloudReference": "AWS::Pinpoint::APNSChannel.PrivateKey",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSChannel.TeamId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSChannel",
            "CloudResourceProperty": "TeamId",
            "CloudReference": "AWS::Pinpoint::APNSChannel.TeamId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSChannel.TokenKey": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSChannel",
            "CloudResourceProperty": "TokenKey",
            "CloudReference": "AWS::Pinpoint::APNSChannel.TokenKey",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSChannel.TokenKeyId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSChannel",
            "CloudResourceProperty": "TokenKeyId",
            "CloudReference": "AWS::Pinpoint::APNSChannel.TokenKeyId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSSandboxChannel": {
            "ApplicationId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Pinpoint::APNSSandboxChannel",
                "CloudResourceProperty": "ApplicationId",
                "CloudReference": "AWS::Pinpoint::APNSSandboxChannel.ApplicationId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "BundleId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSSandboxChannel",
                "CloudResourceProperty": "BundleId",
                "CloudReference": "AWS::Pinpoint::APNSSandboxChannel.BundleId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Certificate": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSSandboxChannel",
                "CloudResourceProperty": "Certificate",
                "CloudReference": "AWS::Pinpoint::APNSSandboxChannel.Certificate",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DefaultAuthenticationMethod": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSSandboxChannel",
                "CloudResourceProperty": "DefaultAuthenticationMethod",
                "CloudReference": "AWS::Pinpoint::APNSSandboxChannel.DefaultAuthenticationMethod",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSSandboxChannel",
                "CloudResourceProperty": "Enabled",
                "CloudReference": "AWS::Pinpoint::APNSSandboxChannel.Enabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PrivateKey": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSSandboxChannel",
                "CloudResourceProperty": "PrivateKey",
                "CloudReference": "AWS::Pinpoint::APNSSandboxChannel.PrivateKey",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TeamId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSSandboxChannel",
                "CloudResourceProperty": "TeamId",
                "CloudReference": "AWS::Pinpoint::APNSSandboxChannel.TeamId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TokenKey": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSSandboxChannel",
                "CloudResourceProperty": "TokenKey",
                "CloudReference": "AWS::Pinpoint::APNSSandboxChannel.TokenKey",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TokenKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSSandboxChannel",
                "CloudResourceProperty": "TokenKeyId",
                "CloudReference": "AWS::Pinpoint::APNSSandboxChannel.TokenKeyId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Pinpoint::APNSSandboxChannel.ApplicationId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Pinpoint::APNSSandboxChannel",
            "CloudResourceProperty": "ApplicationId",
            "CloudReference": "AWS::Pinpoint::APNSSandboxChannel.ApplicationId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSSandboxChannel.BundleId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSSandboxChannel",
            "CloudResourceProperty": "BundleId",
            "CloudReference": "AWS::Pinpoint::APNSSandboxChannel.BundleId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSSandboxChannel.Certificate": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSSandboxChannel",
            "CloudResourceProperty": "Certificate",
            "CloudReference": "AWS::Pinpoint::APNSSandboxChannel.Certificate",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSSandboxChannel.DefaultAuthenticationMethod": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSSandboxChannel",
            "CloudResourceProperty": "DefaultAuthenticationMethod",
            "CloudReference": "AWS::Pinpoint::APNSSandboxChannel.DefaultAuthenticationMethod",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSSandboxChannel.Enabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSSandboxChannel",
            "CloudResourceProperty": "Enabled",
            "CloudReference": "AWS::Pinpoint::APNSSandboxChannel.Enabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSSandboxChannel.PrivateKey": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSSandboxChannel",
            "CloudResourceProperty": "PrivateKey",
            "CloudReference": "AWS::Pinpoint::APNSSandboxChannel.PrivateKey",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSSandboxChannel.TeamId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSSandboxChannel",
            "CloudResourceProperty": "TeamId",
            "CloudReference": "AWS::Pinpoint::APNSSandboxChannel.TeamId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSSandboxChannel.TokenKey": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSSandboxChannel",
            "CloudResourceProperty": "TokenKey",
            "CloudReference": "AWS::Pinpoint::APNSSandboxChannel.TokenKey",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSSandboxChannel.TokenKeyId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSSandboxChannel",
            "CloudResourceProperty": "TokenKeyId",
            "CloudReference": "AWS::Pinpoint::APNSSandboxChannel.TokenKeyId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSVoipChannel": {
            "ApplicationId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Pinpoint::APNSVoipChannel",
                "CloudResourceProperty": "ApplicationId",
                "CloudReference": "AWS::Pinpoint::APNSVoipChannel.ApplicationId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "BundleId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSVoipChannel",
                "CloudResourceProperty": "BundleId",
                "CloudReference": "AWS::Pinpoint::APNSVoipChannel.BundleId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Certificate": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSVoipChannel",
                "CloudResourceProperty": "Certificate",
                "CloudReference": "AWS::Pinpoint::APNSVoipChannel.Certificate",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DefaultAuthenticationMethod": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSVoipChannel",
                "CloudResourceProperty": "DefaultAuthenticationMethod",
                "CloudReference": "AWS::Pinpoint::APNSVoipChannel.DefaultAuthenticationMethod",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSVoipChannel",
                "CloudResourceProperty": "Enabled",
                "CloudReference": "AWS::Pinpoint::APNSVoipChannel.Enabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PrivateKey": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSVoipChannel",
                "CloudResourceProperty": "PrivateKey",
                "CloudReference": "AWS::Pinpoint::APNSVoipChannel.PrivateKey",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TeamId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSVoipChannel",
                "CloudResourceProperty": "TeamId",
                "CloudReference": "AWS::Pinpoint::APNSVoipChannel.TeamId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TokenKey": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSVoipChannel",
                "CloudResourceProperty": "TokenKey",
                "CloudReference": "AWS::Pinpoint::APNSVoipChannel.TokenKey",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TokenKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSVoipChannel",
                "CloudResourceProperty": "TokenKeyId",
                "CloudReference": "AWS::Pinpoint::APNSVoipChannel.TokenKeyId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Pinpoint::APNSVoipChannel.ApplicationId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Pinpoint::APNSVoipChannel",
            "CloudResourceProperty": "ApplicationId",
            "CloudReference": "AWS::Pinpoint::APNSVoipChannel.ApplicationId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSVoipChannel.BundleId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSVoipChannel",
            "CloudResourceProperty": "BundleId",
            "CloudReference": "AWS::Pinpoint::APNSVoipChannel.BundleId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSVoipChannel.Certificate": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSVoipChannel",
            "CloudResourceProperty": "Certificate",
            "CloudReference": "AWS::Pinpoint::APNSVoipChannel.Certificate",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSVoipChannel.DefaultAuthenticationMethod": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSVoipChannel",
            "CloudResourceProperty": "DefaultAuthenticationMethod",
            "CloudReference": "AWS::Pinpoint::APNSVoipChannel.DefaultAuthenticationMethod",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSVoipChannel.Enabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSVoipChannel",
            "CloudResourceProperty": "Enabled",
            "CloudReference": "AWS::Pinpoint::APNSVoipChannel.Enabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSVoipChannel.PrivateKey": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSVoipChannel",
            "CloudResourceProperty": "PrivateKey",
            "CloudReference": "AWS::Pinpoint::APNSVoipChannel.PrivateKey",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSVoipChannel.TeamId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSVoipChannel",
            "CloudResourceProperty": "TeamId",
            "CloudReference": "AWS::Pinpoint::APNSVoipChannel.TeamId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSVoipChannel.TokenKey": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSVoipChannel",
            "CloudResourceProperty": "TokenKey",
            "CloudReference": "AWS::Pinpoint::APNSVoipChannel.TokenKey",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSVoipChannel.TokenKeyId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSVoipChannel",
            "CloudResourceProperty": "TokenKeyId",
            "CloudReference": "AWS::Pinpoint::APNSVoipChannel.TokenKeyId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSVoipSandboxChannel": {
            "ApplicationId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Pinpoint::APNSVoipSandboxChannel",
                "CloudResourceProperty": "ApplicationId",
                "CloudReference": "AWS::Pinpoint::APNSVoipSandboxChannel.ApplicationId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "BundleId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSVoipSandboxChannel",
                "CloudResourceProperty": "BundleId",
                "CloudReference": "AWS::Pinpoint::APNSVoipSandboxChannel.BundleId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Certificate": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSVoipSandboxChannel",
                "CloudResourceProperty": "Certificate",
                "CloudReference": "AWS::Pinpoint::APNSVoipSandboxChannel.Certificate",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DefaultAuthenticationMethod": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSVoipSandboxChannel",
                "CloudResourceProperty": "DefaultAuthenticationMethod",
                "CloudReference": "AWS::Pinpoint::APNSVoipSandboxChannel.DefaultAuthenticationMethod",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSVoipSandboxChannel",
                "CloudResourceProperty": "Enabled",
                "CloudReference": "AWS::Pinpoint::APNSVoipSandboxChannel.Enabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PrivateKey": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSVoipSandboxChannel",
                "CloudResourceProperty": "PrivateKey",
                "CloudReference": "AWS::Pinpoint::APNSVoipSandboxChannel.PrivateKey",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TeamId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSVoipSandboxChannel",
                "CloudResourceProperty": "TeamId",
                "CloudReference": "AWS::Pinpoint::APNSVoipSandboxChannel.TeamId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TokenKey": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSVoipSandboxChannel",
                "CloudResourceProperty": "TokenKey",
                "CloudReference": "AWS::Pinpoint::APNSVoipSandboxChannel.TokenKey",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TokenKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::APNSVoipSandboxChannel",
                "CloudResourceProperty": "TokenKeyId",
                "CloudReference": "AWS::Pinpoint::APNSVoipSandboxChannel.TokenKeyId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Pinpoint::APNSVoipSandboxChannel.ApplicationId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Pinpoint::APNSVoipSandboxChannel",
            "CloudResourceProperty": "ApplicationId",
            "CloudReference": "AWS::Pinpoint::APNSVoipSandboxChannel.ApplicationId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSVoipSandboxChannel.BundleId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSVoipSandboxChannel",
            "CloudResourceProperty": "BundleId",
            "CloudReference": "AWS::Pinpoint::APNSVoipSandboxChannel.BundleId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSVoipSandboxChannel.Certificate": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSVoipSandboxChannel",
            "CloudResourceProperty": "Certificate",
            "CloudReference": "AWS::Pinpoint::APNSVoipSandboxChannel.Certificate",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSVoipSandboxChannel.DefaultAuthenticationMethod": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSVoipSandboxChannel",
            "CloudResourceProperty": "DefaultAuthenticationMethod",
            "CloudReference": "AWS::Pinpoint::APNSVoipSandboxChannel.DefaultAuthenticationMethod",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSVoipSandboxChannel.Enabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSVoipSandboxChannel",
            "CloudResourceProperty": "Enabled",
            "CloudReference": "AWS::Pinpoint::APNSVoipSandboxChannel.Enabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSVoipSandboxChannel.PrivateKey": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSVoipSandboxChannel",
            "CloudResourceProperty": "PrivateKey",
            "CloudReference": "AWS::Pinpoint::APNSVoipSandboxChannel.PrivateKey",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSVoipSandboxChannel.TeamId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSVoipSandboxChannel",
            "CloudResourceProperty": "TeamId",
            "CloudReference": "AWS::Pinpoint::APNSVoipSandboxChannel.TeamId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSVoipSandboxChannel.TokenKey": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSVoipSandboxChannel",
            "CloudResourceProperty": "TokenKey",
            "CloudReference": "AWS::Pinpoint::APNSVoipSandboxChannel.TokenKey",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::APNSVoipSandboxChannel.TokenKeyId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::APNSVoipSandboxChannel",
            "CloudResourceProperty": "TokenKeyId",
            "CloudReference": "AWS::Pinpoint::APNSVoipSandboxChannel.TokenKeyId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::App": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Pinpoint::App",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Pinpoint::App.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Pinpoint::App.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Pinpoint::App",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Pinpoint::App.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::ApplicationSettings": {
            "ApplicationId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Pinpoint::ApplicationSettings",
                "CloudResourceProperty": "ApplicationId",
                "CloudReference": "AWS::Pinpoint::ApplicationSettings.ApplicationId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CampaignHook": {
                "Required": "No",
                "Type": "CampaignHook",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::ApplicationSettings",
                "CloudResourceProperty": "CampaignHook",
                "CloudReference": "AWS::Pinpoint::ApplicationSettings.CampaignHook",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "LambdaFunctionName": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Mode": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "WebUrl": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "CloudWatchMetricsEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::ApplicationSettings",
                "CloudResourceProperty": "CloudWatchMetricsEnabled",
                "CloudReference": "AWS::Pinpoint::ApplicationSettings.CloudWatchMetricsEnabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Limits": {
                "Required": "No",
                "Type": "Limits",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::ApplicationSettings",
                "CloudResourceProperty": "Limits",
                "CloudReference": "AWS::Pinpoint::ApplicationSettings.Limits",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Daily": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "MaximumDuration": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "MessagesPerSecond": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "Total": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "QuietTime": {
                "Required": "No",
                "Type": "QuietTime",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::ApplicationSettings",
                "CloudResourceProperty": "QuietTime",
                "CloudReference": "AWS::Pinpoint::ApplicationSettings.QuietTime",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "End": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Start": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::Pinpoint::ApplicationSettings.ApplicationId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Pinpoint::ApplicationSettings",
            "CloudResourceProperty": "ApplicationId",
            "CloudReference": "AWS::Pinpoint::ApplicationSettings.ApplicationId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::ApplicationSettings.CampaignHook": {
            "Required": "No",
            "Type": "CampaignHook",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::ApplicationSettings",
            "CloudResourceProperty": "CampaignHook",
            "CloudReference": "AWS::Pinpoint::ApplicationSettings.CampaignHook",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "LambdaFunctionName": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Mode": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "WebUrl": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Pinpoint::ApplicationSettings.CloudWatchMetricsEnabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::ApplicationSettings",
            "CloudResourceProperty": "CloudWatchMetricsEnabled",
            "CloudReference": "AWS::Pinpoint::ApplicationSettings.CloudWatchMetricsEnabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::ApplicationSettings.Limits": {
            "Required": "No",
            "Type": "Limits",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::ApplicationSettings",
            "CloudResourceProperty": "Limits",
            "CloudReference": "AWS::Pinpoint::ApplicationSettings.Limits",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Daily": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "MaximumDuration": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "MessagesPerSecond": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "Total": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Pinpoint::ApplicationSettings.QuietTime": {
            "Required": "No",
            "Type": "QuietTime",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::ApplicationSettings",
            "CloudResourceProperty": "QuietTime",
            "CloudReference": "AWS::Pinpoint::ApplicationSettings.QuietTime",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "End": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Start": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Pinpoint::BaiduChannel": {
            "ApiKey": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::BaiduChannel",
                "CloudResourceProperty": "ApiKey",
                "CloudReference": "AWS::Pinpoint::BaiduChannel.ApiKey",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ApplicationId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Pinpoint::BaiduChannel",
                "CloudResourceProperty": "ApplicationId",
                "CloudReference": "AWS::Pinpoint::BaiduChannel.ApplicationId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::BaiduChannel",
                "CloudResourceProperty": "Enabled",
                "CloudReference": "AWS::Pinpoint::BaiduChannel.Enabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SecretKey": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::BaiduChannel",
                "CloudResourceProperty": "SecretKey",
                "CloudReference": "AWS::Pinpoint::BaiduChannel.SecretKey",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Pinpoint::BaiduChannel.ApiKey": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::BaiduChannel",
            "CloudResourceProperty": "ApiKey",
            "CloudReference": "AWS::Pinpoint::BaiduChannel.ApiKey",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::BaiduChannel.ApplicationId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Pinpoint::BaiduChannel",
            "CloudResourceProperty": "ApplicationId",
            "CloudReference": "AWS::Pinpoint::BaiduChannel.ApplicationId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::BaiduChannel.Enabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::BaiduChannel",
            "CloudResourceProperty": "Enabled",
            "CloudReference": "AWS::Pinpoint::BaiduChannel.Enabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::BaiduChannel.SecretKey": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::BaiduChannel",
            "CloudResourceProperty": "SecretKey",
            "CloudReference": "AWS::Pinpoint::BaiduChannel.SecretKey",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::Campaign": {
            "AdditionalTreatments": {
                "Required": "No",
                "Type": "List of [WriteTreatmentResource",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::Campaign",
                "CloudResourceProperty": "AdditionalTreatments",
                "CloudReference": "AWS::Pinpoint::Campaign.AdditionalTreatments",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "MessageConfiguration": {
                        "Required": "No",
                        "Type": "MessageConfiguration",
                        "UpdateRequires": "No interruption"
                    },
                    "Schedule": {
                        "Required": "No",
                        "Type": "Schedule",
                        "UpdateRequires": "No interruption"
                    },
                    "SizePercent": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "TreatmentDescription": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "TreatmentName": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "ApplicationId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Pinpoint::Campaign",
                "CloudResourceProperty": "ApplicationId",
                "CloudReference": "AWS::Pinpoint::Campaign.ApplicationId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CampaignHook": {
                "Required": "No",
                "Type": "CampaignHook",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::Campaign",
                "CloudResourceProperty": "CampaignHook",
                "CloudReference": "AWS::Pinpoint::Campaign.CampaignHook",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "LambdaFunctionName": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Mode": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "WebUrl": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::Campaign",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::Pinpoint::Campaign.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "HoldoutPercent": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::Campaign",
                "CloudResourceProperty": "HoldoutPercent",
                "CloudReference": "AWS::Pinpoint::Campaign.HoldoutPercent",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "IsPaused": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::Campaign",
                "CloudResourceProperty": "IsPaused",
                "CloudReference": "AWS::Pinpoint::Campaign.IsPaused",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Limits": {
                "Required": "No",
                "Type": "Limits",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::Campaign",
                "CloudResourceProperty": "Limits",
                "CloudReference": "AWS::Pinpoint::Campaign.Limits",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Daily": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "MaximumDuration": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "MessagesPerSecond": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "Total": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "MessageConfiguration": {
                "Required": "Yes",
                "Type": "MessageConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::Campaign",
                "CloudResourceProperty": "MessageConfiguration",
                "CloudReference": "AWS::Pinpoint::Campaign.MessageConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ADMMessage": {
                        "Required": "No",
                        "Type": "Message",
                        "UpdateRequires": "No interruption"
                    },
                    "APNSMessage": {
                        "Required": "No",
                        "Type": "Message",
                        "UpdateRequires": "No interruption"
                    },
                    "BaiduMessage": {
                        "Required": "No",
                        "Type": "Message",
                        "UpdateRequires": "No interruption"
                    },
                    "DefaultMessage": {
                        "Required": "No",
                        "Type": "Message",
                        "UpdateRequires": "No interruption"
                    },
                    "EmailMessage": {
                        "Required": "No",
                        "Type": "CampaignEmailMessage",
                        "UpdateRequires": "No interruption"
                    },
                    "GCMMessage": {
                        "Required": "No",
                        "Type": "Message",
                        "UpdateRequires": "No interruption"
                    },
                    "SMSMessage": {
                        "Required": "No",
                        "Type": "CampaignSmsMessage",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::Campaign",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Pinpoint::Campaign.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Schedule": {
                "Required": "Yes",
                "Type": "Schedule",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::Campaign",
                "CloudResourceProperty": "Schedule",
                "CloudReference": "AWS::Pinpoint::Campaign.Schedule",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "EndTime": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "EventFilter": {
                        "Required": "No",
                        "Type": "CampaignEventFilter",
                        "UpdateRequires": "No interruption"
                    },
                    "Frequency": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "IsLocalTime": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "QuietTime": {
                        "Required": "No",
                        "Type": "QuietTime",
                        "UpdateRequires": "No interruption"
                    },
                    "StartTime": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "TimeZone": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "SegmentId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::Campaign",
                "CloudResourceProperty": "SegmentId",
                "CloudReference": "AWS::Pinpoint::Campaign.SegmentId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SegmentVersion": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::Campaign",
                "CloudResourceProperty": "SegmentVersion",
                "CloudReference": "AWS::Pinpoint::Campaign.SegmentVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TreatmentDescription": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::Campaign",
                "CloudResourceProperty": "TreatmentDescription",
                "CloudReference": "AWS::Pinpoint::Campaign.TreatmentDescription",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TreatmentName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::Campaign",
                "CloudResourceProperty": "TreatmentName",
                "CloudReference": "AWS::Pinpoint::Campaign.TreatmentName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Pinpoint::Campaign.AdditionalTreatments": {
            "Required": "No",
            "Type": "List of [WriteTreatmentResource",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::Campaign",
            "CloudResourceProperty": "AdditionalTreatments",
            "CloudReference": "AWS::Pinpoint::Campaign.AdditionalTreatments",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "MessageConfiguration": {
                    "Required": "No",
                    "Type": "MessageConfiguration",
                    "UpdateRequires": "No interruption"
                },
                "Schedule": {
                    "Required": "No",
                    "Type": "Schedule",
                    "UpdateRequires": "No interruption"
                },
                "SizePercent": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "TreatmentDescription": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "TreatmentName": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Pinpoint::Campaign.ApplicationId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Pinpoint::Campaign",
            "CloudResourceProperty": "ApplicationId",
            "CloudReference": "AWS::Pinpoint::Campaign.ApplicationId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::Campaign.CampaignHook": {
            "Required": "No",
            "Type": "CampaignHook",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::Campaign",
            "CloudResourceProperty": "CampaignHook",
            "CloudReference": "AWS::Pinpoint::Campaign.CampaignHook",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "LambdaFunctionName": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Mode": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "WebUrl": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Pinpoint::Campaign.Description": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::Campaign",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::Pinpoint::Campaign.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::Campaign.HoldoutPercent": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::Campaign",
            "CloudResourceProperty": "HoldoutPercent",
            "CloudReference": "AWS::Pinpoint::Campaign.HoldoutPercent",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::Campaign.IsPaused": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::Campaign",
            "CloudResourceProperty": "IsPaused",
            "CloudReference": "AWS::Pinpoint::Campaign.IsPaused",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::Campaign.Limits": {
            "Required": "No",
            "Type": "Limits",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::Campaign",
            "CloudResourceProperty": "Limits",
            "CloudReference": "AWS::Pinpoint::Campaign.Limits",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Daily": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "MaximumDuration": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "MessagesPerSecond": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "Total": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Pinpoint::Campaign.MessageConfiguration": {
            "Required": "Yes",
            "Type": "MessageConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::Campaign",
            "CloudResourceProperty": "MessageConfiguration",
            "CloudReference": "AWS::Pinpoint::Campaign.MessageConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ADMMessage": {
                    "Required": "No",
                    "Type": "Message",
                    "UpdateRequires": "No interruption"
                },
                "APNSMessage": {
                    "Required": "No",
                    "Type": "Message",
                    "UpdateRequires": "No interruption"
                },
                "BaiduMessage": {
                    "Required": "No",
                    "Type": "Message",
                    "UpdateRequires": "No interruption"
                },
                "DefaultMessage": {
                    "Required": "No",
                    "Type": "Message",
                    "UpdateRequires": "No interruption"
                },
                "EmailMessage": {
                    "Required": "No",
                    "Type": "CampaignEmailMessage",
                    "UpdateRequires": "No interruption"
                },
                "GCMMessage": {
                    "Required": "No",
                    "Type": "Message",
                    "UpdateRequires": "No interruption"
                },
                "SMSMessage": {
                    "Required": "No",
                    "Type": "CampaignSmsMessage",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Pinpoint::Campaign.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::Campaign",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Pinpoint::Campaign.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::Campaign.Schedule": {
            "Required": "Yes",
            "Type": "Schedule",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::Campaign",
            "CloudResourceProperty": "Schedule",
            "CloudReference": "AWS::Pinpoint::Campaign.Schedule",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "EndTime": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "EventFilter": {
                    "Required": "No",
                    "Type": "CampaignEventFilter",
                    "UpdateRequires": "No interruption"
                },
                "Frequency": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "IsLocalTime": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "QuietTime": {
                    "Required": "No",
                    "Type": "QuietTime",
                    "UpdateRequires": "No interruption"
                },
                "StartTime": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "TimeZone": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Pinpoint::Campaign.SegmentId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::Campaign",
            "CloudResourceProperty": "SegmentId",
            "CloudReference": "AWS::Pinpoint::Campaign.SegmentId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::Campaign.SegmentVersion": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::Campaign",
            "CloudResourceProperty": "SegmentVersion",
            "CloudReference": "AWS::Pinpoint::Campaign.SegmentVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::Campaign.TreatmentDescription": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::Campaign",
            "CloudResourceProperty": "TreatmentDescription",
            "CloudReference": "AWS::Pinpoint::Campaign.TreatmentDescription",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::Campaign.TreatmentName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::Campaign",
            "CloudResourceProperty": "TreatmentName",
            "CloudReference": "AWS::Pinpoint::Campaign.TreatmentName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::EmailChannel": {
            "ApplicationId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Pinpoint::EmailChannel",
                "CloudResourceProperty": "ApplicationId",
                "CloudReference": "AWS::Pinpoint::EmailChannel.ApplicationId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ConfigurationSet": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::EmailChannel",
                "CloudResourceProperty": "ConfigurationSet",
                "CloudReference": "AWS::Pinpoint::EmailChannel.ConfigurationSet",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::EmailChannel",
                "CloudResourceProperty": "Enabled",
                "CloudReference": "AWS::Pinpoint::EmailChannel.Enabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "FromAddress": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::EmailChannel",
                "CloudResourceProperty": "FromAddress",
                "CloudReference": "AWS::Pinpoint::EmailChannel.FromAddress",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Identity": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::EmailChannel",
                "CloudResourceProperty": "Identity",
                "CloudReference": "AWS::Pinpoint::EmailChannel.Identity",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RoleArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::EmailChannel",
                "CloudResourceProperty": "RoleArn",
                "CloudReference": "AWS::Pinpoint::EmailChannel.RoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Pinpoint::EmailChannel.ApplicationId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Pinpoint::EmailChannel",
            "CloudResourceProperty": "ApplicationId",
            "CloudReference": "AWS::Pinpoint::EmailChannel.ApplicationId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::EmailChannel.ConfigurationSet": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::EmailChannel",
            "CloudResourceProperty": "ConfigurationSet",
            "CloudReference": "AWS::Pinpoint::EmailChannel.ConfigurationSet",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::EmailChannel.Enabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::EmailChannel",
            "CloudResourceProperty": "Enabled",
            "CloudReference": "AWS::Pinpoint::EmailChannel.Enabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::EmailChannel.FromAddress": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::EmailChannel",
            "CloudResourceProperty": "FromAddress",
            "CloudReference": "AWS::Pinpoint::EmailChannel.FromAddress",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::EmailChannel.Identity": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::EmailChannel",
            "CloudResourceProperty": "Identity",
            "CloudReference": "AWS::Pinpoint::EmailChannel.Identity",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::EmailChannel.RoleArn": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::EmailChannel",
            "CloudResourceProperty": "RoleArn",
            "CloudReference": "AWS::Pinpoint::EmailChannel.RoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::EventStream": {
            "ApplicationId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Pinpoint::EventStream",
                "CloudResourceProperty": "ApplicationId",
                "CloudReference": "AWS::Pinpoint::EventStream.ApplicationId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DestinationStreamArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::EventStream",
                "CloudResourceProperty": "DestinationStreamArn",
                "CloudReference": "AWS::Pinpoint::EventStream.DestinationStreamArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::EventStream",
                "CloudResourceProperty": "RoleArn",
                "CloudReference": "AWS::Pinpoint::EventStream.RoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Pinpoint::EventStream.ApplicationId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Pinpoint::EventStream",
            "CloudResourceProperty": "ApplicationId",
            "CloudReference": "AWS::Pinpoint::EventStream.ApplicationId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::EventStream.DestinationStreamArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::EventStream",
            "CloudResourceProperty": "DestinationStreamArn",
            "CloudReference": "AWS::Pinpoint::EventStream.DestinationStreamArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::EventStream.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::EventStream",
            "CloudResourceProperty": "RoleArn",
            "CloudReference": "AWS::Pinpoint::EventStream.RoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::GCMChannel": {
            "ApiKey": {},
            "ApplicationId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Pinpoint::GCMChannel",
                "CloudResourceProperty": "ApplicationId",
                "CloudReference": "AWS::Pinpoint::GCMChannel.ApplicationId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::GCMChannel",
                "CloudResourceProperty": "Enabled",
                "CloudReference": "AWS::Pinpoint::GCMChannel.Enabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Pinpoint::GCMChannel.ApplicationId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Pinpoint::GCMChannel",
            "CloudResourceProperty": "ApplicationId",
            "CloudReference": "AWS::Pinpoint::GCMChannel.ApplicationId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::GCMChannel.Enabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::GCMChannel",
            "CloudResourceProperty": "Enabled",
            "CloudReference": "AWS::Pinpoint::GCMChannel.Enabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::Segment": {
            "ApplicationId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Pinpoint::Segment",
                "CloudResourceProperty": "ApplicationId",
                "CloudReference": "AWS::Pinpoint::Segment.ApplicationId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Dimensions": {
                "Required": "No",
                "Type": "SegmentDimensions",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::Segment",
                "CloudResourceProperty": "Dimensions",
                "CloudReference": "AWS::Pinpoint::Segment.Dimensions",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Attributes": {
                        "Required": "No",
                        "Type": "Json",
                        "UpdateRequires": "No interruption"
                    },
                    "Behavior": {
                        "Required": "No",
                        "Type": "Behavior",
                        "UpdateRequires": "No interruption"
                    },
                    "Demographic": {
                        "Required": "No",
                        "Type": "Demographic",
                        "UpdateRequires": "No interruption"
                    },
                    "Location": {
                        "Required": "No",
                        "Type": "Location",
                        "UpdateRequires": "No interruption"
                    },
                    "Metrics": {
                        "Required": "No",
                        "Type": "Json",
                        "UpdateRequires": "No interruption"
                    },
                    "UserAttributes": {
                        "Required": "No",
                        "Type": "Json",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::Segment",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Pinpoint::Segment.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SegmentGroups": {
                "Required": "No",
                "Type": "SegmentGroups",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::Segment",
                "CloudResourceProperty": "SegmentGroups",
                "CloudReference": "AWS::Pinpoint::Segment.SegmentGroups",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Groups": {
                        "Required": "No",
                        "Type": "List",
                        "UpdateRequires": "No interruption"
                    },
                    "Include": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::Pinpoint::Segment.ApplicationId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Pinpoint::Segment",
            "CloudResourceProperty": "ApplicationId",
            "CloudReference": "AWS::Pinpoint::Segment.ApplicationId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::Segment.Dimensions": {
            "Required": "No",
            "Type": "SegmentDimensions",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::Segment",
            "CloudResourceProperty": "Dimensions",
            "CloudReference": "AWS::Pinpoint::Segment.Dimensions",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Attributes": {
                    "Required": "No",
                    "Type": "Json",
                    "UpdateRequires": "No interruption"
                },
                "Behavior": {
                    "Required": "No",
                    "Type": "Behavior",
                    "UpdateRequires": "No interruption"
                },
                "Demographic": {
                    "Required": "No",
                    "Type": "Demographic",
                    "UpdateRequires": "No interruption"
                },
                "Location": {
                    "Required": "No",
                    "Type": "Location",
                    "UpdateRequires": "No interruption"
                },
                "Metrics": {
                    "Required": "No",
                    "Type": "Json",
                    "UpdateRequires": "No interruption"
                },
                "UserAttributes": {
                    "Required": "No",
                    "Type": "Json",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Pinpoint::Segment.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::Segment",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Pinpoint::Segment.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::Segment.SegmentGroups": {
            "Required": "No",
            "Type": "SegmentGroups",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::Segment",
            "CloudResourceProperty": "SegmentGroups",
            "CloudReference": "AWS::Pinpoint::Segment.SegmentGroups",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Groups": {
                    "Required": "No",
                    "Type": "List",
                    "UpdateRequires": "No interruption"
                },
                "Include": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Pinpoint::SMSChannel": {
            "ApplicationId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Pinpoint::SMSChannel",
                "CloudResourceProperty": "ApplicationId",
                "CloudReference": "AWS::Pinpoint::SMSChannel.ApplicationId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::SMSChannel",
                "CloudResourceProperty": "Enabled",
                "CloudReference": "AWS::Pinpoint::SMSChannel.Enabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SenderId": {},
            "ShortCode": {}
        },
        "AWS::Pinpoint::SMSChannel.ApplicationId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Pinpoint::SMSChannel",
            "CloudResourceProperty": "ApplicationId",
            "CloudReference": "AWS::Pinpoint::SMSChannel.ApplicationId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::SMSChannel.Enabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::SMSChannel",
            "CloudResourceProperty": "Enabled",
            "CloudReference": "AWS::Pinpoint::SMSChannel.Enabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::VoiceChannel": {
            "ApplicationId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Pinpoint::VoiceChannel",
                "CloudResourceProperty": "ApplicationId",
                "CloudReference": "AWS::Pinpoint::VoiceChannel.ApplicationId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Pinpoint::VoiceChannel",
                "CloudResourceProperty": "Enabled",
                "CloudReference": "AWS::Pinpoint::VoiceChannel.Enabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Pinpoint::VoiceChannel.ApplicationId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Pinpoint::VoiceChannel",
            "CloudResourceProperty": "ApplicationId",
            "CloudReference": "AWS::Pinpoint::VoiceChannel.ApplicationId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Pinpoint::VoiceChannel.Enabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Pinpoint::VoiceChannel",
            "CloudResourceProperty": "Enabled",
            "CloudReference": "AWS::Pinpoint::VoiceChannel.Enabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::PinpointEmail::ConfigurationSet": {
            "DeliveryOptions": {
                "Required": "No",
                "Type": "DeliveryOptions",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::PinpointEmail::ConfigurationSet",
                "CloudResourceProperty": "DeliveryOptions",
                "CloudReference": "AWS::PinpointEmail::ConfigurationSet.DeliveryOptions",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "SendingPoolName": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::PinpointEmail::ConfigurationSet",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::PinpointEmail::ConfigurationSet.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ReputationOptions": {
                "Required": "No",
                "Type": "ReputationOptions",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::PinpointEmail::ConfigurationSet",
                "CloudResourceProperty": "ReputationOptions",
                "CloudReference": "AWS::PinpointEmail::ConfigurationSet.ReputationOptions",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ReputationMetricsEnabled": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "SendingOptions": {
                "Required": "No",
                "Type": "SendingOptions",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::PinpointEmail::ConfigurationSet",
                "CloudResourceProperty": "SendingOptions",
                "CloudReference": "AWS::PinpointEmail::ConfigurationSet.SendingOptions",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "SendingEnabled": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Tags": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::PinpointEmail::ConfigurationSet",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::PinpointEmail::ConfigurationSet.Tags",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TrackingOptions": {
                "Required": "No",
                "Type": "TrackingOptions",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::PinpointEmail::ConfigurationSet",
                "CloudResourceProperty": "TrackingOptions",
                "CloudReference": "AWS::PinpointEmail::ConfigurationSet.TrackingOptions",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "CustomRedirectDomain": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::PinpointEmail::ConfigurationSet.DeliveryOptions": {
            "Required": "No",
            "Type": "DeliveryOptions",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::PinpointEmail::ConfigurationSet",
            "CloudResourceProperty": "DeliveryOptions",
            "CloudReference": "AWS::PinpointEmail::ConfigurationSet.DeliveryOptions",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "SendingPoolName": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::PinpointEmail::ConfigurationSet.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::PinpointEmail::ConfigurationSet",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::PinpointEmail::ConfigurationSet.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::PinpointEmail::ConfigurationSet.ReputationOptions": {
            "Required": "No",
            "Type": "ReputationOptions",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::PinpointEmail::ConfigurationSet",
            "CloudResourceProperty": "ReputationOptions",
            "CloudReference": "AWS::PinpointEmail::ConfigurationSet.ReputationOptions",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ReputationMetricsEnabled": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::PinpointEmail::ConfigurationSet.SendingOptions": {
            "Required": "No",
            "Type": "SendingOptions",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::PinpointEmail::ConfigurationSet",
            "CloudResourceProperty": "SendingOptions",
            "CloudReference": "AWS::PinpointEmail::ConfigurationSet.SendingOptions",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "SendingEnabled": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::PinpointEmail::ConfigurationSet.Tags": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::PinpointEmail::ConfigurationSet",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::PinpointEmail::ConfigurationSet.Tags",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::PinpointEmail::ConfigurationSet.TrackingOptions": {
            "Required": "No",
            "Type": "TrackingOptions",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::PinpointEmail::ConfigurationSet",
            "CloudResourceProperty": "TrackingOptions",
            "CloudReference": "AWS::PinpointEmail::ConfigurationSet.TrackingOptions",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "CustomRedirectDomain": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::PinpointEmail::ConfigurationSetEventDestination": {
            "ConfigurationSetName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::PinpointEmail::ConfigurationSetEventDestination",
                "CloudResourceProperty": "ConfigurationSetName",
                "CloudReference": "AWS::PinpointEmail::ConfigurationSetEventDestination.ConfigurationSetName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EventDestination": {
                "Required": "No",
                "Type": "EventDestination",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::PinpointEmail::ConfigurationSetEventDestination",
                "CloudResourceProperty": "EventDestination",
                "CloudReference": "AWS::PinpointEmail::ConfigurationSetEventDestination.EventDestination",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "CloudWatchDestination": {
                        "Required": "No",
                        "Type": "CloudWatchDestination",
                        "UpdateRequires": "No interruption"
                    },
                    "Enabled": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "KinesisFirehoseDestination": {
                        "Required": "No",
                        "Type": "KinesisFirehoseDestination",
                        "UpdateRequires": "No interruption"
                    },
                    "MatchingEventTypes": {
                        "Required": "Yes",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    },
                    "PinpointDestination": {
                        "Required": "No",
                        "Type": "PinpointDestination",
                        "UpdateRequires": "No interruption"
                    },
                    "SnsDestination": {
                        "Required": "No",
                        "Type": "SnsDestination",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "EventDestinationName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::PinpointEmail::ConfigurationSetEventDestination",
                "CloudResourceProperty": "EventDestinationName",
                "CloudReference": "AWS::PinpointEmail::ConfigurationSetEventDestination.EventDestinationName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::PinpointEmail::ConfigurationSetEventDestination.ConfigurationSetName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::PinpointEmail::ConfigurationSetEventDestination",
            "CloudResourceProperty": "ConfigurationSetName",
            "CloudReference": "AWS::PinpointEmail::ConfigurationSetEventDestination.ConfigurationSetName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::PinpointEmail::ConfigurationSetEventDestination.EventDestination": {
            "Required": "No",
            "Type": "EventDestination",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::PinpointEmail::ConfigurationSetEventDestination",
            "CloudResourceProperty": "EventDestination",
            "CloudReference": "AWS::PinpointEmail::ConfigurationSetEventDestination.EventDestination",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "CloudWatchDestination": {
                    "Required": "No",
                    "Type": "CloudWatchDestination",
                    "UpdateRequires": "No interruption"
                },
                "Enabled": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "KinesisFirehoseDestination": {
                    "Required": "No",
                    "Type": "KinesisFirehoseDestination",
                    "UpdateRequires": "No interruption"
                },
                "MatchingEventTypes": {
                    "Required": "Yes",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                },
                "PinpointDestination": {
                    "Required": "No",
                    "Type": "PinpointDestination",
                    "UpdateRequires": "No interruption"
                },
                "SnsDestination": {
                    "Required": "No",
                    "Type": "SnsDestination",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::PinpointEmail::ConfigurationSetEventDestination.EventDestinationName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::PinpointEmail::ConfigurationSetEventDestination",
            "CloudResourceProperty": "EventDestinationName",
            "CloudReference": "AWS::PinpointEmail::ConfigurationSetEventDestination.EventDestinationName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::PinpointEmail::DedicatedIpPool": {
            "PoolName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::PinpointEmail::DedicatedIpPool",
                "CloudResourceProperty": "PoolName",
                "CloudReference": "AWS::PinpointEmail::DedicatedIpPool.PoolName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::PinpointEmail::DedicatedIpPool",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::PinpointEmail::DedicatedIpPool.Tags",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::PinpointEmail::DedicatedIpPool.PoolName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::PinpointEmail::DedicatedIpPool",
            "CloudResourceProperty": "PoolName",
            "CloudReference": "AWS::PinpointEmail::DedicatedIpPool.PoolName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::PinpointEmail::DedicatedIpPool.Tags": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::PinpointEmail::DedicatedIpPool",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::PinpointEmail::DedicatedIpPool.Tags",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::PinpointEmail::Identity": {
            "DkimSigningEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::PinpointEmail::Identity",
                "CloudResourceProperty": "DkimSigningEnabled",
                "CloudReference": "AWS::PinpointEmail::Identity.DkimSigningEnabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "FeedbackForwardingEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::PinpointEmail::Identity",
                "CloudResourceProperty": "FeedbackForwardingEnabled",
                "CloudReference": "AWS::PinpointEmail::Identity.FeedbackForwardingEnabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MailFromAttributes": {
                "Required": "No",
                "Type": "MailFromAttributes",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::PinpointEmail::Identity",
                "CloudResourceProperty": "MailFromAttributes",
                "CloudReference": "AWS::PinpointEmail::Identity.MailFromAttributes",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "BehaviorOnMxFailure": {},
                    "MailFromDomain": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Name": {},
            "Tags": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::PinpointEmail::Identity",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::PinpointEmail::Identity.Tags",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::PinpointEmail::Identity.DkimSigningEnabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::PinpointEmail::Identity",
            "CloudResourceProperty": "DkimSigningEnabled",
            "CloudReference": "AWS::PinpointEmail::Identity.DkimSigningEnabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::PinpointEmail::Identity.FeedbackForwardingEnabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::PinpointEmail::Identity",
            "CloudResourceProperty": "FeedbackForwardingEnabled",
            "CloudReference": "AWS::PinpointEmail::Identity.FeedbackForwardingEnabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::PinpointEmail::Identity.MailFromAttributes": {
            "Required": "No",
            "Type": "MailFromAttributes",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::PinpointEmail::Identity",
            "CloudResourceProperty": "MailFromAttributes",
            "CloudReference": "AWS::PinpointEmail::Identity.MailFromAttributes",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "BehaviorOnMxFailure": {},
                "MailFromDomain": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::PinpointEmail::Identity.Tags": {
            "Required": "No",
            "Type": "List",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::PinpointEmail::Identity",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::PinpointEmail::Identity.Tags",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::QLDB::Ledger": {
            "DeletionProtection": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::QLDB::Ledger",
                "CloudResourceProperty": "DeletionProtection",
                "CloudReference": "AWS::QLDB::Ledger.DeletionProtection",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "32",
                "Pattern": "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::QLDB::Ledger",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::QLDB::Ledger.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PermissionsMode": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ALLOW_ALL"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::QLDB::Ledger",
                "CloudResourceProperty": "PermissionsMode",
                "CloudReference": "AWS::QLDB::Ledger.PermissionsMode",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::QLDB::Ledger",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::QLDB::Ledger.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::QLDB::Ledger.DeletionProtection": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::QLDB::Ledger",
            "CloudResourceProperty": "DeletionProtection",
            "CloudReference": "AWS::QLDB::Ledger.DeletionProtection",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::QLDB::Ledger.Name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "32",
            "Pattern": "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::QLDB::Ledger",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::QLDB::Ledger.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::QLDB::Ledger.PermissionsMode": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "ALLOW_ALL"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::QLDB::Ledger",
            "CloudResourceProperty": "PermissionsMode",
            "CloudReference": "AWS::QLDB::Ledger.PermissionsMode",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::QLDB::Ledger.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::QLDB::Ledger",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::QLDB::Ledger.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RAM::ResourceShare": {
            "AllowExternalPrincipals": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RAM::ResourceShare",
                "CloudResourceProperty": "AllowExternalPrincipals",
                "CloudReference": "AWS::RAM::ResourceShare.AllowExternalPrincipals",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RAM::ResourceShare",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::RAM::ResourceShare.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Principals": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "ResourceArns": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::RAM::ResourceShare.AllowExternalPrincipals": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RAM::ResourceShare",
            "CloudResourceProperty": "AllowExternalPrincipals",
            "CloudReference": "AWS::RAM::ResourceShare.AllowExternalPrincipals",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RAM::ResourceShare.Name": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RAM::ResourceShare",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::RAM::ResourceShare.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster": {
            "AssociatedRoles": {
                "Required": "No",
                "Type": "List of [DBClusterRole",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "AssociatedRoles",
                "CloudReference": "AWS::RDS::DBCluster.AssociatedRoles",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "FeatureName": {},
                    "RoleArn": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "Status": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "AvailabilityZones": {},
            "BacktrackWindow": {
                "Required": "No",
                "Type": "Long",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "BacktrackWindow",
                "CloudReference": "AWS::RDS::DBCluster.BacktrackWindow",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "BackupRetentionPeriod": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "BackupRetentionPeriod",
                "CloudReference": "AWS::RDS::DBCluster.BackupRetentionPeriod",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DatabaseName": {},
            "DBClusterIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "DBClusterIdentifier",
                "CloudReference": "AWS::RDS::DBCluster.DBClusterIdentifier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DBClusterParameterGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "DBClusterParameterGroupName",
                "CloudReference": "AWS::RDS::DBCluster.DBClusterParameterGroupName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DBSubnetGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "DBSubnetGroupName",
                "CloudReference": "AWS::RDS::DBCluster.DBSubnetGroupName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DeletionProtection": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "DeletionProtection",
                "CloudReference": "AWS::RDS::DBCluster.DeletionProtection",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EnableCloudwatchLogsExports": {},
            "EnableIAMDatabaseAuthentication": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Engine": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "Engine",
                "CloudReference": "AWS::RDS::DBCluster.Engine",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EngineMode": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "EngineMode",
                "CloudReference": "AWS::RDS::DBCluster.EngineMode",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EngineVersion": {},
            "aws rds describe-db-engine-versions --engine aurora --query \"DBEngineVersions[].EngineVersion\"": {},
            "aws rds describe-db-engine-versions --engine aurora-mysql --query \"DBEngineVersions[].EngineVersion\"": {},
            "aws rds describe-db-engine-versions --engine aurora-postgresql --query \"DBEngineVersions[].EngineVersion\"": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "aws rds describe-db-engine-versions --engine aurora-postgresql --query \"DBEngineVersions[].EngineVersion\"",
                "CloudReference": "AWS::RDS::DBCluster.aws rds describe-db-engine-versions --engine aurora-postgresql --query \"DBEngineVersions[].EngineVersion\"",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "KmsKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "KmsKeyId",
                "CloudReference": "AWS::RDS::DBCluster.KmsKeyId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MasterUsername": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "MasterUsername",
                "CloudReference": "AWS::RDS::DBCluster.MasterUsername",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MasterUserPassword": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "MasterUserPassword",
                "CloudReference": "AWS::RDS::DBCluster.MasterUserPassword",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Port": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "Port",
                "CloudReference": "AWS::RDS::DBCluster.Port",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PreferredBackupWindow": {},
            "PreferredMaintenanceWindow": {},
            "ReplicationSourceIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "ReplicationSourceIdentifier",
                "CloudReference": "AWS::RDS::DBCluster.ReplicationSourceIdentifier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RestoreType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "RestoreType",
                "CloudReference": "AWS::RDS::DBCluster.RestoreType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ScalingConfiguration": {
                "Required": "No",
                "Type": "ScalingConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "ScalingConfiguration",
                "CloudReference": "AWS::RDS::DBCluster.ScalingConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AutoPause": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "MaxCapacity": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "MinCapacity": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "SecondsUntilAutoPause": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "SnapshotIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "SnapshotIdentifier",
                "CloudReference": "AWS::RDS::DBCluster.SnapshotIdentifier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SourceDBClusterIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "SourceDBClusterIdentifier",
                "CloudReference": "AWS::RDS::DBCluster.SourceDBClusterIdentifier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SourceRegion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "SourceRegion",
                "CloudReference": "AWS::RDS::DBCluster.SourceRegion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "StorageEncrypted": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "StorageEncrypted",
                "CloudReference": "AWS::RDS::DBCluster.StorageEncrypted",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::RDS::DBCluster.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "UseLatestRestorableTime": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RDS::DBCluster",
                "CloudResourceProperty": "UseLatestRestorableTime",
                "CloudReference": "AWS::RDS::DBCluster.UseLatestRestorableTime",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "VpcSecurityGroupIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::RDS::DBCluster.AssociatedRoles": {
            "Required": "No",
            "Type": "List of [DBClusterRole",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "AssociatedRoles",
            "CloudReference": "AWS::RDS::DBCluster.AssociatedRoles",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "FeatureName": {},
                "RoleArn": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "Status": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::RDS::DBCluster.BacktrackWindow": {
            "Required": "No",
            "Type": "Long",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "BacktrackWindow",
            "CloudReference": "AWS::RDS::DBCluster.BacktrackWindow",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster.BackupRetentionPeriod": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "BackupRetentionPeriod",
            "CloudReference": "AWS::RDS::DBCluster.BackupRetentionPeriod",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster.DBClusterIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "DBClusterIdentifier",
            "CloudReference": "AWS::RDS::DBCluster.DBClusterIdentifier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster.DBClusterParameterGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "DBClusterParameterGroupName",
            "CloudReference": "AWS::RDS::DBCluster.DBClusterParameterGroupName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster.DBSubnetGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "DBSubnetGroupName",
            "CloudReference": "AWS::RDS::DBCluster.DBSubnetGroupName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster.DeletionProtection": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "DeletionProtection",
            "CloudReference": "AWS::RDS::DBCluster.DeletionProtection",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster.Engine": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "Engine",
            "CloudReference": "AWS::RDS::DBCluster.Engine",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster.EngineMode": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "EngineMode",
            "CloudReference": "AWS::RDS::DBCluster.EngineMode",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster.aws rds describe-db-engine-versions --engine aurora-postgresql --query \"DBEngineVersions[].EngineVersion\"": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "aws rds describe-db-engine-versions --engine aurora-postgresql --query \"DBEngineVersions[].EngineVersion\"",
            "CloudReference": "AWS::RDS::DBCluster.aws rds describe-db-engine-versions --engine aurora-postgresql --query \"DBEngineVersions[].EngineVersion\"",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster.KmsKeyId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "KmsKeyId",
            "CloudReference": "AWS::RDS::DBCluster.KmsKeyId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster.MasterUsername": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "MasterUsername",
            "CloudReference": "AWS::RDS::DBCluster.MasterUsername",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster.MasterUserPassword": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "MasterUserPassword",
            "CloudReference": "AWS::RDS::DBCluster.MasterUserPassword",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster.Port": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "Port",
            "CloudReference": "AWS::RDS::DBCluster.Port",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster.ReplicationSourceIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "ReplicationSourceIdentifier",
            "CloudReference": "AWS::RDS::DBCluster.ReplicationSourceIdentifier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster.RestoreType": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "RestoreType",
            "CloudReference": "AWS::RDS::DBCluster.RestoreType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster.ScalingConfiguration": {
            "Required": "No",
            "Type": "ScalingConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "ScalingConfiguration",
            "CloudReference": "AWS::RDS::DBCluster.ScalingConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AutoPause": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "MaxCapacity": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "MinCapacity": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "SecondsUntilAutoPause": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::RDS::DBCluster.SnapshotIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "SnapshotIdentifier",
            "CloudReference": "AWS::RDS::DBCluster.SnapshotIdentifier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster.SourceDBClusterIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "SourceDBClusterIdentifier",
            "CloudReference": "AWS::RDS::DBCluster.SourceDBClusterIdentifier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster.SourceRegion": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "SourceRegion",
            "CloudReference": "AWS::RDS::DBCluster.SourceRegion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster.StorageEncrypted": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "StorageEncrypted",
            "CloudReference": "AWS::RDS::DBCluster.StorageEncrypted",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::RDS::DBCluster.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBCluster.UseLatestRestorableTime": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RDS::DBCluster",
            "CloudResourceProperty": "UseLatestRestorableTime",
            "CloudReference": "AWS::RDS::DBCluster.UseLatestRestorableTime",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBClusterParameterGroup": {
            "Description": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RDS::DBClusterParameterGroup",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::RDS::DBClusterParameterGroup.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Family": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RDS::DBClusterParameterGroup",
                "CloudResourceProperty": "Family",
                "CloudReference": "AWS::RDS::DBClusterParameterGroup.Family",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Parameters": {
                "Required": "Yes",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RDS::DBClusterParameterGroup",
                "CloudResourceProperty": "Parameters",
                "CloudReference": "AWS::RDS::DBClusterParameterGroup.Parameters",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RDS::DBClusterParameterGroup",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::RDS::DBClusterParameterGroup.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::RDS::DBClusterParameterGroup.Description": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RDS::DBClusterParameterGroup",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::RDS::DBClusterParameterGroup.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBClusterParameterGroup.Family": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RDS::DBClusterParameterGroup",
            "CloudResourceProperty": "Family",
            "CloudReference": "AWS::RDS::DBClusterParameterGroup.Family",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBClusterParameterGroup.Parameters": {
            "Required": "Yes",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RDS::DBClusterParameterGroup",
            "CloudResourceProperty": "Parameters",
            "CloudReference": "AWS::RDS::DBClusterParameterGroup.Parameters",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::DBClusterParameterGroup.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RDS::DBClusterParameterGroup",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::RDS::DBClusterParameterGroup.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::EventSubscription": {
            "Enabled": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "EventCategories": {},
            "SnsTopicArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RDS::EventSubscription",
                "CloudResourceProperty": "SnsTopicArn",
                "CloudReference": "AWS::RDS::EventSubscription.SnsTopicArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SourceIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "SourceType": {
                "Required": "No",
                "Type": "String\n\n#"
            }
        },
        "AWS::RDS::EventSubscription.SnsTopicArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RDS::EventSubscription",
            "CloudResourceProperty": "SnsTopicArn",
            "CloudReference": "AWS::RDS::EventSubscription.SnsTopicArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::OptionGroup": {
            "EngineName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RDS::OptionGroup",
                "CloudResourceProperty": "EngineName",
                "CloudReference": "AWS::RDS::OptionGroup.EngineName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MajorEngineVersion": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RDS::OptionGroup",
                "CloudResourceProperty": "MajorEngineVersion",
                "CloudReference": "AWS::RDS::OptionGroup.MajorEngineVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "OptionConfigurations": {
                "Required": "Yes",
                "Type": "List of [OptionConfiguration",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RDS::OptionGroup",
                "CloudResourceProperty": "OptionConfigurations",
                "CloudReference": "AWS::RDS::OptionGroup.OptionConfigurations",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "OptionGroupDescription": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RDS::OptionGroup",
                "CloudResourceProperty": "OptionGroupDescription",
                "CloudReference": "AWS::RDS::OptionGroup.OptionGroupDescription",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RDS::OptionGroup",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::RDS::OptionGroup.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::RDS::OptionGroup.EngineName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RDS::OptionGroup",
            "CloudResourceProperty": "EngineName",
            "CloudReference": "AWS::RDS::OptionGroup.EngineName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::OptionGroup.MajorEngineVersion": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RDS::OptionGroup",
            "CloudResourceProperty": "MajorEngineVersion",
            "CloudReference": "AWS::RDS::OptionGroup.MajorEngineVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::OptionGroup.OptionConfigurations": {
            "Required": "Yes",
            "Type": "List of [OptionConfiguration",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RDS::OptionGroup",
            "CloudResourceProperty": "OptionConfigurations",
            "CloudReference": "AWS::RDS::OptionGroup.OptionConfigurations",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::OptionGroup.OptionGroupDescription": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RDS::OptionGroup",
            "CloudResourceProperty": "OptionGroupDescription",
            "CloudReference": "AWS::RDS::OptionGroup.OptionGroupDescription",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RDS::OptionGroup.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RDS::OptionGroup",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::RDS::OptionGroup.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Redshift::Cluster": {
            "AllowVersionUpgrade": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Redshift::Cluster",
                "CloudResourceProperty": "AllowVersionUpgrade",
                "CloudReference": "AWS::Redshift::Cluster.AllowVersionUpgrade",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AutomatedSnapshotRetentionPeriod": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Redshift::Cluster",
                "CloudResourceProperty": "AutomatedSnapshotRetentionPeriod",
                "CloudReference": "AWS::Redshift::Cluster.AutomatedSnapshotRetentionPeriod",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AvailabilityZone": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Redshift::Cluster",
                "CloudResourceProperty": "AvailabilityZone",
                "CloudReference": "AWS::Redshift::Cluster.AvailabilityZone",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ClusterIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Redshift::Cluster",
                "CloudResourceProperty": "ClusterIdentifier",
                "CloudReference": "AWS::Redshift::Cluster.ClusterIdentifier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ClusterParameterGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Redshift::Cluster",
                "CloudResourceProperty": "ClusterParameterGroupName",
                "CloudReference": "AWS::Redshift::Cluster.ClusterParameterGroupName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ClusterSecurityGroups": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "ClusterSubnetGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "ClusterType": {},
            "ClusterVersion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DBName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "ElasticIp": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Encrypted": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "HsmClientCertificateIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "HsmConfigurationIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "IamRoles": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "KmsKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "LoggingProperties": {
                "Required": "No",
                "Type": "LoggingProperties",
                "UpdateRequires": "No interruption"
            },
            "MasterUserPassword": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MasterUsername": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "NodeType": {},
            "NumberOfNodes": {},
            "OwnerAccount": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Port": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "PreferredMaintenanceWindow": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PubliclyAccessible": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "SnapshotClusterIdentifier": {},
            "SnapshotIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            },
            "VpcSecurityGroupIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::Redshift::Cluster.AllowVersionUpgrade": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Redshift::Cluster",
            "CloudResourceProperty": "AllowVersionUpgrade",
            "CloudReference": "AWS::Redshift::Cluster.AllowVersionUpgrade",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Redshift::Cluster.AutomatedSnapshotRetentionPeriod": {
            "Required": "No",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Redshift::Cluster",
            "CloudResourceProperty": "AutomatedSnapshotRetentionPeriod",
            "CloudReference": "AWS::Redshift::Cluster.AutomatedSnapshotRetentionPeriod",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Redshift::Cluster.AvailabilityZone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Redshift::Cluster",
            "CloudResourceProperty": "AvailabilityZone",
            "CloudReference": "AWS::Redshift::Cluster.AvailabilityZone",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Redshift::Cluster.ClusterIdentifier": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Redshift::Cluster",
            "CloudResourceProperty": "ClusterIdentifier",
            "CloudReference": "AWS::Redshift::Cluster.ClusterIdentifier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Redshift::Cluster.ClusterParameterGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Redshift::Cluster",
            "CloudResourceProperty": "ClusterParameterGroupName",
            "CloudReference": "AWS::Redshift::Cluster.ClusterParameterGroupName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Redshift::ClusterParameterGroup": {
            "Description": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Redshift::ClusterParameterGroup",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::Redshift::ClusterParameterGroup.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ParameterGroupFamily": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Redshift::ClusterParameterGroup",
                "CloudResourceProperty": "ParameterGroupFamily",
                "CloudReference": "AWS::Redshift::ClusterParameterGroup.ParameterGroupFamily",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Parameters": {
                "Required": "No",
                "Type": "List of [Parameter",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Redshift::ClusterParameterGroup",
                "CloudResourceProperty": "Parameters",
                "CloudReference": "AWS::Redshift::ClusterParameterGroup.Parameters",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Redshift::ClusterParameterGroup",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::Redshift::ClusterParameterGroup.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Redshift::ClusterParameterGroup.Description": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Redshift::ClusterParameterGroup",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::Redshift::ClusterParameterGroup.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Redshift::ClusterParameterGroup.ParameterGroupFamily": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Redshift::ClusterParameterGroup",
            "CloudResourceProperty": "ParameterGroupFamily",
            "CloudReference": "AWS::Redshift::ClusterParameterGroup.ParameterGroupFamily",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Redshift::ClusterParameterGroup.Parameters": {
            "Required": "No",
            "Type": "List of [Parameter",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Redshift::ClusterParameterGroup",
            "CloudResourceProperty": "Parameters",
            "CloudReference": "AWS::Redshift::ClusterParameterGroup.Parameters",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Redshift::ClusterParameterGroup.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Redshift::ClusterParameterGroup",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::Redshift::ClusterParameterGroup.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Redshift::ClusterSecurityGroup": {
            "Description": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Redshift::ClusterSecurityGroup",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::Redshift::ClusterSecurityGroup.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Redshift::ClusterSecurityGroup",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::Redshift::ClusterSecurityGroup.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Redshift::ClusterSecurityGroup.Description": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Redshift::ClusterSecurityGroup",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::Redshift::ClusterSecurityGroup.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Redshift::ClusterSecurityGroup.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Redshift::ClusterSecurityGroup",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::Redshift::ClusterSecurityGroup.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Redshift::ClusterSecurityGroupIngress": {
            "CIDRIP": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Redshift::ClusterSecurityGroupIngress",
                "CloudResourceProperty": "CIDRIP",
                "CloudReference": "AWS::Redshift::ClusterSecurityGroupIngress.CIDRIP",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ClusterSecurityGroupName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Redshift::ClusterSecurityGroupIngress",
                "CloudResourceProperty": "ClusterSecurityGroupName",
                "CloudReference": "AWS::Redshift::ClusterSecurityGroupIngress.ClusterSecurityGroupName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EC2SecurityGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Redshift::ClusterSecurityGroupIngress",
                "CloudResourceProperty": "EC2SecurityGroupName",
                "CloudReference": "AWS::Redshift::ClusterSecurityGroupIngress.EC2SecurityGroupName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EC2SecurityGroupOwnerId": {}
        },
        "AWS::Redshift::ClusterSecurityGroupIngress.CIDRIP": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Redshift::ClusterSecurityGroupIngress",
            "CloudResourceProperty": "CIDRIP",
            "CloudReference": "AWS::Redshift::ClusterSecurityGroupIngress.CIDRIP",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Redshift::ClusterSecurityGroupIngress.ClusterSecurityGroupName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Redshift::ClusterSecurityGroupIngress",
            "CloudResourceProperty": "ClusterSecurityGroupName",
            "CloudReference": "AWS::Redshift::ClusterSecurityGroupIngress.ClusterSecurityGroupName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Redshift::ClusterSecurityGroupIngress.EC2SecurityGroupName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Redshift::ClusterSecurityGroupIngress",
            "CloudResourceProperty": "EC2SecurityGroupName",
            "CloudReference": "AWS::Redshift::ClusterSecurityGroupIngress.EC2SecurityGroupName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Redshift::ClusterSubnetGroup": {
            "Description": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Redshift::ClusterSubnetGroup",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::Redshift::ClusterSubnetGroup.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SubnetIds": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::Redshift::ClusterSubnetGroup.Description": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Redshift::ClusterSubnetGroup",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::Redshift::ClusterSubnetGroup.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RoboMaker::Fleet": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RoboMaker::Fleet",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::RoboMaker::Fleet.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RoboMaker::Fleet",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::RoboMaker::Fleet.Tags",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::RoboMaker::Fleet.Name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "255",
            "Pattern": "[a-zA-Z0-9_\\-]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RoboMaker::Fleet",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::RoboMaker::Fleet.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RoboMaker::Fleet.Tags": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RoboMaker::Fleet",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::RoboMaker::Fleet.Tags",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RoboMaker::Robot": {
            "Architecture": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ARM64",
                    "ARMHF",
                    "X86_64"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RoboMaker::Robot",
                "CloudResourceProperty": "Architecture",
                "CloudReference": "AWS::RoboMaker::Robot.Architecture",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Fleet": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RoboMaker::Robot",
                "CloudResourceProperty": "Fleet",
                "CloudReference": "AWS::RoboMaker::Robot.Fleet",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "GreengrassGroupId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1224",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RoboMaker::Robot",
                "CloudResourceProperty": "GreengrassGroupId",
                "CloudReference": "AWS::RoboMaker::Robot.GreengrassGroupId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RoboMaker::Robot",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::RoboMaker::Robot.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RoboMaker::Robot",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::RoboMaker::Robot.Tags",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::RoboMaker::Robot.Architecture": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "ARM64",
                "ARMHF",
                "X86_64"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RoboMaker::Robot",
            "CloudResourceProperty": "Architecture",
            "CloudReference": "AWS::RoboMaker::Robot.Architecture",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RoboMaker::Robot.Fleet": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RoboMaker::Robot",
            "CloudResourceProperty": "Fleet",
            "CloudReference": "AWS::RoboMaker::Robot.Fleet",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RoboMaker::Robot.GreengrassGroupId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "1224",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RoboMaker::Robot",
            "CloudResourceProperty": "GreengrassGroupId",
            "CloudReference": "AWS::RoboMaker::Robot.GreengrassGroupId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RoboMaker::Robot.Name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "255",
            "Pattern": "[a-zA-Z0-9_\\-]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RoboMaker::Robot",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::RoboMaker::Robot.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RoboMaker::Robot.Tags": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RoboMaker::Robot",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::RoboMaker::Robot.Tags",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RoboMaker::RobotApplication": {
            "CurrentRevisionId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RoboMaker::RobotApplication",
                "CloudResourceProperty": "CurrentRevisionId",
                "CloudReference": "AWS::RoboMaker::RobotApplication.CurrentRevisionId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RoboMaker::RobotApplication",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::RoboMaker::RobotApplication.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RobotSoftwareSuite": {
                "Required": "Yes",
                "Type": "RobotSoftwareSuite",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RoboMaker::RobotApplication",
                "CloudResourceProperty": "RobotSoftwareSuite",
                "CloudReference": "AWS::RoboMaker::RobotApplication.RobotSoftwareSuite",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Name": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "ROS"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "Version": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "Kinetic"
                        ],
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Sources": {
                "Required": "Yes",
                "Type": "List of [SourceConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RoboMaker::RobotApplication",
                "CloudResourceProperty": "Sources",
                "CloudReference": "AWS::RoboMaker::RobotApplication.Sources",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Architecture": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "ARM64",
                            "ARMHF",
                            "X86_64"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "S3Bucket": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "3",
                        "Maximum": "63",
                        "Pattern": "[a-z0-9][a-z0-9\\-]*[a-z0-9]",
                        "UpdateRequires": "No interruption"
                    },
                    "S3Key": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "1024",
                        "Pattern": ".*",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Tags": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RoboMaker::RobotApplication",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::RoboMaker::RobotApplication.Tags",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::RoboMaker::RobotApplication.CurrentRevisionId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RoboMaker::RobotApplication",
            "CloudResourceProperty": "CurrentRevisionId",
            "CloudReference": "AWS::RoboMaker::RobotApplication.CurrentRevisionId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RoboMaker::RobotApplication.Name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "255",
            "Pattern": "[a-zA-Z0-9_\\-]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RoboMaker::RobotApplication",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::RoboMaker::RobotApplication.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RoboMaker::RobotApplication.RobotSoftwareSuite": {
            "Required": "Yes",
            "Type": "RobotSoftwareSuite",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RoboMaker::RobotApplication",
            "CloudResourceProperty": "RobotSoftwareSuite",
            "CloudReference": "AWS::RoboMaker::RobotApplication.RobotSoftwareSuite",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Name": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "ROS"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "Version": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "Kinetic"
                    ],
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::RoboMaker::RobotApplication.Sources": {
            "Required": "Yes",
            "Type": "List of [SourceConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RoboMaker::RobotApplication",
            "CloudResourceProperty": "Sources",
            "CloudReference": "AWS::RoboMaker::RobotApplication.Sources",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Architecture": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "ARM64",
                        "ARMHF",
                        "X86_64"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "S3Bucket": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "3",
                    "Maximum": "63",
                    "Pattern": "[a-z0-9][a-z0-9\\-]*[a-z0-9]",
                    "UpdateRequires": "No interruption"
                },
                "S3Key": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "1024",
                    "Pattern": ".*",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::RoboMaker::RobotApplication.Tags": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RoboMaker::RobotApplication",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::RoboMaker::RobotApplication.Tags",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RoboMaker::RobotApplicationVersion": {
            "Application": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1224",
                "Pattern": "arn:.*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RoboMaker::RobotApplicationVersion",
                "CloudResourceProperty": "Application",
                "CloudReference": "AWS::RoboMaker::RobotApplicationVersion.Application",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CurrentRevisionId": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "40",
                "Pattern": "[a-zA-Z0-9_.\\-]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RoboMaker::RobotApplicationVersion",
                "CloudResourceProperty": "CurrentRevisionId",
                "CloudReference": "AWS::RoboMaker::RobotApplicationVersion.CurrentRevisionId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::RoboMaker::RobotApplicationVersion.Application": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "1224",
            "Pattern": "arn:.*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RoboMaker::RobotApplicationVersion",
            "CloudResourceProperty": "Application",
            "CloudReference": "AWS::RoboMaker::RobotApplicationVersion.Application",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RoboMaker::RobotApplicationVersion.CurrentRevisionId": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "40",
            "Pattern": "[a-zA-Z0-9_.\\-]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RoboMaker::RobotApplicationVersion",
            "CloudResourceProperty": "CurrentRevisionId",
            "CloudReference": "AWS::RoboMaker::RobotApplicationVersion.CurrentRevisionId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RoboMaker::SimulationApplication": {
            "CurrentRevisionId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RoboMaker::SimulationApplication",
                "CloudResourceProperty": "CurrentRevisionId",
                "CloudReference": "AWS::RoboMaker::SimulationApplication.CurrentRevisionId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RoboMaker::SimulationApplication",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::RoboMaker::SimulationApplication.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RenderingEngine": {
                "Required": "Yes",
                "Type": "RenderingEngine",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RoboMaker::SimulationApplication",
                "CloudResourceProperty": "RenderingEngine",
                "CloudReference": "AWS::RoboMaker::SimulationApplication.RenderingEngine",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Name": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "OGRE"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "Version": {
                        "Required": "Yes",
                        "Type": "String",
                        "Pattern": "1.x",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "RobotSoftwareSuite": {
                "Required": "Yes",
                "Type": "RobotSoftwareSuite",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RoboMaker::SimulationApplication",
                "CloudResourceProperty": "RobotSoftwareSuite",
                "CloudReference": "AWS::RoboMaker::SimulationApplication.RobotSoftwareSuite",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Name": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "ROS"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "Version": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "Kinetic"
                        ],
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "SimulationSoftwareSuite": {
                "Required": "Yes",
                "Type": "SimulationSoftwareSuite",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RoboMaker::SimulationApplication",
                "CloudResourceProperty": "SimulationSoftwareSuite",
                "CloudReference": "AWS::RoboMaker::SimulationApplication.SimulationSoftwareSuite",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Name": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "Gazebo"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "Version": {
                        "Required": "Yes",
                        "Type": "String",
                        "Pattern": "7|9",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Sources": {
                "Required": "Yes",
                "Type": "List of [SourceConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RoboMaker::SimulationApplication",
                "CloudResourceProperty": "Sources",
                "CloudReference": "AWS::RoboMaker::SimulationApplication.Sources",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Architecture": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "ARM64",
                            "ARMHF",
                            "X86_64"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "S3Bucket": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "3",
                        "Maximum": "63",
                        "Pattern": "[a-z0-9][a-z0-9\\-]*[a-z0-9]",
                        "UpdateRequires": "No interruption"
                    },
                    "S3Key": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "1024",
                        "Pattern": ".*",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Tags": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::RoboMaker::SimulationApplication",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::RoboMaker::SimulationApplication.Tags",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::RoboMaker::SimulationApplication.CurrentRevisionId": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RoboMaker::SimulationApplication",
            "CloudResourceProperty": "CurrentRevisionId",
            "CloudReference": "AWS::RoboMaker::SimulationApplication.CurrentRevisionId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RoboMaker::SimulationApplication.Name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "255",
            "Pattern": "[a-zA-Z0-9_\\-]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RoboMaker::SimulationApplication",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::RoboMaker::SimulationApplication.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RoboMaker::SimulationApplication.RenderingEngine": {
            "Required": "Yes",
            "Type": "RenderingEngine",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RoboMaker::SimulationApplication",
            "CloudResourceProperty": "RenderingEngine",
            "CloudReference": "AWS::RoboMaker::SimulationApplication.RenderingEngine",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Name": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "OGRE"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "Version": {
                    "Required": "Yes",
                    "Type": "String",
                    "Pattern": "1.x",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::RoboMaker::SimulationApplication.RobotSoftwareSuite": {
            "Required": "Yes",
            "Type": "RobotSoftwareSuite",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RoboMaker::SimulationApplication",
            "CloudResourceProperty": "RobotSoftwareSuite",
            "CloudReference": "AWS::RoboMaker::SimulationApplication.RobotSoftwareSuite",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Name": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "ROS"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "Version": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "Kinetic"
                    ],
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::RoboMaker::SimulationApplication.SimulationSoftwareSuite": {
            "Required": "Yes",
            "Type": "SimulationSoftwareSuite",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RoboMaker::SimulationApplication",
            "CloudResourceProperty": "SimulationSoftwareSuite",
            "CloudReference": "AWS::RoboMaker::SimulationApplication.SimulationSoftwareSuite",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Name": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "Gazebo"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "Version": {
                    "Required": "Yes",
                    "Type": "String",
                    "Pattern": "7|9",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::RoboMaker::SimulationApplication.Sources": {
            "Required": "Yes",
            "Type": "List of [SourceConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RoboMaker::SimulationApplication",
            "CloudResourceProperty": "Sources",
            "CloudReference": "AWS::RoboMaker::SimulationApplication.Sources",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Architecture": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "ARM64",
                        "ARMHF",
                        "X86_64"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "S3Bucket": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "3",
                    "Maximum": "63",
                    "Pattern": "[a-z0-9][a-z0-9\\-]*[a-z0-9]",
                    "UpdateRequires": "No interruption"
                },
                "S3Key": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "1024",
                    "Pattern": ".*",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::RoboMaker::SimulationApplication.Tags": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::RoboMaker::SimulationApplication",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::RoboMaker::SimulationApplication.Tags",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RoboMaker::SimulationApplicationVersion": {
            "Application": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1224",
                "Pattern": "arn:.*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RoboMaker::SimulationApplicationVersion",
                "CloudResourceProperty": "Application",
                "CloudReference": "AWS::RoboMaker::SimulationApplicationVersion.Application",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "CurrentRevisionId": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "40",
                "Pattern": "[a-zA-Z0-9_.\\-]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::RoboMaker::SimulationApplicationVersion",
                "CloudResourceProperty": "CurrentRevisionId",
                "CloudReference": "AWS::RoboMaker::SimulationApplicationVersion.CurrentRevisionId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::RoboMaker::SimulationApplicationVersion.Application": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "1224",
            "Pattern": "arn:.*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RoboMaker::SimulationApplicationVersion",
            "CloudResourceProperty": "Application",
            "CloudReference": "AWS::RoboMaker::SimulationApplicationVersion.Application",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::RoboMaker::SimulationApplicationVersion.CurrentRevisionId": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "40",
            "Pattern": "[a-zA-Z0-9_.\\-]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::RoboMaker::SimulationApplicationVersion",
            "CloudResourceProperty": "CurrentRevisionId",
            "CloudReference": "AWS::RoboMaker::SimulationApplicationVersion.CurrentRevisionId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Route53::HealthCheck": {
            "HealthCheckConfig": {
                "Required": "Yes",
                "Type": "HealthCheckConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Route53::HealthCheck",
                "CloudResourceProperty": "HealthCheckConfig",
                "CloudReference": "AWS::Route53::HealthCheck.HealthCheckConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AlarmIdentifier": {
                        "Required": "No",
                        "Type": "AlarmIdentifier",
                        "UpdateRequires": "No interruption"
                    },
                    "ChildHealthChecks": {
                        "Required": "No",
                        "Type": "List of String",
                        "Maximum": "256",
                        "UpdateRequires": "No interruption"
                    },
                    "EnableSNI": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "FailureThreshold": {},
                    "FullyQualifiedDomainName": {
                        "FullyQualifiedDomainName`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-fullyqualifieddomainname\"></a>\nAmazon Route 53 behavior depends on whether you specify a value for `IPAddress`\\.  \n **If you specify a value for** `IPAddress`:  \nAmazon Route 53 sends health check requests to the specified IPv4 or IPv6 address and passes the value of `FullyQualifiedDomainName` in the `Host` header for all health checks except TCP health checks\\. This is typically the fully qualified DNS name of the endpoint on which you want Route 53 to perform health checks\\.  \nWhen Route 53 checks the health of an endpoint, here is how it constructs the `Host` header:  \n+ If you specify a value of `80` for `Port` and `HTTP` or `HTTP_STR_MATCH` for `Type`, Route 53 passes the value of `FullyQualifiedDomainName` to the endpoint in the Host header\\. \n+ If you specify a value of `443` for `Port` and `HTTPS` or `HTTPS_STR_MATCH` for `Type`, Route 53 passes the value of `FullyQualifiedDomainName` to the endpoint in the `Host` header\\.\n+ If you specify another value for `Port` and any value except `TCP` for `Type`, Route 53 passes `FullyQualifiedDomainName:Port` to the endpoint in the `Host` header\\.\nIf you don't specify a value for `FullyQualifiedDomainName`, Route 53 substitutes the value of `IPAddress` in the `Host` header in each of the preceding cases\\.  \n **If you don't specify a value for `IPAddress` *": "Route 53 sends a DNS request to the domain that you specify for `FullyQualifiedDomainName` at the interval that you specify for `RequestInterval`\\. Using an IPv4 address that DNS returns, Route 53 then checks the health of the endpoint\\.  \nIf you don't specify a value for `IPAddress`, Route 53 uses only IPv4 to send health checks to the endpoint\\. If there's no resource record set with a type of A for the name that you specify for `FullyQualifiedDomainName`, the health check fails with a \"DNS resolution failed\" error\\.\nIf you want to check the health of weighted, latency, or failover resource record sets and you choose to specify the endpoint only by `FullyQualifiedDomainName`, we recommend that you create a separate health check for each endpoint\\. For example, create a health check for each HTTP server that is serving content for www\\.example\\.com\\. For the value of `FullyQualifiedDomainName`, specify the domain name of the server \\(such as us\\-east\\-2\\-www\\.example\\.com\\), not the name of the resource record sets \\(www\\.example\\.com\\)\\.  \nIn this configuration, if you create a health check for which the value of `FullyQualifiedDomainName` matches the name of the resource record sets and you then associate the health check with those resource record sets, health check results will be unpredictable\\.\nIn addition, if the value that you specify for `Type` is `HTTP`, `HTTPS`, `HTTP_STR_MATCH`, or `HTTPS_STR_MATCH`, Route 53 passes the value of `FullyQualifiedDomainName` in the `Host` header, as it does when you specify a value for `IPAddress`\\. If the value of `Type` is `TCP`, Route 53 doesn't pass a `Host` header\\.",
                        "Required": "No",
                        "Type": "String",
                        "Maximum": "255",
                        "UpdateRequires": "No interruption"
                    },
                    "HealthThreshold": {
                        "Required": "No",
                        "Type": "Integer",
                        "Minimum": "0",
                        "Maximum": "256",
                        "UpdateRequires": "No interruption"
                    },
                    "IPAddress": {
                        "IPAddress`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-ipaddress\"></a>\nThe IPv4 or IPv6 IP address of the endpoint that you want Amazon Route 53 to perform health checks on\\. If you don't specify a value for `IPAddress`, Route 53 sends a DNS request to resolve the domain name that you specify in `FullyQualifiedDomainName` at the interval that you specify in `RequestInterval`\\. Using an IP address returned by DNS, Route 53 then checks the health of the endpoint\\.  \nUse one of the following formats for the value of `IPAddress`:   \n+  **IPv4 address*": "four values between 0 and 255, separated by periods \\(\\.\\), for example, `192.0.2.44`\\.\n+  **IPv6 address*",
                        "Required": "No",
                        "Type": "String",
                        "Maximum": "45",
                        "Pattern": "(^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$|^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)",
                        "UpdateRequires": "No interruption"
                    },
                    "InsufficientDataHealthStatus": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "Healthy",
                            "LastKnownStatus",
                            "Unhealthy"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "Inverted": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "MeasureLatency": {
                        "AllowedValues": [
                            "True",
                            "False"
                        ]
                    },
                    "Port": {
                        "Required": "No",
                        "Type": "Integer",
                        "Minimum": "1",
                        "Maximum": "65535",
                        "UpdateRequires": "No interruption"
                    },
                    "Regions": {},
                    "RequestInterval": {
                        "Required": "No",
                        "Type": "Integer",
                        "Minimum": "10",
                        "Maximum": "30",
                        "UpdateRequires": "Replacement"
                    },
                    "ResourcePath": {
                        "Required": "No",
                        "Type": "String",
                        "Maximum": "255",
                        "UpdateRequires": "No interruption"
                    },
                    "SearchString": {
                        "Required": "No",
                        "Type": "String",
                        "Maximum": "255",
                        "UpdateRequires": "No interruption"
                    },
                    "Type": {
                        "Type`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-type\"></a>\nThe type of health check that you want to create, which indicates how Amazon Route 53 determines whether an endpoint is healthy\\.  \nYou can't change the value of `Type` after you create a health check\\.\nYou can create the following types of health checks:  \n+  **HTTP*": "Route 53 tries to establish a TCP connection\\. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400\\.\n+  **HTTPS*",
                        "*Important**  \nIf you specify `HTTPS` for the value of `Type`, the endpoint must support TLS v1\\.0 or later\\.\n+  **HTTP\\_STR\\_MATCH*": "Route 53 tries to establish a TCP connection\\. If successful, Route 53 submits an HTTP request and searches the first 5,120 bytes of the response body for the string that you specify in `SearchString`\\.\n+  **HTTPS\\_STR\\_MATCH*",
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "CALCULATED",
                            "CLOUDWATCH_METRIC",
                            "HTTP",
                            "HTTPS",
                            "HTTPS_STR_MATCH",
                            "HTTP_STR_MATCH",
                            "TCP"
                        ],
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "HealthCheckTags": {
                "Required": "No",
                "Type": "List of [HealthCheckTag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Route53::HealthCheck",
                "CloudResourceProperty": "HealthCheckTags",
                "CloudReference": "AWS::Route53::HealthCheck.HealthCheckTags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Key": {
                        "Key`  <a name=\"cfn-route53-healthchecktags-key\"></a>\nThe value of `Key` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Key` is the name that you want to give the new tag\\.\n+  **Edit a tag*",
                        "Required": "Yes",
                        "Type": "String",
                        "Maximum": "128",
                        "UpdateRequires": "No interruption"
                    },
                    "Value": {
                        "Value`  <a name=\"cfn-route53-healthchecktags-value\"></a>\nThe value of `Value` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Value` is the value that you want to give the new tag\\.\n+  **Edit a tag*",
                        "Required": "Yes",
                        "Type": "String",
                        "Maximum": "256",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::Route53::HealthCheck.HealthCheckConfig": {
            "Required": "Yes",
            "Type": "HealthCheckConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Route53::HealthCheck",
            "CloudResourceProperty": "HealthCheckConfig",
            "CloudReference": "AWS::Route53::HealthCheck.HealthCheckConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AlarmIdentifier": {
                    "Required": "No",
                    "Type": "AlarmIdentifier",
                    "UpdateRequires": "No interruption"
                },
                "ChildHealthChecks": {
                    "Required": "No",
                    "Type": "List of String",
                    "Maximum": "256",
                    "UpdateRequires": "No interruption"
                },
                "EnableSNI": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "FailureThreshold": {},
                "FullyQualifiedDomainName": {
                    "FullyQualifiedDomainName`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-fullyqualifieddomainname\"></a>\nAmazon Route 53 behavior depends on whether you specify a value for `IPAddress`\\.  \n **If you specify a value for** `IPAddress`:  \nAmazon Route 53 sends health check requests to the specified IPv4 or IPv6 address and passes the value of `FullyQualifiedDomainName` in the `Host` header for all health checks except TCP health checks\\. This is typically the fully qualified DNS name of the endpoint on which you want Route 53 to perform health checks\\.  \nWhen Route 53 checks the health of an endpoint, here is how it constructs the `Host` header:  \n+ If you specify a value of `80` for `Port` and `HTTP` or `HTTP_STR_MATCH` for `Type`, Route 53 passes the value of `FullyQualifiedDomainName` to the endpoint in the Host header\\. \n+ If you specify a value of `443` for `Port` and `HTTPS` or `HTTPS_STR_MATCH` for `Type`, Route 53 passes the value of `FullyQualifiedDomainName` to the endpoint in the `Host` header\\.\n+ If you specify another value for `Port` and any value except `TCP` for `Type`, Route 53 passes `FullyQualifiedDomainName:Port` to the endpoint in the `Host` header\\.\nIf you don't specify a value for `FullyQualifiedDomainName`, Route 53 substitutes the value of `IPAddress` in the `Host` header in each of the preceding cases\\.  \n **If you don't specify a value for `IPAddress` *": "Route 53 sends a DNS request to the domain that you specify for `FullyQualifiedDomainName` at the interval that you specify for `RequestInterval`\\. Using an IPv4 address that DNS returns, Route 53 then checks the health of the endpoint\\.  \nIf you don't specify a value for `IPAddress`, Route 53 uses only IPv4 to send health checks to the endpoint\\. If there's no resource record set with a type of A for the name that you specify for `FullyQualifiedDomainName`, the health check fails with a \"DNS resolution failed\" error\\.\nIf you want to check the health of weighted, latency, or failover resource record sets and you choose to specify the endpoint only by `FullyQualifiedDomainName`, we recommend that you create a separate health check for each endpoint\\. For example, create a health check for each HTTP server that is serving content for www\\.example\\.com\\. For the value of `FullyQualifiedDomainName`, specify the domain name of the server \\(such as us\\-east\\-2\\-www\\.example\\.com\\), not the name of the resource record sets \\(www\\.example\\.com\\)\\.  \nIn this configuration, if you create a health check for which the value of `FullyQualifiedDomainName` matches the name of the resource record sets and you then associate the health check with those resource record sets, health check results will be unpredictable\\.\nIn addition, if the value that you specify for `Type` is `HTTP`, `HTTPS`, `HTTP_STR_MATCH`, or `HTTPS_STR_MATCH`, Route 53 passes the value of `FullyQualifiedDomainName` in the `Host` header, as it does when you specify a value for `IPAddress`\\. If the value of `Type` is `TCP`, Route 53 doesn't pass a `Host` header\\.",
                    "Required": "No",
                    "Type": "String",
                    "Maximum": "255",
                    "UpdateRequires": "No interruption"
                },
                "HealthThreshold": {
                    "Required": "No",
                    "Type": "Integer",
                    "Minimum": "0",
                    "Maximum": "256",
                    "UpdateRequires": "No interruption"
                },
                "IPAddress": {
                    "IPAddress`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-ipaddress\"></a>\nThe IPv4 or IPv6 IP address of the endpoint that you want Amazon Route 53 to perform health checks on\\. If you don't specify a value for `IPAddress`, Route 53 sends a DNS request to resolve the domain name that you specify in `FullyQualifiedDomainName` at the interval that you specify in `RequestInterval`\\. Using an IP address returned by DNS, Route 53 then checks the health of the endpoint\\.  \nUse one of the following formats for the value of `IPAddress`:   \n+  **IPv4 address*": "four values between 0 and 255, separated by periods \\(\\.\\), for example, `192.0.2.44`\\.\n+  **IPv6 address*",
                    "Required": "No",
                    "Type": "String",
                    "Maximum": "45",
                    "Pattern": "(^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$|^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)",
                    "UpdateRequires": "No interruption"
                },
                "InsufficientDataHealthStatus": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "Healthy",
                        "LastKnownStatus",
                        "Unhealthy"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "Inverted": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "MeasureLatency": {
                    "AllowedValues": [
                        "True",
                        "False"
                    ]
                },
                "Port": {
                    "Required": "No",
                    "Type": "Integer",
                    "Minimum": "1",
                    "Maximum": "65535",
                    "UpdateRequires": "No interruption"
                },
                "Regions": {},
                "RequestInterval": {
                    "Required": "No",
                    "Type": "Integer",
                    "Minimum": "10",
                    "Maximum": "30",
                    "UpdateRequires": "Replacement"
                },
                "ResourcePath": {
                    "Required": "No",
                    "Type": "String",
                    "Maximum": "255",
                    "UpdateRequires": "No interruption"
                },
                "SearchString": {
                    "Required": "No",
                    "Type": "String",
                    "Maximum": "255",
                    "UpdateRequires": "No interruption"
                },
                "Type": {
                    "Type`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-type\"></a>\nThe type of health check that you want to create, which indicates how Amazon Route 53 determines whether an endpoint is healthy\\.  \nYou can't change the value of `Type` after you create a health check\\.\nYou can create the following types of health checks:  \n+  **HTTP*": "Route 53 tries to establish a TCP connection\\. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400\\.\n+  **HTTPS*",
                    "*Important**  \nIf you specify `HTTPS` for the value of `Type`, the endpoint must support TLS v1\\.0 or later\\.\n+  **HTTP\\_STR\\_MATCH*": "Route 53 tries to establish a TCP connection\\. If successful, Route 53 submits an HTTP request and searches the first 5,120 bytes of the response body for the string that you specify in `SearchString`\\.\n+  **HTTPS\\_STR\\_MATCH*",
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "CALCULATED",
                        "CLOUDWATCH_METRIC",
                        "HTTP",
                        "HTTPS",
                        "HTTPS_STR_MATCH",
                        "HTTP_STR_MATCH",
                        "TCP"
                    ],
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::Route53::HealthCheck.HealthCheckTags": {
            "Required": "No",
            "Type": "List of [HealthCheckTag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Route53::HealthCheck",
            "CloudResourceProperty": "HealthCheckTags",
            "CloudReference": "AWS::Route53::HealthCheck.HealthCheckTags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Key": {
                    "Key`  <a name=\"cfn-route53-healthchecktags-key\"></a>\nThe value of `Key` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Key` is the name that you want to give the new tag\\.\n+  **Edit a tag*",
                    "Required": "Yes",
                    "Type": "String",
                    "Maximum": "128",
                    "UpdateRequires": "No interruption"
                },
                "Value": {
                    "Value`  <a name=\"cfn-route53-healthchecktags-value\"></a>\nThe value of `Value` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Value` is the value that you want to give the new tag\\.\n+  **Edit a tag*",
                    "Required": "Yes",
                    "Type": "String",
                    "Maximum": "256",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Route53::HostedZone": {
            "HostedZoneConfig": {
                "Required": "No",
                "Type": "HostedZoneConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Route53::HostedZone",
                "CloudResourceProperty": "HostedZoneConfig",
                "CloudReference": "AWS::Route53::HostedZone.HostedZoneConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Comment": {
                        "Required": "No",
                        "Type": "String",
                        "Maximum": "256",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "HostedZoneTags": {},
            "Name": {},
            "QueryLoggingConfig": {},
            "VPCs": {
                "Required": "No",
                "Type": "List of [VPC",
                "CloudResourceType": "AWS::Route53::HostedZone",
                "CloudResourceProperty": "VPCs",
                "CloudReference": "AWS::Route53::HostedZone.VPCs",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Route53::HostedZone.HostedZoneConfig": {
            "Required": "No",
            "Type": "HostedZoneConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Route53::HostedZone",
            "CloudResourceProperty": "HostedZoneConfig",
            "CloudReference": "AWS::Route53::HostedZone.HostedZoneConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Comment": {
                    "Required": "No",
                    "Type": "String",
                    "Maximum": "256",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Route53::HostedZone.VPCs": {
            "Required": "No",
            "Type": "List of [VPC",
            "CloudResourceType": "AWS::Route53::HostedZone",
            "CloudResourceProperty": "VPCs",
            "CloudReference": "AWS::Route53::HostedZone.VPCs",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Route53::RecordSetGroup": {
            "Comment": {},
            "HostedZoneId": {
                "Required": "No",
                "Type": "String",
                "Maximum": "32",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Route53::RecordSetGroup",
                "CloudResourceProperty": "HostedZoneId",
                "CloudReference": "AWS::Route53::RecordSetGroup.HostedZoneId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "HostedZoneName": {
                "Required": "No",
                "Type": "String",
                "Maximum": "1024",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Route53::RecordSetGroup",
                "CloudResourceProperty": "HostedZoneName",
                "CloudReference": "AWS::Route53::RecordSetGroup.HostedZoneName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RecordSets": {
                "Required": "No",
                "Type": "List of [RecordSet",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Route53::RecordSetGroup",
                "CloudResourceProperty": "RecordSets",
                "CloudReference": "AWS::Route53::RecordSetGroup.RecordSets",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Route53::RecordSetGroup.HostedZoneId": {
            "Required": "No",
            "Type": "String",
            "Maximum": "32",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Route53::RecordSetGroup",
            "CloudResourceProperty": "HostedZoneId",
            "CloudReference": "AWS::Route53::RecordSetGroup.HostedZoneId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Route53::RecordSetGroup.HostedZoneName": {
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Route53::RecordSetGroup",
            "CloudResourceProperty": "HostedZoneName",
            "CloudReference": "AWS::Route53::RecordSetGroup.HostedZoneName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Route53::RecordSetGroup.RecordSets": {
            "Required": "No",
            "Type": "List of [RecordSet",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Route53::RecordSetGroup",
            "CloudResourceProperty": "RecordSets",
            "CloudReference": "AWS::Route53::RecordSetGroup.RecordSets",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Route53Resolver::ResolverEndpoint": {
            "Direction": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "INBOUND",
                    "OUTBOUND"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Route53Resolver::ResolverEndpoint",
                "CloudResourceProperty": "Direction",
                "CloudReference": "AWS::Route53Resolver::ResolverEndpoint.Direction",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "IpAddresses": {
                "Required": "Yes",
                "Type": "List of [IpAddressRequest",
                "Maximum": "10",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Route53Resolver::ResolverEndpoint",
                "CloudResourceProperty": "IpAddresses",
                "CloudReference": "AWS::Route53Resolver::ResolverEndpoint.IpAddresses",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Ip": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "7",
                        "Maximum": "36",
                        "UpdateRequires": "No interruption"
                    },
                    "SubnetId": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "32",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Maximum": "64",
                "Pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Route53Resolver::ResolverEndpoint",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Route53Resolver::ResolverEndpoint.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SecurityGroupIds": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::Route53Resolver::ResolverEndpoint.Direction": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "INBOUND",
                "OUTBOUND"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Route53Resolver::ResolverEndpoint",
            "CloudResourceProperty": "Direction",
            "CloudReference": "AWS::Route53Resolver::ResolverEndpoint.Direction",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Route53Resolver::ResolverEndpoint.IpAddresses": {
            "Required": "Yes",
            "Type": "List of [IpAddressRequest",
            "Maximum": "10",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Route53Resolver::ResolverEndpoint",
            "CloudResourceProperty": "IpAddresses",
            "CloudReference": "AWS::Route53Resolver::ResolverEndpoint.IpAddresses",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Ip": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "7",
                    "Maximum": "36",
                    "UpdateRequires": "No interruption"
                },
                "SubnetId": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "32",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Route53Resolver::ResolverEndpoint.Name": {
            "Required": "No",
            "Type": "String",
            "Maximum": "64",
            "Pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Route53Resolver::ResolverEndpoint",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Route53Resolver::ResolverEndpoint.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Route53Resolver::ResolverRule": {
            "DomainName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Route53Resolver::ResolverRule",
                "CloudResourceProperty": "DomainName",
                "CloudReference": "AWS::Route53Resolver::ResolverRule.DomainName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Maximum": "64",
                "Pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Route53Resolver::ResolverRule",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Route53Resolver::ResolverRule.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ResolverEndpointId": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "64",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Route53Resolver::ResolverRule",
                "CloudResourceProperty": "ResolverEndpointId",
                "CloudReference": "AWS::Route53Resolver::ResolverRule.ResolverEndpointId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RuleType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "FORWARD",
                    "RECURSIVE",
                    "SYSTEM"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Route53Resolver::ResolverRule",
                "CloudResourceProperty": "RuleType",
                "CloudReference": "AWS::Route53Resolver::ResolverRule.RuleType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Route53Resolver::ResolverRule",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::Route53Resolver::ResolverRule.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "TargetIps": {
                "Required": "No",
                "Type": "List of [TargetAddress",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Route53Resolver::ResolverRule",
                "CloudResourceProperty": "TargetIps",
                "CloudReference": "AWS::Route53Resolver::ResolverRule.TargetIps",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Ip": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "7",
                        "Maximum": "36",
                        "UpdateRequires": "No interruption"
                    },
                    "Port": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "0",
                        "Maximum": "65535",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::Route53Resolver::ResolverRule.DomainName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Route53Resolver::ResolverRule",
            "CloudResourceProperty": "DomainName",
            "CloudReference": "AWS::Route53Resolver::ResolverRule.DomainName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Route53Resolver::ResolverRule.Name": {
            "Required": "No",
            "Type": "String",
            "Maximum": "64",
            "Pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Route53Resolver::ResolverRule",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Route53Resolver::ResolverRule.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Route53Resolver::ResolverRule.ResolverEndpointId": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "64",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Route53Resolver::ResolverRule",
            "CloudResourceProperty": "ResolverEndpointId",
            "CloudReference": "AWS::Route53Resolver::ResolverRule.ResolverEndpointId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Route53Resolver::ResolverRule.RuleType": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "FORWARD",
                "RECURSIVE",
                "SYSTEM"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Route53Resolver::ResolverRule",
            "CloudResourceProperty": "RuleType",
            "CloudReference": "AWS::Route53Resolver::ResolverRule.RuleType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Route53Resolver::ResolverRule.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Route53Resolver::ResolverRule",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::Route53Resolver::ResolverRule.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Route53Resolver::ResolverRule.TargetIps": {
            "Required": "No",
            "Type": "List of [TargetAddress",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Route53Resolver::ResolverRule",
            "CloudResourceProperty": "TargetIps",
            "CloudReference": "AWS::Route53Resolver::ResolverRule.TargetIps",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Ip": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "7",
                    "Maximum": "36",
                    "UpdateRequires": "No interruption"
                },
                "Port": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "0",
                    "Maximum": "65535",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Route53Resolver::ResolverRuleAssociation": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "Maximum": "64",
                "Pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Route53Resolver::ResolverRuleAssociation",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::Route53Resolver::ResolverRuleAssociation.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ResolverRuleId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "64",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Route53Resolver::ResolverRuleAssociation",
                "CloudResourceProperty": "ResolverRuleId",
                "CloudReference": "AWS::Route53Resolver::ResolverRuleAssociation.ResolverRuleId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "VPCId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "64",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Route53Resolver::ResolverRuleAssociation",
                "CloudResourceProperty": "VPCId",
                "CloudReference": "AWS::Route53Resolver::ResolverRuleAssociation.VPCId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Route53Resolver::ResolverRuleAssociation.Name": {
            "Required": "No",
            "Type": "String",
            "Maximum": "64",
            "Pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Route53Resolver::ResolverRuleAssociation",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::Route53Resolver::ResolverRuleAssociation.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Route53Resolver::ResolverRuleAssociation.ResolverRuleId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "64",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Route53Resolver::ResolverRuleAssociation",
            "CloudResourceProperty": "ResolverRuleId",
            "CloudReference": "AWS::Route53Resolver::ResolverRuleAssociation.ResolverRuleId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Route53Resolver::ResolverRuleAssociation.VPCId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "64",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Route53Resolver::ResolverRuleAssociation",
            "CloudResourceProperty": "VPCId",
            "CloudReference": "AWS::Route53Resolver::ResolverRuleAssociation.VPCId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SageMaker::CodeRepository": {
            "CodeRepositoryName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "63",
                "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SageMaker::CodeRepository",
                "CloudResourceProperty": "CodeRepositoryName",
                "CloudReference": "AWS::SageMaker::CodeRepository.CodeRepositoryName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "GitConfig": {
                "Required": "Yes",
                "Type": "GitConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SageMaker::CodeRepository",
                "CloudResourceProperty": "GitConfig",
                "CloudReference": "AWS::SageMaker::CodeRepository.GitConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Branch": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "1024",
                        "Pattern": "[^ ~^:?*\\[]+",
                        "UpdateRequires": "Replacement"
                    },
                    "RepositoryUrl": {
                        "Required": "Yes",
                        "Type": "String",
                        "Pattern": "^https://([^/]+)/?(.*)$",
                        "UpdateRequires": "Replacement"
                    },
                    "SecretArn": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "2048",
                        "Pattern": "arn:aws[a-z\\-]*:secretsmanager:[a-z0-9\\-]*:[0-9]{12}:secret:.*",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::SageMaker::CodeRepository.CodeRepositoryName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "63",
            "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SageMaker::CodeRepository",
            "CloudResourceProperty": "CodeRepositoryName",
            "CloudReference": "AWS::SageMaker::CodeRepository.CodeRepositoryName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SageMaker::CodeRepository.GitConfig": {
            "Required": "Yes",
            "Type": "GitConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SageMaker::CodeRepository",
            "CloudResourceProperty": "GitConfig",
            "CloudReference": "AWS::SageMaker::CodeRepository.GitConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Branch": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "1024",
                    "Pattern": "[^ ~^:?*\\[]+",
                    "UpdateRequires": "Replacement"
                },
                "RepositoryUrl": {
                    "Required": "Yes",
                    "Type": "String",
                    "Pattern": "^https://([^/]+)/?(.*)$",
                    "UpdateRequires": "Replacement"
                },
                "SecretArn": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "2048",
                    "Pattern": "arn:aws[a-z\\-]*:secretsmanager:[a-z0-9\\-]*:[0-9]{12}:secret:.*",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::SageMaker::Endpoint": {
            "EndpointConfigName": {
                "Required": "Yes",
                "Type": "String",
                "Maximum": "63",
                "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SageMaker::Endpoint",
                "CloudResourceProperty": "EndpointConfigName",
                "CloudReference": "AWS::SageMaker::Endpoint.EndpointConfigName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EndpointName": {
                "Required": "No",
                "Type": "String",
                "Maximum": "63",
                "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SageMaker::Endpoint",
                "CloudResourceProperty": "EndpointName",
                "CloudReference": "AWS::SageMaker::Endpoint.EndpointName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {}
        },
        "AWS::SageMaker::Endpoint.EndpointConfigName": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "63",
            "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SageMaker::Endpoint",
            "CloudResourceProperty": "EndpointConfigName",
            "CloudReference": "AWS::SageMaker::Endpoint.EndpointConfigName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SageMaker::Endpoint.EndpointName": {
            "Required": "No",
            "Type": "String",
            "Maximum": "63",
            "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SageMaker::Endpoint",
            "CloudResourceProperty": "EndpointName",
            "CloudReference": "AWS::SageMaker::Endpoint.EndpointName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SageMaker::EndpointConfig": {
            "EndpointConfigName": {
                "Required": "No",
                "Type": "String",
                "Maximum": "63",
                "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SageMaker::EndpointConfig",
                "CloudResourceProperty": "EndpointConfigName",
                "CloudReference": "AWS::SageMaker::EndpointConfig.EndpointConfigName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "KmsKeyId": {
                "Required": "No",
                "Type": "String",
                "Maximum": "2048",
                "Pattern": ".*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SageMaker::EndpointConfig",
                "CloudResourceProperty": "KmsKeyId",
                "CloudReference": "AWS::SageMaker::EndpointConfig.KmsKeyId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ProductionVariants": {
                "Required": "Yes",
                "Type": "List of [ProductionVariant",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SageMaker::EndpointConfig",
                "CloudResourceProperty": "ProductionVariants",
                "CloudReference": "AWS::SageMaker::EndpointConfig.ProductionVariants",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AcceleratorType": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "ml.eia1.large",
                            "ml.eia1.medium",
                            "ml.eia1.xlarge"
                        ],
                        "UpdateRequires": "Replacement"
                    },
                    "InitialInstanceCount": {
                        "Required": "Yes",
                        "Type": "Integer",
                        "Minimum": "1",
                        "UpdateRequires": "Replacement"
                    },
                    "InitialVariantWeight": {
                        "Required": "Yes",
                        "Type": "Double",
                        "UpdateRequires": "Replacement"
                    },
                    "InstanceType": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "ml.c4.2xlarge",
                            "ml.c4.4xlarge",
                            "ml.c4.8xlarge",
                            "ml.c4.large",
                            "ml.c4.xlarge",
                            "ml.c5.18xlarge",
                            "ml.c5.2xlarge",
                            "ml.c5.4xlarge",
                            "ml.c5.9xlarge",
                            "ml.c5.large",
                            "ml.c5.xlarge",
                            "ml.m4.10xlarge",
                            "ml.m4.16xlarge",
                            "ml.m4.2xlarge",
                            "ml.m4.4xlarge",
                            "ml.m4.xlarge",
                            "ml.m5.12xlarge",
                            "ml.m5.24xlarge",
                            "ml.m5.2xlarge",
                            "ml.m5.4xlarge",
                            "ml.m5.large",
                            "ml.m5.xlarge",
                            "ml.p2.16xlarge",
                            "ml.p2.8xlarge",
                            "ml.p2.xlarge",
                            "ml.p3.16xlarge",
                            "ml.p3.2xlarge",
                            "ml.p3.8xlarge",
                            "ml.t2.2xlarge",
                            "ml.t2.large",
                            "ml.t2.medium",
                            "ml.t2.xlarge"
                        ],
                        "UpdateRequires": "Replacement"
                    },
                    "ModelName": {
                        "Required": "Yes",
                        "Type": "String",
                        "Maximum": "63",
                        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                        "UpdateRequires": "Replacement"
                    },
                    "VariantName": {
                        "Required": "Yes",
                        "Type": "String",
                        "Maximum": "63",
                        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                        "UpdateRequires": "Replacement"
                    }
                }
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "50",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SageMaker::EndpointConfig",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::SageMaker::EndpointConfig.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::SageMaker::EndpointConfig.EndpointConfigName": {
            "Required": "No",
            "Type": "String",
            "Maximum": "63",
            "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SageMaker::EndpointConfig",
            "CloudResourceProperty": "EndpointConfigName",
            "CloudReference": "AWS::SageMaker::EndpointConfig.EndpointConfigName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SageMaker::EndpointConfig.KmsKeyId": {
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "Pattern": ".*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SageMaker::EndpointConfig",
            "CloudResourceProperty": "KmsKeyId",
            "CloudReference": "AWS::SageMaker::EndpointConfig.KmsKeyId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SageMaker::EndpointConfig.ProductionVariants": {
            "Required": "Yes",
            "Type": "List of [ProductionVariant",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SageMaker::EndpointConfig",
            "CloudResourceProperty": "ProductionVariants",
            "CloudReference": "AWS::SageMaker::EndpointConfig.ProductionVariants",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AcceleratorType": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "ml.eia1.large",
                        "ml.eia1.medium",
                        "ml.eia1.xlarge"
                    ],
                    "UpdateRequires": "Replacement"
                },
                "InitialInstanceCount": {
                    "Required": "Yes",
                    "Type": "Integer",
                    "Minimum": "1",
                    "UpdateRequires": "Replacement"
                },
                "InitialVariantWeight": {
                    "Required": "Yes",
                    "Type": "Double",
                    "UpdateRequires": "Replacement"
                },
                "InstanceType": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "ml.c4.2xlarge",
                        "ml.c4.4xlarge",
                        "ml.c4.8xlarge",
                        "ml.c4.large",
                        "ml.c4.xlarge",
                        "ml.c5.18xlarge",
                        "ml.c5.2xlarge",
                        "ml.c5.4xlarge",
                        "ml.c5.9xlarge",
                        "ml.c5.large",
                        "ml.c5.xlarge",
                        "ml.m4.10xlarge",
                        "ml.m4.16xlarge",
                        "ml.m4.2xlarge",
                        "ml.m4.4xlarge",
                        "ml.m4.xlarge",
                        "ml.m5.12xlarge",
                        "ml.m5.24xlarge",
                        "ml.m5.2xlarge",
                        "ml.m5.4xlarge",
                        "ml.m5.large",
                        "ml.m5.xlarge",
                        "ml.p2.16xlarge",
                        "ml.p2.8xlarge",
                        "ml.p2.xlarge",
                        "ml.p3.16xlarge",
                        "ml.p3.2xlarge",
                        "ml.p3.8xlarge",
                        "ml.t2.2xlarge",
                        "ml.t2.large",
                        "ml.t2.medium",
                        "ml.t2.xlarge"
                    ],
                    "UpdateRequires": "Replacement"
                },
                "ModelName": {
                    "Required": "Yes",
                    "Type": "String",
                    "Maximum": "63",
                    "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                    "UpdateRequires": "Replacement"
                },
                "VariantName": {
                    "Required": "Yes",
                    "Type": "String",
                    "Maximum": "63",
                    "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::SageMaker::EndpointConfig.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "Maximum": "50",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SageMaker::EndpointConfig",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::SageMaker::EndpointConfig.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SageMaker::Model": {
            "Containers": {
                "Required": "No",
                "Type": "List of [ContainerDefinition",
                "Maximum": "5",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SageMaker::Model",
                "CloudResourceProperty": "Containers",
                "CloudReference": "AWS::SageMaker::Model.Containers",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ContainerHostname": {
                        "Required": "No",
                        "Type": "String",
                        "Maximum": "63",
                        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                        "UpdateRequires": "Replacement"
                    },
                    "Environment": {
                        "Required": "No",
                        "Type": "Json",
                        "UpdateRequires": "Replacement"
                    },
                    "Image": {
                        "Required": "Yes",
                        "Type": "String",
                        "Maximum": "255",
                        "Pattern": "[\\S]+",
                        "UpdateRequires": "Replacement"
                    },
                    "ModelDataUrl": {}
                }
            },
            "ExecutionRoleArn": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "2048",
                "Pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SageMaker::Model",
                "CloudResourceProperty": "ExecutionRoleArn",
                "CloudReference": "AWS::SageMaker::Model.ExecutionRoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ModelName": {
                "Required": "No",
                "Type": "String",
                "Maximum": "63",
                "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SageMaker::Model",
                "CloudResourceProperty": "ModelName",
                "CloudReference": "AWS::SageMaker::Model.ModelName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PrimaryContainer": {
                "Required": "No",
                "Type": "ContainerDefinition",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SageMaker::Model",
                "CloudResourceProperty": "PrimaryContainer",
                "CloudReference": "AWS::SageMaker::Model.PrimaryContainer",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ContainerHostname": {
                        "Required": "No",
                        "Type": "String",
                        "Maximum": "63",
                        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                        "UpdateRequires": "Replacement"
                    },
                    "Environment": {
                        "Required": "No",
                        "Type": "Json",
                        "UpdateRequires": "Replacement"
                    },
                    "Image": {
                        "Required": "Yes",
                        "Type": "String",
                        "Maximum": "255",
                        "Pattern": "[\\S]+",
                        "UpdateRequires": "Replacement"
                    },
                    "ModelDataUrl": {}
                }
            },
            "Tags": {},
            "VpcConfig": {
                "Required": "No",
                "Type": "VpcConfig",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SageMaker::Model",
                "CloudResourceProperty": "VpcConfig",
                "CloudReference": "AWS::SageMaker::Model.VpcConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "SecurityGroupIds": {
                        "Required": "Yes",
                        "Type": "List of String",
                        "Maximum": "5",
                        "UpdateRequires": "Replacement"
                    },
                    "Subnets": {
                        "Required": "Yes",
                        "Type": "List of String",
                        "Maximum": "16",
                        "UpdateRequires": "Replacement"
                    }
                }
            }
        },
        "AWS::SageMaker::Model.Containers": {
            "Required": "No",
            "Type": "List of [ContainerDefinition",
            "Maximum": "5",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SageMaker::Model",
            "CloudResourceProperty": "Containers",
            "CloudReference": "AWS::SageMaker::Model.Containers",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ContainerHostname": {
                    "Required": "No",
                    "Type": "String",
                    "Maximum": "63",
                    "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                    "UpdateRequires": "Replacement"
                },
                "Environment": {
                    "Required": "No",
                    "Type": "Json",
                    "UpdateRequires": "Replacement"
                },
                "Image": {
                    "Required": "Yes",
                    "Type": "String",
                    "Maximum": "255",
                    "Pattern": "[\\S]+",
                    "UpdateRequires": "Replacement"
                },
                "ModelDataUrl": {}
            }
        },
        "AWS::SageMaker::Model.ExecutionRoleArn": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "20",
            "Maximum": "2048",
            "Pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SageMaker::Model",
            "CloudResourceProperty": "ExecutionRoleArn",
            "CloudReference": "AWS::SageMaker::Model.ExecutionRoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SageMaker::Model.ModelName": {
            "Required": "No",
            "Type": "String",
            "Maximum": "63",
            "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SageMaker::Model",
            "CloudResourceProperty": "ModelName",
            "CloudReference": "AWS::SageMaker::Model.ModelName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SageMaker::Model.PrimaryContainer": {
            "Required": "No",
            "Type": "ContainerDefinition",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SageMaker::Model",
            "CloudResourceProperty": "PrimaryContainer",
            "CloudReference": "AWS::SageMaker::Model.PrimaryContainer",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ContainerHostname": {
                    "Required": "No",
                    "Type": "String",
                    "Maximum": "63",
                    "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                    "UpdateRequires": "Replacement"
                },
                "Environment": {
                    "Required": "No",
                    "Type": "Json",
                    "UpdateRequires": "Replacement"
                },
                "Image": {
                    "Required": "Yes",
                    "Type": "String",
                    "Maximum": "255",
                    "Pattern": "[\\S]+",
                    "UpdateRequires": "Replacement"
                },
                "ModelDataUrl": {}
            }
        },
        "AWS::SageMaker::Model.VpcConfig": {
            "Required": "No",
            "Type": "VpcConfig",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SageMaker::Model",
            "CloudResourceProperty": "VpcConfig",
            "CloudReference": "AWS::SageMaker::Model.VpcConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "SecurityGroupIds": {
                    "Required": "Yes",
                    "Type": "List of String",
                    "Maximum": "5",
                    "UpdateRequires": "Replacement"
                },
                "Subnets": {
                    "Required": "Yes",
                    "Type": "List of String",
                    "Maximum": "16",
                    "UpdateRequires": "Replacement"
                }
            }
        },
        "AWS::SageMaker::NotebookInstance": {
            "AcceleratorTypes": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "AdditionalCodeRepositories": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "3",
                "UpdateRequires": "No interruption"
            },
            "DefaultCodeRepository": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "Pattern": "^https://([^/]+)/?(.*)$|^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                "UpdateRequires": "No interruption"
            },
            "DirectInternetAccess": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Disabled",
                    "Enabled"
                ],
                "UpdateRequires": "Replacement"
            },
            "InstanceType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ml.c4.2xlarge",
                    "ml.c4.4xlarge",
                    "ml.c4.8xlarge",
                    "ml.c4.xlarge",
                    "ml.c5.18xlarge",
                    "ml.c5.2xlarge",
                    "ml.c5.4xlarge",
                    "ml.c5.9xlarge",
                    "ml.c5.xlarge",
                    "ml.c5d.18xlarge",
                    "ml.c5d.2xlarge",
                    "ml.c5d.4xlarge",
                    "ml.c5d.9xlarge",
                    "ml.c5d.xlarge",
                    "ml.m4.10xlarge",
                    "ml.m4.16xlarge",
                    "ml.m4.2xlarge",
                    "ml.m4.4xlarge",
                    "ml.m4.xlarge",
                    "ml.m5.12xlarge",
                    "ml.m5.24xlarge",
                    "ml.m5.2xlarge",
                    "ml.m5.4xlarge",
                    "ml.m5.xlarge",
                    "ml.p2.16xlarge",
                    "ml.p2.8xlarge",
                    "ml.p2.xlarge",
                    "ml.p3.16xlarge",
                    "ml.p3.2xlarge",
                    "ml.p3.8xlarge",
                    "ml.t2.2xlarge",
                    "ml.t2.large",
                    "ml.t2.medium",
                    "ml.t2.xlarge",
                    "ml.t3.2xlarge",
                    "ml.t3.large",
                    "ml.t3.medium",
                    "ml.t3.xlarge"
                ],
                "UpdateRequires": "No interruption"
            },
            "KmsKeyId": {},
            "LifecycleConfigName": {},
            "NotebookInstanceName": {
                "Required": "No",
                "Type": "String",
                "Maximum": "63",
                "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                "UpdateRequires": "Replacement"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "2048",
                "Pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
                "UpdateRequires": "No interruption"
            },
            "RootAccess": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Disabled",
                    "Enabled"
                ],
                "UpdateRequires": "No interruption"
            },
            "SecurityGroupIds": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "5",
                "UpdateRequires": "Replacement"
            },
            "SubnetId": {
                "Required": "No",
                "Type": "String",
                "Maximum": "32",
                "Pattern": "[-0-9a-zA-Z]+",
                "UpdateRequires": "Replacement"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "50",
                "UpdateRequires": "No interruption"
            },
            "VolumeSizeInGB": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "5",
                "Maximum": "16384",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::SageMaker::NotebookInstanceLifecycleConfig": {
            "NotebookInstanceLifecycleConfigName": {
                "Required": "No",
                "Type": "String",
                "Maximum": "63",
                "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SageMaker::NotebookInstanceLifecycleConfig",
                "CloudResourceProperty": "NotebookInstanceLifecycleConfigName",
                "CloudReference": "AWS::SageMaker::NotebookInstanceLifecycleConfig.NotebookInstanceLifecycleConfigName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "OnCreate": {
                "Required": "No",
                "Type": "List of [NotebookInstanceLifecycleHook",
                "Maximum": "1",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SageMaker::NotebookInstanceLifecycleConfig",
                "CloudResourceProperty": "OnCreate",
                "CloudReference": "AWS::SageMaker::NotebookInstanceLifecycleConfig.OnCreate",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Content": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "16384",
                        "Pattern": "[\\S\\s]+",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "OnStart": {
                "Required": "No",
                "Type": "List of [NotebookInstanceLifecycleHook",
                "Maximum": "1",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SageMaker::NotebookInstanceLifecycleConfig",
                "CloudResourceProperty": "OnStart",
                "CloudReference": "AWS::SageMaker::NotebookInstanceLifecycleConfig.OnStart",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Content": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "16384",
                        "Pattern": "[\\S\\s]+",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::SageMaker::NotebookInstanceLifecycleConfig.NotebookInstanceLifecycleConfigName": {
            "Required": "No",
            "Type": "String",
            "Maximum": "63",
            "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SageMaker::NotebookInstanceLifecycleConfig",
            "CloudResourceProperty": "NotebookInstanceLifecycleConfigName",
            "CloudReference": "AWS::SageMaker::NotebookInstanceLifecycleConfig.NotebookInstanceLifecycleConfigName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SageMaker::NotebookInstanceLifecycleConfig.OnCreate": {
            "Required": "No",
            "Type": "List of [NotebookInstanceLifecycleHook",
            "Maximum": "1",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SageMaker::NotebookInstanceLifecycleConfig",
            "CloudResourceProperty": "OnCreate",
            "CloudReference": "AWS::SageMaker::NotebookInstanceLifecycleConfig.OnCreate",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Content": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "16384",
                    "Pattern": "[\\S\\s]+",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::SageMaker::NotebookInstanceLifecycleConfig.OnStart": {
            "Required": "No",
            "Type": "List of [NotebookInstanceLifecycleHook",
            "Maximum": "1",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SageMaker::NotebookInstanceLifecycleConfig",
            "CloudResourceProperty": "OnStart",
            "CloudReference": "AWS::SageMaker::NotebookInstanceLifecycleConfig.OnStart",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Content": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "16384",
                    "Pattern": "[\\S\\s]+",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::SageMaker::Workteam": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "200",
                "Pattern": ".+",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SageMaker::Workteam",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::SageMaker::Workteam.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MemberDefinitions": {
                "Required": "No",
                "Type": "List of [MemberDefinition",
                "Maximum": "10",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SageMaker::Workteam",
                "CloudResourceProperty": "MemberDefinitions",
                "CloudReference": "AWS::SageMaker::Workteam.MemberDefinitions",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "CognitoMemberDefinition": {
                        "Required": "Yes",
                        "Type": "CognitoMemberDefinition",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "NotificationConfiguration": {
                "Required": "No",
                "Type": "NotificationConfiguration",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SageMaker::Workteam",
                "CloudResourceProperty": "NotificationConfiguration",
                "CloudReference": "AWS::SageMaker::Workteam.NotificationConfiguration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "NotificationTopicArn": {
                        "Required": "Yes",
                        "Type": "String",
                        "Pattern": "arn:aws[a-z\\-]*:sns:[a-z0-9\\-]*:[0-9]{12}:[a-zA-Z0-9_.-]*",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Tags": {},
            "WorkteamName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "63",
                "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SageMaker::Workteam",
                "CloudResourceProperty": "WorkteamName",
                "CloudReference": "AWS::SageMaker::Workteam.WorkteamName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::SageMaker::Workteam.Description": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "200",
            "Pattern": ".+",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SageMaker::Workteam",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::SageMaker::Workteam.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SageMaker::Workteam.MemberDefinitions": {
            "Required": "No",
            "Type": "List of [MemberDefinition",
            "Maximum": "10",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SageMaker::Workteam",
            "CloudResourceProperty": "MemberDefinitions",
            "CloudReference": "AWS::SageMaker::Workteam.MemberDefinitions",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "CognitoMemberDefinition": {
                    "Required": "Yes",
                    "Type": "CognitoMemberDefinition",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::SageMaker::Workteam.NotificationConfiguration": {
            "Required": "No",
            "Type": "NotificationConfiguration",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SageMaker::Workteam",
            "CloudResourceProperty": "NotificationConfiguration",
            "CloudReference": "AWS::SageMaker::Workteam.NotificationConfiguration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "NotificationTopicArn": {
                    "Required": "Yes",
                    "Type": "String",
                    "Pattern": "arn:aws[a-z\\-]*:sns:[a-z0-9\\-]*:[0-9]{12}:[a-zA-Z0-9_.-]*",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::SageMaker::Workteam.WorkteamName": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "63",
            "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SageMaker::Workteam",
            "CloudResourceProperty": "WorkteamName",
            "CloudReference": "AWS::SageMaker::Workteam.WorkteamName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SecretsManager::ResourcePolicy": {
            "ResourcePolicy": {
                "Required": "Yes",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SecretsManager::ResourcePolicy",
                "CloudResourceProperty": "ResourcePolicy",
                "CloudReference": "AWS::SecretsManager::ResourcePolicy.ResourcePolicy",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SecretId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SecretsManager::ResourcePolicy",
                "CloudResourceProperty": "SecretId",
                "CloudReference": "AWS::SecretsManager::ResourcePolicy.SecretId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::SecretsManager::ResourcePolicy.ResourcePolicy": {
            "Required": "Yes",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SecretsManager::ResourcePolicy",
            "CloudResourceProperty": "ResourcePolicy",
            "CloudReference": "AWS::SecretsManager::ResourcePolicy.ResourcePolicy",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SecretsManager::ResourcePolicy.SecretId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SecretsManager::ResourcePolicy",
            "CloudResourceProperty": "SecretId",
            "CloudReference": "AWS::SecretsManager::ResourcePolicy.SecretId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SecretsManager::RotationSchedule": {
            "RotationLambdaARN": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SecretsManager::RotationSchedule",
                "CloudResourceProperty": "RotationLambdaARN",
                "CloudReference": "AWS::SecretsManager::RotationSchedule.RotationLambdaARN",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RotationRules": {
                "Required": "No",
                "Type": "RotationRules",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SecretsManager::RotationSchedule",
                "CloudResourceProperty": "RotationRules",
                "CloudReference": "AWS::SecretsManager::RotationSchedule.RotationRules",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "AutomaticallyAfterDays": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "SecretId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SecretsManager::RotationSchedule",
                "CloudResourceProperty": "SecretId",
                "CloudReference": "AWS::SecretsManager::RotationSchedule.SecretId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::SecretsManager::RotationSchedule.RotationLambdaARN": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SecretsManager::RotationSchedule",
            "CloudResourceProperty": "RotationLambdaARN",
            "CloudReference": "AWS::SecretsManager::RotationSchedule.RotationLambdaARN",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SecretsManager::RotationSchedule.RotationRules": {
            "Required": "No",
            "Type": "RotationRules",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SecretsManager::RotationSchedule",
            "CloudResourceProperty": "RotationRules",
            "CloudReference": "AWS::SecretsManager::RotationSchedule.RotationRules",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "AutomaticallyAfterDays": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::SecretsManager::RotationSchedule.SecretId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SecretsManager::RotationSchedule",
            "CloudResourceProperty": "SecretId",
            "CloudReference": "AWS::SecretsManager::RotationSchedule.SecretId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SecretsManager::Secret": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "2048",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SecretsManager::Secret",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::SecretsManager::Secret.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "GenerateSecretString": {
                "Required": "No",
                "Type": "GenerateSecretString",
                "Minimum": "0",
                "Maximum": "7168",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SecretsManager::Secret",
                "CloudResourceProperty": "GenerateSecretString",
                "CloudReference": "AWS::SecretsManager::Secret.GenerateSecretString",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ExcludeCharacters": {
                        "Required": "No",
                        "Type": "String",
                        "Minimum": "0",
                        "Maximum": "4096",
                        "UpdateRequires": "No interruption"
                    },
                    "ExcludeLowercase": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "ExcludeNumbers": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "ExcludePunctuation": {}
                }
            },
            "KmsKeyId": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "2048",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SecretsManager::Secret",
                "CloudResourceProperty": "KmsKeyId",
                "CloudReference": "AWS::SecretsManager::Secret.KmsKeyId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SecretsManager::Secret",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::SecretsManager::Secret.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SecretString": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SecretsManager::Secret",
                "CloudResourceProperty": "SecretString",
                "CloudReference": "AWS::SecretsManager::Secret.SecretString",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SecretsManager::Secret",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::SecretsManager::Secret.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::SecretsManager::Secret.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SecretsManager::Secret",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::SecretsManager::Secret.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SecretsManager::Secret.GenerateSecretString": {
            "Required": "No",
            "Type": "GenerateSecretString",
            "Minimum": "0",
            "Maximum": "7168",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SecretsManager::Secret",
            "CloudResourceProperty": "GenerateSecretString",
            "CloudReference": "AWS::SecretsManager::Secret.GenerateSecretString",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ExcludeCharacters": {
                    "Required": "No",
                    "Type": "String",
                    "Minimum": "0",
                    "Maximum": "4096",
                    "UpdateRequires": "No interruption"
                },
                "ExcludeLowercase": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "ExcludeNumbers": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "ExcludePunctuation": {}
            }
        },
        "AWS::SecretsManager::Secret.KmsKeyId": {
            "Required": "No",
            "Type": "String",
            "Minimum": "0",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SecretsManager::Secret",
            "CloudResourceProperty": "KmsKeyId",
            "CloudReference": "AWS::SecretsManager::Secret.KmsKeyId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SecretsManager::Secret.Name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SecretsManager::Secret",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::SecretsManager::Secret.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SecretsManager::Secret.SecretString": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SecretsManager::Secret",
            "CloudResourceProperty": "SecretString",
            "CloudReference": "AWS::SecretsManager::Secret.SecretString",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SecretsManager::Secret.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SecretsManager::Secret",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::SecretsManager::Secret.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SecretsManager::SecretTargetAttachment": {
            "SecretId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SecretsManager::SecretTargetAttachment",
                "CloudResourceProperty": "SecretId",
                "CloudReference": "AWS::SecretsManager::SecretTargetAttachment.SecretId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TargetId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "2048",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SecretsManager::SecretTargetAttachment",
                "CloudResourceProperty": "TargetId",
                "CloudReference": "AWS::SecretsManager::SecretTargetAttachment.TargetId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TargetType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SecretsManager::SecretTargetAttachment",
                "CloudResourceProperty": "TargetType",
                "CloudReference": "AWS::SecretsManager::SecretTargetAttachment.TargetType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::SecretsManager::SecretTargetAttachment.SecretId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SecretsManager::SecretTargetAttachment",
            "CloudResourceProperty": "SecretId",
            "CloudReference": "AWS::SecretsManager::SecretTargetAttachment.SecretId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SecretsManager::SecretTargetAttachment.TargetId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "20",
            "Maximum": "2048",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SecretsManager::SecretTargetAttachment",
            "CloudResourceProperty": "TargetId",
            "CloudReference": "AWS::SecretsManager::SecretTargetAttachment.TargetId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SecretsManager::SecretTargetAttachment.TargetType": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SecretsManager::SecretTargetAttachment",
            "CloudResourceProperty": "TargetType",
            "CloudReference": "AWS::SecretsManager::SecretTargetAttachment.TargetType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SecurityHub::Hub": {
            "Tags": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SecurityHub::Hub",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::SecurityHub::Hub.Tags",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::SecurityHub::Hub.Tags": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SecurityHub::Hub",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::SecurityHub::Hub.Tags",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::AcceptedPortfolioShare": {
            "AcceptLanguage": {
                "Required": "No",
                "Type": "String",
                "Maximum": "100",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::AcceptedPortfolioShare",
                "CloudResourceProperty": "AcceptLanguage",
                "CloudReference": "AWS::ServiceCatalog::AcceptedPortfolioShare.AcceptLanguage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PortfolioId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "^[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::AcceptedPortfolioShare",
                "CloudResourceProperty": "PortfolioId",
                "CloudReference": "AWS::ServiceCatalog::AcceptedPortfolioShare.PortfolioId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ServiceCatalog::AcceptedPortfolioShare.AcceptLanguage": {
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::AcceptedPortfolioShare",
            "CloudResourceProperty": "AcceptLanguage",
            "CloudReference": "AWS::ServiceCatalog::AcceptedPortfolioShare.AcceptLanguage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::AcceptedPortfolioShare.PortfolioId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "Pattern": "^[a-zA-Z0-9_\\-]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::AcceptedPortfolioShare",
            "CloudResourceProperty": "PortfolioId",
            "CloudReference": "AWS::ServiceCatalog::AcceptedPortfolioShare.PortfolioId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::CloudFormationProduct": {
            "AcceptLanguage": {
                "Required": "No",
                "Type": "String",
                "Maximum": "100",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProduct",
                "CloudResourceProperty": "AcceptLanguage",
                "CloudReference": "AWS::ServiceCatalog::CloudFormationProduct.AcceptLanguage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "8191",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProduct",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ServiceCatalog::CloudFormationProduct.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Distributor": {
                "Required": "No",
                "Type": "String",
                "Maximum": "8191",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProduct",
                "CloudResourceProperty": "Distributor",
                "CloudReference": "AWS::ServiceCatalog::CloudFormationProduct.Distributor",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Maximum": "8191",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProduct",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::ServiceCatalog::CloudFormationProduct.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Owner": {
                "Required": "Yes",
                "Type": "String",
                "Maximum": "8191",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProduct",
                "CloudResourceProperty": "Owner",
                "CloudReference": "AWS::ServiceCatalog::CloudFormationProduct.Owner",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ProvisioningArtifactParameters": {
                "Required": "Yes",
                "Type": "List of [ProvisioningArtifactProperties",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProduct",
                "CloudResourceProperty": "ProvisioningArtifactParameters",
                "CloudReference": "AWS::ServiceCatalog::CloudFormationProduct.ProvisioningArtifactParameters",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Description": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "DisableTemplateValidation": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "Info": {
                        "Required": "Yes",
                        "Type": "Json",
                        "UpdateRequires": "No interruption"
                    },
                    "Name": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "SupportDescription": {
                "Required": "No",
                "Type": "String",
                "Maximum": "8191",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProduct",
                "CloudResourceProperty": "SupportDescription",
                "CloudReference": "AWS::ServiceCatalog::CloudFormationProduct.SupportDescription",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SupportEmail": {
                "Required": "No",
                "Type": "String",
                "Maximum": "254",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProduct",
                "CloudResourceProperty": "SupportEmail",
                "CloudReference": "AWS::ServiceCatalog::CloudFormationProduct.SupportEmail",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SupportUrl": {
                "Required": "No",
                "Type": "String",
                "Maximum": "2083",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProduct",
                "CloudResourceProperty": "SupportUrl",
                "CloudReference": "AWS::ServiceCatalog::CloudFormationProduct.SupportUrl",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "20",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProduct",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::ServiceCatalog::CloudFormationProduct.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ServiceCatalog::CloudFormationProduct.AcceptLanguage": {
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProduct",
            "CloudResourceProperty": "AcceptLanguage",
            "CloudReference": "AWS::ServiceCatalog::CloudFormationProduct.AcceptLanguage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::CloudFormationProduct.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "8191",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProduct",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ServiceCatalog::CloudFormationProduct.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::CloudFormationProduct.Distributor": {
            "Required": "No",
            "Type": "String",
            "Maximum": "8191",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProduct",
            "CloudResourceProperty": "Distributor",
            "CloudReference": "AWS::ServiceCatalog::CloudFormationProduct.Distributor",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::CloudFormationProduct.Name": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "8191",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProduct",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::ServiceCatalog::CloudFormationProduct.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::CloudFormationProduct.Owner": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "8191",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProduct",
            "CloudResourceProperty": "Owner",
            "CloudReference": "AWS::ServiceCatalog::CloudFormationProduct.Owner",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::CloudFormationProduct.ProvisioningArtifactParameters": {
            "Required": "Yes",
            "Type": "List of [ProvisioningArtifactProperties",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProduct",
            "CloudResourceProperty": "ProvisioningArtifactParameters",
            "CloudReference": "AWS::ServiceCatalog::CloudFormationProduct.ProvisioningArtifactParameters",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Description": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "DisableTemplateValidation": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "Info": {
                    "Required": "Yes",
                    "Type": "Json",
                    "UpdateRequires": "No interruption"
                },
                "Name": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ServiceCatalog::CloudFormationProduct.SupportDescription": {
            "Required": "No",
            "Type": "String",
            "Maximum": "8191",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProduct",
            "CloudResourceProperty": "SupportDescription",
            "CloudReference": "AWS::ServiceCatalog::CloudFormationProduct.SupportDescription",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::CloudFormationProduct.SupportEmail": {
            "Required": "No",
            "Type": "String",
            "Maximum": "254",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProduct",
            "CloudResourceProperty": "SupportEmail",
            "CloudReference": "AWS::ServiceCatalog::CloudFormationProduct.SupportEmail",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::CloudFormationProduct.SupportUrl": {
            "Required": "No",
            "Type": "String",
            "Maximum": "2083",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProduct",
            "CloudResourceProperty": "SupportUrl",
            "CloudReference": "AWS::ServiceCatalog::CloudFormationProduct.SupportUrl",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::CloudFormationProduct.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "Maximum": "20",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProduct",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::ServiceCatalog::CloudFormationProduct.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::CloudFormationProvisionedProduct": {
            "AcceptLanguage": {
                "Required": "No",
                "Type": "String",
                "Maximum": "100",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProvisionedProduct",
                "CloudResourceProperty": "AcceptLanguage",
                "CloudReference": "AWS::ServiceCatalog::CloudFormationProvisionedProduct.AcceptLanguage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "NotificationArns": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "5",
                "UpdateRequires": "Replacement"
            },
            "PathId": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "^[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "No interruption"
            },
            "ProductId": {
                "Required": "Conditional",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "^[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "No interruption"
            },
            "ProductName": {
                "Required": "Conditional",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[a-zA-Z0-9][a-zA-Z0-9._-]*",
                "UpdateRequires": "No interruption"
            },
            "ProvisionedProductName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[a-zA-Z0-9][a-zA-Z0-9._-]*",
                "UpdateRequires": "Replacement"
            },
            "ProvisioningArtifactId": {
                "Required": "Conditional",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "^[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "No interruption"
            },
            "ProvisioningArtifactName": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ProvisioningParameters": {
                "Required": "No",
                "Type": "List of [ProvisioningParameter",
                "UpdateRequires": "No interruption"
            },
            "ProvisioningPreferences": {
                "Required": "No",
                "Type": "ProvisioningPreferences",
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "50",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::ServiceCatalog::CloudFormationProvisionedProduct.AcceptLanguage": {
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::CloudFormationProvisionedProduct",
            "CloudResourceProperty": "AcceptLanguage",
            "CloudReference": "AWS::ServiceCatalog::CloudFormationProvisionedProduct.AcceptLanguage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::LaunchNotificationConstraint": {
            "AcceptLanguage": {
                "Required": "No",
                "Type": "String",
                "Maximum": "100",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::LaunchNotificationConstraint",
                "CloudResourceProperty": "AcceptLanguage",
                "CloudReference": "AWS::ServiceCatalog::LaunchNotificationConstraint.AcceptLanguage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "2000",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::LaunchNotificationConstraint",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ServiceCatalog::LaunchNotificationConstraint.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "NotificationArns": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "PortfolioId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "^[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "Replacement"
            },
            "ProductId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "^[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "Replacement"
            }
        },
        "AWS::ServiceCatalog::LaunchNotificationConstraint.AcceptLanguage": {
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::LaunchNotificationConstraint",
            "CloudResourceProperty": "AcceptLanguage",
            "CloudReference": "AWS::ServiceCatalog::LaunchNotificationConstraint.AcceptLanguage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::LaunchNotificationConstraint.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "2000",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::LaunchNotificationConstraint",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ServiceCatalog::LaunchNotificationConstraint.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::LaunchRoleConstraint": {
            "AcceptLanguage": {
                "Required": "No",
                "Type": "String",
                "Maximum": "100",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::LaunchRoleConstraint",
                "CloudResourceProperty": "AcceptLanguage",
                "CloudReference": "AWS::ServiceCatalog::LaunchRoleConstraint.AcceptLanguage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "2000",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::LaunchRoleConstraint",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ServiceCatalog::LaunchRoleConstraint.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PortfolioId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "^[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::LaunchRoleConstraint",
                "CloudResourceProperty": "PortfolioId",
                "CloudReference": "AWS::ServiceCatalog::LaunchRoleConstraint.PortfolioId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ProductId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "^[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::LaunchRoleConstraint",
                "CloudResourceProperty": "ProductId",
                "CloudReference": "AWS::ServiceCatalog::LaunchRoleConstraint.ProductId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::LaunchRoleConstraint",
                "CloudResourceProperty": "RoleArn",
                "CloudReference": "AWS::ServiceCatalog::LaunchRoleConstraint.RoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ServiceCatalog::LaunchRoleConstraint.AcceptLanguage": {
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::LaunchRoleConstraint",
            "CloudResourceProperty": "AcceptLanguage",
            "CloudReference": "AWS::ServiceCatalog::LaunchRoleConstraint.AcceptLanguage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::LaunchRoleConstraint.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "2000",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::LaunchRoleConstraint",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ServiceCatalog::LaunchRoleConstraint.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::LaunchRoleConstraint.PortfolioId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "Pattern": "^[a-zA-Z0-9_\\-]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::LaunchRoleConstraint",
            "CloudResourceProperty": "PortfolioId",
            "CloudReference": "AWS::ServiceCatalog::LaunchRoleConstraint.PortfolioId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::LaunchRoleConstraint.ProductId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "Pattern": "^[a-zA-Z0-9_\\-]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::LaunchRoleConstraint",
            "CloudResourceProperty": "ProductId",
            "CloudReference": "AWS::ServiceCatalog::LaunchRoleConstraint.ProductId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::LaunchRoleConstraint.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::LaunchRoleConstraint",
            "CloudResourceProperty": "RoleArn",
            "CloudReference": "AWS::ServiceCatalog::LaunchRoleConstraint.RoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::LaunchTemplateConstraint": {
            "AcceptLanguage": {
                "Required": "No",
                "Type": "String",
                "Maximum": "100",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::LaunchTemplateConstraint",
                "CloudResourceProperty": "AcceptLanguage",
                "CloudReference": "AWS::ServiceCatalog::LaunchTemplateConstraint.AcceptLanguage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "2000",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::LaunchTemplateConstraint",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ServiceCatalog::LaunchTemplateConstraint.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PortfolioId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "^[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::LaunchTemplateConstraint",
                "CloudResourceProperty": "PortfolioId",
                "CloudReference": "AWS::ServiceCatalog::LaunchTemplateConstraint.PortfolioId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ProductId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "^[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::LaunchTemplateConstraint",
                "CloudResourceProperty": "ProductId",
                "CloudReference": "AWS::ServiceCatalog::LaunchTemplateConstraint.ProductId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Rules": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::LaunchTemplateConstraint",
                "CloudResourceProperty": "Rules",
                "CloudReference": "AWS::ServiceCatalog::LaunchTemplateConstraint.Rules",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ServiceCatalog::LaunchTemplateConstraint.AcceptLanguage": {
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::LaunchTemplateConstraint",
            "CloudResourceProperty": "AcceptLanguage",
            "CloudReference": "AWS::ServiceCatalog::LaunchTemplateConstraint.AcceptLanguage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::LaunchTemplateConstraint.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "2000",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::LaunchTemplateConstraint",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ServiceCatalog::LaunchTemplateConstraint.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::LaunchTemplateConstraint.PortfolioId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "Pattern": "^[a-zA-Z0-9_\\-]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::LaunchTemplateConstraint",
            "CloudResourceProperty": "PortfolioId",
            "CloudReference": "AWS::ServiceCatalog::LaunchTemplateConstraint.PortfolioId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::LaunchTemplateConstraint.ProductId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "Pattern": "^[a-zA-Z0-9_\\-]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::LaunchTemplateConstraint",
            "CloudResourceProperty": "ProductId",
            "CloudReference": "AWS::ServiceCatalog::LaunchTemplateConstraint.ProductId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::LaunchTemplateConstraint.Rules": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::LaunchTemplateConstraint",
            "CloudResourceProperty": "Rules",
            "CloudReference": "AWS::ServiceCatalog::LaunchTemplateConstraint.Rules",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::Portfolio": {
            "AcceptLanguage": {
                "Required": "No",
                "Type": "String",
                "Maximum": "100",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::Portfolio",
                "CloudResourceProperty": "AcceptLanguage",
                "CloudReference": "AWS::ServiceCatalog::Portfolio.AcceptLanguage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "2000",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::Portfolio",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ServiceCatalog::Portfolio.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DisplayName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::Portfolio",
                "CloudResourceProperty": "DisplayName",
                "CloudReference": "AWS::ServiceCatalog::Portfolio.DisplayName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ProviderName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "50",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::Portfolio",
                "CloudResourceProperty": "ProviderName",
                "CloudReference": "AWS::ServiceCatalog::Portfolio.ProviderName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "20",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::Portfolio",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::ServiceCatalog::Portfolio.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ServiceCatalog::Portfolio.AcceptLanguage": {
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::Portfolio",
            "CloudResourceProperty": "AcceptLanguage",
            "CloudReference": "AWS::ServiceCatalog::Portfolio.AcceptLanguage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::Portfolio.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "2000",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::Portfolio",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ServiceCatalog::Portfolio.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::Portfolio.DisplayName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::Portfolio",
            "CloudResourceProperty": "DisplayName",
            "CloudReference": "AWS::ServiceCatalog::Portfolio.DisplayName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::Portfolio.ProviderName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "50",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::Portfolio",
            "CloudResourceProperty": "ProviderName",
            "CloudReference": "AWS::ServiceCatalog::Portfolio.ProviderName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::Portfolio.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "Maximum": "20",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::Portfolio",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::ServiceCatalog::Portfolio.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::PortfolioPrincipalAssociation": {
            "AcceptLanguage": {
                "Required": "No",
                "Type": "String",
                "Maximum": "100",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::PortfolioPrincipalAssociation",
                "CloudResourceProperty": "AcceptLanguage",
                "CloudReference": "AWS::ServiceCatalog::PortfolioPrincipalAssociation.AcceptLanguage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PortfolioId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "^[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::PortfolioPrincipalAssociation",
                "CloudResourceProperty": "PortfolioId",
                "CloudReference": "AWS::ServiceCatalog::PortfolioPrincipalAssociation.PortfolioId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PrincipalARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1000",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::PortfolioPrincipalAssociation",
                "CloudResourceProperty": "PrincipalARN",
                "CloudReference": "AWS::ServiceCatalog::PortfolioPrincipalAssociation.PrincipalARN",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PrincipalType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "IAM"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::PortfolioPrincipalAssociation",
                "CloudResourceProperty": "PrincipalType",
                "CloudReference": "AWS::ServiceCatalog::PortfolioPrincipalAssociation.PrincipalType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ServiceCatalog::PortfolioPrincipalAssociation.AcceptLanguage": {
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::PortfolioPrincipalAssociation",
            "CloudResourceProperty": "AcceptLanguage",
            "CloudReference": "AWS::ServiceCatalog::PortfolioPrincipalAssociation.AcceptLanguage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::PortfolioPrincipalAssociation.PortfolioId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "Pattern": "^[a-zA-Z0-9_\\-]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::PortfolioPrincipalAssociation",
            "CloudResourceProperty": "PortfolioId",
            "CloudReference": "AWS::ServiceCatalog::PortfolioPrincipalAssociation.PortfolioId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::PortfolioPrincipalAssociation.PrincipalARN": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "1000",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::PortfolioPrincipalAssociation",
            "CloudResourceProperty": "PrincipalARN",
            "CloudReference": "AWS::ServiceCatalog::PortfolioPrincipalAssociation.PrincipalARN",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::PortfolioPrincipalAssociation.PrincipalType": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "IAM"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::PortfolioPrincipalAssociation",
            "CloudResourceProperty": "PrincipalType",
            "CloudReference": "AWS::ServiceCatalog::PortfolioPrincipalAssociation.PrincipalType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::PortfolioProductAssociation": {
            "AcceptLanguage": {
                "Required": "No",
                "Type": "String",
                "Maximum": "100",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::PortfolioProductAssociation",
                "CloudResourceProperty": "AcceptLanguage",
                "CloudReference": "AWS::ServiceCatalog::PortfolioProductAssociation.AcceptLanguage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PortfolioId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "^[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::PortfolioProductAssociation",
                "CloudResourceProperty": "PortfolioId",
                "CloudReference": "AWS::ServiceCatalog::PortfolioProductAssociation.PortfolioId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ProductId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "^[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::PortfolioProductAssociation",
                "CloudResourceProperty": "ProductId",
                "CloudReference": "AWS::ServiceCatalog::PortfolioProductAssociation.ProductId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SourcePortfolioId": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "^[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::PortfolioProductAssociation",
                "CloudResourceProperty": "SourcePortfolioId",
                "CloudReference": "AWS::ServiceCatalog::PortfolioProductAssociation.SourcePortfolioId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ServiceCatalog::PortfolioProductAssociation.AcceptLanguage": {
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::PortfolioProductAssociation",
            "CloudResourceProperty": "AcceptLanguage",
            "CloudReference": "AWS::ServiceCatalog::PortfolioProductAssociation.AcceptLanguage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::PortfolioProductAssociation.PortfolioId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "Pattern": "^[a-zA-Z0-9_\\-]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::PortfolioProductAssociation",
            "CloudResourceProperty": "PortfolioId",
            "CloudReference": "AWS::ServiceCatalog::PortfolioProductAssociation.PortfolioId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::PortfolioProductAssociation.ProductId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "Pattern": "^[a-zA-Z0-9_\\-]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::PortfolioProductAssociation",
            "CloudResourceProperty": "ProductId",
            "CloudReference": "AWS::ServiceCatalog::PortfolioProductAssociation.ProductId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::PortfolioProductAssociation.SourcePortfolioId": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "Pattern": "^[a-zA-Z0-9_\\-]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::PortfolioProductAssociation",
            "CloudResourceProperty": "SourcePortfolioId",
            "CloudReference": "AWS::ServiceCatalog::PortfolioProductAssociation.SourcePortfolioId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::PortfolioShare": {
            "AcceptLanguage": {
                "Required": "No",
                "Type": "String",
                "Maximum": "100",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::PortfolioShare",
                "CloudResourceProperty": "AcceptLanguage",
                "CloudReference": "AWS::ServiceCatalog::PortfolioShare.AcceptLanguage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AccountId": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^[0-9]{12}$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::PortfolioShare",
                "CloudResourceProperty": "AccountId",
                "CloudReference": "AWS::ServiceCatalog::PortfolioShare.AccountId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PortfolioId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "^[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::PortfolioShare",
                "CloudResourceProperty": "PortfolioId",
                "CloudReference": "AWS::ServiceCatalog::PortfolioShare.PortfolioId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ServiceCatalog::PortfolioShare.AcceptLanguage": {
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::PortfolioShare",
            "CloudResourceProperty": "AcceptLanguage",
            "CloudReference": "AWS::ServiceCatalog::PortfolioShare.AcceptLanguage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::PortfolioShare.AccountId": {
            "Required": "Yes",
            "Type": "String",
            "Pattern": "^[0-9]{12}$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::PortfolioShare",
            "CloudResourceProperty": "AccountId",
            "CloudReference": "AWS::ServiceCatalog::PortfolioShare.AccountId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::PortfolioShare.PortfolioId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "Pattern": "^[a-zA-Z0-9_\\-]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::PortfolioShare",
            "CloudResourceProperty": "PortfolioId",
            "CloudReference": "AWS::ServiceCatalog::PortfolioShare.PortfolioId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::ResourceUpdateConstraint": {
            "AcceptLanguage": {
                "Required": "No",
                "Type": "String",
                "Maximum": "100",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::ResourceUpdateConstraint",
                "CloudResourceProperty": "AcceptLanguage",
                "CloudReference": "AWS::ServiceCatalog::ResourceUpdateConstraint.AcceptLanguage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "2000",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::ResourceUpdateConstraint",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ServiceCatalog::ResourceUpdateConstraint.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PortfolioId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "^[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::ResourceUpdateConstraint",
                "CloudResourceProperty": "PortfolioId",
                "CloudReference": "AWS::ServiceCatalog::ResourceUpdateConstraint.PortfolioId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ProductId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "^[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::ResourceUpdateConstraint",
                "CloudResourceProperty": "ProductId",
                "CloudReference": "AWS::ServiceCatalog::ResourceUpdateConstraint.ProductId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TagUpdateOnProvisionedProduct": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::ResourceUpdateConstraint",
                "CloudResourceProperty": "TagUpdateOnProvisionedProduct",
                "CloudReference": "AWS::ServiceCatalog::ResourceUpdateConstraint.TagUpdateOnProvisionedProduct",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ServiceCatalog::ResourceUpdateConstraint.AcceptLanguage": {
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::ResourceUpdateConstraint",
            "CloudResourceProperty": "AcceptLanguage",
            "CloudReference": "AWS::ServiceCatalog::ResourceUpdateConstraint.AcceptLanguage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::ResourceUpdateConstraint.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "2000",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::ResourceUpdateConstraint",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ServiceCatalog::ResourceUpdateConstraint.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::ResourceUpdateConstraint.PortfolioId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "Pattern": "^[a-zA-Z0-9_\\-]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::ResourceUpdateConstraint",
            "CloudResourceProperty": "PortfolioId",
            "CloudReference": "AWS::ServiceCatalog::ResourceUpdateConstraint.PortfolioId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::ResourceUpdateConstraint.ProductId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "100",
            "Pattern": "^[a-zA-Z0-9_\\-]*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::ResourceUpdateConstraint",
            "CloudResourceProperty": "ProductId",
            "CloudReference": "AWS::ServiceCatalog::ResourceUpdateConstraint.ProductId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::ResourceUpdateConstraint.TagUpdateOnProvisionedProduct": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::ResourceUpdateConstraint",
            "CloudResourceProperty": "TagUpdateOnProvisionedProduct",
            "CloudReference": "AWS::ServiceCatalog::ResourceUpdateConstraint.TagUpdateOnProvisionedProduct",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::StackSetConstraint": {
            "AcceptLanguage": {
                "Required": "No",
                "Type": "String",
                "Maximum": "100",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::StackSetConstraint",
                "CloudResourceProperty": "AcceptLanguage",
                "CloudReference": "AWS::ServiceCatalog::StackSetConstraint.AcceptLanguage",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "AccountList": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "AdminRole": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Description": {
                "Required": "Yes",
                "Type": "String",
                "Maximum": "2000",
                "UpdateRequires": "No interruption"
            },
            "ExecutionRole": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PortfolioId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "^[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "Replacement"
            },
            "ProductId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "^[a-zA-Z0-9_\\-]*",
                "UpdateRequires": "Replacement"
            },
            "RegionList": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "StackInstanceControl": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::ServiceCatalog::StackSetConstraint.AcceptLanguage": {
            "Required": "No",
            "Type": "String",
            "Maximum": "100",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::StackSetConstraint",
            "CloudResourceProperty": "AcceptLanguage",
            "CloudReference": "AWS::ServiceCatalog::StackSetConstraint.AcceptLanguage",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::TagOption": {
            "Active": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceCatalog::TagOption",
                "CloudResourceProperty": "Active",
                "CloudReference": "AWS::ServiceCatalog::TagOption.Active",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::TagOption",
                "CloudResourceProperty": "Key",
                "CloudReference": "AWS::ServiceCatalog::TagOption.Key",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::TagOption",
                "CloudResourceProperty": "Value",
                "CloudReference": "AWS::ServiceCatalog::TagOption.Value",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ServiceCatalog::TagOption.Active": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceCatalog::TagOption",
            "CloudResourceProperty": "Active",
            "CloudReference": "AWS::ServiceCatalog::TagOption.Active",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::TagOption.Key": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::TagOption",
            "CloudResourceProperty": "Key",
            "CloudReference": "AWS::ServiceCatalog::TagOption.Key",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::TagOption.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::TagOption",
            "CloudResourceProperty": "Value",
            "CloudReference": "AWS::ServiceCatalog::TagOption.Value",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::TagOptionAssociation": {
            "ResourceId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::TagOptionAssociation",
                "CloudResourceProperty": "ResourceId",
                "CloudReference": "AWS::ServiceCatalog::TagOptionAssociation.ResourceId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TagOptionId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceCatalog::TagOptionAssociation",
                "CloudResourceProperty": "TagOptionId",
                "CloudReference": "AWS::ServiceCatalog::TagOptionAssociation.TagOptionId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ServiceCatalog::TagOptionAssociation.ResourceId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::TagOptionAssociation",
            "CloudResourceProperty": "ResourceId",
            "CloudReference": "AWS::ServiceCatalog::TagOptionAssociation.ResourceId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceCatalog::TagOptionAssociation.TagOptionId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceCatalog::TagOptionAssociation",
            "CloudResourceProperty": "TagOptionId",
            "CloudReference": "AWS::ServiceCatalog::TagOptionAssociation.TagOptionId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceDiscovery::HttpNamespace": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "1024",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceDiscovery::HttpNamespace",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ServiceDiscovery::HttpNamespace.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Maximum": "1024",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceDiscovery::HttpNamespace",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::ServiceDiscovery::HttpNamespace.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ServiceDiscovery::HttpNamespace.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceDiscovery::HttpNamespace",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ServiceDiscovery::HttpNamespace.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceDiscovery::HttpNamespace.Name": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceDiscovery::HttpNamespace",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::ServiceDiscovery::HttpNamespace.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceDiscovery::Instance": {
            "InstanceAttributes": {},
            "InstanceId": {},
            "ServiceId": {
                "Required": "Yes",
                "Type": "String",
                "Maximum": "64",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceDiscovery::Instance",
                "CloudResourceProperty": "ServiceId",
                "CloudReference": "AWS::ServiceDiscovery::Instance.ServiceId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ServiceDiscovery::Instance.ServiceId": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "64",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceDiscovery::Instance",
            "CloudResourceProperty": "ServiceId",
            "CloudReference": "AWS::ServiceDiscovery::Instance.ServiceId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceDiscovery::PrivateDnsNamespace": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "1024",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceDiscovery::PrivateDnsNamespace",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ServiceDiscovery::PrivateDnsNamespace.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Maximum": "1024",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceDiscovery::PrivateDnsNamespace",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::ServiceDiscovery::PrivateDnsNamespace.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Vpc": {
                "Required": "Yes",
                "Type": "String",
                "Maximum": "64",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceDiscovery::PrivateDnsNamespace",
                "CloudResourceProperty": "Vpc",
                "CloudReference": "AWS::ServiceDiscovery::PrivateDnsNamespace.Vpc",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ServiceDiscovery::PrivateDnsNamespace.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceDiscovery::PrivateDnsNamespace",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ServiceDiscovery::PrivateDnsNamespace.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceDiscovery::PrivateDnsNamespace.Name": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceDiscovery::PrivateDnsNamespace",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::ServiceDiscovery::PrivateDnsNamespace.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceDiscovery::PrivateDnsNamespace.Vpc": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "64",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceDiscovery::PrivateDnsNamespace",
            "CloudResourceProperty": "Vpc",
            "CloudReference": "AWS::ServiceDiscovery::PrivateDnsNamespace.Vpc",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceDiscovery::PublicDnsNamespace": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "1024",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceDiscovery::PublicDnsNamespace",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ServiceDiscovery::PublicDnsNamespace.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Maximum": "1024",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceDiscovery::PublicDnsNamespace",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::ServiceDiscovery::PublicDnsNamespace.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ServiceDiscovery::PublicDnsNamespace.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceDiscovery::PublicDnsNamespace",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ServiceDiscovery::PublicDnsNamespace.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceDiscovery::PublicDnsNamespace.Name": {
            "Required": "Yes",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceDiscovery::PublicDnsNamespace",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::ServiceDiscovery::PublicDnsNamespace.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceDiscovery::Service": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "1024",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceDiscovery::Service",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::ServiceDiscovery::Service.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DnsConfig": {
                "Required": "No",
                "Type": "DnsConfig",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::ServiceDiscovery::Service",
                "CloudResourceProperty": "DnsConfig",
                "CloudReference": "AWS::ServiceDiscovery::Service.DnsConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DnsRecords": {
                        "Required": "Yes",
                        "Type": "List of [DnsRecord",
                        "UpdateRequires": "No interruption"
                    },
                    "NamespaceId": {
                        "Required": "No",
                        "Type": "String",
                        "Maximum": "64",
                        "UpdateRequires": "Replacement"
                    },
                    "RoutingPolicy": {}
                }
            },
            "HealthCheckConfig": {},
            "HealthCheckCustomConfig": {
                "Required": "No",
                "Type": "HealthCheckCustomConfig",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceDiscovery::Service",
                "CloudResourceProperty": "HealthCheckCustomConfig",
                "CloudReference": "AWS::ServiceDiscovery::Service.HealthCheckCustomConfig",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "FailureThreshold": {
                        "Required": "No",
                        "Type": "Double",
                        "Minimum": "1",
                        "Maximum": "10",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Pattern": "((?=^.{1,127}$)^([a-zA-Z0-9_][a-zA-Z0-9-_]{0,61}[a-zA-Z0-9_]|[a-zA-Z0-9])(\\.([a-zA-Z0-9_][a-zA-Z0-9-_]{0,61}[a-zA-Z0-9_]|[a-zA-Z0-9]))*$)|(^\\.$)",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceDiscovery::Service",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::ServiceDiscovery::Service.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "NamespaceId": {
                "Required": "No",
                "Type": "String",
                "Maximum": "64",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::ServiceDiscovery::Service",
                "CloudResourceProperty": "NamespaceId",
                "CloudReference": "AWS::ServiceDiscovery::Service.NamespaceId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::ServiceDiscovery::Service.Description": {
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceDiscovery::Service",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::ServiceDiscovery::Service.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceDiscovery::Service.DnsConfig": {
            "Required": "No",
            "Type": "DnsConfig",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::ServiceDiscovery::Service",
            "CloudResourceProperty": "DnsConfig",
            "CloudReference": "AWS::ServiceDiscovery::Service.DnsConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DnsRecords": {
                    "Required": "Yes",
                    "Type": "List of [DnsRecord",
                    "UpdateRequires": "No interruption"
                },
                "NamespaceId": {
                    "Required": "No",
                    "Type": "String",
                    "Maximum": "64",
                    "UpdateRequires": "Replacement"
                },
                "RoutingPolicy": {}
            }
        },
        "AWS::ServiceDiscovery::Service.HealthCheckCustomConfig": {
            "Required": "No",
            "Type": "HealthCheckCustomConfig",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceDiscovery::Service",
            "CloudResourceProperty": "HealthCheckCustomConfig",
            "CloudReference": "AWS::ServiceDiscovery::Service.HealthCheckCustomConfig",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "FailureThreshold": {
                    "Required": "No",
                    "Type": "Double",
                    "Minimum": "1",
                    "Maximum": "10",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::ServiceDiscovery::Service.Name": {
            "Required": "No",
            "Type": "String",
            "Pattern": "((?=^.{1,127}$)^([a-zA-Z0-9_][a-zA-Z0-9-_]{0,61}[a-zA-Z0-9_]|[a-zA-Z0-9])(\\.([a-zA-Z0-9_][a-zA-Z0-9-_]{0,61}[a-zA-Z0-9_]|[a-zA-Z0-9]))*$)|(^\\.$)",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceDiscovery::Service",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::ServiceDiscovery::Service.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::ServiceDiscovery::Service.NamespaceId": {
            "Required": "No",
            "Type": "String",
            "Maximum": "64",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::ServiceDiscovery::Service",
            "CloudResourceProperty": "NamespaceId",
            "CloudReference": "AWS::ServiceDiscovery::Service.NamespaceId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SES::ConfigurationSet": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SES::ConfigurationSet",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::SES::ConfigurationSet.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::SES::ConfigurationSet.Name": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SES::ConfigurationSet",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::SES::ConfigurationSet.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SES::ConfigurationSetEventDestination": {
            "ConfigurationSetName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SES::ConfigurationSetEventDestination",
                "CloudResourceProperty": "ConfigurationSetName",
                "CloudReference": "AWS::SES::ConfigurationSetEventDestination.ConfigurationSetName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EventDestination": {
                "Required": "Yes",
                "Type": "EventDestination",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SES::ConfigurationSetEventDestination",
                "CloudResourceProperty": "EventDestination",
                "CloudReference": "AWS::SES::ConfigurationSetEventDestination.EventDestination",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "CloudWatchDestination": {
                        "Required": "No",
                        "Type": "CloudWatchDestination",
                        "UpdateRequires": "No interruption"
                    },
                    "Enabled": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "KinesisFirehoseDestination": {
                        "Required": "No",
                        "Type": "KinesisFirehoseDestination",
                        "UpdateRequires": "No interruption"
                    },
                    "MatchingEventTypes": {
                        "Required": "Yes",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    },
                    "Name": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::SES::ConfigurationSetEventDestination.ConfigurationSetName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SES::ConfigurationSetEventDestination",
            "CloudResourceProperty": "ConfigurationSetName",
            "CloudReference": "AWS::SES::ConfigurationSetEventDestination.ConfigurationSetName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SES::ConfigurationSetEventDestination.EventDestination": {
            "Required": "Yes",
            "Type": "EventDestination",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SES::ConfigurationSetEventDestination",
            "CloudResourceProperty": "EventDestination",
            "CloudReference": "AWS::SES::ConfigurationSetEventDestination.EventDestination",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "CloudWatchDestination": {
                    "Required": "No",
                    "Type": "CloudWatchDestination",
                    "UpdateRequires": "No interruption"
                },
                "Enabled": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "KinesisFirehoseDestination": {
                    "Required": "No",
                    "Type": "KinesisFirehoseDestination",
                    "UpdateRequires": "No interruption"
                },
                "MatchingEventTypes": {
                    "Required": "Yes",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                },
                "Name": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::SES::ReceiptFilter": {
            "Filter": {
                "Required": "Yes",
                "Type": "Filter",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SES::ReceiptFilter",
                "CloudResourceProperty": "Filter",
                "CloudReference": "AWS::SES::ReceiptFilter.Filter",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "IpFilter": {
                        "Required": "Yes",
                        "Type": "IpFilter",
                        "UpdateRequires": "No interruption"
                    },
                    "Name": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::SES::ReceiptFilter.Filter": {
            "Required": "Yes",
            "Type": "Filter",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SES::ReceiptFilter",
            "CloudResourceProperty": "Filter",
            "CloudReference": "AWS::SES::ReceiptFilter.Filter",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "IpFilter": {
                    "Required": "Yes",
                    "Type": "IpFilter",
                    "UpdateRequires": "No interruption"
                },
                "Name": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::SES::ReceiptRule": {
            "After": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SES::ReceiptRule",
                "CloudResourceProperty": "After",
                "CloudReference": "AWS::SES::ReceiptRule.After",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Rule": {
                "Required": "Yes",
                "Type": "Rule",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SES::ReceiptRule",
                "CloudResourceProperty": "Rule",
                "CloudReference": "AWS::SES::ReceiptRule.Rule",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Actions": {
                        "Required": "No",
                        "Type": "List of [Action",
                        "UpdateRequires": "No interruption"
                    },
                    "Enabled": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "Name": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "Recipients": {
                        "Required": "No",
                        "Type": "List of String",
                        "UpdateRequires": "No interruption"
                    },
                    "ScanEnabled": {
                        "Required": "No",
                        "AllowedValues": [
                            "True",
                            "False"
                        ],
                        "Type": "Boolean",
                        "UpdateRequires": "No interruption"
                    },
                    "TlsPolicy": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "RuleSetName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SES::ReceiptRule",
                "CloudResourceProperty": "RuleSetName",
                "CloudReference": "AWS::SES::ReceiptRule.RuleSetName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::SES::ReceiptRule.After": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SES::ReceiptRule",
            "CloudResourceProperty": "After",
            "CloudReference": "AWS::SES::ReceiptRule.After",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SES::ReceiptRule.Rule": {
            "Required": "Yes",
            "Type": "Rule",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SES::ReceiptRule",
            "CloudResourceProperty": "Rule",
            "CloudReference": "AWS::SES::ReceiptRule.Rule",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Actions": {
                    "Required": "No",
                    "Type": "List of [Action",
                    "UpdateRequires": "No interruption"
                },
                "Enabled": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "Name": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "Recipients": {
                    "Required": "No",
                    "Type": "List of String",
                    "UpdateRequires": "No interruption"
                },
                "ScanEnabled": {
                    "Required": "No",
                    "AllowedValues": [
                        "True",
                        "False"
                    ],
                    "Type": "Boolean",
                    "UpdateRequires": "No interruption"
                },
                "TlsPolicy": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::SES::ReceiptRule.RuleSetName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SES::ReceiptRule",
            "CloudResourceProperty": "RuleSetName",
            "CloudReference": "AWS::SES::ReceiptRule.RuleSetName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SES::ReceiptRuleSet": {
            "RuleSetName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SES::ReceiptRuleSet",
                "CloudResourceProperty": "RuleSetName",
                "CloudReference": "AWS::SES::ReceiptRuleSet.RuleSetName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::SES::ReceiptRuleSet.RuleSetName": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SES::ReceiptRuleSet",
            "CloudResourceProperty": "RuleSetName",
            "CloudReference": "AWS::SES::ReceiptRuleSet.RuleSetName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SES::Template": {
            "Template": {
                "Required": "No",
                "Type": "Template",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SES::Template",
                "CloudResourceProperty": "Template",
                "CloudReference": "AWS::SES::Template.Template",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "HtmlPart": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "SubjectPart": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "TemplateName": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "Replacement"
                    },
                    "TextPart": {
                        "Required": "No",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::SES::Template.Template": {
            "Required": "No",
            "Type": "Template",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SES::Template",
            "CloudResourceProperty": "Template",
            "CloudReference": "AWS::SES::Template.Template",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "HtmlPart": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "SubjectPart": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "TemplateName": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "Replacement"
                },
                "TextPart": {
                    "Required": "No",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::SNS::Subscription": {
            "DeliveryPolicy": {},
            "Endpoint": {},
            "FilterPolicy": {},
            "Protocol": {},
            "RawMessageDelivery": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Region": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SNS::Subscription",
                "CloudResourceProperty": "Region",
                "CloudReference": "AWS::SNS::Subscription.Region",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TopicArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SNS::Subscription",
                "CloudResourceProperty": "TopicArn",
                "CloudReference": "AWS::SNS::Subscription.TopicArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::SNS::Subscription.Region": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SNS::Subscription",
            "CloudResourceProperty": "Region",
            "CloudReference": "AWS::SNS::Subscription.Region",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SNS::Subscription.TopicArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SNS::Subscription",
            "CloudResourceProperty": "TopicArn",
            "CloudReference": "AWS::SNS::Subscription.TopicArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::Association": {
            "AssociationName": {
                "Required": "No",
                "Type": "String",
                "Pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::Association",
                "CloudResourceProperty": "AssociationName",
                "CloudReference": "AWS::SSM::Association.AssociationName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DocumentVersion": {
                "Required": "No",
                "Type": "String",
                "Pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::Association",
                "CloudResourceProperty": "DocumentVersion",
                "CloudReference": "AWS::SSM::Association.DocumentVersion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "InstanceId": {
                "Required": "Conditional",
                "Type": "String",
                "Pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SSM::Association",
                "CloudResourceProperty": "InstanceId",
                "CloudReference": "AWS::SSM::Association.InstanceId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SSM::Association",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::SSM::Association.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "OutputLocation": {
                "Required": "No",
                "Type": "InstanceAssociationOutputLocation",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::Association",
                "CloudResourceProperty": "OutputLocation",
                "CloudReference": "AWS::SSM::Association.OutputLocation",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "S3Location": {
                        "Required": "No",
                        "Type": "S3OutputLocation",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Parameters": {
                "Required": "No",
                "Type": "Map of [ParameterValues",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::Association",
                "CloudResourceProperty": "Parameters",
                "CloudReference": "AWS::SSM::Association.Parameters",
                "CloudResourceItemType": "Map",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ParameterValues": {
                        "Required": "Yes",
                        "Type": "List",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "ScheduleExpression": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::Association",
                "CloudResourceProperty": "ScheduleExpression",
                "CloudReference": "AWS::SSM::Association.ScheduleExpression",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Targets": {
                "Required": "Conditional",
                "Type": "List of [Target",
                "Maximum": "5",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SSM::Association",
                "CloudResourceProperty": "Targets",
                "CloudReference": "AWS::SSM::Association.Targets",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Key": {},
                    "Values": {}
                }
            }
        },
        "AWS::SSM::Association.AssociationName": {
            "Required": "No",
            "Type": "String",
            "Pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::Association",
            "CloudResourceProperty": "AssociationName",
            "CloudReference": "AWS::SSM::Association.AssociationName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::Association.DocumentVersion": {
            "Required": "No",
            "Type": "String",
            "Pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::Association",
            "CloudResourceProperty": "DocumentVersion",
            "CloudReference": "AWS::SSM::Association.DocumentVersion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::Association.InstanceId": {
            "Required": "Conditional",
            "Type": "String",
            "Pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SSM::Association",
            "CloudResourceProperty": "InstanceId",
            "CloudReference": "AWS::SSM::Association.InstanceId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::Association.Name": {
            "Required": "Yes",
            "Type": "String",
            "Pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SSM::Association",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::SSM::Association.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::Association.OutputLocation": {
            "Required": "No",
            "Type": "InstanceAssociationOutputLocation",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::Association",
            "CloudResourceProperty": "OutputLocation",
            "CloudReference": "AWS::SSM::Association.OutputLocation",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "S3Location": {
                    "Required": "No",
                    "Type": "S3OutputLocation",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::SSM::Association.Parameters": {
            "Required": "No",
            "Type": "Map of [ParameterValues",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::Association",
            "CloudResourceProperty": "Parameters",
            "CloudReference": "AWS::SSM::Association.Parameters",
            "CloudResourceItemType": "Map",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ParameterValues": {
                    "Required": "Yes",
                    "Type": "List",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::SSM::Association.ScheduleExpression": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::Association",
            "CloudResourceProperty": "ScheduleExpression",
            "CloudReference": "AWS::SSM::Association.ScheduleExpression",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::Association.Targets": {
            "Required": "Conditional",
            "Type": "List of [Target",
            "Maximum": "5",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SSM::Association",
            "CloudResourceProperty": "Targets",
            "CloudReference": "AWS::SSM::Association.Targets",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Key": {},
                "Values": {}
            }
        },
        "AWS::SSM::Document": {
            "Content": {
                "Required": "Yes",
                "Type": "Json",
                "Minimum": "1",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SSM::Document",
                "CloudResourceProperty": "Content",
                "CloudReference": "AWS::SSM::Document.Content",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DocumentType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Automation",
                    "Command",
                    "Package",
                    "Policy",
                    "Session"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SSM::Document",
                "CloudResourceProperty": "DocumentType",
                "CloudReference": "AWS::SSM::Document.DocumentType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "1000",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::Document",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::SSM::Document.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::SSM::Document.Content": {
            "Required": "Yes",
            "Type": "Json",
            "Minimum": "1",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SSM::Document",
            "CloudResourceProperty": "Content",
            "CloudReference": "AWS::SSM::Document.Content",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::Document.DocumentType": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "Automation",
                "Command",
                "Package",
                "Policy",
                "Session"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SSM::Document",
            "CloudResourceProperty": "DocumentType",
            "CloudReference": "AWS::SSM::Document.DocumentType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::Document.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "Maximum": "1000",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::Document",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::SSM::Document.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindow": {
            "AllowUnassociatedTargets": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindow",
                "CloudResourceProperty": "AllowUnassociatedTargets",
                "CloudReference": "AWS::SSM::MaintenanceWindow.AllowUnassociatedTargets",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Cutoff": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "0",
                "Maximum": "23",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindow",
                "CloudResourceProperty": "Cutoff",
                "CloudReference": "AWS::SSM::MaintenanceWindow.Cutoff",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindow",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::SSM::MaintenanceWindow.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Duration": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "24",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindow",
                "CloudResourceProperty": "Duration",
                "CloudReference": "AWS::SSM::MaintenanceWindow.Duration",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "EndDate": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindow",
                "CloudResourceProperty": "EndDate",
                "CloudReference": "AWS::SSM::MaintenanceWindow.EndDate",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "128",
                "Pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindow",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::SSM::MaintenanceWindow.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Schedule": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindow",
                "CloudResourceProperty": "Schedule",
                "CloudReference": "AWS::SSM::MaintenanceWindow.Schedule",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ScheduleTimezone": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindow",
                "CloudResourceProperty": "ScheduleTimezone",
                "CloudReference": "AWS::SSM::MaintenanceWindow.ScheduleTimezone",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "StartDate": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindow",
                "CloudResourceProperty": "StartDate",
                "CloudReference": "AWS::SSM::MaintenanceWindow.StartDate",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "1000",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindow",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::SSM::MaintenanceWindow.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::SSM::MaintenanceWindow.AllowUnassociatedTargets": {
            "Required": "Yes",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindow",
            "CloudResourceProperty": "AllowUnassociatedTargets",
            "CloudReference": "AWS::SSM::MaintenanceWindow.AllowUnassociatedTargets",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindow.Cutoff": {
            "Required": "Yes",
            "Type": "Integer",
            "Minimum": "0",
            "Maximum": "23",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindow",
            "CloudResourceProperty": "Cutoff",
            "CloudReference": "AWS::SSM::MaintenanceWindow.Cutoff",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindow.Description": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindow",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::SSM::MaintenanceWindow.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindow.Duration": {
            "Required": "Yes",
            "Type": "Integer",
            "Minimum": "1",
            "Maximum": "24",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindow",
            "CloudResourceProperty": "Duration",
            "CloudReference": "AWS::SSM::MaintenanceWindow.Duration",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindow.EndDate": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindow",
            "CloudResourceProperty": "EndDate",
            "CloudReference": "AWS::SSM::MaintenanceWindow.EndDate",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindow.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "3",
            "Maximum": "128",
            "Pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindow",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::SSM::MaintenanceWindow.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindow.Schedule": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "256",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindow",
            "CloudResourceProperty": "Schedule",
            "CloudReference": "AWS::SSM::MaintenanceWindow.Schedule",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindow.ScheduleTimezone": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindow",
            "CloudResourceProperty": "ScheduleTimezone",
            "CloudReference": "AWS::SSM::MaintenanceWindow.ScheduleTimezone",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindow.StartDate": {
            "Required": "No",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindow",
            "CloudResourceProperty": "StartDate",
            "CloudReference": "AWS::SSM::MaintenanceWindow.StartDate",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindow.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "Maximum": "1000",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindow",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::SSM::MaintenanceWindow.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTarget": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTarget",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::SSM::MaintenanceWindowTarget.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "128",
                "Pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTarget",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::SSM::MaintenanceWindowTarget.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "OwnerInformation": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTarget",
                "CloudResourceProperty": "OwnerInformation",
                "CloudReference": "AWS::SSM::MaintenanceWindowTarget.OwnerInformation",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ResourceType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "INSTANCE"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTarget",
                "CloudResourceProperty": "ResourceType",
                "CloudReference": "AWS::SSM::MaintenanceWindowTarget.ResourceType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Targets": {
                "Targets`  <a name=\"cfn-ssm-maintenancewindowtarget-targets\"></a>\nThe targets to register with the maintenance window\\. In other words, the instances to run commands on when the maintenance window runs\\.  \nYou can specify targets using either instance IDs or tags that have been applied to instances\\.  \n **Example 1*": "Specify instance IDs  \n `Key=InstanceIds,Values=instance-id-1,instance-id-2,instance-id-3 `   \n **Example 2*",
                "Required": "Yes",
                "Type": "List",
                "Maximum": "5",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTarget",
                "CloudResourceProperty": "Targets",
                "CloudReference": "AWS::SSM::MaintenanceWindowTarget.Targets",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "WindowId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "20",
                "Pattern": "^mw-[0-9a-f]{17}$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTarget",
                "CloudResourceProperty": "WindowId",
                "CloudReference": "AWS::SSM::MaintenanceWindowTarget.WindowId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::SSM::MaintenanceWindowTarget.Description": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTarget",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::SSM::MaintenanceWindowTarget.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTarget.Name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "3",
            "Maximum": "128",
            "Pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTarget",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::SSM::MaintenanceWindowTarget.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTarget.OwnerInformation": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTarget",
            "CloudResourceProperty": "OwnerInformation",
            "CloudReference": "AWS::SSM::MaintenanceWindowTarget.OwnerInformation",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTarget.ResourceType": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "INSTANCE"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTarget",
            "CloudResourceProperty": "ResourceType",
            "CloudReference": "AWS::SSM::MaintenanceWindowTarget.ResourceType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTarget.Targets": {
            "Targets`  <a name=\"cfn-ssm-maintenancewindowtarget-targets\"></a>\nThe targets to register with the maintenance window\\. In other words, the instances to run commands on when the maintenance window runs\\.  \nYou can specify targets using either instance IDs or tags that have been applied to instances\\.  \n **Example 1*": "Specify instance IDs  \n `Key=InstanceIds,Values=instance-id-1,instance-id-2,instance-id-3 `   \n **Example 2*",
            "Required": "Yes",
            "Type": "List",
            "Maximum": "5",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTarget",
            "CloudResourceProperty": "Targets",
            "CloudReference": "AWS::SSM::MaintenanceWindowTarget.Targets",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTarget.WindowId": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "20",
            "Maximum": "20",
            "Pattern": "^mw-[0-9a-f]{17}$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTarget",
            "CloudResourceProperty": "WindowId",
            "CloudReference": "AWS::SSM::MaintenanceWindowTarget.WindowId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "LoggingInfo": {
                "Required": "No",
                "Type": "LoggingInfo",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "LoggingInfo",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.LoggingInfo",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Region": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "3",
                        "Maximum": "20",
                        "UpdateRequires": "No interruption"
                    },
                    "S3Bucket": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "3",
                        "Maximum": "63",
                        "UpdateRequires": "No interruption"
                    },
                    "S3Prefix": {
                        "Required": "No",
                        "Type": "String",
                        "Maximum": "500",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "MaxConcurrency": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "7",
                "Pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "MaxConcurrency",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.MaxConcurrency",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MaxErrors": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "7",
                "Pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "MaxErrors",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.MaxErrors",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "128",
                "Pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Priority": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "0",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "Priority",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.Priority",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ServiceRoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "ServiceRoleArn",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.ServiceRoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Targets": {
                "Required": "Yes",
                "Type": "List of [Target",
                "Maximum": "5",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "Targets",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.Targets",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Key": {},
                    "Values": {}
                }
            },
            "TaskArn": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1600",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "TaskArn",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.TaskArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TaskInvocationParameters": {
                "Required": "No",
                "Type": "TaskInvocationParameters",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "TaskInvocationParameters",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.TaskInvocationParameters",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "MaintenanceWindowAutomationParameters": {
                        "Required": "No",
                        "Type": "MaintenanceWindowAutomationParameters",
                        "UpdateRequires": "No interruption"
                    },
                    "MaintenanceWindowLambdaParameters": {
                        "Required": "No",
                        "Type": "MaintenanceWindowLambdaParameters",
                        "UpdateRequires": "No interruption"
                    },
                    "MaintenanceWindowRunCommandParameters": {
                        "Required": "No",
                        "Type": "MaintenanceWindowRunCommandParameters",
                        "UpdateRequires": "No interruption"
                    },
                    "MaintenanceWindowStepFunctionsParameters": {
                        "Required": "No",
                        "Type": "MaintenanceWindowStepFunctionsParameters",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "TaskParameters": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "TaskParameters",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.TaskParameters",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "TaskType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "AUTOMATION",
                    "LAMBDA",
                    "RUN_COMMAND",
                    "STEP_FUNCTIONS"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "TaskType",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.TaskType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "WindowId": {
                "Required": "No",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "20",
                "Pattern": "^mw-[0-9a-f]{17}$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
                "CloudResourceProperty": "WindowId",
                "CloudReference": "AWS::SSM::MaintenanceWindowTask.WindowId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-description": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-description",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-logginginfo": {
            "Required": "No",
            "Type": "LoggingInfo",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-logginginfo",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-logginginfo",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Region": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "3",
                    "Maximum": "20",
                    "UpdateRequires": "No interruption"
                },
                "S3Bucket": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "3",
                    "Maximum": "63",
                    "UpdateRequires": "No interruption"
                },
                "S3Prefix": {
                    "Required": "No",
                    "Type": "String",
                    "Maximum": "500",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-maxconcurrency": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "7",
            "Pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-maxconcurrency",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-maxconcurrency",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-maxerrors": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "7",
            "Pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-maxerrors",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-maxerrors",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "3",
            "Maximum": "128",
            "Pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-name",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-priority": {
            "Required": "Yes",
            "Type": "Integer",
            "Minimum": "0",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-priority",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-priority",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-servicerolearn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-servicerolearn",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-servicerolearn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-targets": {
            "Required": "Yes",
            "Type": "List of [Target",
            "Maximum": "5",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-targets",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-targets",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Key": {},
                "Values": {}
            }
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskarn": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-taskarn",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskarn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskinvocationparameters": {
            "Required": "No",
            "Type": "TaskInvocationParameters",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-taskinvocationparameters",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskinvocationparameters",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "MaintenanceWindowAutomationParameters": {
                    "Required": "No",
                    "Type": "MaintenanceWindowAutomationParameters",
                    "UpdateRequires": "No interruption"
                },
                "MaintenanceWindowLambdaParameters": {
                    "Required": "No",
                    "Type": "MaintenanceWindowLambdaParameters",
                    "UpdateRequires": "No interruption"
                },
                "MaintenanceWindowRunCommandParameters": {
                    "Required": "No",
                    "Type": "MaintenanceWindowRunCommandParameters",
                    "UpdateRequires": "No interruption"
                },
                "MaintenanceWindowStepFunctionsParameters": {
                    "Required": "No",
                    "Type": "MaintenanceWindowStepFunctionsParameters",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskparameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-taskparameters",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-taskparameters",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-tasktype": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "AUTOMATION",
                "LAMBDA",
                "RUN_COMMAND",
                "STEP_FUNCTIONS"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-tasktype",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-tasktype",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-windowid": {
            "Required": "No",
            "Type": "String",
            "Minimum": "20",
            "Maximum": "20",
            "Pattern": "^mw-[0-9a-f]{17}$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ssm-maintenancewindowtask-windowid",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ssm-maintenancewindowtask-windowid",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.Description": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.LoggingInfo": {
            "Required": "No",
            "Type": "LoggingInfo",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "LoggingInfo",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.LoggingInfo",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Region": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "3",
                    "Maximum": "20",
                    "UpdateRequires": "No interruption"
                },
                "S3Bucket": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "3",
                    "Maximum": "63",
                    "UpdateRequires": "No interruption"
                },
                "S3Prefix": {
                    "Required": "No",
                    "Type": "String",
                    "Maximum": "500",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::SSM::MaintenanceWindowTask.MaxConcurrency": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "7",
            "Pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "MaxConcurrency",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.MaxConcurrency",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.MaxErrors": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "7",
            "Pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "MaxErrors",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.MaxErrors",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.Name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "3",
            "Maximum": "128",
            "Pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.Priority": {
            "Required": "Yes",
            "Type": "Integer",
            "Minimum": "0",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "Priority",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.Priority",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.ServiceRoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "ServiceRoleArn",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.ServiceRoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.Targets": {
            "Required": "Yes",
            "Type": "List of [Target",
            "Maximum": "5",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "Targets",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.Targets",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Key": {},
                "Values": {}
            }
        },
        "AWS::SSM::MaintenanceWindowTask.TaskArn": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "1600",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "TaskArn",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.TaskArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.TaskInvocationParameters": {
            "Required": "No",
            "Type": "TaskInvocationParameters",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "TaskInvocationParameters",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.TaskInvocationParameters",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "MaintenanceWindowAutomationParameters": {
                    "Required": "No",
                    "Type": "MaintenanceWindowAutomationParameters",
                    "UpdateRequires": "No interruption"
                },
                "MaintenanceWindowLambdaParameters": {
                    "Required": "No",
                    "Type": "MaintenanceWindowLambdaParameters",
                    "UpdateRequires": "No interruption"
                },
                "MaintenanceWindowRunCommandParameters": {
                    "Required": "No",
                    "Type": "MaintenanceWindowRunCommandParameters",
                    "UpdateRequires": "No interruption"
                },
                "MaintenanceWindowStepFunctionsParameters": {
                    "Required": "No",
                    "Type": "MaintenanceWindowStepFunctionsParameters",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::SSM::MaintenanceWindowTask.TaskParameters": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "TaskParameters",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.TaskParameters",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.TaskType": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "AUTOMATION",
                "LAMBDA",
                "RUN_COMMAND",
                "STEP_FUNCTIONS"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "TaskType",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.TaskType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::MaintenanceWindowTask.WindowId": {
            "Required": "No",
            "Type": "String",
            "Minimum": "20",
            "Maximum": "20",
            "Pattern": "^mw-[0-9a-f]{17}$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SSM::MaintenanceWindowTask",
            "CloudResourceProperty": "WindowId",
            "CloudReference": "AWS::SSM::MaintenanceWindowTask.WindowId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::Parameter": {
            "AllowedPattern": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "1024",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::Parameter",
                "CloudResourceProperty": "AllowedPattern",
                "CloudReference": "AWS::SSM::Parameter.AllowedPattern",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "1024",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::Parameter",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::SSM::Parameter.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SSM::Parameter",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::SSM::Parameter.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Policies": {},
            "Tags": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::Parameter",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::SSM::Parameter.Tags",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tier": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Advanced",
                    "Standard"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::Parameter",
                "CloudResourceProperty": "Tier",
                "CloudReference": "AWS::SSM::Parameter.Tier",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "SecureString",
                    "String",
                    "StringList"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::Parameter",
                "CloudResourceProperty": "Type",
                "CloudReference": "AWS::SSM::Parameter.Type",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::Parameter",
                "CloudResourceProperty": "Value",
                "CloudReference": "AWS::SSM::Parameter.Value",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::SSM::Parameter.AllowedPattern": {
            "Required": "No",
            "Type": "String",
            "Minimum": "0",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::Parameter",
            "CloudResourceProperty": "AllowedPattern",
            "CloudReference": "AWS::SSM::Parameter.AllowedPattern",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::Parameter.Description": {
            "Required": "No",
            "Type": "String",
            "Minimum": "0",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::Parameter",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::SSM::Parameter.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::Parameter.Name": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "2048",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SSM::Parameter",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::SSM::Parameter.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::Parameter.Tags": {
            "Required": "No",
            "Type": "Json",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::Parameter",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::SSM::Parameter.Tags",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::Parameter.Tier": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "Advanced",
                "Standard"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::Parameter",
            "CloudResourceProperty": "Tier",
            "CloudReference": "AWS::SSM::Parameter.Tier",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::Parameter.Type": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "SecureString",
                "String",
                "StringList"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::Parameter",
            "CloudResourceProperty": "Type",
            "CloudReference": "AWS::SSM::Parameter.Type",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::Parameter.Value": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::Parameter",
            "CloudResourceProperty": "Value",
            "CloudReference": "AWS::SSM::Parameter.Value",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::PatchBaseline": {
            "ApprovalRules": {
                "Required": "No",
                "Type": "RuleGroup",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::PatchBaseline",
                "CloudResourceProperty": "ApprovalRules",
                "CloudReference": "AWS::SSM::PatchBaseline.ApprovalRules",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "PatchRules": {
                        "Required": "No",
                        "Type": "List of [Rule",
                        "Maximum": "10",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "ApprovedPatches": {},
            "ApprovedPatchesComplianceLevel": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "CRITICAL",
                    "HIGH",
                    "INFORMATIONAL",
                    "LOW",
                    "MEDIUM",
                    "UNSPECIFIED"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::PatchBaseline",
                "CloudResourceProperty": "ApprovedPatchesComplianceLevel",
                "CloudReference": "AWS::SSM::PatchBaseline.ApprovedPatchesComplianceLevel",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ApprovedPatchesEnableNonSecurity": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::PatchBaseline",
                "CloudResourceProperty": "ApprovedPatchesEnableNonSecurity",
                "CloudReference": "AWS::SSM::PatchBaseline.ApprovedPatchesEnableNonSecurity",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::PatchBaseline",
                "CloudResourceProperty": "Description",
                "CloudReference": "AWS::SSM::PatchBaseline.Description",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "GlobalFilters": {
                "Required": "No",
                "Type": "PatchFilterGroup",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::PatchBaseline",
                "CloudResourceProperty": "GlobalFilters",
                "CloudReference": "AWS::SSM::PatchBaseline.GlobalFilters",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "PatchFilters": {
                        "Required": "No",
                        "Type": "List of [PatchFilter",
                        "Maximum": "4",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "128",
                "Pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::SSM::PatchBaseline",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::SSM::PatchBaseline.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "OperatingSystem": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "AMAZON_LINUX",
                    "AMAZON_LINUX_2",
                    "CENTOS",
                    "REDHAT_ENTERPRISE_LINUX",
                    "SUSE",
                    "UBUNTU",
                    "WINDOWS"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SSM::PatchBaseline",
                "CloudResourceProperty": "OperatingSystem",
                "CloudReference": "AWS::SSM::PatchBaseline.OperatingSystem",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "PatchGroups": {
                "Required": "No",
                "Type": "List of String",
                "Minimum": "1",
                "Maximum": "256",
                "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                "UpdateRequires": "No interruption"
            },
            "RejectedPatches": {},
            "RejectedPatchesAction": {
                "RejectedPatchesAction`  <a name=\"cfn-ssm-patchbaseline-rejectedpatchesaction\"></a>\nThe action for Patch Manager to take on patches included in the RejectedPackages list\\.  \n+  **ALLOW\\_AS\\_DEPENDENCY*": "A package in the Rejected patches list is installed only if it is a dependency of another package\\. It is considered compliant with the patch baseline, and its status is reported as *InstalledOther*\\. This is the default action if no option is specified\\.\n+  **BLOCK*",
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "ALLOW_AS_DEPENDENCY",
                    "BLOCK"
                ],
                "UpdateRequires": "No interruption"
            },
            "Sources": {
                "Required": "No",
                "Type": "List of [PatchSource",
                "Maximum": "20",
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "1000",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::SSM::PatchBaseline.ApprovalRules": {
            "Required": "No",
            "Type": "RuleGroup",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::PatchBaseline",
            "CloudResourceProperty": "ApprovalRules",
            "CloudReference": "AWS::SSM::PatchBaseline.ApprovalRules",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "PatchRules": {
                    "Required": "No",
                    "Type": "List of [Rule",
                    "Maximum": "10",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::SSM::PatchBaseline.ApprovedPatchesComplianceLevel": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "CRITICAL",
                "HIGH",
                "INFORMATIONAL",
                "LOW",
                "MEDIUM",
                "UNSPECIFIED"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::PatchBaseline",
            "CloudResourceProperty": "ApprovedPatchesComplianceLevel",
            "CloudReference": "AWS::SSM::PatchBaseline.ApprovedPatchesComplianceLevel",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::PatchBaseline.ApprovedPatchesEnableNonSecurity": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::PatchBaseline",
            "CloudResourceProperty": "ApprovedPatchesEnableNonSecurity",
            "CloudReference": "AWS::SSM::PatchBaseline.ApprovedPatchesEnableNonSecurity",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::PatchBaseline.Description": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "1024",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::PatchBaseline",
            "CloudResourceProperty": "Description",
            "CloudReference": "AWS::SSM::PatchBaseline.Description",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::PatchBaseline.GlobalFilters": {
            "Required": "No",
            "Type": "PatchFilterGroup",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::PatchBaseline",
            "CloudResourceProperty": "GlobalFilters",
            "CloudReference": "AWS::SSM::PatchBaseline.GlobalFilters",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "PatchFilters": {
                    "Required": "No",
                    "Type": "List of [PatchFilter",
                    "Maximum": "4",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::SSM::PatchBaseline.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "3",
            "Maximum": "128",
            "Pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::SSM::PatchBaseline",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::SSM::PatchBaseline.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::PatchBaseline.OperatingSystem": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "AMAZON_LINUX",
                "AMAZON_LINUX_2",
                "CENTOS",
                "REDHAT_ENTERPRISE_LINUX",
                "SUSE",
                "UBUNTU",
                "WINDOWS"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SSM::PatchBaseline",
            "CloudResourceProperty": "OperatingSystem",
            "CloudReference": "AWS::SSM::PatchBaseline.OperatingSystem",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::ResourceDataSync": {
            "BucketName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SSM::ResourceDataSync",
                "CloudResourceProperty": "BucketName",
                "CloudReference": "AWS::SSM::ResourceDataSync.BucketName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "BucketPrefix": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SSM::ResourceDataSync",
                "CloudResourceProperty": "BucketPrefix",
                "CloudReference": "AWS::SSM::ResourceDataSync.BucketPrefix",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "BucketRegion": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "64",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SSM::ResourceDataSync",
                "CloudResourceProperty": "BucketRegion",
                "CloudReference": "AWS::SSM::ResourceDataSync.BucketRegion",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "KMSKeyArn": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "512",
                "Pattern": "arn:.*",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SSM::ResourceDataSync",
                "CloudResourceProperty": "KMSKeyArn",
                "CloudReference": "AWS::SSM::ResourceDataSync.KMSKeyArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SyncFormat": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "JsonSerDe"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SSM::ResourceDataSync",
                "CloudResourceProperty": "SyncFormat",
                "CloudReference": "AWS::SSM::ResourceDataSync.SyncFormat",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SyncName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "64",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::SSM::ResourceDataSync",
                "CloudResourceProperty": "SyncName",
                "CloudReference": "AWS::SSM::ResourceDataSync.SyncName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::SSM::ResourceDataSync.BucketName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "2048",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SSM::ResourceDataSync",
            "CloudResourceProperty": "BucketName",
            "CloudReference": "AWS::SSM::ResourceDataSync.BucketName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::ResourceDataSync.BucketPrefix": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "256",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SSM::ResourceDataSync",
            "CloudResourceProperty": "BucketPrefix",
            "CloudReference": "AWS::SSM::ResourceDataSync.BucketPrefix",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::ResourceDataSync.BucketRegion": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "64",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SSM::ResourceDataSync",
            "CloudResourceProperty": "BucketRegion",
            "CloudReference": "AWS::SSM::ResourceDataSync.BucketRegion",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::ResourceDataSync.KMSKeyArn": {
            "Required": "No",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "512",
            "Pattern": "arn:.*",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SSM::ResourceDataSync",
            "CloudResourceProperty": "KMSKeyArn",
            "CloudReference": "AWS::SSM::ResourceDataSync.KMSKeyArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::ResourceDataSync.SyncFormat": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "JsonSerDe"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SSM::ResourceDataSync",
            "CloudResourceProperty": "SyncFormat",
            "CloudReference": "AWS::SSM::ResourceDataSync.SyncFormat",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::SSM::ResourceDataSync.SyncName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "64",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::SSM::ResourceDataSync",
            "CloudResourceProperty": "SyncName",
            "CloudReference": "AWS::SSM::ResourceDataSync.SyncName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::StepFunctions::Activity": {
            "Name": {}
        },
        "AWS::StepFunctions::StateMachine": {
            "DefinitionString": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::StepFunctions::StateMachine",
                "CloudResourceProperty": "DefinitionString",
                "CloudReference": "AWS::StepFunctions::StateMachine.DefinitionString",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::StepFunctions::StateMachine",
                "CloudResourceProperty": "RoleArn",
                "CloudReference": "AWS::StepFunctions::StateMachine.RoleArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "StateMachineName": {}
        },
        "AWS::StepFunctions::StateMachine.DefinitionString": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::StepFunctions::StateMachine",
            "CloudResourceProperty": "DefinitionString",
            "CloudReference": "AWS::StepFunctions::StateMachine.DefinitionString",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::StepFunctions::StateMachine.RoleArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::StepFunctions::StateMachine",
            "CloudResourceProperty": "RoleArn",
            "CloudReference": "AWS::StepFunctions::StateMachine.RoleArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Transfer::Server": {
            "EndpointDetails": {
                "Required": "No",
                "Type": "EndpointDetails",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Transfer::Server",
                "CloudResourceProperty": "EndpointDetails",
                "CloudReference": "AWS::Transfer::Server.EndpointDetails",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "VpcEndpointId": {
                        "Required": "Yes",
                        "Type": "String",
                        "Pattern": "^vpce-[0-9a-f]{17}$",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "EndpointType": {
                "Required": "Conditional",
                "Type": "String",
                "AllowedValues": [
                    "PUBLIC",
                    "VPC_ENDPOINT"
                ],
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Transfer::Server",
                "CloudResourceProperty": "EndpointType",
                "CloudReference": "AWS::Transfer::Server.EndpointType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "IdentityProviderDetails": {
                "Required": "No",
                "Type": "IdentityProviderDetails",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Transfer::Server",
                "CloudResourceProperty": "IdentityProviderDetails",
                "CloudReference": "AWS::Transfer::Server.IdentityProviderDetails",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "InvocationRole": {
                        "Required": "Yes",
                        "Type": "String",
                        "Pattern": "arn:.*role/.*",
                        "UpdateRequires": "No interruption"
                    },
                    "Url": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "IdentityProviderType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "API_GATEWAY",
                    "SERVICE_MANAGED"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Transfer::Server",
                "CloudResourceProperty": "IdentityProviderType",
                "CloudReference": "AWS::Transfer::Server.IdentityProviderType",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "LoggingRole": {
                "Required": "No",
                "Type": "String",
                "Pattern": "arn:.*role/.*",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Transfer::Server",
                "CloudResourceProperty": "LoggingRole",
                "CloudReference": "AWS::Transfer::Server.LoggingRole",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "50",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Transfer::Server",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::Transfer::Server.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Transfer::Server.EndpointDetails": {
            "Required": "No",
            "Type": "EndpointDetails",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Transfer::Server",
            "CloudResourceProperty": "EndpointDetails",
            "CloudReference": "AWS::Transfer::Server.EndpointDetails",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "VpcEndpointId": {
                    "Required": "Yes",
                    "Type": "String",
                    "Pattern": "^vpce-[0-9a-f]{17}$",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Transfer::Server.EndpointType": {
            "Required": "Conditional",
            "Type": "String",
            "AllowedValues": [
                "PUBLIC",
                "VPC_ENDPOINT"
            ],
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Transfer::Server",
            "CloudResourceProperty": "EndpointType",
            "CloudReference": "AWS::Transfer::Server.EndpointType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Transfer::Server.IdentityProviderDetails": {
            "Required": "No",
            "Type": "IdentityProviderDetails",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Transfer::Server",
            "CloudResourceProperty": "IdentityProviderDetails",
            "CloudReference": "AWS::Transfer::Server.IdentityProviderDetails",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "InvocationRole": {
                    "Required": "Yes",
                    "Type": "String",
                    "Pattern": "arn:.*role/.*",
                    "UpdateRequires": "No interruption"
                },
                "Url": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::Transfer::Server.IdentityProviderType": {
            "Required": "No",
            "Type": "String",
            "AllowedValues": [
                "API_GATEWAY",
                "SERVICE_MANAGED"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Transfer::Server",
            "CloudResourceProperty": "IdentityProviderType",
            "CloudReference": "AWS::Transfer::Server.IdentityProviderType",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Transfer::Server.LoggingRole": {
            "Required": "No",
            "Type": "String",
            "Pattern": "arn:.*role/.*",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Transfer::Server",
            "CloudResourceProperty": "LoggingRole",
            "CloudReference": "AWS::Transfer::Server.LoggingRole",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Transfer::Server.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "Maximum": "50",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Transfer::Server",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::Transfer::Server.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Transfer::User": {
            "HomeDirectory": {
                "Required": "No",
                "Type": "String",
                "Maximum": "1024",
                "Pattern": "^$|/.*",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Transfer::User",
                "CloudResourceProperty": "HomeDirectory",
                "CloudReference": "AWS::Transfer::User.HomeDirectory",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Policy": {},
            "Role": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "arn:.*role/.*",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Transfer::User",
                "CloudResourceProperty": "Role",
                "CloudReference": "AWS::Transfer::User.Role",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "ServerId": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^s-([0-9a-f]{17})$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Transfer::User",
                "CloudResourceProperty": "ServerId",
                "CloudReference": "AWS::Transfer::User.ServerId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SshPublicKeys": {
                "Required": "No",
                "Type": "List of [SshPublicKey",
                "Maximum": "5",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Transfer::User",
                "CloudResourceProperty": "SshPublicKeys",
                "CloudReference": "AWS::Transfer::User.SshPublicKeys",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "50",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::Transfer::User",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::Transfer::User.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "UserName": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,31}$",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::Transfer::User",
                "CloudResourceProperty": "UserName",
                "CloudReference": "AWS::Transfer::User.UserName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::Transfer::User.HomeDirectory": {
            "Required": "No",
            "Type": "String",
            "Maximum": "1024",
            "Pattern": "^$|/.*",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Transfer::User",
            "CloudResourceProperty": "HomeDirectory",
            "CloudReference": "AWS::Transfer::User.HomeDirectory",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Transfer::User.Role": {
            "Required": "Yes",
            "Type": "String",
            "Pattern": "arn:.*role/.*",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Transfer::User",
            "CloudResourceProperty": "Role",
            "CloudReference": "AWS::Transfer::User.Role",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Transfer::User.ServerId": {
            "Required": "Yes",
            "Type": "String",
            "Pattern": "^s-([0-9a-f]{17})$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Transfer::User",
            "CloudResourceProperty": "ServerId",
            "CloudReference": "AWS::Transfer::User.ServerId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Transfer::User.SshPublicKeys": {
            "Required": "No",
            "Type": "List of [SshPublicKey",
            "Maximum": "5",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Transfer::User",
            "CloudResourceProperty": "SshPublicKeys",
            "CloudReference": "AWS::Transfer::User.SshPublicKeys",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Transfer::User.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "Maximum": "50",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::Transfer::User",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::Transfer::User.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::Transfer::User.UserName": {
            "Required": "Yes",
            "Type": "String",
            "Pattern": "^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,31}$",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::Transfer::User",
            "CloudResourceProperty": "UserName",
            "CloudReference": "AWS::Transfer::User.UserName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAF::ByteMatchSet": {
            "ByteMatchTuples": {
                "Required": "No",
                "Type": "List of [ByteMatchTuple",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WAF::ByteMatchSet",
                "CloudResourceProperty": "ByteMatchTuples",
                "CloudReference": "AWS::WAF::ByteMatchSet.ByteMatchTuples",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAF::ByteMatchSet",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::WAF::ByteMatchSet.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::WAF::ByteMatchSet.ByteMatchTuples": {
            "Required": "No",
            "Type": "List of [ByteMatchTuple",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WAF::ByteMatchSet",
            "CloudResourceProperty": "ByteMatchTuples",
            "CloudReference": "AWS::WAF::ByteMatchSet.ByteMatchTuples",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAF::ByteMatchSet.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAF::ByteMatchSet",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::WAF::ByteMatchSet.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAF::IPSet": {
            "IPSetDescriptors": {
                "Required": "No",
                "Type": "List of [IPSetDescriptor",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WAF::IPSet",
                "CloudResourceProperty": "IPSetDescriptors",
                "CloudReference": "AWS::WAF::IPSet.IPSetDescriptors",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAF::IPSet",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::WAF::IPSet.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::WAF::IPSet.IPSetDescriptors": {
            "Required": "No",
            "Type": "List of [IPSetDescriptor",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WAF::IPSet",
            "CloudResourceProperty": "IPSetDescriptors",
            "CloudReference": "AWS::WAF::IPSet.IPSetDescriptors",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAF::IPSet.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAF::IPSet",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::WAF::IPSet.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAF::Rule": {
            "MetricName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAF::Rule",
                "CloudResourceProperty": "MetricName",
                "CloudReference": "AWS::WAF::Rule.MetricName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAF::Rule",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::WAF::Rule.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Predicates": {
                "Required": "No",
                "Type": "List of [Predicate",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WAF::Rule",
                "CloudResourceProperty": "Predicates",
                "CloudReference": "AWS::WAF::Rule.Predicates",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::WAF::Rule.MetricName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAF::Rule",
            "CloudResourceProperty": "MetricName",
            "CloudReference": "AWS::WAF::Rule.MetricName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAF::Rule.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAF::Rule",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::WAF::Rule.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAF::Rule.Predicates": {
            "Required": "No",
            "Type": "List of [Predicate",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WAF::Rule",
            "CloudResourceProperty": "Predicates",
            "CloudReference": "AWS::WAF::Rule.Predicates",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAF::SizeConstraintSet": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAF::SizeConstraintSet",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::WAF::SizeConstraintSet.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SizeConstraints": {
                "Required": "Yes",
                "Type": "List of [SizeConstraint",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WAF::SizeConstraintSet",
                "CloudResourceProperty": "SizeConstraints",
                "CloudReference": "AWS::WAF::SizeConstraintSet.SizeConstraints",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ComparisonOperator": {
                        "ComparisonOperator`  <a name=\"cfn-waf-sizeconstraintset-sizeconstraint-comparisonoperator\"></a>\nThe type of comparison you want AWS WAF to perform\\. AWS WAF uses this in combination with the provided `Size` and `FieldToMatch` to build an expression in the form of \"`Size` `ComparisonOperator` size in bytes of `FieldToMatch`\"\\. If that expression is true, the `SizeConstraint` is considered to match\\.  \n **EQ*": "Used to test if the `Size` is equal to the size of the `FieldToMatch`   \n **NE*",
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "EQ",
                            "GE",
                            "GT",
                            "LE",
                            "LT",
                            "NE"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "FieldToMatch": {
                        "Required": "Yes",
                        "Type": "FieldToMatch",
                        "UpdateRequires": "No interruption"
                    },
                    "Size": {
                        "Required": "Yes",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "TextTransformation": {}
                }
            }
        },
        "AWS::WAF::SizeConstraintSet.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAF::SizeConstraintSet",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::WAF::SizeConstraintSet.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAF::SizeConstraintSet.SizeConstraints": {
            "Required": "Yes",
            "Type": "List of [SizeConstraint",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WAF::SizeConstraintSet",
            "CloudResourceProperty": "SizeConstraints",
            "CloudReference": "AWS::WAF::SizeConstraintSet.SizeConstraints",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ComparisonOperator": {
                    "ComparisonOperator`  <a name=\"cfn-waf-sizeconstraintset-sizeconstraint-comparisonoperator\"></a>\nThe type of comparison you want AWS WAF to perform\\. AWS WAF uses this in combination with the provided `Size` and `FieldToMatch` to build an expression in the form of \"`Size` `ComparisonOperator` size in bytes of `FieldToMatch`\"\\. If that expression is true, the `SizeConstraint` is considered to match\\.  \n **EQ*": "Used to test if the `Size` is equal to the size of the `FieldToMatch`   \n **NE*",
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "EQ",
                        "GE",
                        "GT",
                        "LE",
                        "LT",
                        "NE"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "FieldToMatch": {
                    "Required": "Yes",
                    "Type": "FieldToMatch",
                    "UpdateRequires": "No interruption"
                },
                "Size": {
                    "Required": "Yes",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "TextTransformation": {}
            }
        },
        "AWS::WAF::SqlInjectionMatchSet": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAF::SqlInjectionMatchSet",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::WAF::SqlInjectionMatchSet.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SqlInjectionMatchTuples": {
                "Required": "No",
                "Type": "List of [SqlInjectionMatchTuple",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WAF::SqlInjectionMatchSet",
                "CloudResourceProperty": "SqlInjectionMatchTuples",
                "CloudReference": "AWS::WAF::SqlInjectionMatchSet.SqlInjectionMatchTuples",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::WAF::SqlInjectionMatchSet.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAF::SqlInjectionMatchSet",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::WAF::SqlInjectionMatchSet.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAF::SqlInjectionMatchSet.SqlInjectionMatchTuples": {
            "Required": "No",
            "Type": "List of [SqlInjectionMatchTuple",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WAF::SqlInjectionMatchSet",
            "CloudResourceProperty": "SqlInjectionMatchTuples",
            "CloudReference": "AWS::WAF::SqlInjectionMatchSet.SqlInjectionMatchTuples",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAF::WebACL": {
            "DefaultAction": {
                "Required": "Yes",
                "Type": "WafAction",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WAF::WebACL",
                "CloudResourceProperty": "DefaultAction",
                "CloudReference": "AWS::WAF::WebACL.DefaultAction",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "MetricName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAF::WebACL",
                "CloudResourceProperty": "MetricName",
                "CloudReference": "AWS::WAF::WebACL.MetricName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAF::WebACL",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::WAF::WebACL.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Rules": {
                "Required": "No",
                "Type": "List of [ActivatedRule",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WAF::WebACL",
                "CloudResourceProperty": "Rules",
                "CloudReference": "AWS::WAF::WebACL.Rules",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::WAF::WebACL.DefaultAction": {
            "Required": "Yes",
            "Type": "WafAction",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WAF::WebACL",
            "CloudResourceProperty": "DefaultAction",
            "CloudReference": "AWS::WAF::WebACL.DefaultAction",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAF::WebACL.MetricName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAF::WebACL",
            "CloudResourceProperty": "MetricName",
            "CloudReference": "AWS::WAF::WebACL.MetricName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAF::WebACL.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAF::WebACL",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::WAF::WebACL.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAF::WebACL.Rules": {
            "Required": "No",
            "Type": "List of [ActivatedRule",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WAF::WebACL",
            "CloudResourceProperty": "Rules",
            "CloudReference": "AWS::WAF::WebACL.Rules",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAF::XssMatchSet": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAF::XssMatchSet",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::WAF::XssMatchSet.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "XssMatchTuples": {
                "Required": "Yes",
                "Type": "List of [XssMatchTuple",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WAF::XssMatchSet",
                "CloudResourceProperty": "XssMatchTuples",
                "CloudReference": "AWS::WAF::XssMatchSet.XssMatchTuples",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "FieldToMatch": {
                        "Required": "Yes",
                        "Type": "FieldToMatch",
                        "UpdateRequires": "No interruption"
                    },
                    "TextTransformation": {}
                }
            }
        },
        "AWS::WAF::XssMatchSet.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAF::XssMatchSet",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::WAF::XssMatchSet.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAF::XssMatchSet.XssMatchTuples": {
            "Required": "Yes",
            "Type": "List of [XssMatchTuple",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WAF::XssMatchSet",
            "CloudResourceProperty": "XssMatchTuples",
            "CloudReference": "AWS::WAF::XssMatchSet.XssMatchTuples",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "FieldToMatch": {
                    "Required": "Yes",
                    "Type": "FieldToMatch",
                    "UpdateRequires": "No interruption"
                },
                "TextTransformation": {}
            }
        },
        "AWS::WAFRegional::ByteMatchSet": {
            "ByteMatchTuples": {
                "Required": "No",
                "Type": "List of [ByteMatchTuple",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WAFRegional::ByteMatchSet",
                "CloudResourceProperty": "ByteMatchTuples",
                "CloudReference": "AWS::WAFRegional::ByteMatchSet.ByteMatchTuples",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "FieldToMatch": {
                        "Required": "Yes",
                        "Type": "FieldToMatch",
                        "UpdateRequires": "No interruption"
                    },
                    "PositionalConstraint": {},
                    "TargetString": {},
                    "TargetStringBase64": {
                        "Required": "Conditional",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    },
                    "TextTransformation": {}
                }
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAFRegional::ByteMatchSet",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::WAFRegional::ByteMatchSet.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::WAFRegional::ByteMatchSet.ByteMatchTuples": {
            "Required": "No",
            "Type": "List of [ByteMatchTuple",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WAFRegional::ByteMatchSet",
            "CloudResourceProperty": "ByteMatchTuples",
            "CloudReference": "AWS::WAFRegional::ByteMatchSet.ByteMatchTuples",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "FieldToMatch": {
                    "Required": "Yes",
                    "Type": "FieldToMatch",
                    "UpdateRequires": "No interruption"
                },
                "PositionalConstraint": {},
                "TargetString": {},
                "TargetStringBase64": {
                    "Required": "Conditional",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                },
                "TextTransformation": {}
            }
        },
        "AWS::WAFRegional::ByteMatchSet.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAFRegional::ByteMatchSet",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::WAFRegional::ByteMatchSet.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAFRegional::GeoMatchSet": {
            "GeoMatchConstraints": {
                "Required": "No",
                "Type": "List of [GeoMatchConstraint",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WAFRegional::GeoMatchSet",
                "CloudResourceProperty": "GeoMatchConstraints",
                "CloudReference": "AWS::WAFRegional::GeoMatchSet.GeoMatchConstraints",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Type": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "Country"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "Value": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "AD",
                            "AE",
                            "AF",
                            "AG",
                            "AI",
                            "AL",
                            "AM",
                            "AO",
                            "AQ",
                            "AR",
                            "AS",
                            "AT",
                            "AU",
                            "AW",
                            "AX",
                            "AZ",
                            "BA",
                            "BB",
                            "BD",
                            "BE",
                            "BF",
                            "BG",
                            "BH",
                            "BI",
                            "BJ",
                            "BL",
                            "BM",
                            "BN",
                            "BO",
                            "BQ",
                            "BR",
                            "BS",
                            "BT",
                            "BV",
                            "BW",
                            "BY",
                            "BZ",
                            "CA",
                            "CC",
                            "CD",
                            "CF",
                            "CG",
                            "CH",
                            "CI",
                            "CK",
                            "CL",
                            "CM",
                            "CN",
                            "CO",
                            "CR",
                            "CU",
                            "CV",
                            "CW",
                            "CX",
                            "CY",
                            "CZ",
                            "DE",
                            "DJ",
                            "DK",
                            "DM",
                            "DO",
                            "DZ",
                            "EC",
                            "EE",
                            "EG",
                            "EH",
                            "ER",
                            "ES",
                            "ET",
                            "FI",
                            "FJ",
                            "FK",
                            "FM",
                            "FO",
                            "FR",
                            "GA",
                            "GB",
                            "GD",
                            "GE",
                            "GF",
                            "GG",
                            "GH",
                            "GI",
                            "GL",
                            "GM",
                            "GN",
                            "GP",
                            "GQ",
                            "GR",
                            "GS",
                            "GT",
                            "GU",
                            "GW",
                            "GY",
                            "HK",
                            "HM",
                            "HN",
                            "HR",
                            "HT",
                            "HU",
                            "ID",
                            "IE",
                            "IL",
                            "IM",
                            "IN",
                            "IO",
                            "IQ",
                            "IR",
                            "IS",
                            "IT",
                            "JE",
                            "JM",
                            "JO",
                            "JP",
                            "KE",
                            "KG",
                            "KH",
                            "KI",
                            "KM",
                            "KN",
                            "KP",
                            "KR",
                            "KW",
                            "KY",
                            "KZ",
                            "LA",
                            "LB",
                            "LC",
                            "LI",
                            "LK",
                            "LR",
                            "LS",
                            "LT",
                            "LU",
                            "LV",
                            "LY",
                            "MA",
                            "MC",
                            "MD",
                            "ME",
                            "MF",
                            "MG",
                            "MH",
                            "MK",
                            "ML",
                            "MM",
                            "MN",
                            "MO",
                            "MP",
                            "MQ",
                            "MR",
                            "MS",
                            "MT",
                            "MU",
                            "MV",
                            "MW",
                            "MX",
                            "MY",
                            "MZ",
                            "NA",
                            "NC",
                            "NE",
                            "NF",
                            "NG",
                            "NI",
                            "NL",
                            "NO",
                            "NP",
                            "NR",
                            "NU",
                            "NZ",
                            "OM",
                            "PA",
                            "PE",
                            "PF",
                            "PG",
                            "PH",
                            "PK",
                            "PL",
                            "PM",
                            "PN",
                            "PR",
                            "PS",
                            "PT",
                            "PW",
                            "PY",
                            "QA",
                            "RE",
                            "RO",
                            "RS",
                            "RU",
                            "RW",
                            "SA",
                            "SB",
                            "SC",
                            "SD",
                            "SE",
                            "SG",
                            "SH",
                            "SI",
                            "SJ",
                            "SK",
                            "SL",
                            "SM",
                            "SN",
                            "SO",
                            "SR",
                            "SS",
                            "ST",
                            "SV",
                            "SX",
                            "SY",
                            "SZ",
                            "TC",
                            "TD",
                            "TF",
                            "TG",
                            "TH",
                            "TJ",
                            "TK",
                            "TL",
                            "TM",
                            "TN",
                            "TO",
                            "TR",
                            "TT",
                            "TV",
                            "TW",
                            "TZ",
                            "UA",
                            "UG",
                            "UM",
                            "US",
                            "UY",
                            "UZ",
                            "VA",
                            "VC",
                            "VE",
                            "VG",
                            "VI",
                            "VN",
                            "VU",
                            "WF",
                            "WS",
                            "YE",
                            "YT",
                            "ZA",
                            "ZM",
                            "ZW"
                        ],
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAFRegional::GeoMatchSet",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::WAFRegional::GeoMatchSet.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::WAFRegional::GeoMatchSet.GeoMatchConstraints": {
            "Required": "No",
            "Type": "List of [GeoMatchConstraint",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WAFRegional::GeoMatchSet",
            "CloudResourceProperty": "GeoMatchConstraints",
            "CloudReference": "AWS::WAFRegional::GeoMatchSet.GeoMatchConstraints",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Type": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "Country"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "Value": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "AD",
                        "AE",
                        "AF",
                        "AG",
                        "AI",
                        "AL",
                        "AM",
                        "AO",
                        "AQ",
                        "AR",
                        "AS",
                        "AT",
                        "AU",
                        "AW",
                        "AX",
                        "AZ",
                        "BA",
                        "BB",
                        "BD",
                        "BE",
                        "BF",
                        "BG",
                        "BH",
                        "BI",
                        "BJ",
                        "BL",
                        "BM",
                        "BN",
                        "BO",
                        "BQ",
                        "BR",
                        "BS",
                        "BT",
                        "BV",
                        "BW",
                        "BY",
                        "BZ",
                        "CA",
                        "CC",
                        "CD",
                        "CF",
                        "CG",
                        "CH",
                        "CI",
                        "CK",
                        "CL",
                        "CM",
                        "CN",
                        "CO",
                        "CR",
                        "CU",
                        "CV",
                        "CW",
                        "CX",
                        "CY",
                        "CZ",
                        "DE",
                        "DJ",
                        "DK",
                        "DM",
                        "DO",
                        "DZ",
                        "EC",
                        "EE",
                        "EG",
                        "EH",
                        "ER",
                        "ES",
                        "ET",
                        "FI",
                        "FJ",
                        "FK",
                        "FM",
                        "FO",
                        "FR",
                        "GA",
                        "GB",
                        "GD",
                        "GE",
                        "GF",
                        "GG",
                        "GH",
                        "GI",
                        "GL",
                        "GM",
                        "GN",
                        "GP",
                        "GQ",
                        "GR",
                        "GS",
                        "GT",
                        "GU",
                        "GW",
                        "GY",
                        "HK",
                        "HM",
                        "HN",
                        "HR",
                        "HT",
                        "HU",
                        "ID",
                        "IE",
                        "IL",
                        "IM",
                        "IN",
                        "IO",
                        "IQ",
                        "IR",
                        "IS",
                        "IT",
                        "JE",
                        "JM",
                        "JO",
                        "JP",
                        "KE",
                        "KG",
                        "KH",
                        "KI",
                        "KM",
                        "KN",
                        "KP",
                        "KR",
                        "KW",
                        "KY",
                        "KZ",
                        "LA",
                        "LB",
                        "LC",
                        "LI",
                        "LK",
                        "LR",
                        "LS",
                        "LT",
                        "LU",
                        "LV",
                        "LY",
                        "MA",
                        "MC",
                        "MD",
                        "ME",
                        "MF",
                        "MG",
                        "MH",
                        "MK",
                        "ML",
                        "MM",
                        "MN",
                        "MO",
                        "MP",
                        "MQ",
                        "MR",
                        "MS",
                        "MT",
                        "MU",
                        "MV",
                        "MW",
                        "MX",
                        "MY",
                        "MZ",
                        "NA",
                        "NC",
                        "NE",
                        "NF",
                        "NG",
                        "NI",
                        "NL",
                        "NO",
                        "NP",
                        "NR",
                        "NU",
                        "NZ",
                        "OM",
                        "PA",
                        "PE",
                        "PF",
                        "PG",
                        "PH",
                        "PK",
                        "PL",
                        "PM",
                        "PN",
                        "PR",
                        "PS",
                        "PT",
                        "PW",
                        "PY",
                        "QA",
                        "RE",
                        "RO",
                        "RS",
                        "RU",
                        "RW",
                        "SA",
                        "SB",
                        "SC",
                        "SD",
                        "SE",
                        "SG",
                        "SH",
                        "SI",
                        "SJ",
                        "SK",
                        "SL",
                        "SM",
                        "SN",
                        "SO",
                        "SR",
                        "SS",
                        "ST",
                        "SV",
                        "SX",
                        "SY",
                        "SZ",
                        "TC",
                        "TD",
                        "TF",
                        "TG",
                        "TH",
                        "TJ",
                        "TK",
                        "TL",
                        "TM",
                        "TN",
                        "TO",
                        "TR",
                        "TT",
                        "TV",
                        "TW",
                        "TZ",
                        "UA",
                        "UG",
                        "UM",
                        "US",
                        "UY",
                        "UZ",
                        "VA",
                        "VC",
                        "VE",
                        "VG",
                        "VI",
                        "VN",
                        "VU",
                        "WF",
                        "WS",
                        "YE",
                        "YT",
                        "ZA",
                        "ZM",
                        "ZW"
                    ],
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::WAFRegional::GeoMatchSet.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAFRegional::GeoMatchSet",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::WAFRegional::GeoMatchSet.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAFRegional::IPSet": {
            "IPSetDescriptors": {
                "Required": "No",
                "Type": "List of [IPSetDescriptor",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WAFRegional::IPSet",
                "CloudResourceProperty": "IPSetDescriptors",
                "CloudReference": "AWS::WAFRegional::IPSet.IPSetDescriptors",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Type": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "IPV4",
                            "IPV6"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "Value": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAFRegional::IPSet",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::WAFRegional::IPSet.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::WAFRegional::IPSet.IPSetDescriptors": {
            "Required": "No",
            "Type": "List of [IPSetDescriptor",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WAFRegional::IPSet",
            "CloudResourceProperty": "IPSetDescriptors",
            "CloudReference": "AWS::WAFRegional::IPSet.IPSetDescriptors",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Type": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "IPV4",
                        "IPV6"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "Value": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::WAFRegional::IPSet.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAFRegional::IPSet",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::WAFRegional::IPSet.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAFRegional::RateBasedRule": {
            "MatchPredicates": {
                "Required": "No",
                "Type": "List of [Predicate",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WAFRegional::RateBasedRule",
                "CloudResourceProperty": "MatchPredicates",
                "CloudReference": "AWS::WAFRegional::RateBasedRule.MatchPredicates",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DataId": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "128",
                        "UpdateRequires": "No interruption"
                    },
                    "Negated": {
                        "AllowedValues": [
                            "True",
                            "False"
                        ]
                    },
                    "Type": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "ByteMatch",
                            "GeoMatch",
                            "IPMatch",
                            "RegexMatch",
                            "SizeConstraint",
                            "SqlInjectionMatch",
                            "XssMatch"
                        ],
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "MetricName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAFRegional::RateBasedRule",
                "CloudResourceProperty": "MetricName",
                "CloudReference": "AWS::WAFRegional::RateBasedRule.MetricName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAFRegional::RateBasedRule",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::WAFRegional::RateBasedRule.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RateKey": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "IP"
                ],
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAFRegional::RateBasedRule",
                "CloudResourceProperty": "RateKey",
                "CloudReference": "AWS::WAFRegional::RateBasedRule.RateKey",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RateLimit": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WAFRegional::RateBasedRule",
                "CloudResourceProperty": "RateLimit",
                "CloudReference": "AWS::WAFRegional::RateBasedRule.RateLimit",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::WAFRegional::RateBasedRule.MatchPredicates": {
            "Required": "No",
            "Type": "List of [Predicate",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WAFRegional::RateBasedRule",
            "CloudResourceProperty": "MatchPredicates",
            "CloudReference": "AWS::WAFRegional::RateBasedRule.MatchPredicates",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DataId": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "128",
                    "UpdateRequires": "No interruption"
                },
                "Negated": {
                    "AllowedValues": [
                        "True",
                        "False"
                    ]
                },
                "Type": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "ByteMatch",
                        "GeoMatch",
                        "IPMatch",
                        "RegexMatch",
                        "SizeConstraint",
                        "SqlInjectionMatch",
                        "XssMatch"
                    ],
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::WAFRegional::RateBasedRule.MetricName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAFRegional::RateBasedRule",
            "CloudResourceProperty": "MetricName",
            "CloudReference": "AWS::WAFRegional::RateBasedRule.MetricName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAFRegional::RateBasedRule.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAFRegional::RateBasedRule",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::WAFRegional::RateBasedRule.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAFRegional::RateBasedRule.RateKey": {
            "Required": "Yes",
            "Type": "String",
            "AllowedValues": [
                "IP"
            ],
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAFRegional::RateBasedRule",
            "CloudResourceProperty": "RateKey",
            "CloudReference": "AWS::WAFRegional::RateBasedRule.RateKey",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAFRegional::RateBasedRule.RateLimit": {
            "Required": "Yes",
            "Type": "Integer",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WAFRegional::RateBasedRule",
            "CloudResourceProperty": "RateLimit",
            "CloudReference": "AWS::WAFRegional::RateBasedRule.RateLimit",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAFRegional::RegexPatternSet": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAFRegional::RegexPatternSet",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::WAFRegional::RegexPatternSet.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RegexPatternStrings": {
                "Required": "Yes",
                "Type": "List of String",
                "Maximum": "10",
                "UpdateRequires": "No interruption"
            }
        },
        "AWS::WAFRegional::RegexPatternSet.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAFRegional::RegexPatternSet",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::WAFRegional::RegexPatternSet.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAFRegional::Rule": {
            "MetricName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAFRegional::Rule",
                "CloudResourceProperty": "MetricName",
                "CloudReference": "AWS::WAFRegional::Rule.MetricName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAFRegional::Rule",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::WAFRegional::Rule.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Predicates": {
                "Required": "No",
                "Type": "List of [Predicate",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WAFRegional::Rule",
                "CloudResourceProperty": "Predicates",
                "CloudReference": "AWS::WAFRegional::Rule.Predicates",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "DataId": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "128",
                        "UpdateRequires": "No interruption"
                    },
                    "Negated": {
                        "AllowedValues": [
                            "True",
                            "False"
                        ]
                    },
                    "Type": {
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "ByteMatch",
                            "GeoMatch",
                            "IPMatch",
                            "RegexMatch",
                            "SizeConstraint",
                            "SqlInjectionMatch",
                            "XssMatch"
                        ],
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::WAFRegional::Rule.MetricName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAFRegional::Rule",
            "CloudResourceProperty": "MetricName",
            "CloudReference": "AWS::WAFRegional::Rule.MetricName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAFRegional::Rule.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAFRegional::Rule",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::WAFRegional::Rule.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAFRegional::Rule.Predicates": {
            "Required": "No",
            "Type": "List of [Predicate",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WAFRegional::Rule",
            "CloudResourceProperty": "Predicates",
            "CloudReference": "AWS::WAFRegional::Rule.Predicates",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "DataId": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "128",
                    "UpdateRequires": "No interruption"
                },
                "Negated": {
                    "AllowedValues": [
                        "True",
                        "False"
                    ]
                },
                "Type": {
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "ByteMatch",
                        "GeoMatch",
                        "IPMatch",
                        "RegexMatch",
                        "SizeConstraint",
                        "SqlInjectionMatch",
                        "XssMatch"
                    ],
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::WAFRegional::SizeConstraintSet": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAFRegional::SizeConstraintSet",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::WAFRegional::SizeConstraintSet.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SizeConstraints": {
                "Required": "No",
                "Type": "List of [SizeConstraint",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WAFRegional::SizeConstraintSet",
                "CloudResourceProperty": "SizeConstraints",
                "CloudReference": "AWS::WAFRegional::SizeConstraintSet.SizeConstraints",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ComparisonOperator": {
                        "ComparisonOperator`  <a name=\"cfn-wafregional-sizeconstraintset-sizeconstraint-comparisonoperator\"></a>\nThe type of comparison you want AWS WAF to perform\\. AWS WAF uses this in combination with the provided `Size` and `FieldToMatch` to build an expression in the form of \"`Size` `ComparisonOperator` size in bytes of `FieldToMatch`\"\\. If that expression is true, the `SizeConstraint` is considered to match\\.  \n **EQ*": "Used to test if the `Size` is equal to the size of the `FieldToMatch`   \n **NE*",
                        "Required": "Yes",
                        "Type": "String",
                        "AllowedValues": [
                            "EQ",
                            "GE",
                            "GT",
                            "LE",
                            "LT",
                            "NE"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "FieldToMatch": {
                        "Required": "Yes",
                        "Type": "FieldToMatch",
                        "UpdateRequires": "No interruption"
                    },
                    "Size": {
                        "Required": "Yes",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "TextTransformation": {}
                }
            }
        },
        "AWS::WAFRegional::SizeConstraintSet.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAFRegional::SizeConstraintSet",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::WAFRegional::SizeConstraintSet.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAFRegional::SizeConstraintSet.SizeConstraints": {
            "Required": "No",
            "Type": "List of [SizeConstraint",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WAFRegional::SizeConstraintSet",
            "CloudResourceProperty": "SizeConstraints",
            "CloudReference": "AWS::WAFRegional::SizeConstraintSet.SizeConstraints",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ComparisonOperator": {
                    "ComparisonOperator`  <a name=\"cfn-wafregional-sizeconstraintset-sizeconstraint-comparisonoperator\"></a>\nThe type of comparison you want AWS WAF to perform\\. AWS WAF uses this in combination with the provided `Size` and `FieldToMatch` to build an expression in the form of \"`Size` `ComparisonOperator` size in bytes of `FieldToMatch`\"\\. If that expression is true, the `SizeConstraint` is considered to match\\.  \n **EQ*": "Used to test if the `Size` is equal to the size of the `FieldToMatch`   \n **NE*",
                    "Required": "Yes",
                    "Type": "String",
                    "AllowedValues": [
                        "EQ",
                        "GE",
                        "GT",
                        "LE",
                        "LT",
                        "NE"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "FieldToMatch": {
                    "Required": "Yes",
                    "Type": "FieldToMatch",
                    "UpdateRequires": "No interruption"
                },
                "Size": {
                    "Required": "Yes",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "TextTransformation": {}
            }
        },
        "AWS::WAFRegional::SqlInjectionMatchSet": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAFRegional::SqlInjectionMatchSet",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::WAFRegional::SqlInjectionMatchSet.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "SqlInjectionMatchTuples": {
                "Required": "No",
                "Type": "List of [SqlInjectionMatchTuple",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WAFRegional::SqlInjectionMatchSet",
                "CloudResourceProperty": "SqlInjectionMatchTuples",
                "CloudReference": "AWS::WAFRegional::SqlInjectionMatchSet.SqlInjectionMatchTuples",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "FieldToMatch": {
                        "Required": "Yes",
                        "Type": "FieldToMatch",
                        "UpdateRequires": "No interruption"
                    },
                    "TextTransformation": {}
                }
            }
        },
        "AWS::WAFRegional::SqlInjectionMatchSet.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAFRegional::SqlInjectionMatchSet",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::WAFRegional::SqlInjectionMatchSet.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAFRegional::SqlInjectionMatchSet.SqlInjectionMatchTuples": {
            "Required": "No",
            "Type": "List of [SqlInjectionMatchTuple",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WAFRegional::SqlInjectionMatchSet",
            "CloudResourceProperty": "SqlInjectionMatchTuples",
            "CloudReference": "AWS::WAFRegional::SqlInjectionMatchSet.SqlInjectionMatchTuples",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "FieldToMatch": {
                    "Required": "Yes",
                    "Type": "FieldToMatch",
                    "UpdateRequires": "No interruption"
                },
                "TextTransformation": {}
            }
        },
        "AWS::WAFRegional::WebACL": {
            "DefaultAction": {
                "Required": "Yes",
                "Type": "Action",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WAFRegional::WebACL",
                "CloudResourceProperty": "DefaultAction",
                "CloudReference": "AWS::WAFRegional::WebACL.DefaultAction",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Type": {
                        "Required": "Yes",
                        "Type": "String",
                        "UpdateRequires": "No interruption"
                    }
                }
            },
            "MetricName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAFRegional::WebACL",
                "CloudResourceProperty": "MetricName",
                "CloudReference": "AWS::WAFRegional::WebACL.MetricName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAFRegional::WebACL",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::WAFRegional::WebACL.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Rules": {
                "Required": "No",
                "Type": "List of [Rule",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WAFRegional::WebACL",
                "CloudResourceProperty": "Rules",
                "CloudReference": "AWS::WAFRegional::WebACL.Rules",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "Action": {
                        "Required": "Yes",
                        "Type": "Action",
                        "UpdateRequires": "No interruption"
                    },
                    "Priority": {
                        "Required": "Yes",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "RuleId": {
                        "Required": "Yes",
                        "Type": "String",
                        "Minimum": "1",
                        "Maximum": "128",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::WAFRegional::WebACL.DefaultAction": {
            "Required": "Yes",
            "Type": "Action",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WAFRegional::WebACL",
            "CloudResourceProperty": "DefaultAction",
            "CloudReference": "AWS::WAFRegional::WebACL.DefaultAction",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Type": {
                    "Required": "Yes",
                    "Type": "String",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::WAFRegional::WebACL.MetricName": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAFRegional::WebACL",
            "CloudResourceProperty": "MetricName",
            "CloudReference": "AWS::WAFRegional::WebACL.MetricName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAFRegional::WebACL.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAFRegional::WebACL",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::WAFRegional::WebACL.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAFRegional::WebACL.Rules": {
            "Required": "No",
            "Type": "List of [Rule",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WAFRegional::WebACL",
            "CloudResourceProperty": "Rules",
            "CloudReference": "AWS::WAFRegional::WebACL.Rules",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "Action": {
                    "Required": "Yes",
                    "Type": "Action",
                    "UpdateRequires": "No interruption"
                },
                "Priority": {
                    "Required": "Yes",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "RuleId": {
                    "Required": "Yes",
                    "Type": "String",
                    "Minimum": "1",
                    "Maximum": "128",
                    "UpdateRequires": "No interruption"
                }
            }
        },
        "AWS::WAFRegional::WebACLAssociation": {
            "ResourceArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAFRegional::WebACLAssociation",
                "CloudResourceProperty": "ResourceArn",
                "CloudReference": "AWS::WAFRegional::WebACLAssociation.ResourceArn",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "WebACLId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAFRegional::WebACLAssociation",
                "CloudResourceProperty": "WebACLId",
                "CloudReference": "AWS::WAFRegional::WebACLAssociation.WebACLId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            }
        },
        "AWS::WAFRegional::WebACLAssociation.ResourceArn": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAFRegional::WebACLAssociation",
            "CloudResourceProperty": "ResourceArn",
            "CloudReference": "AWS::WAFRegional::WebACLAssociation.ResourceArn",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAFRegional::WebACLAssociation.WebACLId": {
            "Required": "Yes",
            "Type": "String",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAFRegional::WebACLAssociation",
            "CloudResourceProperty": "WebACLId",
            "CloudReference": "AWS::WAFRegional::WebACLAssociation.WebACLId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAFRegional::XssMatchSet": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WAFRegional::XssMatchSet",
                "CloudResourceProperty": "Name",
                "CloudReference": "AWS::WAFRegional::XssMatchSet.Name",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "XssMatchTuples": {
                "Required": "No",
                "Type": "List of [XssMatchTuple",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WAFRegional::XssMatchSet",
                "CloudResourceProperty": "XssMatchTuples",
                "CloudReference": "AWS::WAFRegional::XssMatchSet.XssMatchTuples",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "FieldToMatch": {
                        "Required": "Yes",
                        "Type": "FieldToMatch",
                        "UpdateRequires": "No interruption"
                    },
                    "TextTransformation": {}
                }
            }
        },
        "AWS::WAFRegional::XssMatchSet.Name": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "128",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WAFRegional::XssMatchSet",
            "CloudResourceProperty": "Name",
            "CloudReference": "AWS::WAFRegional::XssMatchSet.Name",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WAFRegional::XssMatchSet.XssMatchTuples": {
            "Required": "No",
            "Type": "List of [XssMatchTuple",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WAFRegional::XssMatchSet",
            "CloudResourceProperty": "XssMatchTuples",
            "CloudReference": "AWS::WAFRegional::XssMatchSet.XssMatchTuples",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "FieldToMatch": {
                    "Required": "Yes",
                    "Type": "FieldToMatch",
                    "UpdateRequires": "No interruption"
                },
                "TextTransformation": {}
            }
        },
        "AWS::WorkSpaces::Workspace": {
            "BundleId": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^wsb-[0-9a-z]{8,63}$",
                "CloudResourceType": "AWS::WorkSpaces::Workspace",
                "CloudResourceProperty": "BundleId",
                "CloudReference": "AWS::WorkSpaces::Workspace.BundleId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "DirectoryId": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^d-[0-9a-f]{8,63}$",
                "CloudResourceType": "AWS::WorkSpaces::Workspace",
                "CloudResourceProperty": "DirectoryId",
                "CloudReference": "AWS::WorkSpaces::Workspace.DirectoryId",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "RootVolumeEncryptionEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "CloudResourceType": "AWS::WorkSpaces::Workspace",
                "CloudResourceProperty": "RootVolumeEncryptionEnabled",
                "CloudReference": "AWS::WorkSpaces::Workspace.RootVolumeEncryptionEnabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WorkSpaces::Workspace",
                "CloudResourceProperty": "Tags",
                "CloudReference": "AWS::WorkSpaces::Workspace.Tags",
                "CloudResourceItemType": "List",
                "CloudExpectedValues": "TODO"
            },
            "UserName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "63",
                "UpdateRequires": "Replacement",
                "CloudResourceType": "AWS::WorkSpaces::Workspace",
                "CloudResourceProperty": "UserName",
                "CloudReference": "AWS::WorkSpaces::Workspace.UserName",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "UserVolumeEncryptionEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "CloudResourceType": "AWS::WorkSpaces::Workspace",
                "CloudResourceProperty": "UserVolumeEncryptionEnabled",
                "CloudReference": "AWS::WorkSpaces::Workspace.UserVolumeEncryptionEnabled",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "VolumeEncryptionKey": {
                "Required": "No",
                "Type": "String",
                "CloudResourceType": "AWS::WorkSpaces::Workspace",
                "CloudResourceProperty": "VolumeEncryptionKey",
                "CloudReference": "AWS::WorkSpaces::Workspace.VolumeEncryptionKey",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO"
            },
            "WorkspaceProperties": {
                "Required": "No",
                "Type": "WorkspaceProperties",
                "UpdateRequires": "No interruption",
                "CloudResourceType": "AWS::WorkSpaces::Workspace",
                "CloudResourceProperty": "WorkspaceProperties",
                "CloudReference": "AWS::WorkSpaces::Workspace.WorkspaceProperties",
                "CloudResourceItemType": "Literal",
                "CloudExpectedValues": "TODO",
                "CloudPropertySample": {
                    "ComputeTypeName": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "GRAPHICS",
                            "GRAPHICSPRO",
                            "PERFORMANCE",
                            "POWER",
                            "POWERPRO",
                            "STANDARD",
                            "VALUE"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "RootVolumeSizeGib": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "RunningMode": {
                        "Required": "No",
                        "Type": "String",
                        "AllowedValues": [
                            "ALWAYS_ON",
                            "AUTO_STOP"
                        ],
                        "UpdateRequires": "No interruption"
                    },
                    "RunningModeAutoStopTimeoutInMinutes": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    },
                    "UserVolumeSizeGib": {
                        "Required": "No",
                        "Type": "Integer",
                        "UpdateRequires": "No interruption"
                    }
                }
            }
        },
        "AWS::WorkSpaces::Workspace.BundleId": {
            "Required": "Yes",
            "Type": "String",
            "Pattern": "^wsb-[0-9a-z]{8,63}$",
            "CloudResourceType": "AWS::WorkSpaces::Workspace",
            "CloudResourceProperty": "BundleId",
            "CloudReference": "AWS::WorkSpaces::Workspace.BundleId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WorkSpaces::Workspace.DirectoryId": {
            "Required": "Yes",
            "Type": "String",
            "Pattern": "^d-[0-9a-f]{8,63}$",
            "CloudResourceType": "AWS::WorkSpaces::Workspace",
            "CloudResourceProperty": "DirectoryId",
            "CloudReference": "AWS::WorkSpaces::Workspace.DirectoryId",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WorkSpaces::Workspace.RootVolumeEncryptionEnabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "CloudResourceType": "AWS::WorkSpaces::Workspace",
            "CloudResourceProperty": "RootVolumeEncryptionEnabled",
            "CloudReference": "AWS::WorkSpaces::Workspace.RootVolumeEncryptionEnabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WorkSpaces::Workspace.Tags": {
            "Required": "No",
            "Type": "List of [Tag",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WorkSpaces::Workspace",
            "CloudResourceProperty": "Tags",
            "CloudReference": "AWS::WorkSpaces::Workspace.Tags",
            "CloudResourceItemType": "List",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WorkSpaces::Workspace.UserName": {
            "Required": "Yes",
            "Type": "String",
            "Minimum": "1",
            "Maximum": "63",
            "UpdateRequires": "Replacement",
            "CloudResourceType": "AWS::WorkSpaces::Workspace",
            "CloudResourceProperty": "UserName",
            "CloudReference": "AWS::WorkSpaces::Workspace.UserName",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WorkSpaces::Workspace.UserVolumeEncryptionEnabled": {
            "Required": "No",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Type": "Boolean",
            "CloudResourceType": "AWS::WorkSpaces::Workspace",
            "CloudResourceProperty": "UserVolumeEncryptionEnabled",
            "CloudReference": "AWS::WorkSpaces::Workspace.UserVolumeEncryptionEnabled",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WorkSpaces::Workspace.VolumeEncryptionKey": {
            "Required": "No",
            "Type": "String",
            "CloudResourceType": "AWS::WorkSpaces::Workspace",
            "CloudResourceProperty": "VolumeEncryptionKey",
            "CloudReference": "AWS::WorkSpaces::Workspace.VolumeEncryptionKey",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO"
        },
        "AWS::WorkSpaces::Workspace.WorkspaceProperties": {
            "Required": "No",
            "Type": "WorkspaceProperties",
            "UpdateRequires": "No interruption",
            "CloudResourceType": "AWS::WorkSpaces::Workspace",
            "CloudResourceProperty": "WorkspaceProperties",
            "CloudReference": "AWS::WorkSpaces::Workspace.WorkspaceProperties",
            "CloudResourceItemType": "Literal",
            "CloudExpectedValues": "TODO",
            "CloudPropertySample": {
                "ComputeTypeName": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "GRAPHICS",
                        "GRAPHICSPRO",
                        "PERFORMANCE",
                        "POWER",
                        "POWERPRO",
                        "STANDARD",
                        "VALUE"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "RootVolumeSizeGib": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "RunningMode": {
                    "Required": "No",
                    "Type": "String",
                    "AllowedValues": [
                        "ALWAYS_ON",
                        "AUTO_STOP"
                    ],
                    "UpdateRequires": "No interruption"
                },
                "RunningModeAutoStopTimeoutInMinutes": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                },
                "UserVolumeSizeGib": {
                    "Required": "No",
                    "Type": "Integer",
                    "UpdateRequires": "No interruption"
                }
            }
        }
    },
    "PropertyTypes": {
        "String": "example-string",
        "Boolean": "True",
        "Integer": 1,
        "Long": 123.4,
        "Double": 123.45,
        "Float": 1.23456789,
        "Json": {
            "todo": "json"
        },
        "Timestamp": "1970-01-01T01:02:30.070Z",
        "amazonmq-broker-configurationid-properties": {
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Revision": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "amazonmq-broker-encryptionoptions-properties": {
            "KmsKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "UseAwsOwnedKey": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "amazonmq-broker-loglist-properties": {
            "Audit": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "General": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "amazonmq-broker-maintenancewindow-properties": {
            "DayOfWeek": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TimeOfDay": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TimeZone": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "amazonmq-broker-tagsentry-properties": {
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "amazonmq-broker-user-properties": {
            "ConsoleAccess": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Groups": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Password": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Username": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "amazonmq-configuration-tagsentry-properties": {
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "amazonmq-configurationassociation-configurationid-properties": {
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Revision": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "amplify-app-autobranchcreationconfig-properties": {
            "AutoBranchCreationPatterns": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "BasicAuthConfig": {
                "Required": "No",
                "Type": "BasicAuthConfig",
                "UpdateRequires": "No interruption"
            },
            "BuildSpec": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "EnableAutoBranchCreation": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "EnableAutoBuild": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "EnvironmentVariables": {
                "Required": "No",
                "Type": "List of [EnvironmentVariable",
                "UpdateRequires": "No interruption"
            },
            "Stage": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "amplify-app-basicauthconfig-properties": {
            "EnableBasicAuth": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Password": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Username": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "amplify-app-customrule-properties": {
            "Condition": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Source": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Status": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Target": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "amplify-app-environmentvariable-properties": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "amplify-branch-basicauthconfig-properties": {
            "EnableBasicAuth": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Password": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Username": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "amplify-branch-environmentvariable-properties": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "amplify-domain-subdomainsetting-properties": {
            "BranchName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Prefix": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "apigateway-apikey-stagekey-properties": {
            "RestApiId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "StageName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "apigateway-deployment-accesslogsetting-properties": {
            "DestinationArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Format": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "apigateway-deployment-canarysetting-properties": {
            "PercentTraffic": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "StageVariableOverrides": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "UseStageCache": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "apigateway-deployment-deploymentcanarysettings-properties": {
            "PercentTraffic": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "Replacement"
            },
            "StageVariableOverrides": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "Replacement"
            },
            "UseStageCache": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            }
        },
        "apigateway-deployment-stagedescription-methodsetting-properties": {
            "CacheDataEncrypted": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "CacheTtlInSeconds": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "CachingEnabled": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "DataTraceEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "HttpMethod": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "LoggingLevel": {},
            "MetricsEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "ResourcePath": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ThrottlingBurstLimit": {},
            "ThrottlingRateLimit": {}
        },
        "apigateway-deployment-stagedescription-properties": {
            "AccessLogSetting": {
                "Required": "No",
                "Type": "AccessLogSetting",
                "UpdateRequires": "No interruption"
            },
            "CacheClusterEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "CacheClusterSize": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "CacheDataEncrypted": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "CacheTtlInSeconds": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "CachingEnabled": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "CanarySetting": {
                "Required": "No",
                "Type": "CanarySetting",
                "UpdateRequires": "No interruption"
            },
            "ClientCertificateId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DataTraceEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DocumentationVersion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "LoggingLevel": {},
            "MethodSettings": {
                "Required": "No",
                "Type": "List of [MethodSetting",
                "UpdateRequires": "No interruption"
            },
            "MetricsEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            },
            "ThrottlingBurstLimit": {},
            "ThrottlingRateLimit": {},
            "TracingEnabled": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Variables": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            }
        },
        "apigateway-documentationpart-location-properties": {
            "Method": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Path": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "StatusCode": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Type": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "apigateway-domainname-endpointconfiguration-properties": {
            "Types": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "apigateway-restapi-endpointconfiguration-properties": {
            "Types": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "apigateway-restapi-s3location-properties": {
            "Bucket": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ETag": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Key": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Version": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "apigateway-stage-accesslogsetting-properties": {
            "DestinationArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Format": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "apigateway-stage-canarysetting-properties": {
            "DeploymentId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PercentTraffic": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "StageVariableOverrides": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "UseStageCache": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "apigateway-usageplan-apistage-properties": {
            "ApiId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Stage": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Throttle": {
                "Required": "No",
                "Type": "Map of [ThrottleSettings",
                "UpdateRequires": "No interruption"
            }
        },
        "apigateway-usageplan-quotasettings-properties": {
            "Limit": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Offset": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Period": {}
        },
        "apigateway-usageplan-throttlesettings-properties": {
            "BurstLimit": {},
            "RateLimit": {}
        },
        "apigatewayv2-domainname-domainnameconfiguration-properties": {
            "CertificateArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "CertificateName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "EndpointType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "apigatewayv2-route-parameterconstraints-properties": {
            "Required": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "apigatewayv2-routeresponse-parameterconstraints-properties": {
            "Required": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "apigatewayv2-stage-accesslogsettings-properties": {
            "DestinationArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Format": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "apigatewayv2-stage-routesettings-properties": {
            "DataTraceEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "DetailedMetricsEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "LoggingLevel": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ThrottlingBurstLimit": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "ThrottlingRateLimit": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            }
        },
        "apitgateway-method-integration-integrationresponse-properties": {
            "ContentHandling": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ResponseParameters": {},
            "ResponseTemplates": {},
            "SelectionPattern": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "StatusCode": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "apitgateway-method-integration-properties": {
            "CacheKeyParameters": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "CacheNamespace": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ConnectionId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ConnectionType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ContentHandling": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Credentials": {},
            "IntegrationHttpMethod": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "IntegrationResponses": {
                "Required": "No",
                "Type": "List of [IntegrationResponse",
                "UpdateRequires": "No interruption"
            },
            "PassthroughBehavior": {},
            "RequestParameters": {},
            "RequestTemplates": {},
            "\"application/json\": \"{\\n \\\"statusCode\\\": 200\\n}\"": {},
            "TimeoutInMillis": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Type": {},
            "Uri": {}
        },
        "apitgateway-method-methodresponse-properties": {
            "ResponseModels": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "ResponseParameters": {},
            "StatusCode": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "apitgateway-stage-methodsetting-properties": {
            "CacheDataEncrypted": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "CacheTtlInSeconds": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "CachingEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "DataTraceEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "HttpMethod": {},
            "LoggingLevel": {},
            "MetricsEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "ResourcePath": {},
            "ThrottlingBurstLimit": {},
            "ThrottlingRateLimit": {}
        },
        "applicationautoscaling-scalabletarget-scalabletargetaction-properties": {
            "MaxCapacity": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "MinCapacity": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "applicationautoscaling-scalabletarget-scheduledaction-properties": {
            "EndTime": {
                "Required": "No",
                "Type": "Timestamp",
                "UpdateRequires": "No interruption"
            },
            "ScalableTargetAction": {
                "Required": "No",
                "Type": "ScalableTargetAction",
                "UpdateRequires": "No interruption"
            },
            "Schedule": {},
            "ScheduledActionName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "Pattern": "(?!((^[ ]+.*)|(.*([\\u0000-\\u001f]|[\\u007f-\\u009f]|[:/|])+.*)|(.*[ ]+$))).+",
                "UpdateRequires": "No interruption"
            },
            "StartTime": {
                "Required": "No",
                "Type": "Timestamp",
                "UpdateRequires": "No interruption"
            }
        },
        "applicationautoscaling-scalabletarget-suspendedstate-properties": {
            "DynamicScalingInSuspended": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "DynamicScalingOutSuspended": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "ScheduledScalingSuspended": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "applicationautoscaling-scalingpolicy-customizedmetricspecification-properties": {
            "Dimensions": {
                "Required": "No",
                "Type": "List of [MetricDimension",
                "UpdateRequires": "No interruption"
            },
            "MetricName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Namespace": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Statistic": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "Average",
                    "Maximum",
                    "Minimum",
                    "SampleCount",
                    "Sum"
                ],
                "UpdateRequires": "No interruption"
            },
            "Unit": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "applicationautoscaling-scalingpolicy-metricdimension-properties": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "applicationautoscaling-scalingpolicy-predefinedmetricspecification-properties": {
            "PredefinedMetricType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ALBRequestCountPerTarget",
                    "DynamoDBReadCapacityUtilization",
                    "DynamoDBWriteCapacityUtilization",
                    "EC2SpotFleetRequestAverageCPUUtilization",
                    "EC2SpotFleetRequestAverageNetworkIn",
                    "EC2SpotFleetRequestAverageNetworkOut",
                    "ECSServiceAverageCPUUtilization",
                    "ECSServiceAverageMemoryUtilization",
                    "RDSReaderAverageCPUUtilization",
                    "RDSReaderAverageDatabaseConnections",
                    "SageMakerVariantInvocationsPerInstance"
                ],
                "UpdateRequires": "No interruption"
            },
            "ResourceLabel": {
                "Required": "Conditional",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1023",
                "UpdateRequires": "No interruption"
            }
        },
        "applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment-properties": {
            "MetricIntervalLowerBound": {
                "Required": "Conditional",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "MetricIntervalUpperBound": {
                "Required": "Conditional",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "ScalingAdjustment": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-properties": {
            "AdjustmentType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "ChangeInCapacity",
                    "ExactCapacity",
                    "PercentChangeInCapacity"
                ],
                "UpdateRequires": "No interruption"
            },
            "Cooldown": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "MetricAggregationType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Average",
                    "Maximum",
                    "Minimum"
                ],
                "UpdateRequires": "No interruption"
            },
            "MinAdjustmentMagnitude": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "StepAdjustments": {
                "Required": "No",
                "Type": "List of [StepAdjustment",
                "UpdateRequires": "No interruption"
            }
        },
        "applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration-properties": {
            "CustomizedMetricSpecification": {
                "Required": "No",
                "Type": "CustomizedMetricSpecification",
                "UpdateRequires": "No interruption"
            },
            "DisableScaleIn": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "PredefinedMetricSpecification": {
                "Required": "No",
                "Type": "PredefinedMetricSpecification",
                "UpdateRequires": "No interruption"
            },
            "ScaleInCooldown": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "ScaleOutCooldown": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "TargetValue": {
                "Required": "Yes",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-mesh-egressfilter-properties": {
            "Type": {}
        },
        "appmesh-mesh-meshspec-properties": {
            "EgressFilter": {
                "Required": "No",
                "Type": "EgressFilter",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-mesh-tagref-properties": {
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-route-duration-properties": {
            "Unit": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-route-headermatchmethod-properties": {
            "Exact": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Prefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Range": {
                "Required": "No",
                "Type": "MatchRange",
                "UpdateRequires": "No interruption"
            },
            "Regex": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Suffix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-route-httpretrypolicy-properties": {
            "HttpRetryEvents": {},
            "MaxRetries": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "PerRetryTimeout": {
                "Required": "Yes",
                "Type": "Duration",
                "UpdateRequires": "No interruption"
            },
            "TcpRetryEvents": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-route-httproute-properties": {
            "Action": {
                "Required": "Yes",
                "Type": "HttpRouteAction",
                "UpdateRequires": "No interruption"
            },
            "Match": {
                "Required": "Yes",
                "Type": "HttpRouteMatch",
                "UpdateRequires": "No interruption"
            },
            "RetryPolicy": {
                "Required": "No",
                "Type": "HttpRetryPolicy",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-route-httprouteaction-properties": {
            "WeightedTargets": {
                "Required": "Yes",
                "Type": "List of [WeightedTarget",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-route-httprouteheader-properties": {
            "Invert": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Match": {
                "Required": "No",
                "Type": "HeaderMatchMethod",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-route-httproutematch-properties": {
            "Headers": {
                "Required": "No",
                "Type": "List of [HttpRouteHeader",
                "UpdateRequires": "No interruption"
            },
            "Method": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Prefix": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Scheme": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-route-matchrange-properties": {
            "End": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Start": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-route-routespec-properties": {
            "HttpRoute": {
                "Required": "No",
                "Type": "HttpRoute",
                "UpdateRequires": "No interruption"
            },
            "TcpRoute": {
                "Required": "No",
                "Type": "TcpRoute",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-route-tagref-properties": {
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-route-tcproute-properties": {
            "Action": {
                "Required": "Yes",
                "Type": "TcpRouteAction",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-route-tcprouteaction-properties": {
            "WeightedTargets": {
                "Required": "Yes",
                "Type": "List of [WeightedTarget",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-route-weightedtarget-properties": {
            "VirtualNode": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Weight": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualnode-accesslog-properties": {
            "File": {
                "Required": "No",
                "Type": "FileAccessLog",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualnode-awscloudmapinstanceattribute-properties": {
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualnode-awscloudmapservicediscovery-properties": {
            "Attributes": {
                "Required": "No",
                "Type": "List of [AwsCloudMapInstanceAttribute",
                "UpdateRequires": "No interruption"
            },
            "NamespaceName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ServiceName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualnode-backend-properties": {
            "VirtualService": {
                "Required": "No",
                "Type": "VirtualServiceBackend",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualnode-dnsservicediscovery-properties": {
            "Hostname": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualnode-fileaccesslog-properties": {
            "Path": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualnode-healthcheck-properties": {
            "HealthyThreshold": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "IntervalMillis": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Path": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Port": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Protocol": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TimeoutMillis": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "UnhealthyThreshold": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualnode-listener-properties": {
            "HealthCheck": {
                "Required": "No",
                "Type": "HealthCheck",
                "UpdateRequires": "No interruption"
            },
            "PortMapping": {
                "Required": "Yes",
                "Type": "PortMapping",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualnode-logging-properties": {
            "AccessLog": {
                "Required": "No",
                "Type": "AccessLog",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualnode-portmapping-properties": {
            "Port": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Protocol": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualnode-servicediscovery-properties": {
            "AWSCloudMap": {
                "Required": "No",
                "Type": "AwsCloudMapServiceDiscovery",
                "UpdateRequires": "No interruption"
            },
            "DNS": {
                "Required": "No",
                "Type": "DnsServiceDiscovery",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualnode-tagref-properties": {
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualnode-virtualnodespec-properties": {
            "Backends": {
                "Required": "No",
                "Type": "List of [Backend",
                "UpdateRequires": "No interruption"
            },
            "Listeners": {
                "Required": "No",
                "Type": "List of [Listener",
                "UpdateRequires": "No interruption"
            },
            "Logging": {
                "Required": "No",
                "Type": "Logging",
                "UpdateRequires": "No interruption"
            },
            "ServiceDiscovery": {
                "Required": "No",
                "Type": "ServiceDiscovery",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualnode-virtualservicebackend-properties": {
            "VirtualServiceName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualrouter-portmapping-properties": {
            "Port": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Protocol": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualrouter-tagref-properties": {
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualrouter-virtualrouterlistener-properties": {
            "PortMapping": {
                "Required": "Yes",
                "Type": "PortMapping",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualrouter-virtualrouterspec-properties": {
            "Listeners": {
                "Required": "Yes",
                "Type": "List of [VirtualRouterListener",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualservice-tagref-properties": {
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualservice-virtualnodeserviceprovider-properties": {
            "VirtualNodeName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualservice-virtualrouterserviceprovider-properties": {
            "VirtualRouterName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualservice-virtualserviceprovider-properties": {
            "VirtualNode": {
                "Required": "No",
                "Type": "VirtualNodeServiceProvider",
                "UpdateRequires": "No interruption"
            },
            "VirtualRouter": {
                "Required": "No",
                "Type": "VirtualRouterServiceProvider",
                "UpdateRequires": "No interruption"
            }
        },
        "appmesh-virtualservice-virtualservicespec-properties": {
            "Provider": {
                "Required": "No",
                "Type": "VirtualServiceProvider",
                "UpdateRequires": "No interruption"
            }
        },
        "appstream-directoryconfig-serviceaccountcredentials-properties": {
            "AccountName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            },
            "AccountPassword": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "127",
                "UpdateRequires": "No interruption"
            }
        },
        "appstream-fleet-computecapacity-properties": {
            "DesiredInstances": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "appstream-fleet-domainjoininfo-properties": {
            "DirectoryName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "OrganizationalUnitDistinguishedName": {
                "Required": "No",
                "Type": "String",
                "Maximum": "2000",
                "UpdateRequires": "No interruption"
            }
        },
        "appstream-fleet-vpcconfig-properties": {
            "SecurityGroupIds": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "5",
                "UpdateRequires": "No interruption"
            },
            "SubnetIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "appstream-imagebuilder-domainjoininfo-properties": {
            "DirectoryName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "OrganizationalUnitDistinguishedName": {
                "Required": "No",
                "Type": "String",
                "Maximum": "2000",
                "UpdateRequires": "No interruption"
            }
        },
        "appstream-imagebuilder-vpcconfig-properties": {
            "SecurityGroupIds": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "5",
                "UpdateRequires": "No interruption"
            },
            "SubnetIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "appstream-stack-applicationsettings-properties": {
            "Enabled": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "SettingsGroup": {
                "Required": "No",
                "Type": "String",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            }
        },
        "appstream-stack-storageconnector-properties": {
            "ConnectorType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "GOOGLE_DRIVE",
                    "HOMEFOLDERS",
                    "ONE_DRIVE"
                ],
                "UpdateRequires": "No interruption"
            },
            "Domains": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "10",
                "UpdateRequires": "No interruption"
            },
            "ResourceIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appstream-stack-usersetting-properties": {
            "Action": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "CLIPBOARD_COPY_FROM_LOCAL_DEVICE",
                    "CLIPBOARD_COPY_TO_LOCAL_DEVICE",
                    "FILE_DOWNLOAD",
                    "FILE_UPLOAD",
                    "PRINTING_TO_LOCAL_DEVICE"
                ],
                "UpdateRequires": "No interruption"
            },
            "Permission": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "DISABLED",
                    "ENABLED"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "appsync-datasource-authorizationconfig-properties": {
            "AuthorizationType": {
                "AuthorizationType`  <a name=\"cfn-appsync-datasource-authorizationconfig-authorizationtype\"></a>\nThe authorization type required by the HTTP endpoint\\.  \n+  **AWS\\_IAM*": "The authorization type is Sigv4\\.",
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "AwsIamConfig": {
                "Required": "No",
                "Type": "AwsIamConfig",
                "UpdateRequires": "No interruption"
            }
        },
        "appsync-datasource-awsiamconfig-properties": {
            "SigningRegion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SigningServiceName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appsync-datasource-dynamodbconfig-properties": {
            "AwsRegion": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TableName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "UseCallerCredentials": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "appsync-datasource-elasticsearchconfig-properties": {
            "AwsRegion": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Endpoint": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appsync-datasource-httpconfig-properties": {
            "AuthorizationConfig": {
                "Required": "No",
                "Type": "AuthorizationConfig",
                "UpdateRequires": "No interruption"
            },
            "Endpoint": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appsync-datasource-lambdaconfig-properties": {
            "LambdaFunctionArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appsync-datasource-rdshttpendpointconfig-properties": {
            "AwsRegion": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "AwsSecretStoreArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DatabaseName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DbClusterIdentifier": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Schema": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appsync-datasource-relationaldatabaseconfig-properties": {
            "RdsHttpEndpointConfig": {
                "Required": "No",
                "Type": "RdsHttpEndpointConfig",
                "UpdateRequires": "No interruption"
            },
            "RelationalDatabaseSourceType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appsync-graphqlapi-additionalauthenticationprovider-properties": {
            "AuthenticationType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "OpenIDConnectConfig": {
                "Required": "No",
                "Type": "OpenIDConnectConfig",
                "UpdateRequires": "No interruption"
            },
            "UserPoolConfig": {
                "Required": "No",
                "Type": "CognitoUserPoolConfig",
                "UpdateRequires": "No interruption"
            }
        },
        "appsync-graphqlapi-cognitouserpoolconfig-properties": {
            "AppIdClientRegex": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "AwsRegion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "UserPoolId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appsync-graphqlapi-logconfig-properties": {
            "CloudWatchLogsRoleArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ExcludeVerboseContent": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "FieldLogLevel": {
                "FieldLogLevel`  <a name=\"cfn-appsync-graphqlapi-logconfig-fieldloglevel\"></a>\nThe field logging level\\. Values can be NONE, ERROR, or ALL\\.   \n+  **NONE*": "No field\\-level logs are captured\\.\n+  **ERROR*",
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appsync-graphqlapi-openidconnectconfig-properties": {
            "AuthTTL": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "ClientId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "IatTTL": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "Issuer": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appsync-graphqlapi-userpoolconfig-properties": {
            "AppIdClientRegex": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "AwsRegion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DefaultAction": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "UserPoolId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "appsync-resolver-pipelineconfig-properties": {
            "Functions": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "as-group-properties": {
            "AutoScalingGroupName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            },
            "AvailabilityZones": {
                "Required": "Conditional",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Cooldown": {},
            "DesiredCapacity": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "HealthCheckGracePeriod": {},
            "HealthCheckType": {},
            "InstanceId": {},
            "LaunchConfigurationName": {
                "Required": "Conditional",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "LaunchTemplate": {
                "Required": "Conditional",
                "Type": "LaunchTemplateSpecification",
                "UpdateRequires": "No interruption"
            },
            "LifecycleHookSpecificationList": {
                "Required": "No",
                "Type": "List of [LifecycleHookSpecification",
                "UpdateRequires": "No interruption"
            },
            "LoadBalancerNames": {},
            "MaxSize": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MetricsCollection": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            },
            "MinSize": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MixedInstancesPolicy": {},
            "NotificationConfigurations": {
                "Required": "No",
                "Type": "List of [NotificationConfiguration",
                "UpdateRequires": "No interruption"
            },
            "PlacementGroup": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "ServiceLinkedRoleARN": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1600",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [TagProperty",
                "UpdateRequires": "No interruption"
            },
            "TargetGroupARNs": {},
            "TerminationPolicies": {},
            "VPCZoneIdentifier": {
                "Required": "Conditional",
                "Type": "List of String",
                "Minimum": "1",
                "Maximum": "2047",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Some interruptions"
            }
        },
        "as-group--examples--Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties": {
            "AutoScalingGroupName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            },
            "AvailabilityZones": {
                "Required": "Conditional",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Cooldown": {},
            "DesiredCapacity": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "HealthCheckGracePeriod": {},
            "HealthCheckType": {},
            "InstanceId": {},
            "LaunchConfigurationName": {
                "Required": "Conditional",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "LaunchTemplate": {
                "Required": "Conditional",
                "Type": "LaunchTemplateSpecification",
                "UpdateRequires": "No interruption"
            },
            "LifecycleHookSpecificationList": {
                "Required": "No",
                "Type": "List of [LifecycleHookSpecification",
                "UpdateRequires": "No interruption"
            },
            "LoadBalancerNames": {},
            "MaxSize": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MetricsCollection": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            },
            "MinSize": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MixedInstancesPolicy": {},
            "NotificationConfigurations": {
                "Required": "No",
                "Type": "List of [NotificationConfiguration",
                "UpdateRequires": "No interruption"
            },
            "PlacementGroup": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "ServiceLinkedRoleARN": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1600",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [TagProperty",
                "UpdateRequires": "No interruption"
            },
            "TargetGroupARNs": {},
            "TerminationPolicies": {},
            "VPCZoneIdentifier": {
                "Required": "Conditional",
                "Type": "List of String",
                "Minimum": "1",
                "Maximum": "2047",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Some interruptions"
            }
        },
        "as-launchconfig-blockdev-mapping-properties": {
            "DeviceName": {},
            "Ebs": {
                "Required": "No",
                "Type": "BlockDevice",
                "UpdateRequires": "No interruption"
            },
            "NoDevice": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "VirtualName": {}
        },
        "as-launchconfig-blockdev-template-properties": {
            "DeleteOnTermination": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Encrypted": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Iops": {},
            "SnapshotId": {
                "Required": "Conditional",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "VolumeSize": {
                "Required": "Conditional",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "16384",
                "UpdateRequires": "No interruption"
            },
            "VolumeType": {}
        },
        "as-launchconfig-properties": {
            "AssociatePublicIpAddress": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "BlockDeviceMappings": {
                "Required": "No",
                "Type": "List of [BlockDeviceMapping",
                "UpdateRequires": "Replacement"
            },
            "ClassicLinkVPCId": {},
            "ClassicLinkVPCSecurityGroups": {
                "Required": "Conditional",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "EbsOptimized": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "IamInstanceProfile": {},
            "ImageId": {},
            "InstanceId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "InstanceMonitoring": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "InstanceType": {},
            "KernelId": {},
            "KeyName": {},
            "LaunchConfigurationName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            },
            "PlacementTenancy": {},
            "RamDiskId": {},
            "SecurityGroups": {},
            "SpotPrice": {},
            "UserData": {}
        },
        "as-metricscollection-properties": {
            "Granularity": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "Metrics": {
                "Required": "No",
                "Type": "List of String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            }
        },
        "as-notificationconfigurations-properties": {
            "NotificationTypes": {
                "Required": "No",
                "Type": "List of String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "TopicARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1600",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            }
        },
        "as-policy-properties": {
            "AdjustmentType": {},
            "AutoScalingGroupName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "Cooldown": {},
            "EstimatedInstanceWarmup": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "MetricAggregationType": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "32",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "MinAdjustmentMagnitude": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "PolicyType": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "64",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "ScalingAdjustment": {
                "Required": "Conditional",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "StepAdjustments": {
                "Required": "Conditional",
                "Type": "List of [StepAdjustment",
                "UpdateRequires": "No interruption"
            },
            "TargetTrackingConfiguration": {
                "Required": "Conditional",
                "Type": "TargetTrackingConfiguration",
                "UpdateRequires": "No interruption"
            }
        },
        "as-tags-properties": {
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "PropagateAtLaunch": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            }
        },
        "ask-skill-authenticationconfiguration-properties": {
            "ClientId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ClientSecret": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RefreshToken": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ask-skill-overrides-properties": {
            "Manifest": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            }
        },
        "ask-skill-skillpackage-properties": {
            "Overrides": {
                "Required": "No",
                "Type": "Overrides",
                "UpdateRequires": "No interruption"
            },
            "S3Bucket": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "S3BucketRole": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "S3Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "S3ObjectVersion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "autoscaling-autoscalinggroup-instancesdistribution-properties": {
            "OnDemandAllocationStrategy": {
                "Required": "No",
                "Type": "String",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "OnDemandBaseCapacity": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Some interruptions"
            },
            "OnDemandPercentageAboveBaseCapacity": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Some interruptions"
            },
            "SpotAllocationStrategy": {
                "Required": "No",
                "Type": "String",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "SpotInstancePools": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "SpotMaxPrice": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "255",
                "UpdateRequires": "No interruption"
            }
        },
        "autoscaling-autoscalinggroup-launchtemplate-properties": {
            "LaunchTemplateSpecification": {
                "Required": "Yes",
                "Type": "LaunchTemplateSpecification",
                "UpdateRequires": "No interruption"
            },
            "Overrides": {
                "Required": "Conditional",
                "Type": "List of [LaunchTemplateOverrides",
                "UpdateRequires": "No interruption"
            }
        },
        "autoscaling-autoscalinggroup-launchtemplateoverrides-properties": {
            "InstanceType": {}
        },
        "autoscaling-autoscalinggroup-launchtemplatespecification-properties": {
            "LaunchTemplateId": {
                "Required": "Conditional",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "LaunchTemplateName": {
                "Required": "Conditional",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "128",
                "Pattern": "[a-zA-Z0-9\\(\\)\\.\\-/_]+",
                "UpdateRequires": "No interruption"
            },
            "Version": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            }
        },
        "autoscaling-autoscalinggroup-lifecyclehookspecification-properties": {
            "DefaultResult": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "HeartbeatTimeout": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "LifecycleHookName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[A-Za-z0-9\\-_\\/]+",
                "UpdateRequires": "No interruption"
            },
            "LifecycleTransition": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "NotificationMetadata": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1023",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "NotificationTargetARN": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "1600",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "RoleARN": {}
        },
        "autoscaling-autoscalinggroup-mixedinstancespolicy-properties": {
            "InstancesDistribution": {
                "Required": "No",
                "Type": "InstancesDistribution",
                "UpdateRequires": "No interruption"
            },
            "LaunchTemplate": {
                "Required": "Yes",
                "Type": "LaunchTemplate",
                "UpdateRequires": "No interruption"
            }
        },
        "autoscaling-scalingpolicy-customizedmetricspecification-properties": {
            "Dimensions": {
                "Required": "No",
                "Type": "List of [MetricDimension",
                "UpdateRequires": "No interruption"
            },
            "MetricName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Namespace": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Statistic": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "Average",
                    "Maximum",
                    "Minimum",
                    "SampleCount",
                    "Sum"
                ],
                "UpdateRequires": "No interruption"
            },
            "Unit": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "autoscaling-scalingpolicy-metricdimension-properties": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "autoscaling-scalingpolicy-predefinedmetricspecification-properties": {
            "PredefinedMetricType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ALBRequestCountPerTarget",
                    "ASGAverageCPUUtilization",
                    "ASGAverageNetworkIn",
                    "ASGAverageNetworkOut"
                ],
                "UpdateRequires": "No interruption"
            },
            "ResourceLabel": {
                "Required": "Conditional",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1023",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            }
        },
        "autoscaling-scalingpolicy-stepadjustments-properties": {
            "MetricIntervalLowerBound": {
                "Required": "Conditional",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "MetricIntervalUpperBound": {
                "Required": "Conditional",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "ScalingAdjustment": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "autoscaling-scalingpolicy-targettrackingconfiguration-properties": {
            "CustomizedMetricSpecification": {
                "Required": "Conditional",
                "Type": "CustomizedMetricSpecification",
                "UpdateRequires": "No interruption"
            },
            "DisableScaleIn": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "PredefinedMetricSpecification": {
                "Required": "Conditional",
                "Type": "PredefinedMetricSpecification",
                "UpdateRequires": "No interruption"
            },
            "TargetValue": {
                "Required": "Yes",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            }
        },
        "autoscalingplans-scalingplan-applicationsource-properties": {
            "CloudFormationStackARN": {
                "Required": "No",
                "Type": "String",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "TagFilters": {
                "Required": "No",
                "Type": "List of [TagFilter",
                "UpdateRequires": "No interruption"
            }
        },
        "autoscalingplans-scalingplan-customizedloadmetricspecification-properties": {
            "Dimensions": {
                "Required": "No",
                "Type": "List of [MetricDimension",
                "UpdateRequires": "No interruption"
            },
            "MetricName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Namespace": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Statistic": {
                "AllowedValues": [
                    "Sum"
                ],
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Unit": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "autoscalingplans-scalingplan-customizedscalingmetricspecification-properties": {
            "Dimensions": {
                "Required": "No",
                "Type": "List of [MetricDimension",
                "UpdateRequires": "No interruption"
            },
            "MetricName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Namespace": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Statistic": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "Average",
                    "Maximum",
                    "Minimum",
                    "SampleCount",
                    "Sum"
                ],
                "UpdateRequires": "No interruption"
            },
            "Unit": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "autoscalingplans-scalingplan-metricdimension-properties": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "autoscalingplans-scalingplan-predefinedloadmetricspecification-properties": {
            "PredefinedLoadMetricType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ALBTargetGroupRequestCount",
                    "ASGTotalCPUUtilization",
                    "ASGTotalNetworkIn",
                    "ASGTotalNetworkOut"
                ],
                "UpdateRequires": "No interruption"
            },
            "ResourceLabel": {
                "Required": "Conditional",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1023",
                "UpdateRequires": "No interruption"
            }
        },
        "autoscalingplans-scalingplan-predefinedscalingmetricspecification-properties": {
            "PredefinedScalingMetricType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ALBRequestCountPerTarget",
                    "ASGAverageCPUUtilization",
                    "ASGAverageNetworkIn",
                    "ASGAverageNetworkOut",
                    "DynamoDBReadCapacityUtilization",
                    "DynamoDBWriteCapacityUtilization",
                    "EC2SpotFleetRequestAverageCPUUtilization",
                    "EC2SpotFleetRequestAverageNetworkIn",
                    "EC2SpotFleetRequestAverageNetworkOut",
                    "ECSServiceAverageCPUUtilization",
                    "ECSServiceAverageMemoryUtilization",
                    "RDSReaderAverageCPUUtilization",
                    "RDSReaderAverageDatabaseConnections"
                ],
                "UpdateRequires": "No interruption"
            },
            "ResourceLabel": {
                "Required": "Conditional",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1023",
                "UpdateRequires": "No interruption"
            }
        },
        "autoscalingplans-scalingplan-scalinginstruction-properties": {
            "CustomizedLoadMetricSpecification": {},
            "DisableDynamicScaling": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "MaxCapacity": {},
            "MinCapacity": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "PredefinedLoadMetricSpecification": {},
            "PredictiveScalingMaxCapacityBehavior": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "SetForecastCapacityToMaxCapacity",
                    "SetMaxCapacityAboveForecastCapacity",
                    "SetMaxCapacityToForecastCapacity"
                ],
                "UpdateRequires": "No interruption"
            },
            "PredictiveScalingMaxCapacityBuffer": {},
            "PredictiveScalingMode": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "ForecastAndScale",
                    "ForecastOnly"
                ],
                "UpdateRequires": "No interruption"
            },
            "ResourceId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1600",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "ScalableDimension": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "autoscaling:autoScalingGroup:DesiredCapacity",
                    "dynamodb:index:ReadCapacityUnits",
                    "dynamodb:index:WriteCapacityUnits",
                    "dynamodb:table:ReadCapacityUnits",
                    "dynamodb:table:WriteCapacityUnits",
                    "ec2:spot-fleet-request:TargetCapacity",
                    "ecs:service:DesiredCount",
                    "rds:cluster:ReadReplicaCount"
                ],
                "UpdateRequires": "No interruption"
            },
            "ScalingPolicyUpdateBehavior": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "KeepExternalPolicies",
                    "ReplaceExternalPolicies"
                ],
                "UpdateRequires": "No interruption"
            },
            "ScheduledActionBufferTime": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "0",
                "UpdateRequires": "No interruption"
            },
            "ServiceNamespace": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "autoscaling",
                    "dynamodb",
                    "ec2",
                    "ecs",
                    "rds"
                ],
                "UpdateRequires": "No interruption"
            },
            "TargetTrackingConfigurations": {
                "Required": "Yes",
                "Type": "List of [TargetTrackingConfiguration",
                "UpdateRequires": "No interruption"
            }
        },
        "autoscalingplans-scalingplan-tagfilter-properties": {
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "Values": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "autoscalingplans-scalingplan-targettrackingconfiguration-properties": {
            "CustomizedScalingMetricSpecification": {
                "Required": "No",
                "Type": "CustomizedScalingMetricSpecification",
                "UpdateRequires": "No interruption"
            },
            "DisableScaleIn": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "EstimatedInstanceWarmup": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "PredefinedScalingMetricSpecification": {
                "Required": "No",
                "Type": "PredefinedScalingMetricSpecification",
                "UpdateRequires": "No interruption"
            },
            "ScaleInCooldown": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "ScaleOutCooldown": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "TargetValue": {
                "Required": "Yes",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            }
        },
        "backup-backupplan-backupplanresourcetype-properties": {
            "BackupPlanName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "BackupPlanRule": {
                "Required": "Yes",
                "Type": "List of [BackupRuleResourceType",
                "UpdateRequires": "No interruption"
            }
        },
        "backup-backupplan-backupruleresourcetype-properties": {
            "CompletionWindowMinutes": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "Lifecycle": {
                "Required": "No",
                "Type": "LifecycleResourceType",
                "UpdateRequires": "No interruption"
            },
            "RecoveryPointTags": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "RuleName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ScheduleExpression": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "StartWindowMinutes": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "TargetBackupVault": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "backup-backupplan-lifecycleresourcetype-properties": {
            "DeleteAfterDays": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "MoveToColdStorageAfterDays": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            }
        },
        "backup-backupselection-backupselectionresourcetype-properties": {
            "IamRoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ListOfTags": {
                "Required": "No",
                "Type": "List of [ConditionResourceType",
                "UpdateRequires": "No interruption"
            },
            "Resources": {},
            "SelectionName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "backup-backupselection-conditionresourcetype-properties": {
            "ConditionKey": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ConditionType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ConditionValue": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "backup-backupvault-notificationobjecttype-properties": {
            "BackupVaultEvents": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "SNSTopicArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "batch-computeenvironment-computeresources-properties": {
            "BidPercentage": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "DesiredvCpus": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Ec2KeyPair": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "ImageId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "InstanceRole": {},
            "InstanceTypes": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "LaunchTemplate": {},
            "MaxvCpus": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "MinvCpus": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "PlacementGroup": {},
            "SecurityGroupIds": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "SpotIamFleetRole": {},
            "Subnets": {},
            "Tags": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "Replacement"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "EC2",
                    "SPOT"
                ],
                "UpdateRequires": "Replacement"
            }
        },
        "batch-computeenvironment-launchtemplatespecification-properties": {
            "LaunchTemplateId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "LaunchTemplateName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Version": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "batch-jobdefinition-containerproperties-linuxparameters-properties": {
            "Devices": {
                "Required": "No",
                "Type": "List of [Device",
                "UpdateRequires": "No interruption"
            }
        },
        "batch-jobdefinition-containerproperties": {
            "Command": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Environment": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            },
            "Image": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "InstanceType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "JobRoleArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "LinuxParameters": {
                "Required": "No",
                "Type": "LinuxParameters",
                "UpdateRequires": "No interruption"
            },
            "Memory": {},
            "MountPoints": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            },
            "Privileged": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "ReadonlyRootFilesystem": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "ResourceRequirements": {
                "Required": "No",
                "Type": "List of [ResourceRequirement",
                "UpdateRequires": "No interruption"
            },
            "Ulimits": {
                "Required": "No",
                "Type": "List of [Ulimit",
                "UpdateRequires": "No interruption"
            },
            "User": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Vcpus": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Volumes": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "batch-jobdefinition-containerproperties-properties": {
            "Command": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Environment": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            },
            "Image": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "InstanceType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "JobRoleArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "LinuxParameters": {
                "Required": "No",
                "Type": "LinuxParameters",
                "UpdateRequires": "No interruption"
            },
            "Memory": {},
            "MountPoints": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            },
            "Privileged": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "ReadonlyRootFilesystem": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "ResourceRequirements": {
                "Required": "No",
                "Type": "List of [ResourceRequirement",
                "UpdateRequires": "No interruption"
            },
            "Ulimits": {
                "Required": "No",
                "Type": "List of [Ulimit",
                "UpdateRequires": "No interruption"
            },
            "User": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Vcpus": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Volumes": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "batch-jobdefinition-device-properties": {
            "ContainerPath": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "HostPath": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Permissions": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "batch-jobdefinition-environment-properties": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "batch-jobdefinition-mountpoints-properties": {
            "ContainerPath": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ReadOnly": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "SourceVolume": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "batch-jobdefinition-nodeproperties": {
            "MainNode": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "NodeRangeProperties": {
                "Required": "Yes",
                "Type": "List of [NodeRangeProperty",
                "UpdateRequires": "No interruption"
            },
            "NumNodes": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "batch-jobdefinition-nodeproperties-properties": {
            "MainNode": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "NodeRangeProperties": {
                "Required": "Yes",
                "Type": "List of [NodeRangeProperty",
                "UpdateRequires": "No interruption"
            },
            "NumNodes": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "batch-jobdefinition-noderangeproperty-properties": {
            "Container": {
                "Required": "No",
                "Type": "ContainerProperties",
                "UpdateRequires": "No interruption"
            },
            "TargetNodes": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "batch-jobdefinition-resourcerequirement-properties": {
            "Type": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "GPU"
                ],
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "batch-jobdefinition-retrystrategy-properties": {
            "Attempts": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "batch-jobdefinition-timeout-properties": {
            "AttemptDurationSeconds": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "batch-jobdefinition-ulimit-properties": {
            "HardLimit": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SoftLimit": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "batch-jobdefinition-volumes-properties": {
            "Host": {
                "Required": "No",
                "Type": "VolumesHost",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "batch-jobdefinition-volumeshost-properties": {
            "SourcePath": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "batch-jobqueue-computeenvironmentorder-properties": {
            "ComputeEnvironment": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Order": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "beanstalk-environment-tier-properties": {
            "Name": {},
            "Type": {},
            "Version": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "beanstalk-environment-properties": {
            "ApplicationName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "Replacement"
            },
            "CNAMEPrefix": {
                "Required": "No",
                "Type": "String",
                "Minimum": "4",
                "Maximum": "63",
                "UpdateRequires": "Replacement"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "200",
                "UpdateRequires": "No interruption"
            },
            "EnvironmentName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "4",
                "Maximum": "40",
                "UpdateRequires": "Replacement"
            },
            "OptionSettings": {
                "OptionSettings`  <a name=\"cfn-beanstalk-environment-optionsettings\"></a>\nKey\\-value pairs defining configuration options for this environment, such as the instance type\\. These options override the values that are defined in the solution stack or the [configuration template](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-beanstalk-configurationtemplate.html)\\. If you remove any options during a stack update, the removed options retain their current values\\.  \n *Required": "Yes\\. The `IamInstanceProfile` option is required\\.",
                "Required": "No",
                "Type": "List of [OptionSetting",
                "UpdateRequires": "No interruption"
            },
            "PlatformArn": {},
            "SolutionStackName": {},
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            },
            "TemplateName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            },
            "Tier": {
                "Required": "No",
                "Type": "Tier"
            },
            "VersionLabel": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            }
        },
        "beanstalk-option-settings-properties": {
            "Namespace": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "OptionName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ResourceName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "beanstalk-sourcebundle-properties": {
            "S3Bucket": {
                "Required": "Yes",
                "Type": "String",
                "Maximum": "255",
                "UpdateRequires": "No interruption"
            },
            "S3Key": {
                "Required": "Yes",
                "Type": "String",
                "Maximum": "1024",
                "UpdateRequires": "No interruption"
            }
        },
        "beanstalk-version-properties": {
            "ApplicationName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "Replacement"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "200",
                "UpdateRequires": "No interruption"
            },
            "SourceBundle": {
                "Required": "Yes",
                "Type": "SourceBundle",
                "UpdateRequires": "Replacement"
            }
        },
        "beanstalk-properties": {
            "ApplicationName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "Replacement"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "200",
                "UpdateRequires": "No interruption"
            },
            "ResourceLifecycleConfig": {
                "Required": "No",
                "Type": "ApplicationResourceLifecycleConfig",
                "UpdateRequires": "No interruption"
            }
        },
        "budgets-budget-budgetdata-properties": {
            "BudgetLimit": {
                "Required": "No",
                "Type": "Spend",
                "UpdateRequires": "No interruption"
            },
            "BudgetName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "BudgetType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "COST",
                    "RI_COVERAGE",
                    "RI_UTILIZATION",
                    "USAGE"
                ],
                "UpdateRequires": "No interruption"
            },
            "CostFilters": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "CostTypes": {
                "Required": "No",
                "Type": "CostTypes",
                "UpdateRequires": "No interruption"
            },
            "TimePeriod": {
                "Required": "No",
                "Type": "TimePeriod",
                "UpdateRequires": "No interruption"
            },
            "TimeUnit": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ANNUALLY",
                    "DAILY",
                    "MONTHLY",
                    "QUARTERLY"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "budgets-budget-costtypes-properties": {
            "IncludeCredit": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "IncludeDiscount": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "IncludeOtherSubscription": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "IncludeRecurring": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "IncludeRefund": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "IncludeSubscription": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "IncludeSupport": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "IncludeTax": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "IncludeUpfront": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "UseAmortized": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "UseBlended": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "budgets-budget-notification-properties": {
            "ComparisonOperator": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "EQUAL_TO",
                    "GREATER_THAN",
                    "LESS_THAN"
                ],
                "UpdateRequires": "No interruption"
            },
            "NotificationType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ACTUAL",
                    "FORECASTED"
                ],
                "UpdateRequires": "No interruption"
            },
            "Threshold": {
                "Required": "Yes",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "ThresholdType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "ABSOLUTE_VALUE",
                    "PERCENTAGE"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "budgets-budget-notificationwithsubscribers-properties": {
            "Notification": {
                "Required": "Yes",
                "Type": "Notification",
                "UpdateRequires": "No interruption"
            },
            "Subscribers": {
                "Required": "Yes",
                "Type": "List of [Subscriber",
                "Maximum": "11",
                "UpdateRequires": "No interruption"
            }
        },
        "budgets-budget-spend-properties": {
            "Amount": {
                "Required": "Yes",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "Unit": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "budgets-budget-subscriber-properties": {
            "Address": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SubscriptionType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "EMAIL",
                    "SNS"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "budgets-budget-timeperiod-properties": {
            "End": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Start": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "certificatemanager-certificate-domainvalidationoption-properties": {
            "DomainName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "253",
                "Pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                "UpdateRequires": "No interruption"
            },
            "ValidationDomain": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "253",
                "Pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                "UpdateRequires": "No interruption"
            }
        },
        "cloud9-environmentec2-repository-properties": {
            "PathComponent": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RepositoryUrl": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "w4784ab1c17c15c15c25c19b7": {
            "default": {
                "Required": "No",
                "Type": "String"
            }
        },
        "w4784ab1c17c15c15c25c23b7": {
            "Label": {
                "Required": "No",
                "Type": "AWS CloudFormation Interface Label"
            },
            "Parameters": {
                "Required": "No",
                "Type": "List of String values"
            }
        },
        "w4784ab1c17c15c15c25c27b7": {
            "ParameterLogicalID": {}
        },
        "cloudfront-cloudfrontoriginaccessidentity-cloudfrontoriginaccessidentityconfig-properties": {
            "Comment": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "cloudfront-distribution-cachebehavior-properties": {
            "AllowedMethods": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "CachedMethods": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Compress": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "DefaultTTL": {},
            "FieldLevelEncryptionId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ForwardedValues": {
                "Required": "Yes",
                "Type": "ForwardedValues",
                "UpdateRequires": "No interruption"
            },
            "LambdaFunctionAssociations": {
                "Required": "No",
                "Type": "List of [LambdaFunctionAssociation",
                "UpdateRequires": "No interruption"
            },
            "MaxTTL": {},
            "MinTTL": {},
            "PathPattern": {},
            "SmoothStreaming": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "TargetOriginId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TrustedSigners": {},
            "ViewerProtocolPolicy": {}
        },
        "cloudfront-distribution-cookies-properties": {
            "Forward": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "all",
                    "none",
                    "whitelist"
                ],
                "UpdateRequires": "No interruption"
            },
            "WhitelistedNames": {}
        },
        "cloudfront-distribution-customerrorresponse-properties": {
            "ErrorCachingMinTTL": {},
            "ErrorCode": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "ResponseCode": {
                "Required": "Conditional",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "ResponsePagePath": {}
        },
        "cloudfront-distribution-customoriginconfig-properties": {
            "HTTPPort": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "HTTPSPort": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "OriginKeepaliveTimeout": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "OriginProtocolPolicy": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "http-only",
                    "https-only",
                    "match-viewer"
                ],
                "UpdateRequires": "No interruption"
            },
            "OriginReadTimeout": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "OriginSSLProtocols": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "cloudfront-distribution-defaultcachebehavior-properties": {
            "AllowedMethods": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "CachedMethods": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Compress": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "DefaultTTL": {},
            "FieldLevelEncryptionId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ForwardedValues": {
                "Required": "Yes",
                "Type": "ForwardedValues",
                "UpdateRequires": "No interruption"
            },
            "LambdaFunctionAssociations": {
                "Required": "No",
                "Type": "List of [LambdaFunctionAssociation",
                "UpdateRequires": "No interruption"
            },
            "MaxTTL": {},
            "MinTTL": {},
            "SmoothStreaming": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "TargetOriginId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TrustedSigners": {},
            "ViewerProtocolPolicy": {}
        },
        "cloudfront-distribution-distributionconfig-properties": {
            "Aliases": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "CacheBehaviors": {
                "Required": "No",
                "Type": "List of [CacheBehavior",
                "UpdateRequires": "No interruption"
            },
            "Comment": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "CustomErrorResponses": {},
            "DefaultCacheBehavior": {
                "Required": "No",
                "Type": "DefaultCacheBehavior",
                "UpdateRequires": "No interruption"
            },
            "DefaultRootObject": {},
            "Enabled": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "HttpVersion": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "http1.1",
                    "http2"
                ],
                "UpdateRequires": "No interruption"
            },
            "IPV6Enabled": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Logging": {},
            "Origins": {
                "Required": "No",
                "Type": "List of [Origin",
                "UpdateRequires": "No interruption"
            },
            "PriceClass": {},
            "Restrictions": {
                "Required": "No",
                "Type": "Restrictions",
                "UpdateRequires": "No interruption"
            },
            "ViewerCertificate": {
                "Required": "No",
                "Type": "ViewerCertificate",
                "UpdateRequires": "No interruption"
            },
            "WebACLId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "cloudfront-distribution-forwardedvalues-properties": {
            "Cookies": {},
            "Headers": {},
            "QueryString": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "QueryStringCacheKeys": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "cloudfront-distribution-georestriction-properties": {
            "Locations": {},
            "RestrictionType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "blacklist",
                    "none",
                    "whitelist"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "cloudfront-distribution-lambdafunctionassociation-properties": {
            "EventType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "origin-request",
                    "origin-response",
                    "viewer-request",
                    "viewer-response"
                ],
                "UpdateRequires": "No interruption"
            },
            "LambdaFunctionARN": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "cloudfront-distribution-logging-properties": {
            "Bucket": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "IncludeCookies": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Prefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "cloudfront-distribution-origin-properties": {
            "CustomOriginConfig": {
                "Required": "No",
                "Type": "CustomOriginConfig",
                "UpdateRequires": "No interruption"
            },
            "DomainName": {
                "DomainName`  <a name=\"cfn-cloudfront-distribution-origin-domainname\"></a>\n **Amazon S3 origins*": "The DNS name of the Amazon S3 bucket from which you want CloudFront to get objects for this origin, for example, `myawsbucket.s3.amazonaws.com`\\. If you set up your bucket to be configured as a website endpoint, enter the Amazon S3 static website hosting endpoint for the bucket\\.  \nFor more information about specifying this value for different types of origins, see [Origin Domain Name](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName) in the *Amazon CloudFront Developer Guide*\\.  \nConstraints for Amazon S3 origins:   \n+ If you configured Amazon S3 Transfer Acceleration for your bucket, don't specify the `s3-accelerate` endpoint for `DomainName`\\.\n+ The bucket name must be between 3 and 63 characters long \\(inclusive\\)\\.\n+ The bucket name must contain only lowercase characters, numbers, periods, underscores, and dashes\\.\n+ The bucket name must not contain adjacent periods\\.\n **Custom Origins*",
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Id": {},
            "OriginCustomHeaders": {
                "Required": "No",
                "Type": "List of [OriginCustomHeader",
                "UpdateRequires": "No interruption"
            },
            "OriginPath": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "S3OriginConfig": {
                "Required": "No",
                "Type": "S3OriginConfig",
                "UpdateRequires": "No interruption"
            }
        },
        "cloudfront-distribution-origincustomheader-properties": {
            "HeaderName": {},
            "HeaderValue": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "cloudfront-distribution-restrictions-properties": {
            "GeoRestriction": {
                "Required": "Yes",
                "Type": "GeoRestriction",
                "UpdateRequires": "No interruption"
            }
        },
        "cloudfront-distribution-s3originconfig-properties": {
            "OriginAccessIdentity": {}
        },
        "cloudfront-distribution-viewercertificate-properties": {
            "AcmCertificateArn": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "CloudFrontDefaultCertificate": {
                "Required": "Conditional",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "IamCertificateId": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MinimumProtocolVersion": {},
            "SslSupportMethod": {}
        },
        "cloudfront-streamingdistribution-logging-properties": {
            "Bucket": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Enabled": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Prefix": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "cloudfront-streamingdistribution-s3origin-properties": {
            "DomainName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "OriginAccessIdentity": {}
        },
        "cloudfront-streamingdistribution-streamingdistributionconfig-properties": {
            "Aliases": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Comment": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Enabled": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Logging": {
                "Required": "No",
                "Type": "Logging",
                "UpdateRequires": "No interruption"
            },
            "PriceClass": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "PriceClass_100",
                    "PriceClass_200",
                    "PriceClass_All"
                ],
                "UpdateRequires": "No interruption"
            },
            "S3Origin": {
                "Required": "Yes",
                "Type": "S3Origin",
                "UpdateRequires": "No interruption"
            },
            "TrustedSigners": {}
        },
        "cloudfront-streamingdistribution-trustedsigners-properties": {
            "AwsAccountNumbers": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Enabled": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "cloudtrail-trail-dataresource-properties": {
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Values": {}
        },
        "cloudtrail-trail-eventselector-properties": {
            "DataResources": {},
            "IncludeManagementEvents": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "ReadWriteType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "All",
                    "ReadOnly",
                    "WriteOnly"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "cloudwatch-alarm-metric-properties": {
            "Dimensions": {
                "Required": "No",
                "Type": "List of [Dimension",
                "Maximum": "10",
                "UpdateRequires": "No interruption"
            },
            "MetricName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "UpdateRequires": "No interruption"
            },
            "Namespace": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[^:].*",
                "UpdateRequires": "No interruption"
            }
        },
        "cloudwatch-alarm-metricdataquery-properties": {
            "Expression": {},
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "UpdateRequires": "No interruption"
            },
            "Label": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MetricStat": {
                "Required": "No",
                "Type": "MetricStat",
                "UpdateRequires": "No interruption"
            },
            "ReturnData": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "cloudwatch-alarm-metricstat-properties": {
            "Metric": {
                "Required": "Yes",
                "Type": "Metric",
                "UpdateRequires": "No interruption"
            },
            "Period": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            },
            "Stat": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Unit": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Bits",
                    "Bits/Second",
                    "Bytes",
                    "Bytes/Second",
                    "Count",
                    "Count/Second",
                    "Gigabits",
                    "Gigabits/Second",
                    "Gigabytes",
                    "Gigabytes/Second",
                    "Kilobits",
                    "Kilobits/Second",
                    "Kilobytes",
                    "Kilobytes/Second",
                    "Megabits",
                    "Megabits/Second",
                    "Megabytes",
                    "Megabytes/Second",
                    "Microseconds",
                    "Milliseconds",
                    "None",
                    "Percent",
                    "Seconds",
                    "Terabits",
                    "Terabits/Second",
                    "Terabytes",
                    "Terabytes/Second"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "cloudwatch-anomalydetector-configuration-properties": {
            "ExcludedTimeRanges": {
                "Required": "No",
                "Type": "List of [Range",
                "UpdateRequires": "No interruption"
            },
            "MetricTimeZone": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "cloudwatch-anomalydetector-dimension-properties": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "UpdateRequires": "Replacement"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "UpdateRequires": "Replacement"
            }
        },
        "cloudwatch-anomalydetector-range-properties": {
            "EndTime": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "StartTime": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "codebuild-project-artifacts-properties": {
            "ArtifactIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "EncryptionDisabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Location": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "NamespaceType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "BUILD_ID",
                    "NONE"
                ],
                "UpdateRequires": "No interruption"
            },
            "OverrideArtifactName": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Packaging": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "NONE",
                    "ZIP"
                ],
                "UpdateRequires": "No interruption"
            },
            "Path": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "CODEPIPELINE",
                    "NO_ARTIFACTS",
                    "S3"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "codebuild-project-cloudwatchlogsconfig-properties": {
            "GroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Status": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "DISABLED",
                    "ENABLED"
                ],
                "UpdateRequires": "No interruption"
            },
            "StreamName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "codebuild-project-environment-properties": {
            "Certificate": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ComputeType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "EnvironmentVariables": {
                "Required": "No",
                "Type": "List of [EnvironmentVariable",
                "UpdateRequires": "No interruption"
            },
            "Image": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            },
            "ImagePullCredentialsType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "CODEBUILD",
                    "SERVICE_ROLE"
                ],
                "UpdateRequires": "No interruption"
            },
            "PrivilegedMode": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "RegistryCredential": {
                "Required": "No",
                "Type": "RegistryCredential",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "LINUX_CONTAINER",
                    "WINDOWS_CONTAINER"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "codebuild-project-environmentvariable-properties": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "PARAMETER_STORE",
                    "PLAINTEXT"
                ],
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "codebuild-project-gitsubmodulesconfig-properties": {
            "FetchSubmodules": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "codebuild-project-logsconfig-properties": {
            "CloudWatchLogs": {
                "Required": "No",
                "Type": "CloudWatchLogsConfig",
                "UpdateRequires": "No interruption"
            },
            "S3Logs": {
                "Required": "No",
                "Type": "S3LogsConfig",
                "UpdateRequires": "No interruption"
            }
        },
        "codebuild-project-projectcache-properties": {
            "Location": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Modes": {},
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "LOCAL",
                    "NO_CACHE",
                    "S3"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "codebuild-project-projectsourceversion-properties": {
            "SourceIdentifier": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SourceVersion": {}
        },
        "codebuild-project-projecttriggers-properties": {
            "FilterGroups": {
                "Required": "No",
                "Type": "List of [FilterGroup",
                "UpdateRequires": "No interruption"
            },
            "Webhook": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "codebuild-project-registrycredential-properties": {
            "Credential": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            },
            "CredentialProvider": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "SECRETS_MANAGER"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "codebuild-project-s3logsconfig-properties": {
            "EncryptionDisabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Location": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Status": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "DISABLED",
                    "ENABLED"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "codebuild-project-source-properties": {
            "Auth": {
                "Required": "No",
                "Type": "SourceAuth",
                "UpdateRequires": "No interruption"
            },
            "BuildSpec": {},
            "GitCloneDepth": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "0",
                "UpdateRequires": "No interruption"
            },
            "GitSubmodulesConfig": {
                "Required": "No",
                "Type": "GitSubmodulesConfig",
                "UpdateRequires": "No interruption"
            },
            "InsecureSsl": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Location": {},
            "ReportBuildStatus": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "SourceIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "BITBUCKET",
                    "CODECOMMIT",
                    "CODEPIPELINE",
                    "GITHUB",
                    "GITHUB_ENTERPRISE",
                    "NO_SOURCE",
                    "S3"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "codebuild-project-sourceauth-properties": {
            "Resource": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "OAUTH"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "codebuild-project-vpcconfig-properties": {
            "SecurityGroupIds": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "5",
                "UpdateRequires": "No interruption"
            },
            "Subnets": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "16",
                "UpdateRequires": "No interruption"
            },
            "VpcId": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            }
        },
        "codebuild-project-webhookfilter-properties": {
            "ExcludeMatchedPattern": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Pattern": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ACTOR_ACCOUNT_ID",
                    "BASE_REF",
                    "EVENT",
                    "FILE_PATH",
                    "HEAD_REF"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "codecommit-repository-code-properties": {
            "S3": {
                "Required": "Yes",
                "Type": "S3",
                "UpdateRequires": "No interruption"
            }
        },
        "codecommit-repository-repositorytrigger-properties": {
            "Branches": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "CustomData": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DestinationArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Events": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "codecommit-repository-s3-properties": {
            "Bucket": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ObjectVersion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "codedeploy-deploymentconfig-minimumhealthyhosts-properties": {
            "Type": {},
            "Value": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "codedeploy-deploymentgroup-alarm-properties": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "codedeploy-deploymentgroup-alarmconfiguration-properties": {
            "Alarms": {
                "Required": "No",
                "Type": "List of [Alarm",
                "UpdateRequires": "No interruption"
            },
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "IgnorePollAlarmFailure": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "codedeploy-deploymentgroup-autorollbackconfiguration-properties": {
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Events": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "codedeploy-deploymentgroup-deployment-revision-githublocation-properties": {
            "CommitId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Repository": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "codedeploy-deploymentgroup-deployment-revision-s3location-properties": {
            "Bucket": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "BundleType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "JSON",
                    "YAML",
                    "tar",
                    "tgz",
                    "zip"
                ],
                "UpdateRequires": "No interruption"
            },
            "ETag": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Version": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "codedeploy-deploymentgroup-deployment-revision-properties": {
            "GitHubLocation": {
                "Required": "No",
                "Type": "GitHubLocation",
                "UpdateRequires": "No interruption"
            },
            "RevisionType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "AppSpecContent",
                    "GitHub",
                    "S3",
                    "String"
                ],
                "UpdateRequires": "No interruption"
            },
            "S3Location": {
                "Required": "No",
                "Type": "S3Location",
                "UpdateRequires": "No interruption"
            }
        },
        "codedeploy-deploymentgroup-deployment-properties": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "IgnoreApplicationStopFailures": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Revision": {
                "Required": "Yes",
                "Type": "RevisionLocation",
                "UpdateRequires": "No interruption"
            }
        },
        "codedeploy-deploymentgroup-deploymentstyle-properties": {
            "DeploymentOption": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "WITHOUT_TRAFFIC_CONTROL",
                    "WITH_TRAFFIC_CONTROL"
                ],
                "UpdateRequires": "No interruption"
            },
            "DeploymentType": {}
        },
        "codedeploy-deploymentgroup-ec2tagfilter-properties": {
            "Key": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "KEY_AND_VALUE",
                    "KEY_ONLY",
                    "VALUE_ONLY"
                ],
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "codedeploy-deploymentgroup-ec2tagset-properties": {
            "Ec2TagSetList": {
                "Required": "No",
                "Type": "List of [EC2TagSetListObject",
                "UpdateRequires": "No interruption"
            }
        },
        "codedeploy-deploymentgroup-ec2tagsetlistobject-properties": {
            "Ec2TagGroup": {
                "Required": "No",
                "Type": "List of [EC2TagFilter",
                "UpdateRequires": "No interruption"
            }
        },
        "codedeploy-deploymentgroup-elbinfo-properties": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "codedeploy-deploymentgroup-loadbalancerinfo-properties": {
            "ElbInfoList": {
                "Required": "No",
                "Type": "List of [ELBInfo",
                "UpdateRequires": "No interruption"
            },
            "TargetGroupInfoList": {
                "Required": "No",
                "Type": "List of [TargetGroupInfo",
                "UpdateRequires": "No interruption"
            }
        },
        "codedeploy-deploymentgroup-onpremisestagset-properties": {
            "OnPremisesTagSetList": {
                "Required": "No",
                "Type": "List of [OnPremisesTagSetListObject",
                "UpdateRequires": "No interruption"
            }
        },
        "codedeploy-deploymentgroup-onpremisestagsetlistobject-properties": {
            "OnPremisesTagGroup": {
                "Required": "No",
                "Type": "List of [TagFilter",
                "UpdateRequires": "No interruption"
            }
        },
        "codedeploy-deploymentgroup-tagfilter-properties": {
            "Key": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "KEY_AND_VALUE",
                    "KEY_ONLY",
                    "VALUE_ONLY"
                ],
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "codedeploy-deploymentgroup-targetgroupinfo-properties": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "codedeploy-deploymentgroup-triggerconfig-properties": {
            "TriggerEvents": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "TriggerName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TriggerTargetArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "codepipeline-customactiontype-artifactdetails-properties": {
            "MaximumCount": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "0",
                "Maximum": "5",
                "UpdateRequires": "No interruption"
            },
            "MinimumCount": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "0",
                "Maximum": "5",
                "UpdateRequires": "No interruption"
            }
        },
        "codepipeline-customactiontype-configurationproperties": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "160",
                "UpdateRequires": "No interruption"
            },
            "Key": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "50",
                "UpdateRequires": "No interruption"
            },
            "Queryable": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Required": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Secret": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Type": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Boolean",
                    "Number",
                    "String"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "codepipeline-customactiontype-configurationproperties-properties": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "160",
                "UpdateRequires": "No interruption"
            },
            "Key": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "50",
                "UpdateRequires": "No interruption"
            },
            "Queryable": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Required": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Secret": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Type": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Boolean",
                    "Number",
                    "String"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "codepipeline-customactiontype-settings-properties": {
            "EntityUrlTemplate": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "UpdateRequires": "No interruption"
            },
            "ExecutionUrlTemplate": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "UpdateRequires": "No interruption"
            },
            "RevisionUrlTemplate": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "UpdateRequires": "No interruption"
            },
            "ThirdPartyConfigurationUrl": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "UpdateRequires": "No interruption"
            }
        },
        "codepipeline-pipeline-artifactstore-encryptionkey-properties": {
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "codepipeline-pipeline-artifactstore-properties": {
            "EncryptionKey": {
                "Required": "No",
                "Type": "EncryptionKey",
                "UpdateRequires": "No interruption"
            },
            "Location": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "63",
                "Pattern": "[a-zA-Z0-9\\-\\.]+",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "S3"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "codepipeline-pipeline-artifactstoremap-properties": {
            "ArtifactStore": {
                "Required": "Yes",
                "Type": "ArtifactStore",
                "UpdateRequires": "No interruption"
            },
            "Region": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "4",
                "Maximum": "30",
                "UpdateRequires": "No interruption"
            }
        },
        "codepipeline-pipeline-disableinboundstagetransitions-properties": {
            "Reason": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "300",
                "Pattern": "[a-zA-Z0-9!@ \\(\\)\\.\\*\\?\\-]+",
                "UpdateRequires": "No interruption"
            },
            "StageName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "[A-Za-z0-9.@\\-_]+",
                "UpdateRequires": "No interruption"
            }
        },
        "codepipeline-pipeline-stages-actions-actiontypeid-properties": {
            "Category": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Owner": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Provider": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Version": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "codepipeline-pipeline-stages-actions-inputartifacts-properties": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "[a-zA-Z0-9_\\-]+",
                "UpdateRequires": "No interruption"
            }
        },
        "codepipeline-pipeline-stages-actions-outputartifacts-properties": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "[a-zA-Z0-9_\\-]+",
                "UpdateRequires": "No interruption"
            }
        },
        "codepipeline-pipeline-stages-actions-properties": {
            "ActionTypeId": {
                "Required": "Yes",
                "Type": "ActionTypeId",
                "UpdateRequires": "No interruption"
            },
            "Configuration": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "InputArtifacts": {
                "Required": "No",
                "Type": "List of [InputArtifact",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "[A-Za-z0-9.@\\-_]+",
                "UpdateRequires": "No interruption"
            },
            "OutputArtifacts": {
                "Required": "No",
                "Type": "List of [OutputArtifact",
                "UpdateRequires": "No interruption"
            },
            "Region": {
                "Required": "No",
                "Type": "String",
                "Minimum": "4",
                "Maximum": "30",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "No",
                "Type": "String",
                "Maximum": "1024",
                "Pattern": "arn:aws(-[\\w]+)*:iam::[0-9]{12}:role/.*",
                "UpdateRequires": "No interruption"
            },
            "RunOrder": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "999",
                "UpdateRequires": "No interruption"
            }
        },
        "codepipeline-pipeline-stages-blockers-properties": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "Schedule"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "codepipeline-pipeline-stages-properties": {
            "Actions": {
                "Required": "Yes",
                "Type": "List of [ActionDeclaration",
                "UpdateRequires": "No interruption"
            },
            "Blockers": {
                "Required": "No",
                "Type": "List of [BlockerDeclaration",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "Pattern": "[A-Za-z0-9.@\\-_]+",
                "UpdateRequires": "No interruption"
            }
        },
        "codepipeline-webhook-webhookauthconfiguration-properties": {
            "AllowedIPRange": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            },
            "SecretToken": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            }
        },
        "codepipeline-webhook-webhookfilterrule-properties": {
            "JsonPath": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "150",
                "UpdateRequires": "No interruption"
            },
            "MatchEquals": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "150",
                "UpdateRequires": "No interruption"
            }
        },
        "codestar-githubrepository-code-properties": {
            "S3": {
                "Required": "Yes",
                "Type": "S3",
                "UpdateRequires": "Updates are not supported\\."
            }
        },
        "codestar-githubrepository-s3-properties": {
            "Bucket": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Updates are not supported\\."
            },
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Updates are not supported\\."
            },
            "ObjectVersion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Updates are not supported\\."
            }
        },
        "cognito-identitypool-cognitoidentityprovider-properties": {
            "ClientId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ProviderName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ServerSideTokenCheck": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "cognito-identitypool-cognitostreams-properties": {
            "RoleArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "StreamName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "StreamingStatus": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "cognito-identitypool-pushsync-properties": {
            "ApplicationArns": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "cognito-identitypoolroleattachment-mappingrule-properties": {
            "Claim": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MatchType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RoleARN": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "cognito-identitypoolroleattachment-rolemapping-properties": {
            "AmbiguousRoleResolution": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RulesConfiguration": {
                "Required": "No",
                "Type": "RulesConfigurationType",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "cognito-identitypoolroleattachment-rulesconfigurationtype-properties": {
            "Rules": {
                "Required": "Yes",
                "Type": "List of [MappingRule",
                "UpdateRequires": "No interruption"
            }
        },
        "cognito-userpool-admincreateuserconfig-properties": {
            "AllowAdminCreateUserOnly": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "InviteMessageTemplate": {
                "Required": "No",
                "Type": "InviteMessageTemplate",
                "UpdateRequires": "No interruption"
            },
            "UnusedAccountValidityDays": {
                "Required": "No",
                "Type": "Double",
                "Minimum": "0",
                "Maximum": "365",
                "UpdateRequires": "No interruption"
            }
        },
        "cognito-userpool-deviceconfiguration-properties": {
            "ChallengeRequiredOnNewDevice": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "DeviceOnlyRememberedOnUserPrompt": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "cognito-userpool-emailconfiguration-properties": {
            "EmailSendingAccount": {},
            "ReplyToEmailAddress": {
                "Required": "No",
                "Type": "String",
                "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+@[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
                "UpdateRequires": "No interruption"
            },
            "SourceArn": {
                "Required": "No",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "2048",
                "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                "UpdateRequires": "No interruption"
            }
        },
        "cognito-userpool-invitemessagetemplate-properties": {
            "EmailMessage": {
                "Required": "No",
                "Type": "String",
                "Minimum": "6",
                "Maximum": "20000",
                "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{####\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
                "UpdateRequires": "No interruption"
            },
            "EmailSubject": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "140",
                "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
                "UpdateRequires": "No interruption"
            },
            "SMSMessage": {
                "Required": "No",
                "Type": "String",
                "Minimum": "6",
                "Maximum": "140",
                "Pattern": ".*\\{####\\}.*",
                "UpdateRequires": "No interruption"
            }
        },
        "cognito-userpool-lambdaconfig-properties": {
            "CreateAuthChallenge": {
                "Required": "No",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "2048",
                "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                "UpdateRequires": "No interruption"
            },
            "CustomMessage": {
                "Required": "No",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "2048",
                "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                "UpdateRequires": "No interruption"
            },
            "DefineAuthChallenge": {
                "Required": "No",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "2048",
                "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                "UpdateRequires": "No interruption"
            },
            "PostAuthentication": {
                "Required": "No",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "2048",
                "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                "UpdateRequires": "No interruption"
            },
            "PostConfirmation": {
                "Required": "No",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "2048",
                "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                "UpdateRequires": "No interruption"
            },
            "PreAuthentication": {
                "Required": "No",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "2048",
                "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                "UpdateRequires": "No interruption"
            },
            "PreSignUp": {
                "Required": "No",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "2048",
                "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                "UpdateRequires": "No interruption"
            },
            "VerifyAuthChallengeResponse": {
                "Required": "No",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "2048",
                "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                "UpdateRequires": "No interruption"
            }
        },
        "cognito-userpool-numberattributeconstraints-properties": {
            "MaxValue": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MinValue": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "cognito-userpool-passwordpolicy-properties": {
            "MinimumLength": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "6",
                "Maximum": "99",
                "UpdateRequires": "No interruption"
            },
            "RequireLowercase": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "RequireNumbers": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "RequireSymbols": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "RequireUppercase": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "TemporaryPasswordValidityDays": {
                "Required": "No",
                "Type": "Double",
                "Minimum": "0",
                "Maximum": "365",
                "UpdateRequires": "No interruption"
            }
        },
        "cognito-userpool-policies-properties": {
            "PasswordPolicy": {
                "Required": "No",
                "Type": "PasswordPolicy",
                "UpdateRequires": "No interruption"
            }
        },
        "cognito-userpool-schemaattribute-properties": {
            "AttributeDataType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Boolean",
                    "DateTime",
                    "Number",
                    "String"
                ],
                "UpdateRequires": "No interruption"
            },
            "DeveloperOnlyAttribute": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Mutable": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "20",
                "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
                "UpdateRequires": "No interruption"
            },
            "NumberAttributeConstraints": {
                "Required": "No",
                "Type": "NumberAttributeConstraints",
                "UpdateRequires": "No interruption"
            },
            "Required": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "StringAttributeConstraints": {
                "Required": "No",
                "Type": "StringAttributeConstraints",
                "UpdateRequires": "No interruption"
            }
        },
        "cognito-userpool-smsconfiguration-properties": {
            "ExternalId": {},
            "SnsCallerArn": {
                "Required": "No",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "2048",
                "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                "UpdateRequires": "No interruption"
            }
        },
        "cognito-userpool-stringattributeconstraints-properties": {
            "MaxLength": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MinLength": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "cognito-userpool-userpooladdons-properties": {
            "AdvancedSecurityMode": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "AUDIT",
                    "ENFORCED",
                    "OFF"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "cognito-userpool-verificationmessagetemplate-properties": {
            "DefaultEmailOption": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "CONFIRM_WITH_CODE",
                    "CONFIRM_WITH_LINK"
                ],
                "UpdateRequires": "No interruption"
            },
            "EmailMessage": {
                "Required": "No",
                "Type": "String",
                "Minimum": "6",
                "Maximum": "20000",
                "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{####\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
                "UpdateRequires": "No interruption"
            },
            "EmailMessageByLink": {
                "Required": "No",
                "Type": "String",
                "Minimum": "6",
                "Maximum": "20000",
                "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{##[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*##\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
                "UpdateRequires": "No interruption"
            },
            "EmailSubject": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "140",
                "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
                "UpdateRequires": "No interruption"
            },
            "EmailSubjectByLink": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "140",
                "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
                "UpdateRequires": "No interruption"
            },
            "SmsMessage": {
                "Required": "No",
                "Type": "String",
                "Minimum": "6",
                "Maximum": "140",
                "Pattern": ".*\\{####\\}.*",
                "UpdateRequires": "No interruption"
            }
        },
        "cognito-userpoolclient-analyticsconfiguration-properties": {
            "ApplicationId": {
                "Required": "No",
                "Type": "String",
                "Pattern": "^[0-9a-fA-F]+$",
                "UpdateRequires": "No interruption"
            },
            "ExternalId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "No",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "2048",
                "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
                "UpdateRequires": "No interruption"
            },
            "UserDataShared": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "cognito-userpooluser-attributetype-properties": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "32",
                "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "Maximum": "2048",
                "UpdateRequires": "No interruption"
            }
        },
        "config-configrule-scope-properties": {
            "ComplianceResourceId": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "768",
                "UpdateRequires": "No interruption"
            },
            "ComplianceResourceTypes": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            },
            "TagKey": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "TagValue": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            }
        },
        "config-configrule-source-sourcedetails-properties": {
            "EventSource": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "aws.config"
                ],
                "UpdateRequires": "No interruption"
            },
            "MaximumExecutionFrequency": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "One_Hour",
                    "Six_Hours",
                    "Three_Hours",
                    "Twelve_Hours",
                    "TwentyFour_Hours"
                ],
                "UpdateRequires": "No interruption"
            },
            "MessageType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ConfigurationItemChangeNotification",
                    "ConfigurationSnapshotDeliveryCompleted",
                    "OversizedConfigurationItemChangeNotification",
                    "ScheduledNotification"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "config-configrule-source-properties": {
            "Owner": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "AWS",
                    "CUSTOM_LAMBDA"
                ],
                "UpdateRequires": "No interruption"
            },
            "SourceDetails": {
                "Required": "No",
                "Type": "List of [SourceDetail",
                "Maximum": "25",
                "UpdateRequires": "No interruption"
            },
            "SourceIdentifier": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            }
        },
        "config-configurationaggregator-accountaggregationsource-properties": {
            "AccountIds": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "AllAwsRegions": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "AwsRegions": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "config-configurationaggregator-organizationaggregationsource-properties": {
            "AllAwsRegions": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "AwsRegions": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "config-configurationrecorder-recordinggroup-properties": {
            "AllSupported": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "IncludeGlobalResourceTypes": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "ResourceTypes": {}
        },
        "config-deliverychannel-configsnapshotdeliveryproperties": {
            "DeliveryFrequency": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "One_Hour",
                    "Six_Hours",
                    "Three_Hours",
                    "Twelve_Hours",
                    "TwentyFour_Hours"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "config-deliverychannel-configsnapshotdeliveryproperties-properties": {
            "DeliveryFrequency": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "One_Hour",
                    "Six_Hours",
                    "Three_Hours",
                    "Twelve_Hours",
                    "TwentyFour_Hours"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "config-organizationconfigrule-organizationcustomrulemetadata-properties": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            },
            "InputParameters": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "UpdateRequires": "No interruption"
            },
            "LambdaFunctionArn": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            },
            "MaximumExecutionFrequency": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "One_Hour",
                    "Six_Hours",
                    "Three_Hours",
                    "Twelve_Hours",
                    "TwentyFour_Hours"
                ],
                "UpdateRequires": "No interruption"
            },
            "OrganizationConfigRuleTriggerTypes": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "ResourceIdScope": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "768",
                "UpdateRequires": "No interruption"
            },
            "ResourceTypesScope": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            },
            "TagKeyScope": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "TagValueScope": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            }
        },
        "config-organizationconfigrule-organizationmanagedrulemetadata-properties": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            },
            "InputParameters": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "UpdateRequires": "No interruption"
            },
            "MaximumExecutionFrequency": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "One_Hour",
                    "Six_Hours",
                    "Three_Hours",
                    "Twelve_Hours",
                    "TwentyFour_Hours"
                ],
                "UpdateRequires": "No interruption"
            },
            "ResourceIdScope": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "768",
                "UpdateRequires": "No interruption"
            },
            "ResourceTypesScope": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            },
            "RuleIdentifier": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            },
            "TagKeyScope": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "TagValueScope": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            }
        },
        "config-remediationconfiguration-executioncontrols-properties": {
            "SsmControls": {
                "Required": "No",
                "Type": "SsmControls",
                "UpdateRequires": "No interruption"
            }
        },
        "config-remediationconfiguration-remediationparametervalue-properties": {
            "ResourceValue": {
                "Required": "No",
                "Type": "ResourceValue",
                "UpdateRequires": "No interruption"
            },
            "StaticValue": {
                "Required": "No",
                "Type": "StaticValue",
                "UpdateRequires": "No interruption"
            }
        },
        "config-remediationconfiguration-resourcevalue-properties": {
            "Value": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "RESOURCE_ID"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "config-remediationconfiguration-ssmcontrols-properties": {
            "ConcurrentExecutionRatePercentage": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            },
            "ErrorPercentage": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            }
        },
        "config-remediationconfiguration-staticvalue-properties": {
            "Values": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "25",
                "UpdateRequires": "No interruption"
            }
        },
        "cw-alarm-properties": {
            "ActionsEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "AlarmActions": {},
            "AlarmDescription": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "1024",
                "UpdateRequires": "No interruption"
            },
            "AlarmName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "UpdateRequires": "Replacement"
            },
            "ComparisonOperator": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "GreaterThanOrEqualToThreshold",
                    "GreaterThanThreshold",
                    "GreaterThanUpperThreshold",
                    "LessThanLowerOrGreaterThanUpperThreshold",
                    "LessThanLowerThreshold",
                    "LessThanOrEqualToThreshold",
                    "LessThanThreshold"
                ],
                "UpdateRequires": "No interruption"
            },
            "DatapointsToAlarm": {},
            "Dimensions": {
                "Required": "No",
                "Type": "List of [Dimension",
                "Maximum": "10",
                "UpdateRequires": "No interruption"
            },
            "EvaluateLowSampleCountPercentile": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "UpdateRequires": "No interruption"
            },
            "EvaluationPeriods": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            },
            "ExtendedStatistic": {
                "Required": "No",
                "Type": "String",
                "Pattern": "p(\\d{1,2}(\\.\\d{0,2})?|100)",
                "UpdateRequires": "No interruption"
            },
            "InsufficientDataActions": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "5",
                "UpdateRequires": "No interruption"
            },
            "MetricName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "UpdateRequires": "No interruption"
            },
            "Metrics": {
                "Required": "No",
                "Type": "List of [MetricDataQuery",
                "UpdateRequires": "No interruption"
            },
            "Namespace": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "[^:].*",
                "UpdateRequires": "No interruption"
            },
            "OKActions": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "5",
                "UpdateRequires": "No interruption"
            },
            "Period": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            },
            "Statistic": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Average",
                    "Maximum",
                    "Minimum",
                    "SampleCount",
                    "Sum"
                ],
                "UpdateRequires": "No interruption"
            },
            "Threshold": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "ThresholdMetricId": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "UpdateRequires": "No interruption"
            },
            "TreatMissingData": {},
            "Unit": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Bits",
                    "Bits/Second",
                    "Bytes",
                    "Bytes/Second",
                    "Count",
                    "Count/Second",
                    "Gigabits",
                    "Gigabits/Second",
                    "Gigabytes",
                    "Gigabytes/Second",
                    "Kilobits",
                    "Kilobits/Second",
                    "Kilobytes",
                    "Kilobytes/Second",
                    "Megabits",
                    "Megabits/Second",
                    "Megabytes",
                    "Megabytes/Second",
                    "Microseconds",
                    "Milliseconds",
                    "None",
                    "Percent",
                    "Seconds",
                    "Terabits",
                    "Terabits/Second",
                    "Terabytes",
                    "Terabytes/Second"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "cw-dimension-properties": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "UpdateRequires": "No interruption"
            }
        },
        "datapipeline-pipeline-parameterobjects-attributes-properties": {
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "StringValue": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "10240",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            }
        },
        "datapipeline-pipeline-parameterobjects-properties": {
            "Attributes": {
                "Required": "Yes",
                "Type": "List of [ParameterAttribute",
                "UpdateRequires": "No interruption"
            },
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            }
        },
        "datapipeline-pipeline-parametervalues-properties": {
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "StringValue": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "10240",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            }
        },
        "datapipeline-pipeline-pipelineobjects-fields-properties": {
            "Key": {},
            "RefValue": {
                "Required": "Conditional",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "StringValue": {}
        },
        "datapipeline-pipeline-pipelineobjects-properties": {
            "Fields": {
                "Required": "Yes",
                "Type": "List of [Field",
                "UpdateRequires": "No interruption"
            },
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\n\\t]*",
                "UpdateRequires": "No interruption"
            }
        },
        "datapipeline-pipeline-pipelinetags-properties": {
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "dax-cluster-ssespecification-properties": {
            "SSEEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "directoryservice-microsoftad-vpcsettings-properties": {
            "SubnetIds": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "VpcId": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$",
                "UpdateRequires": "No interruption"
            }
        },
        "directoryservice-simplead-vpcsettings-properties": {
            "SubnetIds": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "VpcId": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$",
                "UpdateRequires": "No interruption"
            }
        },
        "dlm-lifecyclepolicy-createrule-properties": {
            "Interval": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            },
            "IntervalUnit": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "HOURS"
                ],
                "UpdateRequires": "No interruption"
            },
            "Times": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "1",
                "UpdateRequires": "No interruption"
            }
        },
        "dlm-lifecyclepolicy-policydetails-properties": {
            "ResourceTypes": {
                "Required": "Yes",
                "Type": "List of String",
                "Maximum": "1",
                "UpdateRequires": "No interruption"
            },
            "Schedules": {
                "Required": "No",
                "Type": "List of [Schedule",
                "Maximum": "1",
                "UpdateRequires": "No interruption"
            },
            "TargetTags": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "50",
                "UpdateRequires": "No interruption"
            }
        },
        "dlm-lifecyclepolicy-retainrule-properties": {
            "Count": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "1000",
                "UpdateRequires": "No interruption"
            }
        },
        "dlm-lifecyclepolicy-schedule-properties": {
            "CopyTags": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "CreateRule": {
                "Required": "No",
                "Type": "CreateRule",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "500",
                "UpdateRequires": "No interruption"
            },
            "RetainRule": {
                "Required": "No",
                "Type": "RetainRule",
                "UpdateRequires": "No interruption"
            },
            "TagsToAdd": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "50",
                "UpdateRequires": "No interruption"
            }
        },
        "dms-endpoint-dynamodbsettings-properties": {
            "ServiceAccessRoleArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "dms-endpoint-elasticsearchsettings-properties": {
            "EndpointUri": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ErrorRetryDuration": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "FullLoadErrorPercentage": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "ServiceAccessRoleArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "dms-endpoint-kinesissettings-properties": {
            "MessageFormat": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "json"
                ],
                "UpdateRequires": "No interruption"
            },
            "ServiceAccessRoleArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "StreamArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "dms-endpoint-mongodbsettings-properties": {
            "AuthMechanism": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "default",
                    "mongodb_cr",
                    "scram_sha_1"
                ],
                "UpdateRequires": "No interruption"
            },
            "AuthSource": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "AuthType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "no",
                    "password"
                ],
                "UpdateRequires": "No interruption"
            },
            "DatabaseName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DocsToInvestigate": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ExtractDocId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "NestingLevel": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "none",
                    "one"
                ],
                "UpdateRequires": "No interruption"
            },
            "Password": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Port": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "ServerName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Username": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "dms-endpoint-s3settings-properties": {
            "BucketFolder": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "BucketName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "CompressionType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "gzip",
                    "none"
                ],
                "UpdateRequires": "No interruption"
            },
            "CsvDelimiter": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "CsvRowDelimiter": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ExternalTableDefinition": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ServiceAccessRoleArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "dynamodb-attributedef-properties": {
            "AttributeName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "AttributeType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "dynamodb-gsi-properties": {
            "IndexName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "KeySchema": {},
            "Projection": {
                "Required": "Yes",
                "Type": "Projection",
                "UpdateRequires": "No interruption"
            },
            "ProvisionedThroughput": {}
        },
        "dynamodb-keyschema-properties": {
            "AttributeName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "UpdateRequires": "No interruption"
            },
            "KeyType": {}
        },
        "dynamodb-lsi-properties": {
            "IndexName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "KeySchema": {},
            "Projection": {
                "Required": "Yes",
                "Type": "Projection",
                "UpdateRequires": "No interruption"
            }
        },
        "dynamodb-projectionobject-properties": {
            "NonKeyAttributes": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "ProjectionType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "dynamodb-provisionedthroughput-properties": {
            "ReadCapacityUnits": {},
            "WriteCapacityUnits": {}
        },
        "dynamodb-streamspecification-properties": {
            "StreamViewType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "dynamodb-table-pointintimerecoveryspecification-properties": {
            "PointInTimeRecoveryEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "dynamodb-table-ssespecification-properties": {
            "KMSMasterKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SSEEnabled": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "SSEType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "AES256",
                    "KMS"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "dynamodb-timetolivespecification-properties": {
            "AttributeName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Enabled": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-blockdev-mapping-properties": {
            "DeviceName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Ebs": {
                "Required": "Conditional",
                "Type": "Ebs",
                "UpdateRequires": "No interruption"
            },
            "NoDevice": {
                "Required": "No",
                "Type": "NoDevice",
                "UpdateRequires": "No interruption"
            },
            "VirtualName": {
                "VirtualName`  <a name=\"cfn-ec2-blockdev-mapping-virtualname\"></a>\nThe virtual device name \\(`ephemeral`N\\)\\. The name must be in the form `ephemeral`*X* where *X* is a number starting from zero \\(0\\)\\. For example, an instance type with 2 available instance store volumes can specify mappings for `ephemeral0` and `ephemeral1`\\. The number of available instance store volumes depends on the instance type\\. After you connect to the instance, you must mount the volume\\.  \nNVMe instance store volumes are automatically enumerated and assigned a device name\\. Including them in your block device mapping has no effect\\.  \nYou can specify either `VirtualName` or `Ebs`, but not both\\.  \n *Constraints": "For M3 instances, you must specify instance store volumes in the block device mapping for the instance\\. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI\\.",
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-blockdev-template-properties": {
            "DeleteOnTermination": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Encrypted": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Iops": {},
            "KmsKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SnapshotId": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "VolumeSize": {
                "Required": "Conditional",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "VolumeType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "gp2",
                    "io1",
                    "sc1",
                    "st1",
                    "standard"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-capacityreservation-tag-properties": {
            "Key": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-capacityreservation-tagspecification-properties": {
            "ResourceType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "client-vpn-endpoint",
                    "customer-gateway",
                    "dedicated-host",
                    "dhcp-options",
                    "elastic-ip",
                    "fleet",
                    "fpga-image",
                    "host-reservation",
                    "image",
                    "instance",
                    "internet-gateway",
                    "launch-template",
                    "natgateway",
                    "network-acl",
                    "network-interface",
                    "reserved-instances",
                    "route-table",
                    "security-group",
                    "snapshot",
                    "spot-instances-request",
                    "subnet",
                    "transit-gateway",
                    "transit-gateway-attachment",
                    "transit-gateway-route-table",
                    "volume",
                    "vpc",
                    "vpc-peering-connection",
                    "vpn-connection",
                    "vpn-gateway"
                ],
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-clientvpnendpoint-certificateauthenticationrequest-properties": {
            "ClientRootCertificateChainArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-clientvpnendpoint-clientauthenticationrequest-properties": {
            "ActiveDirectory": {},
            "MutualAuthentication": {},
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "certificate-authentication",
                    "directory-service-authentication"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-clientvpnendpoint-connectionlogoptions-properties": {
            "CloudwatchLogGroup": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "CloudwatchLogStream": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Enabled": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-clientvpnendpoint-directoryserviceauthenticationrequest-properties": {
            "DirectoryId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-clientvpnendpoint-tagspecification-properties": {
            "ResourceType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "client-vpn-endpoint",
                    "customer-gateway",
                    "dedicated-host",
                    "dhcp-options",
                    "elastic-ip",
                    "fleet",
                    "fpga-image",
                    "host-reservation",
                    "image",
                    "instance",
                    "internet-gateway",
                    "launch-template",
                    "natgateway",
                    "network-acl",
                    "network-interface",
                    "reserved-instances",
                    "route-table",
                    "security-group",
                    "snapshot",
                    "spot-instances-request",
                    "subnet",
                    "transit-gateway",
                    "transit-gateway-attachment",
                    "transit-gateway-route-table",
                    "volume",
                    "vpc",
                    "vpc-peering-connection",
                    "vpn-connection",
                    "vpn-gateway"
                ],
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-ebs-volume-properties": {
            "AutoEnableIO": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "AvailabilityZone": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Encrypted": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Iops": {},
            "KmsKeyId": {},
            "Size": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "SnapshotId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            },
            "VolumeType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "gp2",
                    "io1",
                    "sc1",
                    "st1",
                    "standard"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-ebs-volumeattachment-properties": {
            "Device": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "InstanceId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "VolumeId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "ec2-ec2fleet-fleetlaunchtemplateconfigrequest-properties": {
            "LaunchTemplateSpecification": {
                "Required": "No",
                "Type": "FleetLaunchTemplateSpecificationRequest",
                "UpdateRequires": "No interruption"
            },
            "Overrides": {
                "Required": "No",
                "Type": "List of [FleetLaunchTemplateOverridesRequest",
                "Maximum": "50",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-properties": {
            "AvailabilityZone": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "InstanceType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "a1.2xlarge",
                    "a1.4xlarge",
                    "a1.large",
                    "a1.medium",
                    "a1.xlarge",
                    "c1.medium",
                    "c1.xlarge",
                    "c3.2xlarge",
                    "c3.4xlarge",
                    "c3.8xlarge",
                    "c3.large",
                    "c3.xlarge",
                    "c4.2xlarge",
                    "c4.4xlarge",
                    "c4.8xlarge",
                    "c4.large",
                    "c4.xlarge",
                    "c5.18xlarge",
                    "c5.2xlarge",
                    "c5.4xlarge",
                    "c5.9xlarge",
                    "c5.large",
                    "c5.xlarge",
                    "c5d.18xlarge",
                    "c5d.2xlarge",
                    "c5d.4xlarge",
                    "c5d.9xlarge",
                    "c5d.large",
                    "c5d.xlarge",
                    "c5n.18xlarge",
                    "c5n.2xlarge",
                    "c5n.4xlarge",
                    "c5n.9xlarge",
                    "c5n.large",
                    "c5n.xlarge",
                    "cc1.4xlarge",
                    "cc2.8xlarge",
                    "cg1.4xlarge",
                    "cr1.8xlarge",
                    "d2.2xlarge",
                    "d2.4xlarge",
                    "d2.8xlarge",
                    "d2.xlarge",
                    "f1.16xlarge",
                    "f1.2xlarge",
                    "f1.4xlarge",
                    "g2.2xlarge",
                    "g2.8xlarge",
                    "g3.16xlarge",
                    "g3.4xlarge",
                    "g3.8xlarge",
                    "g3s.xlarge",
                    "h1.16xlarge",
                    "h1.2xlarge",
                    "h1.4xlarge",
                    "h1.8xlarge",
                    "hi1.4xlarge",
                    "hs1.8xlarge",
                    "i2.2xlarge",
                    "i2.4xlarge",
                    "i2.8xlarge",
                    "i2.xlarge",
                    "i3.16xlarge",
                    "i3.2xlarge",
                    "i3.4xlarge",
                    "i3.8xlarge",
                    "i3.large",
                    "i3.metal",
                    "i3.xlarge",
                    "m1.large",
                    "m1.medium",
                    "m1.small",
                    "m1.xlarge",
                    "m2.2xlarge",
                    "m2.4xlarge",
                    "m2.xlarge",
                    "m3.2xlarge",
                    "m3.large",
                    "m3.medium",
                    "m3.xlarge",
                    "m4.10xlarge",
                    "m4.16xlarge",
                    "m4.2xlarge",
                    "m4.4xlarge",
                    "m4.large",
                    "m4.xlarge",
                    "m5.12xlarge",
                    "m5.24xlarge",
                    "m5.2xlarge",
                    "m5.4xlarge",
                    "m5.large",
                    "m5.metal",
                    "m5.xlarge",
                    "m5a.12xlarge",
                    "m5a.24xlarge",
                    "m5a.2xlarge",
                    "m5a.4xlarge",
                    "m5a.large",
                    "m5a.xlarge",
                    "m5ad.12xlarge",
                    "m5ad.16xlarge",
                    "m5ad.24xlarge",
                    "m5ad.2xlarge",
                    "m5ad.4xlarge",
                    "m5ad.8xlarge",
                    "m5ad.large",
                    "m5ad.xlarge",
                    "m5d.12xlarge",
                    "m5d.24xlarge",
                    "m5d.2xlarge",
                    "m5d.4xlarge",
                    "m5d.large",
                    "m5d.metal",
                    "m5d.xlarge",
                    "p2.16xlarge",
                    "p2.8xlarge",
                    "p2.xlarge",
                    "p3.16xlarge",
                    "p3.2xlarge",
                    "p3.8xlarge",
                    "p3dn.24xlarge",
                    "r3.2xlarge",
                    "r3.4xlarge",
                    "r3.8xlarge",
                    "r3.large",
                    "r3.xlarge",
                    "r4.16xlarge",
                    "r4.2xlarge",
                    "r4.4xlarge",
                    "r4.8xlarge",
                    "r4.large",
                    "r4.xlarge",
                    "r5.12xlarge",
                    "r5.24xlarge",
                    "r5.2xlarge",
                    "r5.4xlarge",
                    "r5.large",
                    "r5.metal",
                    "r5.xlarge",
                    "r5a.12xlarge",
                    "r5a.24xlarge",
                    "r5a.2xlarge",
                    "r5a.4xlarge",
                    "r5a.large",
                    "r5a.xlarge",
                    "r5ad.12xlarge",
                    "r5ad.16xlarge",
                    "r5ad.24xlarge",
                    "r5ad.2xlarge",
                    "r5ad.4xlarge",
                    "r5ad.8xlarge",
                    "r5ad.large",
                    "r5ad.xlarge",
                    "r5d.12xlarge",
                    "r5d.24xlarge",
                    "r5d.2xlarge",
                    "r5d.4xlarge",
                    "r5d.large",
                    "r5d.metal",
                    "r5d.xlarge",
                    "t1.micro",
                    "t2.2xlarge",
                    "t2.large",
                    "t2.medium",
                    "t2.micro",
                    "t2.nano",
                    "t2.small",
                    "t2.xlarge",
                    "t3.2xlarge",
                    "t3.large",
                    "t3.medium",
                    "t3.micro",
                    "t3.nano",
                    "t3.small",
                    "t3.xlarge",
                    "t3a.2xlarge",
                    "t3a.large",
                    "t3a.medium",
                    "t3a.micro",
                    "t3a.nano",
                    "t3a.small",
                    "t3a.xlarge",
                    "u-12tb1.metal",
                    "u-6tb1.metal",
                    "u-9tb1.metal",
                    "x1.16xlarge",
                    "x1.32xlarge",
                    "x1e.16xlarge",
                    "x1e.2xlarge",
                    "x1e.32xlarge",
                    "x1e.4xlarge",
                    "x1e.8xlarge",
                    "x1e.xlarge",
                    "z1d.12xlarge",
                    "z1d.2xlarge",
                    "z1d.3xlarge",
                    "z1d.6xlarge",
                    "z1d.large",
                    "z1d.metal",
                    "z1d.xlarge"
                ],
                "UpdateRequires": "No interruption"
            },
            "MaxPrice": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Priority": {},
            "SubnetId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "WeightedCapacity": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-ec2fleet-fleetlaunchtemplatespecificationrequest-properties": {
            "LaunchTemplateId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "LaunchTemplateName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "128",
                "Pattern": "[a-zA-Z0-9\\(\\)\\.\\-/_]+",
                "UpdateRequires": "No interruption"
            },
            "Version": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-ec2fleet-ondemandoptionsrequest-properties": {
            "AllocationStrategy": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "lowest-price",
                    "prioritized"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-ec2fleet-spotoptionsrequest-properties": {
            "AllocationStrategy": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "diversified",
                    "lowest-price"
                ],
                "UpdateRequires": "No interruption"
            },
            "InstanceInterruptionBehavior": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "hibernate",
                    "stop",
                    "terminate"
                ],
                "UpdateRequires": "No interruption"
            },
            "InstancePoolsToUseCount": {}
        },
        "ec2-ec2fleet-tagrequest-properties": {
            "Key": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-ec2fleet-tagspecification-properties": {
            "ResourceType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "client-vpn-endpoint",
                    "customer-gateway",
                    "dedicated-host",
                    "dhcp-options",
                    "elastic-ip",
                    "fleet",
                    "fpga-image",
                    "host-reservation",
                    "image",
                    "instance",
                    "internet-gateway",
                    "launch-template",
                    "natgateway",
                    "network-acl",
                    "network-interface",
                    "reserved-instances",
                    "route-table",
                    "security-group",
                    "snapshot",
                    "spot-instances-request",
                    "subnet",
                    "transit-gateway",
                    "transit-gateway-attachment",
                    "transit-gateway-route-table",
                    "volume",
                    "vpc",
                    "vpc-peering-connection",
                    "vpn-connection",
                    "vpn-gateway"
                ],
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [TagRequest",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-ec2fleet-targetcapacityspecificationrequest-properties": {
            "DefaultTargetCapacityType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "on-demand",
                    "spot"
                ],
                "UpdateRequires": "No interruption"
            },
            "OnDemandTargetCapacity": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "SpotTargetCapacity": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "TotalTargetCapacity": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-eip-association-properties": {
            "AllocationId": {
                "Required": "Conditional",
                "Type": "String"
            },
            "EIP": {
                "Required": "Conditional",
                "Type": "String"
            },
            "InstanceId": {
                "Required": "Conditional",
                "Type": "String"
            },
            "NetworkInterfaceId": {
                "Required": "Conditional",
                "Type": "String"
            },
            "PrivateIpAddress": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-eip-properties": {
            "Domain": {
                "Required": "Conditional",
                "Type": "String",
                "AllowedValues": [
                    "standard",
                    "vpc"
                ],
                "UpdateRequires": "Replacement"
            },
            "InstanceId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PublicIpv4Pool": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-elb-accessloggingpolicy-properties": {
            "EmitInterval": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Enabled": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "S3BucketName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "S3BucketPrefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-elb-AppCookieStickinessPolicy-properties": {
            "CookieName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PolicyName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-elb-connectiondrainingpolicy-properties": {
            "Enabled": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Timeout": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-elb-connectionsettings-properties": {
            "IdleTimeout": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "3600",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-elb-health-check-properties": {
            "HealthyThreshold": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "2",
                "Maximum": "10",
                "UpdateRequires": "No interruption"
            },
            "Interval": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "5",
                "Maximum": "300",
                "UpdateRequires": "No interruption"
            },
            "Target": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Timeout": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "2",
                "Maximum": "60",
                "UpdateRequires": "No interruption"
            },
            "UnhealthyThreshold": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "2",
                "Maximum": "10",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-elb-LBCookieStickinessPolicy-properties": {
            "CookieExpirationPeriod": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PolicyName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-elb-listener-properties": {
            "InstancePort": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "65535",
                "UpdateRequires": "No interruption"
            },
            "InstanceProtocol": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "LoadBalancerPort": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PolicyNames": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Protocol": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SSLCertificateId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-elb-policy-properties": {
            "Attributes": {
                "Required": "Yes",
                "Type": "List of Json",
                "UpdateRequires": "No interruption"
            },
            "InstancePorts": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "LoadBalancerPorts": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "PolicyName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PolicyType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-elb-properties": {
            "AccessLoggingPolicy": {
                "Required": "No",
                "Type": "AccessLoggingPolicy",
                "UpdateRequires": "No interruption"
            },
            "AppCookieStickinessPolicy": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            },
            "AvailabilityZones": {
                "Required": "No",
                "Type": "List of String"
            },
            "ConnectionDrainingPolicy": {},
            "ConnectionSettings": {},
            "CrossZone": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "HealthCheck": {
                "Required": "No",
                "Type": "HealthCheck"
            },
            "Instances": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "LBCookieStickinessPolicy": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            },
            "Listeners": {
                "Required": "Yes",
                "Type": "List",
                "UpdateRequires": "No interruption"
            },
            "LoadBalancerName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Policies": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            },
            "Scheme": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SecurityGroups": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Subnets": {
                "Required": "No",
                "Type": "List of String"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-instance-cpuoptions-properties": {
            "CoreCount": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "ThreadsPerCore": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-instance-creditspecification-properties": {
            "CPUCredits": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-instance-elasticgpuspecification-properties": {
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-instance-elasticinferenceaccelerator-properties": {
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-instance-instanceipv6address-properties": {
            "Ipv6Address": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-instance-launchtemplatespecification-properties": {
            "LaunchTemplateId": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "LaunchTemplateName": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Version": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-instance-licensespecification-properties": {
            "LicenseConfigurationArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-instance-ssmassociations-associationparameters-properties": {
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-instance-ssmassociations-properties": {
            "AssociationParameters": {
                "Required": "No",
                "Type": "List of [AssociationParameter",
                "UpdateRequires": "No interruption"
            },
            "DocumentName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-instance-properties": {
            "AdditionalInfo": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Some interruptions"
            },
            "Affinity": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Some interruptions"
            },
            "AvailabilityZone": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "BlockDeviceMappings": {
                "Required": "No",
                "Type": "List of [BlockDeviceMapping",
                "UpdateRequires": "Some interruptions"
            },
            "CpuOptions": {
                "Required": "No",
                "Type": "CpuOptions",
                "UpdateRequires": "Replacement"
            },
            "CreditSpecification": {},
            "DisableApiTermination": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "EbsOptimized": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Some interruptions"
            },
            "ElasticGpuSpecifications": {},
            "ElasticInferenceAccelerators": {
                "Required": "No",
                "Type": "List of [ElasticInferenceAccelerator",
                "UpdateRequires": "Replacement"
            },
            "HostId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Some interruptions"
            },
            "IamInstanceProfile": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ImageId": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "InstanceInitiatedShutdownBehavior": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "stop",
                    "terminate"
                ],
                "UpdateRequires": "No interruption"
            },
            "InstanceType": {},
            "Ipv6AddressCount": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "Ipv6Addresses": {
                "Required": "No",
                "Type": "List of [InstanceIpv6Address",
                "UpdateRequires": "Replacement"
            },
            "KernelId": {},
            "KeyName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "LaunchTemplate": {
                "Required": "No",
                "Type": "LaunchTemplateSpecification",
                "UpdateRequires": "Replacement"
            },
            "LicenseSpecifications": {
                "Required": "No",
                "Type": "List of [LicenseSpecification",
                "UpdateRequires": "Replacement"
            },
            "Monitoring": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "NetworkInterfaces": {
                "Required": "No",
                "Type": "List of [NetworkInterface",
                "UpdateRequires": "Replacement"
            },
            "PlacementGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "PrivateIpAddress": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "RamdiskId": {},
            "SecurityGroupIds": {
                "Required": "Conditional",
                "Type": "List of String",
                "UpdateRequires": "Some interruptions"
            },
            "SecurityGroups": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "SourceDestCheck": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "SsmAssociations": {},
            "SubnetId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            },
            "Tenancy": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "dedicated",
                    "default",
                    "host"
                ],
                "UpdateRequires": "Some interruptions"
            },
            "UserData": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Some interruptions"
            },
            "Volumes": {
                "Required": "No",
                "Type": "List of [Volume",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-launchtemplate-blockdevicemapping-ebs-properties": {
            "DeleteOnTermination": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Encrypted": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Iops": {},
            "KmsKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SnapshotId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "VolumeSize": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "VolumeType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "gp2",
                    "io1",
                    "sc1",
                    "st1",
                    "standard"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-launchtemplate-blockdevicemapping-properties": {
            "DeviceName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Ebs": {
                "Required": "No",
                "Type": "Ebs",
                "UpdateRequires": "No interruption"
            },
            "NoDevice": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "VirtualName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-launchtemplate-capacityreservationtarget-properties": {
            "CapacityReservationId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-launchtemplate-elasticgpuspecification-properties": {
            "Type": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-launchtemplate-ipv6add-properties": {
            "Ipv6Address": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-launchtemplate-launchtemplatedata-capacityreservationspecification-properties": {
            "CapacityReservationPreference": {
                "Required": "No",
                "Type": "CapacityReservationPreference",
                "AllowedValues": [
                    "none",
                    "open"
                ],
                "UpdateRequires": "No interruption"
            },
            "CapacityReservationTarget": {
                "Required": "No",
                "Type": "CapacityReservationTarget",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-launchtemplate-launchtemplatedata-cpuoptions-properties": {
            "CoreCount": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "ThreadsPerCore": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-launchtemplate-launchtemplatedata-creditspecification-properties": {
            "CpuCredits": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-launchtemplate-launchtemplatedata-hibernationoptions-properties": {
            "Configured": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-launchtemplate-launchtemplatedata-iaminstanceprofile-properties": {
            "Arn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-properties": {
            "BlockDurationMinutes": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "InstanceInterruptionBehavior": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "hibernate",
                    "stop",
                    "terminate"
                ],
                "UpdateRequires": "No interruption"
            },
            "MaxPrice": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SpotInstanceType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "one-time",
                    "persistent"
                ],
                "UpdateRequires": "No interruption"
            },
            "ValidUntil": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-launchtemplate-launchtemplatedata-instancemarketoptions-properties": {
            "MarketType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "spot"
                ],
                "UpdateRequires": "No interruption"
            },
            "SpotOptions": {
                "Required": "No",
                "Type": "SpotOptions",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-launchtemplate-launchtemplatedata-monitoring-properties": {
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-launchtemplate-launchtemplatedata-placement-properties": {
            "Affinity": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "AvailabilityZone": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "GroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "HostId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Tenancy": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "dedicated",
                    "default",
                    "host"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-launchtemplate-launchtemplatedata-properties": {
            "BlockDeviceMappings": {
                "Required": "No",
                "Type": "List of [BlockDeviceMapping",
                "UpdateRequires": "No interruption"
            },
            "CapacityReservationSpecification": {
                "Required": "No",
                "Type": "CapacityReservationSpecification",
                "UpdateRequires": "No interruption"
            },
            "CpuOptions": {},
            "CreditSpecification": {
                "Required": "No",
                "Type": "CreditSpecification",
                "UpdateRequires": "No interruption"
            },
            "DisableApiTermination": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "EbsOptimized": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "ElasticGpuSpecifications": {
                "Required": "No",
                "Type": "List of [ElasticGpuSpecification",
                "UpdateRequires": "No interruption"
            },
            "ElasticInferenceAccelerators": {
                "Required": "No",
                "Type": "List of [LaunchTemplateElasticInferenceAccelerator",
                "UpdateRequires": "No interruption"
            },
            "HibernationOptions": {},
            "IamInstanceProfile": {
                "Required": "No",
                "Type": "IamInstanceProfile",
                "UpdateRequires": "No interruption"
            },
            "ImageId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "InstanceInitiatedShutdownBehavior": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "stop",
                    "terminate"
                ],
                "UpdateRequires": "No interruption"
            },
            "InstanceMarketOptions": {
                "Required": "No",
                "Type": "InstanceMarketOptions",
                "UpdateRequires": "No interruption"
            },
            "InstanceType": {},
            "KernelId": {},
            "KeyName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "LicenseSpecifications": {
                "Required": "No",
                "Type": "List of [LicenseSpecification",
                "UpdateRequires": "No interruption"
            },
            "Monitoring": {
                "Required": "No",
                "Type": "Monitoring",
                "UpdateRequires": "No interruption"
            },
            "NetworkInterfaces": {
                "Required": "No",
                "Type": "List of [NetworkInterface",
                "UpdateRequires": "No interruption"
            },
            "Placement": {
                "Required": "No",
                "Type": "Placement",
                "UpdateRequires": "No interruption"
            },
            "RamDiskId": {},
            "SecurityGroupIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "SecurityGroups": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "TagSpecifications": {
                "Required": "No",
                "Type": "List of [TagSpecification",
                "UpdateRequires": "No interruption"
            },
            "UserData": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-launchtemplate-launchtemplateelasticinferenceaccelerator-properties": {
            "Type": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-launchtemplate-licensespecification-properties": {
            "LicenseConfigurationArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-launchtemplate-networkinterface-properties": {
            "AssociatePublicIpAddress": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "DeleteOnTermination": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DeviceIndex": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Groups": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "InterfaceType": {},
            "Ipv6AddressCount": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Ipv6Addresses": {
                "Required": "No",
                "Type": "List of [Ipv6Add",
                "UpdateRequires": "No interruption"
            },
            "NetworkInterfaceId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PrivateIpAddress": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PrivateIpAddresses": {
                "Required": "No",
                "Type": "List of [PrivateIpAdd",
                "UpdateRequires": "No interruption"
            },
            "SecondaryPrivateIpAddressCount": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "SubnetId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-launchtemplate-privateipadd-properties": {
            "Primary": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "PrivateIpAddress": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-launchtemplate-tagspecification-properties": {
            "ResourceType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "client-vpn-endpoint",
                    "customer-gateway",
                    "dedicated-host",
                    "dhcp-options",
                    "elastic-ip",
                    "fleet",
                    "fpga-image",
                    "host-reservation",
                    "image",
                    "instance",
                    "internet-gateway",
                    "launch-template",
                    "natgateway",
                    "network-acl",
                    "network-interface",
                    "reserved-instances",
                    "route-table",
                    "security-group",
                    "snapshot",
                    "spot-instances-request",
                    "subnet",
                    "transit-gateway",
                    "transit-gateway-attachment",
                    "transit-gateway-route-table",
                    "volume",
                    "vpc",
                    "vpc-peering-connection",
                    "vpn-connection",
                    "vpn-gateway"
                ],
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-mount-point-properties": {
            "Device": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "VolumeId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-network-iface-embedded-properties": {
            "AssociatePublicIpAddress": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "DeleteOnTermination": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DeviceIndex": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "GroupSet": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Ipv6AddressCount": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Ipv6Addresses": {
                "Required": "No",
                "Type": "List of [InstanceIpv6Address",
                "UpdateRequires": "No interruption"
            },
            "NetworkInterfaceId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PrivateIpAddress": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PrivateIpAddresses": {
                "Required": "No",
                "Type": "List of [PrivateIpAddressSpecification",
                "UpdateRequires": "No interruption"
            },
            "SecondaryPrivateIpAddressCount": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "SubnetId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-network-interface-privateipspec-1-properties": {
            "Primary": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "PrivateIpAddress": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-network-interface-privateipspec-properties": {
            "Primary": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "PrivateIpAddress": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-networkaclentry-icmp-properties": {
            "Code": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-networkaclentry-portrange-properties": {
            "From": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "To": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-networkinterface-instanceipv6address-properties": {
            "Ipv6Address": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-security-group-ingress-properties": {
            "CidrIp": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "CidrIpv6": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "FromPort": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "GroupId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "GroupName": {},
            "IpProtocol": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SourcePrefixListId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SourceSecurityGroupId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SourceSecurityGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SourceSecurityGroupOwnerId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "ToPort": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            }
        },
        "ec2-security-group-rule-1-properties": {
            "CidrIp": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "CidrIpv6": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Description": {},
            "FromPort": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "IpProtocol": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SourcePrefixListId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SourceSecurityGroupId": {},
            "SourceSecurityGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SourceSecurityGroupOwnerId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ToPort": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-security-group-rule-properties": {
            "CidrIp": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "CidrIpv6": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Description": {},
            "DestinationPrefixListId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DestinationSecurityGroupId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "FromPort": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "IpProtocol": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ToPort": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-security-group-properties": {
            "GroupDescription": {},
            "GroupName": {},
            "SecurityGroupEgress": {
                "Required": "No",
                "Type": "List of [Egress",
                "UpdateRequires": "No interruption"
            },
            "SecurityGroupIngress": {
                "Required": "No",
                "Type": "List of [Ingress",
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            },
            "VpcId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "ec2-spotfleet-classicloadbalancer-properties": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-spotfleet-classicloadbalancersconfig-properties": {
            "ClassicLoadBalancers": {
                "Required": "Yes",
                "Type": "List of [ClassicLoadBalancer",
                "Maximum": "5",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-spotfleet-fleetlaunchtemplatespecification-properties": {
            "LaunchTemplateId": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "LaunchTemplateName": {
                "Required": "Conditional",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "128",
                "Pattern": "[a-zA-Z0-9\\(\\)\\.\\-/_]+",
                "UpdateRequires": "No interruption"
            },
            "Version": {}
        },
        "ec2-spotfleet-instanceipv6address-properties": {
            "Ipv6Address": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-spotfleet-launchtemplateconfig-properties": {
            "LaunchTemplateSpecification": {
                "Required": "No",
                "Type": "FleetLaunchTemplateSpecification",
                "UpdateRequires": "No interruption"
            },
            "Overrides": {
                "Required": "No",
                "Type": "List of [LaunchTemplateOverrides",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-spotfleet-launchtemplateoverrides-properties": {
            "AvailabilityZone": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "InstanceType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "a1.2xlarge",
                    "a1.4xlarge",
                    "a1.large",
                    "a1.medium",
                    "a1.xlarge",
                    "c1.medium",
                    "c1.xlarge",
                    "c3.2xlarge",
                    "c3.4xlarge",
                    "c3.8xlarge",
                    "c3.large",
                    "c3.xlarge",
                    "c4.2xlarge",
                    "c4.4xlarge",
                    "c4.8xlarge",
                    "c4.large",
                    "c4.xlarge",
                    "c5.18xlarge",
                    "c5.2xlarge",
                    "c5.4xlarge",
                    "c5.9xlarge",
                    "c5.large",
                    "c5.xlarge",
                    "c5d.18xlarge",
                    "c5d.2xlarge",
                    "c5d.4xlarge",
                    "c5d.9xlarge",
                    "c5d.large",
                    "c5d.xlarge",
                    "c5n.18xlarge",
                    "c5n.2xlarge",
                    "c5n.4xlarge",
                    "c5n.9xlarge",
                    "c5n.large",
                    "c5n.xlarge",
                    "cc1.4xlarge",
                    "cc2.8xlarge",
                    "cg1.4xlarge",
                    "cr1.8xlarge",
                    "d2.2xlarge",
                    "d2.4xlarge",
                    "d2.8xlarge",
                    "d2.xlarge",
                    "f1.16xlarge",
                    "f1.2xlarge",
                    "f1.4xlarge",
                    "g2.2xlarge",
                    "g2.8xlarge",
                    "g3.16xlarge",
                    "g3.4xlarge",
                    "g3.8xlarge",
                    "g3s.xlarge",
                    "h1.16xlarge",
                    "h1.2xlarge",
                    "h1.4xlarge",
                    "h1.8xlarge",
                    "hi1.4xlarge",
                    "hs1.8xlarge",
                    "i2.2xlarge",
                    "i2.4xlarge",
                    "i2.8xlarge",
                    "i2.xlarge",
                    "i3.16xlarge",
                    "i3.2xlarge",
                    "i3.4xlarge",
                    "i3.8xlarge",
                    "i3.large",
                    "i3.metal",
                    "i3.xlarge",
                    "m1.large",
                    "m1.medium",
                    "m1.small",
                    "m1.xlarge",
                    "m2.2xlarge",
                    "m2.4xlarge",
                    "m2.xlarge",
                    "m3.2xlarge",
                    "m3.large",
                    "m3.medium",
                    "m3.xlarge",
                    "m4.10xlarge",
                    "m4.16xlarge",
                    "m4.2xlarge",
                    "m4.4xlarge",
                    "m4.large",
                    "m4.xlarge",
                    "m5.12xlarge",
                    "m5.24xlarge",
                    "m5.2xlarge",
                    "m5.4xlarge",
                    "m5.large",
                    "m5.metal",
                    "m5.xlarge",
                    "m5a.12xlarge",
                    "m5a.24xlarge",
                    "m5a.2xlarge",
                    "m5a.4xlarge",
                    "m5a.large",
                    "m5a.xlarge",
                    "m5ad.12xlarge",
                    "m5ad.16xlarge",
                    "m5ad.24xlarge",
                    "m5ad.2xlarge",
                    "m5ad.4xlarge",
                    "m5ad.8xlarge",
                    "m5ad.large",
                    "m5ad.xlarge",
                    "m5d.12xlarge",
                    "m5d.24xlarge",
                    "m5d.2xlarge",
                    "m5d.4xlarge",
                    "m5d.large",
                    "m5d.metal",
                    "m5d.xlarge",
                    "p2.16xlarge",
                    "p2.8xlarge",
                    "p2.xlarge",
                    "p3.16xlarge",
                    "p3.2xlarge",
                    "p3.8xlarge",
                    "p3dn.24xlarge",
                    "r3.2xlarge",
                    "r3.4xlarge",
                    "r3.8xlarge",
                    "r3.large",
                    "r3.xlarge",
                    "r4.16xlarge",
                    "r4.2xlarge",
                    "r4.4xlarge",
                    "r4.8xlarge",
                    "r4.large",
                    "r4.xlarge",
                    "r5.12xlarge",
                    "r5.24xlarge",
                    "r5.2xlarge",
                    "r5.4xlarge",
                    "r5.large",
                    "r5.metal",
                    "r5.xlarge",
                    "r5a.12xlarge",
                    "r5a.24xlarge",
                    "r5a.2xlarge",
                    "r5a.4xlarge",
                    "r5a.large",
                    "r5a.xlarge",
                    "r5ad.12xlarge",
                    "r5ad.16xlarge",
                    "r5ad.24xlarge",
                    "r5ad.2xlarge",
                    "r5ad.4xlarge",
                    "r5ad.8xlarge",
                    "r5ad.large",
                    "r5ad.xlarge",
                    "r5d.12xlarge",
                    "r5d.24xlarge",
                    "r5d.2xlarge",
                    "r5d.4xlarge",
                    "r5d.large",
                    "r5d.metal",
                    "r5d.xlarge",
                    "t1.micro",
                    "t2.2xlarge",
                    "t2.large",
                    "t2.medium",
                    "t2.micro",
                    "t2.nano",
                    "t2.small",
                    "t2.xlarge",
                    "t3.2xlarge",
                    "t3.large",
                    "t3.medium",
                    "t3.micro",
                    "t3.nano",
                    "t3.small",
                    "t3.xlarge",
                    "t3a.2xlarge",
                    "t3a.large",
                    "t3a.medium",
                    "t3a.micro",
                    "t3a.nano",
                    "t3a.small",
                    "t3a.xlarge",
                    "u-12tb1.metal",
                    "u-6tb1.metal",
                    "u-9tb1.metal",
                    "x1.16xlarge",
                    "x1.32xlarge",
                    "x1e.16xlarge",
                    "x1e.2xlarge",
                    "x1e.32xlarge",
                    "x1e.4xlarge",
                    "x1e.8xlarge",
                    "x1e.xlarge",
                    "z1d.12xlarge",
                    "z1d.2xlarge",
                    "z1d.3xlarge",
                    "z1d.6xlarge",
                    "z1d.large",
                    "z1d.metal",
                    "z1d.xlarge"
                ],
                "UpdateRequires": "No interruption"
            },
            "SpotPrice": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SubnetId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "WeightedCapacity": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-spotfleet-loadbalancersconfig-properties": {
            "ClassicLoadBalancersConfig": {
                "Required": "No",
                "Type": "ClassicLoadBalancersConfig",
                "UpdateRequires": "No interruption"
            },
            "TargetGroupsConfig": {
                "Required": "No",
                "Type": "TargetGroupsConfig",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs-properties": {
            "DeleteOnTermination": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Encrypted": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Iops": {},
            "SnapshotId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "VolumeSize": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "VolumeType": {}
        },
        "ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-properties": {
            "DeviceName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Ebs": {
                "Required": "Conditional",
                "Type": "EbsBlockDevice",
                "UpdateRequires": "No interruption"
            },
            "NoDevice": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "VirtualName": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-iaminstanceprofile-properties": {
            "Arn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-monitoring-properties": {
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses-properties": {
            "Primary": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "PrivateIpAddress": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-properties": {
            "AssociatePublicIpAddress": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "DeleteOnTermination": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DeviceIndex": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Groups": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Ipv6AddressCount": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Ipv6Addresses": {
                "Required": "No",
                "Type": "List of [InstanceIpv6Address",
                "UpdateRequires": "No interruption"
            },
            "NetworkInterfaceId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PrivateIpAddresses": {
                "Required": "No",
                "Type": "List of [PrivateIpAddressSpecification",
                "UpdateRequires": "No interruption"
            },
            "SecondaryPrivateIpAddressCount": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "SubnetId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement-properties": {
            "AvailabilityZone": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "GroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Tenancy": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "dedicated",
                    "default",
                    "host"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-securitygroups-properties": {
            "GroupId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-tagspecifications-properties": {
            "ResourceType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "client-vpn-endpoint",
                    "customer-gateway",
                    "dedicated-host",
                    "dhcp-options",
                    "elastic-ip",
                    "fleet",
                    "fpga-image",
                    "host-reservation",
                    "image",
                    "instance",
                    "internet-gateway",
                    "launch-template",
                    "natgateway",
                    "network-acl",
                    "network-interface",
                    "reserved-instances",
                    "route-table",
                    "security-group",
                    "snapshot",
                    "spot-instances-request",
                    "subnet",
                    "transit-gateway",
                    "transit-gateway-attachment",
                    "transit-gateway-route-table",
                    "volume",
                    "vpc",
                    "vpc-peering-connection",
                    "vpn-connection",
                    "vpn-gateway"
                ],
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-properties": {
            "BlockDeviceMappings": {
                "Required": "No",
                "Type": "List of [BlockDeviceMapping",
                "UpdateRequires": "No interruption"
            },
            "EbsOptimized": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "IamInstanceProfile": {
                "Required": "No",
                "Type": "IamInstanceProfileSpecification",
                "UpdateRequires": "No interruption"
            },
            "ImageId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "InstanceType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "a1.2xlarge",
                    "a1.4xlarge",
                    "a1.large",
                    "a1.medium",
                    "a1.xlarge",
                    "c1.medium",
                    "c1.xlarge",
                    "c3.2xlarge",
                    "c3.4xlarge",
                    "c3.8xlarge",
                    "c3.large",
                    "c3.xlarge",
                    "c4.2xlarge",
                    "c4.4xlarge",
                    "c4.8xlarge",
                    "c4.large",
                    "c4.xlarge",
                    "c5.18xlarge",
                    "c5.2xlarge",
                    "c5.4xlarge",
                    "c5.9xlarge",
                    "c5.large",
                    "c5.xlarge",
                    "c5d.18xlarge",
                    "c5d.2xlarge",
                    "c5d.4xlarge",
                    "c5d.9xlarge",
                    "c5d.large",
                    "c5d.xlarge",
                    "c5n.18xlarge",
                    "c5n.2xlarge",
                    "c5n.4xlarge",
                    "c5n.9xlarge",
                    "c5n.large",
                    "c5n.xlarge",
                    "cc1.4xlarge",
                    "cc2.8xlarge",
                    "cg1.4xlarge",
                    "cr1.8xlarge",
                    "d2.2xlarge",
                    "d2.4xlarge",
                    "d2.8xlarge",
                    "d2.xlarge",
                    "f1.16xlarge",
                    "f1.2xlarge",
                    "f1.4xlarge",
                    "g2.2xlarge",
                    "g2.8xlarge",
                    "g3.16xlarge",
                    "g3.4xlarge",
                    "g3.8xlarge",
                    "g3s.xlarge",
                    "h1.16xlarge",
                    "h1.2xlarge",
                    "h1.4xlarge",
                    "h1.8xlarge",
                    "hi1.4xlarge",
                    "hs1.8xlarge",
                    "i2.2xlarge",
                    "i2.4xlarge",
                    "i2.8xlarge",
                    "i2.xlarge",
                    "i3.16xlarge",
                    "i3.2xlarge",
                    "i3.4xlarge",
                    "i3.8xlarge",
                    "i3.large",
                    "i3.metal",
                    "i3.xlarge",
                    "m1.large",
                    "m1.medium",
                    "m1.small",
                    "m1.xlarge",
                    "m2.2xlarge",
                    "m2.4xlarge",
                    "m2.xlarge",
                    "m3.2xlarge",
                    "m3.large",
                    "m3.medium",
                    "m3.xlarge",
                    "m4.10xlarge",
                    "m4.16xlarge",
                    "m4.2xlarge",
                    "m4.4xlarge",
                    "m4.large",
                    "m4.xlarge",
                    "m5.12xlarge",
                    "m5.24xlarge",
                    "m5.2xlarge",
                    "m5.4xlarge",
                    "m5.large",
                    "m5.metal",
                    "m5.xlarge",
                    "m5a.12xlarge",
                    "m5a.24xlarge",
                    "m5a.2xlarge",
                    "m5a.4xlarge",
                    "m5a.large",
                    "m5a.xlarge",
                    "m5ad.12xlarge",
                    "m5ad.16xlarge",
                    "m5ad.24xlarge",
                    "m5ad.2xlarge",
                    "m5ad.4xlarge",
                    "m5ad.8xlarge",
                    "m5ad.large",
                    "m5ad.xlarge",
                    "m5d.12xlarge",
                    "m5d.24xlarge",
                    "m5d.2xlarge",
                    "m5d.4xlarge",
                    "m5d.large",
                    "m5d.metal",
                    "m5d.xlarge",
                    "p2.16xlarge",
                    "p2.8xlarge",
                    "p2.xlarge",
                    "p3.16xlarge",
                    "p3.2xlarge",
                    "p3.8xlarge",
                    "p3dn.24xlarge",
                    "r3.2xlarge",
                    "r3.4xlarge",
                    "r3.8xlarge",
                    "r3.large",
                    "r3.xlarge",
                    "r4.16xlarge",
                    "r4.2xlarge",
                    "r4.4xlarge",
                    "r4.8xlarge",
                    "r4.large",
                    "r4.xlarge",
                    "r5.12xlarge",
                    "r5.24xlarge",
                    "r5.2xlarge",
                    "r5.4xlarge",
                    "r5.large",
                    "r5.metal",
                    "r5.xlarge",
                    "r5a.12xlarge",
                    "r5a.24xlarge",
                    "r5a.2xlarge",
                    "r5a.4xlarge",
                    "r5a.large",
                    "r5a.xlarge",
                    "r5ad.12xlarge",
                    "r5ad.16xlarge",
                    "r5ad.24xlarge",
                    "r5ad.2xlarge",
                    "r5ad.4xlarge",
                    "r5ad.8xlarge",
                    "r5ad.large",
                    "r5ad.xlarge",
                    "r5d.12xlarge",
                    "r5d.24xlarge",
                    "r5d.2xlarge",
                    "r5d.4xlarge",
                    "r5d.large",
                    "r5d.metal",
                    "r5d.xlarge",
                    "t1.micro",
                    "t2.2xlarge",
                    "t2.large",
                    "t2.medium",
                    "t2.micro",
                    "t2.nano",
                    "t2.small",
                    "t2.xlarge",
                    "t3.2xlarge",
                    "t3.large",
                    "t3.medium",
                    "t3.micro",
                    "t3.nano",
                    "t3.small",
                    "t3.xlarge",
                    "t3a.2xlarge",
                    "t3a.large",
                    "t3a.medium",
                    "t3a.micro",
                    "t3a.nano",
                    "t3a.small",
                    "t3a.xlarge",
                    "u-12tb1.metal",
                    "u-6tb1.metal",
                    "u-9tb1.metal",
                    "x1.16xlarge",
                    "x1.32xlarge",
                    "x1e.16xlarge",
                    "x1e.2xlarge",
                    "x1e.32xlarge",
                    "x1e.4xlarge",
                    "x1e.8xlarge",
                    "x1e.xlarge",
                    "z1d.12xlarge",
                    "z1d.2xlarge",
                    "z1d.3xlarge",
                    "z1d.6xlarge",
                    "z1d.large",
                    "z1d.metal",
                    "z1d.xlarge"
                ],
                "UpdateRequires": "No interruption"
            },
            "KernelId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "KeyName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Monitoring": {
                "Required": "No",
                "Type": "SpotFleetMonitoring",
                "UpdateRequires": "No interruption"
            },
            "NetworkInterfaces": {
                "Required": "No",
                "Type": "List of [InstanceNetworkInterfaceSpecification",
                "UpdateRequires": "No interruption"
            },
            "Placement": {
                "Required": "No",
                "Type": "SpotPlacement",
                "UpdateRequires": "No interruption"
            },
            "RamdiskId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SecurityGroups": {
                "Required": "No",
                "Type": "List of [GroupIdentifier",
                "UpdateRequires": "No interruption"
            },
            "SpotPrice": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SubnetId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TagSpecifications": {
                "Required": "No",
                "Type": "List of [SpotFleetTagSpecification",
                "UpdateRequires": "No interruption"
            },
            "UserData": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "WeightedCapacity": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-spotfleet-spotfleetrequestconfigdata-properties": {
            "AllocationStrategy": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "diversified",
                    "lowestPrice"
                ],
                "UpdateRequires": "Replacement"
            },
            "ExcessCapacityTerminationPolicy": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "default",
                    "noTermination"
                ],
                "UpdateRequires": "No interruption"
            },
            "IamFleetRole": {},
            "InstanceInterruptionBehavior": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "hibernate",
                    "stop",
                    "terminate"
                ],
                "UpdateRequires": "Replacement"
            },
            "LaunchSpecifications": {
                "Required": "Conditional",
                "Type": "List of [SpotFleetLaunchSpecification",
                "UpdateRequires": "Replacement"
            },
            "LaunchTemplateConfigs": {
                "Required": "Conditional",
                "Type": "List of [LaunchTemplateConfig",
                "UpdateRequires": "Replacement"
            },
            "LoadBalancersConfig": {
                "Required": "No",
                "Type": "LoadBalancersConfig",
                "UpdateRequires": "Replacement"
            },
            "ReplaceUnhealthyInstances": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "SpotPrice": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "TargetCapacity": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "TerminateInstancesWithExpiration": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "Type": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "instant",
                    "maintain",
                    "request"
                ],
                "UpdateRequires": "Replacement"
            },
            "ValidFrom": {},
            "ValidUntil": {}
        },
        "ec2-spotfleet-targetgroup-properties": {
            "Arn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-spotfleet-targetgroupsconfig-properties": {
            "TargetGroups": {
                "Required": "Yes",
                "Type": "List of [TargetGroup",
                "Maximum": "5",
                "UpdateRequires": "No interruption"
            }
        },
        "ec2-vpnconnection-vpntunneloptionsspecification-properties": {
            "PreSharedKey": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "TunnelInsideCidr": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "ecr-repository-lifecyclepolicy-properties": {
            "LifecyclePolicyText": {
                "Required": "No",
                "Type": "String",
                "Minimum": "100",
                "Maximum": "30720",
                "UpdateRequires": "No interruption"
            },
            "RegistryId": {
                "Required": "No",
                "Type": "String",
                "Pattern": "[0-9]{12}",
                "UpdateRequires": "No interruption"
            }
        },
        "ecs-service-awsvpcconfiguration-properties": {
            "AssignPublicIp": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "DISABLED",
                    "ENABLED"
                ],
                "UpdateRequires": "No interruption"
            },
            "SecurityGroups": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Subnets": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "ecs-service-deploymentconfiguration-properties": {
            "MaximumPercent": {},
            "MinimumHealthyPercent": {}
        },
        "ecs-service-loadbalancers-properties": {
            "ContainerName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "ContainerPort": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "LoadBalancerName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "TargetGroupArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-service-networkconfiguration-properties": {
            "AwsvpcConfiguration": {
                "Required": "No",
                "Type": "AwsVpcConfiguration",
                "UpdateRequires": "No interruption"
            }
        },
        "ecs-service-placementconstraint-properties": {
            "Expression": {},
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "distinctInstance",
                    "memberOf"
                ],
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-service-placementstrategy-properties": {
            "Field": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "binpack",
                    "random",
                    "spread"
                ],
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-service-serviceregistry-properties": {
            "ContainerName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "ContainerPort": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "Port": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "RegistryArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-containerdefinitions-environment-properties": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-containerdefinitions-hostentry-properties": {
            "Hostname": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "IpAddress": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-containerdefinitions-logconfiguration-properties": {
            "LogDriver": {},
            "Options": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "Replacement"
            },
            "SecretOptions": {
                "Required": "No",
                "Type": "List of [Secret",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-containerdefinitions-mountpoints-properties": {
            "ContainerPath": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "ReadOnly": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "SourceVolume": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-containerdefinitions-portmappings-properties": {
            "ContainerPort": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "HostPort": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "Protocol": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "tcp",
                    "udp"
                ],
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-containerdefinitions-ulimit-properties": {
            "HardLimit": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "core",
                    "cpu",
                    "data",
                    "fsize",
                    "locks",
                    "memlock",
                    "msgqueue",
                    "nice",
                    "nofile",
                    "nproc",
                    "rss",
                    "rtprio",
                    "rttime",
                    "sigpending",
                    "stack"
                ],
                "UpdateRequires": "Replacement"
            },
            "SoftLimit": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-containerdefinitions-volumesfrom-properties": {
            "ReadOnly": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "SourceContainer": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-containerdefinitions-properties": {
            "Command": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "Cpu": {},
            "DependsOn": {},
            "DisableNetworking": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "DnsSearchDomains": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "DnsServers": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "DockerLabels": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "Replacement"
            },
            "DockerSecurityOptions": {},
            "EntryPoint": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "Environment": {
                "Required": "No",
                "Type": "List of [KeyValuePair",
                "UpdateRequires": "Replacement"
            },
            "Essential": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "ExtraHosts": {
                "Required": "No",
                "Type": "List of [HostEntry",
                "UpdateRequires": "Replacement"
            },
            "HealthCheck": {
                "Required": "No",
                "Type": "HealthCheck",
                "UpdateRequires": "Replacement"
            },
            "Hostname": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Image": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Interactive": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "Links": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "LinuxParameters": {
                "Required": "No",
                "Type": "LinuxParameters",
                "UpdateRequires": "Replacement"
            },
            "LogConfiguration": {},
            "Memory": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "MemoryReservation": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "MountPoints": {
                "Required": "No",
                "Type": "List of [MountPoint",
                "UpdateRequires": "Replacement"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "PortMappings": {},
            "Privileged": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "PseudoTerminal": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "ReadonlyRootFilesystem": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "RepositoryCredentials": {
                "Required": "No",
                "Type": "RepositoryCredentials",
                "UpdateRequires": "Replacement"
            },
            "ResourceRequirements": {
                "Required": "No",
                "Type": "List of [ResourceRequirement",
                "UpdateRequires": "Replacement"
            },
            "Secrets": {},
            "StartTimeout": {},
            "StopTimeout": {},
            "SystemControls": {
                "Required": "No",
                "Type": "List of [SystemControl",
                "UpdateRequires": "Replacement"
            },
            "Ulimits": {
                "Required": "No",
                "Type": "List of [Ulimit",
                "UpdateRequires": "Replacement"
            },
            "User": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "VolumesFrom": {
                "Required": "No",
                "Type": "List of [VolumeFrom",
                "UpdateRequires": "Replacement"
            },
            "WorkingDirectory": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-containerdependency-properties": {
            "Condition": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "COMPLETE",
                    "HEALTHY",
                    "START",
                    "SUCCESS"
                ],
                "UpdateRequires": "Replacement"
            },
            "ContainerName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-device-properties": {
            "ContainerPath": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "HostPath": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Permissions": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-dockervolumeconfiguration-properties": {
            "Autoprovision": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "Driver": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "DriverOpts": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "Replacement"
            },
            "Labels": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "Replacement"
            },
            "Scope": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "shared",
                    "task"
                ],
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-healthcheck-properties": {
            "Command": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "Interval": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "Retries": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "StartPeriod": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "Timeout": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-kernelcapabilities-properties": {
            "Add": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "Drop": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-linuxparameters-properties": {
            "Capabilities": {
                "Required": "No",
                "Type": "KernelCapabilities",
                "UpdateRequires": "Replacement"
            },
            "Devices": {
                "Required": "No",
                "Type": "List of [Device",
                "UpdateRequires": "Replacement"
            },
            "InitProcessEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "SharedMemorySize": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "Tmpfs": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-proxyconfiguration-properties": {
            "ContainerName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "ProxyConfigurationProperties": {
                "Required": "No",
                "Type": "List of [KeyValuePair",
                "UpdateRequires": "Replacement"
            },
            "Type": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "APPMESH"
                ],
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-repositorycredentials-properties": {
            "CredentialsParameter": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-resourcerequirement-properties": {
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "GPU"
                ],
                "UpdateRequires": "Replacement"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-secret-properties": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "ValueFrom": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-systemcontrol-properties": {
            "Namespace": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-taskdefinitionplacementconstraint-properties": {
            "Expression": {},
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "memberOf"
                ],
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-tmpfs-properties": {
            "ContainerPath": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "MountOptions": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "Size": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-volumes-host": {
            "SourcePath": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-volumes-host-properties": {
            "SourcePath": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "ecs-taskdefinition-volumes-properties": {
            "DockerVolumeConfiguration": {
                "Required": "No",
                "Type": "DockerVolumeConfiguration",
                "UpdateRequires": "Replacement"
            },
            "Host": {
                "Required": "No",
                "Type": "HostVolumeProperties",
                "UpdateRequires": "Replacement"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "efs-filesystem-filesystemtags-properties": {
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            }
        },
        "eks-cluster-resourcesvpcconfig-properties": {
            "SecurityGroupIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "SubnetIds": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticache-cache-cluster-properties": {
            "AZMode": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "cross-az",
                    "single-az"
                ]
            },
            "AutoMinorVersionUpgrade": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "CacheNodeType": {},
            "CacheParameterGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "CacheSecurityGroupNames": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "CacheSubnetGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "ClusterName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Engine": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "EngineVersion": {},
            "NotificationTopicArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "NumCacheNodes": {
                "Required": "Yes",
                "Type": "Integer"
            },
            "Port": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "PreferredAvailabilityZone": {
                "Required": "No",
                "Type": "String"
            },
            "PreferredAvailabilityZones": {
                "Required": "No",
                "Type": "List of String"
            },
            "PreferredMaintenanceWindow": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SnapshotArns": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "SnapshotName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SnapshotRetentionLimit": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "SnapshotWindow": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            },
            "VpcSecurityGroupIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticache-parameter-group-properties": {
            "CacheParameterGroupFamily": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Description": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Properties": {},
            "": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticache-replicationgroup-nodegroupconfiguration-properties": {
            "NodeGroupId": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "4",
                "Pattern": "\\d+"
            },
            "PrimaryAvailabilityZone": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "ReplicaAvailabilityZones": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "ReplicaCount": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "Slots": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "elasticache-security-group-ingress-properties": {
            "CacheSecurityGroupName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "EC2SecurityGroupName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "EC2SecurityGroupOwnerId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticache-security-group-properties": {
            "Description": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticache-subnetgroup-properties": {
            "CacheSubnetGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Description": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SubnetIds": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticbeanstalk-application-applicationresourcelifecycleconfig-properties": {
            "ServiceRole": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "VersionLifecycleConfig": {
                "Required": "No",
                "Type": "ApplicationVersionLifecycleConfig",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticbeanstalk-application-applicationversionlifecycleconfig-properties": {
            "MaxAgeRule": {
                "Required": "No",
                "Type": "MaxAgeRule",
                "UpdateRequires": "No interruption"
            },
            "MaxCountRule": {
                "Required": "No",
                "Type": "MaxCountRule",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticbeanstalk-application-maxagerule-properties": {
            "DeleteSourceFromS3": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "MaxAgeInDays": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticbeanstalk-application-maxcountrule-properties": {
            "DeleteSourceFromS3": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "MaxCount": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticbeanstalk-configurationtemplate-configurationoptionsetting-properties": {
            "Namespace": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "OptionName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ResourceName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticbeanstalk-configurationtemplate-sourceconfiguration-properties": {
            "ApplicationName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            },
            "TemplateName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticloadbalancingv2-listener-authenticatecognitoconfig-properties": {
            "AuthenticationRequestExtraParams": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "OnUnauthenticatedRequest": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "allow",
                    "authenticate",
                    "deny"
                ],
                "UpdateRequires": "No interruption"
            },
            "Scope": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SessionCookieName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SessionTimeout": {
                "Required": "No",
                "Type": "Long",
                "UpdateRequires": "No interruption"
            },
            "UserPoolArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "UserPoolClientId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "UserPoolDomain": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticloadbalancingv2-listener-authenticateoidcconfig-properties": {
            "AuthenticationRequestExtraParams": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "AuthorizationEndpoint": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ClientId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ClientSecret": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Issuer": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "OnUnauthenticatedRequest": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "allow",
                    "authenticate",
                    "deny"
                ],
                "UpdateRequires": "No interruption"
            },
            "Scope": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SessionCookieName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SessionTimeout": {
                "Required": "No",
                "Type": "Long",
                "UpdateRequires": "No interruption"
            },
            "TokenEndpoint": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "UserInfoEndpoint": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticloadbalancingv2-listener-certificates-1-properties": {
            "CertificateArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticloadbalancingv2-listener-certificates-properties": {
            "CertificateArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticloadbalancingv2-listener-defaultactions-properties": {
            "AuthenticateCognitoConfig": {
                "Required": "No",
                "Type": "AuthenticateCognitoConfig",
                "UpdateRequires": "No interruption"
            },
            "AuthenticateOidcConfig": {
                "Required": "No",
                "Type": "AuthenticateOidcConfig",
                "UpdateRequires": "No interruption"
            },
            "FixedResponseConfig": {
                "Required": "No",
                "Type": "FixedResponseConfig",
                "UpdateRequires": "No interruption"
            },
            "Order": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "50000",
                "UpdateRequires": "No interruption"
            },
            "RedirectConfig": {
                "Required": "No",
                "Type": "RedirectConfig",
                "UpdateRequires": "No interruption"
            },
            "TargetGroupArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "authenticate-cognito",
                    "authenticate-oidc",
                    "fixed-response",
                    "forward",
                    "redirect"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "elasticloadbalancingv2-listener-fixedresponseconfig-properties": {
            "ContentType": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "32",
                "UpdateRequires": "No interruption"
            },
            "MessageBody": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "1024",
                "UpdateRequires": "No interruption"
            },
            "StatusCode": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^(2|4|5)\\d\\d$",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticloadbalancingv2-listener-redirectconfig-properties": {
            "Host": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "Path": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "Port": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Protocol": {
                "Required": "No",
                "Type": "String",
                "Pattern": "^(HTTPS?|#\\{protocol\\})$",
                "UpdateRequires": "No interruption"
            },
            "Query": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "StatusCode": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "HTTP_301",
                    "HTTP_302"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "elasticloadbalancingv2-listenerrule-actions-properties": {
            "AuthenticateCognitoConfig": {
                "Required": "No",
                "Type": "AuthenticateCognitoConfig",
                "UpdateRequires": "No interruption"
            },
            "AuthenticateOidcConfig": {
                "Required": "No",
                "Type": "AuthenticateOidcConfig",
                "UpdateRequires": "No interruption"
            },
            "FixedResponseConfig": {
                "Required": "No",
                "Type": "FixedResponseConfig",
                "UpdateRequires": "No interruption"
            },
            "Order": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "50000",
                "UpdateRequires": "No interruption"
            },
            "RedirectConfig": {
                "Required": "No",
                "Type": "RedirectConfig",
                "UpdateRequires": "No interruption"
            },
            "TargetGroupArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "authenticate-cognito",
                    "authenticate-oidc",
                    "fixed-response",
                    "forward",
                    "redirect"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "elasticloadbalancingv2-listenerrule-authenticatecognitoconfig-properties": {
            "AuthenticationRequestExtraParams": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "OnUnauthenticatedRequest": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "allow",
                    "authenticate",
                    "deny"
                ],
                "UpdateRequires": "No interruption"
            },
            "Scope": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SessionCookieName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SessionTimeout": {
                "Required": "No",
                "Type": "Long",
                "UpdateRequires": "No interruption"
            },
            "UserPoolArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "UserPoolClientId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "UserPoolDomain": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticloadbalancingv2-listenerrule-authenticateoidcconfig-properties": {
            "AuthenticationRequestExtraParams": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "AuthorizationEndpoint": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ClientId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ClientSecret": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Issuer": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "OnUnauthenticatedRequest": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "allow",
                    "authenticate",
                    "deny"
                ],
                "UpdateRequires": "No interruption"
            },
            "Scope": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SessionCookieName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SessionTimeout": {
                "Required": "No",
                "Type": "Long",
                "UpdateRequires": "No interruption"
            },
            "TokenEndpoint": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "UserInfoEndpoint": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticloadbalancingv2-listenerrule-conditions-properties": {
            "Field": {
                "Required": "No",
                "Type": "String",
                "Maximum": "64",
                "UpdateRequires": "No interruption"
            },
            "HostHeaderConfig": {
                "Required": "No",
                "Type": "HostHeaderConfig",
                "UpdateRequires": "No interruption"
            },
            "HttpHeaderConfig": {
                "Required": "No",
                "Type": "HttpHeaderConfig",
                "UpdateRequires": "No interruption"
            },
            "HttpRequestMethodConfig": {
                "Required": "No",
                "Type": "HttpRequestMethodConfig",
                "UpdateRequires": "No interruption"
            },
            "PathPatternConfig": {
                "Required": "No",
                "Type": "PathPatternConfig",
                "UpdateRequires": "No interruption"
            },
            "QueryStringConfig": {
                "Required": "No",
                "Type": "QueryStringConfig",
                "UpdateRequires": "No interruption"
            },
            "SourceIpConfig": {
                "Required": "No",
                "Type": "SourceIpConfig",
                "UpdateRequires": "No interruption"
            },
            "Values": {}
        },
        "elasticloadbalancingv2-listenerrule-fixedresponseconfig-properties": {
            "ContentType": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "32",
                "UpdateRequires": "No interruption"
            },
            "MessageBody": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "1024",
                "UpdateRequires": "No interruption"
            },
            "StatusCode": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^(2|4|5)\\d\\d$",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticloadbalancingv2-listenerrule-hostheaderconfig-properties": {
            "Values": {}
        },
        "elasticloadbalancingv2-listenerrule-httpheaderconfig-properties": {
            "HttpHeaderName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Values": {}
        },
        "elasticloadbalancingv2-listenerrule-httprequestmethodconfig-properties": {
            "Values": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticloadbalancingv2-listenerrule-pathpatternconfig-properties": {
            "Values": {}
        },
        "elasticloadbalancingv2-listenerrule-querystringconfig-properties": {
            "Values": {}
        },
        "elasticloadbalancingv2-listenerrule-querystringkeyvalue-properties": {
            "Key": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticloadbalancingv2-listenerrule-redirectconfig-properties": {
            "Host": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "Path": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "Port": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Protocol": {
                "Required": "No",
                "Type": "String",
                "Pattern": "^(HTTPS?|#\\{protocol\\})$",
                "UpdateRequires": "No interruption"
            },
            "Query": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "StatusCode": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "HTTP_301",
                    "HTTP_302"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "elasticloadbalancingv2-listenerrule-sourceipconfig-properties": {
            "Values": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticloadbalancingv2-loadbalancer-loadbalancerattributes-properties": {
            "Key": {
                "Required": "No",
                "Type": "String",
                "Maximum": "256",
                "Pattern": "^[a-zA-Z0-9._]+$",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "Maximum": "1024",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticloadbalancingv2-loadbalancer-subnetmapping-properties": {
            "AllocationId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SubnetId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticloadbalancingv2-targetgroup-matcher-properties": {
            "HttpCode": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticloadbalancingv2-targetgroup-targetdescription-properties": {
            "AvailabilityZone": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Port": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "65535",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticloadbalancingv2-targetgroup-targetgroupattribute-properties": {
            "Key": {
                "Required": "No",
                "Type": "String",
                "Maximum": "256",
                "Pattern": "^[a-zA-Z0-9._]+$",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-application-properties": {
            "AdditionalInfo": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "Args": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Version": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-autoscalingpolicy-properties": {
            "Constraints": {
                "Required": "Yes",
                "Type": "ScalingConstraints",
                "UpdateRequires": "No interruption"
            },
            "Rules": {
                "Required": "Yes",
                "Type": "List of [ScalingRule",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-bootstrapactionconfig-properties": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "ScriptBootstrapAction": {
                "Required": "Yes",
                "Type": "ScriptBootstrapActionConfig",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-cloudwatchalarmdefinition-properties": {
            "ComparisonOperator": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "GREATER_THAN",
                    "GREATER_THAN_OR_EQUAL",
                    "LESS_THAN",
                    "LESS_THAN_OR_EQUAL"
                ],
                "UpdateRequires": "No interruption"
            },
            "Dimensions": {
                "Required": "No",
                "Type": "List of [MetricDimension",
                "UpdateRequires": "No interruption"
            },
            "EvaluationPeriods": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "MetricName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Namespace": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Period": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Statistic": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "AVERAGE",
                    "MAXIMUM",
                    "MINIMUM",
                    "SAMPLE_COUNT",
                    "SUM"
                ],
                "UpdateRequires": "No interruption"
            },
            "Threshold": {
                "Required": "Yes",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "Unit": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "BITS",
                    "BITS_PER_SECOND",
                    "BYTES",
                    "BYTES_PER_SECOND",
                    "COUNT",
                    "COUNT_PER_SECOND",
                    "GIGA_BITS",
                    "GIGA_BITS_PER_SECOND",
                    "GIGA_BYTES",
                    "GIGA_BYTES_PER_SECOND",
                    "KILO_BITS",
                    "KILO_BITS_PER_SECOND",
                    "KILO_BYTES",
                    "KILO_BYTES_PER_SECOND",
                    "MEGA_BITS",
                    "MEGA_BITS_PER_SECOND",
                    "MEGA_BYTES",
                    "MEGA_BYTES_PER_SECOND",
                    "MICRO_SECONDS",
                    "MILLI_SECONDS",
                    "NONE",
                    "PERCENT",
                    "SECONDS",
                    "TERA_BITS",
                    "TERA_BITS_PER_SECOND",
                    "TERA_BYTES",
                    "TERA_BYTES_PER_SECOND"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-configuration-properties": {
            "Classification": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ConfigurationProperties": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "Configurations": {
                "Required": "No",
                "Type": "List of [Configuration",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-ebsblockdeviceconfig-properties": {
            "VolumeSpecification": {
                "Required": "Yes",
                "Type": "VolumeSpecification",
                "UpdateRequires": "No interruption"
            },
            "VolumesPerInstance": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-ebsconfiguration-properties": {
            "EbsBlockDeviceConfigs": {
                "Required": "No",
                "Type": "List of [EbsBlockDeviceConfig",
                "UpdateRequires": "No interruption"
            },
            "EbsOptimized": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-hadoopjarstepconfig-properties": {
            "Args": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Jar": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "10280",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "MainClass": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "10280",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "StepProperties": {
                "Required": "No",
                "Type": "List of [KeyValue",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-instancefleetconfig-properties": {
            "InstanceTypeConfigs": {
                "Required": "No",
                "Type": "List of [InstanceTypeConfig",
                "UpdateRequires": "Replacement"
            },
            "LaunchSpecifications": {
                "Required": "No",
                "Type": "InstanceFleetProvisioningSpecifications",
                "UpdateRequires": "Replacement"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            },
            "TargetOnDemandCapacity": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "0",
                "UpdateRequires": "No interruption"
            },
            "TargetSpotCapacity": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "0",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-instancefleetprovisioningspecifications-properties": {
            "SpotSpecification": {
                "Required": "Yes",
                "Type": "SpotProvisioningSpecification",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-instancegroupconfig-properties": {
            "AutoScalingPolicy": {
                "Required": "No",
                "Type": "AutoScalingPolicy",
                "UpdateRequires": "No interruption"
            },
            "BidPrice": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            },
            "Configurations": {
                "Required": "No",
                "Type": "List of [Configuration",
                "UpdateRequires": "Replacement"
            },
            "EbsConfiguration": {
                "Required": "No",
                "Type": "EbsConfiguration",
                "UpdateRequires": "Replacement"
            },
            "InstanceCount": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "InstanceType": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            },
            "Market": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "ON_DEMAND",
                    "SPOT"
                ],
                "UpdateRequires": "Replacement"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            }
        },
        "elasticmapreduce-cluster-instancetypeconfig-properties": {
            "BidPrice": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            },
            "BidPriceAsPercentageOfOnDemandPrice": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "Replacement"
            },
            "Configurations": {
                "Required": "No",
                "Type": "List of [Configuration",
                "UpdateRequires": "Replacement"
            },
            "EbsConfiguration": {
                "Required": "No",
                "Type": "EbsConfiguration",
                "UpdateRequires": "Replacement"
            },
            "InstanceType": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            },
            "WeightedCapacity": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "0",
                "UpdateRequires": "Replacement"
            }
        },
        "elasticmapreduce-cluster-jobflowinstancesconfig-properties": {
            "AdditionalMasterSecurityGroups": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "AdditionalSlaveSecurityGroups": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "CoreInstanceFleet": {
                "Required": "No",
                "Type": "InstanceFleetConfig",
                "UpdateRequires": "Replacement"
            },
            "CoreInstanceGroup": {
                "Required": "No",
                "Type": "InstanceGroupConfig",
                "UpdateRequires": "Replacement"
            },
            "Ec2KeyName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            },
            "Ec2SubnetId": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            },
            "Ec2SubnetIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "EmrManagedMasterSecurityGroup": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            },
            "EmrManagedSlaveSecurityGroup": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            },
            "HadoopVersion": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            },
            "KeepJobFlowAliveWhenNoSteps": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "MasterInstanceFleet": {
                "Required": "No",
                "Type": "InstanceFleetConfig",
                "UpdateRequires": "Replacement"
            },
            "MasterInstanceGroup": {
                "Required": "No",
                "Type": "InstanceGroupConfig",
                "UpdateRequires": "Replacement"
            },
            "Placement": {
                "Required": "No",
                "Type": "PlacementType",
                "UpdateRequires": "Replacement"
            },
            "ServiceAccessSecurityGroup": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            },
            "TerminationProtected": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-kerberosattributes-properties": {
            "ADDomainJoinPassword": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "ADDomainJoinUser": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "CrossRealmTrustPrincipalPassword": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "KdcAdminPassword": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "Realm": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-keyvalue-properties": {
            "Key": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "10280",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "10280",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-metricdimension-properties": {
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-placementtype-properties": {
            "AvailabilityZone": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "10280",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            }
        },
        "elasticmapreduce-cluster-scalingaction-properties": {
            "Market": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "ON_DEMAND",
                    "SPOT"
                ],
                "UpdateRequires": "No interruption"
            },
            "SimpleScalingPolicyConfiguration": {
                "Required": "Yes",
                "Type": "SimpleScalingPolicyConfiguration",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-scalingconstraints-properties": {
            "MaxCapacity": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "MinCapacity": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-scalingrule-properties": {
            "Action": {
                "Required": "Yes",
                "Type": "ScalingAction",
                "UpdateRequires": "No interruption"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Trigger": {
                "Required": "Yes",
                "Type": "ScalingTrigger",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-scalingtrigger-properties": {
            "CloudWatchAlarmDefinition": {
                "Required": "Yes",
                "Type": "CloudWatchAlarmDefinition",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-scriptbootstrapactionconfig-properties": {
            "Args": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Path": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "10280",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-simplescalingpolicyconfiguration-properties": {
            "AdjustmentType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "CHANGE_IN_CAPACITY",
                    "EXACT_CAPACITY",
                    "PERCENT_CHANGE_IN_CAPACITY"
                ],
                "UpdateRequires": "No interruption"
            },
            "CoolDown": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "ScalingAdjustment": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-spotprovisioningspecification-properties": {
            "BlockDurationMinutes": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "0",
                "UpdateRequires": "No interruption"
            },
            "TimeoutAction": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "SWITCH_TO_ON_DEMAND",
                    "TERMINATE_CLUSTER"
                ],
                "UpdateRequires": "No interruption"
            },
            "TimeoutDurationMinutes": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "0",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-stepconfig-properties": {
            "ActionOnFailure": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "CANCEL_AND_WAIT",
                    "CONTINUE",
                    "TERMINATE_CLUSTER",
                    "TERMINATE_JOB_FLOW"
                ],
                "UpdateRequires": "No interruption"
            },
            "HadoopJarStep": {
                "Required": "Yes",
                "Type": "HadoopJarStepConfig",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-cluster-volumespecification-properties": {
            "Iops": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "SizeInGB": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "VolumeType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-instancefleetconfig-configuration-properties": {
            "Classification": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "ConfigurationProperties": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "Replacement"
            },
            "Configurations": {
                "Required": "No",
                "Type": "List of [Configuration",
                "UpdateRequires": "Replacement"
            }
        },
        "elasticmapreduce-instancefleetconfig-ebsblockdeviceconfig-properties": {
            "VolumeSpecification": {
                "Required": "Yes",
                "Type": "VolumeSpecification",
                "UpdateRequires": "Replacement"
            },
            "VolumesPerInstance": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            }
        },
        "elasticmapreduce-instancefleetconfig-ebsconfiguration-properties": {
            "EbsBlockDeviceConfigs": {
                "Required": "No",
                "Type": "List of [EbsBlockDeviceConfig",
                "UpdateRequires": "Replacement"
            },
            "EbsOptimized": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            }
        },
        "elasticmapreduce-instancefleetconfig-instancefleetprovisioningspecifications-properties": {
            "SpotSpecification": {
                "Required": "Yes",
                "Type": "SpotProvisioningSpecification",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-instancefleetconfig-instancetypeconfig-properties": {
            "BidPrice": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            },
            "BidPriceAsPercentageOfOnDemandPrice": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "Replacement"
            },
            "Configurations": {
                "Required": "No",
                "Type": "List of [Configuration",
                "UpdateRequires": "Replacement"
            },
            "EbsConfiguration": {
                "Required": "No",
                "Type": "EbsConfiguration",
                "UpdateRequires": "Replacement"
            },
            "InstanceType": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            },
            "WeightedCapacity": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "0",
                "UpdateRequires": "Replacement"
            }
        },
        "elasticmapreduce-instancefleetconfig-spotprovisioningspecification-properties": {
            "BlockDurationMinutes": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "0",
                "UpdateRequires": "No interruption"
            },
            "TimeoutAction": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "SWITCH_TO_ON_DEMAND",
                    "TERMINATE_CLUSTER"
                ],
                "UpdateRequires": "No interruption"
            },
            "TimeoutDurationMinutes": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "0",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-instancefleetconfig-volumespecification-properties": {
            "Iops": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "SizeInGB": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "VolumeType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "elasticmapreduce-instancegroupconfig-autoscalingpolicy-properties": {
            "Constraints": {
                "Required": "Yes",
                "Type": "ScalingConstraints",
                "UpdateRequires": "No interruption"
            },
            "Rules": {
                "Required": "Yes",
                "Type": "List of [ScalingRule",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition-properties": {
            "ComparisonOperator": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "GREATER_THAN",
                    "GREATER_THAN_OR_EQUAL",
                    "LESS_THAN",
                    "LESS_THAN_OR_EQUAL"
                ],
                "UpdateRequires": "No interruption"
            },
            "Dimensions": {
                "Required": "No",
                "Type": "List of [MetricDimension",
                "UpdateRequires": "No interruption"
            },
            "EvaluationPeriods": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "MetricName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Namespace": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Period": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Statistic": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "AVERAGE",
                    "MAXIMUM",
                    "MINIMUM",
                    "SAMPLE_COUNT",
                    "SUM"
                ],
                "UpdateRequires": "No interruption"
            },
            "Threshold": {
                "Required": "Yes",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "Unit": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "BITS",
                    "BITS_PER_SECOND",
                    "BYTES",
                    "BYTES_PER_SECOND",
                    "COUNT",
                    "COUNT_PER_SECOND",
                    "GIGA_BITS",
                    "GIGA_BITS_PER_SECOND",
                    "GIGA_BYTES",
                    "GIGA_BYTES_PER_SECOND",
                    "KILO_BITS",
                    "KILO_BITS_PER_SECOND",
                    "KILO_BYTES",
                    "KILO_BYTES_PER_SECOND",
                    "MEGA_BITS",
                    "MEGA_BITS_PER_SECOND",
                    "MEGA_BYTES",
                    "MEGA_BYTES_PER_SECOND",
                    "MICRO_SECONDS",
                    "MILLI_SECONDS",
                    "NONE",
                    "PERCENT",
                    "SECONDS",
                    "TERA_BITS",
                    "TERA_BITS_PER_SECOND",
                    "TERA_BYTES",
                    "TERA_BYTES_PER_SECOND"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-instancegroupconfig-metricdimension-properties": {
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-instancegroupconfig-scalingaction-properties": {
            "Market": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "ON_DEMAND",
                    "SPOT"
                ],
                "UpdateRequires": "No interruption"
            },
            "SimpleScalingPolicyConfiguration": {
                "Required": "Yes",
                "Type": "SimpleScalingPolicyConfiguration",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-instancegroupconfig-scalingconstraints-properties": {
            "MaxCapacity": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "MinCapacity": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-instancegroupconfig-scalingrule-properties": {
            "Action": {
                "Required": "Yes",
                "Type": "ScalingAction",
                "UpdateRequires": "No interruption"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Trigger": {
                "Required": "Yes",
                "Type": "ScalingTrigger",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-instancegroupconfig-scalingtrigger-properties": {
            "CloudWatchAlarmDefinition": {
                "Required": "Yes",
                "Type": "CloudWatchAlarmDefinition",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-instancegroupconfig-simplescalingpolicyconfiguration-properties": {
            "AdjustmentType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "CHANGE_IN_CAPACITY",
                    "EXACT_CAPACITY",
                    "PERCENT_CHANGE_IN_CAPACITY"
                ],
                "UpdateRequires": "No interruption"
            },
            "CoolDown": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "ScalingAdjustment": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticmapreduce-step-hadoopjarstepconfig-properties": {
            "Args": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "Jar": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "10280",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            },
            "MainClass": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "10280",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            },
            "StepProperties": {
                "Required": "No",
                "Type": "List of [KeyValue",
                "UpdateRequires": "Replacement"
            }
        },
        "elasticmapreduce-step-keyvalue-properties": {
            "Key": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "10280",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "10280",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
                "UpdateRequires": "Replacement"
            }
        },
        "elasticsearch-domain-ebsoptions-properties": {
            "EBSEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Iops": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "VolumeSize": {},
            "VolumeType": {}
        },
        "elasticsearch-domain-elasticsearchclusterconfig-properties": {
            "DedicatedMasterCount": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "DedicatedMasterEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "DedicatedMasterType": {},
            "InstanceCount": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "InstanceType": {},
            "ZoneAwarenessConfig": {
                "Required": "No",
                "Type": "ZoneAwarenessConfig",
                "UpdateRequires": "No interruption"
            },
            "ZoneAwarenessEnabled": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            }
        },
        "elasticsearch-domain-encryptionatrestoptions-properties": {
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "KmsKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "elasticsearch-domain-nodetonodeencryptionoptions-properties": {
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            }
        },
        "elasticsearch-domain-snapshotoptions-properties": {
            "AutomatedSnapshotStartHour": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "elasticsearch-domain-vpcoptions-properties": {
            "SecurityGroupIds": {},
            "SubnetIds": {}
        },
        "elasticsearch-domain-zoneawarenessconfig-properties": {
            "AvailabilityZoneCount": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "emr-cluster-configuration-properties": {
            "Classification": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "ConfigurationProperties": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "Replacement"
            },
            "Configurations": {
                "Required": "No",
                "Type": "List of [Configuration",
                "UpdateRequires": "Replacement"
            }
        },
        "emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification-properties": {
            "Iops": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "SizeInGB": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "VolumeType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "emr-ebsconfiguration-ebsblockdeviceconfig-properties": {
            "VolumeSpecification": {
                "Required": "Yes",
                "Type": "VolumeSpecification",
                "UpdateRequires": "No interruption"
            },
            "VolumesPerInstance": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "emr-ebsconfiguration-properties": {
            "EbsBlockDeviceConfigs": {
                "Required": "No",
                "Type": "List of [EbsBlockDeviceConfig",
                "UpdateRequires": "No interruption"
            },
            "EbsOptimized": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "events-eventbuspolicy-condition-properties": {
            "Key": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "events-rule-awsvpcconfiguration-properties": {
            "AssignPublicIp": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "DISABLED",
                    "ENABLED"
                ],
                "UpdateRequires": "No interruption"
            },
            "SecurityGroups": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Subnets": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "events-rule-ecsparameters-properties": {
            "Group": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "LaunchType": {},
            "NetworkConfiguration": {
                "Required": "No",
                "Type": "NetworkConfiguration",
                "UpdateRequires": "No interruption"
            },
            "PlatformVersion": {},
            "TaskCount": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            },
            "TaskDefinitionArn": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1600",
                "UpdateRequires": "No interruption"
            }
        },
        "events-rule-inputtransformer-properties": {
            "InputPathsMap": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "InputTemplate": {}
        },
        "events-rule-kinesisparameters-properties": {
            "PartitionKeyPath": {}
        },
        "events-rule-networkconfiguration-properties": {
            "AwsVpcConfiguration": {
                "Required": "No",
                "Type": "AwsVpcConfiguration",
                "UpdateRequires": "No interruption"
            }
        },
        "events-rule-runcommandparameters-properties": {
            "RunCommandTargets": {
                "Required": "Yes",
                "Type": "List of [RunCommandTarget",
                "Maximum": "5",
                "UpdateRequires": "No interruption"
            }
        },
        "events-rule-runcommandtarget-properties": {
            "Key": {},
            "Values": {}
        },
        "events-rule-sqsparameters-properties": {
            "MessageGroupId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "events-rule-target-properties": {
            "Arn": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1600",
                "UpdateRequires": "No interruption"
            },
            "EcsParameters": {},
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "64",
                "Pattern": "[\\.\\-_A-Za-z0-9]+",
                "UpdateRequires": "No interruption"
            },
            "Input": {
                "Required": "No",
                "Type": "String",
                "Maximum": "8192",
                "UpdateRequires": "No interruption"
            },
            "InputPath": {
                "Required": "No",
                "Type": "String",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            },
            "InputTransformer": {
                "Required": "No",
                "Type": "InputTransformer",
                "UpdateRequires": "No interruption"
            },
            "KinesisParameters": {
                "Required": "No",
                "Type": "KinesisParameters",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1600",
                "UpdateRequires": "No interruption"
            },
            "RunCommandParameters": {
                "Required": "No",
                "Type": "RunCommandParameters",
                "UpdateRequires": "No interruption"
            },
            "SqsParameters": {
                "Required": "No",
                "Type": "SqsParameters",
                "UpdateRequires": "No interruption"
            }
        },
        "fsx-filesystem-lustreconfiguration-properties": {
            "ExportPath": {
                "Required": "No",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "900",
                "UpdateRequires": "Replacement"
            },
            "ImportPath": {
                "Required": "No",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "900",
                "UpdateRequires": "Replacement"
            },
            "ImportedFileChunkSize": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "512000",
                "UpdateRequires": "Replacement"
            },
            "WeeklyMaintenanceStartTime": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "fsx-filesystem-windowsconfiguration-properties": {
            "ActiveDirectoryId": {
                "Required": "No",
                "Type": "String",
                "Minimum": "12",
                "Maximum": "12",
                "Pattern": "^d-[0-9a-f]{10}$",
                "UpdateRequires": "Replacement"
            },
            "AutomaticBackupRetentionDays": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "0",
                "Maximum": "35",
                "UpdateRequires": "No interruption"
            },
            "CopyTagsToBackups": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "DailyAutomaticBackupStartTime": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ThroughputCapacity": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "8",
                "Maximum": "2048",
                "UpdateRequires": "Replacement"
            },
            "WeeklyMaintenanceStartTime": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "gamelift-alias-routingstrategy-properties": {
            "FleetId": {},
            "Message": {},
            "Type": {}
        },
        "gamelift-build-storagelocation-properties": {
            "Bucket": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "Replacement"
            },
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "Replacement"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "Replacement"
            }
        },
        "gamelift-fleet-ec2inboundpermission-properties": {
            "FromPort": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "60000",
                "UpdateRequires": "No interruption"
            },
            "IpRange": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "[^\\s]+",
                "UpdateRequires": "No interruption"
            },
            "Protocol": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "TCP",
                    "UDP"
                ],
                "UpdateRequires": "No interruption"
            },
            "ToPort": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "60000",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-classifier-csvclassifier-properties": {
            "AllowSingleColumn": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "ContainsHeader": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Delimiter": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DisableValueTrimming": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Header": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "QuoteSymbol": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-classifier-grokclassifier-properties": {
            "Classification": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "CustomPatterns": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "GrokPattern": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "glue-classifier-jsonclassifier-properties": {
            "JsonPath": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "glue-classifier-xmlclassifier-properties": {
            "Classification": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "RowTag": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-connection-connectioninput-properties": {
            "ConnectionProperties": {
                "Required": "Yes",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "ConnectionType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MatchCriteria": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "PhysicalConnectionRequirements": {
                "Required": "No",
                "Type": "PhysicalConnectionRequirements",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-connection-physicalconnectionrequirements-properties": {
            "AvailabilityZone": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SecurityGroupIdList": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "SubnetId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-crawler-jdbctarget-properties": {
            "ConnectionName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Exclusions": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Path": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-crawler-s3target-properties": {
            "Exclusions": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Path": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-crawler-schedule-properties": {
            "ScheduleExpression": {}
        },
        "glue-crawler-schemachangepolicy-properties": {
            "DeleteBehavior": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "UpdateBehavior": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-crawler-targets-properties": {
            "JdbcTargets": {
                "Required": "No",
                "Type": "List of [JdbcTarget",
                "UpdateRequires": "No interruption"
            },
            "S3Targets": {
                "Required": "No",
                "Type": "List of [S3Target",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-database-databaseinput-properties": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "LocationUri": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Parameters": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-datacatalogencryptionsettings-connectionpasswordencryption-properties": {
            "KmsKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ReturnConnectionPasswordEncrypted": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-datacatalogencryptionsettings-datacatalogencryptionsettings-properties": {
            "ConnectionPasswordEncryption": {
                "Required": "No",
                "Type": "ConnectionPasswordEncryption",
                "UpdateRequires": "No interruption"
            },
            "EncryptionAtRest": {
                "Required": "No",
                "Type": "EncryptionAtRest",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-datacatalogencryptionsettings-encryptionatrest-properties": {
            "CatalogEncryptionMode": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SseAwsKmsKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-job-connectionslist-properties": {
            "Connections": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-job-executionproperty-properties": {
            "MaxConcurrentRuns": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-job-jobcommand-properties": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PythonVersion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ScriptLocation": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-mltransform-inputrecordtables-gluetables-properties": {
            "CatalogId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ConnectionName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DatabaseName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TableName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-mltransform-inputrecordtables-properties": {
            "GlueTables": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-mltransform-transformparameters-findmatchesparameters-properties": {
            "AccuracyCostTradeoff": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "EnforceProvidedLabels": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "PrecisionRecallTradeoff": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "PrimaryKeyColumnName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "glue-mltransform-transformparameters-properties": {
            "FindMatchesParameters": {
                "Required": "No",
                "Type": "FindMatchesParameters",
                "UpdateRequires": "No interruption"
            },
            "TransformType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-partition-column-properties": {
            "Comment": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-partition-order-properties": {
            "Column": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SortOrder": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-partition-partitioninput-properties": {
            "Parameters": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "StorageDescriptor": {
                "Required": "No",
                "Type": "StorageDescriptor",
                "UpdateRequires": "No interruption"
            },
            "Values": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            }
        },
        "glue-partition-serdeinfo-properties": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Parameters": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "SerializationLibrary": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-partition-skewedinfo-properties": {
            "SkewedColumnNames": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "SkewedColumnValueLocationMaps": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "SkewedColumnValues": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-partition-storagedescriptor-properties": {
            "BucketColumns": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Columns": {
                "Required": "No",
                "Type": "List of [Column",
                "UpdateRequires": "No interruption"
            },
            "Compressed": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "InputFormat": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Location": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "NumberOfBuckets": {
                "Required": "Conditional",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "OutputFormat": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Parameters": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "SerdeInfo": {
                "Required": "No",
                "Type": "SerdeInfo",
                "UpdateRequires": "No interruption"
            },
            "SkewedInfo": {
                "Required": "No",
                "Type": "SkewedInfo",
                "UpdateRequires": "No interruption"
            },
            "SortColumns": {
                "Required": "No",
                "Type": "List of [Order",
                "UpdateRequires": "No interruption"
            },
            "StoredAsSubDirectories": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-securityconfiguration-cloudwatchencryption-properties": {
            "CloudWatchEncryptionMode": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "KmsKeyArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-securityconfiguration-encryptionconfiguration-properties": {
            "CloudWatchEncryption": {
                "Required": "No",
                "Type": "CloudWatchEncryption",
                "UpdateRequires": "No interruption"
            },
            "JobBookmarksEncryption": {
                "Required": "No",
                "Type": "JobBookmarksEncryption",
                "UpdateRequires": "No interruption"
            },
            "S3Encryptions": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-securityconfiguration-jobbookmarksencryption-properties": {
            "JobBookmarksEncryptionMode": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "KmsKeyArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-securityconfiguration-s3encryption-properties": {
            "KmsKeyArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "S3EncryptionMode": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-table-column-properties": {
            "Comment": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-table-order-properties": {
            "Column": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SortOrder": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-table-serdeinfo-properties": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Parameters": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "SerializationLibrary": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-table-skewedinfo-properties": {
            "SkewedColumnNames": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "SkewedColumnValueLocationMaps": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "SkewedColumnValues": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-table-storagedescriptor-properties": {
            "BucketColumns": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Columns": {
                "Required": "No",
                "Type": "List of [Column",
                "UpdateRequires": "No interruption"
            },
            "Compressed": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "InputFormat": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Location": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "NumberOfBuckets": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "OutputFormat": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Parameters": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "SerdeInfo": {
                "Required": "No",
                "Type": "SerdeInfo",
                "UpdateRequires": "No interruption"
            },
            "SkewedInfo": {
                "Required": "No",
                "Type": "SkewedInfo",
                "UpdateRequires": "No interruption"
            },
            "SortColumns": {
                "Required": "No",
                "Type": "List of [Order",
                "UpdateRequires": "No interruption"
            },
            "StoredAsSubDirectories": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-table-tableinput-properties": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Owner": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Parameters": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "PartitionKeys": {
                "Required": "No",
                "Type": "List of [Column",
                "UpdateRequires": "No interruption"
            },
            "Retention": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "StorageDescriptor": {
                "Required": "No",
                "Type": "StorageDescriptor",
                "UpdateRequires": "No interruption"
            },
            "TableType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ViewExpandedText": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ViewOriginalText": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-trigger-action-properties": {
            "Arguments": {},
            "JobName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SecurityConfiguration": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-trigger-condition-properties": {
            "JobName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "LogicalOperator": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "State": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "glue-trigger-predicate-properties": {
            "Conditions": {
                "Required": "No",
                "Type": "List of [Condition",
                "UpdateRequires": "No interruption"
            },
            "Logical": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "greengrass-connectordefinition-connector-properties": {
            "ConnectorArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Parameters": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-connectordefinition-connectordefinitionversion-properties": {
            "Connectors": {
                "Required": "Yes",
                "Type": "List of [Connector",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-connectordefinitionversion-connector-properties": {
            "ConnectorArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Parameters": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-coredefinition-core-properties": {
            "CertificateArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SyncShadow": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "ThingArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-coredefinition-coredefinitionversion-properties": {
            "Cores": {
                "Required": "Yes",
                "Type": "List of [Core",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-coredefinitionversion-core-properties": {
            "CertificateArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SyncShadow": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "ThingArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-devicedefinition-device-properties": {
            "CertificateArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SyncShadow": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "ThingArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-devicedefinition-devicedefinitionversion-properties": {
            "Devices": {
                "Required": "Yes",
                "Type": "List of [Device",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-devicedefinitionversion-device-properties": {
            "CertificateArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SyncShadow": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "ThingArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-functiondefinition-defaultconfig-properties": {
            "Execution": {
                "Required": "Yes",
                "Type": "Execution",
                "UpdateRequires": "No interruption"
            }
        },
        "greengrass-functiondefinition-environment-properties": {
            "AccessSysfs": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "Execution": {
                "Required": "No",
                "Type": "Execution",
                "UpdateRequires": "Replacement"
            },
            "ResourceAccessPolicies": {
                "Required": "No",
                "Type": "List of [ResourceAccessPolicy",
                "UpdateRequires": "Replacement"
            },
            "Variables": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-functiondefinition-execution-properties": {
            "IsolationMode": {},
            "RunAs": {}
        },
        "greengrass-functiondefinition-function-properties": {
            "FunctionArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "FunctionConfiguration": {
                "Required": "Yes",
                "Type": "FunctionConfiguration",
                "UpdateRequires": "Replacement"
            },
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-functiondefinition-functionconfiguration-properties": {
            "EncodingType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Environment": {
                "Required": "No",
                "Type": "Environment",
                "UpdateRequires": "Replacement"
            },
            "ExecArgs": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Executable": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "MemorySize": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "Pinned": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Timeout": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-functiondefinition-functiondefinitionversion-properties": {
            "DefaultConfig": {
                "Required": "No",
                "Type": "DefaultConfig",
                "UpdateRequires": "Replacement"
            },
            "Functions": {
                "Required": "Yes",
                "Type": "List of [Function",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-functiondefinition-resourceaccesspolicy-properties": {
            "Permission": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "ResourceId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-functiondefinition-runas-properties": {
            "Gid": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "Uid": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-functiondefinitionversion-defaultconfig-properties": {
            "Execution": {
                "Required": "Yes",
                "Type": "Execution",
                "UpdateRequires": "No interruption"
            }
        },
        "greengrass-functiondefinitionversion-environment-properties": {
            "AccessSysfs": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "Execution": {
                "Required": "No",
                "Type": "Execution",
                "UpdateRequires": "Replacement"
            },
            "ResourceAccessPolicies": {
                "Required": "No",
                "Type": "List of [ResourceAccessPolicy",
                "UpdateRequires": "Replacement"
            },
            "Variables": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-functiondefinitionversion-execution-properties": {
            "IsolationMode": {},
            "RunAs": {}
        },
        "greengrass-functiondefinitionversion-function-properties": {
            "FunctionArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "FunctionConfiguration": {
                "Required": "Yes",
                "Type": "FunctionConfiguration",
                "UpdateRequires": "Replacement"
            },
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-functiondefinitionversion-functionconfiguration-properties": {
            "EncodingType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Environment": {
                "Required": "No",
                "Type": "Environment",
                "UpdateRequires": "Replacement"
            },
            "ExecArgs": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Executable": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "MemorySize": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "Pinned": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Timeout": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-functiondefinitionversion-resourceaccesspolicy-properties": {
            "Permission": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "ResourceId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-functiondefinitionversion-runas-properties": {
            "Gid": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "Uid": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-group-groupversion-properties": {
            "ConnectorDefinitionVersionArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "CoreDefinitionVersionArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "DeviceDefinitionVersionArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "FunctionDefinitionVersionArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "LoggerDefinitionVersionArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "ResourceDefinitionVersionArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SubscriptionDefinitionVersionArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-loggerdefinition-logger-properties": {
            "Component": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Level": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Space": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-loggerdefinition-loggerdefinitionversion-properties": {
            "Loggers": {
                "Required": "Yes",
                "Type": "List of [Logger",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-loggerdefinitionversion-logger-properties": {
            "Component": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Level": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Space": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-resourcedefinition-groupownersetting-properties": {
            "AutoAddGroupOwner": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "GroupOwner": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-resourcedefinition-localdeviceresourcedata-properties": {
            "GroupOwnerSetting": {
                "Required": "No",
                "Type": "GroupOwnerSetting",
                "UpdateRequires": "Replacement"
            },
            "SourcePath": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-resourcedefinition-localvolumeresourcedata-properties": {
            "DestinationPath": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "GroupOwnerSetting": {
                "Required": "No",
                "Type": "GroupOwnerSetting",
                "UpdateRequires": "Replacement"
            },
            "SourcePath": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-resourcedefinition-resourcedatacontainer-properties": {
            "LocalDeviceResourceData": {
                "Required": "No",
                "Type": "LocalDeviceResourceData",
                "UpdateRequires": "Replacement"
            },
            "LocalVolumeResourceData": {
                "Required": "No",
                "Type": "LocalVolumeResourceData",
                "UpdateRequires": "Replacement"
            },
            "S3MachineLearningModelResourceData": {
                "Required": "No",
                "Type": "S3MachineLearningModelResourceData",
                "UpdateRequires": "Replacement"
            },
            "SageMakerMachineLearningModelResourceData": {
                "Required": "No",
                "Type": "SageMakerMachineLearningModelResourceData",
                "UpdateRequires": "Replacement"
            },
            "SecretsManagerSecretResourceData": {
                "Required": "No",
                "Type": "SecretsManagerSecretResourceData",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-resourcedefinition-resourcedefinitionversion-properties": {
            "Resources": {
                "Required": "Yes",
                "Type": "List of [ResourceInstance",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-resourcedefinition-resourceinstance-properties": {
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "ResourceDataContainer": {
                "Required": "Yes",
                "Type": "ResourceDataContainer",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-resourcedefinition-s3machinelearningmodelresourcedata-properties": {
            "DestinationPath": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "S3Uri": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata-properties": {
            "DestinationPath": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SageMakerJobArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-resourcedefinition-secretsmanagersecretresourcedata-properties": {
            "ARN": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "AdditionalStagingLabelsToDownload": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-resourcedefinitionversion-groupownersetting-properties": {
            "AutoAddGroupOwner": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "GroupOwner": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-resourcedefinitionversion-localdeviceresourcedata-properties": {
            "GroupOwnerSetting": {
                "Required": "No",
                "Type": "GroupOwnerSetting",
                "UpdateRequires": "Replacement"
            },
            "SourcePath": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-resourcedefinitionversion-localvolumeresourcedata-properties": {
            "DestinationPath": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "GroupOwnerSetting": {
                "Required": "No",
                "Type": "GroupOwnerSetting",
                "UpdateRequires": "Replacement"
            },
            "SourcePath": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-resourcedefinitionversion-resourcedatacontainer-properties": {
            "LocalDeviceResourceData": {
                "Required": "No",
                "Type": "LocalDeviceResourceData",
                "UpdateRequires": "Replacement"
            },
            "LocalVolumeResourceData": {
                "Required": "No",
                "Type": "LocalVolumeResourceData",
                "UpdateRequires": "Replacement"
            },
            "S3MachineLearningModelResourceData": {
                "Required": "No",
                "Type": "S3MachineLearningModelResourceData",
                "UpdateRequires": "Replacement"
            },
            "SageMakerMachineLearningModelResourceData": {
                "Required": "No",
                "Type": "SageMakerMachineLearningModelResourceData",
                "UpdateRequires": "Replacement"
            },
            "SecretsManagerSecretResourceData": {
                "Required": "No",
                "Type": "SecretsManagerSecretResourceData",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-resourcedefinitionversion-resourceinstance-properties": {
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "ResourceDataContainer": {
                "Required": "Yes",
                "Type": "ResourceDataContainer",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-resourcedefinitionversion-s3machinelearningmodelresourcedata-properties": {
            "DestinationPath": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "S3Uri": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata-properties": {
            "DestinationPath": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SageMakerJobArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-resourcedefinitionversion-secretsmanagersecretresourcedata-properties": {
            "ARN": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "AdditionalStagingLabelsToDownload": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-subscriptiondefinition-subscription-properties": {
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Source": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Subject": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Target": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-subscriptiondefinition-subscriptiondefinitionversion-properties": {
            "Subscriptions": {
                "Required": "Yes",
                "Type": "List of [Subscription",
                "UpdateRequires": "Replacement"
            }
        },
        "greengrass-subscriptiondefinitionversion-subscription-properties": {
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Source": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Subject": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Target": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "guardduty-filter-condition-properties": {
            "Eq": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Gte": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Lt": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Lte": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Neq": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "guardduty-filter-findingcriteria-properties": {
            "Criterion": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "ItemType": {
                "Required": "No",
                "Type": "Condition",
                "UpdateRequires": "No interruption"
            }
        },
        "iam-accesskey-properties": {
            "Serial": {},
            "Status": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Active",
                    "Inactive"
                ],
                "UpdateRequires": "No interruption"
            },
            "UserName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\w+=,.@-]+",
                "UpdateRequires": "Replacement"
            }
        },
        "iam-addusertogroup-properties": {
            "GroupName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\w+=,.@-]+",
                "UpdateRequires": "No interruption"
            },
            "Users": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "iam-group-properties": {
            "GroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "ManagedPolicyArns": {},
            "Path": {},
            "Policies": {}
        },
        "iam-policy-1-properties": {
            "PolicyDocument": {
                "Required": "Yes",
                "Type": "Json",
                "Minimum": "1",
                "Maximum": "131072",
                "Pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
                "UpdateRequires": "No interruption"
            },
            "PolicyName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\w+=,.@-]+",
                "UpdateRequires": "No interruption"
            }
        },
        "iam-policy-2-properties": {
            "PolicyDocument": {
                "Required": "Yes",
                "Type": "Json",
                "Minimum": "1",
                "Maximum": "131072",
                "Pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
                "UpdateRequires": "No interruption"
            },
            "PolicyName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\w+=,.@-]+",
                "UpdateRequires": "No interruption"
            }
        },
        "iam-policy-properties": {
            "PolicyDocument": {
                "Required": "Yes",
                "Type": "Json",
                "Minimum": "1",
                "Maximum": "131072",
                "Pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
                "UpdateRequires": "No interruption"
            },
            "PolicyName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\w+=,.@-]+",
                "UpdateRequires": "No interruption"
            }
        },
        "iam-user-loginprofile-properties": {
            "Password": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PasswordResetRequired": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "iam-user-properties": {
            "Groups": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "LoginProfile": {},
            "ManagedPolicyArns": {},
            "Path": {},
            "PermissionsBoundary": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Policies": {},
            "UserName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "iot-thing-attributepayload-properties": {
            "Attributes": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            }
        },
        "iot-topicrule-action-properties": {
            "CloudwatchAlarm": {
                "Required": "No",
                "Type": "CloudwatchAlarmAction",
                "UpdateRequires": "No interruption"
            },
            "CloudwatchMetric": {
                "Required": "No",
                "Type": "CloudwatchMetricAction",
                "UpdateRequires": "No interruption"
            },
            "DynamoDB": {
                "Required": "No",
                "Type": "DynamoDBAction",
                "UpdateRequires": "No interruption"
            },
            "DynamoDBv2": {
                "Required": "No",
                "Type": "DynamoDBv2Action",
                "UpdateRequires": "No interruption"
            },
            "Elasticsearch": {
                "Required": "No",
                "Type": "ElasticsearchAction",
                "UpdateRequires": "No interruption"
            },
            "Firehose": {
                "Required": "No",
                "Type": "FirehoseAction",
                "UpdateRequires": "No interruption"
            },
            "IotAnalytics": {
                "Required": "No",
                "Type": "IotAnalyticsAction",
                "UpdateRequires": "No interruption"
            },
            "Kinesis": {
                "Required": "No",
                "Type": "KinesisAction",
                "UpdateRequires": "No interruption"
            },
            "Lambda": {
                "Required": "No",
                "Type": "LambdaAction",
                "UpdateRequires": "No interruption"
            },
            "Republish": {
                "Required": "No",
                "Type": "RepublishAction",
                "UpdateRequires": "No interruption"
            },
            "S3": {
                "Required": "No",
                "Type": "S3Action",
                "UpdateRequires": "No interruption"
            },
            "Sns": {
                "Required": "No",
                "Type": "SnsAction",
                "UpdateRequires": "No interruption"
            },
            "Sqs": {
                "Required": "No",
                "Type": "SqsAction",
                "UpdateRequires": "No interruption"
            },
            "StepFunctions": {
                "Required": "No",
                "Type": "StepFunctionsAction",
                "UpdateRequires": "No interruption"
            }
        },
        "iot-topicrule-cloudwatchalarmaction-properties": {
            "AlarmName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "StateReason": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "StateValue": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iot-topicrule-cloudwatchmetricaction-properties": {
            "MetricName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MetricNamespace": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MetricTimestamp": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MetricUnit": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MetricValue": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iot-topicrule-dynamodbaction-properties": {
            "HashKeyField": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "HashKeyType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "HashKeyValue": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PayloadField": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RangeKeyField": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RangeKeyType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RangeKeyValue": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TableName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iot-topicrule-dynamodbv2action-properties": {
            "PutItem": {
                "Required": "No",
                "Type": "PutItemInput",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iot-topicrule-elasticsearchaction-properties": {
            "Endpoint": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Index": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iot-topicrule-firehoseaction-properties": {
            "DeliveryStreamName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Separator": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iot-topicrule-iotanalyticsaction-properties": {
            "ChannelName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iot-topicrule-kinesisaction-properties": {
            "PartitionKey": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "StreamName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iot-topicrule-lambdaaction-properties": {
            "FunctionArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iot-topicrule-putiteminput-properties": {
            "TableName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iot-topicrule-republishaction-properties": {
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Topic": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iot-topicrule-s3action-properties": {
            "BucketName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iot-topicrule-snsaction-properties": {
            "MessageFormat": {},
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TargetArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iot-topicrule-sqsaction-properties": {
            "QueueUrl": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "UseBase64": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "iot-topicrule-stepfunctionsaction-properties": {
            "ExecutionNamePrefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "StateMachineName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iot-topicrule-topicrulepayload-properties": {
            "Actions": {
                "Required": "Yes",
                "Type": "List of [Action",
                "UpdateRequires": "No interruption"
            },
            "AwsIotSqlVersion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ErrorAction": {
                "Required": "No",
                "Type": "Action",
                "UpdateRequires": "No interruption"
            },
            "RuleDisabled": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Sql": {}
        },
        "iot1click-project-devicetemplate-properties": {
            "CallbackOverrides": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "DeviceType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iot1click-project-placementtemplate-properties": {
            "DefaultAttributes": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "DeviceTemplates": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "Replacement"
            }
        },
        "iotanalytics-channel-channelstorage-properties": {
            "CustomerManagedS3": {
                "Required": "No",
                "Type": "CustomerManagedS3",
                "UpdateRequires": "No interruption"
            },
            "ServiceManagedS3": {
                "Required": "No",
                "Type": "ServiceManagedS3",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-channel-customermanageds3-properties": {
            "Bucket": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "KeyPrefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-channel-retentionperiod-properties": {
            "NumberOfDays": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            },
            "Unlimited": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-dataset-action-properties": {
            "ActionName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "^[a-zA-Z0-9_]+$",
                "UpdateRequires": "No interruption"
            },
            "ContainerAction": {
                "Required": "No",
                "Type": "ContainerAction",
                "UpdateRequires": "No interruption"
            },
            "QueryAction": {
                "Required": "No",
                "Type": "QueryAction",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-dataset-containeraction-properties": {
            "ExecutionRoleArn": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "2048",
                "UpdateRequires": "No interruption"
            },
            "Image": {
                "Required": "Yes",
                "Type": "String",
                "Maximum": "255",
                "UpdateRequires": "No interruption"
            },
            "ResourceConfiguration": {
                "Required": "Yes",
                "Type": "ResourceConfiguration",
                "UpdateRequires": "No interruption"
            },
            "Variables": {
                "Required": "No",
                "Type": "List of [Variable",
                "Maximum": "50",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-dataset-datasetcontentdeliveryrule-properties": {
            "Destination": {
                "Required": "Yes",
                "Type": "DatasetContentDeliveryRuleDestination",
                "UpdateRequires": "No interruption"
            },
            "EntryName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-dataset-datasetcontentdeliveryruledestination-properties": {
            "IotEventsDestinationConfiguration": {
                "Required": "No",
                "Type": "IotEventsDestinationConfiguration",
                "UpdateRequires": "No interruption"
            },
            "S3DestinationConfiguration": {
                "Required": "No",
                "Type": "S3DestinationConfiguration",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-dataset-deltatime-properties": {
            "OffsetSeconds": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "TimeExpression": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-dataset-filter-properties": {
            "DeltaTime": {
                "Required": "No",
                "Type": "DeltaTime",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-dataset-glueconfiguration-properties": {
            "DatabaseName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "150",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*",
                "UpdateRequires": "No interruption"
            },
            "TableName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "150",
                "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-dataset-ioteventsdestinationconfiguration-properties": {
            "InputName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "2048",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-dataset-queryaction-properties": {
            "Filters": {
                "Required": "No",
                "Type": "List of [Filter",
                "Maximum": "1",
                "UpdateRequires": "No interruption"
            },
            "SqlQuery": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-dataset-resourceconfiguration-properties": {
            "ComputeType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ACU_1",
                    "ACU_2"
                ],
                "UpdateRequires": "No interruption"
            },
            "VolumeSizeInGB": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "50",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-dataset-retentionperiod-properties": {
            "NumberOfDays": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            },
            "Unlimited": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-dataset-s3destinationconfiguration-properties": {
            "Bucket": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "255",
                "Pattern": "^[a-zA-Z0-9.\\-_]*$",
                "UpdateRequires": "No interruption"
            },
            "GlueConfiguration": {
                "Required": "No",
                "Type": "GlueConfiguration",
                "UpdateRequires": "No interruption"
            },
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "255",
                "Pattern": "^[a-zA-Z0-9!_.*'()/{}:-]*$",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "2048",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-dataset-trigger-schedule-properties": {
            "ScheduleExpression": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-dataset-trigger-properties": {
            "Schedule": {
                "Required": "No",
                "Type": "Schedule",
                "UpdateRequires": "No interruption"
            },
            "TriggeringDataset": {
                "Required": "No",
                "Type": "TriggeringDataset",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-dataset-triggeringdataset-properties": {
            "DatasetName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "^[a-zA-Z0-9_]+$",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-dataset-variable-datasetcontentversionvalue-properties": {
            "DatasetName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "^[a-zA-Z0-9_]+$",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-dataset-variable-outputfileurivalue-properties": {
            "FileName": {
                "Required": "No",
                "Type": "String",
                "Pattern": "[\\w\\.-]{1,255}",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-dataset-variable-properties": {
            "DatasetContentVersionValue": {
                "Required": "No",
                "Type": "DatasetContentVersionValue",
                "UpdateRequires": "No interruption"
            },
            "DoubleValue": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "OutputFileUriValue": {
                "Required": "No",
                "Type": "OutputFileUriValue",
                "UpdateRequires": "No interruption"
            },
            "StringValue": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "1024",
                "UpdateRequires": "No interruption"
            },
            "VariableName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-dataset-versioningconfiguration-properties": {
            "MaxVersions": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "1000",
                "UpdateRequires": "No interruption"
            },
            "Unlimited": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-datastore-customermanageds3-properties": {
            "Bucket": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "KeyPrefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-datastore-datastorestorage-properties": {
            "CustomerManagedS3": {
                "Required": "No",
                "Type": "CustomerManagedS3",
                "UpdateRequires": "No interruption"
            },
            "ServiceManagedS3": {
                "Required": "No",
                "Type": "ServiceManagedS3",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-datastore-retentionperiod-properties": {
            "NumberOfDays": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            },
            "Unlimited": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-pipeline-activity-properties": {
            "AddAttributes": {
                "Required": "No",
                "Type": "AddAttributes",
                "UpdateRequires": "No interruption"
            },
            "Channel": {
                "Required": "No",
                "Type": "Channel",
                "UpdateRequires": "No interruption"
            },
            "Datastore": {
                "Required": "No",
                "Type": "Datastore",
                "UpdateRequires": "No interruption"
            },
            "DeviceRegistryEnrich": {
                "Required": "No",
                "Type": "DeviceRegistryEnrich",
                "UpdateRequires": "No interruption"
            },
            "DeviceShadowEnrich": {
                "Required": "No",
                "Type": "DeviceShadowEnrich",
                "UpdateRequires": "No interruption"
            },
            "Filter": {
                "Required": "No",
                "Type": "Filter",
                "UpdateRequires": "No interruption"
            },
            "Lambda": {
                "Required": "No",
                "Type": "Lambda",
                "UpdateRequires": "No interruption"
            },
            "Math": {
                "Required": "No",
                "Type": "Math",
                "UpdateRequires": "No interruption"
            },
            "RemoveAttributes": {
                "Required": "No",
                "Type": "RemoveAttributes",
                "UpdateRequires": "No interruption"
            },
            "SelectAttributes": {
                "Required": "No",
                "Type": "SelectAttributes",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-pipeline-addattributes-properties": {
            "Attributes": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "Next": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-pipeline-channel-properties": {
            "ChannelName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "^[a-zA-Z0-9_]+$",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "Next": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-pipeline-datastore-properties": {
            "DatastoreName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "^[a-zA-Z0-9_]+$",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-pipeline-deviceregistryenrich-properties": {
            "Attribute": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "Next": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "No",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "2048",
                "UpdateRequires": "No interruption"
            },
            "ThingName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-pipeline-deviceshadowenrich-properties": {
            "Attribute": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "Next": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "No",
                "Type": "String",
                "Minimum": "20",
                "Maximum": "2048",
                "UpdateRequires": "No interruption"
            },
            "ThingName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-pipeline-filter-properties": {
            "Filter": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "Next": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-pipeline-lambda-properties": {
            "BatchSize": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "1000",
                "UpdateRequires": "No interruption"
            },
            "LambdaName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "64",
                "Pattern": "^[a-zA-Z0-9_-]+$",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "Next": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-pipeline-math-properties": {
            "Attribute": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            },
            "Math": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "Next": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-pipeline-removeattributes-properties": {
            "Attributes": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "50",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "Next": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            }
        },
        "iotanalytics-pipeline-selectattributes-properties": {
            "Attributes": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "50",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "Next": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents-detectormodel-action-properties": {
            "ClearTimer": {
                "Required": "No",
                "Type": "ClearTimer",
                "UpdateRequires": "No interruption"
            },
            "Firehose": {
                "Required": "No",
                "Type": "Firehose",
                "UpdateRequires": "No interruption"
            },
            "IotEvents": {
                "Required": "No",
                "Type": "IotEvents",
                "UpdateRequires": "No interruption"
            },
            "IotTopicPublish": {
                "Required": "No",
                "Type": "IotTopicPublish",
                "UpdateRequires": "No interruption"
            },
            "Lambda": {
                "Required": "No",
                "Type": "Lambda",
                "UpdateRequires": "No interruption"
            },
            "ResetTimer": {
                "Required": "No",
                "Type": "ResetTimer",
                "UpdateRequires": "No interruption"
            },
            "SetTimer": {
                "Required": "No",
                "Type": "SetTimer",
                "UpdateRequires": "No interruption"
            },
            "SetVariable": {
                "Required": "No",
                "Type": "SetVariable",
                "UpdateRequires": "No interruption"
            },
            "Sns": {
                "Required": "No",
                "Type": "Sns",
                "UpdateRequires": "No interruption"
            },
            "Sqs": {
                "Required": "No",
                "Type": "Sqs",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents-detectormodel-cleartimer-properties": {
            "TimerName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents-detectormodel-detectormodeldefinition-properties": {
            "InitialStateName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "States": {
                "Required": "No",
                "Type": "List of [State",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents-detectormodel-event-properties": {
            "Actions": {
                "Required": "No",
                "Type": "List of [Action",
                "UpdateRequires": "No interruption"
            },
            "Condition": {
                "Required": "No",
                "Type": "String",
                "Maximum": "512",
                "UpdateRequires": "No interruption"
            },
            "EventName": {
                "Required": "No",
                "Type": "String",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents-detectormodel-firehose-properties": {
            "DeliveryStreamName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Separator": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents-detectormodel-iotevents-properties": {
            "InputName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents-detectormodel-iottopicpublish-properties": {
            "MqttTopic": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents-detectormodel-lambda-properties": {
            "FunctionArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents-detectormodel-onenter-properties": {
            "Events": {
                "Required": "No",
                "Type": "List of [Event",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents-detectormodel-onexit-properties": {
            "Events": {
                "Required": "No",
                "Type": "List of [Event",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents-detectormodel-oninput-properties": {
            "Events": {
                "Required": "No",
                "Type": "List of [Event",
                "UpdateRequires": "No interruption"
            },
            "TransitionEvents": {
                "Required": "No",
                "Type": "List of [TransitionEvent",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents-detectormodel-resettimer-properties": {
            "TimerName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents-detectormodel-settimer-properties": {
            "Seconds": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "TimerName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents-detectormodel-setvariable-properties": {
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "VariableName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents-detectormodel-sns-properties": {
            "TargetArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents-detectormodel-sqs-properties": {
            "QueueUrl": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "UseBase64": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents-detectormodel-state-properties": {
            "OnEnter": {
                "Required": "No",
                "Type": "OnEnter",
                "UpdateRequires": "No interruption"
            },
            "OnExit": {
                "Required": "No",
                "Type": "OnExit",
                "UpdateRequires": "No interruption"
            },
            "OnInput": {
                "Required": "No",
                "Type": "OnInput",
                "UpdateRequires": "No interruption"
            },
            "StateName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents-detectormodel-transitionevent-properties": {
            "Actions": {
                "Required": "No",
                "Type": "List of [Action",
                "UpdateRequires": "No interruption"
            },
            "Condition": {
                "Required": "No",
                "Type": "String",
                "Maximum": "512",
                "UpdateRequires": "No interruption"
            },
            "EventName": {
                "Required": "No",
                "Type": "String",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "NextState": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents-input-attribute-properties": {
            "JsonPath": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "^((`[\\w\\- ]+`)|([\\w\\-]+))(\\.((`[\\w- ]+`)|([\\w\\-]+)))*$",
                "UpdateRequires": "No interruption"
            }
        },
        "iotevents-input-inputdefinition-properties": {
            "Attributes": {
                "Required": "No",
                "Type": "List of [Attribute",
                "Maximum": "200",
                "UpdateRequires": "No interruption"
            }
        },
        "iotthingsgraph-flowtemplate-definitiondocument-properties": {
            "Language": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Text": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesis-stream-streamencryption-properties": {
            "EncryptionType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "KMS",
                    "NONE"
                ],
                "UpdateRequires": "No interruption"
            },
            "KeyId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-application-csvmappingparameters-properties": {
            "RecordColumnDelimiter": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            },
            "RecordRowDelimiter": {}
        },
        "kinesisanalytics-application-input-properties": {
            "InputParallelism": {
                "Required": "No",
                "Type": "InputParallelism",
                "UpdateRequires": "No interruption"
            },
            "InputProcessingConfiguration": {
                "Required": "No",
                "Type": "InputProcessingConfiguration",
                "UpdateRequires": "No interruption"
            },
            "InputSchema": {
                "Required": "Yes",
                "Type": "InputSchema",
                "UpdateRequires": "No interruption"
            },
            "KinesisFirehoseInput": {
                "Required": "Conditional",
                "Type": "KinesisFirehoseInput",
                "UpdateRequires": "No interruption"
            },
            "KinesisStreamsInput": {
                "Required": "Conditional",
                "Type": "KinesisStreamsInput",
                "UpdateRequires": "No interruption"
            },
            "NamePrefix": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "32",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-application-inputlambdaprocessor-properties": {
            "ResourceARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            },
            "RoleARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-application-inputparallelism-properties": {
            "Count": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "64",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-application-inputprocessingconfiguration-properties": {
            "InputLambdaProcessor": {
                "Required": "No",
                "Type": "InputLambdaProcessor",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-application-inputschema-properties": {
            "RecordColumns": {
                "Required": "Yes",
                "Type": "List of [RecordColumn",
                "Maximum": "1000",
                "UpdateRequires": "No interruption"
            },
            "RecordEncoding": {
                "Required": "No",
                "Type": "String",
                "Pattern": "UTF-8",
                "UpdateRequires": "No interruption"
            },
            "RecordFormat": {
                "Required": "Yes",
                "Type": "RecordFormat",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-application-jsonmappingparameters-properties": {
            "RecordRowPath": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-application-kinesisfirehoseinput-properties": {
            "ResourceARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            },
            "RoleARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-application-kinesisstreamsinput-properties": {
            "ResourceARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            },
            "RoleARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-application-mappingparameters-properties": {
            "CSVMappingParameters": {
                "Required": "No",
                "Type": "CSVMappingParameters",
                "UpdateRequires": "No interruption"
            },
            "JSONMappingParameters": {
                "Required": "No",
                "Type": "JSONMappingParameters",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-application-recordcolumn-properties": {
            "Mapping": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SqlType": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-application-recordformat-properties": {
            "MappingParameters": {
                "Required": "No",
                "Type": "MappingParameters",
                "UpdateRequires": "No interruption"
            },
            "RecordFormatType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "CSV",
                    "JSON"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-applicationoutput-destinationschema-properties": {
            "RecordFormatType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "CSV",
                    "JSON"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-applicationoutput-kinesisfirehoseoutput-properties": {
            "ResourceARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            },
            "RoleARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-applicationoutput-kinesisstreamsoutput-properties": {
            "ResourceARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            },
            "RoleARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-applicationoutput-lambdaoutput-properties": {
            "ResourceARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            },
            "RoleARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-applicationoutput-output-properties": {
            "DestinationSchema": {
                "Required": "Yes",
                "Type": "DestinationSchema",
                "UpdateRequires": "No interruption"
            },
            "KinesisFirehoseOutput": {
                "Required": "No",
                "Type": "KinesisFirehoseOutput",
                "UpdateRequires": "No interruption"
            },
            "KinesisStreamsOutput": {
                "Required": "No",
                "Type": "KinesisStreamsOutput",
                "UpdateRequires": "No interruption"
            },
            "LambdaOutput": {
                "Required": "No",
                "Type": "LambdaOutput",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "32",
                "UpdateRequires": "Replacement"
            }
        },
        "kinesisanalytics-applicationreferencedatasource-csvmappingparameters-properties": {
            "RecordColumnDelimiter": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            },
            "RecordRowDelimiter": {}
        },
        "kinesisanalytics-applicationreferencedatasource-jsonmappingparameters-properties": {
            "RecordRowPath": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-applicationreferencedatasource-mappingparameters-properties": {
            "CSVMappingParameters": {
                "Required": "No",
                "Type": "CSVMappingParameters",
                "UpdateRequires": "No interruption"
            },
            "JSONMappingParameters": {
                "Required": "No",
                "Type": "JSONMappingParameters",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-applicationreferencedatasource-recordcolumn-properties": {
            "Mapping": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SqlType": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-applicationreferencedatasource-recordformat-properties": {
            "MappingParameters": {
                "Required": "No",
                "Type": "MappingParameters",
                "UpdateRequires": "No interruption"
            },
            "RecordFormatType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "CSV",
                    "JSON"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-applicationreferencedatasource-referencedatasource-properties": {
            "ReferenceSchema": {
                "Required": "Yes",
                "Type": "ReferenceSchema",
                "UpdateRequires": "No interruption"
            },
            "S3ReferenceDataSource": {
                "Required": "No",
                "Type": "S3ReferenceDataSource",
                "UpdateRequires": "No interruption"
            },
            "TableName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "32",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-applicationreferencedatasource-referenceschema-properties": {
            "RecordColumns": {
                "Required": "Yes",
                "Type": "List of [RecordColumn",
                "UpdateRequires": "No interruption"
            },
            "RecordEncoding": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RecordFormat": {
                "Required": "Yes",
                "Type": "RecordFormat",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalytics-applicationreferencedatasource-s3referencedatasource-properties": {
            "BucketARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            },
            "FileKey": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "UpdateRequires": "No interruption"
            },
            "ReferenceRoleARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-applicationcodeconfiguration-properties": {
            "CodeContent": {
                "Required": "Yes",
                "Type": "CodeContent",
                "UpdateRequires": "No interruption"
            },
            "CodeContentType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "PLAINTEXT",
                    "ZIPFILE"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-applicationconfiguration-properties": {
            "ApplicationCodeConfiguration": {
                "Required": "Conditional",
                "Type": "ApplicationCodeConfiguration",
                "UpdateRequires": "No interruption"
            },
            "ApplicationSnapshotConfiguration": {
                "Required": "No",
                "Type": "ApplicationSnapshotConfiguration",
                "UpdateRequires": "No interruption"
            },
            "EnvironmentProperties": {
                "Required": "No",
                "Type": "EnvironmentProperties",
                "UpdateRequires": "No interruption"
            },
            "FlinkApplicationConfiguration": {
                "Required": "No",
                "Type": "FlinkApplicationConfiguration",
                "UpdateRequires": "No interruption"
            },
            "SqlApplicationConfiguration": {
                "Required": "No",
                "Type": "SqlApplicationConfiguration",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-applicationsnapshotconfiguration-properties": {
            "SnapshotsEnabled": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-checkpointconfiguration-properties": {
            "CheckpointInterval": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "CheckpointingEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "ConfigurationType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "CUSTOM",
                    "DEFAULT"
                ],
                "UpdateRequires": "No interruption"
            },
            "MinPauseBetweenCheckpoints": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-codecontent-properties": {
            "S3ContentLocation": {
                "Required": "No",
                "Type": "S3ContentLocation",
                "UpdateRequires": "No interruption"
            },
            "TextContent": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "102400",
                "UpdateRequires": "No interruption"
            },
            "ZipFileContent": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-csvmappingparameters-properties": {
            "RecordColumnDelimiter": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            },
            "RecordRowDelimiter": {}
        },
        "kinesisanalyticsv2-application-environmentproperties": {
            "PropertyGroups": {
                "Required": "No",
                "Type": "List of [PropertyGroup",
                "Maximum": "50",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-environmentproperties-properties": {
            "PropertyGroups": {
                "Required": "No",
                "Type": "List of [PropertyGroup",
                "Maximum": "50",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-flinkapplicationconfiguration-properties": {
            "CheckpointConfiguration": {
                "Required": "No",
                "Type": "CheckpointConfiguration",
                "UpdateRequires": "No interruption"
            },
            "MonitoringConfiguration": {
                "Required": "No",
                "Type": "MonitoringConfiguration",
                "UpdateRequires": "No interruption"
            },
            "ParallelismConfiguration": {
                "Required": "No",
                "Type": "ParallelismConfiguration",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-input-properties": {
            "InputParallelism": {
                "Required": "No",
                "Type": "InputParallelism",
                "UpdateRequires": "No interruption"
            },
            "InputProcessingConfiguration": {
                "Required": "No",
                "Type": "InputProcessingConfiguration",
                "UpdateRequires": "No interruption"
            },
            "InputSchema": {
                "Required": "Yes",
                "Type": "InputSchema",
                "UpdateRequires": "No interruption"
            },
            "KinesisFirehoseInput": {
                "Required": "No",
                "Type": "KinesisFirehoseInput",
                "UpdateRequires": "No interruption"
            },
            "KinesisStreamsInput": {
                "Required": "No",
                "Type": "KinesisStreamsInput",
                "UpdateRequires": "No interruption"
            },
            "NamePrefix": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "32",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-inputlambdaprocessor-properties": {
            "ResourceARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-inputparallelism-properties": {
            "Count": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "64",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-inputprocessingconfiguration-properties": {
            "InputLambdaProcessor": {
                "Required": "No",
                "Type": "InputLambdaProcessor",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-inputschema-properties": {
            "RecordColumns": {
                "Required": "Yes",
                "Type": "List of [RecordColumn",
                "Maximum": "1000",
                "UpdateRequires": "No interruption"
            },
            "RecordEncoding": {
                "Required": "No",
                "Type": "String",
                "Pattern": "UTF-8",
                "UpdateRequires": "No interruption"
            },
            "RecordFormat": {
                "Required": "Yes",
                "Type": "RecordFormat",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-jsonmappingparameters-properties": {
            "RecordRowPath": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-kinesisfirehoseinput-properties": {
            "ResourceARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-kinesisstreamsinput-properties": {
            "ResourceARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-mappingparameters-properties": {
            "CSVMappingParameters": {
                "Required": "No",
                "Type": "CSVMappingParameters",
                "UpdateRequires": "No interruption"
            },
            "JSONMappingParameters": {
                "Required": "No",
                "Type": "JSONMappingParameters",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-monitoringconfiguration-properties": {
            "ConfigurationType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "CUSTOM",
                    "DEFAULT"
                ],
                "UpdateRequires": "No interruption"
            },
            "LogLevel": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "DEBUG",
                    "ERROR",
                    "INFO",
                    "WARN"
                ],
                "UpdateRequires": "No interruption"
            },
            "MetricsLevel": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "APPLICATION",
                    "OPERATOR",
                    "PARALLELISM",
                    "TASK"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-parallelismconfiguration-properties": {
            "AutoScalingEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "ConfigurationType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "CUSTOM",
                    "DEFAULT"
                ],
                "UpdateRequires": "No interruption"
            },
            "Parallelism": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            },
            "ParallelismPerKPU": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-propertygroup-properties": {
            "PropertyGroupId": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "50",
                "Pattern": "[a-zA-Z0-9_.-]+",
                "UpdateRequires": "No interruption"
            },
            "PropertyMap": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-recordcolumn-properties": {
            "Mapping": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SqlType": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-recordformat-properties": {
            "MappingParameters": {
                "Required": "No",
                "Type": "MappingParameters",
                "UpdateRequires": "No interruption"
            },
            "RecordFormatType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "CSV",
                    "JSON"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-s3contentlocation-properties": {
            "BucketARN": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            },
            "FileKey": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "UpdateRequires": "No interruption"
            },
            "ObjectVersion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-application-sqlapplicationconfiguration-properties": {
            "Inputs": {
                "Required": "No",
                "Type": "List of [Input",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-applicationcloudwatchloggingoption-cloudwatchloggingoption-properties": {
            "LogStreamARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-applicationoutput-destinationschema-properties": {
            "RecordFormatType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "CSV",
                    "JSON"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-applicationoutput-kinesisfirehoseoutput-properties": {
            "ResourceARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-applicationoutput-kinesisstreamsoutput-properties": {
            "ResourceARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-applicationoutput-lambdaoutput-properties": {
            "ResourceARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-applicationoutput-output-properties": {
            "DestinationSchema": {
                "Required": "Yes",
                "Type": "DestinationSchema",
                "UpdateRequires": "No interruption"
            },
            "KinesisFirehoseOutput": {
                "Required": "No",
                "Type": "KinesisFirehoseOutput",
                "UpdateRequires": "No interruption"
            },
            "KinesisStreamsOutput": {
                "Required": "No",
                "Type": "KinesisStreamsOutput",
                "UpdateRequires": "No interruption"
            },
            "LambdaOutput": {
                "Required": "No",
                "Type": "LambdaOutput",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "32",
                "UpdateRequires": "Replacement"
            }
        },
        "kinesisanalyticsv2-applicationreferencedatasource-csvmappingparameters-properties": {
            "RecordColumnDelimiter": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            },
            "RecordRowDelimiter": {}
        },
        "kinesisanalyticsv2-applicationreferencedatasource-jsonmappingparameters-properties": {
            "RecordRowPath": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-applicationreferencedatasource-mappingparameters-properties": {
            "CSVMappingParameters": {
                "Required": "No",
                "Type": "CSVMappingParameters",
                "UpdateRequires": "No interruption"
            },
            "JSONMappingParameters": {
                "Required": "No",
                "Type": "JSONMappingParameters",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-applicationreferencedatasource-recordcolumn-properties": {
            "Mapping": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SqlType": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-applicationreferencedatasource-recordformat-properties": {
            "MappingParameters": {
                "Required": "No",
                "Type": "MappingParameters",
                "UpdateRequires": "No interruption"
            },
            "RecordFormatType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "CSV",
                    "JSON"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-applicationreferencedatasource-referencedatasource-properties": {
            "ReferenceSchema": {
                "Required": "Yes",
                "Type": "ReferenceSchema",
                "UpdateRequires": "No interruption"
            },
            "S3ReferenceDataSource": {
                "Required": "No",
                "Type": "S3ReferenceDataSource",
                "UpdateRequires": "No interruption"
            },
            "TableName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "32",
                "UpdateRequires": "Replacement"
            }
        },
        "kinesisanalyticsv2-applicationreferencedatasource-referenceschema-properties": {
            "RecordColumns": {
                "Required": "Yes",
                "Type": "List of [RecordColumn",
                "Maximum": "1000",
                "UpdateRequires": "No interruption"
            },
            "RecordEncoding": {
                "Required": "No",
                "Type": "String",
                "Pattern": "UTF-8",
                "UpdateRequires": "No interruption"
            },
            "RecordFormat": {
                "Required": "Yes",
                "Type": "RecordFormat",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisanalyticsv2-applicationreferencedatasource-s3referencedatasource-properties": {
            "BucketARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            },
            "FileKey": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-bufferinghints-properties": {
            "IntervalInSeconds": {},
            "SizeInMBs": {}
        },
        "kinesisfirehose-deliverystream-cloudwatchloggingoptions-properties": {
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "LogGroupName": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "LogStreamName": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-copycommand-properties": {
            "CopyOptions": {},
            "DataTableColumns": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DataTableName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-dataformatconversionconfiguration-properties": {
            "Enabled": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "InputFormatConfiguration": {
                "Required": "Yes",
                "Type": "InputFormatConfiguration",
                "UpdateRequires": "No interruption"
            },
            "OutputFormatConfiguration": {
                "Required": "Yes",
                "Type": "OutputFormatConfiguration",
                "UpdateRequires": "No interruption"
            },
            "SchemaConfiguration": {
                "Required": "Yes",
                "Type": "SchemaConfiguration",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-deserializer-properties": {
            "HiveJsonSerDe": {
                "Required": "No",
                "Type": "HiveJsonSerDe",
                "UpdateRequires": "No interruption"
            },
            "OpenXJsonSerDe": {
                "Required": "No",
                "Type": "OpenXJsonSerDe",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-elasticsearchbufferinghints-properties": {
            "IntervalInSeconds": {},
            "SizeInMBs": {}
        },
        "kinesisfirehose-deliverystream-elasticsearchdestinationconfiguration-properties": {
            "BufferingHints": {
                "Required": "Yes",
                "Type": "ElasticsearchBufferingHints",
                "UpdateRequires": "No interruption"
            },
            "CloudWatchLoggingOptions": {
                "Required": "No",
                "Type": "CloudWatchLoggingOptions",
                "UpdateRequires": "No interruption"
            },
            "DomainARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "512",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            },
            "IndexName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "80",
                "UpdateRequires": "No interruption"
            },
            "IndexRotationPeriod": {},
            "ProcessingConfiguration": {
                "Required": "No",
                "Type": "ProcessingConfiguration",
                "UpdateRequires": "No interruption"
            },
            "RetryOptions": {
                "Required": "Yes",
                "Type": "ElasticsearchRetryOptions",
                "UpdateRequires": "No interruption"
            },
            "RoleARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "512",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            },
            "S3BackupMode": {},
            "S3Configuration": {
                "Required": "Yes",
                "Type": "S3DestinationConfiguration",
                "UpdateRequires": "No interruption"
            },
            "TypeName": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-elasticsearchretryoptions-properties": {
            "DurationInSeconds": {}
        },
        "kinesisfirehose-deliverystream-encryptionconfiguration-properties": {
            "KMSEncryptionConfig": {
                "Required": "No",
                "Type": "KMSEncryptionConfig",
                "UpdateRequires": "No interruption"
            },
            "NoEncryptionConfig": {}
        },
        "kinesisfirehose-deliverystream-extendeds3destinationconfiguration-properties": {
            "BucketARN": {},
            "BufferingHints": {
                "Required": "Yes",
                "Type": "BufferingHints",
                "UpdateRequires": "No interruption"
            },
            "CloudWatchLoggingOptions": {
                "Required": "No",
                "Type": "CloudWatchLoggingOptions",
                "UpdateRequires": "No interruption"
            },
            "CompressionFormat": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "GZIP",
                    "Snappy",
                    "UNCOMPRESSED",
                    "ZIP"
                ],
                "UpdateRequires": "No interruption"
            },
            "DataFormatConversionConfiguration": {
                "Required": "No",
                "Type": "DataFormatConversionConfiguration",
                "UpdateRequires": "No interruption"
            },
            "EncryptionConfiguration": {
                "Required": "No",
                "Type": "EncryptionConfiguration",
                "UpdateRequires": "No interruption"
            },
            "ErrorOutputPrefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Prefix": {},
            "ProcessingConfiguration": {
                "Required": "No",
                "Type": "ProcessingConfiguration",
                "UpdateRequires": "No interruption"
            },
            "RoleARN": {},
            "S3BackupConfiguration": {
                "Required": "No",
                "Type": "S3DestinationConfiguration",
                "UpdateRequires": "No interruption"
            },
            "S3BackupMode": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Disabled",
                    "Enabled"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-hivejsonserde-properties": {
            "TimestampFormats": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-inputformatconfiguration-properties": {
            "Deserializer": {
                "Required": "Yes",
                "Type": "Deserializer",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-kinesisstreamsourceconfiguration-properties": {
            "KinesisStreamARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "512",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            },
            "RoleARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "512",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-kmsencryptionconfig-properties": {
            "AWSKMSKeyARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "512",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-openxjsonserde-properties": {
            "CaseInsensitive": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "ColumnToJsonKeyMappings": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "ConvertDotsInJsonKeysToUnderscores": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-orcserde-properties": {
            "BlockSizeBytes": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "67108864",
                "UpdateRequires": "No interruption"
            },
            "BloomFilterColumns": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "BloomFilterFalsePositiveProbability": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "Compression": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "NONE",
                    "SNAPPY",
                    "ZLIB"
                ],
                "UpdateRequires": "No interruption"
            },
            "DictionaryKeyThreshold": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "EnablePadding": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "FormatVersion": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "V0_11",
                    "V0_12"
                ],
                "UpdateRequires": "No interruption"
            },
            "PaddingTolerance": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "RowIndexStride": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1000",
                "UpdateRequires": "No interruption"
            },
            "StripeSizeBytes": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "8388608",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-outputformatconfiguration-properties": {
            "Serializer": {
                "Required": "Yes",
                "Type": "Serializer",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-parquetserde-properties": {
            "BlockSizeBytes": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "67108864",
                "UpdateRequires": "No interruption"
            },
            "Compression": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "GZIP",
                    "SNAPPY",
                    "UNCOMPRESSED"
                ],
                "UpdateRequires": "No interruption"
            },
            "EnableDictionaryCompression": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "MaxPaddingBytes": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "0",
                "UpdateRequires": "No interruption"
            },
            "PageSizeBytes": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "65536",
                "UpdateRequires": "No interruption"
            },
            "WriterVersion": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "V1",
                    "V2"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-processingconfiguration-properties": {
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Processors": {
                "Required": "No",
                "Type": "List of [Processor",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-processor-properties": {
            "Parameters": {
                "Required": "Yes",
                "Type": "List of [ProcessorParameter",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "Lambda"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-processorparameter-properties": {
            "ParameterName": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "BufferIntervalInSeconds",
                    "BufferSizeInMBs",
                    "LambdaArn",
                    "NumberOfRetries",
                    "RoleArn"
                ],
                "UpdateRequires": "No interruption"
            },
            "ParameterValue": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "512",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-redshiftdestinationconfiguration-properties": {
            "CloudWatchLoggingOptions": {
                "Required": "No",
                "Type": "CloudWatchLoggingOptions",
                "UpdateRequires": "No interruption"
            },
            "ClusterJDBCURL": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Pattern": "jdbc:(redshift|postgresql)://((?!-)[A-Za-z0-9-]{1,63}(?<!-)\\.)+redshift\\.amazonaws\\.com:\\d{1,5}/[a-zA-Z0-9_$]+",
                "UpdateRequires": "No interruption"
            },
            "CopyCommand": {
                "Required": "Yes",
                "Type": "CopyCommand",
                "UpdateRequires": "No interruption"
            },
            "Password": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "6",
                "UpdateRequires": "No interruption"
            },
            "ProcessingConfiguration": {
                "Required": "No",
                "Type": "ProcessingConfiguration",
                "UpdateRequires": "No interruption"
            },
            "RoleARN": {},
            "S3Configuration": {
                "Required": "Yes",
                "Type": "S3DestinationConfiguration",
                "UpdateRequires": "No interruption"
            },
            "Username": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-s3destinationconfiguration-properties": {
            "BucketARN": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:.*",
                "UpdateRequires": "No interruption"
            },
            "BufferingHints": {
                "Required": "Yes",
                "Type": "BufferingHints",
                "UpdateRequires": "No interruption"
            },
            "CloudWatchLoggingOptions": {
                "Required": "No",
                "Type": "CloudWatchLoggingOptions",
                "UpdateRequires": "No interruption"
            },
            "CompressionFormat": {},
            "EncryptionConfiguration": {
                "Required": "No",
                "Type": "EncryptionConfiguration",
                "UpdateRequires": "No interruption"
            },
            "ErrorOutputPrefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Prefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RoleARN": {}
        },
        "kinesisfirehose-deliverystream-schemaconfiguration-properties": {
            "CatalogId": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^\\S+$",
                "UpdateRequires": "No interruption"
            },
            "DatabaseName": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^\\S+$",
                "UpdateRequires": "No interruption"
            },
            "Region": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^\\S+$",
                "UpdateRequires": "No interruption"
            },
            "RoleARN": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^\\S+$",
                "UpdateRequires": "No interruption"
            },
            "TableName": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^\\S+$",
                "UpdateRequires": "No interruption"
            },
            "VersionId": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^\\S+$",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-serializer-properties": {
            "OrcSerDe": {
                "Required": "No",
                "Type": "OrcSerDe",
                "UpdateRequires": "No interruption"
            },
            "ParquetSerDe": {
                "Required": "No",
                "Type": "ParquetSerDe",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-splunkdestinationconfiguration-properties": {
            "CloudWatchLoggingOptions": {
                "Required": "No",
                "Type": "CloudWatchLoggingOptions",
                "UpdateRequires": "No interruption"
            },
            "HECAcknowledgmentTimeoutInSeconds": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "180",
                "Maximum": "600",
                "UpdateRequires": "No interruption"
            },
            "HECEndpoint": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "HECEndpointType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "Event",
                    "Raw"
                ],
                "UpdateRequires": "No interruption"
            },
            "HECToken": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ProcessingConfiguration": {
                "Required": "No",
                "Type": "ProcessingConfiguration",
                "UpdateRequires": "No interruption"
            },
            "RetryOptions": {
                "Required": "No",
                "Type": "SplunkRetryOptions",
                "UpdateRequires": "No interruption"
            },
            "S3BackupMode": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "AllEvents",
                    "FailedEventsOnly"
                ],
                "UpdateRequires": "No interruption"
            },
            "S3Configuration": {
                "Required": "Yes",
                "Type": "S3DestinationConfiguration",
                "UpdateRequires": "No interruption"
            }
        },
        "kinesisfirehose-deliverystream-splunkretryoptions-properties": {
            "DurationInSeconds": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "0",
                "Maximum": "7200",
                "UpdateRequires": "No interruption"
            }
        },
        "lakeformation-datalakesettings-datalakeprincipal-properties": {
            "DataLakePrincipalIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "lakeformation-permissions-databaseresource-properties": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "lakeformation-permissions-datalakeprincipal-properties": {
            "DataLakePrincipalIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "lakeformation-permissions-resource-properties": {
            "DatabaseResource": {
                "Required": "No",
                "Type": "DatabaseResource",
                "UpdateRequires": "No interruption"
            },
            "TableResource": {
                "Required": "No",
                "Type": "TableResource",
                "UpdateRequires": "No interruption"
            }
        },
        "lakeformation-permissions-tableresource-properties": {
            "DatabaseName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "lambda-alias-aliasroutingconfiguration-properties": {
            "AdditionalVersionWeights": {
                "Required": "Yes",
                "Type": "List of [VersionWeight",
                "UpdateRequires": "No interruption"
            }
        },
        "lambda-alias-versionweight-properties": {
            "FunctionVersion": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "FunctionWeight": {
                "Required": "Yes",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            }
        },
        "lambda-function-code-properties": {
            "S3Bucket": {
                "Required": "Conditional",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "63",
                "Pattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
                "UpdateRequires": "No interruption"
            },
            "S3Key": {
                "Required": "Conditional",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "UpdateRequires": "No interruption"
            },
            "S3ObjectVersion": {
                "Required": "Conditional",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "UpdateRequires": "No interruption"
            },
            "ZipFile": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "lambda-function-deadletterconfig-properties": {
            "TargetArn": {
                "Required": "No",
                "Type": "String",
                "Pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()",
                "UpdateRequires": "No interruption"
            }
        },
        "lambda-function-environment-properties": {
            "Variables": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            }
        },
        "lambda-function-tracingconfig-properties": {
            "Mode": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Active",
                    "PassThrough"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "lambda-function-vpcconfig-properties": {
            "SecurityGroupIds": {
                "Required": "Yes",
                "Type": "List of String",
                "Maximum": "5",
                "UpdateRequires": "No interruption"
            },
            "SubnetIds": {
                "Required": "Yes",
                "Type": "List of String",
                "Maximum": "16",
                "UpdateRequires": "No interruption"
            }
        },
        "lambda-layerversion-content-properties": {
            "S3Bucket": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "63",
                "Pattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
                "UpdateRequires": "Replacement"
            },
            "S3Key": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "UpdateRequires": "Replacement"
            },
            "S3ObjectVersion": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "UpdateRequires": "Replacement"
            }
        },
        "logs-metricfilter-metrictransformation-properties": {
            "DefaultValue": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "MetricName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MetricNamespace": {
                "Required": "Yes",
                "Type": "String",
                "Maximum": "255",
                "Pattern": "[^:*$]*",
                "UpdateRequires": "No interruption"
            },
            "MetricValue": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "managedblockchain-member-approvalthresholdpolicy-properties": {
            "ProposalDurationInHours": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "168",
                "UpdateRequires": "No interruption"
            },
            "ThresholdComparator": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "GREATER_THAN",
                    "GREATER_THAN_OR_EQUAL_TO"
                ],
                "UpdateRequires": "No interruption"
            },
            "ThresholdPercentage": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "0",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            }
        },
        "managedblockchain-member-memberconfiguration-properties": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "MemberFrameworkConfiguration": {
                "Required": "No",
                "Type": "MemberFrameworkConfiguration",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "64",
                "Pattern": "^(?!-)^[^0-9](?!.*--)[A-Za-z0-9-]+[^- ]$",
                "UpdateRequires": "No interruption"
            }
        },
        "managedblockchain-member-memberfabricconfiguration-properties": {
            "AdminPassword": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "8",
                "Maximum": "32",
                "Pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?!.*[@'\\\\\"/])[a-zA-Z0-9\\S]*$",
                "UpdateRequires": "No interruption"
            },
            "AdminUsername": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "16",
                "Pattern": "^[a-zA-Z][a-zA-Z0-9]*$",
                "UpdateRequires": "No interruption"
            }
        },
        "managedblockchain-member-memberframeworkconfiguration-properties": {
            "MemberFabricConfiguration": {
                "Required": "No",
                "Type": "MemberFabricConfiguration",
                "UpdateRequires": "No interruption"
            }
        },
        "managedblockchain-member-networkconfiguration-properties": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "Framework": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "HYPERLEDGER_FABRIC"
                ],
                "UpdateRequires": "No interruption"
            },
            "FrameworkVersion": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "8",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "64",
                "Pattern": ".*\\S.*",
                "UpdateRequires": "No interruption"
            },
            "NetworkFrameworkConfiguration": {
                "Required": "No",
                "Type": "NetworkFrameworkConfiguration",
                "UpdateRequires": "No interruption"
            },
            "VotingPolicy": {
                "Required": "Yes",
                "Type": "VotingPolicy",
                "UpdateRequires": "No interruption"
            }
        },
        "managedblockchain-member-networkfabricconfiguration-properties": {
            "Edition": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "STANDARD",
                    "STARTER"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "managedblockchain-member-networkframeworkconfiguration-properties": {
            "NetworkFabricConfiguration": {
                "Required": "No",
                "Type": "NetworkFabricConfiguration",
                "UpdateRequires": "No interruption"
            }
        },
        "managedblockchain-member-votingpolicy-properties": {
            "ApprovalThresholdPolicy": {
                "Required": "No",
                "Type": "ApprovalThresholdPolicy",
                "UpdateRequires": "No interruption"
            }
        },
        "managedblockchain-node-nodeconfiguration-properties": {
            "AvailabilityZone": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "InstanceType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-audiolanguageselection-properties": {
            "LanguageCode": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "LanguageSelectionPolicy": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-audiopidselection-properties": {
            "Pid": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-audioselector-properties": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SelectorSettings": {
                "Required": "No",
                "Type": "AudioSelectorSettings",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-audioselectorsettings-properties": {
            "AudioLanguageSelection": {
                "Required": "No",
                "Type": "AudioLanguageSelection",
                "UpdateRequires": "No interruption"
            },
            "AudioPidSelection": {
                "Required": "No",
                "Type": "AudioPidSelection",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-captionselector-properties": {
            "LanguageCode": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SelectorSettings": {
                "Required": "No",
                "Type": "CaptionSelectorSettings",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-captionselectorsettings-properties": {
            "AribSourceSettings": {
                "Required": "No",
                "Type": "AribSourceSettings",
                "UpdateRequires": "No interruption"
            },
            "DvbSubSourceSettings": {
                "Required": "No",
                "Type": "DvbSubSourceSettings",
                "UpdateRequires": "No interruption"
            },
            "EmbeddedSourceSettings": {
                "Required": "No",
                "Type": "EmbeddedSourceSettings",
                "UpdateRequires": "No interruption"
            },
            "Scte20SourceSettings": {
                "Required": "No",
                "Type": "Scte20SourceSettings",
                "UpdateRequires": "No interruption"
            },
            "Scte27SourceSettings": {
                "Required": "No",
                "Type": "Scte27SourceSettings",
                "UpdateRequires": "No interruption"
            },
            "TeletextSourceSettings": {
                "Required": "No",
                "Type": "TeletextSourceSettings",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-dvbsubsourcesettings-properties": {
            "Pid": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-embeddedsourcesettings-properties": {
            "Convert608To708": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Scte20Detection": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Source608ChannelNumber": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Source608TrackNumber": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-hlsinputsettings-properties": {
            "Bandwidth": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "BufferSegments": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Retries": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "RetryInterval": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-inputattachment-properties": {
            "InputAttachmentName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "InputId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "InputSettings": {
                "Required": "No",
                "Type": "InputSettings",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-inputsettings-properties": {
            "AudioSelectors": {
                "Required": "No",
                "Type": "List of [AudioSelector",
                "UpdateRequires": "No interruption"
            },
            "CaptionSelectors": {
                "Required": "No",
                "Type": "List of [CaptionSelector",
                "UpdateRequires": "No interruption"
            },
            "DeblockFilter": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DenoiseFilter": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "FilterStrength": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "InputFilter": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "NetworkInputSettings": {
                "Required": "No",
                "Type": "NetworkInputSettings",
                "UpdateRequires": "No interruption"
            },
            "SourceEndBehavior": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "VideoSelector": {
                "Required": "No",
                "Type": "VideoSelector",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-inputspecification-properties": {
            "Codec": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MaximumBitrate": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Resolution": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-mediapackageoutputdestinationsettings-properties": {
            "ChannelId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-networkinputsettings-properties": {
            "HlsInputSettings": {
                "Required": "No",
                "Type": "HlsInputSettings",
                "UpdateRequires": "No interruption"
            },
            "ServerValidation": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-outputdestination-properties": {
            "Id": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MediaPackageSettings": {
                "Required": "No",
                "Type": "List of [MediaPackageOutputDestinationSettings",
                "UpdateRequires": "No interruption"
            },
            "Settings": {
                "Required": "No",
                "Type": "List of [OutputDestinationSettings",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-outputdestinationsettings-properties": {
            "PasswordParam": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "StreamName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Url": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Username": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-scte20sourcesettings-properties": {
            "Convert608To708": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Source608ChannelNumber": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-scte27sourcesettings-properties": {
            "Pid": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-teletextsourcesettings-properties": {
            "PageNumber": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-videoselector-properties": {
            "ColorSpace": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ColorSpaceUsage": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SelectorSettings": {
                "Required": "No",
                "Type": "VideoSelectorSettings",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-videoselectorpid-properties": {
            "Pid": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-videoselectorprogramid-properties": {
            "ProgramId": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-channel-videoselectorsettings-properties": {
            "VideoSelectorPid": {
                "Required": "No",
                "Type": "VideoSelectorPid",
                "UpdateRequires": "No interruption"
            },
            "VideoSelectorProgramId": {
                "Required": "No",
                "Type": "VideoSelectorProgramId",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-input-inputdestinationrequest-properties": {
            "StreamName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-input-inputsourcerequest-properties": {
            "PasswordParam": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Url": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Username": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-input-inputvpcrequest-properties": {
            "SecurityGroupIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "SubnetIds": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-input-mediaconnectflowrequest-properties": {
            "FlowArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "medialive-inputsecuritygroup-inputwhitelistrulecidr-properties": {
            "Cidr": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "mediastore-container-corsrule-properties": {
            "AllowedHeaders": {},
            "AllowedMethods": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "4",
                "UpdateRequires": "Replacement"
            },
            "AllowedOrigins": {},
            "ExposeHeaders": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            },
            "MaxAgeSeconds": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "0",
                "Maximum": "2147483647",
                "UpdateRequires": "No interruption"
            }
        },
        "msk-cluster-brokernodegroupinfo-properties": {
            "BrokerAZDistribution": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "ClientSubnets": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "InstanceType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "SecurityGroups": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            },
            "StorageInfo": {
                "Required": "No",
                "Type": "StorageInfo",
                "UpdateRequires": "Replacement"
            }
        },
        "msk-cluster-clientauthentication-properties": {
            "Tls": {
                "Required": "No",
                "Type": "Tls",
                "UpdateRequires": "Replacement"
            }
        },
        "msk-cluster-configurationinfo-properties": {
            "Arn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Revision": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            }
        },
        "msk-cluster-ebsstorageinfo-properties": {
            "VolumeSize": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Replacement"
            }
        },
        "msk-cluster-encryptionatrest-properties": {
            "DataVolumeKMSKeyId": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "msk-cluster-encryptioninfo-properties": {
            "EncryptionAtRest": {
                "Required": "No",
                "Type": "EncryptionAtRest",
                "UpdateRequires": "Replacement"
            },
            "EncryptionInTransit": {
                "Required": "No",
                "Type": "EncryptionInTransit",
                "UpdateRequires": "Replacement"
            }
        },
        "msk-cluster-encryptionintransit-properties": {
            "ClientBroker": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "InCluster": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            }
        },
        "msk-cluster-storageinfo-properties": {
            "EBSStorageInfo": {
                "Required": "No",
                "Type": "EBSStorageInfo",
                "UpdateRequires": "Replacement"
            }
        },
        "msk-cluster-tls-properties": {
            "CertificateAuthorityArnList": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "Replacement"
            }
        },
        "opsworks-app-datasource-properties": {
            "Arn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DatabaseName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "opsworks-app-environment-properties": {
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Secure": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "opsworks-app-sslconfiguration-properties": {
            "Certificate": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Chain": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PrivateKey": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "opsworks-instance-blockdevicemapping-properties": {
            "DeviceName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Ebs": {
                "Required": "Conditional",
                "Type": "EbsBlockDevice",
                "UpdateRequires": "No interruption"
            },
            "NoDevice": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "VirtualName": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "opsworks-instance-ebsblockdevice-properties": {
            "DeleteOnTermination": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Iops": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "SnapshotId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "VolumeSize": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "VolumeType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "gp2",
                    "io1",
                    "standard"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "opsworks-instance-timebasedautoscaling-properties": {
            "Friday": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "Monday": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "Saturday": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "Sunday": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "Thursday": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "Tuesday": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "Wednesday": {
                "Required": "No",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            }
        },
        "opsworks-layer-lifecycleeventconfiguration-shutdowneventconfiguration-properties": {
            "DelayUntilElbConnectionsDrained": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "ExecutionTimeout": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "opsworks-layer-lifecycleeventconfiguration-properties": {
            "ShutdownEventConfiguration": {
                "Required": "No",
                "Type": "ShutdownEventConfiguration",
                "UpdateRequires": "No interruption"
            }
        },
        "opsworks-layer-loadbasedautoscaling-autoscalingthresholds-properties": {
            "CpuThreshold": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "IgnoreMetricsTime": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            },
            "InstanceCount": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "LoadThreshold": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "MemoryThreshold": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "ThresholdsWaitTime": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            }
        },
        "opsworks-layer-loadbasedautoscaling-properties": {
            "DownScaling": {
                "Required": "No",
                "Type": "AutoScalingThresholds",
                "UpdateRequires": "No interruption"
            },
            "Enable": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "UpScaling": {
                "Required": "No",
                "Type": "AutoScalingThresholds",
                "UpdateRequires": "No interruption"
            }
        },
        "opsworks-layer-recipes-properties": {
            "Configure": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Deploy": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Setup": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Shutdown": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Undeploy": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "opsworks-layer-volumeconfiguration-properties": {
            "Encrypted": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Iops": {
                "Required": "Conditional",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "MountPoint": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "NumberOfDisks": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "RaidLevel": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Size": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "VolumeType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "opsworks-stack-chefconfiguration-properties": {
            "BerkshelfVersion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ManageBerkshelf": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "opsworks-stack-elasticip-properties": {
            "Ip": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "opsworks-stack-rdsdbinstance-properties": {
            "DbPassword": {},
            "DbUser": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RdsDbInstanceArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "opsworks-stack-source-1-properties": {
            "Password": {},
            "Revision": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SshKey": {},
            "Type": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "archive",
                    "git",
                    "s3",
                    "svn"
                ],
                "UpdateRequires": "No interruption"
            },
            "Url": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Username": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "opsworks-stack-source-properties": {
            "Password": {},
            "Revision": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SshKey": {},
            "Type": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "archive",
                    "git",
                    "s3",
                    "svn"
                ],
                "UpdateRequires": "No interruption"
            },
            "Url": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Username": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "opsworks-stack-stackconfigmanager-properties": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Version": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "opsworkscm-server-engineattribute-properties": {
            "Name": {},
            "Value": {}
        },
        "pinpoint-applicationsettings-campaignhook-properties": {
            "LambdaFunctionName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Mode": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "WebUrl": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-applicationsettings-limits-properties": {
            "Daily": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "MaximumDuration": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "MessagesPerSecond": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Total": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-applicationsettings-quiettime-properties": {
            "End": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Start": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-campaign-attributedimension-properties": {
            "AttributeType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Values": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-campaign-campaignemailmessage-properties": {
            "Body": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "FromAddress": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "HtmlBody": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Title": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-campaign-campaigneventfilter-properties": {
            "Dimensions": {
                "Required": "No",
                "Type": "EventDimensions",
                "UpdateRequires": "No interruption"
            },
            "FilterType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-campaign-campaignhook-properties": {
            "LambdaFunctionName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Mode": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "WebUrl": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-campaign-campaignsmsmessage-properties": {
            "Body": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MessageType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SenderId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-campaign-eventdimensions-properties": {
            "Attributes": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "EventType": {
                "Required": "No",
                "Type": "SetDimension",
                "UpdateRequires": "No interruption"
            },
            "Metrics": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-campaign-limits-properties": {
            "Daily": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "MaximumDuration": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "MessagesPerSecond": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Total": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-campaign-message-properties": {
            "Action": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Body": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ImageIconUrl": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ImageSmallIconUrl": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ImageUrl": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "JsonBody": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MediaUrl": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RawContent": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SilentPush": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "TimeToLive": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Title": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Url": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-campaign-messageconfiguration-properties": {
            "ADMMessage": {
                "Required": "No",
                "Type": "Message",
                "UpdateRequires": "No interruption"
            },
            "APNSMessage": {
                "Required": "No",
                "Type": "Message",
                "UpdateRequires": "No interruption"
            },
            "BaiduMessage": {
                "Required": "No",
                "Type": "Message",
                "UpdateRequires": "No interruption"
            },
            "DefaultMessage": {
                "Required": "No",
                "Type": "Message",
                "UpdateRequires": "No interruption"
            },
            "EmailMessage": {
                "Required": "No",
                "Type": "CampaignEmailMessage",
                "UpdateRequires": "No interruption"
            },
            "GCMMessage": {
                "Required": "No",
                "Type": "Message",
                "UpdateRequires": "No interruption"
            },
            "SMSMessage": {
                "Required": "No",
                "Type": "CampaignSmsMessage",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-campaign-metricdimension-properties": {
            "ComparisonOperator": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-campaign-schedule-quiettime-properties": {
            "End": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Start": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-campaign-schedule-properties": {
            "EndTime": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "EventFilter": {
                "Required": "No",
                "Type": "CampaignEventFilter",
                "UpdateRequires": "No interruption"
            },
            "Frequency": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "IsLocalTime": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "QuietTime": {
                "Required": "No",
                "Type": "QuietTime",
                "UpdateRequires": "No interruption"
            },
            "StartTime": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TimeZone": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-campaign-setdimension-properties": {
            "DimensionType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Values": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-campaign-writetreatmentresource-properties": {
            "MessageConfiguration": {
                "Required": "No",
                "Type": "MessageConfiguration",
                "UpdateRequires": "No interruption"
            },
            "Schedule": {
                "Required": "No",
                "Type": "Schedule",
                "UpdateRequires": "No interruption"
            },
            "SizePercent": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "TreatmentDescription": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TreatmentName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-segment-attributedimension-properties": {
            "AttributeType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Values": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-segment-segmentdimensions-behavior-recency-properties": {
            "Duration": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RecencyType": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-segment-segmentdimensions-behavior-properties": {
            "Recency": {
                "Required": "No",
                "Type": "Recency",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-segment-segmentdimensions-demographic-properties": {
            "AppVersion": {
                "Required": "No",
                "Type": "SetDimension",
                "UpdateRequires": "No interruption"
            },
            "Channel": {
                "Required": "No",
                "Type": "SetDimension",
                "UpdateRequires": "No interruption"
            },
            "DeviceType": {
                "Required": "No",
                "Type": "SetDimension",
                "UpdateRequires": "No interruption"
            },
            "Make": {
                "Required": "No",
                "Type": "SetDimension",
                "UpdateRequires": "No interruption"
            },
            "Model": {
                "Required": "No",
                "Type": "SetDimension",
                "UpdateRequires": "No interruption"
            },
            "Platform": {
                "Required": "No",
                "Type": "SetDimension",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-segment-segmentdimensions-location-gpspoint-coordinates-properties": {
            "Latitude": {
                "Required": "Yes",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "Longitude": {
                "Required": "Yes",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-segment-segmentdimensions-location-gpspoint-properties": {
            "Coordinates": {
                "Required": "Yes",
                "Type": "Coordinates",
                "UpdateRequires": "No interruption"
            },
            "RangeInKilometers": {
                "Required": "Yes",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-segment-segmentdimensions-location-properties": {
            "Country": {
                "Required": "No",
                "Type": "SetDimension",
                "UpdateRequires": "No interruption"
            },
            "GPSPoint": {
                "Required": "No",
                "Type": "GPSPoint",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-segment-segmentdimensions-properties": {
            "Attributes": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "Behavior": {
                "Required": "No",
                "Type": "Behavior",
                "UpdateRequires": "No interruption"
            },
            "Demographic": {
                "Required": "No",
                "Type": "Demographic",
                "UpdateRequires": "No interruption"
            },
            "Location": {
                "Required": "No",
                "Type": "Location",
                "UpdateRequires": "No interruption"
            },
            "Metrics": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "UserAttributes": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-segment-segmentgroups-groups-sourcesegments-properties": {
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Version": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-segment-segmentgroups-groups-properties": {
            "Dimensions": {
                "Required": "No",
                "Type": "List of [SegmentDimensions",
                "UpdateRequires": "No interruption"
            },
            "SourceSegments": {},
            "SourceType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-segment-segmentgroups-properties": {
            "Groups": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            },
            "Include": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpoint-segment-setdimension-properties": {
            "DimensionType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Values": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpointemail-configurationset-deliveryoptions-properties": {
            "SendingPoolName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpointemail-configurationset-reputationoptions-properties": {
            "ReputationMetricsEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpointemail-configurationset-sendingoptions-properties": {
            "SendingEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpointemail-configurationset-tags-properties": {
            "Key": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpointemail-configurationset-trackingoptions-properties": {
            "CustomRedirectDomain": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpointemail-configurationseteventdestination-cloudwatchdestination-properties": {
            "DimensionConfigurations": {
                "Required": "No",
                "Type": "List of [DimensionConfiguration",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpointemail-configurationseteventdestination-dimensionconfiguration-properties": {
            "DefaultDimensionValue": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DimensionName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DimensionValueSource": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpointemail-configurationseteventdestination-eventdestination-properties": {
            "CloudWatchDestination": {
                "Required": "No",
                "Type": "CloudWatchDestination",
                "UpdateRequires": "No interruption"
            },
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "KinesisFirehoseDestination": {
                "Required": "No",
                "Type": "KinesisFirehoseDestination",
                "UpdateRequires": "No interruption"
            },
            "MatchingEventTypes": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "PinpointDestination": {
                "Required": "No",
                "Type": "PinpointDestination",
                "UpdateRequires": "No interruption"
            },
            "SnsDestination": {
                "Required": "No",
                "Type": "SnsDestination",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpointemail-configurationseteventdestination-kinesisfirehosedestination-properties": {
            "DeliveryStreamArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "IamRoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpointemail-configurationseteventdestination-pinpointdestination-properties": {
            "ApplicationArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpointemail-configurationseteventdestination-snsdestination-properties": {
            "TopicArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpointemail-dedicatedippool-tags-properties": {
            "Key": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpointemail-identity-mailfromattributes-properties": {
            "BehaviorOnMxFailure": {},
            "MailFromDomain": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "pinpointemail-identity-tags-properties": {
            "Key": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "rds-database-instance-properties": {
            "AllocatedStorage": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "AllowMajorVersionUpgrade": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "AssociatedRoles": {
                "Required": "No",
                "Type": "List of [DBInstanceRole",
                "UpdateRequires": "No interruption"
            },
            "AutoMinorVersionUpgrade": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Some interruptions"
            },
            "AvailabilityZone": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "BackupRetentionPeriod": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Some interruptions"
            },
            "CharacterSetName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "CopyTagsToSnapshot": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "DBClusterIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "DBInstanceClass": {},
            "DBInstanceIdentifier": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "DBName": {},
            "DBParameterGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Some interruptions"
            },
            "DBSecurityGroups": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "DBSnapshotIdentifier": {},
            "DBSubnetGroupName": {},
            "DeleteAutomatedBackups": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "DeletionProtection": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Domain": {},
            "DomainIAMRoleName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "EnableCloudwatchLogsExports": {},
            "EnableIAMDatabaseAuthentication": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "EnablePerformanceInsights": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Engine": {},
            "EngineVersion": {},
            "Iops": {},
            "KmsKeyId": {},
            "LicenseModel": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MasterUsername": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "MasterUserPassword": {},
            "MonitoringInterval": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "Some interruptions"
            },
            "MonitoringRoleArn": {},
            "MultiAZ": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "OptionGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "PerformanceInsightsKMSKeyId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Some interruptions"
            },
            "PerformanceInsightsRetentionPeriod": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Port": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "PreferredBackupWindow": {},
            "PreferredMaintenanceWindow": {},
            "ProcessorFeatures": {
                "Required": "No",
                "Type": "List of [ProcessorFeature",
                "UpdateRequires": "No interruption"
            },
            "PromotionTier": {},
            "PubliclyAccessible": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "SourceDBInstanceIdentifier": {},
            "SourceRegion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "StorageEncrypted": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "StorageType": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Some interruptions"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            },
            "Timezone": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "UseDefaultProcessorFeatures": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "VPCSecurityGroups": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "rds-dbcluster-dbclusterrole-properties": {
            "FeatureName": {},
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Status": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "rds-dbcluster-scalingconfiguration-properties": {
            "AutoPause": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "MaxCapacity": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "MinCapacity": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "SecondsUntilAutoPause": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "rds-dbinstance-dbinstancerole-properties": {
            "FeatureName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RoleArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Status": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "rds-dbinstance-processorfeature-properties": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "rds-dbparametergroup-properties": {
            "Description": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Family": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Parameters": {},
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            }
        },
        "rds-optiongroup-optionconfigurations-optionsettings-properties": {
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "rds-optiongroup-optionconfigurations-properties": {
            "DBSecurityGroupMemberships": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "OptionName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "OptionSettings": {
                "Required": "No",
                "Type": "List of [OptionSetting",
                "UpdateRequires": "No interruption"
            },
            "OptionVersion": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Port": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "VpcSecurityGroupMemberships": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "rds-security-group-rule-properties": {
            "CIDRIP": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "EC2SecurityGroupId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "EC2SecurityGroupName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "EC2SecurityGroupOwnerId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "rds-security-group-properties": {
            "DBSecurityGroupIngress": {
                "Required": "Yes",
                "Type": "List of [Ingress",
                "UpdateRequires": "No interruption"
            },
            "EC2VpcId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "GroupDescription": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            }
        },
        "redshift-cluster-loggingproperties": {
            "BucketName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "S3KeyPrefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "redshift-cluster-loggingproperties-properties": {
            "BucketName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "S3KeyPrefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "w4429ab1c21c10d204c13c17": {
            "Key": {
                "Required": "Yes",
                "Type": "String"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String\n\n#"
            }
        },
        "robomaker-robotapplication-robotsoftwaresuite-properties": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ROS"
                ],
                "UpdateRequires": "No interruption"
            },
            "Version": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "Kinetic"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "robomaker-robotapplication-sourceconfig-properties": {
            "Architecture": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ARM64",
                    "ARMHF",
                    "X86_64"
                ],
                "UpdateRequires": "No interruption"
            },
            "S3Bucket": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "63",
                "Pattern": "[a-z0-9][a-z0-9\\-]*[a-z0-9]",
                "UpdateRequires": "No interruption"
            },
            "S3Key": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "Pattern": ".*",
                "UpdateRequires": "No interruption"
            }
        },
        "robomaker-simulationapplication-renderingengine-properties": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "OGRE"
                ],
                "UpdateRequires": "No interruption"
            },
            "Version": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "1.x",
                "UpdateRequires": "No interruption"
            }
        },
        "robomaker-simulationapplication-robotsoftwaresuite-properties": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ROS"
                ],
                "UpdateRequires": "No interruption"
            },
            "Version": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "Kinetic"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "robomaker-simulationapplication-simulationsoftwaresuite-properties": {
            "Name": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "Gazebo"
                ],
                "UpdateRequires": "No interruption"
            },
            "Version": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "7|9",
                "UpdateRequires": "No interruption"
            }
        },
        "robomaker-simulationapplication-sourceconfig-properties": {
            "Architecture": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ARM64",
                    "ARMHF",
                    "X86_64"
                ],
                "UpdateRequires": "No interruption"
            },
            "S3Bucket": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "63",
                "Pattern": "[a-z0-9][a-z0-9\\-]*[a-z0-9]",
                "UpdateRequires": "No interruption"
            },
            "S3Key": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "Pattern": ".*",
                "UpdateRequires": "No interruption"
            }
        },
        "route53-aliastarget-1-properties": {
            "DNSName": {
                "DNSName`  <a name=\"cfn-route53-aliastarget-dnshostname\"></a>\n *Alias resource record sets only:* The value that you specify depends on where you want to route queries:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the applicable domain name for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalDomainName`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionDomainName`\\. This is the name of the associated CloudFront distribution, such as `da1b2c3d4e5.cloudfront.net`\\.\nThe name of the record that you're creating must match a custom domain name for your API, such as `api.example.com`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nEnter the API endpoint for the interface endpoint, such as `vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com`\\. For edge\\-optimized APIs, this is the domain name for the corresponding CloudFront distribution\\. You can get the value of `DnsName` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify the domain name that CloudFront assigned when you created your distribution\\.  \nYour CloudFront distribution must include an alternate domain name that matches the name of the resource record set\\. For example, if the name of the resource record set is *acme\\.example\\.com*, your CloudFront distribution must include *acme\\.example\\.com* as one of the alternate domain names\\. For more information, see [Using Alternate Domain Names \\(CNAMEs\\)](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html) in the *Amazon CloudFront Developer Guide*\\.  \nYou can't create a resource record set in a private hosted zone to route traffic to a CloudFront distribution\\.  \nFor failover alias records, you can't specify a CloudFront distribution for both the primary and secondary records\\. A distribution must include an alternate domain name that matches the name of the record\\. However, the primary and secondary records have the same name, and you can't include the same alternate domain name in more than one distribution\\.   \nElastic Beanstalk environment  \nIf the domain name for your Elastic Beanstalk environment includes the region that you deployed the environment in, you can create an alias record that routes traffic to the environment\\. For example, the domain name `my-environment.us-west-2.elasticbeanstalk.com` is a regionalized domain name\\.   \nFor environments that were created before early 2016, the domain name doesn't include the region\\. To route traffic to these environments, you must create a CNAME record instead of an alias record\\. Note that you can't create a CNAME record for the root domain name\\. For example, if your domain name is example\\.com, you can create a record that routes traffic for acme\\.example\\.com to your Elastic Beanstalk environment, but you can't create a record that routes traffic for example\\.com to your Elastic Beanstalk environment\\.\nFor Elastic Beanstalk environments that have regionalized subdomains, specify the `CNAME` attribute for the environment\\. You can use the following methods to get the value of the CNAME attribute:  \n+  *AWS Management Console": "For information about how to get the value by using the console, see [Using Custom Domains with AWS Elastic Beanstalk](http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customdomains.html) in the *AWS Elastic Beanstalk Developer Guide*\\.\n+  *Elastic Beanstalk API",
                "Required": "Yes",
                "Type": "String",
                "Maximum": "1024",
                "UpdateRequires": "No interruption"
            },
            "EvaluateTargetHealth": {
                "EvaluateTargetHealth`  <a name=\"cfn-route53-aliastarget-evaluatetargethealth\"></a>\n *Applies only to alias, failover alias, geolocation alias, latency alias, and weighted alias resource record sets:* When `EvaluateTargetHealth` is `true`, an alias resource record set inherits the health of the referenced AWS resource, such as an ELB load balancer or another resource record set in the hosted zone\\.  \nNote the following:    \nCloudFront distributions  \nYou can't set `EvaluateTargetHealth` to `true` when the alias target is a CloudFront distribution\\.  \nElastic Beanstalk environments that have regionalized subdomains  \nIf you specify an Elastic Beanstalk environment in `DNSName` and the environment contains an ELB load balancer, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. \\(An environment automatically contains an ELB load balancer if it includes more than one Amazon EC2 instance\\.\\) If you set `EvaluateTargetHealth` to `true` and either no Amazon EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other available resources that are healthy, if any\\.   \nIf the environment contains a single Amazon EC2 instance, there are no special requirements\\.  \nELB load balancers  \nHealth checking behavior depends on the type of load balancer:  \n+  **Classic Load Balancers*": "If you specify an ELB Classic Load Balancer in `DNSName`, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. If you set `EvaluateTargetHealth` to `true` and either no EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other resources\\.\n+  **Application and Network Load Balancers*",
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "HostedZoneId": {
                "HostedZoneId`  <a name=\"cfn-route53-aliastarget-hostedzoneid\"></a>\n *Alias resource records sets only": "The value used depends on where you want to route traffic:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the hosted zone ID for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalHostedZoneId`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionHostedZoneId`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nSpecify the hosted zone ID for your interface endpoint\\. You can get the value of `HostedZoneId` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify `Z2FDTNDATAQYW2`\\.  \nAlias resource record sets for CloudFront can't be created in a private zone\\.  \nElastic Beanstalk environment  \nSpecify the hosted zone ID for the region that you created the environment in\\. The environment must have a regionalized subdomain\\. For a list of regions and the corresponding hosted zone IDs, see [AWS Elastic Beanstalk](http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region) in the \"AWS Regions and Endpoints\" chapter of the *Amazon Web Services General Reference*\\.  \nELB load balancer  \nSpecify the value of the hosted zone ID for the load balancer\\. Use the following methods to get the hosted zone ID:  \n+  [Elastic Load Balancing](https://docs.aws.amazon.com/general/latest/gr/rande.html#elb_region) table in the \"AWS Regions and Endpoints\" chapter of the *Amazon Web Services General Reference",
                "Required": "Yes",
                "Type": "String",
                "Maximum": "32",
                "UpdateRequires": "No interruption"
            }
        },
        "route53-aliastarget-properties": {
            "DNSName": {
                "DNSName`  <a name=\"cfn-route53-aliastarget-dnshostname\"></a>\n *Alias resource record sets only:* The value that you specify depends on where you want to route queries:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the applicable domain name for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalDomainName`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionDomainName`\\. This is the name of the associated CloudFront distribution, such as `da1b2c3d4e5.cloudfront.net`\\.\nThe name of the record that you're creating must match a custom domain name for your API, such as `api.example.com`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nEnter the API endpoint for the interface endpoint, such as `vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com`\\. For edge\\-optimized APIs, this is the domain name for the corresponding CloudFront distribution\\. You can get the value of `DnsName` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify the domain name that CloudFront assigned when you created your distribution\\.  \nYour CloudFront distribution must include an alternate domain name that matches the name of the resource record set\\. For example, if the name of the resource record set is *acme\\.example\\.com*, your CloudFront distribution must include *acme\\.example\\.com* as one of the alternate domain names\\. For more information, see [Using Alternate Domain Names \\(CNAMEs\\)](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html) in the *Amazon CloudFront Developer Guide*\\.  \nYou can't create a resource record set in a private hosted zone to route traffic to a CloudFront distribution\\.  \nFor failover alias records, you can't specify a CloudFront distribution for both the primary and secondary records\\. A distribution must include an alternate domain name that matches the name of the record\\. However, the primary and secondary records have the same name, and you can't include the same alternate domain name in more than one distribution\\.   \nElastic Beanstalk environment  \nIf the domain name for your Elastic Beanstalk environment includes the region that you deployed the environment in, you can create an alias record that routes traffic to the environment\\. For example, the domain name `my-environment.us-west-2.elasticbeanstalk.com` is a regionalized domain name\\.   \nFor environments that were created before early 2016, the domain name doesn't include the region\\. To route traffic to these environments, you must create a CNAME record instead of an alias record\\. Note that you can't create a CNAME record for the root domain name\\. For example, if your domain name is example\\.com, you can create a record that routes traffic for acme\\.example\\.com to your Elastic Beanstalk environment, but you can't create a record that routes traffic for example\\.com to your Elastic Beanstalk environment\\.\nFor Elastic Beanstalk environments that have regionalized subdomains, specify the `CNAME` attribute for the environment\\. You can use the following methods to get the value of the CNAME attribute:  \n+  *AWS Management Console": "For information about how to get the value by using the console, see [Using Custom Domains with AWS Elastic Beanstalk](http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customdomains.html) in the *AWS Elastic Beanstalk Developer Guide*\\.\n+  *Elastic Beanstalk API",
                "Required": "Yes",
                "Type": "String",
                "Maximum": "1024",
                "UpdateRequires": "No interruption"
            },
            "EvaluateTargetHealth": {
                "EvaluateTargetHealth`  <a name=\"cfn-route53-aliastarget-evaluatetargethealth\"></a>\n *Applies only to alias, failover alias, geolocation alias, latency alias, and weighted alias resource record sets:* When `EvaluateTargetHealth` is `true`, an alias resource record set inherits the health of the referenced AWS resource, such as an ELB load balancer or another resource record set in the hosted zone\\.  \nNote the following:    \nCloudFront distributions  \nYou can't set `EvaluateTargetHealth` to `true` when the alias target is a CloudFront distribution\\.  \nElastic Beanstalk environments that have regionalized subdomains  \nIf you specify an Elastic Beanstalk environment in `DNSName` and the environment contains an ELB load balancer, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. \\(An environment automatically contains an ELB load balancer if it includes more than one Amazon EC2 instance\\.\\) If you set `EvaluateTargetHealth` to `true` and either no Amazon EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other available resources that are healthy, if any\\.   \nIf the environment contains a single Amazon EC2 instance, there are no special requirements\\.  \nELB load balancers  \nHealth checking behavior depends on the type of load balancer:  \n+  **Classic Load Balancers*": "If you specify an ELB Classic Load Balancer in `DNSName`, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. If you set `EvaluateTargetHealth` to `true` and either no EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other resources\\.\n+  **Application and Network Load Balancers*",
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "HostedZoneId": {
                "HostedZoneId`  <a name=\"cfn-route53-aliastarget-hostedzoneid\"></a>\n *Alias resource records sets only": "The value used depends on where you want to route traffic:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the hosted zone ID for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalHostedZoneId`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionHostedZoneId`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nSpecify the hosted zone ID for your interface endpoint\\. You can get the value of `HostedZoneId` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify `Z2FDTNDATAQYW2`\\.  \nAlias resource record sets for CloudFront can't be created in a private zone\\.  \nElastic Beanstalk environment  \nSpecify the hosted zone ID for the region that you created the environment in\\. The environment must have a regionalized subdomain\\. For a list of regions and the corresponding hosted zone IDs, see [AWS Elastic Beanstalk](http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region) in the \"AWS Regions and Endpoints\" chapter of the *Amazon Web Services General Reference*\\.  \nELB load balancer  \nSpecify the value of the hosted zone ID for the load balancer\\. Use the following methods to get the hosted zone ID:  \n+  [Elastic Load Balancing](https://docs.aws.amazon.com/general/latest/gr/rande.html#elb_region) table in the \"AWS Regions and Endpoints\" chapter of the *Amazon Web Services General Reference",
                "Required": "Yes",
                "Type": "String",
                "Maximum": "32",
                "UpdateRequires": "No interruption"
            }
        },
        "route53-healthcheck-alarmidentifier-properties": {
            "Name": {},
            "Region": {}
        },
        "route53-healthcheck-healthcheckconfig-properties": {
            "AlarmIdentifier": {
                "Required": "No",
                "Type": "AlarmIdentifier",
                "UpdateRequires": "No interruption"
            },
            "ChildHealthChecks": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            },
            "EnableSNI": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "FailureThreshold": {},
            "FullyQualifiedDomainName": {
                "FullyQualifiedDomainName`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-fullyqualifieddomainname\"></a>\nAmazon Route 53 behavior depends on whether you specify a value for `IPAddress`\\.  \n **If you specify a value for** `IPAddress`:  \nAmazon Route 53 sends health check requests to the specified IPv4 or IPv6 address and passes the value of `FullyQualifiedDomainName` in the `Host` header for all health checks except TCP health checks\\. This is typically the fully qualified DNS name of the endpoint on which you want Route 53 to perform health checks\\.  \nWhen Route 53 checks the health of an endpoint, here is how it constructs the `Host` header:  \n+ If you specify a value of `80` for `Port` and `HTTP` or `HTTP_STR_MATCH` for `Type`, Route 53 passes the value of `FullyQualifiedDomainName` to the endpoint in the Host header\\. \n+ If you specify a value of `443` for `Port` and `HTTPS` or `HTTPS_STR_MATCH` for `Type`, Route 53 passes the value of `FullyQualifiedDomainName` to the endpoint in the `Host` header\\.\n+ If you specify another value for `Port` and any value except `TCP` for `Type`, Route 53 passes `FullyQualifiedDomainName:Port` to the endpoint in the `Host` header\\.\nIf you don't specify a value for `FullyQualifiedDomainName`, Route 53 substitutes the value of `IPAddress` in the `Host` header in each of the preceding cases\\.  \n **If you don't specify a value for `IPAddress` *": "Route 53 sends a DNS request to the domain that you specify for `FullyQualifiedDomainName` at the interval that you specify for `RequestInterval`\\. Using an IPv4 address that DNS returns, Route 53 then checks the health of the endpoint\\.  \nIf you don't specify a value for `IPAddress`, Route 53 uses only IPv4 to send health checks to the endpoint\\. If there's no resource record set with a type of A for the name that you specify for `FullyQualifiedDomainName`, the health check fails with a \"DNS resolution failed\" error\\.\nIf you want to check the health of weighted, latency, or failover resource record sets and you choose to specify the endpoint only by `FullyQualifiedDomainName`, we recommend that you create a separate health check for each endpoint\\. For example, create a health check for each HTTP server that is serving content for www\\.example\\.com\\. For the value of `FullyQualifiedDomainName`, specify the domain name of the server \\(such as us\\-east\\-2\\-www\\.example\\.com\\), not the name of the resource record sets \\(www\\.example\\.com\\)\\.  \nIn this configuration, if you create a health check for which the value of `FullyQualifiedDomainName` matches the name of the resource record sets and you then associate the health check with those resource record sets, health check results will be unpredictable\\.\nIn addition, if the value that you specify for `Type` is `HTTP`, `HTTPS`, `HTTP_STR_MATCH`, or `HTTPS_STR_MATCH`, Route 53 passes the value of `FullyQualifiedDomainName` in the `Host` header, as it does when you specify a value for `IPAddress`\\. If the value of `Type` is `TCP`, Route 53 doesn't pass a `Host` header\\.",
                "Required": "No",
                "Type": "String",
                "Maximum": "255",
                "UpdateRequires": "No interruption"
            },
            "HealthThreshold": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "0",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            },
            "IPAddress": {
                "IPAddress`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-ipaddress\"></a>\nThe IPv4 or IPv6 IP address of the endpoint that you want Amazon Route 53 to perform health checks on\\. If you don't specify a value for `IPAddress`, Route 53 sends a DNS request to resolve the domain name that you specify in `FullyQualifiedDomainName` at the interval that you specify in `RequestInterval`\\. Using an IP address returned by DNS, Route 53 then checks the health of the endpoint\\.  \nUse one of the following formats for the value of `IPAddress`:   \n+  **IPv4 address*": "four values between 0 and 255, separated by periods \\(\\.\\), for example, `192.0.2.44`\\.\n+  **IPv6 address*",
                "Required": "No",
                "Type": "String",
                "Maximum": "45",
                "Pattern": "(^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$|^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)",
                "UpdateRequires": "No interruption"
            },
            "InsufficientDataHealthStatus": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Healthy",
                    "LastKnownStatus",
                    "Unhealthy"
                ],
                "UpdateRequires": "No interruption"
            },
            "Inverted": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "MeasureLatency": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Port": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "65535",
                "UpdateRequires": "No interruption"
            },
            "Regions": {},
            "RequestInterval": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "10",
                "Maximum": "30",
                "UpdateRequires": "Replacement"
            },
            "ResourcePath": {
                "Required": "No",
                "Type": "String",
                "Maximum": "255",
                "UpdateRequires": "No interruption"
            },
            "SearchString": {
                "Required": "No",
                "Type": "String",
                "Maximum": "255",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Type`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-type\"></a>\nThe type of health check that you want to create, which indicates how Amazon Route 53 determines whether an endpoint is healthy\\.  \nYou can't change the value of `Type` after you create a health check\\.\nYou can create the following types of health checks:  \n+  **HTTP*": "Route 53 tries to establish a TCP connection\\. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400\\.\n+  **HTTPS*",
                "*Important**  \nIf you specify `HTTPS` for the value of `Type`, the endpoint must support TLS v1\\.0 or later\\.\n+  **HTTP\\_STR\\_MATCH*": "Route 53 tries to establish a TCP connection\\. If successful, Route 53 submits an HTTP request and searches the first 5,120 bytes of the response body for the string that you specify in `SearchString`\\.\n+  **HTTPS\\_STR\\_MATCH*",
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "CALCULATED",
                    "CLOUDWATCH_METRIC",
                    "HTTP",
                    "HTTPS",
                    "HTTPS_STR_MATCH",
                    "HTTP_STR_MATCH",
                    "TCP"
                ],
                "UpdateRequires": "Replacement"
            }
        },
        "route53-healthcheck-healthchecktag-properties": {
            "Key": {
                "Key`  <a name=\"cfn-route53-healthchecktags-key\"></a>\nThe value of `Key` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Key` is the name that you want to give the new tag\\.\n+  **Edit a tag*",
                "Required": "Yes",
                "Type": "String",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Value`  <a name=\"cfn-route53-healthchecktags-value\"></a>\nThe value of `Value` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Value` is the value that you want to give the new tag\\.\n+  **Edit a tag*",
                "Required": "Yes",
                "Type": "String",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            }
        },
        "route53-hostedzone-hostedzoneconfig-properties": {
            "Comment": {
                "Required": "No",
                "Type": "String",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            }
        },
        "route53-hostedzone-hostedzonetags-properties": {
            "Key": {
                "Key`  <a name=\"cfn-route53-hostedzonetags-key\"></a>\nThe value of `Key` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Key` is the name that you want to give the new tag\\.\n+  **Edit a tag*",
                "Required": "Yes",
                "Type": "String",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Value`  <a name=\"cfn-route53-hostedzonetags-value\"></a>\nThe value of `Value` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Value` is the value that you want to give the new tag\\.\n+  **Edit a tag*",
                "Required": "Yes",
                "Type": "String",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            }
        },
        "route53-hostedzone-queryloggingconfig-properties": {
            "CloudWatchLogsLogGroupArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "route53-recordset-1-properties": {
            "AliasTarget": {},
            "Comment": {},
            "Failover": {
                "Failover`  <a name=\"cfn-route53-recordset-failover\"></a>\n *Failover resource record sets only:* To configure failover, you add the `Failover` element to two resource record sets\\. For one resource record set, you specify `PRIMARY` as the value for `Failover`; for the other resource record set, you specify `SECONDARY`\\. In addition, you include the `HealthCheckId` element and specify the health check that you want Amazon Route 53 to perform for each resource record set\\.  \nExcept where noted, the following failover behaviors assume that you have included the `HealthCheckId` element in both resource record sets:  \n+ When the primary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the secondary resource record set\\.\n+ When the primary resource record set is unhealthy and the secondary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the secondary resource record set\\.\n+ When the secondary resource record set is unhealthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the primary resource record set\\.\n+ If you omit the `HealthCheckId` element for the secondary resource record set, and if the primary resource record set is unhealthy, Route 53 always responds to DNS queries with the applicable value from the secondary resource record set\\. This is true regardless of the health of the associated endpoint\\.\nYou can't create non\\-failover resource record sets that have the same values for the `Name` and `Type` elements as failover resource record sets\\.  \nFor failover alias resource record sets, you must also include the `EvaluateTargetHealth` element and set the value to true\\.  \nFor more information about configuring failover for Route 53, see the following topics in the *Amazon Route 53 Developer Guide": "+  [Route 53 Health Checks and DNS Failover](http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html)",
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "PRIMARY",
                    "SECONDARY"
                ],
                "UpdateRequires": "No interruption"
            },
            "GeoLocation": {},
            "HealthCheckId": {
                "HealthCheckId`  <a name=\"cfn-route53-recordset-healthcheckid\"></a>\nIf you want Amazon Route 53 to return this resource record set in response to a DNS query only when the status of a health check is healthy, include the `HealthCheckId` element and specify the ID of the applicable health check\\.  \nRoute 53 determines whether a resource record set is healthy based on one of the following:  \n+ By periodically sending a request to the endpoint that is specified in the health check\n+ By aggregating the status of a specified group of health checks \\(calculated health checks\\)\n+ By determining the current state of a CloudWatch alarm \\(CloudWatch metric health checks\\)\nRoute 53 doesn't check the health of the endpoint that is specified in the resource record set, for example, the endpoint specified by the IP address in the `Value` element\\. When you add a `HealthCheckId` element to a resource record set, Route 53 checks the health of the endpoint that you specified in the health check\\. \nFor more information, see the following topics in the *Amazon Route 53 Developer Guide": "+  [How Amazon Route 53 Determines Whether an Endpoint Is Healthy](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html) \n+  [Route 53 Health Checks and DNS Failover](http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html) \n **When to Specify HealthCheckId**   \nSpecifying a value for `HealthCheckId` is useful only when Route 53 is choosing between two or more resource record sets to respond to a DNS query, and you want Route 53 to base the choice in part on the status of a health check\\. Configuring health checks makes sense only in the following configurations:  \n+  **Non\\-alias resource record sets*"
            },
            "HostedZoneId": {
                "Required": "No",
                "Type": "String",
                "Maximum": "32",
                "UpdateRequires": "No interruption"
            },
            "HostedZoneName": {
                "Required": "No",
                "Type": "String",
                "Maximum": "1024",
                "UpdateRequires": "No interruption"
            },
            "MultiValueAnswer": {
                "MultiValueAnswer`  <a name=\"cfn-route53-recordset-multivalueanswer\"></a>\n *Multivalue answer resource record sets only": "To route traffic approximately randomly to multiple resources, such as web servers, create one multivalue answer record for each resource and specify `true` for `MultiValueAnswer`\\. Note the following:  \n+ If you associate a health check with a multivalue answer resource record set, Amazon Route 53 responds to DNS queries with the corresponding IP address only when the health check is healthy\\.\n+ If you don't associate a health check with a multivalue answer record, Route 53 always considers the record to be healthy\\.\n+ Route 53 responds to DNS queries with up to eight healthy records; if you have eight or fewer healthy records, Route 53 responds to all DNS queries with all the healthy records\\.\n+ If you have more than eight healthy records, Route 53 responds to different DNS resolvers with different combinations of healthy records\\.\n+ When all records are unhealthy, Route 53 responds to DNS queries with up to eight unhealthy records\\.\n+ If a resource becomes unavailable after a resolver caches a response, client software typically tries another of the IP addresses in the response\\.\nYou can't create multivalue answer alias records\\.",
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Name": {},
            "Region": {},
            "ResourceRecords": {},
            "SetIdentifier": {},
            "TTL": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Type`  <a name=\"cfn-route53-recordset-type\"></a>\nThe DNS record type\\. For information about different record types and how data is encoded for them, see [Supported DNS Resource Record Types](http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html) in the *Amazon Route 53 Developer Guide*\\.  \nValid values for basic resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `NS` \\| `PTR` \\| `SOA` \\| `SPF` \\| `SRV` \\| `TXT`   \nValues for weighted, latency, geolocation, and failover resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`\\. When creating a group of weighted, latency, geolocation, or failover resource record sets, specify the same value for all of the resource record sets in the group\\.  \nValid values for multivalue answer resource record sets: `A` \\| `AAAA` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`   \nSPF records were formerly used to verify the identity of the sender of email messages\\. However, we no longer recommend that you create resource record sets for which the value of `Type` is `SPF`\\. RFC 7208, *Sender Policy Framework \\(SPF\\) for Authorizing Use of Domains in Email, Version 1*, has been updated to say, \"\\.\\.\\.\\[I\\]ts existence and mechanism defined in \\[RFC4408\\] have led to some interoperability issues\\. Accordingly, its use is no longer appropriate for SPF version 1; implementations are not to use it\\.\" In RFC 7208, see section 14\\.1, [The SPF DNS Record Type](http://tools.ietf.org/html/rfc7208#section-14.1)\\.\nValues for alias resource record sets:  \n+  **Amazon API Gateway custom regional APIs and edge\\-optimized APIs:** `A` \n+  **CloudFront distributions:** `A` \n\n  If IPv6 is enabled for the distribution, create two resource record sets to route traffic to your distribution, one with a value of `A` and one with a value of `AAAA`\\. \n+  **AWS Elastic Beanstalk environment that has a regionalized subdomain*": "A` \n+  **ELB load balancers:** `A` \\| `AAAA` \n+  **Amazon S3 buckets:** `A` \n+  **Amazon Virtual Private Cloud interface VPC endpoints** `A` \n+  **Another resource record set in this hosted zone:** Specify the type of the resource record set that you're creating the alias for\\. All values are supported except `NS` and `SOA`\\."
            },
            "Weight": {}
        },
        "route53-recordset-geolocation-1-properties": {
            "ContinentCode": {
                "Required": "No",
                "Type": "String",
                "Minimum": "2",
                "Maximum": "2",
                "UpdateRequires": "No interruption"
            },
            "CountryCode": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2",
                "UpdateRequires": "No interruption"
            },
            "SubdivisionCode": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "3",
                "UpdateRequires": "No interruption"
            }
        },
        "route53-recordset-geolocation-properties": {
            "ContinentCode": {
                "Required": "No",
                "Type": "String",
                "Minimum": "2",
                "Maximum": "2",
                "UpdateRequires": "No interruption"
            },
            "CountryCode": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2",
                "UpdateRequires": "No interruption"
            },
            "SubdivisionCode": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "3",
                "UpdateRequires": "No interruption"
            }
        },
        "route53-recordset-properties": {
            "AliasTarget": {},
            "Comment": {},
            "Failover": {
                "Failover`  <a name=\"cfn-route53-recordset-failover\"></a>\n *Failover resource record sets only:* To configure failover, you add the `Failover` element to two resource record sets\\. For one resource record set, you specify `PRIMARY` as the value for `Failover`; for the other resource record set, you specify `SECONDARY`\\. In addition, you include the `HealthCheckId` element and specify the health check that you want Amazon Route 53 to perform for each resource record set\\.  \nExcept where noted, the following failover behaviors assume that you have included the `HealthCheckId` element in both resource record sets:  \n+ When the primary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the secondary resource record set\\.\n+ When the primary resource record set is unhealthy and the secondary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the secondary resource record set\\.\n+ When the secondary resource record set is unhealthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the primary resource record set\\.\n+ If you omit the `HealthCheckId` element for the secondary resource record set, and if the primary resource record set is unhealthy, Route 53 always responds to DNS queries with the applicable value from the secondary resource record set\\. This is true regardless of the health of the associated endpoint\\.\nYou can't create non\\-failover resource record sets that have the same values for the `Name` and `Type` elements as failover resource record sets\\.  \nFor failover alias resource record sets, you must also include the `EvaluateTargetHealth` element and set the value to true\\.  \nFor more information about configuring failover for Route 53, see the following topics in the *Amazon Route 53 Developer Guide": "+  [Route 53 Health Checks and DNS Failover](http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html)",
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "PRIMARY",
                    "SECONDARY"
                ],
                "UpdateRequires": "No interruption"
            },
            "GeoLocation": {},
            "HealthCheckId": {
                "HealthCheckId`  <a name=\"cfn-route53-recordset-healthcheckid\"></a>\nIf you want Amazon Route 53 to return this resource record set in response to a DNS query only when the status of a health check is healthy, include the `HealthCheckId` element and specify the ID of the applicable health check\\.  \nRoute 53 determines whether a resource record set is healthy based on one of the following:  \n+ By periodically sending a request to the endpoint that is specified in the health check\n+ By aggregating the status of a specified group of health checks \\(calculated health checks\\)\n+ By determining the current state of a CloudWatch alarm \\(CloudWatch metric health checks\\)\nRoute 53 doesn't check the health of the endpoint that is specified in the resource record set, for example, the endpoint specified by the IP address in the `Value` element\\. When you add a `HealthCheckId` element to a resource record set, Route 53 checks the health of the endpoint that you specified in the health check\\. \nFor more information, see the following topics in the *Amazon Route 53 Developer Guide": "+  [How Amazon Route 53 Determines Whether an Endpoint Is Healthy](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html) \n+  [Route 53 Health Checks and DNS Failover](http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html) \n **When to Specify HealthCheckId**   \nSpecifying a value for `HealthCheckId` is useful only when Route 53 is choosing between two or more resource record sets to respond to a DNS query, and you want Route 53 to base the choice in part on the status of a health check\\. Configuring health checks makes sense only in the following configurations:  \n+  **Non\\-alias resource record sets*"
            },
            "HostedZoneId": {
                "Required": "No",
                "Type": "String",
                "Maximum": "32",
                "UpdateRequires": "Replacement"
            },
            "HostedZoneName": {
                "Required": "No",
                "Type": "String",
                "Maximum": "32",
                "UpdateRequires": "Replacement"
            },
            "MultiValueAnswer": {
                "MultiValueAnswer`  <a name=\"cfn-route53-recordset-multivalueanswer\"></a>\n *Multivalue answer resource record sets only": "To route traffic approximately randomly to multiple resources, such as web servers, create one multivalue answer record for each resource and specify `true` for `MultiValueAnswer`\\. Note the following:  \n+ If you associate a health check with a multivalue answer resource record set, Amazon Route 53 responds to DNS queries with the corresponding IP address only when the health check is healthy\\.\n+ If you don't associate a health check with a multivalue answer record, Route 53 always considers the record to be healthy\\.\n+ Route 53 responds to DNS queries with up to eight healthy records; if you have eight or fewer healthy records, Route 53 responds to all DNS queries with all the healthy records\\.\n+ If you have more than eight healthy records, Route 53 responds to different DNS resolvers with different combinations of healthy records\\.\n+ When all records are unhealthy, Route 53 responds to DNS queries with up to eight unhealthy records\\.\n+ If a resource becomes unavailable after a resolver caches a response, client software typically tries another of the IP addresses in the response\\.\nYou can't create multivalue answer alias records\\.",
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Name": {},
            "Region": {},
            "ResourceRecords": {},
            "SetIdentifier": {},
            "TTL": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {
                "Type`  <a name=\"cfn-route53-recordset-type\"></a>\nThe DNS record type\\. For information about different record types and how data is encoded for them, see [Supported DNS Resource Record Types](http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html) in the *Amazon Route 53 Developer Guide*\\.  \nValid values for basic resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `NS` \\| `PTR` \\| `SOA` \\| `SPF` \\| `SRV` \\| `TXT`   \nValues for weighted, latency, geolocation, and failover resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`\\. When creating a group of weighted, latency, geolocation, or failover resource record sets, specify the same value for all of the resource record sets in the group\\.  \nValid values for multivalue answer resource record sets: `A` \\| `AAAA` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`   \nSPF records were formerly used to verify the identity of the sender of email messages\\. However, we no longer recommend that you create resource record sets for which the value of `Type` is `SPF`\\. RFC 7208, *Sender Policy Framework \\(SPF\\) for Authorizing Use of Domains in Email, Version 1*, has been updated to say, \"\\.\\.\\.\\[I\\]ts existence and mechanism defined in \\[RFC4408\\] have led to some interoperability issues\\. Accordingly, its use is no longer appropriate for SPF version 1; implementations are not to use it\\.\" In RFC 7208, see section 14\\.1, [The SPF DNS Record Type](http://tools.ietf.org/html/rfc7208#section-14.1)\\.\nValues for alias resource record sets:  \n+  **Amazon API Gateway custom regional APIs and edge\\-optimized APIs:** `A` \n+  **CloudFront distributions:** `A` \n\n  If IPv6 is enabled for the distribution, create two resource record sets to route traffic to your distribution, one with a value of `A` and one with a value of `AAAA`\\. \n+  **AWS Elastic Beanstalk environment that has a regionalized subdomain*": "A` \n+  **ELB load balancers:** `A` \\| `AAAA` \n+  **Amazon S3 buckets:** `A` \n+  **Amazon Virtual Private Cloud interface VPC endpoints** `A` \n+  **Another resource record set in this hosted zone:** Specify the type of the resource record set that you're creating the alias for\\. All values are supported except `NS` and `SOA`\\."
            },
            "Weight": {}
        },
        "route53resolver-resolverendpoint-ipaddressrequest-properties": {
            "Ip": {
                "Required": "No",
                "Type": "String",
                "Minimum": "7",
                "Maximum": "36",
                "UpdateRequires": "No interruption"
            },
            "SubnetId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "32",
                "UpdateRequires": "No interruption"
            }
        },
        "route53resolver-resolverrule-targetaddress-properties": {
            "Ip": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "7",
                "Maximum": "36",
                "UpdateRequires": "No interruption"
            },
            "Port": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "65535",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-abortincompletemultipartupload-properties": {
            "DaysAfterInitiation": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-accelerateconfiguration-properties": {
            "AccelerationStatus": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "Enabled",
                    "Suspended"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-accesscontroltranslation-properties": {
            "Owner": {}
        },
        "s3-bucket-analyticsconfiguration-properties": {
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Prefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "StorageClassAnalysis": {
                "Required": "Yes",
                "Type": "StorageClassAnalysis",
                "UpdateRequires": "No interruption"
            },
            "TagFilters": {
                "Required": "No",
                "Type": "List of [TagFilter",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-bucketencryption-properties": {
            "ServerSideEncryptionConfiguration": {
                "Required": "Yes",
                "Type": "List of [ServerSideEncryptionRule",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-cors-corsrule-properties": {
            "AllowedHeaders": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "AllowedMethods": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "AllowedOrigins": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "ExposedHeaders": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Id": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "MaxAge": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-cors-properties": {
            "CorsRules": {
                "Required": "Yes",
                "Type": "List of [CorsRule",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-dataexport-properties": {
            "Destination": {
                "Required": "Yes",
                "Type": "Destination",
                "UpdateRequires": "No interruption"
            },
            "OutputSchemaVersion": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "V_1"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-defaultretention-properties": {
            "Days": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Mode": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "COMPLIANCE",
                    "GOVERNANCE"
                ],
                "UpdateRequires": "No interruption"
            },
            "Years": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-destination-properties": {
            "BucketAccountId": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "BucketArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Format": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "CSV"
                ],
                "UpdateRequires": "No interruption"
            },
            "Prefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-encryptionconfiguration-properties": {
            "ReplicaKmsKeyID": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-inventoryconfiguration-properties": {
            "Destination": {
                "Required": "Yes",
                "Type": "Destination",
                "UpdateRequires": "No interruption"
            },
            "Enabled": {
                "Required": "Yes",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "IncludedObjectVersions": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "All",
                    "Current"
                ],
                "UpdateRequires": "No interruption"
            },
            "OptionalFields": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Prefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ScheduleFrequency": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-lifecycleconfig-rule-noncurrentversiontransition-properties": {
            "StorageClass": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "DEEP_ARCHIVE",
                    "GLACIER",
                    "INTELLIGENT_TIERING",
                    "ONEZONE_IA",
                    "STANDARD_IA"
                ],
                "UpdateRequires": "No interruption"
            },
            "TransitionInDays": {}
        },
        "s3-bucket-lifecycleconfig-rule-transition-properties": {
            "StorageClass": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "DEEP_ARCHIVE",
                    "GLACIER",
                    "INTELLIGENT_TIERING",
                    "ONEZONE_IA",
                    "STANDARD_IA"
                ],
                "UpdateRequires": "No interruption"
            },
            "TransitionDate": {
                "Required": "Conditional",
                "Type": "Timestamp",
                "UpdateRequires": "No interruption"
            },
            "TransitionInDays": {
                "Required": "Conditional",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-lifecycleconfig-rule-properties": {
            "AbortIncompleteMultipartUpload": {
                "Required": "Conditional",
                "Type": "AbortIncompleteMultipartUpload",
                "UpdateRequires": "No interruption"
            },
            "ExpirationDate": {
                "Required": "Conditional",
                "Type": "Timestamp",
                "UpdateRequires": "No interruption"
            },
            "ExpirationInDays": {
                "Required": "Conditional",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Id": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "NoncurrentVersionExpirationInDays": {
                "Required": "Conditional",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "NoncurrentVersionTransition": {
                "Required": "Conditional",
                "Type": "NoncurrentVersionTransition",
                "UpdateRequires": "No interruption"
            },
            "NoncurrentVersionTransitions": {
                "Required": "Conditional",
                "Type": "List of [NoncurrentVersionTransition",
                "UpdateRequires": "No interruption"
            },
            "Prefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Status": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "Disabled",
                    "Enabled"
                ],
                "UpdateRequires": "No interruption"
            },
            "TagFilters": {
                "Required": "No",
                "Type": "List of [TagFilter",
                "UpdateRequires": "No interruption"
            },
            "Transition": {
                "Required": "Conditional",
                "Type": "Transition",
                "UpdateRequires": "No interruption"
            },
            "Transitions": {
                "Required": "Conditional",
                "Type": "List of [Transition",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-lifecycleconfig-properties": {
            "Rules": {
                "Required": "Yes",
                "Type": "List of [Rule",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-loggingconfig-properties": {
            "DestinationBucketName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "LogFilePrefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-metricsconfiguration-properties": {
            "Id": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Prefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TagFilters": {
                "Required": "No",
                "Type": "List of [TagFilter",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-notificationconfig-lambdaconfig-properties": {
            "Event": {},
            "Filter": {
                "Required": "No",
                "Type": "NotificationFilter",
                "UpdateRequires": "No interruption"
            },
            "Function": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-notificationconfig-queueconfig-properties": {
            "Event": {},
            "Filter": {
                "Required": "No",
                "Type": "NotificationFilter",
                "UpdateRequires": "No interruption"
            },
            "Queue": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-notificationconfig-topicconfig-properties": {
            "Event": {},
            "Filter": {
                "Required": "No",
                "Type": "NotificationFilter",
                "UpdateRequires": "No interruption"
            },
            "Topic": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-notificationconfig-properties": {
            "LambdaConfigurations": {
                "Required": "No",
                "Type": "List of [LambdaConfiguration",
                "UpdateRequires": "No interruption"
            },
            "QueueConfigurations": {
                "Required": "No",
                "Type": "List of [QueueConfiguration",
                "UpdateRequires": "No interruption"
            },
            "TopicConfigurations": {
                "Required": "No",
                "Type": "List of [TopicConfiguration",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-notificationconfiguration-config-filter-s3key-rules-properties": {
            "Name": {},
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-notificationconfiguration-config-filter-s3key-properties": {
            "Rules": {
                "Required": "Yes",
                "Type": "List of [FilterRule",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-notificationconfiguration-config-filter-properties": {
            "S3Key": {
                "Required": "Yes",
                "Type": "S3KeyFilter",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-objectlockconfiguration-properties": {
            "ObjectLockEnabled": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Enabled"
                ],
                "UpdateRequires": "No interruption"
            },
            "Rule": {
                "Required": "No",
                "Type": "ObjectLockRule",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-objectlockrule-properties": {
            "DefaultRetention": {
                "Required": "No",
                "Type": "DefaultRetention",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-publicaccessblockconfiguration-properties": {
            "BlockPublicAcls": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "BlockPublicPolicy": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "IgnorePublicAcls": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "RestrictPublicBuckets": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-replicationconfiguration-rules-destination-properties": {
            "AccessControlTranslation": {
                "Required": "No",
                "Type": "AccessControlTranslation",
                "UpdateRequires": "No interruption"
            },
            "Account": {},
            "Bucket": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "EncryptionConfiguration": {
                "Required": "No",
                "Type": "EncryptionConfiguration",
                "UpdateRequires": "No interruption"
            },
            "StorageClass": {}
        },
        "s3-bucket-replicationconfiguration-rules-properties": {
            "Destination": {
                "Required": "Yes",
                "Type": "ReplicationDestination",
                "UpdateRequires": "No interruption"
            },
            "Id": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Prefix": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SourceSelectionCriteria": {
                "Required": "No",
                "Type": "SourceSelectionCriteria",
                "UpdateRequires": "No interruption"
            },
            "Status": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "Disabled",
                    "Enabled"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-replicationconfiguration-properties": {
            "Role": {},
            "Rules": {
                "Required": "Yes",
                "Type": "List of [ReplicationRule",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-serversideencryptionbydefault-properties": {
            "KMSMasterKeyID": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SSEAlgorithm": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "AES256",
                    "aws:kms"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-serversideencryptionrule-properties": {
            "ServerSideEncryptionByDefault": {
                "Required": "No",
                "Type": "ServerSideEncryptionByDefault",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-sourceselectioncriteria-properties": {
            "SseKmsEncryptedObjects": {
                "Required": "Yes",
                "Type": "SseKmsEncryptedObjects",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-ssekmsencryptedobjects-properties": {
            "Status": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "Disabled",
                    "Enabled"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-storageclassanalysis-properties": {
            "DataExport": {
                "Required": "No",
                "Type": "DataExport",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-tagfilter-properties": {
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-versioningconfig-properties": {
            "Status": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "Enabled",
                    "Suspended"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "s3-bucket-properties": {
            "AccelerateConfiguration": {},
            "AccessControl": {},
            "AnalyticsConfigurations": {},
            "BucketEncryption": {},
            "BucketName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "CorsConfiguration": {},
            "InventoryConfigurations": {},
            "LifecycleConfiguration": {},
            "LoggingConfiguration": {
                "Required": "No",
                "Type": "LoggingConfiguration",
                "UpdateRequires": "No interruption"
            },
            "MetricsConfigurations": {},
            "NotificationConfiguration": {
                "Required": "No",
                "Type": "NotificationConfiguration",
                "UpdateRequires": "No interruption"
            },
            "ObjectLockConfiguration": {
                "Required": "No",
                "Type": "ObjectLockConfiguration",
                "UpdateRequires": "No interruption"
            },
            "ObjectLockEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "Enabled"
                ],
                "Type": "Boolean",
                "UpdateRequires": "Replacement"
            },
            "PublicAccessBlockConfiguration": {
                "Required": "No",
                "Type": "PublicAccessBlockConfiguration",
                "UpdateRequires": "No interruption"
            },
            "ReplicationConfiguration": {
                "Required": "No",
                "Type": "ReplicationConfiguration",
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "UpdateRequires": "No interruption"
            },
            "VersioningConfiguration": {
                "Required": "No",
                "Type": "VersioningConfiguration",
                "UpdateRequires": "No interruption"
            },
            "WebsiteConfiguration": {
                "Required": "No",
                "Type": "WebsiteConfiguration",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-policy-properties": {
            "Bucket": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "PolicyDocument": {}
        },
        "s3-websiteconfiguration-redirectallrequeststo-properties": {
            "HostName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Protocol": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "http",
                    "https"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "s3-websiteconfiguration-routingrules-redirectrule-properties": {
            "HostName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "HttpRedirectCode": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Protocol": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "http",
                    "https"
                ],
                "UpdateRequires": "No interruption"
            },
            "ReplaceKeyPrefixWith": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ReplaceKeyWith": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-websiteconfiguration-routingrules-routingrulecondition-properties": {
            "HttpErrorCodeReturnedEquals": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "KeyPrefixEquals": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-websiteconfiguration-routingrules-properties": {
            "RedirectRule": {
                "Required": "Yes",
                "Type": "RedirectRule",
                "UpdateRequires": "No interruption"
            },
            "RoutingRuleCondition": {
                "Required": "No",
                "Type": "RoutingRuleCondition",
                "UpdateRequires": "No interruption"
            }
        },
        "s3-websiteconfiguration-properties": {
            "ErrorDocument": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "IndexDocument": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "RedirectAllRequestsTo": {
                "Required": "No",
                "Type": "RedirectAllRequestsTo",
                "UpdateRequires": "No interruption"
            },
            "RoutingRules": {
                "Required": "No",
                "Type": "List of [RoutingRule",
                "UpdateRequires": "No interruption"
            }
        },
        "sagemaker-coderepository-gitconfig-properties": {
            "Branch": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "Pattern": "[^ ~^:?*\\[]+",
                "UpdateRequires": "Replacement"
            },
            "RepositoryUrl": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^https://([^/]+)/?(.*)$",
                "UpdateRequires": "Replacement"
            },
            "SecretArn": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "2048",
                "Pattern": "arn:aws[a-z\\-]*:secretsmanager:[a-z0-9\\-]*:[0-9]{12}:secret:.*",
                "UpdateRequires": "No interruption"
            }
        },
        "sagemaker-endpointconfig-productionvariant-properties": {
            "AcceleratorType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "ml.eia1.large",
                    "ml.eia1.medium",
                    "ml.eia1.xlarge"
                ],
                "UpdateRequires": "Replacement"
            },
            "InitialInstanceCount": {
                "Required": "Yes",
                "Type": "Integer",
                "Minimum": "1",
                "UpdateRequires": "Replacement"
            },
            "InitialVariantWeight": {
                "Required": "Yes",
                "Type": "Double",
                "UpdateRequires": "Replacement"
            },
            "InstanceType": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ml.c4.2xlarge",
                    "ml.c4.4xlarge",
                    "ml.c4.8xlarge",
                    "ml.c4.large",
                    "ml.c4.xlarge",
                    "ml.c5.18xlarge",
                    "ml.c5.2xlarge",
                    "ml.c5.4xlarge",
                    "ml.c5.9xlarge",
                    "ml.c5.large",
                    "ml.c5.xlarge",
                    "ml.m4.10xlarge",
                    "ml.m4.16xlarge",
                    "ml.m4.2xlarge",
                    "ml.m4.4xlarge",
                    "ml.m4.xlarge",
                    "ml.m5.12xlarge",
                    "ml.m5.24xlarge",
                    "ml.m5.2xlarge",
                    "ml.m5.4xlarge",
                    "ml.m5.large",
                    "ml.m5.xlarge",
                    "ml.p2.16xlarge",
                    "ml.p2.8xlarge",
                    "ml.p2.xlarge",
                    "ml.p3.16xlarge",
                    "ml.p3.2xlarge",
                    "ml.p3.8xlarge",
                    "ml.t2.2xlarge",
                    "ml.t2.large",
                    "ml.t2.medium",
                    "ml.t2.xlarge"
                ],
                "UpdateRequires": "Replacement"
            },
            "ModelName": {
                "Required": "Yes",
                "Type": "String",
                "Maximum": "63",
                "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                "UpdateRequires": "Replacement"
            },
            "VariantName": {
                "Required": "Yes",
                "Type": "String",
                "Maximum": "63",
                "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                "UpdateRequires": "Replacement"
            }
        },
        "sagemaker-model-containerdefinition-properties": {
            "ContainerHostname": {
                "Required": "No",
                "Type": "String",
                "Maximum": "63",
                "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                "UpdateRequires": "Replacement"
            },
            "Environment": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "Replacement"
            },
            "Image": {
                "Required": "Yes",
                "Type": "String",
                "Maximum": "255",
                "Pattern": "[\\S]+",
                "UpdateRequires": "Replacement"
            },
            "ModelDataUrl": {}
        },
        "sagemaker-model-vpcconfig-properties": {
            "SecurityGroupIds": {
                "Required": "Yes",
                "Type": "List of String",
                "Maximum": "5",
                "UpdateRequires": "Replacement"
            },
            "Subnets": {
                "Required": "Yes",
                "Type": "List of String",
                "Maximum": "16",
                "UpdateRequires": "Replacement"
            }
        },
        "sagemaker-notebookinstancelifecycleconfig-notebookinstancelifecyclehook-properties": {
            "Content": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "16384",
                "Pattern": "[\\S\\s]+",
                "UpdateRequires": "No interruption"
            }
        },
        "sagemaker-workteam-cognitomemberdefinition-properties": {
            "CognitoClientId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\w+]+",
                "UpdateRequires": "No interruption"
            },
            "CognitoUserGroup": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
                "UpdateRequires": "No interruption"
            },
            "CognitoUserPool": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "55",
                "Pattern": "[\\w-]+_[0-9a-zA-Z]+",
                "UpdateRequires": "Replacement"
            }
        },
        "sagemaker-workteam-memberdefinition-properties": {
            "CognitoMemberDefinition": {
                "Required": "Yes",
                "Type": "CognitoMemberDefinition",
                "UpdateRequires": "No interruption"
            }
        },
        "sagemaker-workteam-notificationconfiguration-properties": {
            "NotificationTopicArn": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "arn:aws[a-z\\-]*:sns:[a-z0-9\\-]*:[0-9]{12}:[a-zA-Z0-9_.-]*",
                "UpdateRequires": "No interruption"
            }
        },
        "secretsmanager-rotationschedule-rotationrules-properties": {
            "AutomaticallyAfterDays": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "secretsmanager-secret-generatesecretstring-properties": {
            "ExcludeCharacters": {
                "Required": "No",
                "Type": "String",
                "Minimum": "0",
                "Maximum": "4096",
                "UpdateRequires": "No interruption"
            },
            "ExcludeLowercase": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "ExcludeNumbers": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "ExcludePunctuation": {}
        },
        "servicecatalog-cloudformationproduct-provisioningartifactproperties": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DisableTemplateValidation": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Info": {
                "Required": "Yes",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "servicecatalog-cloudformationproduct-provisioningartifactproperties-properties": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DisableTemplateValidation": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Info": {
                "Required": "Yes",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "servicecatalog-cloudformationprovisionedproduct-provisioningparameter-properties": {
            "Key": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1000",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "No",
                "Type": "String",
                "Maximum": "4096",
                "UpdateRequires": "No interruption"
            }
        },
        "servicecatalog-cloudformationprovisionedproduct-provisioningpreferences-properties": {
            "StackSetAccounts": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "StackSetFailureToleranceCount": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "0",
                "UpdateRequires": "No interruption"
            },
            "StackSetFailureTolerancePercentage": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "0",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            },
            "StackSetMaxConcurrencyCount": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            },
            "StackSetMaxConcurrencyPercentage": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            },
            "StackSetOperationType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "CREATE",
                    "DELETE",
                    "UPDATE"
                ],
                "UpdateRequires": "No interruption"
            },
            "StackSetRegions": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "servicediscovery-service-dnsconfig-properties": {
            "DnsRecords": {
                "Required": "Yes",
                "Type": "List of [DnsRecord",
                "UpdateRequires": "No interruption"
            },
            "NamespaceId": {
                "Required": "No",
                "Type": "String",
                "Maximum": "64",
                "UpdateRequires": "Replacement"
            },
            "RoutingPolicy": {}
        },
        "servicediscovery-service-dnsrecord-properties": {
            "TTL": {
                "Required": "Yes",
                "Type": "Double",
                "UpdateRequires": "No interruption"
            },
            "Type": {}
        },
        "servicediscovery-service-healthcheckconfig-properties": {
            "FailureThreshold": {},
            "ResourcePath": {},
            "Type": {
                "Type`  <a name=\"cfn-servicediscovery-service-healthcheckconfig-type\"></a>\nThe type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy\\.  \nYou can't change the value of `Type` after you create a health check\\.\nYou can create the following types of health checks:  \n+  **HTTP*": "Route 53 tries to establish a TCP connection\\. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400\\.\n+  **HTTPS*",
                "*Important**  \nIf you specify HTTPS for the value of `Type`, the endpoint must support TLS v1\\.0 or later\\.\n+  **TCP*": "Route 53 tries to establish a TCP connection\\.\n\n  If you specify `TCP` for `Type`, don't specify a value for `ResourcePath`\\.\nFor more information, see [How Route 53 Determines Whether an Endpoint Is Healthy](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html) in the *Route 53 Developer Guide*\\.",
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "HTTP",
                    "HTTPS",
                    "TCP"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "servicediscovery-service-healthcheckcustomconfig-properties": {
            "FailureThreshold": {
                "Required": "No",
                "Type": "Double",
                "Minimum": "1",
                "Maximum": "10",
                "UpdateRequires": "No interruption"
            }
        },
        "ses-configurationseteventdestination-cloudwatchdestination-properties": {
            "DimensionConfigurations": {
                "Required": "No",
                "Type": "List of [DimensionConfiguration",
                "UpdateRequires": "No interruption"
            }
        },
        "ses-configurationseteventdestination-dimensionconfiguration-properties": {
            "DefaultDimensionValue": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DimensionName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "DimensionValueSource": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ses-configurationseteventdestination-eventdestination-properties": {
            "CloudWatchDestination": {
                "Required": "No",
                "Type": "CloudWatchDestination",
                "UpdateRequires": "No interruption"
            },
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "KinesisFirehoseDestination": {
                "Required": "No",
                "Type": "KinesisFirehoseDestination",
                "UpdateRequires": "No interruption"
            },
            "MatchingEventTypes": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ses-configurationseteventdestination-kinesisfirehosedestination-properties": {
            "DeliveryStreamARN": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "IAMRoleARN": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ses-receiptfilter-filter-properties": {
            "IpFilter": {
                "Required": "Yes",
                "Type": "IpFilter",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ses-receiptfilter-ipfilter-properties": {
            "Cidr": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Policy": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ses-receiptrule-action-properties": {
            "AddHeaderAction": {
                "Required": "No",
                "Type": "AddHeaderAction",
                "UpdateRequires": "No interruption"
            },
            "BounceAction": {
                "Required": "No",
                "Type": "BounceAction",
                "UpdateRequires": "No interruption"
            },
            "LambdaAction": {
                "Required": "No",
                "Type": "LambdaAction",
                "UpdateRequires": "No interruption"
            },
            "S3Action": {
                "Required": "No",
                "Type": "S3Action",
                "UpdateRequires": "No interruption"
            },
            "SNSAction": {
                "Required": "No",
                "Type": "SNSAction",
                "UpdateRequires": "No interruption"
            },
            "StopAction": {
                "Required": "No",
                "Type": "StopAction",
                "UpdateRequires": "No interruption"
            },
            "WorkmailAction": {
                "Required": "No",
                "Type": "WorkmailAction",
                "UpdateRequires": "No interruption"
            }
        },
        "ses-receiptrule-addheaderaction-properties": {
            "HeaderName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "HeaderValue": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ses-receiptrule-bounceaction-properties": {
            "Message": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Sender": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SmtpReplyCode": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "StatusCode": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TopicArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ses-receiptrule-lambdaaction-properties": {
            "FunctionArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "InvocationType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Event",
                    "RequestResponse"
                ],
                "UpdateRequires": "No interruption"
            },
            "TopicArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ses-receiptrule-rule-properties": {
            "Actions": {
                "Required": "No",
                "Type": "List of [Action",
                "UpdateRequires": "No interruption"
            },
            "Enabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "Recipients": {
                "Required": "No",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            },
            "ScanEnabled": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "TlsPolicy": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ses-receiptrule-s3action-properties": {
            "BucketName": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "KmsKeyArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "ObjectKeyPrefix": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TopicArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ses-receiptrule-snsaction-properties": {
            "Encoding": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Base64",
                    "UTF-8"
                ],
                "UpdateRequires": "No interruption"
            },
            "TopicArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ses-receiptrule-stopaction-properties": {
            "Scope": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "RuleSet"
                ],
                "UpdateRequires": "No interruption"
            },
            "TopicArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ses-receiptrule-workmailaction-properties": {
            "OrganizationArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TopicArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "ses-template-template-properties": {
            "HtmlPart": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "SubjectPart": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TemplateName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            },
            "TextPart": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "simpledb-properties": {
            "Description": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "sns-policy-properties": {
            "PolicyDocument": {
                "Required": "Yes",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "Topics": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "sns-subscription-properties": {
            "Endpoint": {},
            "Protocol": {}
        },
        "sns-topic-properties": {
            "DisplayName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "KmsMasterKeyId": {},
            "Subscription": {
                "Required": "No",
                "Type": "List",
                "UpdateRequires": "No interruption"
            },
            "TopicName": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "Replacement"
            }
        },
        "sqs-policy-properties": {
            "PolicyDocument": {},
            "Queues": {
                "Required": "Yes",
                "Type": "List of String",
                "UpdateRequires": "No interruption"
            }
        },
        "sqs-queues-properties": {
            "ContentBasedDeduplication": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "DelaySeconds": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "FifoQueue": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "KmsDataKeyReusePeriodSeconds": {},
            "KmsMasterKeyId": {},
            "MaximumMessageSize": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "MessageRetentionPeriod": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "QueueName": {},
            "ReceiveMessageWaitTimeSeconds": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "RedrivePolicy": {},
            "Tags": {},
            "VisibilityTimeout": {}
        },
        "ssm-association-instanceassociationoutputlocation-properties": {
            "S3Location": {
                "Required": "No",
                "Type": "S3OutputLocation",
                "UpdateRequires": "No interruption"
            }
        },
        "ssm-association-parametervalues-properties": {
            "ParameterValues": {
                "Required": "Yes",
                "Type": "List",
                "UpdateRequires": "No interruption"
            }
        },
        "ssm-association-s3outputlocation-properties": {
            "OutputS3BucketName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "63",
                "UpdateRequires": "No interruption"
            },
            "OutputS3KeyPrefix": {
                "Required": "No",
                "Type": "String",
                "Maximum": "500",
                "UpdateRequires": "No interruption"
            }
        },
        "ssm-association-target-properties": {
            "Key": {},
            "Values": {}
        },
        "ssm-maintenancewindowtarget-targets-properties": {
            "Key": {},
            "Values": {}
        },
        "ssm-maintenancewindowtask-logginginfo-properties": {
            "Region": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "20",
                "UpdateRequires": "No interruption"
            },
            "S3Bucket": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "63",
                "UpdateRequires": "No interruption"
            },
            "S3Prefix": {
                "Required": "No",
                "Type": "String",
                "Maximum": "500",
                "UpdateRequires": "No interruption"
            }
        },
        "ssm-maintenancewindowtask-maintenancewindowautomationparameters-properties": {
            "DocumentVersion": {
                "Required": "No",
                "Type": "String",
                "Pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                "UpdateRequires": "No interruption"
            },
            "Parameters": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            }
        },
        "ssm-maintenancewindowtask-maintenancewindowlambdaparameters-properties": {
            "ClientContext": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "8000",
                "UpdateRequires": "No interruption"
            },
            "Payload": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Qualifier": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            }
        },
        "ssm-maintenancewindowtask-maintenancewindowruncommandparameters-properties": {
            "Comment": {
                "Required": "No",
                "Type": "String",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            },
            "DocumentHash": {
                "Required": "No",
                "Type": "String",
                "Maximum": "256",
                "UpdateRequires": "No interruption"
            },
            "DocumentHashType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Sha1",
                    "Sha256"
                ],
                "UpdateRequires": "No interruption"
            },
            "NotificationConfig": {
                "Required": "No",
                "Type": "NotificationConfig",
                "UpdateRequires": "No interruption"
            },
            "OutputS3BucketName": {
                "Required": "No",
                "Type": "String",
                "Minimum": "3",
                "Maximum": "63",
                "UpdateRequires": "No interruption"
            },
            "OutputS3KeyPrefix": {
                "Required": "No",
                "Type": "String",
                "Maximum": "500",
                "UpdateRequires": "No interruption"
            },
            "Parameters": {
                "Required": "No",
                "Type": "Json",
                "UpdateRequires": "No interruption"
            },
            "ServiceRoleArn": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TimeoutSeconds": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "30",
                "Maximum": "2592000",
                "UpdateRequires": "No interruption"
            }
        },
        "ssm-maintenancewindowtask-maintenancewindowstepfunctionsparameters-properties": {
            "Input": {
                "Required": "No",
                "Type": "String",
                "Maximum": "4096",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "80",
                "UpdateRequires": "No interruption"
            }
        },
        "ssm-maintenancewindowtask-notificationconfig-properties": {
            "NotificationArn": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "NotificationEvents": {},
            "NotificationType": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "Command",
                    "Invocation"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "ssm-maintenancewindowtask-target-properties": {
            "Key": {},
            "Values": {}
        },
        "ssm-maintenancewindowtask-taskinvocationparameters-properties": {
            "MaintenanceWindowAutomationParameters": {
                "Required": "No",
                "Type": "MaintenanceWindowAutomationParameters",
                "UpdateRequires": "No interruption"
            },
            "MaintenanceWindowLambdaParameters": {
                "Required": "No",
                "Type": "MaintenanceWindowLambdaParameters",
                "UpdateRequires": "No interruption"
            },
            "MaintenanceWindowRunCommandParameters": {
                "Required": "No",
                "Type": "MaintenanceWindowRunCommandParameters",
                "UpdateRequires": "No interruption"
            },
            "MaintenanceWindowStepFunctionsParameters": {
                "Required": "No",
                "Type": "MaintenanceWindowStepFunctionsParameters",
                "UpdateRequires": "No interruption"
            }
        },
        "ssm-patchbaseline-patchfilter-properties": {
            "Key": {},
            "Values": {}
        },
        "ssm-patchbaseline-patchfiltergroup-properties": {
            "PatchFilters": {
                "Required": "No",
                "Type": "List of [PatchFilter",
                "Maximum": "4",
                "UpdateRequires": "No interruption"
            }
        },
        "ssm-patchbaseline-patchsource-properties": {
            "Configuration": {
                "Required": "No",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "512",
                "UpdateRequires": "No interruption"
            },
            "Name": {
                "Required": "No",
                "Type": "String",
                "Pattern": "^[a-zA-Z0-9_\\-.]{3,50}$",
                "UpdateRequires": "No interruption"
            },
            "Products": {}
        },
        "ssm-patchbaseline-rule-properties": {
            "ApproveAfterDays": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "0",
                "Maximum": "100",
                "UpdateRequires": "No interruption"
            },
            "ComplianceLevel": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "CRITICAL",
                    "HIGH",
                    "INFORMATIONAL",
                    "LOW",
                    "MEDIUM",
                    "UNSPECIFIED"
                ],
                "UpdateRequires": "No interruption"
            },
            "EnableNonSecurity": {
                "Required": "No",
                "AllowedValues": [
                    "True",
                    "False"
                ],
                "Type": "Boolean",
                "UpdateRequires": "No interruption"
            },
            "PatchFilterGroup": {
                "Required": "No",
                "Type": "PatchFilterGroup",
                "UpdateRequires": "No interruption"
            }
        },
        "ssm-patchbaseline-rulegroup-properties": {
            "PatchRules": {
                "Required": "No",
                "Type": "List of [Rule",
                "Maximum": "10",
                "UpdateRequires": "No interruption"
            }
        },
        "stack-properties": {
            "NotificationARNs": {
                "Required": "No",
                "Type": "List of String",
                "Maximum": "5",
                "UpdateRequires": "No interruption"
            },
            "Parameters": {
                "Required": "Conditional",
                "Type": "Map of String",
                "UpdateRequires": "No interruption"
            },
            "Tags": {
                "Required": "No",
                "Type": "List of [Tag",
                "Maximum": "50",
                "UpdateRequires": "No interruption"
            },
            "TemplateURL": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "1024",
                "UpdateRequires": "No interruption"
            },
            "TimeoutInMinutes": {
                "Required": "No",
                "Type": "Integer",
                "Minimum": "1",
                "UpdateRequires": "No interruption"
            }
        },
        "stepfunctions-activity-tagsentry-properties": {
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "stepfunctions-statemachine-tagsentry-properties": {
            "Key": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "transfer-server-endpointdetails-properties": {
            "VpcEndpointId": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "^vpce-[0-9a-f]{17}$",
                "UpdateRequires": "No interruption"
            }
        },
        "transfer-server-identityproviderdetails-properties": {
            "InvocationRole": {
                "Required": "Yes",
                "Type": "String",
                "Pattern": "arn:.*role/.*",
                "UpdateRequires": "No interruption"
            },
            "Url": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "waf-bytematchset-bytematchtuples-fieldtomatch-1-properties": {
            "Data": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {}
        },
        "waf-bytematchset-bytematchtuples-fieldtomatch-properties": {
            "Data": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {}
        },
        "waf-bytematchset-bytematchtuples-properties": {
            "FieldToMatch": {
                "Required": "Yes",
                "Type": "FieldToMatch",
                "UpdateRequires": "No interruption"
            },
            "PositionalConstraint": {},
            "TargetString": {},
            "TargetStringBase64": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TextTransformation": {}
        },
        "waf-ipset-ipsetdescriptors-properties": {
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "IPV4",
                    "IPV6"
                ],
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "waf-rule-predicates-properties": {
            "DataId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "Negated": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ByteMatch",
                    "GeoMatch",
                    "IPMatch",
                    "RegexMatch",
                    "SizeConstraint",
                    "SqlInjectionMatch",
                    "XssMatch"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "waf-sizeconstraintset-sizeconstraint-fieldtomatch-properties": {
            "Data": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {}
        },
        "waf-sizeconstraintset-sizeconstraint-properties": {
            "ComparisonOperator": {
                "ComparisonOperator`  <a name=\"cfn-waf-sizeconstraintset-sizeconstraint-comparisonoperator\"></a>\nThe type of comparison you want AWS WAF to perform\\. AWS WAF uses this in combination with the provided `Size` and `FieldToMatch` to build an expression in the form of \"`Size` `ComparisonOperator` size in bytes of `FieldToMatch`\"\\. If that expression is true, the `SizeConstraint` is considered to match\\.  \n **EQ*": "Used to test if the `Size` is equal to the size of the `FieldToMatch`   \n **NE*",
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "EQ",
                    "GE",
                    "GT",
                    "LE",
                    "LT",
                    "NE"
                ],
                "UpdateRequires": "No interruption"
            },
            "FieldToMatch": {
                "Required": "Yes",
                "Type": "FieldToMatch",
                "UpdateRequires": "No interruption"
            },
            "Size": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "TextTransformation": {}
        },
        "waf-sqlinjectionmatchset-sqlinjectionmatchtuples-properties": {
            "FieldToMatch": {
                "Required": "Yes",
                "Type": "FieldToMatch",
                "UpdateRequires": "No interruption"
            },
            "TextTransformation": {}
        },
        "waf-webacl-action-properties": {
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ALLOW",
                    "BLOCK",
                    "COUNT"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "waf-webacl-rules-properties": {
            "Action": {
                "Required": "No",
                "Type": "WafAction",
                "UpdateRequires": "No interruption"
            },
            "Priority": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "RuleId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            }
        },
        "waf-xssmatchset-xssmatchtuple-fieldtomatch-properties": {
            "Data": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {}
        },
        "waf-xssmatchset-xssmatchtuple-properties": {
            "FieldToMatch": {
                "Required": "Yes",
                "Type": "FieldToMatch",
                "UpdateRequires": "No interruption"
            },
            "TextTransformation": {}
        },
        "wafregional-bytematchset-bytematchtuple-properties": {
            "FieldToMatch": {
                "Required": "Yes",
                "Type": "FieldToMatch",
                "UpdateRequires": "No interruption"
            },
            "PositionalConstraint": {},
            "TargetString": {},
            "TargetStringBase64": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "TextTransformation": {}
        },
        "wafregional-bytematchset-fieldtomatch-properties": {
            "Data": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {}
        },
        "wafregional-geomatchset-geomatchconstraint-properties": {
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "Country"
                ],
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "AD",
                    "AE",
                    "AF",
                    "AG",
                    "AI",
                    "AL",
                    "AM",
                    "AO",
                    "AQ",
                    "AR",
                    "AS",
                    "AT",
                    "AU",
                    "AW",
                    "AX",
                    "AZ",
                    "BA",
                    "BB",
                    "BD",
                    "BE",
                    "BF",
                    "BG",
                    "BH",
                    "BI",
                    "BJ",
                    "BL",
                    "BM",
                    "BN",
                    "BO",
                    "BQ",
                    "BR",
                    "BS",
                    "BT",
                    "BV",
                    "BW",
                    "BY",
                    "BZ",
                    "CA",
                    "CC",
                    "CD",
                    "CF",
                    "CG",
                    "CH",
                    "CI",
                    "CK",
                    "CL",
                    "CM",
                    "CN",
                    "CO",
                    "CR",
                    "CU",
                    "CV",
                    "CW",
                    "CX",
                    "CY",
                    "CZ",
                    "DE",
                    "DJ",
                    "DK",
                    "DM",
                    "DO",
                    "DZ",
                    "EC",
                    "EE",
                    "EG",
                    "EH",
                    "ER",
                    "ES",
                    "ET",
                    "FI",
                    "FJ",
                    "FK",
                    "FM",
                    "FO",
                    "FR",
                    "GA",
                    "GB",
                    "GD",
                    "GE",
                    "GF",
                    "GG",
                    "GH",
                    "GI",
                    "GL",
                    "GM",
                    "GN",
                    "GP",
                    "GQ",
                    "GR",
                    "GS",
                    "GT",
                    "GU",
                    "GW",
                    "GY",
                    "HK",
                    "HM",
                    "HN",
                    "HR",
                    "HT",
                    "HU",
                    "ID",
                    "IE",
                    "IL",
                    "IM",
                    "IN",
                    "IO",
                    "IQ",
                    "IR",
                    "IS",
                    "IT",
                    "JE",
                    "JM",
                    "JO",
                    "JP",
                    "KE",
                    "KG",
                    "KH",
                    "KI",
                    "KM",
                    "KN",
                    "KP",
                    "KR",
                    "KW",
                    "KY",
                    "KZ",
                    "LA",
                    "LB",
                    "LC",
                    "LI",
                    "LK",
                    "LR",
                    "LS",
                    "LT",
                    "LU",
                    "LV",
                    "LY",
                    "MA",
                    "MC",
                    "MD",
                    "ME",
                    "MF",
                    "MG",
                    "MH",
                    "MK",
                    "ML",
                    "MM",
                    "MN",
                    "MO",
                    "MP",
                    "MQ",
                    "MR",
                    "MS",
                    "MT",
                    "MU",
                    "MV",
                    "MW",
                    "MX",
                    "MY",
                    "MZ",
                    "NA",
                    "NC",
                    "NE",
                    "NF",
                    "NG",
                    "NI",
                    "NL",
                    "NO",
                    "NP",
                    "NR",
                    "NU",
                    "NZ",
                    "OM",
                    "PA",
                    "PE",
                    "PF",
                    "PG",
                    "PH",
                    "PK",
                    "PL",
                    "PM",
                    "PN",
                    "PR",
                    "PS",
                    "PT",
                    "PW",
                    "PY",
                    "QA",
                    "RE",
                    "RO",
                    "RS",
                    "RU",
                    "RW",
                    "SA",
                    "SB",
                    "SC",
                    "SD",
                    "SE",
                    "SG",
                    "SH",
                    "SI",
                    "SJ",
                    "SK",
                    "SL",
                    "SM",
                    "SN",
                    "SO",
                    "SR",
                    "SS",
                    "ST",
                    "SV",
                    "SX",
                    "SY",
                    "SZ",
                    "TC",
                    "TD",
                    "TF",
                    "TG",
                    "TH",
                    "TJ",
                    "TK",
                    "TL",
                    "TM",
                    "TN",
                    "TO",
                    "TR",
                    "TT",
                    "TV",
                    "TW",
                    "TZ",
                    "UA",
                    "UG",
                    "UM",
                    "US",
                    "UY",
                    "UZ",
                    "VA",
                    "VC",
                    "VE",
                    "VG",
                    "VI",
                    "VN",
                    "VU",
                    "WF",
                    "WS",
                    "YE",
                    "YT",
                    "ZA",
                    "ZM",
                    "ZW"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "wafregional-ipset-ipsetdescriptor-properties": {
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "IPV4",
                    "IPV6"
                ],
                "UpdateRequires": "No interruption"
            },
            "Value": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "wafregional-ratebasedrule-predicate-properties": {
            "DataId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "Negated": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ByteMatch",
                    "GeoMatch",
                    "IPMatch",
                    "RegexMatch",
                    "SizeConstraint",
                    "SqlInjectionMatch",
                    "XssMatch"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "wafregional-rule-predicate-properties": {
            "DataId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            },
            "Negated": {
                "AllowedValues": [
                    "True",
                    "False"
                ]
            },
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "ByteMatch",
                    "GeoMatch",
                    "IPMatch",
                    "RegexMatch",
                    "SizeConstraint",
                    "SqlInjectionMatch",
                    "XssMatch"
                ],
                "UpdateRequires": "No interruption"
            }
        },
        "wafregional-sizeconstraintset-fieldtomatch-properties": {
            "Data": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {}
        },
        "wafregional-sizeconstraintset-sizeconstraint-properties": {
            "ComparisonOperator": {
                "ComparisonOperator`  <a name=\"cfn-wafregional-sizeconstraintset-sizeconstraint-comparisonoperator\"></a>\nThe type of comparison you want AWS WAF to perform\\. AWS WAF uses this in combination with the provided `Size` and `FieldToMatch` to build an expression in the form of \"`Size` `ComparisonOperator` size in bytes of `FieldToMatch`\"\\. If that expression is true, the `SizeConstraint` is considered to match\\.  \n **EQ*": "Used to test if the `Size` is equal to the size of the `FieldToMatch`   \n **NE*",
                "Required": "Yes",
                "Type": "String",
                "AllowedValues": [
                    "EQ",
                    "GE",
                    "GT",
                    "LE",
                    "LT",
                    "NE"
                ],
                "UpdateRequires": "No interruption"
            },
            "FieldToMatch": {
                "Required": "Yes",
                "Type": "FieldToMatch",
                "UpdateRequires": "No interruption"
            },
            "Size": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "TextTransformation": {}
        },
        "wafregional-sqlinjectionmatchset-fieldtomatch-properties": {
            "Data": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {}
        },
        "wafregional-sqlinjectionmatchset-sqlinjectionmatchtuple-properties": {
            "FieldToMatch": {
                "Required": "Yes",
                "Type": "FieldToMatch",
                "UpdateRequires": "No interruption"
            },
            "TextTransformation": {}
        },
        "wafregional-webacl-action-properties": {
            "Type": {
                "Required": "Yes",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "wafregional-webacl-rule-properties": {
            "Action": {
                "Required": "Yes",
                "Type": "Action",
                "UpdateRequires": "No interruption"
            },
            "Priority": {
                "Required": "Yes",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "RuleId": {
                "Required": "Yes",
                "Type": "String",
                "Minimum": "1",
                "Maximum": "128",
                "UpdateRequires": "No interruption"
            }
        },
        "wafregional-xssmatchset-fieldtomatch-properties": {
            "Data": {
                "Required": "Conditional",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Type": {}
        },
        "wafregional-xssmatchset-xssmatchtuple-properties": {
            "FieldToMatch": {
                "Required": "Yes",
                "Type": "FieldToMatch",
                "UpdateRequires": "No interruption"
            },
            "TextTransformation": {}
        },
        "waitcondition-properties": {
            "Count": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "Handle": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            },
            "Timeout": {
                "Required": "No",
                "Type": "String",
                "UpdateRequires": "No interruption"
            }
        },
        "workspaces-workspace-workspaceproperties": {
            "ComputeTypeName": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "GRAPHICS",
                    "GRAPHICSPRO",
                    "PERFORMANCE",
                    "POWER",
                    "POWERPRO",
                    "STANDARD",
                    "VALUE"
                ],
                "UpdateRequires": "No interruption"
            },
            "RootVolumeSizeGib": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "RunningMode": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "ALWAYS_ON",
                    "AUTO_STOP"
                ],
                "UpdateRequires": "No interruption"
            },
            "RunningModeAutoStopTimeoutInMinutes": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "UserVolumeSizeGib": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        },
        "workspaces-workspace-workspaceproperties-properties": {
            "ComputeTypeName": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "GRAPHICS",
                    "GRAPHICSPRO",
                    "PERFORMANCE",
                    "POWER",
                    "POWERPRO",
                    "STANDARD",
                    "VALUE"
                ],
                "UpdateRequires": "No interruption"
            },
            "RootVolumeSizeGib": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "RunningMode": {
                "Required": "No",
                "Type": "String",
                "AllowedValues": [
                    "ALWAYS_ON",
                    "AUTO_STOP"
                ],
                "UpdateRequires": "No interruption"
            },
            "RunningModeAutoStopTimeoutInMinutes": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            },
            "UserVolumeSizeGib": {
                "Required": "No",
                "Type": "Integer",
                "UpdateRequires": "No interruption"
            }
        }
    },
    "Docs2Resource": {
        "aws-amazonmq-broker": "AWS::AmazonMQ::Broker",
        "aws-amazonmq-configuration": "AWS::AmazonMQ::Configuration",
        "aws-amazonmq-configurationassociation": "AWS::AmazonMQ::ConfigurationAssociation",
        "aws-amplify-app": "AWS::Amplify::App",
        "aws-amplify-branch": "AWS::Amplify::Branch",
        "aws-amplify-domain": "AWS::Amplify::Domain",
        "aws-apigateway-account": "AWS::ApiGateway::Account",
        "aws-apigateway-apikey": "AWS::ApiGateway::ApiKey",
        "aws-apigateway-authorizer": "AWS::ApiGateway::Authorizer",
        "aws-apigateway-basepathmapping": "AWS::ApiGateway::BasePathMapping",
        "aws-apigateway-clientcertificate": "AWS::ApiGateway::ClientCertificate",
        "aws-apigateway-deployment": "AWS::ApiGateway::Deployment",
        "aws-apigateway-documentationpart": "AWS::ApiGateway::DocumentationPart",
        "aws-apigateway-documentationversion": "AWS::ApiGateway::DocumentationVersion",
        "aws-apigateway-domainname": "AWS::ApiGateway::DomainName",
        "aws-apigateway-gatewayresponse": "AWS::ApiGateway::GatewayResponse",
        "aws-apigateway-method": "AWS::ApiGateway::Method",
        "aws-apigateway-model": "AWS::ApiGateway::Model",
        "aws-apigateway-requestvalidator": "AWS::ApiGateway::RequestValidator",
        "aws-apigateway-resource": "AWS::ApiGateway::Resource",
        "aws-apigateway-restapi": "AWS::ApiGateway::RestApi",
        "aws-apigateway-stage": "AWS::ApiGateway::Stage",
        "aws-apigateway-usageplan": "AWS::ApiGateway::UsagePlan",
        "aws-apigateway-usageplankey": "AWS::ApiGateway::UsagePlanKey",
        "aws-apigateway-vpclink": "AWS::ApiGateway::VpcLink",
        "aws-apigatewayv2-api": "AWS::ApiGatewayV2::Api",
        "aws-apigatewayv2-apimapping": "AWS::ApiGatewayV2::ApiMapping",
        "aws-apigatewayv2-authorizer": "AWS::ApiGatewayV2::Authorizer",
        "aws-apigatewayv2-deployment": "AWS::ApiGatewayV2::Deployment",
        "aws-apigatewayv2-domainname": "AWS::ApiGatewayV2::DomainName",
        "aws-apigatewayv2-integration": "AWS::ApiGatewayV2::Integration",
        "aws-apigatewayv2-integrationresponse": "AWS::ApiGatewayV2::IntegrationResponse",
        "aws-apigatewayv2-model": "AWS::ApiGatewayV2::Model",
        "aws-apigatewayv2-route": "AWS::ApiGatewayV2::Route",
        "aws-apigatewayv2-routeresponse": "AWS::ApiGatewayV2::RouteResponse",
        "aws-apigatewayv2-stage": "AWS::ApiGatewayV2::Stage",
        "aws-applicationautoscaling-scalabletarget": "AWS::ApplicationAutoScaling::ScalableTarget",
        "aws-applicationautoscaling-scalingpolicy": "AWS::ApplicationAutoScaling::ScalingPolicy",
        "aws-appmesh-mesh": "AWS::AppMesh::Mesh",
        "aws-appmesh-route": "AWS::AppMesh::Route",
        "aws-appmesh-virtualnode": "AWS::AppMesh::VirtualNode",
        "aws-appmesh-virtualrouter": "AWS::AppMesh::VirtualRouter",
        "aws-appmesh-virtualservice": "AWS::AppMesh::VirtualService",
        "aws-appstream-directoryconfig": "AWS::AppStream::DirectoryConfig",
        "aws-appstream-fleet": "AWS::AppStream::Fleet",
        "aws-appstream-imagebuilder": "AWS::AppStream::ImageBuilder",
        "aws-appstream-stack": "AWS::AppStream::Stack",
        "aws-appstream-stackfleetassociation": "AWS::AppStream::StackFleetAssociation",
        "aws-appstream-stackuserassociation": "AWS::AppStream::StackUserAssociation",
        "aws-appstream-user": "AWS::AppStream::User",
        "aws-appsync-apikey": "AWS::AppSync::ApiKey",
        "aws-appsync-datasource": "AWS::AppSync::DataSource",
        "aws-appsync-functionconfiguration": "AWS::AppSync::FunctionConfiguration",
        "aws-appsync-graphqlapi": "AWS::AppSync::GraphQLApi",
        "aws-appsync-graphqlschema": "AWS::AppSync::GraphQLSchema",
        "aws-appsync-resolver": "AWS::AppSync::Resolver",
        "aws-athena-namedquery": "AWS::Athena::NamedQuery",
        "aws-autoscaling-autoscalinggroup": "AWS::AutoScaling::AutoScalingGroup",
        "aws-autoscaling-launchconfiguration": "AWS::AutoScaling::LaunchConfiguration",
        "aws-autoscaling-lifecyclehook": "AWS::AutoScaling::LifecycleHook",
        "aws-autoscaling-scalingpolicy": "AWS::AutoScaling::ScalingPolicy",
        "aws-autoscaling-scheduledaction": "AWS::AutoScaling::ScheduledAction",
        "aws-autoscalingplans-scalingplan": "AWS::AutoScalingPlans::ScalingPlan",
        "aws-backup-backupplan": "AWS::Backup::BackupPlan",
        "aws-backup-backupselection": "AWS::Backup::BackupSelection",
        "aws-backup-backupvault": "AWS::Backup::BackupVault",
        "aws-batch-computeenvironment": "AWS::Batch::ComputeEnvironment",
        "aws-batch-jobdefinition": "AWS::Batch::JobDefinition",
        "aws-batch-jobqueue": "AWS::Batch::JobQueue",
        "aws-budgets-budget": "AWS::Budgets::Budget",
        "aws-certificatemanager-certificate": "AWS::CertificateManager::Certificate",
        "aws-cloud9-environmentec2": "AWS::Cloud9::EnvironmentEC2",
        "aws-cloudformation-customresource": "AWS::CloudFormation::CustomResource",
        "aws-cloudformation-macro": "AWS::CloudFormation::Macro",
        "aws-cloudformation-stack": "AWS::CloudFormation::Stack",
        "aws-cloudformation-waitcondition": "AWS::CloudFormation::WaitCondition",
        "aws-cloudformation-waitconditionhandle": "AWS::CloudFormation::WaitConditionHandle",
        "aws-cloudfront-cloudfrontoriginaccessidentity": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
        "aws-cloudfront-distribution": "AWS::CloudFront::Distribution",
        "aws-cloudfront-streamingdistribution": "AWS::CloudFront::StreamingDistribution",
        "aws-cloudtrail-trail": "AWS::CloudTrail::Trail",
        "aws-cloudwatch-alarm": "AWS::CloudWatch::Alarm",
        "aws-cloudwatch-anomalydetector": "AWS::CloudWatch::AnomalyDetector",
        "aws-cloudwatch-dashboard": "AWS::CloudWatch::Dashboard",
        "aws-codebuild-project": "AWS::CodeBuild::Project",
        "aws-codebuild-sourcecredential": "AWS::CodeBuild::SourceCredential",
        "aws-codecommit-repository": "AWS::CodeCommit::Repository",
        "aws-codedeploy-application": "AWS::CodeDeploy::Application",
        "aws-codedeploy-deploymentconfig": "AWS::CodeDeploy::DeploymentConfig",
        "aws-codedeploy-deploymentgroup": "AWS::CodeDeploy::DeploymentGroup",
        "aws-codepipeline-customactiontype": "AWS::CodePipeline::CustomActionType",
        "aws-codepipeline-pipeline": "AWS::CodePipeline::Pipeline",
        "aws-codepipeline-webhook": "AWS::CodePipeline::Webhook",
        "aws-codestar-githubrepository": "AWS::CodeStar::GitHubRepository",
        "aws-cognito-identitypool": "AWS::Cognito::IdentityPool",
        "aws-cognito-identitypoolroleattachment": "AWS::Cognito::IdentityPoolRoleAttachment",
        "aws-cognito-userpool": "AWS::Cognito::UserPool",
        "aws-cognito-userpoolclient": "AWS::Cognito::UserPoolClient",
        "aws-cognito-userpoolgroup": "AWS::Cognito::UserPoolGroup",
        "aws-cognito-userpooluser": "AWS::Cognito::UserPoolUser",
        "aws-cognito-userpoolusertogroupattachment": "AWS::Cognito::UserPoolUserToGroupAttachment",
        "aws-config-aggregationauthorization": "AWS::Config::AggregationAuthorization",
        "aws-config-configrule": "AWS::Config::ConfigRule",
        "aws-config-configurationaggregator": "AWS::Config::ConfigurationAggregator",
        "aws-config-configurationrecorder": "AWS::Config::ConfigurationRecorder",
        "aws-config-deliverychannel": "AWS::Config::DeliveryChannel",
        "aws-config-organizationconfigrule": "AWS::Config::OrganizationConfigRule",
        "aws-config-remediationconfiguration": "AWS::Config::RemediationConfiguration",
        "aws-datapipeline-pipeline": "AWS::DataPipeline::Pipeline",
        "aws-dax-cluster": "AWS::DAX::Cluster",
        "aws-dax-parametergroup": "AWS::DAX::ParameterGroup",
        "aws-dax-subnetgroup": "AWS::DAX::SubnetGroup",
        "aws-directoryservice-microsoftad": "AWS::DirectoryService::MicrosoftAD",
        "aws-directoryservice-simplead": "AWS::DirectoryService::SimpleAD",
        "aws-dlm-lifecyclepolicy": "AWS::DLM::LifecyclePolicy",
        "aws-dms-certificate": "AWS::DMS::Certificate",
        "aws-dms-endpoint": "AWS::DMS::Endpoint",
        "aws-dms-eventsubscription": "AWS::DMS::EventSubscription",
        "aws-dms-replicationinstance": "AWS::DMS::ReplicationInstance",
        "aws-dms-replicationsubnetgroup": "AWS::DMS::ReplicationSubnetGroup",
        "aws-dms-replicationtask": "AWS::DMS::ReplicationTask",
        "aws-docdb-dbcluster": "AWS::DocDB::DBCluster",
        "aws-docdb-dbclusterparametergroup": "AWS::DocDB::DBClusterParameterGroup",
        "aws-docdb-dbinstance": "AWS::DocDB::DBInstance",
        "aws-docdb-dbsubnetgroup": "AWS::DocDB::DBSubnetGroup",
        "aws-dynamodb-table": "AWS::DynamoDB::Table",
        "aws-ec2-capacityreservation": "AWS::EC2::CapacityReservation",
        "aws-ec2-clientvpnauthorizationrule": "AWS::EC2::ClientVpnAuthorizationRule",
        "aws-ec2-clientvpnendpoint": "AWS::EC2::ClientVpnEndpoint",
        "aws-ec2-clientvpnroute": "AWS::EC2::ClientVpnRoute",
        "aws-ec2-clientvpntargetnetworkassociation": "AWS::EC2::ClientVpnTargetNetworkAssociation",
        "aws-ec2-customergateway": "AWS::EC2::CustomerGateway",
        "aws-ec2-dhcpoptions": "AWS::EC2::DHCPOptions",
        "aws-ec2-ec2fleet": "AWS::EC2::EC2Fleet",
        "aws-ec2-eip": "AWS::EC2::EIP",
        "aws-ec2-eipassociation": "AWS::EC2::EIPAssociation",
        "aws-ec2-egressonlyinternetgateway": "AWS::EC2::EgressOnlyInternetGateway",
        "aws-ec2-flowlog": "AWS::EC2::FlowLog",
        "aws-ec2-host": "AWS::EC2::Host",
        "aws-ec2-instance": "AWS::EC2::Instance",
        "aws-ec2-internetgateway": "AWS::EC2::InternetGateway",
        "aws-ec2-launchtemplate": "AWS::EC2::LaunchTemplate",
        "aws-ec2-natgateway": "AWS::EC2::NatGateway",
        "aws-ec2-networkacl": "AWS::EC2::NetworkAcl",
        "aws-ec2-networkaclentry": "AWS::EC2::NetworkAclEntry",
        "aws-ec2-networkinterface": "AWS::EC2::NetworkInterface",
        "aws-ec2-networkinterfaceattachment": "AWS::EC2::NetworkInterfaceAttachment",
        "aws-ec2-networkinterfacepermission": "AWS::EC2::NetworkInterfacePermission",
        "aws-ec2-placementgroup": "AWS::EC2::PlacementGroup",
        "aws-ec2-route": "AWS::EC2::Route",
        "aws-ec2-routetable": "AWS::EC2::RouteTable",
        "aws-ec2-securitygroup": "AWS::EC2::SecurityGroup",
        "aws-ec2-securitygroupegress": "AWS::EC2::SecurityGroupEgress",
        "aws-ec2-securitygroupingress": "AWS::EC2::SecurityGroupIngress",
        "aws-ec2-spotfleet": "AWS::EC2::SpotFleet",
        "aws-ec2-subnet": "AWS::EC2::Subnet",
        "aws-ec2-subnetcidrblock": "AWS::EC2::SubnetCidrBlock",
        "aws-ec2-subnetnetworkaclassociation": "AWS::EC2::SubnetNetworkAclAssociation",
        "aws-ec2-subnetroutetableassociation": "AWS::EC2::SubnetRouteTableAssociation",
        "aws-ec2-transitgateway": "AWS::EC2::TransitGateway",
        "aws-ec2-transitgatewayattachment": "AWS::EC2::TransitGatewayAttachment",
        "aws-ec2-transitgatewayroute": "AWS::EC2::TransitGatewayRoute",
        "aws-ec2-transitgatewayroutetable": "AWS::EC2::TransitGatewayRouteTable",
        "aws-ec2-transitgatewayroutetableassociation": "AWS::EC2::TransitGatewayRouteTableAssociation",
        "aws-ec2-transitgatewayroutetablepropagation": "AWS::EC2::TransitGatewayRouteTablePropagation",
        "aws-ec2-vpc": "AWS::EC2::VPC",
        "aws-ec2-vpccidrblock": "AWS::EC2::VPCCidrBlock",
        "aws-ec2-vpcdhcpoptionsassociation": "AWS::EC2::VPCDHCPOptionsAssociation",
        "aws-ec2-vpcendpoint": "AWS::EC2::VPCEndpoint",
        "aws-ec2-vpcendpointconnectionnotification": "AWS::EC2::VPCEndpointConnectionNotification",
        "aws-ec2-vpcendpointservice": "AWS::EC2::VPCEndpointService",
        "aws-ec2-vpcendpointservicepermissions": "AWS::EC2::VPCEndpointServicePermissions",
        "aws-ec2-vpcgatewayattachment": "AWS::EC2::VPCGatewayAttachment",
        "aws-ec2-vpcpeeringconnection": "AWS::EC2::VPCPeeringConnection",
        "aws-ec2-vpnconnection": "AWS::EC2::VPNConnection",
        "aws-ec2-vpnconnectionroute": "AWS::EC2::VPNConnectionRoute",
        "aws-ec2-vpngateway": "AWS::EC2::VPNGateway",
        "aws-ec2-vpngatewayroutepropagation": "AWS::EC2::VPNGatewayRoutePropagation",
        "aws-ec2-volume": "AWS::EC2::Volume",
        "aws-ec2-volumeattachment": "AWS::EC2::VolumeAttachment",
        "aws-ecr-repository": "AWS::ECR::Repository",
        "aws-ecs-cluster": "AWS::ECS::Cluster",
        "aws-ecs-service": "AWS::ECS::Service",
        "aws-ecs-taskdefinition": "AWS::ECS::TaskDefinition",
        "aws-efs-filesystem": "AWS::EFS::FileSystem",
        "aws-efs-mounttarget": "AWS::EFS::MountTarget",
        "aws-eks-cluster": "AWS::EKS::Cluster",
        "aws-elasticache-cachecluster": "AWS::ElastiCache::CacheCluster",
        "aws-elasticache-parametergroup": "AWS::ElastiCache::ParameterGroup",
        "aws-elasticache-replicationgroup": "AWS::ElastiCache::ReplicationGroup",
        "aws-elasticache-securitygroup": "AWS::ElastiCache::SecurityGroup",
        "aws-elasticache-securitygroupingress": "AWS::ElastiCache::SecurityGroupIngress",
        "aws-elasticache-subnetgroup": "AWS::ElastiCache::SubnetGroup",
        "aws-elasticbeanstalk-application": "AWS::ElasticBeanstalk::Application",
        "aws-elasticbeanstalk-applicationversion": "AWS::ElasticBeanstalk::ApplicationVersion",
        "aws-elasticbeanstalk-configurationtemplate": "AWS::ElasticBeanstalk::ConfigurationTemplate",
        "aws-elasticbeanstalk-environment": "AWS::ElasticBeanstalk::Environment",
        "aws-elasticloadbalancing-loadbalancer": "AWS::ElasticLoadBalancing::LoadBalancer",
        "aws-elasticloadbalancingv2-listener": "AWS::ElasticLoadBalancingV2::Listener",
        "aws-elasticloadbalancingv2-listenercertificate": "AWS::ElasticLoadBalancingV2::ListenerCertificate",
        "aws-elasticloadbalancingv2-listenerrule": "AWS::ElasticLoadBalancingV2::ListenerRule",
        "aws-elasticloadbalancingv2-loadbalancer": "AWS::ElasticLoadBalancingV2::LoadBalancer",
        "aws-elasticloadbalancingv2-targetgroup": "AWS::ElasticLoadBalancingV2::TargetGroup",
        "aws-elasticsearch-domain": "AWS::Elasticsearch::Domain",
        "aws-emr-cluster": "AWS::EMR::Cluster",
        "aws-emr-instancefleetconfig": "AWS::EMR::InstanceFleetConfig",
        "aws-emr-instancegroupconfig": "AWS::EMR::InstanceGroupConfig",
        "aws-emr-securityconfiguration": "AWS::EMR::SecurityConfiguration",
        "aws-emr-step": "AWS::EMR::Step",
        "aws-events-eventbuspolicy": "AWS::Events::EventBusPolicy",
        "aws-events-rule": "AWS::Events::Rule",
        "aws-fsx-filesystem": "AWS::FSx::FileSystem",
        "aws-gamelift-alias": "AWS::GameLift::Alias",
        "aws-gamelift-build": "AWS::GameLift::Build",
        "aws-gamelift-fleet": "AWS::GameLift::Fleet",
        "aws-glue-classifier": "AWS::Glue::Classifier",
        "aws-glue-connection": "AWS::Glue::Connection",
        "aws-glue-crawler": "AWS::Glue::Crawler",
        "aws-glue-database": "AWS::Glue::Database",
        "aws-glue-datacatalogencryptionsettings": "AWS::Glue::DataCatalogEncryptionSettings",
        "aws-glue-devendpoint": "AWS::Glue::DevEndpoint",
        "aws-glue-job": "AWS::Glue::Job",
        "aws-glue-mltransform": "AWS::Glue::MLTransform",
        "aws-glue-partition": "AWS::Glue::Partition",
        "aws-glue-securityconfiguration": "AWS::Glue::SecurityConfiguration",
        "aws-glue-table": "AWS::Glue::Table",
        "aws-glue-trigger": "AWS::Glue::Trigger",
        "aws-greengrass-connectordefinition": "AWS::Greengrass::ConnectorDefinition",
        "aws-greengrass-connectordefinitionversion": "AWS::Greengrass::ConnectorDefinitionVersion",
        "aws-greengrass-coredefinition": "AWS::Greengrass::CoreDefinition",
        "aws-greengrass-coredefinitionversion": "AWS::Greengrass::CoreDefinitionVersion",
        "aws-greengrass-devicedefinition": "AWS::Greengrass::DeviceDefinition",
        "aws-greengrass-devicedefinitionversion": "AWS::Greengrass::DeviceDefinitionVersion",
        "aws-greengrass-functiondefinition": "AWS::Greengrass::FunctionDefinition",
        "aws-greengrass-functiondefinitionversion": "AWS::Greengrass::FunctionDefinitionVersion",
        "aws-greengrass-group": "AWS::Greengrass::Group",
        "aws-greengrass-groupversion": "AWS::Greengrass::GroupVersion",
        "aws-greengrass-loggerdefinition": "AWS::Greengrass::LoggerDefinition",
        "aws-greengrass-loggerdefinitionversion": "AWS::Greengrass::LoggerDefinitionVersion",
        "aws-greengrass-resourcedefinition": "AWS::Greengrass::ResourceDefinition",
        "aws-greengrass-resourcedefinitionversion": "AWS::Greengrass::ResourceDefinitionVersion",
        "aws-greengrass-subscriptiondefinition": "AWS::Greengrass::SubscriptionDefinition",
        "aws-greengrass-subscriptiondefinitionversion": "AWS::Greengrass::SubscriptionDefinitionVersion",
        "aws-guardduty-detector": "AWS::GuardDuty::Detector",
        "aws-guardduty-filter": "AWS::GuardDuty::Filter",
        "aws-guardduty-ipset": "AWS::GuardDuty::IPSet",
        "aws-guardduty-master": "AWS::GuardDuty::Master",
        "aws-guardduty-member": "AWS::GuardDuty::Member",
        "aws-guardduty-threatintelset": "AWS::GuardDuty::ThreatIntelSet",
        "aws-iam-accesskey": "AWS::IAM::AccessKey",
        "aws-iam-group": "AWS::IAM::Group",
        "aws-iam-instanceprofile": "AWS::IAM::InstanceProfile",
        "aws-iam-managedpolicy": "AWS::IAM::ManagedPolicy",
        "aws-iam-policy": "AWS::IAM::Policy",
        "aws-iam-role": "AWS::IAM::Role",
        "aws-iam-servicelinkedrole": "AWS::IAM::ServiceLinkedRole",
        "aws-iam-user": "AWS::IAM::User",
        "aws-iam-usertogroupaddition": "AWS::IAM::UserToGroupAddition",
        "aws-inspector-assessmenttarget": "AWS::Inspector::AssessmentTarget",
        "aws-inspector-assessmenttemplate": "AWS::Inspector::AssessmentTemplate",
        "aws-inspector-resourcegroup": "AWS::Inspector::ResourceGroup",
        "aws-iot-certificate": "AWS::IoT::Certificate",
        "aws-iot-policy": "AWS::IoT::Policy",
        "aws-iot-policyprincipalattachment": "AWS::IoT::PolicyPrincipalAttachment",
        "aws-iot-thing": "AWS::IoT::Thing",
        "aws-iot-thingprincipalattachment": "AWS::IoT::ThingPrincipalAttachment",
        "aws-iot-topicrule": "AWS::IoT::TopicRule",
        "aws-iot1click-device": "AWS::IoT1Click::Device",
        "aws-iot1click-placement": "AWS::IoT1Click::Placement",
        "aws-iot1click-project": "AWS::IoT1Click::Project",
        "aws-iotanalytics-channel": "AWS::IoTAnalytics::Channel",
        "aws-iotanalytics-dataset": "AWS::IoTAnalytics::Dataset",
        "aws-iotanalytics-datastore": "AWS::IoTAnalytics::Datastore",
        "aws-iotanalytics-pipeline": "AWS::IoTAnalytics::Pipeline",
        "aws-iotevents-detectormodel": "AWS::IoTEvents::DetectorModel",
        "aws-iotevents-input": "AWS::IoTEvents::Input",
        "aws-iotthingsgraph-flowtemplate": "AWS::IoTThingsGraph::FlowTemplate",
        "aws-kinesis-stream": "AWS::Kinesis::Stream",
        "aws-kinesis-streamconsumer": "AWS::Kinesis::StreamConsumer",
        "aws-kinesisanalytics-application": "AWS::KinesisAnalytics::Application",
        "aws-kinesisanalytics-applicationoutput": "AWS::KinesisAnalytics::ApplicationOutput",
        "aws-kinesisanalytics-applicationreferencedatasource": "AWS::KinesisAnalytics::ApplicationReferenceDataSource",
        "aws-kinesisanalyticsv2-application": "AWS::KinesisAnalyticsV2::Application",
        "aws-kinesisanalyticsv2-applicationcloudwatchloggingoption": "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption",
        "aws-kinesisanalyticsv2-applicationoutput": "AWS::KinesisAnalyticsV2::ApplicationOutput",
        "aws-kinesisanalyticsv2-applicationreferencedatasource": "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource",
        "aws-kinesisfirehose-deliverystream": "AWS::KinesisFirehose::DeliveryStream",
        "aws-kms-alias": "AWS::KMS::Alias",
        "aws-kms-key": "AWS::KMS::Key",
        "aws-lakeformation-datalakesettings": "AWS::LakeFormation::DataLakeSettings",
        "aws-lakeformation-permissions": "AWS::LakeFormation::Permissions",
        "aws-lakeformation-resource": "AWS::LakeFormation::Resource",
        "aws-lambda-alias": "AWS::Lambda::Alias",
        "aws-lambda-eventsourcemapping": "AWS::Lambda::EventSourceMapping",
        "aws-lambda-function": "AWS::Lambda::Function",
        "aws-lambda-layerversion": "AWS::Lambda::LayerVersion",
        "aws-lambda-layerversionpermission": "AWS::Lambda::LayerVersionPermission",
        "aws-lambda-permission": "AWS::Lambda::Permission",
        "aws-lambda-version": "AWS::Lambda::Version",
        "aws-logs-destination": "AWS::Logs::Destination",
        "aws-logs-loggroup": "AWS::Logs::LogGroup",
        "aws-logs-logstream": "AWS::Logs::LogStream",
        "aws-logs-metricfilter": "AWS::Logs::MetricFilter",
        "aws-logs-subscriptionfilter": "AWS::Logs::SubscriptionFilter",
        "aws-managedblockchain-member": "AWS::ManagedBlockchain::Member",
        "aws-managedblockchain-node": "AWS::ManagedBlockchain::Node",
        "aws-medialive-channel": "AWS::MediaLive::Channel",
        "aws-medialive-input": "AWS::MediaLive::Input",
        "aws-medialive-inputsecuritygroup": "AWS::MediaLive::InputSecurityGroup",
        "aws-mediastore-container": "AWS::MediaStore::Container",
        "aws-msk-cluster": "AWS::MSK::Cluster",
        "aws-neptune-dbcluster": "AWS::Neptune::DBCluster",
        "aws-neptune-dbclusterparametergroup": "AWS::Neptune::DBClusterParameterGroup",
        "aws-neptune-dbinstance": "AWS::Neptune::DBInstance",
        "aws-neptune-dbparametergroup": "AWS::Neptune::DBParameterGroup",
        "aws-neptune-dbsubnetgroup": "AWS::Neptune::DBSubnetGroup",
        "aws-opsworks-app": "AWS::OpsWorks::App",
        "aws-opsworks-elasticloadbalancerattachment": "AWS::OpsWorks::ElasticLoadBalancerAttachment",
        "aws-opsworks-instance": "AWS::OpsWorks::Instance",
        "aws-opsworks-layer": "AWS::OpsWorks::Layer",
        "aws-opsworks-stack": "AWS::OpsWorks::Stack",
        "aws-opsworks-userprofile": "AWS::OpsWorks::UserProfile",
        "aws-opsworks-volume": "AWS::OpsWorks::Volume",
        "aws-opsworkscm-server": "AWS::OpsWorksCM::Server",
        "aws-pinpoint-admchannel": "AWS::Pinpoint::ADMChannel",
        "aws-pinpoint-apnschannel": "AWS::Pinpoint::APNSChannel",
        "aws-pinpoint-apnssandboxchannel": "AWS::Pinpoint::APNSSandboxChannel",
        "aws-pinpoint-apnsvoipchannel": "AWS::Pinpoint::APNSVoipChannel",
        "aws-pinpoint-apnsvoipsandboxchannel": "AWS::Pinpoint::APNSVoipSandboxChannel",
        "aws-pinpoint-app": "AWS::Pinpoint::App",
        "aws-pinpoint-applicationsettings": "AWS::Pinpoint::ApplicationSettings",
        "aws-pinpoint-baiduchannel": "AWS::Pinpoint::BaiduChannel",
        "aws-pinpoint-campaign": "AWS::Pinpoint::Campaign",
        "aws-pinpoint-emailchannel": "AWS::Pinpoint::EmailChannel",
        "aws-pinpoint-eventstream": "AWS::Pinpoint::EventStream",
        "aws-pinpoint-gcmchannel": "AWS::Pinpoint::GCMChannel",
        "aws-pinpoint-smschannel": "AWS::Pinpoint::SMSChannel",
        "aws-pinpoint-segment": "AWS::Pinpoint::Segment",
        "aws-pinpoint-voicechannel": "AWS::Pinpoint::VoiceChannel",
        "aws-pinpointemail-configurationset": "AWS::PinpointEmail::ConfigurationSet",
        "aws-pinpointemail-configurationseteventdestination": "AWS::PinpointEmail::ConfigurationSetEventDestination",
        "aws-pinpointemail-dedicatedippool": "AWS::PinpointEmail::DedicatedIpPool",
        "aws-pinpointemail-identity": "AWS::PinpointEmail::Identity",
        "aws-qldb-ledger": "AWS::QLDB::Ledger",
        "aws-ram-resourceshare": "AWS::RAM::ResourceShare",
        "aws-rds-dbcluster": "AWS::RDS::DBCluster",
        "aws-rds-dbclusterparametergroup": "AWS::RDS::DBClusterParameterGroup",
        "aws-rds-dbinstance": "AWS::RDS::DBInstance",
        "aws-rds-dbparametergroup": "AWS::RDS::DBParameterGroup",
        "aws-rds-dbsecuritygroup": "AWS::RDS::DBSecurityGroup",
        "aws-rds-dbsecuritygroupingress": "AWS::RDS::DBSecurityGroupIngress",
        "aws-rds-dbsubnetgroup": "AWS::RDS::DBSubnetGroup",
        "aws-rds-eventsubscription": "AWS::RDS::EventSubscription",
        "aws-rds-optiongroup": "AWS::RDS::OptionGroup",
        "aws-redshift-cluster": "AWS::Redshift::Cluster",
        "aws-redshift-clusterparametergroup": "AWS::Redshift::ClusterParameterGroup",
        "aws-redshift-clustersecuritygroup": "AWS::Redshift::ClusterSecurityGroup",
        "aws-redshift-clustersecuritygroupingress": "AWS::Redshift::ClusterSecurityGroupIngress",
        "aws-redshift-clustersubnetgroup": "AWS::Redshift::ClusterSubnetGroup",
        "aws-robomaker-fleet": "AWS::RoboMaker::Fleet",
        "aws-robomaker-robot": "AWS::RoboMaker::Robot",
        "aws-robomaker-robotapplication": "AWS::RoboMaker::RobotApplication",
        "aws-robomaker-robotapplicationversion": "AWS::RoboMaker::RobotApplicationVersion",
        "aws-robomaker-simulationapplication": "AWS::RoboMaker::SimulationApplication",
        "aws-robomaker-simulationapplicationversion": "AWS::RoboMaker::SimulationApplicationVersion",
        "aws-route53-healthcheck": "AWS::Route53::HealthCheck",
        "aws-route53-hostedzone": "AWS::Route53::HostedZone",
        "aws-route53-recordset": "AWS::Route53::RecordSet",
        "aws-route53-recordsetgroup": "AWS::Route53::RecordSetGroup",
        "aws-route53resolver-resolverendpoint": "AWS::Route53Resolver::ResolverEndpoint",
        "aws-route53resolver-resolverrule": "AWS::Route53Resolver::ResolverRule",
        "aws-route53resolver-resolverruleassociation": "AWS::Route53Resolver::ResolverRuleAssociation",
        "aws-s3-bucket": "AWS::S3::Bucket",
        "aws-s3-bucketpolicy": "AWS::S3::BucketPolicy",
        "aws-sagemaker-coderepository": "AWS::SageMaker::CodeRepository",
        "aws-sagemaker-endpoint": "AWS::SageMaker::Endpoint",
        "aws-sagemaker-endpointconfig": "AWS::SageMaker::EndpointConfig",
        "aws-sagemaker-model": "AWS::SageMaker::Model",
        "aws-sagemaker-notebookinstance": "AWS::SageMaker::NotebookInstance",
        "aws-sagemaker-notebookinstancelifecycleconfig": "AWS::SageMaker::NotebookInstanceLifecycleConfig",
        "aws-sagemaker-workteam": "AWS::SageMaker::Workteam",
        "aws-sdb-domain": "AWS::SDB::Domain",
        "aws-secretsmanager-resourcepolicy": "AWS::SecretsManager::ResourcePolicy",
        "aws-secretsmanager-rotationschedule": "AWS::SecretsManager::RotationSchedule",
        "aws-secretsmanager-secret": "AWS::SecretsManager::Secret",
        "aws-secretsmanager-secrettargetattachment": "AWS::SecretsManager::SecretTargetAttachment",
        "aws-securityhub-hub": "AWS::SecurityHub::Hub",
        "aws-servicecatalog-acceptedportfolioshare": "AWS::ServiceCatalog::AcceptedPortfolioShare",
        "aws-servicecatalog-cloudformationproduct": "AWS::ServiceCatalog::CloudFormationProduct",
        "aws-servicecatalog-cloudformationprovisionedproduct": "AWS::ServiceCatalog::CloudFormationProvisionedProduct",
        "aws-servicecatalog-launchnotificationconstraint": "AWS::ServiceCatalog::LaunchNotificationConstraint",
        "aws-servicecatalog-launchroleconstraint": "AWS::ServiceCatalog::LaunchRoleConstraint",
        "aws-servicecatalog-launchtemplateconstraint": "AWS::ServiceCatalog::LaunchTemplateConstraint",
        "aws-servicecatalog-portfolio": "AWS::ServiceCatalog::Portfolio",
        "aws-servicecatalog-portfolioprincipalassociation": "AWS::ServiceCatalog::PortfolioPrincipalAssociation",
        "aws-servicecatalog-portfolioproductassociation": "AWS::ServiceCatalog::PortfolioProductAssociation",
        "aws-servicecatalog-portfolioshare": "AWS::ServiceCatalog::PortfolioShare",
        "aws-servicecatalog-resourceupdateconstraint": "AWS::ServiceCatalog::ResourceUpdateConstraint",
        "aws-servicecatalog-stacksetconstraint": "AWS::ServiceCatalog::StackSetConstraint",
        "aws-servicecatalog-tagoption": "AWS::ServiceCatalog::TagOption",
        "aws-servicecatalog-tagoptionassociation": "AWS::ServiceCatalog::TagOptionAssociation",
        "aws-servicediscovery-httpnamespace": "AWS::ServiceDiscovery::HttpNamespace",
        "aws-servicediscovery-instance": "AWS::ServiceDiscovery::Instance",
        "aws-servicediscovery-privatednsnamespace": "AWS::ServiceDiscovery::PrivateDnsNamespace",
        "aws-servicediscovery-publicdnsnamespace": "AWS::ServiceDiscovery::PublicDnsNamespace",
        "aws-servicediscovery-service": "AWS::ServiceDiscovery::Service",
        "aws-ses-configurationset": "AWS::SES::ConfigurationSet",
        "aws-ses-configurationseteventdestination": "AWS::SES::ConfigurationSetEventDestination",
        "aws-ses-receiptfilter": "AWS::SES::ReceiptFilter",
        "aws-ses-receiptrule": "AWS::SES::ReceiptRule",
        "aws-ses-receiptruleset": "AWS::SES::ReceiptRuleSet",
        "aws-ses-template": "AWS::SES::Template",
        "aws-sns-subscription": "AWS::SNS::Subscription",
        "aws-sns-topic": "AWS::SNS::Topic",
        "aws-sns-topicpolicy": "AWS::SNS::TopicPolicy",
        "aws-sqs-queue": "AWS::SQS::Queue",
        "aws-sqs-queuepolicy": "AWS::SQS::QueuePolicy",
        "aws-ssm-association": "AWS::SSM::Association",
        "aws-ssm-document": "AWS::SSM::Document",
        "aws-ssm-maintenancewindow": "AWS::SSM::MaintenanceWindow",
        "aws-ssm-maintenancewindowtarget": "AWS::SSM::MaintenanceWindowTarget",
        "aws-ssm-maintenancewindowtask": "AWS::SSM::MaintenanceWindowTask",
        "aws-ssm-parameter": "AWS::SSM::Parameter",
        "aws-ssm-patchbaseline": "AWS::SSM::PatchBaseline",
        "aws-ssm-resourcedatasync": "AWS::SSM::ResourceDataSync",
        "aws-stepfunctions-activity": "AWS::StepFunctions::Activity",
        "aws-stepfunctions-statemachine": "AWS::StepFunctions::StateMachine",
        "aws-transfer-server": "AWS::Transfer::Server",
        "aws-transfer-user": "AWS::Transfer::User",
        "aws-waf-bytematchset": "AWS::WAF::ByteMatchSet",
        "aws-waf-ipset": "AWS::WAF::IPSet",
        "aws-waf-rule": "AWS::WAF::Rule",
        "aws-waf-sizeconstraintset": "AWS::WAF::SizeConstraintSet",
        "aws-waf-sqlinjectionmatchset": "AWS::WAF::SqlInjectionMatchSet",
        "aws-waf-webacl": "AWS::WAF::WebACL",
        "aws-waf-xssmatchset": "AWS::WAF::XssMatchSet",
        "aws-wafregional-bytematchset": "AWS::WAFRegional::ByteMatchSet",
        "aws-wafregional-geomatchset": "AWS::WAFRegional::GeoMatchSet",
        "aws-wafregional-ipset": "AWS::WAFRegional::IPSet",
        "aws-wafregional-ratebasedrule": "AWS::WAFRegional::RateBasedRule",
        "aws-wafregional-regexpatternset": "AWS::WAFRegional::RegexPatternSet",
        "aws-wafregional-rule": "AWS::WAFRegional::Rule",
        "aws-wafregional-sizeconstraintset": "AWS::WAFRegional::SizeConstraintSet",
        "aws-wafregional-sqlinjectionmatchset": "AWS::WAFRegional::SqlInjectionMatchSet",
        "aws-wafregional-webacl": "AWS::WAFRegional::WebACL",
        "aws-wafregional-webaclassociation": "AWS::WAFRegional::WebACLAssociation",
        "aws-wafregional-xssmatchset": "AWS::WAFRegional::XssMatchSet",
        "aws-workspaces-workspace": "AWS::WorkSpaces::Workspace"
    }
}