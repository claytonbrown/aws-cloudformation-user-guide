{
    "accessanalyzer.analyzer.archiverule.filter": {
        "Required": "Yes",
        "Type": "List",
        "UniqueKey": "accessanalyzer.analyzer.archiverule.filter",
        "UpdateRequires": "Replacement"
    },
    "accessanalyzer.analyzer.archiverule.rulename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "accessanalyzer.analyzer.archiverule.rulename",
        "UpdateRequires": "Replacement"
    },
    "accessanalyzer.analyzer.filter.contains": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "accessanalyzer.analyzer.filter.contains",
        "UpdateRequires": "Replacement"
    },
    "accessanalyzer.analyzer.filter.eq": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "accessanalyzer.analyzer.filter.eq",
        "UpdateRequires": "Replacement"
    },
    "accessanalyzer.analyzer.filter.exists": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "accessanalyzer.analyzer.filter.exists",
        "UpdateRequires": "Replacement"
    },
    "accessanalyzer.analyzer.filter.neq": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "accessanalyzer.analyzer.filter.neq",
        "UpdateRequires": "Replacement"
    },
    "accessanalyzer.analyzer.filter.property": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "accessanalyzer.analyzer.filter.property",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificate.validity.type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "acmpca.certificate.validity.type",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificate.validity.value": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "acmpca.certificate.validity.value",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.accessdescription.accesslocation": {
        "Required": "Yes",
        "Type": "GeneralName",
        "UniqueKey": "acmpca.certificateauthority.accessdescription.accesslocation",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.accessdescription.accessmethod": {
        "Required": "Yes",
        "Type": "AccessMethod",
        "UniqueKey": "acmpca.certificateauthority.accessdescription.accessmethod",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.accessmethod.accessmethodtype": {
        "Allowed values": "CA_REPOSITORY | RESOURCE_PKI_MANIFEST | RESOURCE_PKI_NOTIFY",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.accessmethod.accessmethodtype",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.accessmethod.customobjectidentifier": {
        "Maximum": "64",
        "Minimum": "0",
        "Pattern": "^([0-2])\\.([0-9]|([0-3][0-9]))((\\.([0-9]+)){0,126})$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.accessmethod.customobjectidentifier",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.crlconfiguration.customcname": {
        "Maximum": "253",
        "Minimum": "0",
        "Required": "No",
        "UniqueKey": "acmpca.certificateauthority.crlconfiguration.customcname",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.crlconfiguration.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "acmpca.certificateauthority.crlconfiguration.enabled",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.crlconfiguration.expirationindays": {
        "Maximum": "5000",
        "Minimum": "1",
        "Pattern": "^[1,5000]}$",
        "Required": "No",
        "SampleValue": "1...5000",
        "Type": "Integer",
        "UniqueKey": "acmpca.certificateauthority.crlconfiguration.expirationindays",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.crlconfiguration.s3bucketname": {
        "Maximum": "255",
        "Minimum": "3",
        "Required": "No",
        "UniqueKey": "acmpca.certificateauthority.crlconfiguration.s3bucketname",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.csrextensions.keyusage": {
        "Required": "No",
        "Type": "KeyUsage",
        "UniqueKey": "acmpca.certificateauthority.csrextensions.keyusage",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.csrextensions.subjectinformationaccess": {
        "Required": "No",
        "Type": "SubjectInformationAccess",
        "UniqueKey": "acmpca.certificateauthority.csrextensions.subjectinformationaccess",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.edipartyname.nameassigner": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "^.{0,256}$",
        "Required": "Yes",
        "SampleValue": "TODO-acmpca.certificateauthority.edipartyname.NameAssigner",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.edipartyname.nameassigner",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.edipartyname.partyname": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "^.{0,256}$",
        "Required": "Yes",
        "SampleValue": "TODO-acmpca.certificateauthority.edipartyname.PartyName",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.edipartyname.partyname",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.generalname.directoryname": {
        "Required": "No",
        "Type": "Subject",
        "UniqueKey": "acmpca.certificateauthority.generalname.directoryname",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.generalname.dnsname": {
        "Maximum": "253",
        "Minimum": "0",
        "Pattern": "^.{0,253}$",
        "Required": "No",
        "SampleValue": "TODO-acmpca.certificateauthority.generalname.DnsName",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.generalname.dnsname",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.generalname.edipartyname": {
        "Required": "No",
        "Type": "EdiPartyName",
        "UniqueKey": "acmpca.certificateauthority.generalname.edipartyname",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.generalname.ipaddress": {
        "Maximum": "39",
        "Minimum": "0",
        "Pattern": "^.{0,39}$",
        "Required": "No",
        "SampleValue": "TODO-acmpca.certificateauthority.generalname.IpAddress",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.generalname.ipaddress",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.generalname.othername": {
        "Required": "No",
        "Type": "OtherName",
        "UniqueKey": "acmpca.certificateauthority.generalname.othername",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.generalname.registeredid": {
        "Maximum": "64",
        "Minimum": "0",
        "Pattern": "^([0-2])\\.([0-9]|([0-3][0-9]))((\\.([0-9]+)){0,126})$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.generalname.registeredid",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.generalname.rfc822name": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "^.{0,256}$",
        "Required": "No",
        "SampleValue": "TODO-acmpca.certificateauthority.generalname.Rfc822Name",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.generalname.rfc822name",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.generalname.uniformresourceidentifier": {
        "Maximum": "253",
        "Minimum": "0",
        "Pattern": "^.{0,253}$",
        "Required": "No",
        "SampleValue": "TODO-acmpca.certificateauthority.generalname.UniformResourceIdentifier",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.generalname.uniformresourceidentifier",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.keyusage.crlsign": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "acmpca.certificateauthority.keyusage.crlsign",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.keyusage.dataencipherment": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "acmpca.certificateauthority.keyusage.dataencipherment",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.keyusage.decipheronly": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "acmpca.certificateauthority.keyusage.decipheronly",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.keyusage.digitalsignature": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "acmpca.certificateauthority.keyusage.digitalsignature",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.keyusage.encipheronly": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "acmpca.certificateauthority.keyusage.encipheronly",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.keyusage.keyagreement": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "acmpca.certificateauthority.keyusage.keyagreement",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.keyusage.keycertsign": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "acmpca.certificateauthority.keyusage.keycertsign",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.keyusage.keyencipherment": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "acmpca.certificateauthority.keyusage.keyencipherment",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.keyusage.nonrepudiation": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "acmpca.certificateauthority.keyusage.nonrepudiation",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.othername.typeid": {
        "Maximum": "64",
        "Minimum": "0",
        "Pattern": "^([0-2])\\.([0-9]|([0-3][0-9]))((\\.([0-9]+)){0,126})$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.othername.typeid",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.othername.value": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "^.{0,256}$",
        "Required": "Yes",
        "SampleValue": "TODO-acmpca.certificateauthority.othername.Value",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.othername.value",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.revocationconfiguration.crlconfiguration": {
        "Required": "No",
        "Type": "CrlConfiguration",
        "UniqueKey": "acmpca.certificateauthority.revocationconfiguration.crlconfiguration",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.commonname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.commonname",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.country": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.country",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.distinguishednamequalifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.distinguishednamequalifier",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.generationqualifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.generationqualifier",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.givenname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.givenname",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.initials": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.initials",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.locality": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.locality",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.organization": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.organization",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.organizationalunit": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.organizationalunit",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.pseudonym": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.pseudonym",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.serialnumber": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.serialnumber",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.state": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.state",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.surname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.surname",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subject.title": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "acmpca.certificateauthority.subject.title",
        "UpdateRequires": "Replacement"
    },
    "acmpca.certificateauthority.subjectinformationaccess.subjectinformationaccess": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "acmpca.certificateauthority.subjectinformationaccess.subjectinformationaccess",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.configurationid.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.configurationid.id",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.configurationid.revision": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "amazonmq.broker.configurationid.revision",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.encryptionoptions.kmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.encryptionoptions.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.encryptionoptions.useawsownedkey": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amazonmq.broker.encryptionoptions.useawsownedkey",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.interbrokercred.password": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.interbrokercred.password",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.interbrokercred.username": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.interbrokercred.username",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapmetadata.interbrokercreds": {
        "Required": "No",
        "Type": "List of [InterBrokerCred",
        "UniqueKey": "amazonmq.broker.ldapmetadata.interbrokercreds",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapmetadata.servermetadata": {
        "Required": "Yes",
        "Type": "ServerMetadata",
        "UniqueKey": "amazonmq.broker.ldapmetadata.servermetadata",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.hosts": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.hosts",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.rolebase": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.rolebase",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.rolename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.rolename",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.rolesearchmatching": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.rolesearchmatching",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.rolesearchsubtree": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.rolesearchsubtree",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.serviceaccountpassword": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.serviceaccountpassword",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.serviceaccountusername": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.serviceaccountusername",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.userbase": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.userbase",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.userrolename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.userrolename",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.usersearchmatching": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.usersearchmatching",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.ldapservermetadata.usersearchsubtree": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amazonmq.broker.ldapservermetadata.usersearchsubtree",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.loglist.audit": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amazonmq.broker.loglist.audit",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.loglist.general": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amazonmq.broker.loglist.general",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.maintenancewindow.dayofweek": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.maintenancewindow.dayofweek",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.maintenancewindow.timeofday": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.maintenancewindow.timeofday",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.maintenancewindow.timezone": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.maintenancewindow.timezone",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.hosts": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "amazonmq.broker.servermetadata.hosts",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.rolebase": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.servermetadata.rolebase",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.rolename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.servermetadata.rolename",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.rolesearchmatching": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.servermetadata.rolesearchmatching",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.rolesearchsubtree": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amazonmq.broker.servermetadata.rolesearchsubtree",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.serviceaccountpassword": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.servermetadata.serviceaccountpassword",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.serviceaccountusername": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.servermetadata.serviceaccountusername",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.userbase": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.servermetadata.userbase",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.userrolename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.servermetadata.userrolename",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.usersearchmatching": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.servermetadata.usersearchmatching",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.servermetadata.usersearchsubtree": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amazonmq.broker.servermetadata.usersearchsubtree",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.tagsentry.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.tagsentry.key",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.tagsentry.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.tagsentry.value",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.user.consoleaccess": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amazonmq.broker.user.consoleaccess",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.user.groups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "amazonmq.broker.user.groups",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.user.password": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.user.password",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.broker.user.username": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.user.username",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.configuration.tagsentry.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.configuration.tagsentry.key",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.configuration.tagsentry.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.configuration.tagsentry.value",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.configurationassociation.configurationid.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.configurationassociation.configurationid.id",
        "UpdateRequires": "Replacement"
    },
    "amazonmq.configurationassociation.configurationid.revision": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "amazonmq.configurationassociation.configurationid.revision",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.autobranchcreationconfig.autobranchcreationpatterns": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "amplify.app.autobranchcreationconfig.autobranchcreationpatterns",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.autobranchcreationconfig.basicauthconfig": {
        "Required": "No",
        "Type": "BasicAuthConfig",
        "UniqueKey": "amplify.app.autobranchcreationconfig.basicauthconfig",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.autobranchcreationconfig.buildspec": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amplify.app.autobranchcreationconfig.buildspec",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.autobranchcreationconfig.enableautobranchcreation": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amplify.app.autobranchcreationconfig.enableautobranchcreation",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.autobranchcreationconfig.enableautobuild": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amplify.app.autobranchcreationconfig.enableautobuild",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.autobranchcreationconfig.enableperformancemode": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amplify.app.autobranchcreationconfig.enableperformancemode",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.autobranchcreationconfig.enablepullrequestpreview": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "amplify.app.autobranchcreationconfig.enablepullrequestpreview",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.autobranchcreationconfig.environmentvariables": {
        "Required": "No",
        "Type": "List of [EnvironmentVariable",
        "UniqueKey": "amplify.app.autobranchcreationconfig.environmentvariables",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.autobranchcreationconfig.pullrequestenvironmentname": {
        "Required": "No",
        "SampleValue": "TODO-PullRequestEnvironmentName",
        "UniqueKey": "amplify.app.autobranchcreationconfig.pullrequestenvironmentname",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.autobranchcreationconfig.stage": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amplify.app.autobranchcreationconfig.stage",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.basicauthconfig.enablebasicauth": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amplify.app.basicauthconfig.enablebasicauth",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.basicauthconfig.password": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amplify.app.basicauthconfig.password",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.basicauthconfig.username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amplify.app.basicauthconfig.username",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.customrule.condition": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amplify.app.customrule.condition",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.customrule.source": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.app.customrule.source",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.customrule.status": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amplify.app.customrule.status",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.customrule.target": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.app.customrule.target",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.environmentvariable.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.app.environmentvariable.name",
        "UpdateRequires": "Replacement"
    },
    "amplify.app.environmentvariable.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.app.environmentvariable.value",
        "UpdateRequires": "Replacement"
    },
    "amplify.branch.basicauthconfig.enablebasicauth": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amplify.branch.basicauthconfig.enablebasicauth",
        "UpdateRequires": "Replacement"
    },
    "amplify.branch.basicauthconfig.password": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.branch.basicauthconfig.password",
        "UpdateRequires": "Replacement"
    },
    "amplify.branch.basicauthconfig.username": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.branch.basicauthconfig.username",
        "UpdateRequires": "Replacement"
    },
    "amplify.branch.environmentvariable.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.branch.environmentvariable.name",
        "UpdateRequires": "Replacement"
    },
    "amplify.branch.environmentvariable.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.branch.environmentvariable.value",
        "UpdateRequires": "Replacement"
    },
    "amplify.domain.subdomainsetting.branchname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.domain.subdomainsetting.branchname",
        "UpdateRequires": "Replacement"
    },
    "amplify.domain.subdomainsetting.prefix": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.domain.subdomainsetting.prefix",
        "UpdateRequires": "Replacement"
    },
    "apigateway.apikey.stagekey.restapiid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.apikey.stagekey.restapiid",
        "UpdateRequires": "Replacement"
    },
    "apigateway.apikey.stagekey.stagename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.apikey.stagekey.stagename",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.accesslogsetting.destinationarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.accesslogsetting.destinationarn",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.accesslogsetting.format": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.accesslogsetting.format",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.canarysetting.percenttraffic": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "apigateway.deployment.canarysetting.percenttraffic",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.canarysetting.stagevariableoverrides": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "apigateway.deployment.canarysetting.stagevariableoverrides",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.canarysetting.usestagecache": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.canarysetting.usestagecache",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.deploymentcanarysettings.percenttraffic": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "apigateway.deployment.deploymentcanarysettings.percenttraffic",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.deploymentcanarysettings.stagevariableoverrides": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "apigateway.deployment.deploymentcanarysettings.stagevariableoverrides",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.deploymentcanarysettings.usestagecache": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.deploymentcanarysettings.usestagecache",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.accesslogsetting": {
        "Required": "No",
        "Type": "AccessLogSetting",
        "UniqueKey": "apigateway.deployment.stagedescription.accesslogsetting",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.cacheclusterenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.cacheclusterenabled",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.cacheclustersize": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.stagedescription.cacheclustersize",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.cachedataencrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.cachedataencrypted",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.cachettlinseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigateway.deployment.stagedescription.cachettlinseconds",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.cachingenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "apigateway.deployment.stagedescription.cachingenabled",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.canarysetting": {
        "Required": "No",
        "Type": "CanarySetting",
        "UniqueKey": "apigateway.deployment.stagedescription.canarysetting",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.clientcertificateid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.stagedescription.clientcertificateid",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.datatraceenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.datatraceenabled",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.stagedescription.description",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.documentationversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.stagedescription.documentationversion",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.logginglevel": {
        "Required": "No",
        "SampleValue": "TODO-LoggingLevel",
        "UniqueKey": "apigateway.deployment.stagedescription.logginglevel",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsetting.cachedataencrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.cachedataencrypted",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsetting.cachettlinseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.cachettlinseconds",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsetting.cachingenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.cachingenabled",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsetting.datatraceenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.datatraceenabled",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsetting.httpmethod": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.httpmethod",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsetting.logginglevel": {
        "Required": "No",
        "SampleValue": "TODO-LoggingLevel",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.logginglevel",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsetting.metricsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.metricsenabled",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsetting.resourcepath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.resourcepath",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsetting.throttlingburstlimit": {
        "Required": "No",
        "SampleValue": "TODO-ThrottlingBurstLimit",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.throttlingburstlimit",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsetting.throttlingratelimit": {
        "Required": "No",
        "SampleValue": "TODO-ThrottlingRateLimit",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.throttlingratelimit",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.methodsettings": {
        "Required": "No",
        "Type": "List of [MethodSetting",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsettings",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.metricsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.metricsenabled",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "apigateway.deployment.stagedescription.tags",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.throttlingburstlimit": {
        "Required": "No",
        "SampleValue": "TODO-ThrottlingBurstLimit",
        "UniqueKey": "apigateway.deployment.stagedescription.throttlingburstlimit",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.throttlingratelimit": {
        "Required": "No",
        "SampleValue": "TODO-ThrottlingRateLimit",
        "UniqueKey": "apigateway.deployment.stagedescription.throttlingratelimit",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.tracingenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "apigateway.deployment.stagedescription.tracingenabled",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.variables": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "apigateway.deployment.stagedescription.variables",
        "UpdateRequires": "Replacement"
    },
    "apigateway.documentationpart.location.method": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.documentationpart.location.method",
        "UpdateRequires": "Replacement"
    },
    "apigateway.documentationpart.location.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.documentationpart.location.name",
        "UpdateRequires": "Replacement"
    },
    "apigateway.documentationpart.location.path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.documentationpart.location.path",
        "UpdateRequires": "Replacement"
    },
    "apigateway.documentationpart.location.statuscode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.documentationpart.location.statuscode",
        "UpdateRequires": "Replacement"
    },
    "apigateway.documentationpart.location.type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.documentationpart.location.type",
        "UpdateRequires": "Replacement"
    },
    "apigateway.domainname.endpointconfiguration.types": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigateway.domainname.endpointconfiguration.types",
        "UpdateRequires": "Replacement"
    },
    "apigateway.domainname.mutualtlsauthentication.truststoreuri": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.domainname.mutualtlsauthentication.truststoreuri",
        "UpdateRequires": "Replacement"
    },
    "apigateway.domainname.mutualtlsauthentication.truststoreversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.domainname.mutualtlsauthentication.truststoreversion",
        "UpdateRequires": "Replacement"
    },
    "apigateway.restapi.endpointconfiguration.types": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigateway.restapi.endpointconfiguration.types",
        "UpdateRequires": "Replacement"
    },
    "apigateway.restapi.endpointconfiguration.vpcendpointids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigateway.restapi.endpointconfiguration.vpcendpointids",
        "UpdateRequires": "Replacement"
    },
    "apigateway.restapi.s3location.bucket": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.restapi.s3location.bucket",
        "UpdateRequires": "Replacement"
    },
    "apigateway.restapi.s3location.etag": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.restapi.s3location.etag",
        "UpdateRequires": "Replacement"
    },
    "apigateway.restapi.s3location.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.restapi.s3location.key",
        "UpdateRequires": "Replacement"
    },
    "apigateway.restapi.s3location.version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.restapi.s3location.version",
        "UpdateRequires": "Replacement"
    },
    "apigateway.stage.accesslogsetting.destinationarn": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "apigateway.stage.accesslogsetting.destinationarn",
        "UpdateRequires": "Replacement"
    },
    "apigateway.stage.accesslogsetting.format": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "apigateway.stage.accesslogsetting.format",
        "UpdateRequires": "Replacement"
    },
    "apigateway.stage.canarysetting.deploymentid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.stage.canarysetting.deploymentid",
        "UpdateRequires": "Replacement"
    },
    "apigateway.stage.canarysetting.percenttraffic": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "apigateway.stage.canarysetting.percenttraffic",
        "UpdateRequires": "Replacement"
    },
    "apigateway.stage.canarysetting.stagevariableoverrides": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "apigateway.stage.canarysetting.stagevariableoverrides",
        "UpdateRequires": "Replacement"
    },
    "apigateway.stage.canarysetting.usestagecache": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.stage.canarysetting.usestagecache",
        "UpdateRequires": "Replacement"
    },
    "apigateway.usageplan.apistage.apiid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.usageplan.apistage.apiid",
        "UpdateRequires": "Replacement"
    },
    "apigateway.usageplan.apistage.stage": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.usageplan.apistage.stage",
        "UpdateRequires": "Replacement"
    },
    "apigateway.usageplan.apistage.throttle": {
        "Required": "No",
        "Type": "Map of [ThrottleSettings",
        "UniqueKey": "apigateway.usageplan.apistage.throttle",
        "UpdateRequires": "Replacement"
    },
    "apigateway.usageplan.quotasettings.limit": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigateway.usageplan.quotasettings.limit",
        "UpdateRequires": "Replacement"
    },
    "apigateway.usageplan.quotasettings.offset": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigateway.usageplan.quotasettings.offset",
        "UpdateRequires": "Replacement"
    },
    "apigateway.usageplan.quotasettings.period": {
        "Required": "No",
        "SampleValue": "TODO-Period",
        "UniqueKey": "apigateway.usageplan.quotasettings.period",
        "UpdateRequires": "Replacement"
    },
    "apigateway.usageplan.throttlesettings.burstlimit": {
        "Required": "No",
        "SampleValue": "TODO-BurstLimit",
        "UniqueKey": "apigateway.usageplan.throttlesettings.burstlimit",
        "UpdateRequires": "Replacement"
    },
    "apigateway.usageplan.throttlesettings.ratelimit": {
        "Required": "No",
        "SampleValue": "TODO-RateLimit",
        "UniqueKey": "apigateway.usageplan.throttlesettings.ratelimit",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.api.bodys3location.bucket": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "apigatewayv2.api.bodys3location.bucket",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.api.bodys3location.etag": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.api.bodys3location.etag",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.api.bodys3location.key": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "apigatewayv2.api.bodys3location.key",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.api.bodys3location.version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.api.bodys3location.version",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.api.cors.allowcredentials": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.api.cors.allowcredentials",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.api.cors.allowheaders": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigatewayv2.api.cors.allowheaders",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.api.cors.allowmethods": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigatewayv2.api.cors.allowmethods",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.api.cors.alloworigins": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigatewayv2.api.cors.alloworigins",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.api.cors.exposeheaders": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigatewayv2.api.cors.exposeheaders",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.api.cors.maxage": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigatewayv2.api.cors.maxage",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.accesslogsettings.destinationarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.accesslogsettings.destinationarn",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.accesslogsettings.format": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.accesslogsettings.format",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.description",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.integrationmethod": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.integrationmethod",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.payloadformatversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.payloadformatversion",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.timeoutinmillis": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.integrationoverrides.timeoutinmillis",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.authorizationscopes": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.authorizationscopes",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.authorizationtype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.authorizationtype",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.authorizerid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.authorizerid",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.operationname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.operationname",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.target": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.routeoverrides.target",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.routesettings.datatraceenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.routesettings.datatraceenabled",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.routesettings.detailedmetricsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.routesettings.detailedmetricsenabled",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.routesettings.logginglevel": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.routesettings.logginglevel",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.routesettings.throttlingburstlimit": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.routesettings.throttlingburstlimit",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.routesettings.throttlingratelimit": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.routesettings.throttlingratelimit",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.accesslogsettings": {
        "Required": "No",
        "Type": "AccessLogSettings",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.accesslogsettings",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.autodeploy": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.autodeploy",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.defaultroutesettings": {
        "Required": "No",
        "Type": "RouteSettings",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.defaultroutesettings",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.description",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.routesettings": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.routesettings",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.stagevariables": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "apigatewayv2.apigatewaymanagedoverrides.stageoverrides.stagevariables",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.authorizer.jwtconfiguration.audience": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigatewayv2.authorizer.jwtconfiguration.audience",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.authorizer.jwtconfiguration.issuer": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.authorizer.jwtconfiguration.issuer",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.domainname.domainnameconfiguration.certificatearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.domainname.domainnameconfiguration.certificatearn",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.domainname.domainnameconfiguration.certificatename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.domainname.domainnameconfiguration.certificatename",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.domainname.domainnameconfiguration.endpointtype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.domainname.domainnameconfiguration.endpointtype",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.domainname.domainnameconfiguration.securitypolicy": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.domainname.domainnameconfiguration.securitypolicy",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.domainname.mutualtlsauthentication.truststoreuri": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.domainname.mutualtlsauthentication.truststoreuri",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.domainname.mutualtlsauthentication.truststoreversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.domainname.mutualtlsauthentication.truststoreversion",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.integration.responseparameter.destination": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "apigatewayv2.integration.responseparameter.destination",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.integration.responseparameter.source": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "apigatewayv2.integration.responseparameter.source",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.integration.responseparameterlist.responseparameters": {
        "Required": "No",
        "Type": "List of [ResponseParameter",
        "UniqueKey": "apigatewayv2.integration.responseparameterlist.responseparameters",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.integration.tlsconfig.servernametoverify": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.integration.tlsconfig.servernametoverify",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.route.parameterconstraints.required": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.route.parameterconstraints.required",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.routeresponse.parameterconstraints.required": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.routeresponse.parameterconstraints.required",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.stage.accesslogsettings.destinationarn": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "apigatewayv2.stage.accesslogsettings.destinationarn",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.stage.accesslogsettings.format": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "apigatewayv2.stage.accesslogsettings.format",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.stage.routesettings.datatraceenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.stage.routesettings.datatraceenabled",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.stage.routesettings.detailedmetricsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.stage.routesettings.detailedmetricsenabled",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.stage.routesettings.logginglevel": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.stage.routesettings.logginglevel",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.stage.routesettings.throttlingburstlimit": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigatewayv2.stage.routesettings.throttlingburstlimit",
        "UpdateRequires": "Replacement"
    },
    "apigatewayv2.stage.routesettings.throttlingratelimit": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "apigatewayv2.stage.routesettings.throttlingratelimit",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.\"application/json\": \"{\\n \\\"statuscode\\\": 200\\n}\"": {
        "Required": "No",
        "SampleValue": "TODO-\"application/json\": \"{\\n \\\"statusCode\\\": 200\\n}\"",
        "UniqueKey": "apitgateway.method.integration.\"application/json\": \"{\\n \\\"statuscode\\\": 200\\n}\"",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.cachekeyparameters": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apitgateway.method.integration.cachekeyparameters",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.cachenamespace": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.cachenamespace",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.connectionid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.connectionid",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.connectiontype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.connectiontype",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.contenthandling": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.contenthandling",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.credentials": {
        "Required": "No",
        "SampleValue": "TODO-Credentials",
        "UniqueKey": "apitgateway.method.integration.credentials",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.integrationhttpmethod": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.integrationhttpmethod",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.integrationresponse.contenthandling": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.integrationresponse.contenthandling",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.integrationresponse.responseparameters": {
        "Required": "No",
        "SampleValue": "TODO-ResponseParameters",
        "UniqueKey": "apitgateway.method.integration.integrationresponse.responseparameters",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.integrationresponse.responsetemplates": {
        "Required": "No",
        "SampleValue": "TODO-ResponseTemplates",
        "UniqueKey": "apitgateway.method.integration.integrationresponse.responsetemplates",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.integrationresponse.selectionpattern": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.integrationresponse.selectionpattern",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.integrationresponse.statuscode": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.integrationresponse.statuscode",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.integrationresponses": {
        "Required": "No",
        "Type": "List of [IntegrationResponse",
        "UniqueKey": "apitgateway.method.integration.integrationresponses",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.passthroughbehavior": {
        "Required": "No",
        "SampleValue": "TODO-PassthroughBehavior",
        "UniqueKey": "apitgateway.method.integration.passthroughbehavior",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.requestparameters": {
        "Required": "No",
        "SampleValue": "TODO-RequestParameters",
        "UniqueKey": "apitgateway.method.integration.requestparameters",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.requesttemplates": {
        "UniqueKey": "apitgateway.method.integration.requesttemplates"
    },
    "apitgateway.method.integration.timeoutinmillis": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apitgateway.method.integration.timeoutinmillis",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.type": {
        "Required": "No",
        "SampleValue": "TODO-Type",
        "UniqueKey": "apitgateway.method.integration.type",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.integration.uri": {
        "Required": "Conditional",
        "SampleValue": "TODO-Uri",
        "UniqueKey": "apitgateway.method.integration.uri",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.methodresponse.responsemodels": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "apitgateway.method.methodresponse.responsemodels",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.methodresponse.responseparameters": {
        "Required": "No",
        "SampleValue": "TODO-ResponseParameters",
        "UniqueKey": "apitgateway.method.methodresponse.responseparameters",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.method.methodresponse.statuscode": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "apitgateway.method.methodresponse.statuscode",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.stage.methodsetting.cachedataencrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apitgateway.stage.methodsetting.cachedataencrypted",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.stage.methodsetting.cachettlinseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apitgateway.stage.methodsetting.cachettlinseconds",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.stage.methodsetting.cachingenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apitgateway.stage.methodsetting.cachingenabled",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.stage.methodsetting.datatraceenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apitgateway.stage.methodsetting.datatraceenabled",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.stage.methodsetting.httpmethod": {
        "Required": "No",
        "SampleValue": "TODO-HttpMethod",
        "UniqueKey": "apitgateway.stage.methodsetting.httpmethod",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.stage.methodsetting.logginglevel": {
        "Required": "No",
        "SampleValue": "TODO-LoggingLevel",
        "UniqueKey": "apitgateway.stage.methodsetting.logginglevel",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.stage.methodsetting.metricsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apitgateway.stage.methodsetting.metricsenabled",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.stage.methodsetting.resourcepath": {
        "Required": "No",
        "SampleValue": "TODO-ResourcePath",
        "UniqueKey": "apitgateway.stage.methodsetting.resourcepath",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.stage.methodsetting.throttlingburstlimit": {
        "Required": "No",
        "SampleValue": "TODO-ThrottlingBurstLimit",
        "UniqueKey": "apitgateway.stage.methodsetting.throttlingburstlimit",
        "UpdateRequires": "Replacement"
    },
    "apitgateway.stage.methodsetting.throttlingratelimit": {
        "Required": "No",
        "SampleValue": "TODO-ThrottlingRateLimit",
        "UniqueKey": "apitgateway.stage.methodsetting.throttlingratelimit",
        "UpdateRequires": "Replacement"
    },
    "appconfig.application.tags.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.application.tags.key",
        "UpdateRequires": "Replacement"
    },
    "appconfig.application.tags.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.application.tags.value",
        "UpdateRequires": "Replacement"
    },
    "appconfig.configurationprofile.tags.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.configurationprofile.tags.key",
        "UpdateRequires": "Replacement"
    },
    "appconfig.configurationprofile.tags.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.configurationprofile.tags.value",
        "UpdateRequires": "Replacement"
    },
    "appconfig.configurationprofile.validators.content": {
        "Maximum": "32768",
        "Minimum": "0",
        "Pattern": "^.{0,32768}$",
        "Required": "No",
        "SampleValue": "TODO-appconfig.configurationprofile.validators.Content",
        "Type": "String",
        "UniqueKey": "appconfig.configurationprofile.validators.content",
        "UpdateRequires": "Replacement"
    },
    "appconfig.configurationprofile.validators.type": {
        "Allowed values": "JSON_SCHEMA | LAMBDA",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.configurationprofile.validators.type",
        "UpdateRequires": "Replacement"
    },
    "appconfig.deployment.tags.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.deployment.tags.key",
        "UpdateRequires": "Replacement"
    },
    "appconfig.deployment.tags.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.deployment.tags.value",
        "UpdateRequires": "Replacement"
    },
    "appconfig.deploymentstrategy.tags.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.deploymentstrategy.tags.key",
        "UpdateRequires": "Replacement"
    },
    "appconfig.deploymentstrategy.tags.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.deploymentstrategy.tags.value",
        "UpdateRequires": "Replacement"
    },
    "appconfig.environment.monitors.alarmarn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:(aws[a-zA-Z-]*)?:[a-z]+:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1})?:(\\d{12})?:[a-zA-Z0-9-_/:.]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.environment.monitors.alarmarn",
        "UpdateRequires": "Replacement"
    },
    "appconfig.environment.monitors.alarmrolearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^((arn):(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):(iam)::\\d{12}:role[/].*)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.environment.monitors.alarmrolearn",
        "UpdateRequires": "Replacement"
    },
    "appconfig.environment.tags.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.environment.tags.key",
        "UpdateRequires": "Replacement"
    },
    "appconfig.environment.tags.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appconfig.environment.tags.value",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.amplitudeconnectorprofilecredentials.apikey": {
        "Maximum": "256",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.amplitudeconnectorprofilecredentials.apikey",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.amplitudeconnectorprofilecredentials.secretkey": {
        "Maximum": "256",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.amplitudeconnectorprofilecredentials.secretkey",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectoroauthrequest.authcode": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.connectoroauthrequest.authcode",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectoroauthrequest.redirecturi": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.connectoroauthrequest.redirecturi",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofileconfig.connectorprofilecredentials": {
        "Required": "Yes",
        "Type": "ConnectorProfileCredentials",
        "UniqueKey": "appflow.connectorprofile.connectorprofileconfig.connectorprofilecredentials",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofileconfig.connectorprofileproperties": {
        "Required": "No",
        "Type": "ConnectorProfileProperties",
        "UniqueKey": "appflow.connectorprofile.connectorprofileconfig.connectorprofileproperties",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofilecredentials.amplitude": {
        "Required": "No",
        "Type": "AmplitudeConnectorProfileCredentials",
        "UniqueKey": "appflow.connectorprofile.connectorprofilecredentials.amplitude",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofilecredentials.datadog": {
        "Required": "No",
        "Type": "DatadogConnectorProfileCredentials",
        "UniqueKey": "appflow.connectorprofile.connectorprofilecredentials.datadog",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofilecredentials.dynatrace": {
        "Required": "No",
        "Type": "DynatraceConnectorProfileCredentials",
        "UniqueKey": "appflow.connectorprofile.connectorprofilecredentials.dynatrace",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofilecredentials.googleanalytics": {
        "Required": "No",
        "Type": "GoogleAnalyticsConnectorProfileCredentials",
        "UniqueKey": "appflow.connectorprofile.connectorprofilecredentials.googleanalytics",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofilecredentials.infornexus": {
        "Required": "No",
        "Type": "InforNexusConnectorProfileCredentials",
        "UniqueKey": "appflow.connectorprofile.connectorprofilecredentials.infornexus",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofilecredentials.marketo": {
        "Required": "No",
        "Type": "MarketoConnectorProfileCredentials",
        "UniqueKey": "appflow.connectorprofile.connectorprofilecredentials.marketo",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofilecredentials.redshift": {
        "Required": "No",
        "Type": "RedshiftConnectorProfileCredentials",
        "UniqueKey": "appflow.connectorprofile.connectorprofilecredentials.redshift",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofilecredentials.salesforce": {
        "Required": "No",
        "Type": "SalesforceConnectorProfileCredentials",
        "UniqueKey": "appflow.connectorprofile.connectorprofilecredentials.salesforce",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofilecredentials.servicenow": {
        "Required": "No",
        "Type": "ServiceNowConnectorProfileCredentials",
        "UniqueKey": "appflow.connectorprofile.connectorprofilecredentials.servicenow",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofilecredentials.singular": {
        "Required": "No",
        "Type": "SingularConnectorProfileCredentials",
        "UniqueKey": "appflow.connectorprofile.connectorprofilecredentials.singular",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofilecredentials.slack": {
        "Required": "No",
        "Type": "SlackConnectorProfileCredentials",
        "UniqueKey": "appflow.connectorprofile.connectorprofilecredentials.slack",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofilecredentials.snowflake": {
        "Required": "No",
        "Type": "SnowflakeConnectorProfileCredentials",
        "UniqueKey": "appflow.connectorprofile.connectorprofilecredentials.snowflake",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofilecredentials.trendmicro": {
        "Required": "No",
        "Type": "TrendmicroConnectorProfileCredentials",
        "UniqueKey": "appflow.connectorprofile.connectorprofilecredentials.trendmicro",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofilecredentials.veeva": {
        "Required": "No",
        "Type": "VeevaConnectorProfileCredentials",
        "UniqueKey": "appflow.connectorprofile.connectorprofilecredentials.veeva",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofilecredentials.zendesk": {
        "Required": "No",
        "Type": "ZendeskConnectorProfileCredentials",
        "UniqueKey": "appflow.connectorprofile.connectorprofilecredentials.zendesk",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofileproperties.datadog": {
        "Required": "No",
        "Type": "DatadogConnectorProfileProperties",
        "UniqueKey": "appflow.connectorprofile.connectorprofileproperties.datadog",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofileproperties.dynatrace": {
        "Required": "No",
        "Type": "DynatraceConnectorProfileProperties",
        "UniqueKey": "appflow.connectorprofile.connectorprofileproperties.dynatrace",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofileproperties.infornexus": {
        "Required": "No",
        "Type": "InforNexusConnectorProfileProperties",
        "UniqueKey": "appflow.connectorprofile.connectorprofileproperties.infornexus",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofileproperties.marketo": {
        "Required": "No",
        "Type": "MarketoConnectorProfileProperties",
        "UniqueKey": "appflow.connectorprofile.connectorprofileproperties.marketo",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofileproperties.redshift": {
        "Required": "No",
        "Type": "RedshiftConnectorProfileProperties",
        "UniqueKey": "appflow.connectorprofile.connectorprofileproperties.redshift",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofileproperties.salesforce": {
        "Required": "No",
        "Type": "SalesforceConnectorProfileProperties",
        "UniqueKey": "appflow.connectorprofile.connectorprofileproperties.salesforce",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofileproperties.servicenow": {
        "Required": "No",
        "Type": "ServiceNowConnectorProfileProperties",
        "UniqueKey": "appflow.connectorprofile.connectorprofileproperties.servicenow",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofileproperties.slack": {
        "Required": "No",
        "Type": "SlackConnectorProfileProperties",
        "UniqueKey": "appflow.connectorprofile.connectorprofileproperties.slack",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofileproperties.snowflake": {
        "Required": "No",
        "Type": "SnowflakeConnectorProfileProperties",
        "UniqueKey": "appflow.connectorprofile.connectorprofileproperties.snowflake",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofileproperties.veeva": {
        "Required": "No",
        "Type": "VeevaConnectorProfileProperties",
        "UniqueKey": "appflow.connectorprofile.connectorprofileproperties.veeva",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.connectorprofileproperties.zendesk": {
        "Required": "No",
        "Type": "ZendeskConnectorProfileProperties",
        "UniqueKey": "appflow.connectorprofile.connectorprofileproperties.zendesk",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.datadogconnectorprofilecredentials.apikey": {
        "Maximum": "256",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.datadogconnectorprofilecredentials.apikey",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.datadogconnectorprofilecredentials.applicationkey": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.datadogconnectorprofilecredentials.applicationkey",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.datadogconnectorprofileproperties.instanceurl": {
        "Maximum": "256",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.datadogconnectorprofileproperties.instanceurl",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.dynatraceconnectorprofilecredentials.apitoken": {
        "Maximum": "256",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.dynatraceconnectorprofilecredentials.apitoken",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.dynatraceconnectorprofileproperties.instanceurl": {
        "Maximum": "256",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.dynatraceconnectorprofileproperties.instanceurl",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.googleanalyticsconnectorprofilecredentials.accesstoken": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.googleanalyticsconnectorprofilecredentials.accesstoken",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.googleanalyticsconnectorprofilecredentials.clientid": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.googleanalyticsconnectorprofilecredentials.clientid",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.googleanalyticsconnectorprofilecredentials.clientsecret": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.googleanalyticsconnectorprofilecredentials.clientsecret",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.googleanalyticsconnectorprofilecredentials.connectoroauthrequest": {
        "Required": "No",
        "Type": "ConnectorOAuthRequest",
        "UniqueKey": "appflow.connectorprofile.googleanalyticsconnectorprofilecredentials.connectoroauthrequest",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.googleanalyticsconnectorprofilecredentials.refreshtoken": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.googleanalyticsconnectorprofilecredentials.refreshtoken",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.infornexusconnectorprofilecredentials.accesskeyid": {
        "Maximum": "256",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.infornexusconnectorprofilecredentials.accesskeyid",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.infornexusconnectorprofilecredentials.datakey": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.infornexusconnectorprofilecredentials.datakey",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.infornexusconnectorprofilecredentials.secretaccesskey": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.infornexusconnectorprofilecredentials.secretaccesskey",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.infornexusconnectorprofilecredentials.userid": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.infornexusconnectorprofilecredentials.userid",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.infornexusconnectorprofileproperties.instanceurl": {
        "Maximum": "256",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.infornexusconnectorprofileproperties.instanceurl",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.marketoconnectorprofilecredentials.accesstoken": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.marketoconnectorprofilecredentials.accesstoken",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.marketoconnectorprofilecredentials.clientid": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.marketoconnectorprofilecredentials.clientid",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.marketoconnectorprofilecredentials.clientsecret": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.marketoconnectorprofilecredentials.clientsecret",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.marketoconnectorprofilecredentials.connectoroauthrequest": {
        "Required": "No",
        "Type": "ConnectorOAuthRequest",
        "UniqueKey": "appflow.connectorprofile.marketoconnectorprofilecredentials.connectoroauthrequest",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.marketoconnectorprofileproperties.instanceurl": {
        "Maximum": "256",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.marketoconnectorprofileproperties.instanceurl",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.redshiftconnectorprofilecredentials.password": {
        "Maximum": "512",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.redshiftconnectorprofilecredentials.password",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.redshiftconnectorprofilecredentials.username": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.redshiftconnectorprofilecredentials.username",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.redshiftconnectorprofileproperties.bucketname": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.redshiftconnectorprofileproperties.bucketname",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.redshiftconnectorprofileproperties.bucketprefix": {
        "Maximum": "512",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.redshiftconnectorprofileproperties.bucketprefix",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.redshiftconnectorprofileproperties.databaseurl": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.redshiftconnectorprofileproperties.databaseurl",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.redshiftconnectorprofileproperties.rolearn": {
        "Maximum": "512",
        "Pattern": "arn:aws:iam:.*:[0-9]+:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.redshiftconnectorprofileproperties.rolearn",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.salesforceconnectorprofilecredentials.accesstoken": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.salesforceconnectorprofilecredentials.accesstoken",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.salesforceconnectorprofilecredentials.clientcredentialsarn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:aws:secretsmanager:.*:[0-9]+:.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.salesforceconnectorprofilecredentials.clientcredentialsarn",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.salesforceconnectorprofilecredentials.connectoroauthrequest": {
        "Required": "No",
        "Type": "ConnectorOAuthRequest",
        "UniqueKey": "appflow.connectorprofile.salesforceconnectorprofilecredentials.connectoroauthrequest",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.salesforceconnectorprofilecredentials.refreshtoken": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.salesforceconnectorprofilecredentials.refreshtoken",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.salesforceconnectorprofileproperties.instanceurl": {
        "Maximum": "256",
        "Pattern": "\\S+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.salesforceconnectorprofileproperties.instanceurl",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.salesforceconnectorprofileproperties.issandboxenvironment": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appflow.connectorprofile.salesforceconnectorprofileproperties.issandboxenvironment",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.servicenowconnectorprofilecredentials.password": {
        "Maximum": "512",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.servicenowconnectorprofilecredentials.password",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.servicenowconnectorprofilecredentials.username": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.servicenowconnectorprofilecredentials.username",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.servicenowconnectorprofileproperties.instanceurl": {
        "Maximum": "256",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.servicenowconnectorprofileproperties.instanceurl",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.singularconnectorprofilecredentials.apikey": {
        "Maximum": "256",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.singularconnectorprofilecredentials.apikey",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.slackconnectorprofilecredentials.accesstoken": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.slackconnectorprofilecredentials.accesstoken",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.slackconnectorprofilecredentials.clientid": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.slackconnectorprofilecredentials.clientid",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.slackconnectorprofilecredentials.clientsecret": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.slackconnectorprofilecredentials.clientsecret",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.slackconnectorprofilecredentials.connectoroauthrequest": {
        "Required": "No",
        "Type": "ConnectorOAuthRequest",
        "UniqueKey": "appflow.connectorprofile.slackconnectorprofilecredentials.connectoroauthrequest",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.slackconnectorprofileproperties.instanceurl": {
        "Maximum": "256",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.slackconnectorprofileproperties.instanceurl",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.snowflakeconnectorprofilecredentials.password": {
        "Maximum": "512",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.snowflakeconnectorprofilecredentials.password",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.snowflakeconnectorprofilecredentials.username": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.snowflakeconnectorprofilecredentials.username",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.snowflakeconnectorprofileproperties.accountname": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.snowflakeconnectorprofileproperties.accountname",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.snowflakeconnectorprofileproperties.bucketname": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.snowflakeconnectorprofileproperties.bucketname",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.snowflakeconnectorprofileproperties.bucketprefix": {
        "Maximum": "512",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.snowflakeconnectorprofileproperties.bucketprefix",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.snowflakeconnectorprofileproperties.privatelinkservicename": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.snowflakeconnectorprofileproperties.privatelinkservicename",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.snowflakeconnectorprofileproperties.region": {
        "Maximum": "64",
        "Pattern": "\\S+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.snowflakeconnectorprofileproperties.region",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.snowflakeconnectorprofileproperties.stage": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.snowflakeconnectorprofileproperties.stage",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.snowflakeconnectorprofileproperties.warehouse": {
        "Maximum": "512",
        "Pattern": "[\\s\\w/!@#+=.-]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.snowflakeconnectorprofileproperties.warehouse",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.trendmicroconnectorprofilecredentials.apisecretkey": {
        "Maximum": "256",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.trendmicroconnectorprofilecredentials.apisecretkey",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.veevaconnectorprofilecredentials.password": {
        "Maximum": "512",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.veevaconnectorprofilecredentials.password",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.veevaconnectorprofilecredentials.username": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.veevaconnectorprofilecredentials.username",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.veevaconnectorprofileproperties.instanceurl": {
        "Maximum": "256",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.veevaconnectorprofileproperties.instanceurl",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.zendeskconnectorprofilecredentials.accesstoken": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.zendeskconnectorprofilecredentials.accesstoken",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.zendeskconnectorprofilecredentials.clientid": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.zendeskconnectorprofilecredentials.clientid",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.zendeskconnectorprofilecredentials.clientsecret": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.zendeskconnectorprofilecredentials.clientsecret",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.zendeskconnectorprofilecredentials.connectoroauthrequest": {
        "Required": "No",
        "Type": "ConnectorOAuthRequest",
        "UniqueKey": "appflow.connectorprofile.zendeskconnectorprofilecredentials.connectoroauthrequest",
        "UpdateRequires": "Replacement"
    },
    "appflow.connectorprofile.zendeskconnectorprofileproperties.instanceurl": {
        "Maximum": "256",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.connectorprofile.zendeskconnectorprofileproperties.instanceurl",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.aggregationconfig.aggregationtype": {
        "Allowed values": "None | SingleFile",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.aggregationconfig.aggregationtype",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.amplitudesourceproperties.object": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.amplitudesourceproperties.object",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.connectoroperator.amplitude": {
        "Allowed values": "BETWEEN",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.connectoroperator.amplitude",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.connectoroperator.datadog": {
        "Allowed values": "ADDITION | BETWEEN | DIVISION | EQUAL_TO | MASK_ALL | MASK_FIRST_N | MASK_LAST_N | MULTIPLICATION | NO_OP | PROJECTION | SUBTRACTION | VALIDATE_NON_NEGATIVE | VALIDATE_NON_NULL | VALIDATE_NON_ZERO | VALIDATE_NUMERIC",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.connectoroperator.datadog",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.connectoroperator.dynatrace": {
        "Allowed values": "ADDITION | BETWEEN | DIVISION | EQUAL_TO | MASK_ALL | MASK_FIRST_N | MASK_LAST_N | MULTIPLICATION | NO_OP | PROJECTION | SUBTRACTION | VALIDATE_NON_NEGATIVE | VALIDATE_NON_NULL | VALIDATE_NON_ZERO | VALIDATE_NUMERIC",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.connectoroperator.dynatrace",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.connectoroperator.googleanalytics": {
        "Allowed values": "BETWEEN | PROJECTION",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.connectoroperator.googleanalytics",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.connectoroperator.infornexus": {
        "Allowed values": "ADDITION | BETWEEN | DIVISION | EQUAL_TO | MASK_ALL | MASK_FIRST_N | MASK_LAST_N | MULTIPLICATION | NO_OP | PROJECTION | SUBTRACTION | VALIDATE_NON_NEGATIVE | VALIDATE_NON_NULL | VALIDATE_NON_ZERO | VALIDATE_NUMERIC",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.connectoroperator.infornexus",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.connectoroperator.marketo": {
        "Allowed values": "ADDITION | BETWEEN | DIVISION | GREATER_THAN | LESS_THAN | MASK_ALL | MASK_FIRST_N | MASK_LAST_N | MULTIPLICATION | NO_OP | PROJECTION | SUBTRACTION | VALIDATE_NON_NEGATIVE | VALIDATE_NON_NULL | VALIDATE_NON_ZERO | VALIDATE_NUMERIC",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.connectoroperator.marketo",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.connectoroperator.s3": {
        "Allowed values": "ADDITION | BETWEEN | DIVISION | EQUAL_TO | GREATER_THAN | GREATER_THAN_OR_EQUAL_TO | LESS_THAN | LESS_THAN_OR_EQUAL_TO | MASK_ALL | MASK_FIRST_N | MASK_LAST_N | MULTIPLICATION | NO_OP | NOT_EQUAL_TO | PROJECTION | SUBTRACTION | VALIDATE_NON_NEGATIVE | VALIDATE_NON_NULL | VALIDATE_NON_ZERO | VALIDATE_NUMERIC",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.connectoroperator.s3",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.connectoroperator.salesforce": {
        "Allowed values": "ADDITION | BETWEEN | CONTAINS | DIVISION | EQUAL_TO | GREATER_THAN | GREATER_THAN_OR_EQUAL_TO | LESS_THAN | LESS_THAN_OR_EQUAL_TO | MASK_ALL | MASK_FIRST_N | MASK_LAST_N | MULTIPLICATION | NO_OP | NOT_EQUAL_TO | PROJECTION | SUBTRACTION | VALIDATE_NON_NEGATIVE | VALIDATE_NON_NULL | VALIDATE_NON_ZERO | VALIDATE_NUMERIC",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.connectoroperator.salesforce",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.connectoroperator.servicenow": {
        "Allowed values": "ADDITION | BETWEEN | CONTAINS | DIVISION | EQUAL_TO | GREATER_THAN | GREATER_THAN_OR_EQUAL_TO | LESS_THAN | LESS_THAN_OR_EQUAL_TO | MASK_ALL | MASK_FIRST_N | MASK_LAST_N | MULTIPLICATION | NO_OP | NOT_EQUAL_TO | PROJECTION | SUBTRACTION | VALIDATE_NON_NEGATIVE | VALIDATE_NON_NULL | VALIDATE_NON_ZERO | VALIDATE_NUMERIC",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.connectoroperator.servicenow",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.connectoroperator.singular": {
        "Allowed values": "ADDITION | DIVISION | EQUAL_TO | MASK_ALL | MASK_FIRST_N | MASK_LAST_N | MULTIPLICATION | NO_OP | PROJECTION | SUBTRACTION | VALIDATE_NON_NEGATIVE | VALIDATE_NON_NULL | VALIDATE_NON_ZERO | VALIDATE_NUMERIC",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.connectoroperator.singular",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.connectoroperator.slack": {
        "Allowed values": "ADDITION | BETWEEN | DIVISION | EQUAL_TO | GREATER_THAN | GREATER_THAN_OR_EQUAL_TO | LESS_THAN | LESS_THAN_OR_EQUAL_TO | MASK_ALL | MASK_FIRST_N | MASK_LAST_N | MULTIPLICATION | NO_OP | PROJECTION | SUBTRACTION | VALIDATE_NON_NEGATIVE | VALIDATE_NON_NULL | VALIDATE_NON_ZERO | VALIDATE_NUMERIC",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.connectoroperator.slack",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.connectoroperator.trendmicro": {
        "Allowed values": "ADDITION | DIVISION | EQUAL_TO | MASK_ALL | MASK_FIRST_N | MASK_LAST_N | MULTIPLICATION | NO_OP | PROJECTION | SUBTRACTION | VALIDATE_NON_NEGATIVE | VALIDATE_NON_NULL | VALIDATE_NON_ZERO | VALIDATE_NUMERIC",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.connectoroperator.trendmicro",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.connectoroperator.veeva": {
        "Allowed values": "ADDITION | BETWEEN | CONTAINS | DIVISION | EQUAL_TO | GREATER_THAN | GREATER_THAN_OR_EQUAL_TO | LESS_THAN | LESS_THAN_OR_EQUAL_TO | MASK_ALL | MASK_FIRST_N | MASK_LAST_N | MULTIPLICATION | NO_OP | NOT_EQUAL_TO | PROJECTION | SUBTRACTION | VALIDATE_NON_NEGATIVE | VALIDATE_NON_NULL | VALIDATE_NON_ZERO | VALIDATE_NUMERIC",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.connectoroperator.veeva",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.connectoroperator.zendesk": {
        "Allowed values": "ADDITION | DIVISION | GREATER_THAN | MASK_ALL | MASK_FIRST_N | MASK_LAST_N | MULTIPLICATION | NO_OP | PROJECTION | SUBTRACTION | VALIDATE_NON_NEGATIVE | VALIDATE_NON_NULL | VALIDATE_NON_ZERO | VALIDATE_NUMERIC",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.connectoroperator.zendesk",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.datadogsourceproperties.object": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.datadogsourceproperties.object",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.destinationconnectorproperties.eventbridge": {
        "Required": "No",
        "Type": "EventBridgeDestinationProperties",
        "UniqueKey": "appflow.flow.destinationconnectorproperties.eventbridge",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.destinationconnectorproperties.redshift": {
        "Required": "No",
        "Type": "RedshiftDestinationProperties",
        "UniqueKey": "appflow.flow.destinationconnectorproperties.redshift",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.destinationconnectorproperties.s3": {
        "Required": "No",
        "Type": "S3DestinationProperties",
        "UniqueKey": "appflow.flow.destinationconnectorproperties.s3",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.destinationconnectorproperties.salesforce": {
        "Required": "No",
        "Type": "SalesforceDestinationProperties",
        "UniqueKey": "appflow.flow.destinationconnectorproperties.salesforce",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.destinationconnectorproperties.snowflake": {
        "Required": "No",
        "Type": "SnowflakeDestinationProperties",
        "UniqueKey": "appflow.flow.destinationconnectorproperties.snowflake",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.destinationconnectorproperties.upsolver": {
        "Required": "No",
        "Type": "UpsolverDestinationProperties",
        "UniqueKey": "appflow.flow.destinationconnectorproperties.upsolver",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.destinationflowconfig.connectorprofilename": {
        "Maximum": "256",
        "Pattern": "[\\w/!@#+=.-]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.destinationflowconfig.connectorprofilename",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.destinationflowconfig.connectortype": {
        "Allowed Values": "EventBridge | Redshift | S3 | Salesforce | Snowflake",
        "AllowedValues": [
            "EventBridge",
            "Redshift",
            "S3",
            "Salesforce",
            "Snowflake"
        ],
        "Pattern": "^[EventBridge|Redshift|S3|Salesforce|Snowflake]",
        "Required": "Yes",
        "SampleValue": "EventBridge|Redshift|S3|Salesforce|Snowflake",
        "Type": "String",
        "UniqueKey": "appflow.flow.destinationflowconfig.connectortype",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.destinationflowconfig.destinationconnectorproperties": {
        "Required": "Yes",
        "Type": "DestinationConnectorProperties",
        "UniqueKey": "appflow.flow.destinationflowconfig.destinationconnectorproperties",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.dynatracesourceproperties.object": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.dynatracesourceproperties.object",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.errorhandlingconfig.bucketname": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "\\S+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.errorhandlingconfig.bucketname",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.errorhandlingconfig.bucketprefix": {
        "Maximum": "512",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.errorhandlingconfig.bucketprefix",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.errorhandlingconfig.failonfirsterror": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appflow.flow.errorhandlingconfig.failonfirsterror",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.eventbridgedestinationproperties.errorhandlingconfig": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "No",
        "Type": "ErrorHandlingConfig",
        "UniqueKey": "appflow.flow.eventbridgedestinationproperties.errorhandlingconfig",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.eventbridgedestinationproperties.object": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.eventbridgedestinationproperties.object",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.googleanalyticssourceproperties.object": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.googleanalyticssourceproperties.object",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.incrementalpullconfig.datetimetypefieldname": {
        "Maximum": "256",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.incrementalpullconfig.datetimetypefieldname",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.infornexussourceproperties.object": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.infornexussourceproperties.object",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.marketosourceproperties.object": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.marketosourceproperties.object",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.prefixconfig.prefixformat": {
        "Allowed values": "DAY | HOUR | MINUTE | MONTH | YEAR",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.prefixconfig.prefixformat",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.prefixconfig.prefixtype": {
        "Allowed values": "FILENAME | PATH | PATH_AND_FILENAME",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.prefixconfig.prefixtype",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.redshiftdestinationproperties.bucketprefix": {
        "Maximum": "512",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.redshiftdestinationproperties.bucketprefix",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.redshiftdestinationproperties.errorhandlingconfig": {
        "Required": "No",
        "Type": "ErrorHandlingConfig",
        "UniqueKey": "appflow.flow.redshiftdestinationproperties.errorhandlingconfig",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.redshiftdestinationproperties.intermediatebucketname": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.redshiftdestinationproperties.intermediatebucketname",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.redshiftdestinationproperties.object": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.redshiftdestinationproperties.object",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.s3destinationproperties.bucketname": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.s3destinationproperties.bucketname",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.s3destinationproperties.bucketprefix": {
        "Maximum": "512",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.s3destinationproperties.bucketprefix",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.s3destinationproperties.s3outputformatconfig": {
        "Required": "No",
        "Type": "S3OutputFormatConfig",
        "UniqueKey": "appflow.flow.s3destinationproperties.s3outputformatconfig",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.s3outputformatconfig.aggregationconfig": {
        "Required": "No",
        "Type": "AggregationConfig",
        "UniqueKey": "appflow.flow.s3outputformatconfig.aggregationconfig",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.s3outputformatconfig.filetype": {
        "Allowed values": "CSV | JSON | PARQUET",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.s3outputformatconfig.filetype",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.s3outputformatconfig.prefixconfig": {
        "Required": "No",
        "Type": "PrefixConfig",
        "UniqueKey": "appflow.flow.s3outputformatconfig.prefixconfig",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.s3sourceproperties.bucketname": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.s3sourceproperties.bucketname",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.s3sourceproperties.bucketprefix": {
        "Maximum": "512",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.s3sourceproperties.bucketprefix",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.salesforcedestinationproperties.errorhandlingconfig": {
        "Required": "No",
        "Type": "ErrorHandlingConfig",
        "UniqueKey": "appflow.flow.salesforcedestinationproperties.errorhandlingconfig",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.salesforcedestinationproperties.object": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.salesforcedestinationproperties.object",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.salesforcesourceproperties.enabledynamicfieldupdate": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appflow.flow.salesforcesourceproperties.enabledynamicfieldupdate",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.salesforcesourceproperties.includedeletedrecords": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appflow.flow.salesforcesourceproperties.includedeletedrecords",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.salesforcesourceproperties.object": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.salesforcesourceproperties.object",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.scheduledtriggerproperties.datapullmode": {
        "Allowed values": "Complete | Incremental",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.scheduledtriggerproperties.datapullmode",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.scheduledtriggerproperties.scheduleendtime": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "appflow.flow.scheduledtriggerproperties.scheduleendtime",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.scheduledtriggerproperties.scheduleexpression": {
        "Maximum": "256",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.scheduledtriggerproperties.scheduleexpression",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.scheduledtriggerproperties.schedulestarttime": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "appflow.flow.scheduledtriggerproperties.schedulestarttime",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.scheduledtriggerproperties.timezone": {
        "Maximum": "256",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.scheduledtriggerproperties.timezone",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.servicenowsourceproperties.object": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.servicenowsourceproperties.object",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.singularsourceproperties.object": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.singularsourceproperties.object",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.slacksourceproperties.object": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.slacksourceproperties.object",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.snowflakedestinationproperties.bucketprefix": {
        "Maximum": "512",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.snowflakedestinationproperties.bucketprefix",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.snowflakedestinationproperties.errorhandlingconfig": {
        "Required": "No",
        "Type": "ErrorHandlingConfig",
        "UniqueKey": "appflow.flow.snowflakedestinationproperties.errorhandlingconfig",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.snowflakedestinationproperties.intermediatebucketname": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.snowflakedestinationproperties.intermediatebucketname",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.snowflakedestinationproperties.object": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.snowflakedestinationproperties.object",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.sourceconnectorproperties.amplitude": {
        "Required": "No",
        "Type": "AmplitudeSourceProperties",
        "UniqueKey": "appflow.flow.sourceconnectorproperties.amplitude",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.sourceconnectorproperties.datadog": {
        "Required": "No",
        "Type": "DatadogSourceProperties",
        "UniqueKey": "appflow.flow.sourceconnectorproperties.datadog",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.sourceconnectorproperties.dynatrace": {
        "Required": "No",
        "Type": "DynatraceSourceProperties",
        "UniqueKey": "appflow.flow.sourceconnectorproperties.dynatrace",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.sourceconnectorproperties.googleanalytics": {
        "Required": "No",
        "Type": "GoogleAnalyticsSourceProperties",
        "UniqueKey": "appflow.flow.sourceconnectorproperties.googleanalytics",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.sourceconnectorproperties.infornexus": {
        "Required": "No",
        "Type": "InforNexusSourceProperties",
        "UniqueKey": "appflow.flow.sourceconnectorproperties.infornexus",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.sourceconnectorproperties.marketo": {
        "Required": "No",
        "Type": "MarketoSourceProperties",
        "UniqueKey": "appflow.flow.sourceconnectorproperties.marketo",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.sourceconnectorproperties.s3": {
        "Required": "No",
        "Type": "S3SourceProperties",
        "UniqueKey": "appflow.flow.sourceconnectorproperties.s3",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.sourceconnectorproperties.salesforce": {
        "Required": "No",
        "Type": "SalesforceSourceProperties",
        "UniqueKey": "appflow.flow.sourceconnectorproperties.salesforce",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.sourceconnectorproperties.servicenow": {
        "Required": "No",
        "Type": "ServiceNowSourceProperties",
        "UniqueKey": "appflow.flow.sourceconnectorproperties.servicenow",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.sourceconnectorproperties.singular": {
        "Required": "No",
        "Type": "SingularSourceProperties",
        "UniqueKey": "appflow.flow.sourceconnectorproperties.singular",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.sourceconnectorproperties.slack": {
        "Required": "No",
        "Type": "SlackSourceProperties",
        "UniqueKey": "appflow.flow.sourceconnectorproperties.slack",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.sourceconnectorproperties.trendmicro": {
        "Required": "No",
        "Type": "TrendmicroSourceProperties",
        "UniqueKey": "appflow.flow.sourceconnectorproperties.trendmicro",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.sourceconnectorproperties.veeva": {
        "Required": "No",
        "Type": "VeevaSourceProperties",
        "UniqueKey": "appflow.flow.sourceconnectorproperties.veeva",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.sourceconnectorproperties.zendesk": {
        "Required": "No",
        "Type": "ZendeskSourceProperties",
        "UniqueKey": "appflow.flow.sourceconnectorproperties.zendesk",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.sourceflowconfig.connectorprofilename": {
        "Maximum": "256",
        "Pattern": "[\\w/!@#+=.-]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.sourceflowconfig.connectorprofilename",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.sourceflowconfig.connectortype": {
        "Allowed Values": "S3 \\| Amplitude \\| Datadog \\| Dynatrace \\| Googleanalytics \\| Infornexus \\| Salesforce \\| Servicenow \\| Singular \\| Slack \\| Trendmicro \\| Veeva \\| Zendesk",
        "AllowedValues": [
            "S3 \\| Amplitude \\| Datadog \\| Dynatrace \\| Googleanalytics \\| Infornexus \\| Salesforce \\| Servicenow \\| Singular \\| Slack \\| Trendmicro \\| Veeva \\| Zendesk"
        ],
        "Pattern": "^[S3 \\| Amplitude \\| Datadog \\| Dynatrace \\| Googleanalytics \\| Infornexus \\| Salesforce \\| Servicenow \\| Singular \\| Slack \\| Trendmicro \\| Veeva \\| Zendesk]",
        "Required": "Yes",
        "SampleValue": "S3 \\| Amplitude \\| Datadog \\| Dynatrace \\| Googleanalytics \\| Infornexus \\| Salesforce \\| Servicenow \\| Singular \\| Slack \\| Trendmicro \\| Veeva \\| Zendesk",
        "Type": "String",
        "UniqueKey": "appflow.flow.sourceflowconfig.connectortype",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.sourceflowconfig.incrementalpullconfig": {
        "Required": "No",
        "Type": "IncrementalPullConfig",
        "UniqueKey": "appflow.flow.sourceflowconfig.incrementalpullconfig",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.sourceflowconfig.sourceconnectorproperties": {
        "Required": "Yes",
        "Type": "SourceConnectorProperties",
        "UniqueKey": "appflow.flow.sourceflowconfig.sourceconnectorproperties",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.task.connectoroperator": {
        "Required": "No",
        "Type": "ConnectorOperator",
        "UniqueKey": "appflow.flow.task.connectoroperator",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.task.destinationfield": {
        "Maximum": "256",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.task.destinationfield",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.task.sourcefields": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "appflow.flow.task.sourcefields",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.task.taskproperties": {
        "Required": "No",
        "Type": "List of [TaskPropertiesObject",
        "UniqueKey": "appflow.flow.task.taskproperties",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.task.tasktype": {
        "Allowed values": "Arithmetic | Filter | Map | Mask | Merge | Truncate | Validate",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.task.tasktype",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.taskpropertiesobject.key": {
        "Allowed Values": "VALUE | VALUES | DATA_TYPE | UPPER_BOUND | LOWER_BOUND | SOURCE_DATA_TYPE | DESTINATION_DATA_TYPE | VALIDATION_ACTION | MASK_VALUE | MASK_LENGTH | TRUNCATE_LENGTH | MATH_OPERATION_FIELDS_ORDER | CONCAT_FORMAT | SUBFIELD_CATEGORY_MAP",
        "AllowedValues": [
            "VALUE",
            "VALUES",
            "DATA_TYPE",
            "UPPER_BOUND",
            "LOWER_BOUND",
            "SOURCE_DATA_TYPE",
            "DESTINATION_DATA_TYPE",
            "VALIDATION_ACTION",
            "MASK_VALUE",
            "MASK_LENGTH",
            "TRUNCATE_LENGTH",
            "MATH_OPERATION_FIELDS_ORDER",
            "CONCAT_FORMAT",
            "SUBFIELD_CATEGORY_MAP"
        ],
        "Pattern": "^[VALUE|VALUES|DATA_TYPE|UPPER_BOUND|LOWER_BOUND|SOURCE_DATA_TYPE|DESTINATION_DATA_TYPE|VALIDATION_ACTION|MASK_VALUE|MASK_LENGTH|TRUNCATE_LENGTH|MATH_OPERATION_FIELDS_ORDER|CONCAT_FORMAT|SUBFIELD_CATEGORY_MAP]",
        "Required": "Yes",
        "SampleValue": "VALUE|VALUES|DATA_TYPE|UPPER_BOUND|LOWER_BOUND|SOURCE_DATA_TYPE|DESTINATION_DATA_TYPE|VALIDATION_ACTION|MASK_VALUE|MASK_LENGTH|TRUNCATE_LENGTH|MATH_OPERATION_FIELDS_ORDER|CONCAT_FORMAT|SUBFIELD_CATEGORY_MAP",
        "Type": "String",
        "UniqueKey": "appflow.flow.taskpropertiesobject.key",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.taskpropertiesobject.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.taskpropertiesobject.value",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.trendmicrosourceproperties.object": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.trendmicrosourceproperties.object",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.triggerconfig.triggerproperties": {
        "Required": "No",
        "Type": "ScheduledTriggerProperties",
        "UniqueKey": "appflow.flow.triggerconfig.triggerproperties",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.triggerconfig.triggertype": {
        "Allowed values": "Event | OnDemand | Scheduled",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.triggerconfig.triggertype",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.upsolverdestinationproperties.bucketname": {
        "Maximum": "63",
        "Minimum": "16",
        "Pattern": "^(upsolver-appflow)\\S*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.upsolverdestinationproperties.bucketname",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.upsolverdestinationproperties.bucketprefix": {
        "Maximum": "512",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.upsolverdestinationproperties.bucketprefix",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.upsolverdestinationproperties.s3outputformatconfig": {
        "Required": "Yes",
        "Type": "UpsolverS3OutputFormatConfig",
        "UniqueKey": "appflow.flow.upsolverdestinationproperties.s3outputformatconfig",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.upsolvers3outputformatconfig.aggregationconfig": {
        "Required": "No",
        "Type": "AggregationConfig",
        "UniqueKey": "appflow.flow.upsolvers3outputformatconfig.aggregationconfig",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.upsolvers3outputformatconfig.filetype": {
        "Allowed values": "CSV | JSON | PARQUET",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appflow.flow.upsolvers3outputformatconfig.filetype",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.upsolvers3outputformatconfig.prefixconfig": {
        "Required": "Yes",
        "Type": "PrefixConfig",
        "UniqueKey": "appflow.flow.upsolvers3outputformatconfig.prefixconfig",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.veevasourceproperties.object": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.veevasourceproperties.object",
        "UpdateRequires": "Replacement"
    },
    "appflow.flow.zendesksourceproperties.object": {
        "Maximum": "512",
        "Pattern": "\\S+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appflow.flow.zendesksourceproperties.object",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalabletarget.scalabletargetaction.maxcapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "applicationautoscaling.scalabletarget.scalabletargetaction.maxcapacity",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalabletarget.scalabletargetaction.mincapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "applicationautoscaling.scalabletarget.scalabletargetaction.mincapacity",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalabletarget.scheduledaction.endtime": {
        "Required": "No",
        "Type": "Timestamp",
        "UniqueKey": "applicationautoscaling.scalabletarget.scheduledaction.endtime",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalabletarget.scheduledaction.scalabletargetaction": {
        "Required": "No",
        "Type": "ScalableTargetAction",
        "UniqueKey": "applicationautoscaling.scalabletarget.scheduledaction.scalabletargetaction",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalabletarget.scheduledaction.schedule": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "UniqueKey": "applicationautoscaling.scalabletarget.scheduledaction.schedule",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalabletarget.scheduledaction.scheduledactionname": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "(?!((^[ ]+.*)|(.*([\\u0000-\\u001f]|[\\u007f-\\u009f]|[:/|])+.*)|(.*[ ]+$))).+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalabletarget.scheduledaction.scheduledactionname",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalabletarget.scheduledaction.starttime": {
        "Required": "No",
        "Type": "Timestamp",
        "UniqueKey": "applicationautoscaling.scalabletarget.scheduledaction.starttime",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalabletarget.suspendedstate.dynamicscalinginsuspended": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "applicationautoscaling.scalabletarget.suspendedstate.dynamicscalinginsuspended",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalabletarget.suspendedstate.dynamicscalingoutsuspended": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "applicationautoscaling.scalabletarget.suspendedstate.dynamicscalingoutsuspended",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalabletarget.suspendedstate.scheduledscalingsuspended": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "applicationautoscaling.scalabletarget.suspendedstate.scheduledscalingsuspended",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.customizedmetricspecification.dimensions": {
        "Required": "No",
        "Type": "List of [MetricDimension",
        "UniqueKey": "applicationautoscaling.scalingpolicy.customizedmetricspecification.dimensions",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.customizedmetricspecification.metricname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.customizedmetricspecification.metricname",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.customizedmetricspecification.namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.customizedmetricspecification.namespace",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.customizedmetricspecification.statistic": {
        "Allowed values": "Average | Maximum | Minimum | SampleCount | Sum",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.customizedmetricspecification.statistic",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.customizedmetricspecification.unit": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.customizedmetricspecification.unit",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.metricdimension.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.metricdimension.name",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.metricdimension.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.metricdimension.value",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.predefinedmetricspecification.predefinedmetrictype": {
        "Allowed values": "ALBRequestCountPerTarget | AppStreamAverageCapacityUtilization | CassandraReadCapacityUtilization | CassandraWriteCapacityUtilization | ComprehendInferenceUtilization | DynamoDBReadCapacityUtilization | DynamoDBWriteCapacityUtilization | EC2SpotFleetRequestAverageCPUUtilization | EC2SpotFleetRequestAverageNetworkIn | EC2SpotFleetRequestAverageNetworkOut | ECSServiceAverageCPUUtilization | ECSServiceAverageMemoryUtilization | KafkaBrokerStorageUtilization | LambdaProvisionedConcurrencyUtilization | RDSReaderAverageCPUUtilization | RDSReaderAverageDatabaseConnections | SageMakerVariantInvocationsPerInstance",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.predefinedmetricspecification.predefinedmetrictype",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.predefinedmetricspecification.resourcelabel": {
        "Maximum": "1023",
        "Minimum": "1",
        "Pattern": "^.{1,1023}$",
        "Required": "Conditional",
        "SampleValue": "TODO-applicationautoscaling.scalingpolicy.predefinedmetricspecification.ResourceLabel",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.predefinedmetricspecification.resourcelabel",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.adjustmenttype": {
        "Allowed values": "ChangeInCapacity | ExactCapacity | PercentChangeInCapacity",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.adjustmenttype",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.cooldown": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.cooldown",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.metricaggregationtype": {
        "Allowed values": "Average | Maximum | Minimum",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.metricaggregationtype",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.minadjustmentmagnitude": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.minadjustmentmagnitude",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.metricintervallowerbound": {
        "Required": "Conditional",
        "Type": "Double",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.metricintervallowerbound",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.metricintervalupperbound": {
        "Required": "Conditional",
        "Type": "Double",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.metricintervalupperbound",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.scalingadjustment": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.scalingadjustment",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustments": {
        "Required": "No",
        "Type": "List of [StepAdjustment",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustments",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.customizedmetricspecification": {
        "Required": "No",
        "Type": "CustomizedMetricSpecification",
        "UniqueKey": "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.customizedmetricspecification",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.disablescalein": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.disablescalein",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.predefinedmetricspecification": {
        "Required": "No",
        "Type": "PredefinedMetricSpecification",
        "UniqueKey": "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.predefinedmetricspecification",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.scaleincooldown": {
        "Required": "No",
        "SampleValue": "TODO-ScaleInCooldown",
        "UniqueKey": "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.scaleincooldown",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.scaleoutcooldown": {
        "Required": "No",
        "SampleValue": "TODO-ScaleOutCooldown",
        "UniqueKey": "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.scaleoutcooldown",
        "UpdateRequires": "Replacement"
    },
    "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.targetvalue": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.targetvalue",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.alarm.alarmname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.alarm.alarmname",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.alarm.severity": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.alarm.severity",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.alarmmetric.alarmmetricname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.alarmmetric.alarmmetricname",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.componentconfiguration.configurationdetails": {
        "Required": "No",
        "Type": "ConfigurationDetails",
        "UniqueKey": "applicationinsights.application.componentconfiguration.configurationdetails",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.componentconfiguration.subcomponenttypeconfigurations": {
        "Required": "No",
        "Type": "List of [SubComponentTypeConfiguration",
        "UniqueKey": "applicationinsights.application.componentconfiguration.subcomponenttypeconfigurations",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.componentmonitoringsetting.componentarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.componentmonitoringsetting.componentarn",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.componentmonitoringsetting.componentconfigurationmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.componentmonitoringsetting.componentconfigurationmode",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.componentmonitoringsetting.componentname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.componentmonitoringsetting.componentname",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.componentmonitoringsetting.customcomponentconfiguration": {
        "Required": "No",
        "Type": "ComponentConfiguration",
        "UniqueKey": "applicationinsights.application.componentmonitoringsetting.customcomponentconfiguration",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.componentmonitoringsetting.defaultoverwritecomponentconfiguration": {
        "Required": "No",
        "Type": "ComponentConfiguration",
        "UniqueKey": "applicationinsights.application.componentmonitoringsetting.defaultoverwritecomponentconfiguration",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.componentmonitoringsetting.tier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.componentmonitoringsetting.tier",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.configurationdetails.alarmmetrics": {
        "Required": "No",
        "Type": "List of [AlarmMetric",
        "UniqueKey": "applicationinsights.application.configurationdetails.alarmmetrics",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.configurationdetails.alarms": {
        "Required": "No",
        "Type": "List of [Alarm",
        "UniqueKey": "applicationinsights.application.configurationdetails.alarms",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.configurationdetails.jmxprometheusexporter": {
        "Required": "No",
        "Type": "JMXPrometheusExporter",
        "UniqueKey": "applicationinsights.application.configurationdetails.jmxprometheusexporter",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.configurationdetails.logs": {
        "Required": "No",
        "Type": "List of [Log",
        "UniqueKey": "applicationinsights.application.configurationdetails.logs",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.configurationdetails.windowsevents": {
        "Required": "No",
        "Type": "List of [WindowsEvent",
        "UniqueKey": "applicationinsights.application.configurationdetails.windowsevents",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.customcomponent.componentname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[\\d\\w\\-_\\.+]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.customcomponent.componentname",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.customcomponent.resourcelist": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "applicationinsights.application.customcomponent.resourcelist",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.jmxprometheusexporter.hostport": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.jmxprometheusexporter.hostport",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.jmxprometheusexporter.jmxurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.jmxprometheusexporter.jmxurl",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.jmxprometheusexporter.prometheusport": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.jmxprometheusexporter.prometheusport",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.log.encoding": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.log.encoding",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.log.loggroupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.log.loggroupname",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.log.logpath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.log.logpath",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.log.logtype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.log.logtype",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.log.patternset": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.log.patternset",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.logpattern.pattern": {
        "Maximum": "50",
        "Minimum": "1",
        "Pattern": "[\\S\\s]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.logpattern.pattern",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.logpattern.patternname": {
        "Maximum": "50",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9\\.\\-_]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.logpattern.patternname",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.logpattern.rank": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "applicationinsights.application.logpattern.rank",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.logpatternset.logpatterns": {
        "Required": "Yes",
        "Type": "List of [LogPattern",
        "UniqueKey": "applicationinsights.application.logpatternset.logpatterns",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.logpatternset.patternsetname": {
        "Maximum": "30",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9\\.\\-_]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.logpatternset.patternsetname",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.subcomponentconfigurationdetails.alarmmetrics": {
        "Required": "No",
        "Type": "List of [AlarmMetric",
        "UniqueKey": "applicationinsights.application.subcomponentconfigurationdetails.alarmmetrics",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.subcomponentconfigurationdetails.logs": {
        "Required": "No",
        "Type": "List of [Log",
        "UniqueKey": "applicationinsights.application.subcomponentconfigurationdetails.logs",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.subcomponentconfigurationdetails.windowsevents": {
        "Required": "No",
        "Type": "List of [WindowsEvent",
        "UniqueKey": "applicationinsights.application.subcomponentconfigurationdetails.windowsevents",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.subcomponenttypeconfiguration.subcomponentconfigurationdetails": {
        "Required": "Yes",
        "Type": "SubComponentConfigurationDetails",
        "UniqueKey": "applicationinsights.application.subcomponenttypeconfiguration.subcomponentconfigurationdetails",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.subcomponenttypeconfiguration.subcomponenttype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.subcomponenttypeconfiguration.subcomponenttype",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.windowsevent.eventlevels": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "applicationinsights.application.windowsevent.eventlevels",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.windowsevent.eventname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.windowsevent.eventname",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.windowsevent.loggroupname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.windowsevent.loggroupname",
        "UpdateRequires": "Replacement"
    },
    "applicationinsights.application.windowsevent.patternset": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationinsights.application.windowsevent.patternset",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.gatewayroutespec.grpcroute": {
        "Required": "No",
        "Type": "GrpcGatewayRoute",
        "UniqueKey": "appmesh.gatewayroute.gatewayroutespec.grpcroute",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.gatewayroutespec.http2route": {
        "Required": "No",
        "Type": "HttpGatewayRoute",
        "UniqueKey": "appmesh.gatewayroute.gatewayroutespec.http2route",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.gatewayroutespec.httproute": {
        "Required": "No",
        "Type": "HttpGatewayRoute",
        "UniqueKey": "appmesh.gatewayroute.gatewayroutespec.httproute",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.gatewayroutetarget.virtualservice": {
        "Required": "Yes",
        "Type": "GatewayRouteVirtualService",
        "UniqueKey": "appmesh.gatewayroute.gatewayroutetarget.virtualservice",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.gatewayroutevirtualservice.virtualservicename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.gatewayroute.gatewayroutevirtualservice.virtualservicename",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.grpcgatewayroute.action": {
        "Required": "Yes",
        "Type": "GrpcGatewayRouteAction",
        "UniqueKey": "appmesh.gatewayroute.grpcgatewayroute.action",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.grpcgatewayroute.match": {
        "Required": "Yes",
        "Type": "GrpcGatewayRouteMatch",
        "UniqueKey": "appmesh.gatewayroute.grpcgatewayroute.match",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.grpcgatewayrouteaction.target": {
        "Required": "Yes",
        "Type": "GatewayRouteTarget",
        "UniqueKey": "appmesh.gatewayroute.grpcgatewayrouteaction.target",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.grpcgatewayroutematch.servicename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.gatewayroute.grpcgatewayroutematch.servicename",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.httpgatewayroute.action": {
        "Required": "Yes",
        "Type": "HttpGatewayRouteAction",
        "UniqueKey": "appmesh.gatewayroute.httpgatewayroute.action",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.httpgatewayroute.match": {
        "Required": "Yes",
        "Type": "HttpGatewayRouteMatch",
        "UniqueKey": "appmesh.gatewayroute.httpgatewayroute.match",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.httpgatewayrouteaction.target": {
        "Required": "Yes",
        "Type": "GatewayRouteTarget",
        "UniqueKey": "appmesh.gatewayroute.httpgatewayrouteaction.target",
        "UpdateRequires": "Replacement"
    },
    "appmesh.gatewayroute.httpgatewayroutematch.prefix": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.gatewayroute.httpgatewayroutematch.prefix",
        "UpdateRequires": "Replacement"
    },
    "appmesh.mesh.egressfilter.type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "appmesh.mesh.egressfilter.type",
        "UpdateRequires": "Replacement"
    },
    "appmesh.mesh.meshspec.egressfilter": {
        "Required": "No",
        "Type": "EgressFilter",
        "UniqueKey": "appmesh.mesh.meshspec.egressfilter",
        "UpdateRequires": "Replacement"
    },
    "appmesh.mesh.tagref.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.mesh.tagref.key",
        "UpdateRequires": "Replacement"
    },
    "appmesh.mesh.tagref.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.mesh.tagref.value",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.duration.unit": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.route.duration.unit",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.duration.value": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.duration.value",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcretrypolicy.grpcretryevents": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appmesh.route.grpcretrypolicy.grpcretryevents",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcretrypolicy.httpretryevents": {
        "Required": "No",
        "SampleValue": "TODO-HttpRetryEvents",
        "UniqueKey": "appmesh.route.grpcretrypolicy.httpretryevents",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcretrypolicy.maxretries": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.grpcretrypolicy.maxretries",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcretrypolicy.perretrytimeout": {
        "Required": "Yes",
        "Type": "Duration",
        "UniqueKey": "appmesh.route.grpcretrypolicy.perretrytimeout",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcretrypolicy.tcpretryevents": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appmesh.route.grpcretrypolicy.tcpretryevents",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroute.action": {
        "Required": "Yes",
        "Type": "GrpcRouteAction",
        "UniqueKey": "appmesh.route.grpcroute.action",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroute.match": {
        "Required": "Yes",
        "Type": "GrpcRouteMatch",
        "UniqueKey": "appmesh.route.grpcroute.match",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroute.retrypolicy": {
        "Required": "No",
        "Type": "GrpcRetryPolicy",
        "UniqueKey": "appmesh.route.grpcroute.retrypolicy",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroute.timeout": {
        "Required": "No",
        "Type": "GrpcTimeout",
        "UniqueKey": "appmesh.route.grpcroute.timeout",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcrouteaction.weightedtargets": {
        "Required": "Yes",
        "Type": "List of [WeightedTarget",
        "UniqueKey": "appmesh.route.grpcrouteaction.weightedtargets",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutematch.metadata": {
        "Required": "No",
        "Type": "List of [GrpcRouteMetadata",
        "UniqueKey": "appmesh.route.grpcroutematch.metadata",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutematch.methodname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutematch.methodname",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutematch.servicename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutematch.servicename",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutemetadata.invert": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appmesh.route.grpcroutemetadata.invert",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutemetadata.match": {
        "Required": "No",
        "Type": "GrpcRouteMetadataMatchMethod",
        "UniqueKey": "appmesh.route.grpcroutemetadata.match",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutemetadata.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutemetadata.name",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutemetadatamatchmethod.exact": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutemetadatamatchmethod.exact",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutemetadatamatchmethod.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutemetadatamatchmethod.prefix",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutemetadatamatchmethod.range": {
        "Required": "No",
        "Type": "MatchRange",
        "UniqueKey": "appmesh.route.grpcroutemetadatamatchmethod.range",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutemetadatamatchmethod.regex": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutemetadatamatchmethod.regex",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpcroutemetadatamatchmethod.suffix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutemetadatamatchmethod.suffix",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpctimeout.idle": {
        "Required": "No",
        "Type": "Duration",
        "UniqueKey": "appmesh.route.grpctimeout.idle",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.grpctimeout.perrequest": {
        "Required": "No",
        "Type": "Duration",
        "UniqueKey": "appmesh.route.grpctimeout.perrequest",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.headermatchmethod.exact": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.headermatchmethod.exact",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.headermatchmethod.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.headermatchmethod.prefix",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.headermatchmethod.range": {
        "Required": "No",
        "Type": "MatchRange",
        "UniqueKey": "appmesh.route.headermatchmethod.range",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.headermatchmethod.regex": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.headermatchmethod.regex",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.headermatchmethod.suffix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.headermatchmethod.suffix",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httpretrypolicy.httpretryevents": {
        "Required": "No",
        "SampleValue": "TODO-HttpRetryEvents",
        "UniqueKey": "appmesh.route.httpretrypolicy.httpretryevents",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httpretrypolicy.maxretries": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.httpretrypolicy.maxretries",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httpretrypolicy.perretrytimeout": {
        "Required": "Yes",
        "Type": "Duration",
        "UniqueKey": "appmesh.route.httpretrypolicy.perretrytimeout",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httpretrypolicy.tcpretryevents": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appmesh.route.httpretrypolicy.tcpretryevents",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httproute.action": {
        "Required": "Yes",
        "Type": "HttpRouteAction",
        "UniqueKey": "appmesh.route.httproute.action",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httproute.match": {
        "Required": "Yes",
        "Type": "HttpRouteMatch",
        "UniqueKey": "appmesh.route.httproute.match",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httproute.retrypolicy": {
        "Required": "No",
        "Type": "HttpRetryPolicy",
        "UniqueKey": "appmesh.route.httproute.retrypolicy",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httproute.timeout": {
        "Required": "No",
        "Type": "HttpTimeout",
        "UniqueKey": "appmesh.route.httproute.timeout",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httprouteaction.weightedtargets": {
        "Required": "Yes",
        "Type": "List of [WeightedTarget",
        "UniqueKey": "appmesh.route.httprouteaction.weightedtargets",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httprouteheader.invert": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appmesh.route.httprouteheader.invert",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httprouteheader.match": {
        "Required": "No",
        "Type": "HeaderMatchMethod",
        "UniqueKey": "appmesh.route.httprouteheader.match",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httprouteheader.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.route.httprouteheader.name",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httproutematch.headers": {
        "Required": "No",
        "Type": "List of [HttpRouteHeader",
        "UniqueKey": "appmesh.route.httproutematch.headers",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httproutematch.method": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.httproutematch.method",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httproutematch.prefix": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.route.httproutematch.prefix",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httproutematch.scheme": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.httproutematch.scheme",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httptimeout.idle": {
        "Required": "No",
        "Type": "Duration",
        "UniqueKey": "appmesh.route.httptimeout.idle",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.httptimeout.perrequest": {
        "Required": "No",
        "Type": "Duration",
        "UniqueKey": "appmesh.route.httptimeout.perrequest",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.matchrange.end": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.matchrange.end",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.matchrange.start": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.matchrange.start",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.routespec.grpcroute": {
        "Required": "No",
        "Type": "GrpcRoute",
        "UniqueKey": "appmesh.route.routespec.grpcroute",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.routespec.http2route": {
        "Required": "No",
        "Type": "HttpRoute",
        "UniqueKey": "appmesh.route.routespec.http2route",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.routespec.httproute": {
        "Required": "No",
        "Type": "HttpRoute",
        "UniqueKey": "appmesh.route.routespec.httproute",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.routespec.priority": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.routespec.priority",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.routespec.tcproute": {
        "Required": "No",
        "Type": "TcpRoute",
        "UniqueKey": "appmesh.route.routespec.tcproute",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.tagref.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.route.tagref.key",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.tagref.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.tagref.value",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.tcproute.action": {
        "Required": "Yes",
        "Type": "TcpRouteAction",
        "UniqueKey": "appmesh.route.tcproute.action",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.tcproute.timeout": {
        "Required": "No",
        "Type": "TcpTimeout",
        "UniqueKey": "appmesh.route.tcproute.timeout",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.tcprouteaction.weightedtargets": {
        "Required": "Yes",
        "Type": "List of [WeightedTarget",
        "UniqueKey": "appmesh.route.tcprouteaction.weightedtargets",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.tcptimeout.idle": {
        "Required": "No",
        "Type": "Duration",
        "UniqueKey": "appmesh.route.tcptimeout.idle",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.weightedtarget.virtualnode": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.route.weightedtarget.virtualnode",
        "UpdateRequires": "Replacement"
    },
    "appmesh.route.weightedtarget.weight": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.weightedtarget.weight",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayaccesslog.file": {
        "Required": "No",
        "Type": "VirtualGatewayFileAccessLog",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayaccesslog.file",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaybackenddefaults.clientpolicy": {
        "Required": "No",
        "Type": "VirtualGatewayClientPolicy",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaybackenddefaults.clientpolicy",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayclientpolicy.tls": {
        "Required": "No",
        "Type": "VirtualGatewayClientPolicyTls",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayclientpolicy.tls",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayclientpolicytls.enforce": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayclientpolicytls.enforce",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayclientpolicytls.ports": {
        "Required": "No",
        "Type": "List of Integer",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayclientpolicytls.ports",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayclientpolicytls.validation": {
        "Required": "Yes",
        "Type": "VirtualGatewayTlsValidationContext",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayclientpolicytls.validation",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayconnectionpool.grpc": {
        "Required": "No",
        "Type": "VirtualGatewayGrpcConnectionPool",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayconnectionpool.grpc",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayconnectionpool.http": {
        "Required": "No",
        "Type": "VirtualGatewayHttpConnectionPool",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayconnectionpool.http",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayconnectionpool.http2": {
        "Required": "No",
        "Type": "VirtualGatewayHttp2ConnectionPool",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayconnectionpool.http2",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayfileaccesslog.path": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayfileaccesslog.path",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaygrpcconnectionpool.maxrequests": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaygrpcconnectionpool.maxrequests",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.healthythreshold": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.healthythreshold",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.intervalmillis": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.intervalmillis",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.path",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.port",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.protocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.protocol",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.timeoutmillis": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.timeoutmillis",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.unhealthythreshold": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayhealthcheckpolicy.unhealthythreshold",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayhttp2connectionpool.maxrequests": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayhttp2connectionpool.maxrequests",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayhttpconnectionpool.maxconnections": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayhttpconnectionpool.maxconnections",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayhttpconnectionpool.maxpendingrequests": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayhttpconnectionpool.maxpendingrequests",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistener.connectionpool": {
        "Required": "No",
        "Type": "VirtualGatewayConnectionPool",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistener.connectionpool",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistener.healthcheck": {
        "Required": "No",
        "Type": "VirtualGatewayHealthCheckPolicy",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistener.healthcheck",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistener.portmapping": {
        "Required": "Yes",
        "Type": "VirtualGatewayPortMapping",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistener.portmapping",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistener.tls": {
        "Required": "No",
        "Type": "VirtualGatewayListenerTls",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistener.tls",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistenertls.certificate": {
        "Required": "Yes",
        "Type": "VirtualGatewayListenerTlsCertificate",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistenertls.certificate",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistenertls.mode": {
        "Required": "Yes",
        "SampleValue": "TODO-Mode",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistenertls.mode",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistenertlsacmcertificate.certificatearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistenertlsacmcertificate.certificatearn",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistenertlscertificate.acm": {
        "Required": "No",
        "Type": "VirtualGatewayListenerTlsAcmCertificate",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistenertlscertificate.acm",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistenertlscertificate.file": {
        "Required": "No",
        "Type": "VirtualGatewayListenerTlsFileCertificate",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistenertlscertificate.file",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistenertlsfilecertificate.certificatechain": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistenertlsfilecertificate.certificatechain",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylistenertlsfilecertificate.privatekey": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylistenertlsfilecertificate.privatekey",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaylogging.accesslog": {
        "Required": "No",
        "Type": "VirtualGatewayAccessLog",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaylogging.accesslog",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayportmapping.port": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayportmapping.port",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayportmapping.protocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayportmapping.protocol",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayspec.backenddefaults": {
        "Required": "No",
        "Type": "VirtualGatewayBackendDefaults",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayspec.backenddefaults",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayspec.listeners": {
        "Required": "Yes",
        "Type": "List of [VirtualGatewayListener",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayspec.listeners",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewayspec.logging": {
        "Required": "No",
        "Type": "VirtualGatewayLogging",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewayspec.logging",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaytlsvalidationcontext.trust": {
        "Required": "Yes",
        "Type": "VirtualGatewayTlsValidationContextTrust",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaytlsvalidationcontext.trust",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaytlsvalidationcontextacmtrust.certificateauthorityarns": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaytlsvalidationcontextacmtrust.certificateauthorityarns",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaytlsvalidationcontextfiletrust.certificatechain": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaytlsvalidationcontextfiletrust.certificatechain",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaytlsvalidationcontexttrust.acm": {
        "Required": "No",
        "Type": "VirtualGatewayTlsValidationContextAcmTrust",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaytlsvalidationcontexttrust.acm",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualgateway.virtualgatewaytlsvalidationcontexttrust.file": {
        "Required": "No",
        "Type": "VirtualGatewayTlsValidationContextFileTrust",
        "UniqueKey": "appmesh.virtualgateway.virtualgatewaytlsvalidationcontexttrust.file",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.accesslog.file": {
        "Required": "No",
        "Type": "FileAccessLog",
        "UniqueKey": "appmesh.virtualnode.accesslog.file",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.awscloudmapinstanceattribute.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.awscloudmapinstanceattribute.key",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.awscloudmapinstanceattribute.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.awscloudmapinstanceattribute.value",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.awscloudmapservicediscovery.attributes": {
        "Required": "No",
        "Type": "List of [AwsCloudMapInstanceAttribute",
        "UniqueKey": "appmesh.virtualnode.awscloudmapservicediscovery.attributes",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.awscloudmapservicediscovery.namespacename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.awscloudmapservicediscovery.namespacename",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.awscloudmapservicediscovery.servicename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.awscloudmapservicediscovery.servicename",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.backend.virtualservice": {
        "Required": "No",
        "Type": "VirtualServiceBackend",
        "UniqueKey": "appmesh.virtualnode.backend.virtualservice",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.backenddefaults.clientpolicy": {
        "Required": "No",
        "Type": "ClientPolicy",
        "UniqueKey": "appmesh.virtualnode.backenddefaults.clientpolicy",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.clientpolicy.tls": {
        "Required": "No",
        "Type": "ClientPolicyTls",
        "UniqueKey": "appmesh.virtualnode.clientpolicy.tls",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.clientpolicytls.enforce": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appmesh.virtualnode.clientpolicytls.enforce",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.clientpolicytls.ports": {
        "Required": "No",
        "Type": "List of Integer",
        "UniqueKey": "appmesh.virtualnode.clientpolicytls.ports",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.clientpolicytls.validation": {
        "Required": "Yes",
        "Type": "TlsValidationContext",
        "UniqueKey": "appmesh.virtualnode.clientpolicytls.validation",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.dnsservicediscovery.hostname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.dnsservicediscovery.hostname",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.duration.unit": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.duration.unit",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.duration.value": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.duration.value",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.fileaccesslog.path": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.fileaccesslog.path",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.grpctimeout.idle": {
        "Required": "No",
        "Type": "Duration",
        "UniqueKey": "appmesh.virtualnode.grpctimeout.idle",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.grpctimeout.perrequest": {
        "Required": "No",
        "Type": "Duration",
        "UniqueKey": "appmesh.virtualnode.grpctimeout.perrequest",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.healthcheck.healthythreshold": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.healthcheck.healthythreshold",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.healthcheck.intervalmillis": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.healthcheck.intervalmillis",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.healthcheck.path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.healthcheck.path",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.healthcheck.port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.healthcheck.port",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.healthcheck.protocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.healthcheck.protocol",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.healthcheck.timeoutmillis": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.healthcheck.timeoutmillis",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.healthcheck.unhealthythreshold": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.healthcheck.unhealthythreshold",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.httptimeout.idle": {
        "Required": "No",
        "Type": "Duration",
        "UniqueKey": "appmesh.virtualnode.httptimeout.idle",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.httptimeout.perrequest": {
        "Required": "No",
        "Type": "Duration",
        "UniqueKey": "appmesh.virtualnode.httptimeout.perrequest",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listener.connectionpool": {
        "Required": "No",
        "Type": "VirtualNodeConnectionPool",
        "UniqueKey": "appmesh.virtualnode.listener.connectionpool",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listener.healthcheck": {
        "Required": "No",
        "Type": "HealthCheck",
        "UniqueKey": "appmesh.virtualnode.listener.healthcheck",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listener.outlierdetection": {
        "Required": "No",
        "Type": "OutlierDetection",
        "UniqueKey": "appmesh.virtualnode.listener.outlierdetection",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listener.portmapping": {
        "Required": "Yes",
        "Type": "PortMapping",
        "UniqueKey": "appmesh.virtualnode.listener.portmapping",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listener.timeout": {
        "Required": "No",
        "Type": "ListenerTimeout",
        "UniqueKey": "appmesh.virtualnode.listener.timeout",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listener.tls": {
        "Required": "No",
        "Type": "ListenerTls",
        "UniqueKey": "appmesh.virtualnode.listener.tls",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertimeout.grpc": {
        "Required": "No",
        "Type": "GrpcTimeout",
        "UniqueKey": "appmesh.virtualnode.listenertimeout.grpc",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertimeout.http": {
        "Required": "No",
        "Type": "HttpTimeout",
        "UniqueKey": "appmesh.virtualnode.listenertimeout.http",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertimeout.http2": {
        "Required": "No",
        "Type": "HttpTimeout",
        "UniqueKey": "appmesh.virtualnode.listenertimeout.http2",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertimeout.tcp": {
        "Required": "No",
        "Type": "TcpTimeout",
        "UniqueKey": "appmesh.virtualnode.listenertimeout.tcp",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertls.certificate": {
        "Required": "Yes",
        "Type": "ListenerTlsCertificate",
        "UniqueKey": "appmesh.virtualnode.listenertls.certificate",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertls.mode": {
        "Required": "Yes",
        "SampleValue": "TODO-Mode",
        "UniqueKey": "appmesh.virtualnode.listenertls.mode",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertlsacmcertificate.certificatearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.listenertlsacmcertificate.certificatearn",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertlscertificate.acm": {
        "Required": "No",
        "Type": "ListenerTlsAcmCertificate",
        "UniqueKey": "appmesh.virtualnode.listenertlscertificate.acm",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertlscertificate.file": {
        "Required": "No",
        "Type": "ListenerTlsFileCertificate",
        "UniqueKey": "appmesh.virtualnode.listenertlscertificate.file",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertlsfilecertificate.certificatechain": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.listenertlsfilecertificate.certificatechain",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.listenertlsfilecertificate.privatekey": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.listenertlsfilecertificate.privatekey",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.logging.accesslog": {
        "Required": "No",
        "Type": "AccessLog",
        "UniqueKey": "appmesh.virtualnode.logging.accesslog",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.outlierdetection.baseejectionduration": {
        "Required": "Yes",
        "Type": "Duration",
        "UniqueKey": "appmesh.virtualnode.outlierdetection.baseejectionduration",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.outlierdetection.interval": {
        "Required": "Yes",
        "Type": "Duration",
        "UniqueKey": "appmesh.virtualnode.outlierdetection.interval",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.outlierdetection.maxejectionpercent": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.outlierdetection.maxejectionpercent",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.outlierdetection.maxservererrors": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.outlierdetection.maxservererrors",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.portmapping.port": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.portmapping.port",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.portmapping.protocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.portmapping.protocol",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.servicediscovery.awscloudmap": {
        "Required": "No",
        "Type": "AwsCloudMapServiceDiscovery",
        "UniqueKey": "appmesh.virtualnode.servicediscovery.awscloudmap",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.servicediscovery.dns": {
        "Required": "No",
        "Type": "DnsServiceDiscovery",
        "UniqueKey": "appmesh.virtualnode.servicediscovery.dns",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.tagref.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.tagref.key",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.tagref.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.tagref.value",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.tcptimeout.idle": {
        "Required": "No",
        "Type": "Duration",
        "UniqueKey": "appmesh.virtualnode.tcptimeout.idle",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.tlsvalidationcontext.trust": {
        "Required": "Yes",
        "Type": "TlsValidationContextTrust",
        "UniqueKey": "appmesh.virtualnode.tlsvalidationcontext.trust",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.tlsvalidationcontextacmtrust.certificateauthorityarns": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "appmesh.virtualnode.tlsvalidationcontextacmtrust.certificateauthorityarns",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.tlsvalidationcontextfiletrust.certificatechain": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.tlsvalidationcontextfiletrust.certificatechain",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.tlsvalidationcontexttrust.acm": {
        "Required": "No",
        "Type": "TlsValidationContextAcmTrust",
        "UniqueKey": "appmesh.virtualnode.tlsvalidationcontexttrust.acm",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.tlsvalidationcontexttrust.file": {
        "Required": "No",
        "Type": "TlsValidationContextFileTrust",
        "UniqueKey": "appmesh.virtualnode.tlsvalidationcontexttrust.file",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualnodeconnectionpool.grpc": {
        "Required": "No",
        "Type": "VirtualNodeGrpcConnectionPool",
        "UniqueKey": "appmesh.virtualnode.virtualnodeconnectionpool.grpc",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualnodeconnectionpool.http": {
        "Required": "No",
        "Type": "VirtualNodeHttpConnectionPool",
        "UniqueKey": "appmesh.virtualnode.virtualnodeconnectionpool.http",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualnodeconnectionpool.http2": {
        "Required": "No",
        "Type": "VirtualNodeHttp2ConnectionPool",
        "UniqueKey": "appmesh.virtualnode.virtualnodeconnectionpool.http2",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualnodeconnectionpool.tcp": {
        "Required": "No",
        "Type": "VirtualNodeTcpConnectionPool",
        "UniqueKey": "appmesh.virtualnode.virtualnodeconnectionpool.tcp",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualnodegrpcconnectionpool.maxrequests": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.virtualnodegrpcconnectionpool.maxrequests",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualnodehttp2connectionpool.maxrequests": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.virtualnodehttp2connectionpool.maxrequests",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualnodehttpconnectionpool.maxconnections": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.virtualnodehttpconnectionpool.maxconnections",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualnodehttpconnectionpool.maxpendingrequests": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.virtualnodehttpconnectionpool.maxpendingrequests",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualnodespec.backenddefaults": {
        "Required": "No",
        "Type": "BackendDefaults",
        "UniqueKey": "appmesh.virtualnode.virtualnodespec.backenddefaults",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualnodespec.backends": {
        "Required": "No",
        "Type": "List of [Backend",
        "UniqueKey": "appmesh.virtualnode.virtualnodespec.backends",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualnodespec.listeners": {
        "Required": "No",
        "Type": "List of [Listener",
        "UniqueKey": "appmesh.virtualnode.virtualnodespec.listeners",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualnodespec.logging": {
        "Required": "No",
        "Type": "Logging",
        "UniqueKey": "appmesh.virtualnode.virtualnodespec.logging",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualnodespec.servicediscovery": {
        "Required": "No",
        "Type": "ServiceDiscovery",
        "UniqueKey": "appmesh.virtualnode.virtualnodespec.servicediscovery",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualnodetcpconnectionpool.maxconnections": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.virtualnodetcpconnectionpool.maxconnections",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualservicebackend.clientpolicy": {
        "Required": "No",
        "Type": "ClientPolicy",
        "UniqueKey": "appmesh.virtualnode.virtualservicebackend.clientpolicy",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualnode.virtualservicebackend.virtualservicename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.virtualservicebackend.virtualservicename",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualrouter.portmapping.port": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualrouter.portmapping.port",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualrouter.portmapping.protocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualrouter.portmapping.protocol",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualrouter.tagref.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualrouter.tagref.key",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualrouter.tagref.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.virtualrouter.tagref.value",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualrouter.virtualrouterlistener.portmapping": {
        "Required": "Yes",
        "Type": "PortMapping",
        "UniqueKey": "appmesh.virtualrouter.virtualrouterlistener.portmapping",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualrouter.virtualrouterspec.listeners": {
        "Required": "Yes",
        "Type": "List of [VirtualRouterListener",
        "UniqueKey": "appmesh.virtualrouter.virtualrouterspec.listeners",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualservice.tagref.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualservice.tagref.key",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualservice.tagref.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.virtualservice.tagref.value",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualservice.virtualnodeserviceprovider.virtualnodename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualservice.virtualnodeserviceprovider.virtualnodename",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualservice.virtualrouterserviceprovider.virtualroutername": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualservice.virtualrouterserviceprovider.virtualroutername",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualservice.virtualserviceprovider.virtualnode": {
        "Required": "No",
        "Type": "VirtualNodeServiceProvider",
        "UniqueKey": "appmesh.virtualservice.virtualserviceprovider.virtualnode",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualservice.virtualserviceprovider.virtualrouter": {
        "Required": "No",
        "Type": "VirtualRouterServiceProvider",
        "UniqueKey": "appmesh.virtualservice.virtualserviceprovider.virtualrouter",
        "UpdateRequires": "Replacement"
    },
    "appmesh.virtualservice.virtualservicespec.provider": {
        "Required": "No",
        "Type": "VirtualServiceProvider",
        "UniqueKey": "appmesh.virtualservice.virtualservicespec.provider",
        "UpdateRequires": "Replacement"
    },
    "appstream.directoryconfig.serviceaccountcredentials.accountname": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appstream.directoryconfig.serviceaccountcredentials.accountname",
        "UpdateRequires": "Replacement"
    },
    "appstream.directoryconfig.serviceaccountcredentials.accountpassword": {
        "Maximum": "127",
        "Minimum": "1",
        "Pattern": "^.{1,127}$",
        "Required": "Yes",
        "SampleValue": "TODO-appstream.directoryconfig.serviceaccountcredentials.AccountPassword",
        "Type": "String",
        "UniqueKey": "appstream.directoryconfig.serviceaccountcredentials.accountpassword",
        "UpdateRequires": "Replacement"
    },
    "appstream.fleet.computecapacity.desiredinstances": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appstream.fleet.computecapacity.desiredinstances",
        "UpdateRequires": "Replacement"
    },
    "appstream.fleet.domainjoininfo.directoryname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appstream.fleet.domainjoininfo.directoryname",
        "UpdateRequires": "Replacement"
    },
    "appstream.fleet.domainjoininfo.organizationalunitdistinguishedname": {
        "Maximum": "2000",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appstream.fleet.domainjoininfo.organizationalunitdistinguishedname",
        "UpdateRequires": "Replacement"
    },
    "appstream.fleet.vpcconfig.securitygroupids": {
        "Maximum": "5",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appstream.fleet.vpcconfig.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "appstream.fleet.vpcconfig.subnetids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appstream.fleet.vpcconfig.subnetids",
        "UpdateRequires": "Replacement"
    },
    "appstream.imagebuilder.accessendpoint.endpointtype": {
        "Allowed values": "STREAMING",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appstream.imagebuilder.accessendpoint.endpointtype",
        "UpdateRequires": "Replacement"
    },
    "appstream.imagebuilder.accessendpoint.vpceid": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appstream.imagebuilder.accessendpoint.vpceid",
        "UpdateRequires": "Replacement"
    },
    "appstream.imagebuilder.domainjoininfo.directoryname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appstream.imagebuilder.domainjoininfo.directoryname",
        "UpdateRequires": "Replacement"
    },
    "appstream.imagebuilder.domainjoininfo.organizationalunitdistinguishedname": {
        "Maximum": "2000",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appstream.imagebuilder.domainjoininfo.organizationalunitdistinguishedname",
        "UpdateRequires": "Replacement"
    },
    "appstream.imagebuilder.vpcconfig.securitygroupids": {
        "Maximum": "5",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appstream.imagebuilder.vpcconfig.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "appstream.imagebuilder.vpcconfig.subnetids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appstream.imagebuilder.vpcconfig.subnetids",
        "UpdateRequires": "Replacement"
    },
    "appstream.stack.accessendpoint.endpointtype": {
        "Allowed values": "STREAMING",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appstream.stack.accessendpoint.endpointtype",
        "UpdateRequires": "Replacement"
    },
    "appstream.stack.accessendpoint.vpceid": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appstream.stack.accessendpoint.vpceid",
        "UpdateRequires": "Replacement"
    },
    "appstream.stack.applicationsettings.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appstream.stack.applicationsettings.enabled",
        "UpdateRequires": "Replacement"
    },
    "appstream.stack.applicationsettings.settingsgroup": {
        "Maximum": "100",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appstream.stack.applicationsettings.settingsgroup",
        "UpdateRequires": "Replacement"
    },
    "appstream.stack.storageconnector.connectortype": {
        "Allowed values": "GOOGLE_DRIVE | HOMEFOLDERS | ONE_DRIVE",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appstream.stack.storageconnector.connectortype",
        "UpdateRequires": "Replacement"
    },
    "appstream.stack.storageconnector.domains": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appstream.stack.storageconnector.domains",
        "UpdateRequires": "Replacement"
    },
    "appstream.stack.storageconnector.resourceidentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appstream.stack.storageconnector.resourceidentifier",
        "UpdateRequires": "Replacement"
    },
    "appstream.stack.usersetting.action": {
        "Allowed values": "CLIPBOARD_COPY_FROM_LOCAL_DEVICE | CLIPBOARD_COPY_TO_LOCAL_DEVICE | FILE_DOWNLOAD | FILE_UPLOAD | PRINTING_TO_LOCAL_DEVICE",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appstream.stack.usersetting.action",
        "UpdateRequires": "Replacement"
    },
    "appstream.stack.usersetting.permission": {
        "Allowed values": "DISABLED | ENABLED",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appstream.stack.usersetting.permission",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.authorizationconfig.authorizationtype": {
        "AuthorizationType`  <a name=\"cfn-appsync-datasource-authorizationconfig-authorizationtype\"></a>\nThe authorization type required by the HTTP endpoint\\.  \n+  **AWS\\_IAM*": "The authorization type is Sigv4\\.",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.authorizationconfig.authorizationtype",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.authorizationconfig.awsiamconfig": {
        "Required": "No",
        "Type": "AwsIamConfig",
        "UniqueKey": "appsync.datasource.authorizationconfig.awsiamconfig",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.awsiamconfig.signingregion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.datasource.awsiamconfig.signingregion",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.awsiamconfig.signingservicename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.datasource.awsiamconfig.signingservicename",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.deltasyncconfig.basetablettl": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.deltasyncconfig.basetablettl",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.deltasyncconfig.deltasynctablename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.deltasyncconfig.deltasynctablename",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.deltasyncconfig.deltasynctablettl": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.deltasyncconfig.deltasynctablettl",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.dynamodbconfig.awsregion": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.dynamodbconfig.awsregion",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.dynamodbconfig.deltasyncconfig": {
        "Required": "No",
        "Type": "DeltaSyncConfig",
        "UniqueKey": "appsync.datasource.dynamodbconfig.deltasyncconfig",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.dynamodbconfig.tablename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.dynamodbconfig.tablename",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.dynamodbconfig.usecallercredentials": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appsync.datasource.dynamodbconfig.usecallercredentials",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.dynamodbconfig.versioned": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appsync.datasource.dynamodbconfig.versioned",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.elasticsearchconfig.awsregion": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.elasticsearchconfig.awsregion",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.elasticsearchconfig.endpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.elasticsearchconfig.endpoint",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.httpconfig.authorizationconfig": {
        "Required": "No",
        "Type": "AuthorizationConfig",
        "UniqueKey": "appsync.datasource.httpconfig.authorizationconfig",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.httpconfig.endpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.httpconfig.endpoint",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.lambdaconfig.lambdafunctionarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.lambdaconfig.lambdafunctionarn",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.rdshttpendpointconfig.awsregion": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.rdshttpendpointconfig.awsregion",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.rdshttpendpointconfig.awssecretstorearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.rdshttpendpointconfig.awssecretstorearn",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.rdshttpendpointconfig.databasename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.datasource.rdshttpendpointconfig.databasename",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.rdshttpendpointconfig.dbclusteridentifier": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.rdshttpendpointconfig.dbclusteridentifier",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.rdshttpendpointconfig.schema": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.datasource.rdshttpendpointconfig.schema",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.relationaldatabaseconfig.rdshttpendpointconfig": {
        "Required": "No",
        "Type": "RdsHttpEndpointConfig",
        "UniqueKey": "appsync.datasource.relationaldatabaseconfig.rdshttpendpointconfig",
        "UpdateRequires": "Replacement"
    },
    "appsync.datasource.relationaldatabaseconfig.relationaldatabasesourcetype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.relationaldatabaseconfig.relationaldatabasesourcetype",
        "UpdateRequires": "Replacement"
    },
    "appsync.functionconfiguration.lambdaconflicthandlerconfig.lambdaconflicthandlerarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.functionconfiguration.lambdaconflicthandlerconfig.lambdaconflicthandlerarn",
        "UpdateRequires": "Replacement"
    },
    "appsync.functionconfiguration.syncconfig.conflictdetection": {
        "ConflictDetection`  <a name=\"cfn-appsync-functionconfiguration-syncconfig-conflictdetection\"></a>\nThe Conflict Detection strategy to use\\.  \n+  **VERSION*": "Detect conflicts based on object versions for this resolver\\.\n+  **NONE*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.functionconfiguration.syncconfig.conflictdetection",
        "UpdateRequires": "Replacement"
    },
    "appsync.functionconfiguration.syncconfig.conflicthandler": {
        "ConflictHandler`  <a name=\"cfn-appsync-functionconfiguration-syncconfig-conflicthandler\"></a>\nThe Conflict Resolution strategy to perform in the event of a conflict\\.  \n+  **OPTIMISTIC\\_CONCURRENCY*": "Resolve conflicts by rejecting mutations when versions do not match the latest version at the server\\.\n+  **AUTOMERGE*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.functionconfiguration.syncconfig.conflicthandler",
        "UpdateRequires": "Replacement"
    },
    "appsync.functionconfiguration.syncconfig.lambdaconflicthandlerconfig": {
        "Required": "No",
        "Type": "LambdaConflictHandlerConfig",
        "UniqueKey": "appsync.functionconfiguration.syncconfig.lambdaconflicthandlerconfig",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.additionalauthenticationprovider.authenticationtype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.additionalauthenticationprovider.authenticationtype",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.additionalauthenticationprovider.openidconnectconfig": {
        "Required": "No",
        "Type": "OpenIDConnectConfig",
        "UniqueKey": "appsync.graphqlapi.additionalauthenticationprovider.openidconnectconfig",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.additionalauthenticationprovider.userpoolconfig": {
        "Required": "No",
        "Type": "CognitoUserPoolConfig",
        "UniqueKey": "appsync.graphqlapi.additionalauthenticationprovider.userpoolconfig",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.cognitouserpoolconfig.appidclientregex": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.cognitouserpoolconfig.appidclientregex",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.cognitouserpoolconfig.awsregion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.cognitouserpoolconfig.awsregion",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.cognitouserpoolconfig.userpoolid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.cognitouserpoolconfig.userpoolid",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.logconfig.cloudwatchlogsrolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.logconfig.cloudwatchlogsrolearn",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.logconfig.excludeverbosecontent": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appsync.graphqlapi.logconfig.excludeverbosecontent",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.logconfig.fieldloglevel": {
        "FieldLogLevel`  <a name=\"cfn-appsync-graphqlapi-logconfig-fieldloglevel\"></a>\nThe field logging level\\. Values can be NONE, ERROR, or ALL\\.   \n+  **NONE*": "No field\\-level logs are captured\\.\n+  **ERROR*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.logconfig.fieldloglevel",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.openidconnectconfig.authttl": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "appsync.graphqlapi.openidconnectconfig.authttl",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.openidconnectconfig.clientid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.openidconnectconfig.clientid",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.openidconnectconfig.iatttl": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "appsync.graphqlapi.openidconnectconfig.iatttl",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.openidconnectconfig.issuer": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.openidconnectconfig.issuer",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.userpoolconfig.appidclientregex": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.userpoolconfig.appidclientregex",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.userpoolconfig.awsregion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.userpoolconfig.awsregion",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.userpoolconfig.defaultaction": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.userpoolconfig.defaultaction",
        "UpdateRequires": "Replacement"
    },
    "appsync.graphqlapi.userpoolconfig.userpoolid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.userpoolconfig.userpoolid",
        "UpdateRequires": "Replacement"
    },
    "appsync.resolver.cachingconfig.cachingkeys": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appsync.resolver.cachingconfig.cachingkeys",
        "UpdateRequires": "Replacement"
    },
    "appsync.resolver.cachingconfig.ttl": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "appsync.resolver.cachingconfig.ttl",
        "UpdateRequires": "Replacement"
    },
    "appsync.resolver.lambdaconflicthandlerconfig.lambdaconflicthandlerarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.resolver.lambdaconflicthandlerconfig.lambdaconflicthandlerarn",
        "UpdateRequires": "Replacement"
    },
    "appsync.resolver.pipelineconfig.functions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appsync.resolver.pipelineconfig.functions",
        "UpdateRequires": "Replacement"
    },
    "appsync.resolver.syncconfig.conflictdetection": {
        "ConflictDetection`  <a name=\"cfn-appsync-resolver-syncconfig-conflictdetection\"></a>\nThe Conflict Detection strategy to use\\.  \n+  **VERSION*": "Detect conflicts based on object versions for this resolver\\.\n+  **NONE*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.resolver.syncconfig.conflictdetection",
        "UpdateRequires": "Replacement"
    },
    "appsync.resolver.syncconfig.conflicthandler": {
        "ConflictHandler`  <a name=\"cfn-appsync-resolver-syncconfig-conflicthandler\"></a>\nThe Conflict Resolution strategy to perform in the event of a conflict\\.  \n+  **OPTIMISTIC\\_CONCURRENCY*": "Resolve conflicts by rejecting mutations when versions do not match the latest version at the server\\.\n+  **AUTOMERGE*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.resolver.syncconfig.conflicthandler",
        "UpdateRequires": "Replacement"
    },
    "appsync.resolver.syncconfig.lambdaconflicthandlerconfig": {
        "Required": "No",
        "Type": "LambdaConflictHandlerConfig",
        "UniqueKey": "appsync.resolver.syncconfig.lambdaconflicthandlerconfig",
        "UpdateRequires": "Replacement"
    },
    "as.group.autoscalinggroupname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.group.autoscalinggroupname",
        "UpdateRequires": "Replacement"
    },
    "as.group.availabilityzones": {
        "Required": "Conditional",
        "Type": "List of String",
        "UniqueKey": "as.group.availabilityzones",
        "UpdateRequires": "Replacement"
    },
    "as.group.capacityrebalance": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "as.group.capacityrebalance",
        "UpdateRequires": "Replacement"
    },
    "as.group.cooldown": {
        "Required": "No",
        "SampleValue": "TODO-Cooldown",
        "UniqueKey": "as.group.cooldown",
        "UpdateRequires": "Replacement"
    },
    "as.group.desiredcapacity": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.group.desiredcapacity",
        "UpdateRequires": "Replacement"
    },
    "as.group.healthcheckgraceperiod": {
        "Required": "Conditional",
        "SampleValue": "TODO-HealthCheckGracePeriod",
        "UniqueKey": "as.group.healthcheckgraceperiod",
        "UpdateRequires": "Replacement"
    },
    "as.group.healthchecktype": {
        "Required": "No",
        "SampleValue": "TODO-HealthCheckType",
        "UniqueKey": "as.group.healthchecktype",
        "UpdateRequires": "Replacement"
    },
    "as.group.instanceid": {
        "Required": "Conditional",
        "SampleValue": "TODO-InstanceId",
        "UniqueKey": "as.group.instanceid",
        "UpdateRequires": "Replacement"
    },
    "as.group.launchconfigurationname": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "as.group.launchconfigurationname",
        "UpdateRequires": "Replacement"
    },
    "as.group.launchtemplate": {
        "Required": "Conditional",
        "Type": "LaunchTemplateSpecification",
        "UniqueKey": "as.group.launchtemplate",
        "UpdateRequires": "Replacement"
    },
    "as.group.lifecyclehookspecificationlist": {
        "Required": "No",
        "Type": "List of [LifecycleHookSpecification",
        "UniqueKey": "as.group.lifecyclehookspecificationlist",
        "UpdateRequires": "Replacement"
    },
    "as.group.loadbalancernames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "as.group.loadbalancernames",
        "UpdateRequires": "Replacement"
    },
    "as.group.maxinstancelifetime": {
        "Required": "No",
        "SampleValue": "TODO-MaxInstanceLifetime",
        "UniqueKey": "as.group.maxinstancelifetime",
        "UpdateRequires": "Replacement"
    },
    "as.group.maxsize": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.group.maxsize",
        "UpdateRequires": "Replacement"
    },
    "as.group.metricscollection": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "as.group.metricscollection",
        "UpdateRequires": "Replacement"
    },
    "as.group.minsize": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.group.minsize",
        "UpdateRequires": "Replacement"
    },
    "as.group.mixedinstancespolicy": {
        "Required": "Conditional",
        "SampleValue": "TODO-MixedInstancesPolicy",
        "UniqueKey": "as.group.mixedinstancespolicy",
        "UpdateRequires": "Replacement"
    },
    "as.group.newinstancesprotectedfromscalein": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "as.group.newinstancesprotectedfromscalein",
        "UpdateRequires": "Replacement"
    },
    "as.group.notificationconfigurations": {
        "Required": "No",
        "Type": "List of [NotificationConfiguration",
        "UniqueKey": "as.group.notificationconfigurations",
        "UpdateRequires": "Replacement"
    },
    "as.group.placementgroup": {
        "Required": "No",
        "SampleValue": "TODO-PlacementGroup",
        "UniqueKey": "as.group.placementgroup",
        "UpdateRequires": "Replacement"
    },
    "as.group.servicelinkedrolearn": {
        "Required": "No",
        "SampleValue": "TODO-ServiceLinkedRoleARN",
        "UniqueKey": "as.group.servicelinkedrolearn",
        "UpdateRequires": "Replacement"
    },
    "as.group.tags": {
        "Required": "No",
        "SampleValue": "TODO-Tags",
        "UniqueKey": "as.group.tags",
        "UpdateRequires": "Replacement"
    },
    "as.group.targetgrouparns": {
        "Required": "No",
        "SampleValue": "TODO-TargetGroupARNs",
        "UniqueKey": "as.group.targetgrouparns",
        "UpdateRequires": "Replacement"
    },
    "as.group.terminationpolicies": {
        "Required": "No",
        "SampleValue": "TODO-TerminationPolicies",
        "UniqueKey": "as.group.terminationpolicies",
        "UpdateRequires": "Replacement"
    },
    "as.group.vpczoneidentifier": {
        "Required": "Conditional",
        "Type": "List of String",
        "UniqueKey": "as.group.vpczoneidentifier",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.associatepublicipaddress": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "as.launchconfig.associatepublicipaddress",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.mapping.devicename": {
        "Required": "Yes",
        "SampleValue": "TODO-DeviceName",
        "UniqueKey": "as.launchconfig.blockdev.mapping.devicename",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.mapping.ebs": {
        "Required": "No",
        "Type": "BlockDevice",
        "UniqueKey": "as.launchconfig.blockdev.mapping.ebs",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.mapping.nodevice": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "as.launchconfig.blockdev.mapping.nodevice",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.mapping.virtualname": {
        "Required": "No",
        "SampleValue": "TODO-VirtualName",
        "UniqueKey": "as.launchconfig.blockdev.mapping.virtualname",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.template.deleteontermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "as.launchconfig.blockdev.template.deleteontermination",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.template.encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "as.launchconfig.blockdev.template.encrypted",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.template.iops": {
        "Maximum": "20000",
        "Minimum": "100",
        "Required": "Conditional",
        "UniqueKey": "as.launchconfig.blockdev.template.iops",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.template.snapshotid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "as.launchconfig.blockdev.template.snapshotid",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.template.volumesize": {
        "Maximum": "16384",
        "Minimum": "1",
        "Pattern": "^[1,16384]}$",
        "Required": "Conditional",
        "SampleValue": "1...16384",
        "Type": "Integer",
        "UniqueKey": "as.launchconfig.blockdev.template.volumesize",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.template.volumetype": {
        "Required": "No",
        "SampleValue": "TODO-VolumeType",
        "UniqueKey": "as.launchconfig.blockdev.template.volumetype",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdevicemappings": {
        "Required": "No",
        "Type": "List of [BlockDeviceMapping",
        "UniqueKey": "as.launchconfig.blockdevicemappings",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.classiclinkvpcid": {
        "Required": "No",
        "SampleValue": "TODO-ClassicLinkVPCId",
        "UniqueKey": "as.launchconfig.classiclinkvpcid",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.classiclinkvpcsecuritygroups": {
        "Required": "Conditional",
        "Type": "List of String",
        "UniqueKey": "as.launchconfig.classiclinkvpcsecuritygroups",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.ebsoptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "as.launchconfig.ebsoptimized",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.iaminstanceprofile": {
        "Required": "No",
        "SampleValue": "TODO-IamInstanceProfile",
        "UniqueKey": "as.launchconfig.iaminstanceprofile",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.imageid": {
        "Required": "Yes",
        "SampleValue": "TODO-ImageId",
        "UniqueKey": "as.launchconfig.imageid",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.instanceid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.launchconfig.instanceid",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.instancemonitoring": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "as.launchconfig.instancemonitoring",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.instancetype": {
        "Required": "Yes",
        "SampleValue": "TODO-InstanceType",
        "UniqueKey": "as.launchconfig.instancetype",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.kernelid": {
        "Required": "No",
        "SampleValue": "TODO-KernelId",
        "UniqueKey": "as.launchconfig.kernelid",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.keyname": {
        "Required": "No",
        "SampleValue": "TODO-KeyName",
        "UniqueKey": "as.launchconfig.keyname",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.launchconfigurationname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.launchconfig.launchconfigurationname",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.metadataoptions": {
        "Required": "No",
        "SampleValue": "TODO-MetadataOptions",
        "UniqueKey": "as.launchconfig.metadataoptions",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.placementtenancy": {
        "Required": "No",
        "SampleValue": "TODO-PlacementTenancy",
        "UniqueKey": "as.launchconfig.placementtenancy",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.ramdiskid": {
        "Required": "No",
        "SampleValue": "TODO-RamDiskId",
        "UniqueKey": "as.launchconfig.ramdiskid",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.securitygroups": {
        "Required": "No",
        "SampleValue": "TODO-SecurityGroups",
        "UniqueKey": "as.launchconfig.securitygroups",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.spotprice": {
        "Required": "No",
        "SampleValue": "TODO-SpotPrice",
        "UniqueKey": "as.launchconfig.spotprice",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.userdata": {
        "Maximum": "21847",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.launchconfig.userdata",
        "UpdateRequires": "Replacement"
    },
    "as.metricscollection.granularity": {
        "Allowed Values": "1Minute",
        "AllowedValues": [
            "1Minute"
        ],
        "Pattern": "^[1Minute]",
        "Required": "Yes",
        "SampleValue": "1Minute",
        "Type": "String",
        "UniqueKey": "as.metricscollection.granularity",
        "UpdateRequires": "Replacement"
    },
    "as.metricscollection.metrics": {
        "Allowed Values": "+  `GroupMinSize` \n+  `GroupMaxSize` \n+  `GroupDesiredCapacity` \n+  `GroupInServiceInstances` \n+  `GroupPendingInstances` \n+  `GroupStandbyInstances` \n+  `GroupTerminatingInstances` \n+  `GroupTotalInstances` \n+  `GroupInServiceCapacity` \n+  `GroupPendingCapacity` \n+  `GroupStandbyCapacity` \n+  `GroupTerminatingCapacity` \n+  `GroupTotalCapacity` \nIf you specify `Granularity` and don't specify any metrics, all metrics are enabled\\.",
        "AllowedValues": [
            "+  `GroupMinSize` \n+  `GroupMaxSize` \n+  `GroupDesiredCapacity` \n+  `GroupInServiceInstances` \n+  `GroupPendingInstances` \n+  `GroupStandbyInstances` \n+  `GroupTerminatingInstances` \n+  `GroupTotalInstances` \n+  `GroupInServiceCapacity` \n+  `GroupPendingCapacity` \n+  `GroupStandbyCapacity` \n+  `GroupTerminatingCapacity` \n+  `GroupTotalCapacity` \nIf you specify `Granularity` and don't specify any metrics, all metrics are enabled\\."
        ],
        "Pattern": "^[+  `GroupMinSize` \n+  `GroupMaxSize` \n+  `GroupDesiredCapacity` \n+  `GroupInServiceInstances` \n+  `GroupPendingInstances` \n+  `GroupStandbyInstances` \n+  `GroupTerminatingInstances` \n+  `GroupTotalInstances` \n+  `GroupInServiceCapacity` \n+  `GroupPendingCapacity` \n+  `GroupStandbyCapacity` \n+  `GroupTerminatingCapacity` \n+  `GroupTotalCapacity` \nIf you specify `Granularity` and don't specify any metrics, all metrics are enabled\\.]",
        "Required": "No",
        "SampleValue": "+  `GroupMinSize` \n+  `GroupMaxSize` \n+  `GroupDesiredCapacity` \n+  `GroupInServiceInstances` \n+  `GroupPendingInstances` \n+  `GroupStandbyInstances` \n+  `GroupTerminatingInstances` \n+  `GroupTotalInstances` \n+  `GroupInServiceCapacity` \n+  `GroupPendingCapacity` \n+  `GroupStandbyCapacity` \n+  `GroupTerminatingCapacity` \n+  `GroupTotalCapacity` \nIf you specify `Granularity` and don't specify any metrics, all metrics are enabled\\.",
        "Type": "List of String",
        "UniqueKey": "as.metricscollection.metrics",
        "UpdateRequires": "Replacement"
    },
    "as.notificationconfigurations.notificationtypes": {
        "Allowed Values": "+  `autoscaling:EC2_INSTANCE_LAUNCH` \n+  `autoscaling:EC2_INSTANCE_LAUNCH_ERROR` \n+  `autoscaling:EC2_INSTANCE_TERMINATE` \n+  `autoscaling:EC2_INSTANCE_TERMINATE_ERROR` \n+  `autoscaling:TEST_NOTIFICATION",
        "AllowedValues": [
            "+  `autoscaling:EC2_INSTANCE_LAUNCH` \n+  `autoscaling:EC2_INSTANCE_LAUNCH_ERROR` \n+  `autoscaling:EC2_INSTANCE_TERMINATE` \n+  `autoscaling:EC2_INSTANCE_TERMINATE_ERROR` \n+  `autoscaling:TEST_NOTIFICATION"
        ],
        "Pattern": "^[+  `autoscaling:EC2_INSTANCE_LAUNCH` \n+  `autoscaling:EC2_INSTANCE_LAUNCH_ERROR` \n+  `autoscaling:EC2_INSTANCE_TERMINATE` \n+  `autoscaling:EC2_INSTANCE_TERMINATE_ERROR` \n+  `autoscaling:TEST_NOTIFICATION]",
        "Required": "No",
        "SampleValue": "+  `autoscaling:EC2_INSTANCE_LAUNCH` \n+  `autoscaling:EC2_INSTANCE_LAUNCH_ERROR` \n+  `autoscaling:EC2_INSTANCE_TERMINATE` \n+  `autoscaling:EC2_INSTANCE_TERMINATE_ERROR` \n+  `autoscaling:TEST_NOTIFICATION",
        "Type": "List of String",
        "UniqueKey": "as.notificationconfigurations.notificationtypes",
        "UpdateRequires": "Replacement"
    },
    "as.notificationconfigurations.topicarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.notificationconfigurations.topicarn",
        "UpdateRequires": "Replacement"
    },
    "as.policy.adjustmenttype": {
        "Required": "Conditional",
        "SampleValue": "TODO-AdjustmentType",
        "UniqueKey": "as.policy.adjustmenttype",
        "UpdateRequires": "Replacement"
    },
    "as.policy.autoscalinggroupname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.policy.autoscalinggroupname",
        "UpdateRequires": "Replacement"
    },
    "as.policy.cooldown": {
        "Required": "No",
        "SampleValue": "TODO-Cooldown",
        "UniqueKey": "as.policy.cooldown",
        "UpdateRequires": "Replacement"
    },
    "as.policy.estimatedinstancewarmup": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "as.policy.estimatedinstancewarmup",
        "UpdateRequires": "Replacement"
    },
    "as.policy.metricaggregationtype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.policy.metricaggregationtype",
        "UpdateRequires": "Replacement"
    },
    "as.policy.minadjustmentmagnitude": {
        "Required": "No",
        "SampleValue": "TODO-MinAdjustmentMagnitude",
        "UniqueKey": "as.policy.minadjustmentmagnitude",
        "UpdateRequires": "Replacement"
    },
    "as.policy.policytype": {
        "Required": "Conditional",
        "SampleValue": "TODO-PolicyType",
        "UniqueKey": "as.policy.policytype",
        "UpdateRequires": "Replacement"
    },
    "as.policy.scalingadjustment": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "as.policy.scalingadjustment",
        "UpdateRequires": "Replacement"
    },
    "as.policy.stepadjustments": {
        "Required": "Conditional",
        "Type": "List of [StepAdjustment",
        "UniqueKey": "as.policy.stepadjustments",
        "UpdateRequires": "Replacement"
    },
    "as.policy.targettrackingconfiguration": {
        "Required": "Conditional",
        "Type": "TargetTrackingConfiguration",
        "UniqueKey": "as.policy.targettrackingconfiguration",
        "UpdateRequires": "Replacement"
    },
    "as.tags.key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.tags.key",
        "UpdateRequires": "Replacement"
    },
    "as.tags.propagateatlaunch": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "as.tags.propagateatlaunch",
        "UpdateRequires": "Replacement"
    },
    "as.tags.value": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.tags.value",
        "UpdateRequires": "Replacement"
    },
    "ask.skill.authenticationconfiguration.clientid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ask.skill.authenticationconfiguration.clientid",
        "UpdateRequires": "Replacement"
    },
    "ask.skill.authenticationconfiguration.clientsecret": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ask.skill.authenticationconfiguration.clientsecret",
        "UpdateRequires": "Replacement"
    },
    "ask.skill.authenticationconfiguration.refreshtoken": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ask.skill.authenticationconfiguration.refreshtoken",
        "UpdateRequires": "Replacement"
    },
    "ask.skill.overrides.manifest": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "ask.skill.overrides.manifest",
        "UpdateRequires": "Replacement"
    },
    "ask.skill.skillpackage.overrides": {
        "Required": "No",
        "Type": "Overrides",
        "UniqueKey": "ask.skill.skillpackage.overrides",
        "UpdateRequires": "Replacement"
    },
    "ask.skill.skillpackage.s3bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ask.skill.skillpackage.s3bucket",
        "UpdateRequires": "Replacement"
    },
    "ask.skill.skillpackage.s3bucketrole": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ask.skill.skillpackage.s3bucketrole",
        "UpdateRequires": "Replacement"
    },
    "ask.skill.skillpackage.s3key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ask.skill.skillpackage.s3key",
        "UpdateRequires": "Replacement"
    },
    "ask.skill.skillpackage.s3objectversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ask.skill.skillpackage.s3objectversion",
        "UpdateRequires": "Replacement"
    },
    "athena.datacatalog.tags.tags": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "athena.datacatalog.tags.tags",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.encryptionconfiguration.encryptionoption": {
        "Allowed values": "CSE_KMS | SSE_KMS | SSE_S3",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "athena.workgroup.encryptionconfiguration.encryptionoption",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.encryptionconfiguration.kmskey": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "athena.workgroup.encryptionconfiguration.kmskey",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.resultconfiguration.encryptionconfiguration": {
        "Required": "No",
        "Type": "EncryptionConfiguration",
        "UniqueKey": "athena.workgroup.resultconfiguration.encryptionconfiguration",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.resultconfiguration.outputlocation": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "athena.workgroup.resultconfiguration.outputlocation",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.resultconfigurationupdates.encryptionconfiguration": {
        "Required": "No",
        "Type": "EncryptionConfiguration",
        "UniqueKey": "athena.workgroup.resultconfigurationupdates.encryptionconfiguration",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.resultconfigurationupdates.outputlocation": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "athena.workgroup.resultconfigurationupdates.outputlocation",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.resultconfigurationupdates.removeencryptionconfiguration": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "athena.workgroup.resultconfigurationupdates.removeencryptionconfiguration",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.resultconfigurationupdates.removeoutputlocation": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "athena.workgroup.resultconfigurationupdates.removeoutputlocation",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.tags.tags": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "athena.workgroup.tags.tags",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfiguration.bytesscannedcutoffperquery": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "athena.workgroup.workgroupconfiguration.bytesscannedcutoffperquery",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfiguration.enforceworkgroupconfiguration": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "athena.workgroup.workgroupconfiguration.enforceworkgroupconfiguration",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfiguration.publishcloudwatchmetricsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "athena.workgroup.workgroupconfiguration.publishcloudwatchmetricsenabled",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfiguration.requesterpaysenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "athena.workgroup.workgroupconfiguration.requesterpaysenabled",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfiguration.resultconfiguration": {
        "Required": "No",
        "Type": "ResultConfiguration",
        "UniqueKey": "athena.workgroup.workgroupconfiguration.resultconfiguration",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfigurationupdates.bytesscannedcutoffperquery": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "athena.workgroup.workgroupconfigurationupdates.bytesscannedcutoffperquery",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfigurationupdates.enforceworkgroupconfiguration": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "athena.workgroup.workgroupconfigurationupdates.enforceworkgroupconfiguration",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfigurationupdates.publishcloudwatchmetricsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "athena.workgroup.workgroupconfigurationupdates.publishcloudwatchmetricsenabled",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfigurationupdates.removebytesscannedcutoffperquery": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "athena.workgroup.workgroupconfigurationupdates.removebytesscannedcutoffperquery",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfigurationupdates.requesterpaysenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "athena.workgroup.workgroupconfigurationupdates.requesterpaysenabled",
        "UpdateRequires": "Replacement"
    },
    "athena.workgroup.workgroupconfigurationupdates.resultconfigurationupdates": {
        "Required": "No",
        "Type": "ResultConfigurationUpdates",
        "UniqueKey": "athena.workgroup.workgroupconfigurationupdates.resultconfigurationupdates",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.assessmentreportsdestination.destination": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^(S|s)3:\\/\\/[a-zA-Z0-9-_\\/.]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "auditmanager.assessment.assessmentreportsdestination.destination",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.assessmentreportsdestination.destinationtype": {
        "Allowed values": "S3",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "auditmanager.assessment.assessmentreportsdestination.destinationtype",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.awsaccount.emailaddress": {
        "Maximum": "320",
        "Minimum": "1",
        "Pattern": "^.*@.*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "auditmanager.assessment.awsaccount.emailaddress",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.awsaccount.id": {
        "Maximum": "12",
        "Minimum": "12",
        "Pattern": "^[0-9]{12}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "auditmanager.assessment.awsaccount.id",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.awsaccount.name": {
        "Maximum": "50",
        "Minimum": "1",
        "Pattern": "^[\\u0020-\\u007E]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "auditmanager.assessment.awsaccount.name",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.awsservice.servicename": {
        "Maximum": "40",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9-\\s().]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "auditmanager.assessment.awsservice.servicename",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.delegation.assessmentid": {
        "Maximum": "36",
        "Minimum": "36",
        "Pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "auditmanager.assessment.delegation.assessmentid",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.delegation.assessmentname": {
        "Maximum": "300",
        "Minimum": "1",
        "Pattern": "^[\\w\\W\\s\\S]*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "auditmanager.assessment.delegation.assessmentname",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.delegation.comment": {
        "Maximum": "350",
        "Pattern": "^[\\w\\W\\s\\S]*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "auditmanager.assessment.delegation.comment",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.delegation.controlsetid": {
        "Maximum": "300",
        "Minimum": "1",
        "Pattern": "^[\\w\\W\\s\\S]*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "auditmanager.assessment.delegation.controlsetid",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.delegation.createdby": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9\\s-_()\\[\\]]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "auditmanager.assessment.delegation.createdby",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.delegation.creationtime": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "auditmanager.assessment.delegation.creationtime",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.delegation.id": {
        "Maximum": "36",
        "Minimum": "36",
        "Pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "auditmanager.assessment.delegation.id",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.delegation.lastupdated": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "auditmanager.assessment.delegation.lastupdated",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.delegation.rolearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^arn:.*:iam:.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "auditmanager.assessment.delegation.rolearn",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.delegation.roletype": {
        "Allowed values": "PROCESS_OWNER | RESOURCE_OWNER",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "auditmanager.assessment.delegation.roletype",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.delegation.status": {
        "Allowed values": "COMPLETE | IN_PROGRESS | UNDER_REVIEW",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "auditmanager.assessment.delegation.status",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.role.rolearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^arn:.*:iam:.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "auditmanager.assessment.role.rolearn",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.role.roletype": {
        "Allowed values": "PROCESS_OWNER | RESOURCE_OWNER",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "auditmanager.assessment.role.roletype",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.scope.awsaccounts": {
        "Required": "No",
        "Type": "List of [AWSAccount",
        "UniqueKey": "auditmanager.assessment.scope.awsaccounts",
        "UpdateRequires": "Replacement"
    },
    "auditmanager.assessment.scope.awsservices": {
        "Required": "No",
        "Type": "List of [AWSService",
        "UniqueKey": "auditmanager.assessment.scope.awsservices",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.instancesdistribution.ondemandallocationstrategy": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.instancesdistribution.ondemandallocationstrategy",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.instancesdistribution.ondemandbasecapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscaling.autoscalinggroup.instancesdistribution.ondemandbasecapacity",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.instancesdistribution.ondemandpercentageabovebasecapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscaling.autoscalinggroup.instancesdistribution.ondemandpercentageabovebasecapacity",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.instancesdistribution.spotallocationstrategy": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.instancesdistribution.spotallocationstrategy",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.instancesdistribution.spotinstancepools": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscaling.autoscalinggroup.instancesdistribution.spotinstancepools",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.instancesdistribution.spotmaxprice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.instancesdistribution.spotmaxprice",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.launchtemplate.launchtemplatespecification": {
        "Required": "Yes",
        "Type": "LaunchTemplateSpecification",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplate.launchtemplatespecification",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.launchtemplate.overrides": {
        "Required": "No",
        "SampleValue": "TODO-Overrides",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplate.overrides",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.launchtemplateoverrides.instancetype": {
        "Required": "No",
        "SampleValue": "TODO-InstanceType",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplateoverrides.instancetype",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.launchtemplateoverrides.launchtemplatespecification": {
        "Required": "No",
        "SampleValue": "TODO-LaunchTemplateSpecification",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplateoverrides.launchtemplatespecification",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.launchtemplateoverrides.weightedcapacity": {
        "Required": "No",
        "SampleValue": "TODO-WeightedCapacity",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplateoverrides.weightedcapacity",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.launchtemplatespecification.launchtemplateid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplatespecification.launchtemplateid",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.launchtemplatespecification.launchtemplatename": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplatespecification.launchtemplatename",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.launchtemplatespecification.version": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplatespecification.version",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.defaultresult": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.defaultresult",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.heartbeattimeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.heartbeattimeout",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.lifecyclehookname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[A-Za-z0-9\\-_\\/]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.lifecyclehookname",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.lifecycletransition": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.lifecycletransition",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.notificationmetadata": {
        "Maximum": "1023",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.notificationmetadata",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.notificationtargetarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.notificationtargetarn",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.rolearn": {
        "Required": "No",
        "SampleValue": "TODO-RoleARN",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.rolearn",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.mixedinstancespolicy.instancesdistribution": {
        "Required": "No",
        "Type": "InstancesDistribution",
        "UniqueKey": "autoscaling.autoscalinggroup.mixedinstancespolicy.instancesdistribution",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.mixedinstancespolicy.launchtemplate": {
        "Required": "Yes",
        "Type": "LaunchTemplate",
        "UniqueKey": "autoscaling.autoscalinggroup.mixedinstancespolicy.launchtemplate",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.launchconfig.metadataoption.httpendpoint": {
        "Allowed values": "disabled | enabled",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.launchconfig.metadataoption.httpendpoint",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.launchconfig.metadataoption.httpputresponsehoplimit": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^[1,64]}$",
        "Required": "No",
        "SampleValue": "1...64",
        "Type": "Integer",
        "UniqueKey": "autoscaling.launchconfig.metadataoption.httpputresponsehoplimit",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.launchconfig.metadataoption.httptokens": {
        "Allowed values": "optional | required",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.launchconfig.metadataoption.httptokens",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.launchconfig.metadataoptions.httpendpoint": {
        "Allowed values": "disabled | enabled",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.launchconfig.metadataoptions.httpendpoint",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.launchconfig.metadataoptions.httpputresponsehoplimit": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^[1,64]}$",
        "Required": "No",
        "SampleValue": "1...64",
        "Type": "Integer",
        "UniqueKey": "autoscaling.launchconfig.metadataoptions.httpputresponsehoplimit",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.launchconfig.metadataoptions.httptokens": {
        "Allowed values": "optional | required",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.launchconfig.metadataoptions.httptokens",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.customizedmetricspecification.dimensions": {
        "Required": "No",
        "Type": "List of [MetricDimension",
        "UniqueKey": "autoscaling.scalingpolicy.customizedmetricspecification.dimensions",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.customizedmetricspecification.metricname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.customizedmetricspecification.metricname",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.customizedmetricspecification.namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.customizedmetricspecification.namespace",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.customizedmetricspecification.statistic": {
        "Allowed values": "Average | Maximum | Minimum | SampleCount | Sum",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.customizedmetricspecification.statistic",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.customizedmetricspecification.unit": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.customizedmetricspecification.unit",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.metricdimension.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.metricdimension.name",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.metricdimension.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.metricdimension.value",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.predefinedmetricspecification.predefinedmetrictype": {
        "Allowed values": "ALBRequestCountPerTarget | ASGAverageCPUUtilization | ASGAverageNetworkIn | ASGAverageNetworkOut",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.predefinedmetricspecification.predefinedmetrictype",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.predefinedmetricspecification.resourcelabel": {
        "Maximum": "1023",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.predefinedmetricspecification.resourcelabel",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.stepadjustments.metricintervallowerbound": {
        "Required": "Conditional",
        "Type": "Double",
        "UniqueKey": "autoscaling.scalingpolicy.stepadjustments.metricintervallowerbound",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.stepadjustments.metricintervalupperbound": {
        "Required": "Conditional",
        "Type": "Double",
        "UniqueKey": "autoscaling.scalingpolicy.stepadjustments.metricintervalupperbound",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.stepadjustments.scalingadjustment": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "autoscaling.scalingpolicy.stepadjustments.scalingadjustment",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.targettrackingconfiguration.customizedmetricspecification": {
        "Required": "Conditional",
        "Type": "CustomizedMetricSpecification",
        "UniqueKey": "autoscaling.scalingpolicy.targettrackingconfiguration.customizedmetricspecification",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.targettrackingconfiguration.disablescalein": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "autoscaling.scalingpolicy.targettrackingconfiguration.disablescalein",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.targettrackingconfiguration.predefinedmetricspecification": {
        "Required": "Conditional",
        "Type": "PredefinedMetricSpecification",
        "UniqueKey": "autoscaling.scalingpolicy.targettrackingconfiguration.predefinedmetricspecification",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.scalingpolicy.targettrackingconfiguration.targetvalue": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "autoscaling.scalingpolicy.targettrackingconfiguration.targetvalue",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.applicationsource.cloudformationstackarn": {
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.applicationsource.cloudformationstackarn",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.applicationsource.tagfilters": {
        "Required": "No",
        "Type": "List of [TagFilter",
        "UniqueKey": "autoscalingplans.scalingplan.applicationsource.tagfilters",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.customizedloadmetricspecification.dimensions": {
        "Required": "No",
        "Type": "List of [MetricDimension",
        "UniqueKey": "autoscalingplans.scalingplan.customizedloadmetricspecification.dimensions",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.customizedloadmetricspecification.metricname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedloadmetricspecification.metricname",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.customizedloadmetricspecification.namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedloadmetricspecification.namespace",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.customizedloadmetricspecification.statistic": {
        "Allowed Values": "Sum",
        "AllowedValues": [
            "Sum"
        ],
        "Pattern": "^[Sum]",
        "Required": "Yes",
        "SampleValue": "Sum",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedloadmetricspecification.statistic",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.customizedloadmetricspecification.unit": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedloadmetricspecification.unit",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.customizedscalingmetricspecification.dimensions": {
        "Required": "No",
        "Type": "List of [MetricDimension",
        "UniqueKey": "autoscalingplans.scalingplan.customizedscalingmetricspecification.dimensions",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.customizedscalingmetricspecification.metricname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedscalingmetricspecification.metricname",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.customizedscalingmetricspecification.namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedscalingmetricspecification.namespace",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.customizedscalingmetricspecification.statistic": {
        "Allowed values": "Average | Maximum | Minimum | SampleCount | Sum",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedscalingmetricspecification.statistic",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.customizedscalingmetricspecification.unit": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedscalingmetricspecification.unit",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.metricdimension.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.metricdimension.name",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.metricdimension.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.metricdimension.value",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.predefinedloadmetricspecification.predefinedloadmetrictype": {
        "Allowed values": "ALBTargetGroupRequestCount | ASGTotalCPUUtilization | ASGTotalNetworkIn | ASGTotalNetworkOut",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.predefinedloadmetricspecification.predefinedloadmetrictype",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.predefinedloadmetricspecification.resourcelabel": {
        "Maximum": "1023",
        "Minimum": "1",
        "Pattern": "^.{1,1023}$",
        "Required": "Conditional",
        "SampleValue": "TODO-autoscalingplans.scalingplan.predefinedloadmetricspecification.ResourceLabel",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.predefinedloadmetricspecification.resourcelabel",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.predefinedscalingmetricspecification.predefinedscalingmetrictype": {
        "Allowed values": "ALBRequestCountPerTarget | ASGAverageCPUUtilization | ASGAverageNetworkIn | ASGAverageNetworkOut | DynamoDBReadCapacityUtilization | DynamoDBWriteCapacityUtilization | EC2SpotFleetRequestAverageCPUUtilization | EC2SpotFleetRequestAverageNetworkIn | EC2SpotFleetRequestAverageNetworkOut | ECSServiceAverageCPUUtilization | ECSServiceAverageMemoryUtilization | RDSReaderAverageCPUUtilization | RDSReaderAverageDatabaseConnections",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.predefinedscalingmetricspecification.predefinedscalingmetrictype",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.predefinedscalingmetricspecification.resourcelabel": {
        "Maximum": "1023",
        "Minimum": "1",
        "Pattern": "^.{1,1023}$",
        "Required": "Conditional",
        "SampleValue": "TODO-autoscalingplans.scalingplan.predefinedscalingmetricspecification.ResourceLabel",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.predefinedscalingmetricspecification.resourcelabel",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.customizedloadmetricspecification": {
        "Required": "Conditional",
        "SampleValue": "TODO-CustomizedLoadMetricSpecification",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.customizedloadmetricspecification",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.disabledynamicscaling": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.disabledynamicscaling",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.maxcapacity": {
        "Required": "Yes",
        "SampleValue": "TODO-MaxCapacity",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.maxcapacity",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.mincapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.mincapacity",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.predefinedloadmetricspecification": {
        "Required": "Conditional",
        "SampleValue": "TODO-PredefinedLoadMetricSpecification",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.predefinedloadmetricspecification",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.predictivescalingmaxcapacitybehavior": {
        "Allowed values": "SetForecastCapacityToMaxCapacity | SetMaxCapacityAboveForecastCapacity | SetMaxCapacityToForecastCapacity",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.predictivescalingmaxcapacitybehavior",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.predictivescalingmaxcapacitybuffer": {
        "Required": "Conditional",
        "SampleValue": "TODO-PredictiveScalingMaxCapacityBuffer",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.predictivescalingmaxcapacitybuffer",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.predictivescalingmode": {
        "Allowed values": "ForecastAndScale | ForecastOnly",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.predictivescalingmode",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.resourceid": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.resourceid",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.scalabledimension": {
        "Allowed values": "autoscaling:autoScalingGroup:DesiredCapacity | dynamodb:index:ReadCapacityUnits | dynamodb:index:WriteCapacityUnits | dynamodb:table:ReadCapacityUnits | dynamodb:table:WriteCapacityUnits | ec2:spot-fleet-request:TargetCapacity | ecs:service:DesiredCount | rds:cluster:ReadReplicaCount",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.scalabledimension",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.scalingpolicyupdatebehavior": {
        "Allowed values": "KeepExternalPolicies | ReplaceExternalPolicies",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.scalingpolicyupdatebehavior",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.scheduledactionbuffertime": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.scheduledactionbuffertime",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.servicenamespace": {
        "Allowed values": "autoscaling | dynamodb | ec2 | ecs | rds",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.servicenamespace",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.scalinginstruction.targettrackingconfigurations": {
        "Required": "Yes",
        "Type": "List of [TargetTrackingConfiguration",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.targettrackingconfigurations",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.tagfilter.key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.tagfilter.key",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.tagfilter.values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "autoscalingplans.scalingplan.tagfilter.values",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.customizedscalingmetricspecification": {
        "Required": "No",
        "Type": "CustomizedScalingMetricSpecification",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.customizedscalingmetricspecification",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.disablescalein": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.disablescalein",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.estimatedinstancewarmup": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.estimatedinstancewarmup",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.predefinedscalingmetricspecification": {
        "Required": "No",
        "Type": "PredefinedScalingMetricSpecification",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.predefinedscalingmetricspecification",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.scaleincooldown": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.scaleincooldown",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.scaleoutcooldown": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.scaleoutcooldown",
        "UpdateRequires": "Replacement"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.targetvalue": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.targetvalue",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.advancedbackupsettingresourcetype.backupoptions": {
        "Required": "Yes",
        "Type": "Json",
        "UniqueKey": "backup.backupplan.advancedbackupsettingresourcetype.backupoptions",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.advancedbackupsettingresourcetype.resourcetype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupplan.advancedbackupsettingresourcetype.resourcetype",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupplanresourcetype.advancedbackupsettings": {
        "Required": "No",
        "Type": "List of [AdvancedBackupSettingResourceType",
        "UniqueKey": "backup.backupplan.backupplanresourcetype.advancedbackupsettings",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupplanresourcetype.backupplanname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupplan.backupplanresourcetype.backupplanname",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupplanresourcetype.backupplanrule": {
        "Required": "Yes",
        "Type": "List of [BackupRuleResourceType",
        "UniqueKey": "backup.backupplan.backupplanresourcetype.backupplanrule",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupruleresourcetype.completionwindowminutes": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.completionwindowminutes",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupruleresourcetype.copyactions": {
        "Required": "No",
        "Type": "List of [CopyActionResourceType",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.copyactions",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupruleresourcetype.lifecycle": {
        "Required": "No",
        "Type": "LifecycleResourceType",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.lifecycle",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupruleresourcetype.recoverypointtags": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.recoverypointtags",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupruleresourcetype.rulename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.rulename",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupruleresourcetype.scheduleexpression": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.scheduleexpression",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupruleresourcetype.startwindowminutes": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.startwindowminutes",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.backupruleresourcetype.targetbackupvault": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.targetbackupvault",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.copyactionresourcetype.destinationbackupvaultarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupplan.copyactionresourcetype.destinationbackupvaultarn",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.copyactionresourcetype.lifecycle": {
        "Required": "No",
        "Type": "LifecycleResourceType",
        "UniqueKey": "backup.backupplan.copyactionresourcetype.lifecycle",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.lifecycleresourcetype.deleteafterdays": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "backup.backupplan.lifecycleresourcetype.deleteafterdays",
        "UpdateRequires": "Replacement"
    },
    "backup.backupplan.lifecycleresourcetype.movetocoldstorageafterdays": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "backup.backupplan.lifecycleresourcetype.movetocoldstorageafterdays",
        "UpdateRequires": "Replacement"
    },
    "backup.backupselection.backupselectionresourcetype.iamrolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupselection.backupselectionresourcetype.iamrolearn",
        "UpdateRequires": "Replacement"
    },
    "backup.backupselection.backupselectionresourcetype.listoftags": {
        "Required": "No",
        "Type": "List of [ConditionResourceType",
        "UniqueKey": "backup.backupselection.backupselectionresourcetype.listoftags",
        "UpdateRequires": "Replacement"
    },
    "backup.backupselection.backupselectionresourcetype.resources": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "backup.backupselection.backupselectionresourcetype.resources",
        "UpdateRequires": "Replacement"
    },
    "backup.backupselection.backupselectionresourcetype.selectionname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupselection.backupselectionresourcetype.selectionname",
        "UpdateRequires": "Replacement"
    },
    "backup.backupselection.conditionresourcetype.conditionkey": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupselection.conditionresourcetype.conditionkey",
        "UpdateRequires": "Replacement"
    },
    "backup.backupselection.conditionresourcetype.conditiontype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupselection.conditionresourcetype.conditiontype",
        "UpdateRequires": "Replacement"
    },
    "backup.backupselection.conditionresourcetype.conditionvalue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupselection.conditionresourcetype.conditionvalue",
        "UpdateRequires": "Replacement"
    },
    "backup.backupvault.notificationobjecttype.backupvaultevents": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "backup.backupvault.notificationobjecttype.backupvaultevents",
        "UpdateRequires": "Replacement"
    },
    "backup.backupvault.notificationobjecttype.snstopicarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupvault.notificationobjecttype.snstopicarn",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.allocationstrategy": {
        "Required": "No",
        "SampleValue": "TODO-AllocationStrategy",
        "UniqueKey": "batch.computeenvironment.computeresources.allocationstrategy",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.bidpercentage": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "batch.computeenvironment.computeresources.bidpercentage",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.desiredvcpus": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "batch.computeenvironment.computeresources.desiredvcpus",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.ec2configuration": {
        "Required": "No",
        "Type": "List of [Ec2ConfigurationObject",
        "UniqueKey": "batch.computeenvironment.computeresources.ec2configuration",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.ec2keypair": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.computeenvironment.computeresources.ec2keypair",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.imageid": {
        "Required": "No",
        "SampleValue": "TODO-ImageId",
        "UniqueKey": "batch.computeenvironment.computeresources.imageid",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.instancerole": {
        "Required": "No  \n>>>>>>> 1096456c6b2b25f069505b56b407ae9946e80022",
        "SampleValue": "TODO-InstanceRole",
        "UniqueKey": "batch.computeenvironment.computeresources.instancerole",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.instancetypes": {
        "Required": "No  \n>>>>>>> 1096456c6b2b25f069505b56b407ae9946e80022",
        "Type": "List of String",
        "UniqueKey": "batch.computeenvironment.computeresources.instancetypes",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.launchtemplate": {
        "Required": "No",
        "SampleValue": "TODO-LaunchTemplate",
        "UniqueKey": "batch.computeenvironment.computeresources.launchtemplate",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.maxvcpus": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.computeenvironment.computeresources.maxvcpus",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.minvcpus": {
        "Required": "No  \n>>>>>>> 1096456c6b2b25f069505b56b407ae9946e80022",
        "Type": "Integer",
        "UniqueKey": "batch.computeenvironment.computeresources.minvcpus",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.placementgroup": {
        "Required": "No",
        "SampleValue": "TODO-PlacementGroup",
        "UniqueKey": "batch.computeenvironment.computeresources.placementgroup",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.securitygroupids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "batch.computeenvironment.computeresources.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.spotiamfleetrole": {
        "Required": "No",
        "SampleValue": "TODO-SpotIamFleetRole",
        "UniqueKey": "batch.computeenvironment.computeresources.spotiamfleetrole",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.subnets": {
        "Required": "Yes",
        "SampleValue": "TODO-Subnets",
        "UniqueKey": "batch.computeenvironment.computeresources.subnets",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.tags": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "batch.computeenvironment.computeresources.tags",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "batch.computeenvironment.computeresources.type",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.ec2configurationobject.imageidoverride": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-batch.computeenvironment.ec2configurationobject.ImageIdOverride",
        "Type": "String",
        "UniqueKey": "batch.computeenvironment.ec2configurationobject.imageidoverride",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.ec2configurationobject.imagetype": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "Yes",
        "SampleValue": "TODO-batch.computeenvironment.ec2configurationobject.ImageType",
        "Type": "String",
        "UniqueKey": "batch.computeenvironment.ec2configurationobject.imagetype",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.launchtemplatespecification.launchtemplateid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.computeenvironment.launchtemplatespecification.launchtemplateid",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.launchtemplatespecification.launchtemplatename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.computeenvironment.launchtemplatespecification.launchtemplatename",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.launchtemplatespecification.version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.computeenvironment.launchtemplatespecification.version",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.command": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "batch.jobdefinition.containerproperties.command",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.environment": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "batch.jobdefinition.containerproperties.environment",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.executionrolearn": {
        "Required": "No",
        "SampleValue": "TODO-ExecutionRoleArn",
        "UniqueKey": "batch.jobdefinition.containerproperties.executionrolearn",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.fargateplatformconfiguration": {
        "Required": "No",
        "Type": "FargatePlatformConfiguration",
        "UniqueKey": "batch.jobdefinition.containerproperties.fargateplatformconfiguration",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.fargateplatformconfiguration.platformversion": {
        "Required": "No",
        "SampleValue": "TODO-PlatformVersion",
        "UniqueKey": "batch.jobdefinition.containerproperties.fargateplatformconfiguration.platformversion",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.image": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.containerproperties.image",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.instancetype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.containerproperties.instancetype",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.jobrolearn": {
        "Required": "No",
        "SampleValue": "TODO-JobRoleArn",
        "UniqueKey": "batch.jobdefinition.containerproperties.jobrolearn",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.linuxparameters": {
        "Required": "No",
        "Type": "LinuxParameters",
        "UniqueKey": "batch.jobdefinition.containerproperties.linuxparameters",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.linuxparameters.devices": {
        "Required": "No",
        "Type": "List of [Device",
        "UniqueKey": "batch.jobdefinition.containerproperties.linuxparameters.devices",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.linuxparameters.initprocessenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "batch.jobdefinition.containerproperties.linuxparameters.initprocessenabled",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.linuxparameters.maxswap": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.containerproperties.linuxparameters.maxswap",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.linuxparameters.sharedmemorysize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.containerproperties.linuxparameters.sharedmemorysize",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.linuxparameters.swappiness": {
        "Required": "No",
        "SampleValue": "TODO-Swappiness",
        "UniqueKey": "batch.jobdefinition.containerproperties.linuxparameters.swappiness",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.linuxparameters.tmpfs": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "batch.jobdefinition.containerproperties.linuxparameters.tmpfs",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.logconfiguration": {
        "Required": "No",
        "SampleValue": "TODO-LogConfiguration",
        "UniqueKey": "batch.jobdefinition.containerproperties.logconfiguration",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.logconfiguration.logdriver": {
        "Required": "Yes",
        "SampleValue": "TODO-LogDriver",
        "UniqueKey": "batch.jobdefinition.containerproperties.logconfiguration.logdriver",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.logconfiguration.options": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "batch.jobdefinition.containerproperties.logconfiguration.options",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.logconfiguration.secretoptions": {
        "Required": "No",
        "SampleValue": "TODO-SecretOptions",
        "UniqueKey": "batch.jobdefinition.containerproperties.logconfiguration.secretoptions",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.memory": {
        "Required": "No",
        "SampleValue": "TODO-Memory",
        "UniqueKey": "batch.jobdefinition.containerproperties.memory",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.mountpoints": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "batch.jobdefinition.containerproperties.mountpoints",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.networkconfiguration": {
        "Required": "No",
        "Type": "NetworkConfiguration",
        "UniqueKey": "batch.jobdefinition.containerproperties.networkconfiguration",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.networkconfiguration.assignpublicip": {
        "Allowed values": "DISABLED | ENABLED",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.containerproperties.networkconfiguration.assignpublicip",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.privileged": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "batch.jobdefinition.containerproperties.privileged",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.readonlyrootfilesystem": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "batch.jobdefinition.containerproperties.readonlyrootfilesystem",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.resourcerequirements": {
        "Required": "No",
        "Type": "List of [ResourceRequirement",
        "UniqueKey": "batch.jobdefinition.containerproperties.resourcerequirements",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.secrets": {
        "Required": "No",
        "SampleValue": "TODO-Secrets",
        "UniqueKey": "batch.jobdefinition.containerproperties.secrets",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.ulimits": {
        "Required": "No",
        "Type": "List of [Ulimit",
        "UniqueKey": "batch.jobdefinition.containerproperties.ulimits",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.user": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.containerproperties.user",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.vcpus": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.containerproperties.vcpus",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties.volumes": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "batch.jobdefinition.containerproperties.volumes",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.device.containerpath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.device.containerpath",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.device.hostpath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.device.hostpath",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.device.permissions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "batch.jobdefinition.device.permissions",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.environment.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.environment.name",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.environment.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.environment.value",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.evaluateonexit.action": {
        "Allowed values": "EXIT | RETRY",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.evaluateonexit.action",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.evaluateonexit.onexitcode": {
        "Required": "No",
        "SampleValue": "TODO-OnExitCode",
        "UniqueKey": "batch.jobdefinition.evaluateonexit.onexitcode",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.evaluateonexit.onreason": {
        "Required": "No",
        "SampleValue": "TODO-OnReason",
        "UniqueKey": "batch.jobdefinition.evaluateonexit.onreason",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.evaluateonexit.onstatusreason": {
        "Required": "No",
        "SampleValue": "TODO-OnStatusReason",
        "UniqueKey": "batch.jobdefinition.evaluateonexit.onstatusreason",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.mountpoints.containerpath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.mountpoints.containerpath",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.mountpoints.readonly": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "batch.jobdefinition.mountpoints.readonly",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.mountpoints.sourcevolume": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.mountpoints.sourcevolume",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.nodeproperties.mainnode": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.nodeproperties.mainnode",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.nodeproperties.noderangeproperties": {
        "Required": "Yes",
        "Type": "List of [NodeRangeProperty",
        "UniqueKey": "batch.jobdefinition.nodeproperties.noderangeproperties",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.nodeproperties.numnodes": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.nodeproperties.numnodes",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.noderangeproperty.container": {
        "Required": "No",
        "Type": "ContainerProperties",
        "UniqueKey": "batch.jobdefinition.noderangeproperty.container",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.noderangeproperty.targetnodes": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.noderangeproperty.targetnodes",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.resourcerequirement.type": {
        "Allowed values": "GPU | MEMORY | VCPU",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.resourcerequirement.type",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.resourcerequirement.value": {
        "Required": "No",
        "SampleValue": "TODO-Value",
        "UniqueKey": "batch.jobdefinition.resourcerequirement.value",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.retrystrategy.attempts": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.retrystrategy.attempts",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.retrystrategy.evaluateonexit": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "batch.jobdefinition.retrystrategy.evaluateonexit",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.secret.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.secret.name",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.secret.valuefrom": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.secret.valuefrom",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.timeout.attemptdurationseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.timeout.attemptdurationseconds",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.tmpfs.containerpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.tmpfs.containerpath",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.tmpfs.mountoptions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "batch.jobdefinition.tmpfs.mountoptions",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.tmpfs.size": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.tmpfs.size",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.ulimit.hardlimit": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.ulimit.hardlimit",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.ulimit.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.ulimit.name",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.ulimit.softlimit": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.ulimit.softlimit",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.volumes.host": {
        "Required": "No",
        "Type": "VolumesHost",
        "UniqueKey": "batch.jobdefinition.volumes.host",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.volumes.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.volumes.name",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.volumeshost.sourcepath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.volumeshost.sourcepath",
        "UpdateRequires": "Replacement"
    },
    "batch.jobqueue.computeenvironmentorder.computeenvironment": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "batch.jobqueue.computeenvironmentorder.computeenvironment",
        "UpdateRequires": "Replacement"
    },
    "batch.jobqueue.computeenvironmentorder.order": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.jobqueue.computeenvironmentorder.order",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.applicationname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "No",
        "SampleValue": "TODO-beanstalk.ApplicationName",
        "Type": "String",
        "UniqueKey": "beanstalk.applicationname",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.description": {
        "Maximum": "200",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "beanstalk.description",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.applicationname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "Yes",
        "SampleValue": "TODO-beanstalk.environment.ApplicationName",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.applicationname",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.cnameprefix": {
        "Maximum": "63",
        "Minimum": "4",
        "Pattern": "^.{4,63}$",
        "Required": "No",
        "SampleValue": "TODO-beanstalk.environment.CNAMEPrefix",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.cnameprefix",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.description": {
        "Maximum": "200",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.description",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.environmentname": {
        "Maximum": "40",
        "Minimum": "4",
        "Pattern": "^.{4,40}$",
        "Required": "No",
        "SampleValue": "TODO-beanstalk.environment.EnvironmentName",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.environmentname",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.optionsettings": {
        "Required": "No",
        "Type": "List of [OptionSetting",
        "UniqueKey": "beanstalk.environment.optionsettings",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.platformarn": {
        "Required": "No",
        "SampleValue": "TODO-PlatformArn",
        "UniqueKey": "beanstalk.environment.platformarn",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.solutionstackname": {
        "Required": "No",
        "SampleValue": "TODO-SolutionStackName",
        "UniqueKey": "beanstalk.environment.solutionstackname",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "beanstalk.environment.tags",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.templatename": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "No",
        "SampleValue": "TODO-beanstalk.environment.TemplateName",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.templatename",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.tier": {
        "Required": "No",
        "Type": "Tier",
        "UniqueKey": "beanstalk.environment.tier",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.tier.name": {
        "Required": "No",
        "SampleValue": "TODO-Name",
        "UniqueKey": "beanstalk.environment.tier.name",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.tier.type": {
        "Required": "No",
        "SampleValue": "TODO-Type",
        "UniqueKey": "beanstalk.environment.tier.type",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.tier.version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.tier.version",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.versionlabel": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "No",
        "SampleValue": "TODO-beanstalk.environment.VersionLabel",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.versionlabel",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.option.settings.namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "beanstalk.option.settings.namespace",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.option.settings.optionname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "beanstalk.option.settings.optionname",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.option.settings.resourcename": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-beanstalk.option.settings.ResourceName",
        "Type": "String",
        "UniqueKey": "beanstalk.option.settings.resourcename",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.option.settings.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "beanstalk.option.settings.value",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.resourcelifecycleconfig": {
        "Required": "No",
        "Type": "ApplicationResourceLifecycleConfig",
        "UniqueKey": "beanstalk.resourcelifecycleconfig",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.sourcebundle.s3bucket": {
        "Maximum": "255",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "beanstalk.sourcebundle.s3bucket",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.sourcebundle.s3key": {
        "Maximum": "1024",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "beanstalk.sourcebundle.s3key",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.version.applicationname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "Yes",
        "SampleValue": "TODO-beanstalk.version.ApplicationName",
        "Type": "String",
        "UniqueKey": "beanstalk.version.applicationname",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.version.description": {
        "Maximum": "200",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "beanstalk.version.description",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.version.sourcebundle": {
        "Required": "Yes",
        "Type": "SourceBundle",
        "UniqueKey": "beanstalk.version.sourcebundle",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.budgetdata.budgetlimit": {
        "Required": "No",
        "Type": "Spend",
        "UniqueKey": "budgets.budget.budgetdata.budgetlimit",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.budgetdata.budgetname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "budgets.budget.budgetdata.budgetname",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.budgetdata.budgettype": {
        "Allowed values": "COST | RI_COVERAGE | RI_UTILIZATION | SAVINGS_PLANS_COVERAGE | SAVINGS_PLANS_UTILIZATION | USAGE",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "budgets.budget.budgetdata.budgettype",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.budgetdata.costfilters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "budgets.budget.budgetdata.costfilters",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.budgetdata.costtypes": {
        "Required": "No",
        "Type": "CostTypes",
        "UniqueKey": "budgets.budget.budgetdata.costtypes",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.budgetdata.plannedbudgetlimits": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "budgets.budget.budgetdata.plannedbudgetlimits",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.budgetdata.timeperiod": {
        "Required": "No",
        "Type": "TimePeriod",
        "UniqueKey": "budgets.budget.budgetdata.timeperiod",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.budgetdata.timeunit": {
        "Allowed values": "ANNUALLY | DAILY | MONTHLY | QUARTERLY",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "budgets.budget.budgetdata.timeunit",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.includecredit": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.includecredit",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.includediscount": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.includediscount",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.includeothersubscription": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.includeothersubscription",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.includerecurring": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.includerecurring",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.includerefund": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.includerefund",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.includesubscription": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.includesubscription",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.includesupport": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.includesupport",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.includetax": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.includetax",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.includeupfront": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.includeupfront",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.useamortized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.useamortized",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.costtypes.useblended": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.useblended",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.notification.comparisonoperator": {
        "Allowed values": "EQUAL_TO | GREATER_THAN | LESS_THAN",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "budgets.budget.notification.comparisonoperator",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.notification.notificationtype": {
        "Allowed values": "ACTUAL | FORECASTED",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "budgets.budget.notification.notificationtype",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.notification.threshold": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "budgets.budget.notification.threshold",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.notification.thresholdtype": {
        "Allowed values": "ABSOLUTE_VALUE | PERCENTAGE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "budgets.budget.notification.thresholdtype",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.notificationwithsubscribers.notification": {
        "Required": "Yes",
        "Type": "Notification",
        "UniqueKey": "budgets.budget.notificationwithsubscribers.notification",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.notificationwithsubscribers.subscribers": {
        "Maximum": "11",
        "Required": "Yes",
        "Type": "List of [Subscriber",
        "UniqueKey": "budgets.budget.notificationwithsubscribers.subscribers",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.spend.amount": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "budgets.budget.spend.amount",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.spend.unit": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "budgets.budget.spend.unit",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.subscriber.address": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "budgets.budget.subscriber.address",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.subscriber.subscriptiontype": {
        "Allowed values": "EMAIL | SNS",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "budgets.budget.subscriber.subscriptiontype",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.timeperiod.end": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "budgets.budget.timeperiod.end",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.timeperiod.start": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "budgets.budget.timeperiod.start",
        "UpdateRequires": "Replacement"
    },
    "cassandra.table.billingmode.mode": {
        "Required": "Yes",
        "SampleValue": "TODO-Mode",
        "UniqueKey": "cassandra.table.billingmode.mode",
        "UpdateRequires": "Replacement"
    },
    "cassandra.table.billingmode.provisionedthroughput": {
        "Required": "No",
        "SampleValue": "TODO-ProvisionedThroughput",
        "UniqueKey": "cassandra.table.billingmode.provisionedthroughput",
        "UpdateRequires": "Replacement"
    },
    "cassandra.table.clusteringkeycolumn.column": {
        "Required": "Yes",
        "Type": "Column",
        "UniqueKey": "cassandra.table.clusteringkeycolumn.column",
        "UpdateRequires": "Replacement"
    },
    "cassandra.table.clusteringkeycolumn.orderby": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cassandra.table.clusteringkeycolumn.orderby",
        "UpdateRequires": "Replacement"
    },
    "cassandra.table.column.columnname": {
        "Required": "Yes",
        "SampleValue": "TODO-ColumnName",
        "UniqueKey": "cassandra.table.column.columnname",
        "UpdateRequires": "Replacement"
    },
    "cassandra.table.column.columntype": {
        "Required": "Yes",
        "SampleValue": "TODO-ColumnType",
        "UniqueKey": "cassandra.table.column.columntype",
        "UpdateRequires": "Replacement"
    },
    "cassandra.table.provisionedthroughput.readcapacityunits": {
        "Required": "Yes",
        "SampleValue": "TODO-ReadCapacityUnits",
        "UniqueKey": "cassandra.table.provisionedthroughput.readcapacityunits",
        "UpdateRequires": "Replacement"
    },
    "cassandra.table.provisionedthroughput.writecapacityunits": {
        "Required": "Yes",
        "SampleValue": "TODO-WriteCapacityUnits",
        "UniqueKey": "cassandra.table.provisionedthroughput.writecapacityunits",
        "UpdateRequires": "Replacement"
    },
    "certificatemanager.certificate.domainvalidationoption.domainname": {
        "Maximum": "253",
        "Minimum": "1",
        "Pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "certificatemanager.certificate.domainvalidationoption.domainname",
        "UpdateRequires": "Replacement"
    },
    "certificatemanager.certificate.domainvalidationoption.hostedzoneid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "certificatemanager.certificate.domainvalidationoption.hostedzoneid",
        "UpdateRequires": "Replacement"
    },
    "certificatemanager.certificate.domainvalidationoption.validationdomain": {
        "Maximum": "253",
        "Minimum": "1",
        "Pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "certificatemanager.certificate.domainvalidationoption.validationdomain",
        "UpdateRequires": "Replacement"
    },
    "cloud9.environmentec2.repository.pathcomponent": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloud9.environmentec2.repository.pathcomponent",
        "UpdateRequires": "Replacement"
    },
    "cloud9.environmentec2.repository.repositoryurl": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloud9.environmentec2.repository.repositoryurl",
        "UpdateRequires": "Replacement"
    },
    "cloudformation.stackset.autodeployment.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudformation.stackset.autodeployment.enabled",
        "UpdateRequires": "Replacement"
    },
    "cloudformation.stackset.autodeployment.retainstacksonaccountremoval": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudformation.stackset.autodeployment.retainstacksonaccountremoval",
        "UpdateRequires": "Replacement"
    },
    "cloudformation.stackset.deploymenttargets.accounts": {
        "Pattern": "^[0-9]{12}$",
        "Required": "Conditional",
        "Type": "List of String",
        "UniqueKey": "cloudformation.stackset.deploymenttargets.accounts",
        "UpdateRequires": "Replacement"
    },
    "cloudformation.stackset.deploymenttargets.organizationalunitids": {
        "Pattern": "^(ou-[a-z0-9]{4,32}-[a-z0-9]{8,32}|r-[a-z0-9]{4,32})$",
        "Required": "Conditional",
        "Type": "List of String",
        "UniqueKey": "cloudformation.stackset.deploymenttargets.organizationalunitids",
        "UpdateRequires": "Replacement"
    },
    "cloudformation.stackset.operationpreferences.failuretolerancecount": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "cloudformation.stackset.operationpreferences.failuretolerancecount",
        "UpdateRequires": "Replacement"
    },
    "cloudformation.stackset.operationpreferences.failuretolerancepercentage": {
        "Required": "Conditional",
        "SampleValue": "TODO-FailureTolerancePercentage",
        "UniqueKey": "cloudformation.stackset.operationpreferences.failuretolerancepercentage",
        "UpdateRequires": "Replacement"
    },
    "cloudformation.stackset.operationpreferences.maxconcurrentcount": {
        "Required": "Conditional",
        "SampleValue": "TODO-MaxConcurrentCount",
        "UniqueKey": "cloudformation.stackset.operationpreferences.maxconcurrentcount",
        "UpdateRequires": "Replacement"
    },
    "cloudformation.stackset.operationpreferences.maxconcurrentpercentage": {
        "Required": "Conditional",
        "SampleValue": "TODO-MaxConcurrentPercentage",
        "UniqueKey": "cloudformation.stackset.operationpreferences.maxconcurrentpercentage",
        "UpdateRequires": "Replacement"
    },
    "cloudformation.stackset.operationpreferences.regionorder": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudformation.stackset.operationpreferences.regionorder",
        "UpdateRequires": "Replacement"
    },
    "cloudformation.stackset.parameter.parameterkey": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudformation.stackset.parameter.parameterkey",
        "UpdateRequires": "Replacement"
    },
    "cloudformation.stackset.parameter.parametervalue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudformation.stackset.parameter.parametervalue",
        "UpdateRequires": "Replacement"
    },
    "cloudformation.stackset.stackinstances.deploymenttargets": {
        "Required": "Yes",
        "Type": "DeploymentTargets",
        "UniqueKey": "cloudformation.stackset.stackinstances.deploymenttargets",
        "UpdateRequires": "Replacement"
    },
    "cloudformation.stackset.stackinstances.parameteroverrides": {
        "Required": "No",
        "Type": "List of [Parameter",
        "UniqueKey": "cloudformation.stackset.stackinstances.parameteroverrides",
        "UpdateRequires": "Replacement"
    },
    "cloudformation.stackset.stackinstances.regions": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "cloudformation.stackset.stackinstances.regions",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.cachepolicyconfig.comment": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.cachepolicy.cachepolicyconfig.comment",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.cachepolicyconfig.defaultttl": {
        "Required": "Yes",
        "SampleValue": "TODO-DefaultTTL",
        "UniqueKey": "cloudfront.cachepolicy.cachepolicyconfig.defaultttl",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.cachepolicyconfig.maxttl": {
        "Required": "Yes",
        "SampleValue": "TODO-MaxTTL",
        "UniqueKey": "cloudfront.cachepolicy.cachepolicyconfig.maxttl",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.cachepolicyconfig.minttl": {
        "Required": "Yes",
        "SampleValue": "TODO-MinTTL",
        "UniqueKey": "cloudfront.cachepolicy.cachepolicyconfig.minttl",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.cachepolicyconfig.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.cachepolicy.cachepolicyconfig.name",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.cachepolicyconfig.parametersincachekeyandforwardedtoorigin": {
        "Required": "Yes",
        "Type": "ParametersInCacheKeyAndForwardedToOrigin",
        "UniqueKey": "cloudfront.cachepolicy.cachepolicyconfig.parametersincachekeyandforwardedtoorigin",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.cookiesconfig.cookiebehavior": {
        "Required": "Yes",
        "SampleValue": "TODO-CookieBehavior",
        "UniqueKey": "cloudfront.cachepolicy.cookiesconfig.cookiebehavior",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.cookiesconfig.cookies": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.cachepolicy.cookiesconfig.cookies",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.headersconfig.headerbehavior": {
        "Required": "Yes",
        "SampleValue": "TODO-HeaderBehavior",
        "UniqueKey": "cloudfront.cachepolicy.headersconfig.headerbehavior",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.headersconfig.headers": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.cachepolicy.headersconfig.headers",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.parametersincachekeyandforwardedtoorigin.cookiesconfig": {
        "Required": "Yes",
        "Type": "CookiesConfig",
        "UniqueKey": "cloudfront.cachepolicy.parametersincachekeyandforwardedtoorigin.cookiesconfig",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.parametersincachekeyandforwardedtoorigin.enableacceptencodingbrotli": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "cloudfront.cachepolicy.parametersincachekeyandforwardedtoorigin.enableacceptencodingbrotli",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.parametersincachekeyandforwardedtoorigin.enableacceptencodinggzip": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "UniqueKey": "cloudfront.cachepolicy.parametersincachekeyandforwardedtoorigin.enableacceptencodinggzip",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.parametersincachekeyandforwardedtoorigin.headersconfig": {
        "Required": "Yes",
        "Type": "HeadersConfig",
        "UniqueKey": "cloudfront.cachepolicy.parametersincachekeyandforwardedtoorigin.headersconfig",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.parametersincachekeyandforwardedtoorigin.querystringsconfig": {
        "Required": "Yes",
        "Type": "QueryStringsConfig",
        "UniqueKey": "cloudfront.cachepolicy.parametersincachekeyandforwardedtoorigin.querystringsconfig",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.querystringsconfig.querystringbehavior": {
        "Required": "Yes",
        "SampleValue": "TODO-QueryStringBehavior",
        "UniqueKey": "cloudfront.cachepolicy.querystringsconfig.querystringbehavior",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cachepolicy.querystringsconfig.querystrings": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.cachepolicy.querystringsconfig.querystrings",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.cloudfrontoriginaccessidentity.cloudfrontoriginaccessidentityconfig.comment": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.cloudfrontoriginaccessidentity.cloudfrontoriginaccessidentityconfig.comment",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.allowedmethods": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.distribution.cachebehavior.allowedmethods",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.cachedmethods": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.distribution.cachebehavior.cachedmethods",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.cachepolicyid": {
        "Required": "Conditional",
        "SampleValue": "TODO-CachePolicyId",
        "UniqueKey": "cloudfront.distribution.cachebehavior.cachepolicyid",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.compress": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "cloudfront.distribution.cachebehavior.compress",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.defaultttl": {
        "Required": "No",
        "SampleValue": "TODO-DefaultTTL",
        "UniqueKey": "cloudfront.distribution.cachebehavior.defaultttl",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.fieldlevelencryptionid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.cachebehavior.fieldlevelencryptionid",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.forwardedvalues": {
        "Required": "Conditional",
        "SampleValue": "TODO-ForwardedValues",
        "UniqueKey": "cloudfront.distribution.cachebehavior.forwardedvalues",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.lambdafunctionassociations": {
        "Required": "No",
        "Type": "List of [LambdaFunctionAssociation",
        "UniqueKey": "cloudfront.distribution.cachebehavior.lambdafunctionassociations",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.maxttl": {
        "Required": "No",
        "SampleValue": "TODO-MaxTTL",
        "UniqueKey": "cloudfront.distribution.cachebehavior.maxttl",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.minttl": {
        "Required": "No",
        "SampleValue": "TODO-MinTTL",
        "UniqueKey": "cloudfront.distribution.cachebehavior.minttl",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.originrequestpolicyid": {
        "Required": "No",
        "SampleValue": "TODO-OriginRequestPolicyId",
        "UniqueKey": "cloudfront.distribution.cachebehavior.originrequestpolicyid",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.pathpattern": {
        "Required": "Yes",
        "SampleValue": "TODO-PathPattern",
        "UniqueKey": "cloudfront.distribution.cachebehavior.pathpattern",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.realtimelogconfigarn": {
        "Required": "No",
        "SampleValue": "TODO-RealtimeLogConfigArn",
        "UniqueKey": "cloudfront.distribution.cachebehavior.realtimelogconfigarn",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.smoothstreaming": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.distribution.cachebehavior.smoothstreaming",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.targetoriginid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.cachebehavior.targetoriginid",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.trustedkeygroups": {
        "Required": "No",
        "SampleValue": "TODO-TrustedKeyGroups",
        "UniqueKey": "cloudfront.distribution.cachebehavior.trustedkeygroups",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.trustedsigners": {
        "Required": "No",
        "SampleValue": "TODO-TrustedSigners",
        "UniqueKey": "cloudfront.distribution.cachebehavior.trustedsigners",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cachebehavior.viewerprotocolpolicy": {
        "Required": "Yes",
        "SampleValue": "TODO-ViewerProtocolPolicy",
        "UniqueKey": "cloudfront.distribution.cachebehavior.viewerprotocolpolicy",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cookies.forward": {
        "Required": "Yes",
        "SampleValue": "TODO-Forward",
        "UniqueKey": "cloudfront.distribution.cookies.forward",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.cookies.whitelistednames": {
        "Required": "Conditional",
        "SampleValue": "TODO-WhitelistedNames",
        "UniqueKey": "cloudfront.distribution.cookies.whitelistednames",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.customerrorresponse.errorcachingminttl": {
        "Required": "No",
        "SampleValue": "TODO-ErrorCachingMinTTL",
        "UniqueKey": "cloudfront.distribution.customerrorresponse.errorcachingminttl",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.customerrorresponse.errorcode": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "cloudfront.distribution.customerrorresponse.errorcode",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.customerrorresponse.responsecode": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "cloudfront.distribution.customerrorresponse.responsecode",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.customerrorresponse.responsepagepath": {
        "Required": "Conditional",
        "SampleValue": "TODO-ResponsePagePath",
        "UniqueKey": "cloudfront.distribution.customerrorresponse.responsepagepath",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.customoriginconfig.httpport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "cloudfront.distribution.customoriginconfig.httpport",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.customoriginconfig.httpsport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "cloudfront.distribution.customoriginconfig.httpsport",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.customoriginconfig.originkeepalivetimeout": {
        "Required": "No",
        "SampleValue": "TODO-OriginKeepaliveTimeout",
        "UniqueKey": "cloudfront.distribution.customoriginconfig.originkeepalivetimeout",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.customoriginconfig.originprotocolpolicy": {
        "Allowed values": "http-only | https-only | match-viewer",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.customoriginconfig.originprotocolpolicy",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.customoriginconfig.originreadtimeout": {
        "Required": "No",
        "SampleValue": "TODO-OriginReadTimeout",
        "UniqueKey": "cloudfront.distribution.customoriginconfig.originreadtimeout",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.customoriginconfig.originsslprotocols": {
        "Required": "No",
        "SampleValue": "TODO-OriginSSLProtocols",
        "UniqueKey": "cloudfront.distribution.customoriginconfig.originsslprotocols",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.allowedmethods": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.allowedmethods",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.cachedmethods": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.cachedmethods",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.cachepolicyid": {
        "Required": "Conditional",
        "SampleValue": "TODO-CachePolicyId",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.cachepolicyid",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.compress": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.compress",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.defaultttl": {
        "Required": "No",
        "SampleValue": "TODO-DefaultTTL",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.defaultttl",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.fieldlevelencryptionid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.fieldlevelencryptionid",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.forwardedvalues": {
        "Required": "Conditional",
        "SampleValue": "TODO-ForwardedValues",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.forwardedvalues",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.lambdafunctionassociations": {
        "Required": "No",
        "Type": "List of [LambdaFunctionAssociation",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.lambdafunctionassociations",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.maxttl": {
        "Required": "No",
        "SampleValue": "TODO-MaxTTL",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.maxttl",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.minttl": {
        "Required": "No",
        "SampleValue": "TODO-MinTTL",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.minttl",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.originrequestpolicyid": {
        "Required": "No",
        "SampleValue": "TODO-OriginRequestPolicyId",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.originrequestpolicyid",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.realtimelogconfigarn": {
        "Required": "No",
        "SampleValue": "TODO-RealtimeLogConfigArn",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.realtimelogconfigarn",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.smoothstreaming": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.smoothstreaming",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.targetoriginid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.targetoriginid",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.trustedkeygroups": {
        "Required": "No",
        "SampleValue": "TODO-TrustedKeyGroups",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.trustedkeygroups",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.trustedsigners": {
        "Required": "No",
        "SampleValue": "TODO-TrustedSigners",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.trustedsigners",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.defaultcachebehavior.viewerprotocolpolicy": {
        "Required": "Yes",
        "SampleValue": "TODO-ViewerProtocolPolicy",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.viewerprotocolpolicy",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.aliases": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.distribution.distributionconfig.aliases",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.cachebehaviors": {
        "Required": "No",
        "Type": "List of [CacheBehavior",
        "UniqueKey": "cloudfront.distribution.distributionconfig.cachebehaviors",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.comment": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.distributionconfig.comment",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.customerrorresponses": {
        "Required": "No",
        "SampleValue": "TODO-CustomErrorResponses",
        "UniqueKey": "cloudfront.distribution.distributionconfig.customerrorresponses",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.defaultcachebehavior": {
        "Required": "No",
        "Type": "DefaultCacheBehavior",
        "UniqueKey": "cloudfront.distribution.distributionconfig.defaultcachebehavior",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.defaultrootobject": {
        "Required": "No",
        "SampleValue": "TODO-DefaultRootObject",
        "UniqueKey": "cloudfront.distribution.distributionconfig.defaultrootobject",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.distribution.distributionconfig.enabled",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.httpversion": {
        "Allowed values": "http1.1 | http2",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.distributionconfig.httpversion",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.ipv6enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "cloudfront.distribution.distributionconfig.ipv6enabled",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.logging": {
        "Required": "No",
        "SampleValue": "TODO-Logging",
        "UniqueKey": "cloudfront.distribution.distributionconfig.logging",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.origingroups": {
        "Required": "No",
        "Type": "OriginGroups",
        "UniqueKey": "cloudfront.distribution.distributionconfig.origingroups",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.origins": {
        "Required": "No",
        "Type": "List of [Origin",
        "UniqueKey": "cloudfront.distribution.distributionconfig.origins",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.priceclass": {
        "Required": "No",
        "SampleValue": "TODO-PriceClass",
        "UniqueKey": "cloudfront.distribution.distributionconfig.priceclass",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.restrictions": {
        "Required": "No",
        "Type": "Restrictions",
        "UniqueKey": "cloudfront.distribution.distributionconfig.restrictions",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.viewercertificate": {
        "Required": "No",
        "Type": "ViewerCertificate",
        "UniqueKey": "cloudfront.distribution.distributionconfig.viewercertificate",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.distributionconfig.webaclid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.distributionconfig.webaclid",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.forwardedvalues.cookies": {
        "Required": "No",
        "SampleValue": "TODO-Cookies",
        "UniqueKey": "cloudfront.distribution.forwardedvalues.cookies",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.forwardedvalues.headers": {
        "Required": "No",
        "SampleValue": "TODO-Headers",
        "UniqueKey": "cloudfront.distribution.forwardedvalues.headers",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.forwardedvalues.querystring": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "UniqueKey": "cloudfront.distribution.forwardedvalues.querystring",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.forwardedvalues.querystringcachekeys": {
        "Required": "No",
        "SampleValue": "TODO-QueryStringCacheKeys",
        "UniqueKey": "cloudfront.distribution.forwardedvalues.querystringcachekeys",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.georestriction.locations": {
        "Required": "Conditional",
        "SampleValue": "TODO-Locations",
        "UniqueKey": "cloudfront.distribution.georestriction.locations",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.georestriction.restrictiontype": {
        "Allowed values": "blacklist | none | whitelist",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.georestriction.restrictiontype",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.lambdafunctionassociation.eventtype": {
        "Allowed values": "origin-request | origin-response | viewer-request | viewer-response",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.lambdafunctionassociation.eventtype",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.lambdafunctionassociation.includebody": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.distribution.lambdafunctionassociation.includebody",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.lambdafunctionassociation.lambdafunctionarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.lambdafunctionassociation.lambdafunctionarn",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.logging.bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.logging.bucket",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.logging.includecookies": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.distribution.logging.includecookies",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.logging.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.logging.prefix",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origin.connectionattempts": {
        "Required": "No",
        "SampleValue": "TODO-ConnectionAttempts",
        "UniqueKey": "cloudfront.distribution.origin.connectionattempts",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origin.connectiontimeout": {
        "Required": "No",
        "SampleValue": "TODO-ConnectionTimeout",
        "UniqueKey": "cloudfront.distribution.origin.connectiontimeout",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origin.customoriginconfig": {
        "Required": "Conditional",
        "Type": "CustomOriginConfig",
        "UniqueKey": "cloudfront.distribution.origin.customoriginconfig",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origin.domainname": {
        "Required": "Yes",
        "SampleValue": "TODO-DomainName",
        "UniqueKey": "cloudfront.distribution.origin.domainname",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origin.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.origin.id",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origin.origincustomheaders": {
        "Required": "No",
        "SampleValue": "TODO-OriginCustomHeaders",
        "UniqueKey": "cloudfront.distribution.origin.origincustomheaders",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origin.originpath": {
        "Required": "No",
        "SampleValue": "TODO-OriginPath",
        "UniqueKey": "cloudfront.distribution.origin.originpath",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origin.originshield": {
        "Required": "No",
        "SampleValue": "TODO-OriginShield",
        "UniqueKey": "cloudfront.distribution.origin.originshield",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origin.s3originconfig": {
        "Required": "Conditional",
        "Type": "S3OriginConfig",
        "UniqueKey": "cloudfront.distribution.origin.s3originconfig",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origincustomheader.headername": {
        "Required": "Yes",
        "SampleValue": "TODO-HeaderName",
        "UniqueKey": "cloudfront.distribution.origincustomheader.headername",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origincustomheader.headervalue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.origincustomheader.headervalue",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origingroup.failovercriteria": {
        "Required": "Yes",
        "Type": "OriginGroupFailoverCriteria",
        "UniqueKey": "cloudfront.distribution.origingroup.failovercriteria",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origingroup.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.origingroup.id",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origingroup.members": {
        "Required": "Yes",
        "Type": "OriginGroupMembers",
        "UniqueKey": "cloudfront.distribution.origingroup.members",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origingroupfailovercriteria.statuscodes": {
        "Required": "Yes",
        "Type": "StatusCodes",
        "UniqueKey": "cloudfront.distribution.origingroupfailovercriteria.statuscodes",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origingroupmember.originid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.origingroupmember.originid",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origingroupmembers.items": {
        "Maximum": "2",
        "Required": "Yes",
        "Type": "List of [OriginGroupMember",
        "UniqueKey": "cloudfront.distribution.origingroupmembers.items",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origingroupmembers.quantity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "cloudfront.distribution.origingroupmembers.quantity",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origingroups.items": {
        "Required": "No",
        "Type": "List of [OriginGroup",
        "UniqueKey": "cloudfront.distribution.origingroups.items",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.origingroups.quantity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "cloudfront.distribution.origingroups.quantity",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.originshield.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.distribution.originshield.enabled",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.originshield.originshieldregion": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "[a-z]{2}-[a-z]+-\\d",
        "Required": "No",
        "UniqueKey": "cloudfront.distribution.originshield.originshieldregion",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.restrictions.georestriction": {
        "Required": "Yes",
        "Type": "GeoRestriction",
        "UniqueKey": "cloudfront.distribution.restrictions.georestriction",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.s3originconfig.originaccessidentity": {
        "Required": "No",
        "SampleValue": "TODO-OriginAccessIdentity",
        "UniqueKey": "cloudfront.distribution.s3originconfig.originaccessidentity",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.statuscodes.items": {
        "Required": "Yes",
        "Type": "List of Integer",
        "UniqueKey": "cloudfront.distribution.statuscodes.items",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.statuscodes.quantity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "cloudfront.distribution.statuscodes.quantity",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.viewercertificate.acmcertificatearn": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.viewercertificate.acmcertificatearn",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.viewercertificate.cloudfrontdefaultcertificate": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Conditional",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.distribution.viewercertificate.cloudfrontdefaultcertificate",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.viewercertificate.iamcertificateid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.viewercertificate.iamcertificateid",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.viewercertificate.minimumprotocolversion": {
        "Required": "Conditional",
        "SampleValue": "TODO-MinimumProtocolVersion",
        "UniqueKey": "cloudfront.distribution.viewercertificate.minimumprotocolversion",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.distribution.viewercertificate.sslsupportmethod": {
        "Allowed values": "sni-only | static-ip | vip",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.viewercertificate.sslsupportmethod",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.keygroup.keygroupconfig.comment": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.keygroup.keygroupconfig.comment",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.keygroup.keygroupconfig.items": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "cloudfront.keygroup.keygroupconfig.items",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.keygroup.keygroupconfig.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.keygroup.keygroupconfig.name",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.cookiesconfig.cookiebehavior": {
        "Required": "Yes",
        "SampleValue": "TODO-CookieBehavior",
        "UniqueKey": "cloudfront.originrequestpolicy.cookiesconfig.cookiebehavior",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.cookiesconfig.cookies": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.originrequestpolicy.cookiesconfig.cookies",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.headersconfig.headerbehavior": {
        "Required": "Yes",
        "SampleValue": "TODO-HeaderBehavior",
        "UniqueKey": "cloudfront.originrequestpolicy.headersconfig.headerbehavior",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.headersconfig.headers": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.originrequestpolicy.headersconfig.headers",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.originrequestpolicyconfig.comment": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.originrequestpolicy.originrequestpolicyconfig.comment",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.originrequestpolicyconfig.cookiesconfig": {
        "Required": "Yes",
        "Type": "CookiesConfig",
        "UniqueKey": "cloudfront.originrequestpolicy.originrequestpolicyconfig.cookiesconfig",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.originrequestpolicyconfig.headersconfig": {
        "Required": "Yes",
        "Type": "HeadersConfig",
        "UniqueKey": "cloudfront.originrequestpolicy.originrequestpolicyconfig.headersconfig",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.originrequestpolicyconfig.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.originrequestpolicy.originrequestpolicyconfig.name",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.originrequestpolicyconfig.querystringsconfig": {
        "Required": "Yes",
        "Type": "QueryStringsConfig",
        "UniqueKey": "cloudfront.originrequestpolicy.originrequestpolicyconfig.querystringsconfig",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.querystringsconfig.querystringbehavior": {
        "Required": "Yes",
        "SampleValue": "TODO-QueryStringBehavior",
        "UniqueKey": "cloudfront.originrequestpolicy.querystringsconfig.querystringbehavior",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.originrequestpolicy.querystringsconfig.querystrings": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.originrequestpolicy.querystringsconfig.querystrings",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.publickey.publickeyconfig.callerreference": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.publickey.publickeyconfig.callerreference",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.publickey.publickeyconfig.comment": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.publickey.publickeyconfig.comment",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.publickey.publickeyconfig.encodedkey": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.publickey.publickeyconfig.encodedkey",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.publickey.publickeyconfig.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.publickey.publickeyconfig.name",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.realtimelogconfig.endpoint.kinesisstreamconfig": {
        "Required": "Yes",
        "Type": "KinesisStreamConfig",
        "UniqueKey": "cloudfront.realtimelogconfig.endpoint.kinesisstreamconfig",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.realtimelogconfig.endpoint.streamtype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.realtimelogconfig.endpoint.streamtype",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.realtimelogconfig.kinesisstreamconfig.rolearn": {
        "Required": "Yes",
        "SampleValue": "TODO-RoleArn",
        "UniqueKey": "cloudfront.realtimelogconfig.kinesisstreamconfig.rolearn",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.realtimelogconfig.kinesisstreamconfig.streamarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.realtimelogconfig.kinesisstreamconfig.streamarn",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.logging.bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.streamingdistribution.logging.bucket",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.logging.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.streamingdistribution.logging.enabled",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.logging.prefix": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.streamingdistribution.logging.prefix",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.s3origin.domainname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.streamingdistribution.s3origin.domainname",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.s3origin.originaccessidentity": {
        "Required": "Yes",
        "SampleValue": "TODO-OriginAccessIdentity",
        "UniqueKey": "cloudfront.streamingdistribution.s3origin.originaccessidentity",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.aliases": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.aliases",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.comment": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.comment",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.enabled",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.logging": {
        "Required": "No",
        "Type": "Logging",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.logging",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.priceclass": {
        "Allowed values": "PriceClass_100 | PriceClass_200 | PriceClass_All",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.priceclass",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.s3origin": {
        "Required": "Yes",
        "Type": "S3Origin",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.s3origin",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.trustedsigners": {
        "Required": "Yes",
        "SampleValue": "TODO-TrustedSigners",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.trustedsigners",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.trustedsigners.awsaccountnumbers": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.streamingdistribution.trustedsigners.awsaccountnumbers",
        "UpdateRequires": "Replacement"
    },
    "cloudfront.streamingdistribution.trustedsigners.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.streamingdistribution.trustedsigners.enabled",
        "UpdateRequires": "Replacement"
    },
    "cloudtrail.trail.dataresource.type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudtrail.trail.dataresource.type",
        "UpdateRequires": "Replacement"
    },
    "cloudtrail.trail.dataresource.values": {
        "Required": "No",
        "SampleValue": "TODO-Values",
        "UniqueKey": "cloudtrail.trail.dataresource.values",
        "UpdateRequires": "Replacement"
    },
    "cloudtrail.trail.eventselector.dataresources": {
        "Required": "Conditional",
        "SampleValue": "TODO-DataResources",
        "UniqueKey": "cloudtrail.trail.eventselector.dataresources",
        "UpdateRequires": "Replacement"
    },
    "cloudtrail.trail.eventselector.includemanagementevents": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "cloudtrail.trail.eventselector.includemanagementevents",
        "UpdateRequires": "Replacement"
    },
    "cloudtrail.trail.eventselector.readwritetype": {
        "Allowed values": "All | ReadOnly | WriteOnly",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudtrail.trail.eventselector.readwritetype",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metric.dimensions": {
        "Maximum": "10",
        "Required": "No",
        "Type": "List of [Dimension",
        "UniqueKey": "cloudwatch.alarm.metric.dimensions",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metric.metricname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "No",
        "SampleValue": "TODO-cloudwatch.alarm.metric.MetricName",
        "Type": "String",
        "UniqueKey": "cloudwatch.alarm.metric.metricname",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metric.namespace": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[^:].*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudwatch.alarm.metric.namespace",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metricdataquery.expression": {
        "Maximum": "1024",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "cloudwatch.alarm.metricdataquery.expression",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metricdataquery.id": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-cloudwatch.alarm.metricdataquery.Id",
        "Type": "String",
        "UniqueKey": "cloudwatch.alarm.metricdataquery.id",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metricdataquery.label": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudwatch.alarm.metricdataquery.label",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metricdataquery.metricstat": {
        "Required": "No",
        "Type": "MetricStat",
        "UniqueKey": "cloudwatch.alarm.metricdataquery.metricstat",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metricdataquery.period": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "cloudwatch.alarm.metricdataquery.period",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metricdataquery.returndata": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudwatch.alarm.metricdataquery.returndata",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metricstat.metric": {
        "Required": "Yes",
        "Type": "Metric",
        "UniqueKey": "cloudwatch.alarm.metricstat.metric",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metricstat.period": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "cloudwatch.alarm.metricstat.period",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metricstat.stat": {
        "Required": "Yes",
        "SampleValue": "TODO-Stat",
        "UniqueKey": "cloudwatch.alarm.metricstat.stat",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.alarm.metricstat.unit": {
        "Allowed values": "Bits | Bits/Second | Bytes | Bytes/Second | Count | Count/Second | Gigabits | Gigabits/Second | Gigabytes | Gigabytes/Second | Kilobits | Kilobits/Second | Kilobytes | Kilobytes/Second | Megabits | Megabits/Second | Megabytes | Megabytes/Second | Microseconds | Milliseconds | None | Percent | Seconds | Terabits | Terabits/Second | Terabytes | Terabytes/Second",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudwatch.alarm.metricstat.unit",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.anomalydetector.configuration.excludedtimeranges": {
        "Required": "No",
        "Type": "List of [Range",
        "UniqueKey": "cloudwatch.anomalydetector.configuration.excludedtimeranges",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.anomalydetector.configuration.metrictimezone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudwatch.anomalydetector.configuration.metrictimezone",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.anomalydetector.dimension.name": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-cloudwatch.anomalydetector.dimension.Name",
        "Type": "String",
        "UniqueKey": "cloudwatch.anomalydetector.dimension.name",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.anomalydetector.dimension.value": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-cloudwatch.anomalydetector.dimension.Value",
        "Type": "String",
        "UniqueKey": "cloudwatch.anomalydetector.dimension.value",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.anomalydetector.range.endtime": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudwatch.anomalydetector.range.endtime",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.anomalydetector.range.starttime": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudwatch.anomalydetector.range.starttime",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.metricstream.metricstreamfilter.namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudwatch.metricstream.metricstreamfilter.namespace",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.artifacts.artifactidentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.artifacts.artifactidentifier",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.artifacts.encryptiondisabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.artifacts.encryptiondisabled",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.artifacts.location": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "codebuild.project.artifacts.location",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.artifacts.name": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "codebuild.project.artifacts.name",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.artifacts.namespacetype": {
        "Allowed values": "BUILD_ID | NONE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.artifacts.namespacetype",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.artifacts.overrideartifactname": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.artifacts.overrideartifactname",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.artifacts.packaging": {
        "Allowed values": "NONE | ZIP",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.artifacts.packaging",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.artifacts.path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.artifacts.path",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.artifacts.type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "codebuild.project.artifacts.type",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.batchrestrictions.computetypesallowed": {
        "Required": "No",
        "SampleValue": "TODO-ComputeTypesAllowed",
        "UniqueKey": "codebuild.project.batchrestrictions.computetypesallowed",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.batchrestrictions.maximumbuildsallowed": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "codebuild.project.batchrestrictions.maximumbuildsallowed",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.buildstatusconfig.context": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.buildstatusconfig.context",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.buildstatusconfig.targeturl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.buildstatusconfig.targeturl",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.cloudwatchlogsconfig.groupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.cloudwatchlogsconfig.groupname",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.cloudwatchlogsconfig.status": {
        "Allowed values": "DISABLED | ENABLED",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.cloudwatchlogsconfig.status",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.cloudwatchlogsconfig.streamname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.cloudwatchlogsconfig.streamname",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environment.- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&": {
        "UniqueKey": "codebuild.project.environment.- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&"
    },
    "codebuild.project.environment.- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.environment.- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environment.- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"": {
        "UniqueKey": "codebuild.project.environment.- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\""
    },
    "codebuild.project.environment.certificate": {
        "Required": "No",
        "SampleValue": "TODO-Certificate",
        "UniqueKey": "codebuild.project.environment.certificate",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environment.computetype": {
        "Required": "Yes",
        "SampleValue": "TODO-ComputeType",
        "UniqueKey": "codebuild.project.environment.computetype",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environment.environmentvariables": {
        "Required": "No",
        "Type": "List of [EnvironmentVariable",
        "UniqueKey": "codebuild.project.environment.environmentvariables",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environment.image": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.environment.image",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environment.imagepullcredentialstype": {
        "Allowed values": "CODEBUILD | SERVICE_ROLE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.environment.imagepullcredentialstype",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environment.privilegedmode": {
        "UniqueKey": "codebuild.project.environment.privilegedmode"
    },
    "codebuild.project.environment.registrycredential": {
        "Required": "No",
        "Type": "RegistryCredential",
        "UniqueKey": "codebuild.project.environment.registrycredential",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environment.type": {
        "Allowed values": "ARM_CONTAINER | LINUX_CONTAINER | LINUX_GPU_CONTAINER | WINDOWS_CONTAINER | WINDOWS_SERVER_2019_CONTAINER",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.environment.type",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environmentvariable.name": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.environmentvariable.name",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environmentvariable.type": {
        "Required": "No",
        "SampleValue": "TODO-Type",
        "UniqueKey": "codebuild.project.environmentvariable.type",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.environmentvariable.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.environmentvariable.value",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.gitsubmodulesconfig.fetchsubmodules": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.gitsubmodulesconfig.fetchsubmodules",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.logsconfig.cloudwatchlogs": {
        "Required": "No",
        "Type": "CloudWatchLogsConfig",
        "UniqueKey": "codebuild.project.logsconfig.cloudwatchlogs",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.logsconfig.s3logs": {
        "Required": "No",
        "Type": "S3LogsConfig",
        "UniqueKey": "codebuild.project.logsconfig.s3logs",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectbuildbatchconfig.combineartifacts": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.projectbuildbatchconfig.combineartifacts",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectbuildbatchconfig.restrictions": {
        "Required": "No",
        "Type": "BatchRestrictions",
        "UniqueKey": "codebuild.project.projectbuildbatchconfig.restrictions",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectbuildbatchconfig.servicerole": {
        "Minimum": "1",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectbuildbatchconfig.servicerole",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectbuildbatchconfig.timeoutinmins": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "codebuild.project.projectbuildbatchconfig.timeoutinmins",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectcache.location": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectcache.location",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectcache.modes": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "codebuild.project.projectcache.modes",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectcache.type": {
        "Allowed values": "LOCAL | NO_CACHE | S3",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectcache.type",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectfilesystemlocation.identifier": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectfilesystemlocation.identifier",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectfilesystemlocation.location": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectfilesystemlocation.location",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectfilesystemlocation.mountoptions": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectfilesystemlocation.mountoptions",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectfilesystemlocation.mountpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectfilesystemlocation.mountpoint",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectfilesystemlocation.type": {
        "Allowed values": "EFS",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectfilesystemlocation.type",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectsourceversion.sourceidentifier": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectsourceversion.sourceidentifier",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projectsourceversion.sourceversion": {
        "Required": "No",
        "SampleValue": "TODO-SourceVersion",
        "UniqueKey": "codebuild.project.projectsourceversion.sourceversion",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projecttriggers.buildtype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.projecttriggers.buildtype",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projecttriggers.filtergroups": {
        "Required": "No",
        "Type": "List of [FilterGroup",
        "UniqueKey": "codebuild.project.projecttriggers.filtergroups",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.projecttriggers.webhook": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.projecttriggers.webhook",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.registrycredential.credential": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.registrycredential.credential",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.registrycredential.credentialprovider": {
        "Allowed values": "SECRETS_MANAGER",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.registrycredential.credentialprovider",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.s3logsconfig.encryptiondisabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.s3logsconfig.encryptiondisabled",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.s3logsconfig.location": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.s3logsconfig.location",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.s3logsconfig.status": {
        "Allowed values": "DISABLED | ENABLED",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.s3logsconfig.status",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.source.auth": {
        "Required": "No",
        "Type": "SourceAuth",
        "UniqueKey": "codebuild.project.source.auth",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.source.buildspec": {
        "Required": "No",
        "SampleValue": "TODO-BuildSpec",
        "UniqueKey": "codebuild.project.source.buildspec",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.source.buildstatusconfig": {
        "Required": "No",
        "Type": "BuildStatusConfig",
        "UniqueKey": "codebuild.project.source.buildstatusconfig",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.source.gitclonedepth": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "codebuild.project.source.gitclonedepth",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.source.gitsubmodulesconfig": {
        "Required": "No",
        "Type": "GitSubmodulesConfig",
        "UniqueKey": "codebuild.project.source.gitsubmodulesconfig",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.source.insecuressl": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.source.insecuressl",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.source.location": {
        "Required": "No",
        "SampleValue": "TODO-Location",
        "UniqueKey": "codebuild.project.source.location",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.source.reportbuildstatus": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.source.reportbuildstatus",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.source.sourceidentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.source.sourceidentifier",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.source.type": {
        "Allowed values": "BITBUCKET | CODECOMMIT | CODEPIPELINE | GITHUB | GITHUB_ENTERPRISE | NO_SOURCE | S3",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.source.type",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.sourceauth.resource": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.sourceauth.resource",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.sourceauth.type": {
        "Allowed values": "OAUTH",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.sourceauth.type",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.vpcconfig.securitygroupids": {
        "Maximum": "5",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "codebuild.project.vpcconfig.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.vpcconfig.subnets": {
        "Maximum": "16",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "codebuild.project.vpcconfig.subnets",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.vpcconfig.vpcid": {
        "Minimum": "1",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.vpcconfig.vpcid",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.webhookfilter.excludematchedpattern": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.webhookfilter.excludematchedpattern",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.webhookfilter.pattern": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.webhookfilter.pattern",
        "UpdateRequires": "Replacement"
    },
    "codebuild.project.webhookfilter.type": {
        "Allowed values": "ACTOR_ACCOUNT_ID | BASE_REF | COMMIT_MESSAGE | EVENT | FILE_PATH | HEAD_REF",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.webhookfilter.type",
        "UpdateRequires": "Replacement"
    },
    "codebuild.reportgroup.reportexportconfig.exportconfigtype": {
        "Allowed values": "NO_EXPORT | S3",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.reportgroup.reportexportconfig.exportconfigtype",
        "UpdateRequires": "Replacement"
    },
    "codebuild.reportgroup.reportexportconfig.s3destination": {
        "Required": "No",
        "Type": "S3ReportExportConfig",
        "UniqueKey": "codebuild.reportgroup.reportexportconfig.s3destination",
        "UpdateRequires": "Replacement"
    },
    "codebuild.reportgroup.s3reportexportconfig.bucket": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.reportgroup.s3reportexportconfig.bucket",
        "UpdateRequires": "Replacement"
    },
    "codebuild.reportgroup.s3reportexportconfig.encryptiondisabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.reportgroup.s3reportexportconfig.encryptiondisabled",
        "UpdateRequires": "Replacement"
    },
    "codebuild.reportgroup.s3reportexportconfig.encryptionkey": {
        "Minimum": "1",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.reportgroup.s3reportexportconfig.encryptionkey",
        "UpdateRequires": "Replacement"
    },
    "codebuild.reportgroup.s3reportexportconfig.packaging": {
        "Allowed values": "NONE | ZIP",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.reportgroup.s3reportexportconfig.packaging",
        "UpdateRequires": "Replacement"
    },
    "codebuild.reportgroup.s3reportexportconfig.path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.reportgroup.s3reportexportconfig.path",
        "UpdateRequires": "Replacement"
    },
    "codecommit.repository.code.branchname": {
        "Required": "No",
        "SampleValue": "TODO-BranchName",
        "UniqueKey": "codecommit.repository.code.branchname",
        "UpdateRequires": "Replacement"
    },
    "codecommit.repository.code.s3": {
        "Required": "Yes",
        "Type": "S3",
        "UniqueKey": "codecommit.repository.code.s3",
        "UpdateRequires": "Replacement"
    },
    "codecommit.repository.repositorytrigger.branches": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "codecommit.repository.repositorytrigger.branches",
        "UpdateRequires": "Replacement"
    },
    "codecommit.repository.repositorytrigger.customdata": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codecommit.repository.repositorytrigger.customdata",
        "UpdateRequires": "Replacement"
    },
    "codecommit.repository.repositorytrigger.destinationarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codecommit.repository.repositorytrigger.destinationarn",
        "UpdateRequires": "Replacement"
    },
    "codecommit.repository.repositorytrigger.events": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "codecommit.repository.repositorytrigger.events",
        "UpdateRequires": "Replacement"
    },
    "codecommit.repository.repositorytrigger.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codecommit.repository.repositorytrigger.name",
        "UpdateRequires": "Replacement"
    },
    "codecommit.repository.s3.bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codecommit.repository.s3.bucket",
        "UpdateRequires": "Replacement"
    },
    "codecommit.repository.s3.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codecommit.repository.s3.key",
        "UpdateRequires": "Replacement"
    },
    "codecommit.repository.s3.objectversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codecommit.repository.s3.objectversion",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentconfig.minimumhealthyhosts.type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "codedeploy.deploymentconfig.minimumhealthyhosts.type",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentconfig.minimumhealthyhosts.value": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "codedeploy.deploymentconfig.minimumhealthyhosts.value",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.alarm.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.alarm.name",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.alarmconfiguration.alarms": {
        "Required": "No",
        "Type": "List of [Alarm",
        "UniqueKey": "codedeploy.deploymentgroup.alarmconfiguration.alarms",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.alarmconfiguration.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codedeploy.deploymentgroup.alarmconfiguration.enabled",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.alarmconfiguration.ignorepollalarmfailure": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codedeploy.deploymentgroup.alarmconfiguration.ignorepollalarmfailure",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.autorollbackconfiguration.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codedeploy.deploymentgroup.autorollbackconfiguration.enabled",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.autorollbackconfiguration.events": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "codedeploy.deploymentgroup.autorollbackconfiguration.events",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.description",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.ignoreapplicationstopfailures": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.ignoreapplicationstopfailures",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision": {
        "Required": "Yes",
        "Type": "RevisionLocation",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision.githublocation": {
        "Required": "No",
        "Type": "GitHubLocation",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.githublocation",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision.githublocation.commitid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.githublocation.commitid",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision.githublocation.repository": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.githublocation.repository",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision.revisiontype": {
        "Allowed values": "AppSpecContent | GitHub | S3 | String",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.revisiontype",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision.s3location": {
        "Required": "No",
        "Type": "S3Location",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.s3location",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision.s3location.bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.s3location.bucket",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision.s3location.bundletype": {
        "Allowed values": "JSON | tar | tgz | YAML | zip",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.s3location.bundletype",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision.s3location.etag": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.s3location.etag",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision.s3location.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.s3location.key",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deployment.revision.s3location.version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.s3location.version",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deploymentstyle.deploymentoption": {
        "Allowed values": "WITH_TRAFFIC_CONTROL | WITHOUT_TRAFFIC_CONTROL",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deploymentstyle.deploymentoption",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.deploymentstyle.deploymenttype": {
        "Allowed values": "BLUE_GREEN | IN_PLACE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deploymentstyle.deploymenttype",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.ec2tagfilter.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.ec2tagfilter.key",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.ec2tagfilter.type": {
        "Allowed values": "KEY_AND_VALUE | KEY_ONLY | VALUE_ONLY",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.ec2tagfilter.type",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.ec2tagfilter.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.ec2tagfilter.value",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.ec2tagset.ec2tagsetlist": {
        "Required": "No",
        "Type": "List of [EC2TagSetListObject",
        "UniqueKey": "codedeploy.deploymentgroup.ec2tagset.ec2tagsetlist",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.ec2tagsetlistobject.ec2taggroup": {
        "Required": "No",
        "Type": "List of [EC2TagFilter",
        "UniqueKey": "codedeploy.deploymentgroup.ec2tagsetlistobject.ec2taggroup",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.elbinfo.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.elbinfo.name",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.loadbalancerinfo.elbinfolist": {
        "Required": "No",
        "Type": "List of [ELBInfo",
        "UniqueKey": "codedeploy.deploymentgroup.loadbalancerinfo.elbinfolist",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.loadbalancerinfo.targetgroupinfolist": {
        "Required": "Conditional",
        "Type": "List of [TargetGroupInfo",
        "UniqueKey": "codedeploy.deploymentgroup.loadbalancerinfo.targetgroupinfolist",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.onpremisestagset.onpremisestagsetlist": {
        "Required": "No",
        "Type": "List of [OnPremisesTagSetListObject",
        "UniqueKey": "codedeploy.deploymentgroup.onpremisestagset.onpremisestagsetlist",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.onpremisestagsetlistobject.onpremisestaggroup": {
        "Required": "No",
        "Type": "List of [TagFilter",
        "UniqueKey": "codedeploy.deploymentgroup.onpremisestagsetlistobject.onpremisestaggroup",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.tagfilter.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.tagfilter.key",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.tagfilter.type": {
        "Allowed values": "KEY_AND_VALUE | KEY_ONLY | VALUE_ONLY",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.tagfilter.type",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.tagfilter.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.tagfilter.value",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.targetgroupinfo.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.targetgroupinfo.name",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.triggerconfig.triggerevents": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "codedeploy.deploymentgroup.triggerconfig.triggerevents",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.triggerconfig.triggername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.triggerconfig.triggername",
        "UpdateRequires": "Replacement"
    },
    "codedeploy.deploymentgroup.triggerconfig.triggertargetarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.triggerconfig.triggertargetarn",
        "UpdateRequires": "Replacement"
    },
    "codeguruprofiler.profilinggroup.channel.channelid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codeguruprofiler.profilinggroup.channel.channelid",
        "UpdateRequires": "Replacement"
    },
    "codeguruprofiler.profilinggroup.channel.channeluri": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codeguruprofiler.profilinggroup.channel.channeluri",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.artifactdetails.maximumcount": {
        "Maximum": "5",
        "Minimum": "0",
        "Pattern": "^[0,5]}$",
        "Required": "Yes",
        "SampleValue": "0...5",
        "Type": "Integer",
        "UniqueKey": "codepipeline.customactiontype.artifactdetails.maximumcount",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.artifactdetails.minimumcount": {
        "Maximum": "5",
        "Minimum": "0",
        "Pattern": "^[0,5]}$",
        "Required": "Yes",
        "SampleValue": "0...5",
        "Type": "Integer",
        "UniqueKey": "codepipeline.customactiontype.artifactdetails.minimumcount",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.configurationproperties.description": {
        "Maximum": "160",
        "Minimum": "1",
        "Pattern": "^.{1,160}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.customactiontype.configurationproperties.Description",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.description",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.configurationproperties.key": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.key",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.configurationproperties.name": {
        "Maximum": "50",
        "Minimum": "1",
        "Pattern": "^.{1,50}$",
        "Required": "Yes",
        "SampleValue": "TODO-codepipeline.customactiontype.configurationproperties.Name",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.name",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.configurationproperties.queryable": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.queryable",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.configurationproperties.required": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.required",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.configurationproperties.secret": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.secret",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.configurationproperties.type": {
        "Allowed values": "Boolean | Number | String",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.type",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.settings.entityurltemplate": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.customactiontype.settings.EntityUrlTemplate",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.settings.entityurltemplate",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.settings.executionurltemplate": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.customactiontype.settings.ExecutionUrlTemplate",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.settings.executionurltemplate",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.settings.revisionurltemplate": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.customactiontype.settings.RevisionUrlTemplate",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.settings.revisionurltemplate",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.customactiontype.settings.thirdpartyconfigurationurl": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.customactiontype.settings.ThirdPartyConfigurationUrl",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.settings.thirdpartyconfigurationurl",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.artifactstore.encryptionkey": {
        "Required": "No",
        "Type": "EncryptionKey",
        "UniqueKey": "codepipeline.pipeline.artifactstore.encryptionkey",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.artifactstore.encryptionkey.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.artifactstore.encryptionkey.id",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.artifactstore.encryptionkey.type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.artifactstore.encryptionkey.type",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.artifactstore.location": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "[a-zA-Z0-9\\-\\.]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.artifactstore.location",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.artifactstore.type": {
        "Allowed values": "S3",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.artifactstore.type",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.artifactstoremap.artifactstore": {
        "Required": "Conditional",
        "Type": "ArtifactStore",
        "UniqueKey": "codepipeline.pipeline.artifactstoremap.artifactstore",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.artifactstoremap.region": {
        "Maximum": "30",
        "Minimum": "4",
        "Pattern": "^.{4,30}$",
        "Required": "Yes",
        "SampleValue": "TODO-codepipeline.pipeline.artifactstoremap.Region",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.artifactstoremap.region",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.disableinboundstagetransitions.reason": {
        "Maximum": "300",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9!@ \\(\\)\\.\\*\\?\\-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.disableinboundstagetransitions.reason",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.disableinboundstagetransitions.stagename": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "[A-Za-z0-9.@\\-_]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.disableinboundstagetransitions.stagename",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions": {
        "Required": "Yes",
        "Type": "List of [ActionDeclaration",
        "UniqueKey": "codepipeline.pipeline.stages.actions",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.actiontypeid": {
        "Required": "Yes",
        "Type": "ActionTypeId",
        "UniqueKey": "codepipeline.pipeline.stages.actions.actiontypeid",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.actiontypeid.category": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.actiontypeid.category",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.actiontypeid.owner": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.actiontypeid.owner",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.actiontypeid.provider": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.actiontypeid.provider",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.actiontypeid.version": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.actiontypeid.version",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.configuration": {
        "Required": "No",
        "SampleValue": "TODO-Configuration",
        "UniqueKey": "codepipeline.pipeline.stages.actions.configuration",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.inputartifacts": {
        "Required": "No",
        "SampleValue": "TODO-InputArtifacts",
        "UniqueKey": "codepipeline.pipeline.stages.actions.inputartifacts",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.inputartifacts.name": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9_\\-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.inputartifacts.name",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.name": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "[A-Za-z0-9.@\\-_]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.name",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.namespace": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "[A-Za-z0-9@\\-_]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.namespace",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.outputartifacts": {
        "Required": "No",
        "Type": "List of [OutputArtifact",
        "UniqueKey": "codepipeline.pipeline.stages.actions.outputartifacts",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.outputartifacts.name": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9_\\-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.outputartifacts.name",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.region": {
        "Maximum": "30",
        "Minimum": "4",
        "Pattern": "^.{4,30}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.pipeline.stages.actions.Region",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.region",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.rolearn": {
        "Maximum": "1024",
        "Pattern": "arn:aws(-[\\w]+)*:iam::[0-9]{12}:role/.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.rolearn",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.actions.runorder": {
        "Maximum": "999",
        "Minimum": "1",
        "Pattern": "^[1,999]}$",
        "Required": "No",
        "SampleValue": "1...999",
        "Type": "Integer",
        "UniqueKey": "codepipeline.pipeline.stages.actions.runorder",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.blockers": {
        "Required": "No",
        "Type": "List of [BlockerDeclaration",
        "UniqueKey": "codepipeline.pipeline.stages.blockers",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.blockers.name": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "Yes",
        "SampleValue": "TODO-codepipeline.pipeline.stages.blockers.Name",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.blockers.name",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.blockers.type": {
        "Allowed values": "Schedule",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.blockers.type",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.pipeline.stages.name": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "[A-Za-z0-9.@\\-_]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.name",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.webhook.webhookauthconfiguration.allowediprange": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.webhook.webhookauthconfiguration.AllowedIPRange",
        "Type": "String",
        "UniqueKey": "codepipeline.webhook.webhookauthconfiguration.allowediprange",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.webhook.webhookauthconfiguration.secrettoken": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.webhook.webhookauthconfiguration.SecretToken",
        "Type": "String",
        "UniqueKey": "codepipeline.webhook.webhookauthconfiguration.secrettoken",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.webhook.webhookfilterrule.jsonpath": {
        "Maximum": "150",
        "Minimum": "1",
        "Pattern": "^.{1,150}$",
        "Required": "Yes",
        "SampleValue": "TODO-codepipeline.webhook.webhookfilterrule.JsonPath",
        "Type": "String",
        "UniqueKey": "codepipeline.webhook.webhookfilterrule.jsonpath",
        "UpdateRequires": "Replacement"
    },
    "codepipeline.webhook.webhookfilterrule.matchequals": {
        "Maximum": "150",
        "Minimum": "1",
        "Pattern": "^.{1,150}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.webhook.webhookfilterrule.MatchEquals",
        "Type": "String",
        "UniqueKey": "codepipeline.webhook.webhookfilterrule.matchequals",
        "UpdateRequires": "Replacement"
    },
    "codestar.githubrepository.code.s3": {
        "Required": "Yes",
        "Type": "S3",
        "UniqueKey": "codestar.githubrepository.code.s3",
        "UpdateRequires": "Replacement"
    },
    "codestar.githubrepository.s3.bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codestar.githubrepository.s3.bucket",
        "UpdateRequires": "Replacement"
    },
    "codestar.githubrepository.s3.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codestar.githubrepository.s3.key",
        "UpdateRequires": "Replacement"
    },
    "codestar.githubrepository.s3.objectversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codestar.githubrepository.s3.objectversion",
        "UpdateRequires": "Replacement"
    },
    "codestarnotifications.notificationrule.target.targetaddress": {
        "Maximum": "320",
        "Minimum": "1",
        "Pattern": "^.{1,320}$",
        "Required": "No",
        "SampleValue": "TODO-codestarnotifications.notificationrule.target.TargetAddress",
        "Type": "String",
        "UniqueKey": "codestarnotifications.notificationrule.target.targetaddress",
        "UpdateRequires": "Replacement"
    },
    "codestarnotifications.notificationrule.target.targettype": {
        "Pattern": "^[A-Za-z]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codestarnotifications.notificationrule.target.targettype",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypool.cognitoidentityprovider.clientid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypool.cognitoidentityprovider.clientid",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypool.cognitoidentityprovider.providername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypool.cognitoidentityprovider.providername",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypool.cognitoidentityprovider.serversidetokencheck": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.identitypool.cognitoidentityprovider.serversidetokencheck",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypool.cognitostreams.rolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypool.cognitostreams.rolearn",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypool.cognitostreams.streamingstatus": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypool.cognitostreams.streamingstatus",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypool.cognitostreams.streamname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypool.cognitostreams.streamname",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypool.pushsync.applicationarns": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cognito.identitypool.pushsync.applicationarns",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypool.pushsync.rolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypool.pushsync.rolearn",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypoolroleattachment.mappingrule.claim": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.mappingrule.claim",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypoolroleattachment.mappingrule.matchtype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.mappingrule.matchtype",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypoolroleattachment.mappingrule.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.mappingrule.rolearn",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypoolroleattachment.mappingrule.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.mappingrule.value",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypoolroleattachment.rolemapping.ambiguousroleresolution": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.rolemapping.ambiguousroleresolution",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypoolroleattachment.rolemapping.identityprovider": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.rolemapping.identityprovider",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypoolroleattachment.rolemapping.rulesconfiguration": {
        "Required": "No",
        "Type": "RulesConfigurationType",
        "UniqueKey": "cognito.identitypoolroleattachment.rolemapping.rulesconfiguration",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypoolroleattachment.rolemapping.type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.rolemapping.type",
        "UpdateRequires": "Replacement"
    },
    "cognito.identitypoolroleattachment.rulesconfigurationtype.rules": {
        "Required": "Yes",
        "Type": "List of [MappingRule",
        "UniqueKey": "cognito.identitypoolroleattachment.rulesconfigurationtype.rules",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.accountrecoverysetting.recoverymechanisms": {
        "Maximum": "2",
        "Required": "No",
        "Type": "List of [RecoveryOption",
        "UniqueKey": "cognito.userpool.accountrecoverysetting.recoverymechanisms",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.admincreateuserconfig.allowadmincreateuseronly": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.admincreateuserconfig.allowadmincreateuseronly",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.admincreateuserconfig.invitemessagetemplate": {
        "Required": "No",
        "Type": "InviteMessageTemplate",
        "UniqueKey": "cognito.userpool.admincreateuserconfig.invitemessagetemplate",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.admincreateuserconfig.unusedaccountvaliditydays": {
        "Maximum": "365",
        "Minimum": "0",
        "Pattern": "^[0,365]}$",
        "Required": "No",
        "SampleValue": "0...365",
        "Type": "Integer",
        "UniqueKey": "cognito.userpool.admincreateuserconfig.unusedaccountvaliditydays",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.customemailsender.lambdaarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.customemailsender.lambdaarn",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.customemailsender.lambdaversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.customemailsender.lambdaversion",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.customsmssender.lambdaarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.customsmssender.lambdaarn",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.customsmssender.lambdaversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.customsmssender.lambdaversion",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.deviceconfiguration.challengerequiredonnewdevice": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.deviceconfiguration.challengerequiredonnewdevice",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.deviceconfiguration.deviceonlyrememberedonuserprompt": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.deviceconfiguration.deviceonlyrememberedonuserprompt",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.emailconfiguration.configurationset": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_-]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.emailconfiguration.configurationset",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.emailconfiguration.emailsendingaccount": {
        "Required": "No",
        "SampleValue": "TODO-EmailSendingAccount",
        "UniqueKey": "cognito.userpool.emailconfiguration.emailsendingaccount",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.emailconfiguration.from": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.emailconfiguration.from",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.emailconfiguration.replytoemailaddress": {
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+@[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.emailconfiguration.replytoemailaddress",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.emailconfiguration.sourcearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.emailconfiguration.sourcearn",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.invitemessagetemplate.emailmessage": {
        "Maximum": "20000",
        "Minimum": "6",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{####\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.invitemessagetemplate.emailmessage",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.invitemessagetemplate.emailsubject": {
        "Maximum": "140",
        "Minimum": "1",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.invitemessagetemplate.emailsubject",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.invitemessagetemplate.smsmessage": {
        "Maximum": "140",
        "Minimum": "6",
        "Pattern": ".*\\{####\\}.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.invitemessagetemplate.smsmessage",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.createauthchallenge": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.createauthchallenge",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.customemailsender": {
        "Required": "No",
        "Type": "CustomEmailSender",
        "UniqueKey": "cognito.userpool.lambdaconfig.customemailsender",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.custommessage": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.custommessage",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.customsmssender": {
        "Required": "No",
        "Type": "CustomSMSSender",
        "UniqueKey": "cognito.userpool.lambdaconfig.customsmssender",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.defineauthchallenge": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.defineauthchallenge",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.kmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.postauthentication": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.postauthentication",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.postconfirmation": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.postconfirmation",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.preauthentication": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.preauthentication",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.presignup": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.presignup",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.pretokengeneration": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.pretokengeneration",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.usermigration": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.usermigration",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.lambdaconfig.verifyauthchallengeresponse": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.verifyauthchallengeresponse",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.numberattributeconstraints.maxvalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.numberattributeconstraints.maxvalue",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.numberattributeconstraints.minvalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.numberattributeconstraints.minvalue",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.passwordpolicy.minimumlength": {
        "Maximum": "99",
        "Minimum": "6",
        "Pattern": "^[6,99]}$",
        "Required": "No",
        "SampleValue": "6...99",
        "Type": "Integer",
        "UniqueKey": "cognito.userpool.passwordpolicy.minimumlength",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.passwordpolicy.requirelowercase": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.passwordpolicy.requirelowercase",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.passwordpolicy.requirenumbers": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.passwordpolicy.requirenumbers",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.passwordpolicy.requiresymbols": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.passwordpolicy.requiresymbols",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.passwordpolicy.requireuppercase": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.passwordpolicy.requireuppercase",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.passwordpolicy.temporarypasswordvaliditydays": {
        "Maximum": "365",
        "Minimum": "0",
        "Pattern": "^[0,365]}$",
        "Required": "No",
        "SampleValue": "0...365",
        "Type": "Integer",
        "UniqueKey": "cognito.userpool.passwordpolicy.temporarypasswordvaliditydays",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.policies.passwordpolicy": {
        "Required": "No",
        "Type": "PasswordPolicy",
        "UniqueKey": "cognito.userpool.policies.passwordpolicy",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.recoveryoption.name": {
        "Allowed values": "admin_only | verified_email | verified_phone_number",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.recoveryoption.name",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.recoveryoption.priority": {
        "Maximum": "2",
        "Minimum": "1",
        "Pattern": "^[1,2]}$",
        "Required": "No",
        "SampleValue": "1...2",
        "Type": "Integer",
        "UniqueKey": "cognito.userpool.recoveryoption.priority",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.schemaattribute.attributedatatype": {
        "Allowed values": "Boolean | DateTime | Number | String",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.schemaattribute.attributedatatype",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.schemaattribute.developeronlyattribute": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.schemaattribute.developeronlyattribute",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.schemaattribute.mutable": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.schemaattribute.mutable",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.schemaattribute.name": {
        "Maximum": "20",
        "Minimum": "1",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.schemaattribute.name",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.schemaattribute.numberattributeconstraints": {
        "Required": "No",
        "Type": "NumberAttributeConstraints",
        "UniqueKey": "cognito.userpool.schemaattribute.numberattributeconstraints",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.schemaattribute.required": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.schemaattribute.required",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.schemaattribute.stringattributeconstraints": {
        "Required": "No",
        "Type": "StringAttributeConstraints",
        "UniqueKey": "cognito.userpool.schemaattribute.stringattributeconstraints",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.smsconfiguration.externalid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.smsconfiguration.externalid",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.smsconfiguration.snscallerarn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.smsconfiguration.snscallerarn",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.stringattributeconstraints.maxlength": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.stringattributeconstraints.maxlength",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.stringattributeconstraints.minlength": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.stringattributeconstraints.minlength",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.usernameconfiguration.casesensitive": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "CaseSensitive`  <a name=\"cfn-cognito-userpool-usernameconfiguration-casesensitive\"></a>\nSpecifies whether username case sensitivity will be applied for all users in the user pool through Cognito APIs\\.  \nValid values include:  \n+  ** `True` *": "Enables case sensitivity for all username input\\. When this option is set to `True`, users must sign in using the exact capitalization of their given username\\. For example, \u201cUserName\u201d\\. This is the default value\\.\n+  ** `False` *",
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.usernameconfiguration.casesensitive",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.userpooladdons.advancedsecuritymode": {
        "Allowed values": "AUDIT | ENFORCED | OFF",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.userpooladdons.advancedsecuritymode",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.verificationmessagetemplate.defaultemailoption": {
        "Allowed values": "CONFIRM_WITH_CODE | CONFIRM_WITH_LINK",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.verificationmessagetemplate.defaultemailoption",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.verificationmessagetemplate.emailmessage": {
        "Maximum": "20000",
        "Minimum": "6",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{####\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.verificationmessagetemplate.emailmessage",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.verificationmessagetemplate.emailmessagebylink": {
        "Maximum": "20000",
        "Minimum": "6",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{##[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*##\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.verificationmessagetemplate.emailmessagebylink",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.verificationmessagetemplate.emailsubject": {
        "Maximum": "140",
        "Minimum": "1",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.verificationmessagetemplate.emailsubject",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.verificationmessagetemplate.emailsubjectbylink": {
        "Maximum": "140",
        "Minimum": "1",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.verificationmessagetemplate.emailsubjectbylink",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpool.verificationmessagetemplate.smsmessage": {
        "Maximum": "140",
        "Minimum": "6",
        "Pattern": ".*\\{####\\}.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.verificationmessagetemplate.smsmessage",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolclient.analyticsconfiguration.applicationid": {
        "Pattern": "^[0-9a-fA-F]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolclient.analyticsconfiguration.applicationid",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolclient.analyticsconfiguration.externalid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolclient.analyticsconfiguration.externalid",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolclient.analyticsconfiguration.rolearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolclient.analyticsconfiguration.rolearn",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolclient.analyticsconfiguration.userdatashared": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpoolclient.analyticsconfiguration.userdatashared",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolclient.tokenvalidityunits.accesstoken": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolclient.tokenvalidityunits.accesstoken",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolclient.tokenvalidityunits.idtoken": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolclient.tokenvalidityunits.idtoken",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolclient.tokenvalidityunits.refreshtoken": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolclient.tokenvalidityunits.refreshtoken",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpooldomain.customdomainconfigtype.certificatearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpooldomain.customdomainconfigtype.certificatearn",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolresourceserver.resourceserverscopetype.scopedescription": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "Yes",
        "SampleValue": "TODO-cognito.userpoolresourceserver.resourceserverscopetype.ScopeDescription",
        "Type": "String",
        "UniqueKey": "cognito.userpoolresourceserver.resourceserverscopetype.scopedescription",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolresourceserver.resourceserverscopetype.scopename": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\x21\\x23-\\x2E\\x30-\\x5B\\x5D-\\x7E]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.userpoolresourceserver.resourceserverscopetype.scopename",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.highaction": {
        "Required": "No",
        "Type": "AccountTakeoverActionType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.highaction",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.lowaction": {
        "Required": "No",
        "Type": "AccountTakeoverActionType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.lowaction",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.mediumaction": {
        "Required": "No",
        "Type": "AccountTakeoverActionType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.mediumaction",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoveractiontype.eventaction": {
        "Allowed values": "BLOCK | MFA_IF_CONFIGURED | MFA_REQUIRED | NO_ACTION",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoveractiontype.eventaction",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoveractiontype.notify": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoveractiontype.notify",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoverriskconfigurationtype.actions": {
        "Required": "Yes",
        "Type": "AccountTakeoverActionsType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoverriskconfigurationtype.actions",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoverriskconfigurationtype.notifyconfiguration": {
        "Required": "No",
        "Type": "NotifyConfigurationType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoverriskconfigurationtype.notifyconfiguration",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.compromisedcredentialsactionstype.eventaction": {
        "Allowed values": "BLOCK | NO_ACTION",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.compromisedcredentialsactionstype.eventaction",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.compromisedcredentialsriskconfigurationtype.actions": {
        "Required": "Yes",
        "Type": "CompromisedCredentialsActionsType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.compromisedcredentialsriskconfigurationtype.actions",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.compromisedcredentialsriskconfigurationtype.eventfilter": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.compromisedcredentialsriskconfigurationtype.eventfilter",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.blockemail": {
        "Required": "No",
        "Type": "NotifyEmailType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.blockemail",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.from": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.from",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.mfaemail": {
        "Required": "No",
        "Type": "NotifyEmailType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.mfaemail",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.noactionemail": {
        "Required": "No",
        "Type": "NotifyEmailType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.noactionemail",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.replyto": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.replyto",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.sourcearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.sourcearn",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.notifyemailtype.htmlbody": {
        "Maximum": "20000",
        "Minimum": "6",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyemailtype.htmlbody",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.notifyemailtype.subject": {
        "Maximum": "140",
        "Minimum": "1",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyemailtype.subject",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.notifyemailtype.textbody": {
        "Maximum": "20000",
        "Minimum": "6",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyemailtype.textbody",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.riskexceptionconfigurationtype.blockediprangelist": {
        "Maximum": "20",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.riskexceptionconfigurationtype.blockediprangelist",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpoolriskconfigurationattachment.riskexceptionconfigurationtype.skippediprangelist": {
        "Maximum": "20",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.riskexceptionconfigurationtype.skippediprangelist",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpooluser.attributetype.name": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpooluser.attributetype.name",
        "UpdateRequires": "Replacement"
    },
    "cognito.userpooluser.attributetype.value": {
        "Maximum": "2048",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpooluser.attributetype.value",
        "UpdateRequires": "Replacement"
    },
    "config.configrule.scope.complianceresourceid": {
        "Maximum": "768",
        "Minimum": "1",
        "Pattern": "^.{1,768}$",
        "Required": "No",
        "SampleValue": "TODO-config.configrule.scope.ComplianceResourceId",
        "Type": "String",
        "UniqueKey": "config.configrule.scope.complianceresourceid",
        "UpdateRequires": "Replacement"
    },
    "config.configrule.scope.complianceresourcetypes": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "config.configrule.scope.complianceresourcetypes",
        "UpdateRequires": "Replacement"
    },
    "config.configrule.scope.tagkey": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-config.configrule.scope.TagKey",
        "Type": "String",
        "UniqueKey": "config.configrule.scope.tagkey",
        "UpdateRequires": "Replacement"
    },
    "config.configrule.scope.tagvalue": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-config.configrule.scope.TagValue",
        "Type": "String",
        "UniqueKey": "config.configrule.scope.tagvalue",
        "UpdateRequires": "Replacement"
    },
    "config.configrule.source.owner": {
        "Allowed values": "AWS | CUSTOM_LAMBDA",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "config.configrule.source.owner",
        "UpdateRequires": "Replacement"
    },
    "config.configrule.source.sourcedetails": {
        "Maximum": "25",
        "Required": "No",
        "Type": "List of [SourceDetail",
        "UniqueKey": "config.configrule.source.sourcedetails",
        "UpdateRequires": "Replacement"
    },
    "config.configrule.source.sourcedetails.eventsource": {
        "Allowed values": "aws.config",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "config.configrule.source.sourcedetails.eventsource",
        "UpdateRequires": "Replacement"
    },
    "config.configrule.source.sourcedetails.maximumexecutionfrequency": {
        "Allowed values": "One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "config.configrule.source.sourcedetails.maximumexecutionfrequency",
        "UpdateRequires": "Replacement"
    },
    "config.configrule.source.sourcedetails.messagetype": {
        "Allowed values": "ConfigurationItemChangeNotification | ConfigurationSnapshotDeliveryCompleted | OversizedConfigurationItemChangeNotification | ScheduledNotification",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "config.configrule.source.sourcedetails.messagetype",
        "UpdateRequires": "Replacement"
    },
    "config.configrule.source.sourceidentifier": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "Yes",
        "SampleValue": "TODO-config.configrule.source.SourceIdentifier",
        "Type": "String",
        "UniqueKey": "config.configrule.source.sourceidentifier",
        "UpdateRequires": "Replacement"
    },
    "config.configurationaggregator.accountaggregationsource.accountids": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "config.configurationaggregator.accountaggregationsource.accountids",
        "UpdateRequires": "Replacement"
    },
    "config.configurationaggregator.accountaggregationsource.allawsregions": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "config.configurationaggregator.accountaggregationsource.allawsregions",
        "UpdateRequires": "Replacement"
    },
    "config.configurationaggregator.accountaggregationsource.awsregions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "config.configurationaggregator.accountaggregationsource.awsregions",
        "UpdateRequires": "Replacement"
    },
    "config.configurationaggregator.organizationaggregationsource.allawsregions": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "config.configurationaggregator.organizationaggregationsource.allawsregions",
        "UpdateRequires": "Replacement"
    },
    "config.configurationaggregator.organizationaggregationsource.awsregions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "config.configurationaggregator.organizationaggregationsource.awsregions",
        "UpdateRequires": "Replacement"
    },
    "config.configurationaggregator.organizationaggregationsource.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "config.configurationaggregator.organizationaggregationsource.rolearn",
        "UpdateRequires": "Replacement"
    },
    "config.configurationrecorder.recordinggroup.allsupported": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "config.configurationrecorder.recordinggroup.allsupported",
        "UpdateRequires": "Replacement"
    },
    "config.configurationrecorder.recordinggroup.includeglobalresourcetypes": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "config.configurationrecorder.recordinggroup.includeglobalresourcetypes",
        "UpdateRequires": "Replacement"
    },
    "config.configurationrecorder.recordinggroup.resourcetypes": {
        "Required": "No",
        "SampleValue": "TODO-ResourceTypes",
        "UniqueKey": "config.configurationrecorder.recordinggroup.resourcetypes",
        "UpdateRequires": "Replacement"
    },
    "config.conformancepack.conformancepackinputparameter.parametername": {
        "Maximum": "255",
        "Minimum": "0",
        "Pattern": "^.{0,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-config.conformancepack.conformancepackinputparameter.ParameterName",
        "Type": "String",
        "UniqueKey": "config.conformancepack.conformancepackinputparameter.parametername",
        "UpdateRequires": "Replacement"
    },
    "config.conformancepack.conformancepackinputparameter.parametervalue": {
        "Maximum": "4096",
        "Minimum": "0",
        "Pattern": "^.{0,4096}$",
        "Required": "Yes",
        "SampleValue": "TODO-config.conformancepack.conformancepackinputparameter.ParameterValue",
        "Type": "String",
        "UniqueKey": "config.conformancepack.conformancepackinputparameter.parametervalue",
        "UpdateRequires": "Replacement"
    },
    "config.deliverychannel.configsnapshotdeliveryproperties.deliveryfrequency": {
        "Allowed values": "One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "config.deliverychannel.configsnapshotdeliveryproperties.deliveryfrequency",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.description": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "^.{0,256}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationcustomrulemetadata.Description",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.description",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.inputparameters": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationcustomrulemetadata.InputParameters",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.inputparameters",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.lambdafunctionarn": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "Yes",
        "SampleValue": "TODO-config.organizationconfigrule.organizationcustomrulemetadata.LambdaFunctionArn",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.lambdafunctionarn",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.maximumexecutionfrequency": {
        "Allowed values": "One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.maximumexecutionfrequency",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.organizationconfigruletriggertypes": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.organizationconfigruletriggertypes",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.resourceidscope": {
        "Maximum": "768",
        "Minimum": "1",
        "Pattern": "^.{1,768}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationcustomrulemetadata.ResourceIdScope",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.resourceidscope",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.resourcetypesscope": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.resourcetypesscope",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.tagkeyscope": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationcustomrulemetadata.TagKeyScope",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.tagkeyscope",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.tagvaluescope": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationcustomrulemetadata.TagValueScope",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.tagvaluescope",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.description": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "^.{0,256}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationmanagedrulemetadata.Description",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.description",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.inputparameters": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationmanagedrulemetadata.InputParameters",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.inputparameters",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.maximumexecutionfrequency": {
        "Allowed values": "One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.maximumexecutionfrequency",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.resourceidscope": {
        "Maximum": "768",
        "Minimum": "1",
        "Pattern": "^.{1,768}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationmanagedrulemetadata.ResourceIdScope",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.resourceidscope",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.resourcetypesscope": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.resourcetypesscope",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.ruleidentifier": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "Yes",
        "SampleValue": "TODO-config.organizationconfigrule.organizationmanagedrulemetadata.RuleIdentifier",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.ruleidentifier",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.tagkeyscope": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationmanagedrulemetadata.TagKeyScope",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.tagkeyscope",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.tagvaluescope": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationmanagedrulemetadata.TagValueScope",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.tagvaluescope",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconformancepack.conformancepackinputparameter.parametername": {
        "Maximum": "255",
        "Minimum": "0",
        "Pattern": "^.{0,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-config.organizationconformancepack.conformancepackinputparameter.ParameterName",
        "Type": "String",
        "UniqueKey": "config.organizationconformancepack.conformancepackinputparameter.parametername",
        "UpdateRequires": "Replacement"
    },
    "config.organizationconformancepack.conformancepackinputparameter.parametervalue": {
        "Maximum": "255",
        "Minimum": "0",
        "Pattern": "^.{0,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-config.organizationconformancepack.conformancepackinputparameter.ParameterValue",
        "Type": "String",
        "UniqueKey": "config.organizationconformancepack.conformancepackinputparameter.parametervalue",
        "UpdateRequires": "Replacement"
    },
    "config.remediationconfiguration.executioncontrols.ssmcontrols": {
        "Required": "No",
        "Type": "SsmControls",
        "UniqueKey": "config.remediationconfiguration.executioncontrols.ssmcontrols",
        "UpdateRequires": "Replacement"
    },
    "config.remediationconfiguration.remediationparametervalue.resourcevalue": {
        "Required": "No",
        "Type": "ResourceValue",
        "UniqueKey": "config.remediationconfiguration.remediationparametervalue.resourcevalue",
        "UpdateRequires": "Replacement"
    },
    "config.remediationconfiguration.remediationparametervalue.staticvalue": {
        "Required": "No",
        "Type": "StaticValue",
        "UniqueKey": "config.remediationconfiguration.remediationparametervalue.staticvalue",
        "UpdateRequires": "Replacement"
    },
    "config.remediationconfiguration.resourcevalue.value": {
        "Allowed values": "RESOURCE_ID",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "config.remediationconfiguration.resourcevalue.value",
        "UpdateRequires": "Replacement"
    },
    "config.remediationconfiguration.ssmcontrols.concurrentexecutionratepercentage": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[1,100]}$",
        "Required": "No",
        "SampleValue": "1...100",
        "Type": "Integer",
        "UniqueKey": "config.remediationconfiguration.ssmcontrols.concurrentexecutionratepercentage",
        "UpdateRequires": "Replacement"
    },
    "config.remediationconfiguration.ssmcontrols.errorpercentage": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[1,100]}$",
        "Required": "No",
        "SampleValue": "1...100",
        "Type": "Integer",
        "UniqueKey": "config.remediationconfiguration.ssmcontrols.errorpercentage",
        "UpdateRequires": "Replacement"
    },
    "config.remediationconfiguration.staticvalue.values": {
        "Maximum": "25",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "config.remediationconfiguration.staticvalue.values",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.actionsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cw.alarm.actionsenabled",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.alarmactions": {
        "Maximum": "5",
        "Required": "No",
        "UniqueKey": "cw.alarm.alarmactions",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.alarmdescription": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": "^.{0,1024}$",
        "Required": "No",
        "SampleValue": "TODO-cw.alarm.AlarmDescription",
        "Type": "String",
        "UniqueKey": "cw.alarm.alarmdescription",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.alarmname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "No",
        "SampleValue": "TODO-cw.alarm.AlarmName",
        "Type": "String",
        "UniqueKey": "cw.alarm.alarmname",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.comparisonoperator": {
        "Allowed values": "GreaterThanOrEqualToThreshold | GreaterThanThreshold | GreaterThanUpperThreshold | LessThanLowerOrGreaterThanUpperThreshold | LessThanLowerThreshold | LessThanOrEqualToThreshold | LessThanThreshold",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cw.alarm.comparisonoperator",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.datapointstoalarm": {
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "cw.alarm.datapointstoalarm",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.dimensions": {
        "Maximum": "10",
        "Required": "No",
        "Type": "List of [Dimension",
        "UniqueKey": "cw.alarm.dimensions",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.evaluatelowsamplecountpercentile": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "No",
        "SampleValue": "TODO-cw.alarm.EvaluateLowSampleCountPercentile",
        "Type": "String",
        "UniqueKey": "cw.alarm.evaluatelowsamplecountpercentile",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.evaluationperiods": {
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "cw.alarm.evaluationperiods",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.extendedstatistic": {
        "Pattern": "p(\\d{1,2}(\\.\\d{0,2})?|100)",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cw.alarm.extendedstatistic",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.insufficientdataactions": {
        "Maximum": "5",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cw.alarm.insufficientdataactions",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.metricname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "No",
        "SampleValue": "TODO-cw.alarm.MetricName",
        "Type": "String",
        "UniqueKey": "cw.alarm.metricname",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.metrics": {
        "Required": "No",
        "Type": "List of [MetricDataQuery",
        "UniqueKey": "cw.alarm.metrics",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.namespace": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[^:].*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cw.alarm.namespace",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.okactions": {
        "Maximum": "5",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cw.alarm.okactions",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.period": {
        "Required": "No",
        "SampleValue": "TODO-Period",
        "UniqueKey": "cw.alarm.period",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.statistic": {
        "Allowed values": "Average | Maximum | Minimum | SampleCount | Sum",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cw.alarm.statistic",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.threshold": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "cw.alarm.threshold",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.thresholdmetricid": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "No",
        "SampleValue": "TODO-cw.alarm.ThresholdMetricId",
        "Type": "String",
        "UniqueKey": "cw.alarm.thresholdmetricid",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.treatmissingdata": {
        "Maximum": "255",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "cw.alarm.treatmissingdata",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.unit": {
        "Allowed values": "Bits | Bits/Second | Bytes | Bytes/Second | Count | Count/Second | Gigabits | Gigabits/Second | Gigabytes | Gigabytes/Second | Kilobits | Kilobits/Second | Kilobytes | Kilobytes/Second | Megabits | Megabits/Second | Megabytes | Megabytes/Second | Microseconds | Milliseconds | None | Percent | Seconds | Terabits | Terabits/Second | Terabytes | Terabytes/Second",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cw.alarm.unit",
        "UpdateRequires": "Replacement"
    },
    "cw.dimension.name": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-cw.dimension.Name",
        "Type": "String",
        "UniqueKey": "cw.dimension.name",
        "UpdateRequires": "Replacement"
    },
    "cw.dimension.value": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-cw.dimension.Value",
        "Type": "String",
        "UniqueKey": "cw.dimension.value",
        "UpdateRequires": "Replacement"
    },
    "databrew.job.output.compressionformat": {
        "Allowed values": "BROTLI | BZIP2 | DEFLATE | GZIP | LZ4 | LZO | SNAPPY | ZLIB | ZSTD",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.job.output.compressionformat",
        "UpdateRequires": "Replacement"
    },
    "databrew.job.output.format": {
        "Allowed values": "AVRO | CSV | GLUEPARQUET | JSON | ORC | PARQUET | XML",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.job.output.format",
        "UpdateRequires": "Replacement"
    },
    "databrew.job.output.location": {
        "Required": "Yes",
        "Type": "S3Location",
        "UniqueKey": "databrew.job.output.location",
        "UpdateRequires": "Replacement"
    },
    "databrew.job.output.overwrite": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "databrew.job.output.overwrite",
        "UpdateRequires": "Replacement"
    },
    "databrew.job.output.partitioncolumns": {
        "Maximum": "200",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "databrew.job.output.partitioncolumns",
        "UpdateRequires": "Replacement"
    },
    "databrew.job.s3location.bucket": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "^.{3,63}$",
        "Required": "Yes",
        "SampleValue": "TODO-databrew.job.s3location.Bucket",
        "Type": "String",
        "UniqueKey": "databrew.job.s3location.bucket",
        "UpdateRequires": "Replacement"
    },
    "databrew.job.s3location.key": {
        "Maximum": "1280",
        "Minimum": "1",
        "Pattern": "^.{1,1280}$",
        "Required": "No",
        "SampleValue": "TODO-databrew.job.s3location.Key",
        "Type": "String",
        "UniqueKey": "databrew.job.s3location.key",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.action.operation": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "databrew.recipe.action.operation",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.action.parameters": {
        "Required": "No",
        "Type": "",
        "UniqueKey": "databrew.recipe.action.parameters",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.conditionexpression.condition": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[A-Z\\_]+$",
        "Required": "Yes",
        "UniqueKey": "databrew.recipe.conditionexpression.condition",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.conditionexpression.targetcolumn": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-databrew.recipe.conditionexpression.TargetColumn",
        "Type": "String",
        "UniqueKey": "databrew.recipe.conditionexpression.targetcolumn",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.conditionexpression.value": {
        "Maximum": "1024",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.conditionexpression.value",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.datacataloginputdefinition.catalogid": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "No",
        "SampleValue": "TODO-databrew.recipe.datacataloginputdefinition.CatalogId",
        "Type": "String",
        "UniqueKey": "databrew.recipe.datacataloginputdefinition.catalogid",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.datacataloginputdefinition.databasename": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "No",
        "SampleValue": "TODO-databrew.recipe.datacataloginputdefinition.DatabaseName",
        "Type": "String",
        "UniqueKey": "databrew.recipe.datacataloginputdefinition.databasename",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.datacataloginputdefinition.tablename": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "No",
        "SampleValue": "TODO-databrew.recipe.datacataloginputdefinition.TableName",
        "Type": "String",
        "UniqueKey": "databrew.recipe.datacataloginputdefinition.tablename",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.datacataloginputdefinition.tempdirectory": {
        "Required": "No",
        "Type": "S3Location",
        "UniqueKey": "databrew.recipe.datacataloginputdefinition.tempdirectory",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.aggregatefunction": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.aggregatefunction",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.base": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.base",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.casestatement": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.casestatement",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.categorymap": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.categorymap",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.charstoremove": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.charstoremove",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.collapseconsecutivewhitespace": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.collapseconsecutivewhitespace",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.columndatatype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.columndatatype",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.columnrange": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.columnrange",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.count": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.count",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.customcharacters": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.customcharacters",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.customstopwords": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.customstopwords",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.customvalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.customvalue",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.datasetscolumns": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.datasetscolumns",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.dateaddvalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.dateaddvalue",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.datetimeformat": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.datetimeformat",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.datetimeparameters": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.datetimeparameters",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.deleteotherrows": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.deleteotherrows",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.delimiter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.delimiter",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.endpattern": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.endpattern",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.endposition": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.endposition",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.endvalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.endvalue",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.expandcontractions": {
        "Required": "No",
        "SampleValue": "TODO-ExpandContractions",
        "UniqueKey": "databrew.recipe.recipeparameters.expandcontractions",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.exponent": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.exponent",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.falsestring": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.falsestring",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.groupbyaggfunctionoptions": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.groupbyaggfunctionoptions",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.groupbycolumns": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.groupbycolumns",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.hiddencolumns": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.hiddencolumns",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.ignorecase": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.ignorecase",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.includeinsplit": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.includeinsplit",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.input": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "databrew.recipe.recipeparameters.input",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.interval": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.interval",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.istext": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.istext",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.joinkeys": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.joinkeys",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.jointype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.jointype",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.leftcolumns": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.leftcolumns",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.limit": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.limit",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.lowerbound": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.lowerbound",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.maptype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.maptype",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.modetype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.modetype",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.multiline": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "databrew.recipe.recipeparameters.multiline",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.numrows": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.numrows",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.numrowsafter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.numrowsafter",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.numrowsbefore": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.numrowsbefore",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.orderbycolumn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.orderbycolumn",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.orderbycolumns": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.orderbycolumns",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.other": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.other",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.pattern": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.pattern",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.patternoption1": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.patternoption1",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.patternoption2": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.patternoption2",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.patternoptions": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.patternoptions",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.period": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.period",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.position": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.position",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.removeallpunctuation": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.removeallpunctuation",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.removeallquotes": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.removeallquotes",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.removeallwhitespace": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.removeallwhitespace",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.removecustomcharacters": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.removecustomcharacters",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.removecustomvalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.removecustomvalue",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.removeleadingandtrailingpunctuation": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.removeleadingandtrailingpunctuation",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.removeleadingandtrailingquotes": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.removeleadingandtrailingquotes",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.removeleadingandtrailingwhitespace": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.removeleadingandtrailingwhitespace",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.removeletters": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.removeletters",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.removenumbers": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.removenumbers",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.removesourcecolumn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "databrew.recipe.recipeparameters.removesourcecolumn",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipeparameters.removespecialcharacters": {
        "UniqueKey": "databrew.recipe.recipeparameters.removespecialcharacters"
    },
    "databrew.recipe.recipestep.action": {
        "Required": "Yes",
        "Type": "Action",
        "UniqueKey": "databrew.recipe.recipestep.action",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.recipestep.conditionexpressions": {
        "Required": "No",
        "Type": "List of [ConditionExpression",
        "UniqueKey": "databrew.recipe.recipestep.conditionexpressions",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.s3location.bucket": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "^.{3,63}$",
        "Required": "Yes",
        "SampleValue": "TODO-databrew.recipe.s3location.Bucket",
        "Type": "String",
        "UniqueKey": "databrew.recipe.s3location.bucket",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.s3location.key": {
        "Maximum": "1280",
        "Minimum": "1",
        "Pattern": "^.{1,1280}$",
        "Required": "No",
        "SampleValue": "TODO-databrew.recipe.s3location.Key",
        "Type": "String",
        "UniqueKey": "databrew.recipe.s3location.key",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.secondaryinput.datacataloginputdefinition": {
        "Required": "No",
        "Type": "DataCatalogInputDefinition",
        "UniqueKey": "databrew.recipe.secondaryinput.datacataloginputdefinition",
        "UpdateRequires": "Replacement"
    },
    "databrew.recipe.secondaryinput.s3inputdefinition": {
        "Required": "No",
        "Type": "S3Location",
        "UniqueKey": "databrew.recipe.secondaryinput.s3inputdefinition",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.parameterobjects.attributes": {
        "Required": "Yes",
        "Type": "List of [ParameterAttribute",
        "UniqueKey": "datapipeline.pipeline.parameterobjects.attributes",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.parameterobjects.attributes.key": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.parameterobjects.attributes.key",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.parameterobjects.attributes.stringvalue": {
        "Maximum": "10240",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.parameterobjects.attributes.stringvalue",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.parameterobjects.id": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.parameterobjects.id",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.parametervalues.id": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.parametervalues.id",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.parametervalues.stringvalue": {
        "Maximum": "10240",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.parametervalues.stringvalue",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.pipelineobjects.fields": {
        "Required": "Yes",
        "Type": "List of [Field",
        "UniqueKey": "datapipeline.pipeline.pipelineobjects.fields",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.pipelineobjects.fields.key": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "UniqueKey": "datapipeline.pipeline.pipelineobjects.fields.key",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.pipelineobjects.fields.refvalue": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.pipelineobjects.fields.refvalue",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.pipelineobjects.fields.stringvalue": {
        "Maximum": "10240",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "UniqueKey": "datapipeline.pipeline.pipelineobjects.fields.stringvalue",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.pipelineobjects.id": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.pipelineobjects.id",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.pipelineobjects.name": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.pipelineobjects.name",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.pipelinetags.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.pipelinetags.key",
        "UpdateRequires": "Replacement"
    },
    "datapipeline.pipeline.pipelinetags.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.pipelinetags.value",
        "UpdateRequires": "Replacement"
    },
    "datasync.locationefs.ec2config.securitygrouparns": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "datasync.locationefs.ec2config.securitygrouparns",
        "UpdateRequires": "Replacement"
    },
    "datasync.locationefs.ec2config.subnetarn": {
        "Maximum": "128",
        "Pattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):ec2:[a-z\\-0-9]*:[0-9]{12}:subnet/.*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datasync.locationefs.ec2config.subnetarn",
        "UpdateRequires": "Replacement"
    },
    "datasync.locationnfs.mountoptions.version": {
        "Required": "No",
        "SampleValue": "TODO-Version",
        "UniqueKey": "datasync.locationnfs.mountoptions.version",
        "UpdateRequires": "Replacement"
    },
    "datasync.locationnfs.onpremconfig.agentarns": {
        "Maximum": "4",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "datasync.locationnfs.onpremconfig.agentarns",
        "UpdateRequires": "Replacement"
    },
    "datasync.locations3.s3config.bucketaccessrolearn": {
        "Maximum": "2048",
        "Pattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):iam::[0-9]{12}:role/.*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datasync.locations3.s3config.bucketaccessrolearn",
        "UpdateRequires": "Replacement"
    },
    "datasync.locationsmb.mountoptions.version": {
        "Allowed values": "AUTOMATIC | SMB2 | SMB3",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "datasync.locationsmb.mountoptions.version",
        "UpdateRequires": "Replacement"
    },
    "datasync.task.filterrule.filtertype": {
        "Allowed values": "SIMPLE_PATTERN",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "datasync.task.filterrule.filtertype",
        "UpdateRequires": "Replacement"
    },
    "datasync.task.filterrule.value": {
        "Maximum": "409600",
        "Pattern": "^[^\\x00]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "datasync.task.filterrule.value",
        "UpdateRequires": "Replacement"
    },
    "datasync.task.options.atime": {
        "Allowed values": "BEST_EFFORT | NONE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "datasync.task.options.atime",
        "UpdateRequires": "Replacement"
    },
    "datasync.task.options.bytespersecond": {
        "Required": "No",
        "SampleValue": "TODO-BytesPerSecond",
        "UniqueKey": "datasync.task.options.bytespersecond",
        "UpdateRequires": "Replacement"
    },
    "datasync.task.options.gid": {
        "Allowed values": "BOTH | INT_VALUE | NAME | NONE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "datasync.task.options.gid",
        "UpdateRequires": "Replacement"
    },
    "datasync.task.options.loglevel": {
        "Allowed values": "BASIC | OFF | TRANSFER",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "datasync.task.options.loglevel",
        "UpdateRequires": "Replacement"
    },
    "datasync.task.options.mtime": {
        "Allowed values": "NONE | PRESERVE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "datasync.task.options.mtime",
        "UpdateRequires": "Replacement"
    },
    "datasync.task.options.overwritemode": {
        "Required": "No",
        "SampleValue": "TODO-OverwriteMode",
        "UniqueKey": "datasync.task.options.overwritemode",
        "UpdateRequires": "Replacement"
    },
    "datasync.task.options.posixpermissions": {
        "Allowed values": "NONE | PRESERVE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "datasync.task.options.posixpermissions",
        "UpdateRequires": "Replacement"
    },
    "datasync.task.options.preservedeletedfiles": {
        "Required": "No",
        "SampleValue": "TODO-PreserveDeletedFiles",
        "UniqueKey": "datasync.task.options.preservedeletedfiles",
        "UpdateRequires": "Replacement"
    },
    "datasync.task.options.preservedevices": {
        "Allowed values": "NONE | PRESERVE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "datasync.task.options.preservedevices",
        "UpdateRequires": "Replacement"
    },
    "datasync.task.options.taskqueueing": {
        "Allowed values": "DISABLED | ENABLED",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "datasync.task.options.taskqueueing",
        "UpdateRequires": "Replacement"
    },
    "datasync.task.options.transfermode": {
        "Allowed values": "ALL | CHANGED",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "datasync.task.options.transfermode",
        "UpdateRequires": "Replacement"
    },
    "datasync.task.options.uid": {
        "Allowed values": "BOTH | INT_VALUE | NAME | NONE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "datasync.task.options.uid",
        "UpdateRequires": "Replacement"
    },
    "datasync.task.options.verifymode": {
        "Allowed values": "NONE | ONLY_FILES_TRANSFERRED | POINT_IN_TIME_CONSISTENT",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "datasync.task.options.verifymode",
        "UpdateRequires": "Replacement"
    },
    "datasync.task.taskschedule.scheduleexpression": {
        "Maximum": "256",
        "Pattern": "^[a-zA-Z0-9\\ \\_\\*\\?\\,\\|\\^\\-\\/\\#\\s\\(\\)\\+]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datasync.task.taskschedule.scheduleexpression",
        "UpdateRequires": "Replacement"
    },
    "dax.cluster.ssespecification.sseenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dax.cluster.ssespecification.sseenabled",
        "UpdateRequires": "Replacement"
    },
    "devopsguru.notificationchannel.notificationchannelconfig.sns": {
        "Required": "No",
        "Type": "SnsChannelConfig",
        "UniqueKey": "devopsguru.notificationchannel.notificationchannelconfig.sns",
        "UpdateRequires": "Replacement"
    },
    "devopsguru.notificationchannel.snschannelconfig.topicarn": {
        "Maximum": "1024",
        "Minimum": "36",
        "Pattern": "^arn:aws[a-z0-9-]*:sns:[a-z0-9-]+:\\d{12}:[^:]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "devopsguru.notificationchannel.snschannelconfig.topicarn",
        "UpdateRequires": "Replacement"
    },
    "devopsguru.resourcecollection.cloudformationcollectionfilter.stacknames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "devopsguru.resourcecollection.cloudformationcollectionfilter.stacknames",
        "UpdateRequires": "Replacement"
    },
    "devopsguru.resourcecollection.resourcecollectionfilter.cloudformation": {
        "Required": "No",
        "SampleValue": "TODO-CloudFormation",
        "UniqueKey": "devopsguru.resourcecollection.resourcecollectionfilter.cloudformation",
        "UpdateRequires": "Replacement"
    },
    "directoryservice.microsoftad.vpcsettings.subnetids": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "directoryservice.microsoftad.vpcsettings.subnetids",
        "UpdateRequires": "Replacement"
    },
    "directoryservice.microsoftad.vpcsettings.vpcid": {
        "Pattern": "^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "directoryservice.microsoftad.vpcsettings.vpcid",
        "UpdateRequires": "Replacement"
    },
    "directoryservice.simplead.vpcsettings.subnetids": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "directoryservice.simplead.vpcsettings.subnetids",
        "UpdateRequires": "Replacement"
    },
    "directoryservice.simplead.vpcsettings.vpcid": {
        "Pattern": "^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "directoryservice.simplead.vpcsettings.vpcid",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.action.crossregioncopy": {
        "Maximum": "3",
        "Required": "Yes",
        "Type": "List of [CrossRegionCopyAction",
        "UniqueKey": "dlm.lifecyclepolicy.action.crossregioncopy",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.action.name": {
        "Maximum": "120",
        "Minimum": "0",
        "Pattern": "[0-9A-Za-z _-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.action.name",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.createrule.cronexpression": {
        "Maximum": "106",
        "Minimum": "17",
        "Pattern": "cron\\([^\\n]{11,100}\\)",
        "Required": "No",
        "UniqueKey": "dlm.lifecyclepolicy.createrule.cronexpression",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.createrule.interval": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dlm.lifecyclepolicy.createrule.interval",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.createrule.intervalunit": {
        "Allowed values": "HOURS",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.createrule.intervalunit",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.createrule.times": {
        "Maximum": "1",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "dlm.lifecyclepolicy.createrule.times",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.crossregioncopyaction.encryptionconfiguration": {
        "Required": "Yes",
        "Type": "EncryptionConfiguration",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyaction.encryptionconfiguration",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.crossregioncopyaction.retainrule": {
        "Required": "No",
        "Type": "CrossRegionCopyRetainRule",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyaction.retainrule",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.crossregioncopyaction.target": {
        "Maximum": "16",
        "Minimum": "0",
        "Pattern": "^[\\\\w:\\\\-\\\\/\\\\*]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyaction.target",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.crossregioncopyretainrule.interval": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyretainrule.interval",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.crossregioncopyretainrule.intervalunit": {
        "Allowed values": "DAYS | MONTHS | WEEKS | YEARS",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyretainrule.intervalunit",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.crossregioncopyrule.cmkarn": {
        "Maximum": "2048",
        "Minimum": "0",
        "Pattern": "arn:aws(-[a-z]{1,3}){0,2}:kms:([a-z]+-){2,3}\\d:\\d+:key/.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyrule.cmkarn",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.crossregioncopyrule.copytags": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyrule.copytags",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.crossregioncopyrule.encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyrule.encrypted",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.crossregioncopyrule.retainrule": {
        "Required": "No",
        "Type": "CrossRegionCopyRetainRule",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyrule.retainrule",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.crossregioncopyrule.targetregion": {
        "Maximum": "16",
        "Minimum": "0",
        "Pattern": "([a-z]+-){2,3}\\d",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyrule.targetregion",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.encryptionconfiguration.cmkarn": {
        "Maximum": "2048",
        "Minimum": "0",
        "Pattern": "arn:aws(-[a-z]{1,3}){0,2}:kms:([a-z]+-){2,3}\\d:\\d+:key/.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.encryptionconfiguration.cmkarn",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.encryptionconfiguration.encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dlm.lifecyclepolicy.encryptionconfiguration.encrypted",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.eventparameters.descriptionregex": {
        "Maximum": "1000",
        "Minimum": "0",
        "Pattern": "[\\p{all}]*",
        "Required": "No",
        "UniqueKey": "dlm.lifecyclepolicy.eventparameters.descriptionregex",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.eventparameters.eventtype": {
        "Allowed values": "shareSnapshot",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.eventparameters.eventtype",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.eventparameters.snapshotowner": {
        "Maximum": "50",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "dlm.lifecyclepolicy.eventparameters.snapshotowner",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.eventsource.parameters": {
        "Required": "No",
        "Type": "EventParameters",
        "UniqueKey": "dlm.lifecyclepolicy.eventsource.parameters",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.eventsource.type": {
        "Allowed values": "MANAGED_CWE",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.eventsource.type",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.fastrestorerule.availabilityzones": {
        "Maximum": "10",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "dlm.lifecyclepolicy.fastrestorerule.availabilityzones",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.fastrestorerule.count": {
        "Maximum": "1000",
        "Minimum": "1",
        "Pattern": "^[1,1000]}$",
        "Required": "No",
        "SampleValue": "1...1000",
        "Type": "Integer",
        "UniqueKey": "dlm.lifecyclepolicy.fastrestorerule.count",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.fastrestorerule.interval": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dlm.lifecyclepolicy.fastrestorerule.interval",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.fastrestorerule.intervalunit": {
        "Allowed values": "DAYS | MONTHS | WEEKS | YEARS",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.fastrestorerule.intervalunit",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.parameters.excludebootvolume": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dlm.lifecyclepolicy.parameters.excludebootvolume",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.parameters.noreboot": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dlm.lifecyclepolicy.parameters.noreboot",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.policydetails.actions": {
        "Maximum": "1",
        "Required": "No",
        "Type": "List of [Action",
        "UniqueKey": "dlm.lifecyclepolicy.policydetails.actions",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.policydetails.eventsource": {
        "Required": "No",
        "Type": "EventSource",
        "UniqueKey": "dlm.lifecyclepolicy.policydetails.eventsource",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.policydetails.parameters": {
        "Required": "No",
        "Type": "Parameters",
        "UniqueKey": "dlm.lifecyclepolicy.policydetails.parameters",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.policydetails.policytype": {
        "Allowed values": "EBS_SNAPSHOT_MANAGEMENT | EVENT_BASED_POLICY | IMAGE_MANAGEMENT",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.policydetails.policytype",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.policydetails.resourcetypes": {
        "Maximum": "1",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "dlm.lifecyclepolicy.policydetails.resourcetypes",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.policydetails.schedules": {
        "Maximum": "4",
        "Required": "No",
        "Type": "List of [Schedule",
        "UniqueKey": "dlm.lifecyclepolicy.policydetails.schedules",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.policydetails.targettags": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "dlm.lifecyclepolicy.policydetails.targettags",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.retainrule.count": {
        "Maximum": "1000",
        "Minimum": "1",
        "Pattern": "^[1,1000]}$",
        "Required": "No",
        "SampleValue": "1...1000",
        "Type": "Integer",
        "UniqueKey": "dlm.lifecyclepolicy.retainrule.count",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.retainrule.interval": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dlm.lifecyclepolicy.retainrule.interval",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.retainrule.intervalunit": {
        "Allowed values": "DAYS | MONTHS | WEEKS | YEARS",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.retainrule.intervalunit",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.schedule.copytags": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.copytags",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.schedule.createrule": {
        "Required": "No",
        "Type": "CreateRule",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.createrule",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.schedule.crossregioncopyrules": {
        "Maximum": "3",
        "Required": "No",
        "Type": "List of [CrossRegionCopyRule",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.crossregioncopyrules",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.schedule.fastrestorerule": {
        "Required": "No",
        "Type": "FastRestoreRule",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.fastrestorerule",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.schedule.name": {
        "Maximum": "120",
        "Minimum": "0",
        "Pattern": "[0-9A-Za-z _-]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.name",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.schedule.retainrule": {
        "Required": "No",
        "Type": "RetainRule",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.retainrule",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.schedule.sharerules": {
        "Maximum": "1",
        "Required": "No",
        "Type": "List of [ShareRule",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.sharerules",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.schedule.tagstoadd": {
        "Maximum": "45",
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.tagstoadd",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.schedule.variabletags": {
        "Maximum": "45",
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.variabletags",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.sharerule.targetaccounts": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "dlm.lifecyclepolicy.sharerule.targetaccounts",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.sharerule.unshareinterval": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dlm.lifecyclepolicy.sharerule.unshareinterval",
        "UpdateRequires": "Replacement"
    },
    "dlm.lifecyclepolicy.sharerule.unshareintervalunit": {
        "Allowed values": "DAYS | MONTHS | WEEKS | YEARS",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.sharerule.unshareintervalunit",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.dynamodbsettings.serviceaccessrolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.dynamodbsettings.serviceaccessrolearn",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.elasticsearchsettings.endpointuri": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.elasticsearchsettings.endpointuri",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.elasticsearchsettings.errorretryduration": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dms.endpoint.elasticsearchsettings.errorretryduration",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.elasticsearchsettings.fullloaderrorpercentage": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dms.endpoint.elasticsearchsettings.fullloaderrorpercentage",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.elasticsearchsettings.serviceaccessrolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.elasticsearchsettings.serviceaccessrolearn",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.kafkasettings.broker": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.kafkasettings.broker",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.kafkasettings.topic": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.kafkasettings.topic",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.kinesissettings.messageformat": {
        "Allowed values": "json | json-unformatted",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.kinesissettings.messageformat",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.kinesissettings.serviceaccessrolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.kinesissettings.serviceaccessrolearn",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.kinesissettings.streamarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.kinesissettings.streamarn",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.authmechanism": {
        "Allowed values": "default | mongodb_cr | scram_sha_1",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.authmechanism",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.authsource": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.authsource",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.authtype": {
        "Allowed values": "no | password",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.authtype",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.databasename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.databasename",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.docstoinvestigate": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.docstoinvestigate",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.extractdocid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.extractdocid",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.nestinglevel": {
        "Allowed values": "none | one",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.nestinglevel",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.password": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.password",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dms.endpoint.mongodbsettings.port",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.servername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.servername",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.mongodbsettings.username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.username",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.neptunesettings.errorretryduration": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dms.endpoint.neptunesettings.errorretryduration",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.neptunesettings.iamauthenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dms.endpoint.neptunesettings.iamauthenabled",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.neptunesettings.maxfilesize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dms.endpoint.neptunesettings.maxfilesize",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.neptunesettings.maxretrycount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dms.endpoint.neptunesettings.maxretrycount",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.neptunesettings.s3bucketfolder": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.neptunesettings.s3bucketfolder",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.neptunesettings.s3bucketname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.neptunesettings.s3bucketname",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.neptunesettings.serviceaccessrolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.neptunesettings.serviceaccessrolearn",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.s3settings.bucketfolder": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.bucketfolder",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.s3settings.bucketname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.bucketname",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.s3settings.compressiontype": {
        "Allowed values": "gzip | none",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.compressiontype",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.s3settings.csvdelimiter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.csvdelimiter",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.s3settings.csvrowdelimiter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.csvrowdelimiter",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.s3settings.externaltabledefinition": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.externaltabledefinition",
        "UpdateRequires": "Replacement"
    },
    "dms.endpoint.s3settings.serviceaccessrolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.serviceaccessrolearn",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.attributedef.attributename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dynamodb.attributedef.attributename",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.attributedef.attributetype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dynamodb.attributedef.attributetype",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.gsi.indexname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dynamodb.gsi.indexname",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.gsi.keyschema": {
        "Required": "Yes",
        "SampleValue": "TODO-KeySchema",
        "UniqueKey": "dynamodb.gsi.keyschema",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.gsi.projection": {
        "Required": "Yes",
        "Type": "Projection",
        "UniqueKey": "dynamodb.gsi.projection",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.gsi.provisionedthroughput": {
        "Required": "No",
        "SampleValue": "TODO-ProvisionedThroughput",
        "UniqueKey": "dynamodb.gsi.provisionedthroughput",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.keyschema.attributename": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-dynamodb.keyschema.AttributeName",
        "Type": "String",
        "UniqueKey": "dynamodb.keyschema.attributename",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.keyschema.keytype": {
        "Required": "Yes",
        "SampleValue": "TODO-KeyType",
        "UniqueKey": "dynamodb.keyschema.keytype",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.lsi.indexname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dynamodb.lsi.indexname",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.lsi.keyschema": {
        "Required": "Yes",
        "SampleValue": "TODO-KeySchema",
        "UniqueKey": "dynamodb.lsi.keyschema",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.lsi.projection": {
        "Required": "Yes",
        "Type": "Projection",
        "UniqueKey": "dynamodb.lsi.projection",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.projectionobject.nonkeyattributes": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "dynamodb.projectionobject.nonkeyattributes",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.projectionobject.projectiontype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dynamodb.projectionobject.projectiontype",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.provisionedthroughput.readcapacityunits": {
        "Required": "Yes",
        "SampleValue": "TODO-ReadCapacityUnits",
        "UniqueKey": "dynamodb.provisionedthroughput.readcapacityunits",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.provisionedthroughput.writecapacityunits": {
        "Required": "Yes",
        "SampleValue": "TODO-WriteCapacityUnits",
        "UniqueKey": "dynamodb.provisionedthroughput.writecapacityunits",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.streamspecification.streamviewtype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dynamodb.streamspecification.streamviewtype",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.attributedefinition.attributename": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-dynamodb.table.attributedefinition.AttributeName",
        "Type": "String",
        "UniqueKey": "dynamodb.table.attributedefinition.attributename",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.attributedefinition.attributetype": {
        "Allowed values": "B | N | S",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dynamodb.table.attributedefinition.attributetype",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.contributorinsightsspecification.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dynamodb.table.contributorinsightsspecification.enabled",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.globalsecondaryindex.contributorinsightsspecification": {
        "Required": "No",
        "Type": "ContributorInsightsSpecification",
        "UniqueKey": "dynamodb.table.globalsecondaryindex.contributorinsightsspecification",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.globalsecondaryindex.indexname": {
        "Maximum": "255",
        "Minimum": "3",
        "Pattern": "[a-zA-Z0-9_.-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dynamodb.table.globalsecondaryindex.indexname",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.globalsecondaryindex.keyschema": {
        "Maximum": "2",
        "Required": "Yes",
        "UniqueKey": "dynamodb.table.globalsecondaryindex.keyschema",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.globalsecondaryindex.projection": {
        "Required": "Yes",
        "Type": "Projection",
        "UniqueKey": "dynamodb.table.globalsecondaryindex.projection",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.globalsecondaryindex.provisionedthroughput": {
        "Required": "No",
        "SampleValue": "TODO-ProvisionedThroughput",
        "UniqueKey": "dynamodb.table.globalsecondaryindex.provisionedthroughput",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.keyschema.attributename": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-dynamodb.table.keyschema.AttributeName",
        "Type": "String",
        "UniqueKey": "dynamodb.table.keyschema.attributename",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.keyschema.keytype": {
        "Required": "Yes",
        "SampleValue": "TODO-KeyType",
        "UniqueKey": "dynamodb.table.keyschema.keytype",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.localsecondaryindex.indexname": {
        "Maximum": "255",
        "Minimum": "3",
        "Pattern": "[a-zA-Z0-9_.-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dynamodb.table.localsecondaryindex.indexname",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.localsecondaryindex.keyschema": {
        "Maximum": "2",
        "Required": "Yes",
        "UniqueKey": "dynamodb.table.localsecondaryindex.keyschema",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.localsecondaryindex.projection": {
        "Required": "Yes",
        "Type": "Projection",
        "UniqueKey": "dynamodb.table.localsecondaryindex.projection",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.pointintimerecoveryspecification.pointintimerecoveryenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dynamodb.table.pointintimerecoveryspecification.pointintimerecoveryenabled",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.projection.nonkeyattributes": {
        "Maximum": "20",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "dynamodb.table.projection.nonkeyattributes",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.projection.projectiontype": {
        "Allowed values": "ALL | INCLUDE | KEYS_ONLY",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dynamodb.table.projection.projectiontype",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.provisionedthroughput.readcapacityunits": {
        "Required": "Yes",
        "SampleValue": "TODO-ReadCapacityUnits",
        "UniqueKey": "dynamodb.table.provisionedthroughput.readcapacityunits",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.provisionedthroughput.writecapacityunits": {
        "Required": "Yes",
        "SampleValue": "TODO-WriteCapacityUnits",
        "UniqueKey": "dynamodb.table.provisionedthroughput.writecapacityunits",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.ssespecification.kmsmasterkeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dynamodb.table.ssespecification.kmsmasterkeyid",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.ssespecification.sseenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dynamodb.table.ssespecification.sseenabled",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.ssespecification.ssetype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dynamodb.table.ssespecification.ssetype",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.streamspecification.streamviewtype": {
        "Allowed values": "KEYS_ONLY | NEW_AND_OLD_IMAGES | NEW_IMAGE | OLD_IMAGE",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dynamodb.table.streamspecification.streamviewtype",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.timetolivespecification.attributename": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-dynamodb.table.timetolivespecification.AttributeName",
        "Type": "String",
        "UniqueKey": "dynamodb.table.timetolivespecification.attributename",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.table.timetolivespecification.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dynamodb.table.timetolivespecification.enabled",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.timetolivespecification.attributename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dynamodb.timetolivespecification.attributename",
        "UpdateRequires": "Replacement"
    },
    "dynamodb.timetolivespecification.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dynamodb.timetolivespecification.enabled",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.mapping.devicename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.blockdev.mapping.devicename",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.mapping.ebs": {
        "Required": "Conditional",
        "Type": "Ebs",
        "UniqueKey": "ec2.blockdev.mapping.ebs",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.mapping.nodevice": {
        "Required": "No",
        "Type": "NoDevice",
        "UniqueKey": "ec2.blockdev.mapping.nodevice",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.mapping.virtualname": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.blockdev.mapping.virtualname",
        "UpdateRequires": "Replacement",
        "VirtualName`  <a name=\"cfn-ec2-blockdev-mapping-virtualname\"></a>\nThe virtual device name \\(`ephemeral`N\\)\\. The name must be in the form `ephemeral`*X* where *X* is a number starting from zero \\(0\\)\\. For example, an instance type with 2 available instance store volumes can specify mappings for `ephemeral0` and `ephemeral1`\\. The number of available instance store volumes depends on the instance type\\. After you connect to the instance, you must mount the volume\\.  \nNVMe instance store volumes are automatically enumerated and assigned a device name\\. Including them in your block device mapping has no effect\\.  \nYou can specify either `VirtualName` or `Ebs`, but not both\\.  \n *Constraints": "For M3 instances, you must specify instance store volumes in the block device mapping for the instance\\. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI\\."
    },
    "ec2.blockdev.template.deleteontermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ec2.blockdev.template.deleteontermination",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.template.encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ec2.blockdev.template.encrypted",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.template.iops": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "ec2.blockdev.template.iops",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.template.kmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.blockdev.template.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.template.snapshotid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.blockdev.template.snapshotid",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.template.volumesize": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "ec2.blockdev.template.volumesize",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.template.volumetype": {
        "Required": "No",
        "SampleValue": "TODO-VolumeType",
        "UniqueKey": "ec2.blockdev.template.volumetype",
        "UpdateRequires": "Replacement"
    },
    "ec2.capacityreservation.tag.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.capacityreservation.tag.key",
        "UpdateRequires": "Replacement"
    },
    "ec2.capacityreservation.tag.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.capacityreservation.tag.value",
        "UpdateRequires": "Replacement"
    },
    "ec2.capacityreservation.tagspecification.resourcetype": {
        "Allowed values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | egress-only-internet-gateway | elastic-gpu | elastic-ip | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | internet-gateway | key-pair | launch-template | local-gateway-route-table-vpc-association | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-flow-log | vpc-peering-connection | vpn-connection | vpn-gateway",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.capacityreservation.tagspecification.resourcetype",
        "UpdateRequires": "Replacement"
    },
    "ec2.capacityreservation.tagspecification.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.capacityreservation.tagspecification.tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.carriergateway.tags.tags": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "ec2.carriergateway.tags.tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.certificateauthenticationrequest.clientrootcertificatechainarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.certificateauthenticationrequest.clientrootcertificatechainarn",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.clientauthenticationrequest.activedirectory": {
        "Required": "No",
        "SampleValue": "TODO-ActiveDirectory",
        "UniqueKey": "ec2.clientvpnendpoint.clientauthenticationrequest.activedirectory",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.clientauthenticationrequest.federatedauthentication": {
        "Required": "No",
        "Type": "FederatedAuthenticationRequest",
        "UniqueKey": "ec2.clientvpnendpoint.clientauthenticationrequest.federatedauthentication",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.clientauthenticationrequest.mutualauthentication": {
        "Required": "No",
        "SampleValue": "TODO-MutualAuthentication",
        "UniqueKey": "ec2.clientvpnendpoint.clientauthenticationrequest.mutualauthentication",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.clientauthenticationrequest.type": {
        "Allowed values": "certificate-authentication | directory-service-authentication | federated-authentication",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.clientauthenticationrequest.type",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.clientconnectoptions.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.clientvpnendpoint.clientconnectoptions.enabled",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.clientconnectoptions.lambdafunctionarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.clientconnectoptions.lambdafunctionarn",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.connectionlogoptions.cloudwatchloggroup": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.connectionlogoptions.cloudwatchloggroup",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.connectionlogoptions.cloudwatchlogstream": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.connectionlogoptions.cloudwatchlogstream",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.connectionlogoptions.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.clientvpnendpoint.connectionlogoptions.enabled",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.directoryserviceauthenticationrequest.directoryid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.directoryserviceauthenticationrequest.directoryid",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.federatedauthenticationrequest.samlproviderarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.federatedauthenticationrequest.samlproviderarn",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.federatedauthenticationrequest.selfservicesamlproviderarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.federatedauthenticationrequest.selfservicesamlproviderarn",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.tagspecification.resourcetype": {
        "Allowed values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | egress-only-internet-gateway | elastic-gpu | elastic-ip | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | internet-gateway | key-pair | launch-template | local-gateway-route-table-vpc-association | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-flow-log | vpc-peering-connection | vpn-connection | vpn-gateway",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.tagspecification.resourcetype",
        "UpdateRequires": "Replacement"
    },
    "ec2.clientvpnendpoint.tagspecification.tags": {
        "Required": "Yes",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.clientvpnendpoint.tagspecification.tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.autoenableio": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.ebs.volume.autoenableio",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.availabilityzone": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.ebs.volume.availabilityzone",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ec2.ebs.volume.encrypted",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.iops": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.ebs.volume.iops",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.kmskeyid": {
        "Required": "No",
        "SampleValue": "TODO-KmsKeyId",
        "UniqueKey": "ec2.ebs.volume.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.multiattachenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.ebs.volume.multiattachenabled",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.outpostarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ebs.volume.outpostarn",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.size": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.ebs.volume.size",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.snapshotid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ebs.volume.snapshotid",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.ebs.volume.tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.throughput": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.ebs.volume.throughput",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volume.volumetype": {
        "Required": "No",
        "SampleValue": "TODO-VolumeType",
        "UniqueKey": "ec2.ebs.volume.volumetype",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volumeattachment.device": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.ebs.volumeattachment.device",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volumeattachment.instanceid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.ebs.volumeattachment.instanceid",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volumeattachment.volumeid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.ebs.volumeattachment.volumeid",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.capacityreservationoptionsrequest.usagestrategy": {
        "Allowed values": "use-capacity-reservations-first",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.capacityreservationoptionsrequest.usagestrategy",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplateconfigrequest.launchtemplatespecification": {
        "Required": "No",
        "Type": "FleetLaunchTemplateSpecificationRequest",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateconfigrequest.launchtemplatespecification",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplateconfigrequest.overrides": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of [FleetLaunchTemplateOverridesRequest",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateconfigrequest.overrides",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.availabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.availabilityzone",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.instancetype": {
        "Allowed values": "a1.2xlarge | a1.4xlarge | a1.large | a1.medium | a1.metal | a1.xlarge | c1.medium | c1.xlarge | c3.2xlarge | c3.4xlarge | c3.8xlarge | c3.large | c3.xlarge | c4.2xlarge | c4.4xlarge | c4.8xlarge | c4.large | c4.xlarge | c5.12xlarge | c5.18xlarge | c5.24xlarge | c5.2xlarge | c5.4xlarge | c5.9xlarge | c5.large | c5.metal | c5.xlarge | c5a.12xlarge | c5a.16xlarge | c5a.24xlarge | c5a.2xlarge | c5a.4xlarge | c5a.8xlarge | c5a.large | c5a.xlarge | c5ad.12xlarge | c5ad.16xlarge | c5ad.24xlarge | c5ad.2xlarge | c5ad.4xlarge | c5ad.8xlarge | c5ad.large | c5ad.xlarge | c5d.12xlarge | c5d.18xlarge | c5d.24xlarge | c5d.2xlarge | c5d.4xlarge | c5d.9xlarge | c5d.large | c5d.metal | c5d.xlarge | c5n.18xlarge | c5n.2xlarge | c5n.4xlarge | c5n.9xlarge | c5n.large | c5n.metal | c5n.xlarge | c6g.12xlarge | c6g.16xlarge | c6g.2xlarge | c6g.4xlarge | c6g.8xlarge | c6g.large | c6g.medium | c6g.metal | c6g.xlarge | c6gd.12xlarge | c6gd.16xlarge | c6gd.2xlarge | c6gd.4xlarge | c6gd.8xlarge | c6gd.large | c6gd.medium | c6gd.metal | c6gd.xlarge | c6gn.12xlarge | c6gn.16xlarge | c6gn.2xlarge | c6gn.4xlarge | c6gn.8xlarge | c6gn.large | c6gn.medium | c6gn.metal | c6gn.xlarge | cc1.4xlarge | cc2.8xlarge | cg1.4xlarge | cr1.8xlarge | d2.2xlarge | d2.4xlarge | d2.8xlarge | d2.xlarge | d3.2xlarge | d3.4xlarge | d3.8xlarge | d3.metal | d3.xlarge | d3en.12xlarge | d3en.2xlarge | d3en.4xlarge | d3en.6xlarge | d3en.8xlarge | d3en.large | d3en.metal | d3en.xlarge | f1.16xlarge | f1.2xlarge | f1.4xlarge | g2.2xlarge | g2.8xlarge | g3.16xlarge | g3.4xlarge | g3.8xlarge | g3s.xlarge | g4ad.16xlarge | g4ad.2xlarge | g4ad.4xlarge | g4ad.8xlarge | g4ad.xlarge | g4dn.12xlarge | g4dn.16xlarge | g4dn.2xlarge | g4dn.4xlarge | g4dn.8xlarge | g4dn.metal | g4dn.xlarge | h1.16xlarge | h1.2xlarge | h1.4xlarge | h1.8xlarge | hi1.4xlarge | hpc5a.48xlarge | hs1.8xlarge | i2.2xlarge | i2.4xlarge | i2.8xlarge | i2.xlarge | i3.16xlarge | i3.2xlarge | i3.4xlarge | i3.8xlarge | i3.large | i3.metal | i3.xlarge | i3en.12xlarge | i3en.24xlarge | i3en.2xlarge | i3en.3xlarge | i3en.6xlarge | i3en.large | i3en.metal | i3en.xlarge | inf1.24xlarge | inf1.2xlarge | inf1.6xlarge | inf1.xlarge | m1.large | m1.medium | m1.small | m1.xlarge | m2.2xlarge | m2.4xlarge | m2.xlarge | m3.2xlarge | m3.large | m3.medium | m3.xlarge | m4.10xlarge | m4.16xlarge | m4.2xlarge | m4.4xlarge | m4.large | m4.xlarge | m5.12xlarge | m5.16xlarge | m5.24xlarge | m5.2xlarge | m5.4xlarge | m5.8xlarge | m5.large | m5.metal | m5.xlarge | m5a.12xlarge | m5a.16xlarge | m5a.24xlarge | m5a.2xlarge | m5a.4xlarge | m5a.8xlarge | m5a.large | m5a.xlarge | m5ad.12xlarge | m5ad.16xlarge | m5ad.24xlarge | m5ad.2xlarge | m5ad.4xlarge | m5ad.8xlarge | m5ad.large | m5ad.xlarge | m5d.12xlarge | m5d.16xlarge | m5d.24xlarge | m5d.2xlarge | m5d.4xlarge | m5d.8xlarge | m5d.large | m5d.metal | m5d.xlarge | m5dn.12xlarge | m5dn.16xlarge | m5dn.24xlarge | m5dn.2xlarge | m5dn.4xlarge | m5dn.8xlarge | m5dn.large | m5dn.xlarge | m5n.12xlarge | m5n.16xlarge | m5n.24xlarge | m5n.2xlarge | m5n.4xlarge | m5n.8xlarge | m5n.large | m5n.xlarge | m5zn.12xlarge | m5zn.2xlarge | m5zn.3xlarge | m5zn.6xlarge | m5zn.large | m5zn.metal | m5zn.xlarge | m6g.12xlarge | m6g.16xlarge | m6g.2xlarge | m6g.4xlarge | m6g.8xlarge | m6g.large | m6g.medium | m6g.metal | m6g.xlarge | m6gd.12xlarge | m6gd.16xlarge | m6gd.2xlarge | m6gd.4xlarge | m6gd.8xlarge | m6gd.large | m6gd.medium | m6gd.metal | m6gd.xlarge | mac1.metal | p2.16xlarge | p2.8xlarge | p2.xlarge | p3.16xlarge | p3.2xlarge | p3.8xlarge | p3dn.24xlarge | p4d.24xlarge | r3.2xlarge | r3.4xlarge | r3.8xlarge | r3.large | r3.xlarge | r4.16xlarge | r4.2xlarge | r4.4xlarge | r4.8xlarge | r4.large | r4.xlarge | r5.12xlarge | r5.16xlarge | r5.24xlarge | r5.2xlarge | r5.4xlarge | r5.8xlarge | r5.large | r5.metal | r5.xlarge | r5a.12xlarge | r5a.16xlarge | r5a.24xlarge | r5a.2xlarge | r5a.4xlarge | r5a.8xlarge | r5a.large | r5a.xlarge | r5ad.12xlarge | r5ad.16xlarge | r5ad.24xlarge | r5ad.2xlarge | r5ad.4xlarge | r5ad.8xlarge | r5ad.large | r5ad.xlarge | r5b.12xlarge | r5b.16xlarge | r5b.24xlarge | r5b.2xlarge | r5b.4xlarge | r5b.8xlarge | r5b.large | r5b.metal | r5b.xlarge | r5d.12xlarge | r5d.16xlarge | r5d.24xlarge | r5d.2xlarge | r5d.4xlarge | r5d.8xlarge | r5d.large | r5d.metal | r5d.xlarge | r5dn.12xlarge | r5dn.16xlarge | r5dn.24xlarge | r5dn.2xlarge | r5dn.4xlarge | r5dn.8xlarge | r5dn.large | r5dn.xlarge | r5n.12xlarge | r5n.16xlarge | r5n.24xlarge | r5n.2xlarge | r5n.4xlarge | r5n.8xlarge | r5n.large | r5n.xlarge | r6g.12xlarge | r6g.16xlarge | r6g.2xlarge | r6g.4xlarge | r6g.8xlarge | r6g.large | r6g.medium | r6g.metal | r6g.xlarge | r6gd.12xlarge | r6gd.16xlarge | r6gd.2xlarge | r6gd.4xlarge | r6gd.8xlarge | r6gd.large | r6gd.medium | r6gd.metal | r6gd.xlarge | t1.micro | t2.2xlarge | t2.large | t2.medium | t2.micro | t2.nano | t2.small | t2.xlarge | t3.2xlarge | t3.large | t3.medium | t3.micro | t3.nano | t3.small | t3.xlarge | t3a.2xlarge | t3a.large | t3a.medium | t3a.micro | t3a.nano | t3a.small | t3a.xlarge | t4g.2xlarge | t4g.large | t4g.medium | t4g.micro | t4g.nano | t4g.small | t4g.xlarge | u-12tb1.metal | u-18tb1.metal | u-24tb1.metal | u-6tb1.metal | u-9tb1.metal | x1.16xlarge | x1.32xlarge | x1e.16xlarge | x1e.2xlarge | x1e.32xlarge | x1e.4xlarge | x1e.8xlarge | x1e.xlarge | z1d.12xlarge | z1d.2xlarge | z1d.3xlarge | z1d.6xlarge | z1d.large | z1d.metal | z1d.xlarge",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.instancetype",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.maxprice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.maxprice",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.placement": {
        "Required": "No",
        "Type": "Placement",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.placement",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.priority": {
        "Required": "No",
        "SampleValue": "TODO-Priority",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.priority",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.subnetid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.subnetid",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.weightedcapacity": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.weightedcapacity",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.launchtemplateid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.launchtemplateid",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.launchtemplatename": {
        "Maximum": "128",
        "Minimum": "3",
        "Pattern": "[a-zA-Z0-9\\(\\)\\.\\-/_]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.launchtemplatename",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.version",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.ondemandoptionsrequest.allocationstrategy": {
        "Allowed values": "lowest-price | prioritized",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.ondemandoptionsrequest.allocationstrategy",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.ondemandoptionsrequest.capacityreservationoptions": {
        "Required": "No",
        "Type": "CapacityReservationOptionsRequest",
        "UniqueKey": "ec2.ec2fleet.ondemandoptionsrequest.capacityreservationoptions",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.ondemandoptionsrequest.maxtotalprice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.ondemandoptionsrequest.maxtotalprice",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.ondemandoptionsrequest.mintargetcapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.ec2fleet.ondemandoptionsrequest.mintargetcapacity",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.ondemandoptionsrequest.singleavailabilityzone": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.ec2fleet.ondemandoptionsrequest.singleavailabilityzone",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.ondemandoptionsrequest.singleinstancetype": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.ec2fleet.ondemandoptionsrequest.singleinstancetype",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.placement.affinity": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.placement.affinity",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.placement.availabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.placement.availabilityzone",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.placement.groupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.placement.groupname",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.placement.hostid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.placement.hostid",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.placement.hostresourcegrouparn": {
        "Required": "No",
        "SampleValue": "TODO-HostResourceGroupArn",
        "UniqueKey": "ec2.ec2fleet.placement.hostresourcegrouparn",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.placement.partitionnumber": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.ec2fleet.placement.partitionnumber",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.placement.spreaddomain": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.placement.spreaddomain",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.placement.tenancy": {
        "Allowed values": "dedicated | default | host",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.placement.tenancy",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.spotoptionsrequest.allocationstrategy": {
        "Allowed Values": "lowestPrice` \\| `diversified` \\| `capacityOptimized",
        "AllowedValues": [
            "lowestPrice` \\| `diversified` \\| `capacityOptimized"
        ],
        "Pattern": "^[lowestPrice` \\| `diversified` \\| `capacityOptimized]",
        "Required": "No",
        "SampleValue": "lowestPrice` \\| `diversified` \\| `capacityOptimized",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.spotoptionsrequest.allocationstrategy",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.spotoptionsrequest.instanceinterruptionbehavior": {
        "Allowed values": "hibernate | stop | terminate",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.spotoptionsrequest.instanceinterruptionbehavior",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.spotoptionsrequest.instancepoolstousecount": {
        "Required": "No",
        "SampleValue": "TODO-InstancePoolsToUseCount",
        "UniqueKey": "ec2.ec2fleet.spotoptionsrequest.instancepoolstousecount",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.spotoptionsrequest.maxtotalprice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.spotoptionsrequest.maxtotalprice",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.spotoptionsrequest.mintargetcapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.ec2fleet.spotoptionsrequest.mintargetcapacity",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.spotoptionsrequest.singleavailabilityzone": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.ec2fleet.spotoptionsrequest.singleavailabilityzone",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.spotoptionsrequest.singleinstancetype": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.ec2fleet.spotoptionsrequest.singleinstancetype",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.tagrequest.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.ec2fleet.tagrequest.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.tagrequest.key",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.tagrequest.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.tagrequest.value",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.tagspecification.resourcetype": {
        "Allowed values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | egress-only-internet-gateway | elastic-gpu | elastic-ip | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | internet-gateway | key-pair | launch-template | local-gateway-route-table-vpc-association | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-flow-log | vpc-peering-connection | vpn-connection | vpn-gateway",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.tagspecification.resourcetype",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.tagspecification.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.ec2fleet.tagspecification.tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.targetcapacityspecificationrequest.defaulttargetcapacitytype": {
        "Allowed values": "on-demand | spot",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.targetcapacityspecificationrequest.defaulttargetcapacitytype",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.targetcapacityspecificationrequest.ondemandtargetcapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.ec2fleet.targetcapacityspecificationrequest.ondemandtargetcapacity",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.targetcapacityspecificationrequest.spottargetcapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.ec2fleet.targetcapacityspecificationrequest.spottargetcapacity",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.targetcapacityspecificationrequest.totaltargetcapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ec2.ec2fleet.targetcapacityspecificationrequest.totaltargetcapacity",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.association.allocationid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.eip.association.allocationid",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.association.eip": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.eip.association.eip",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.association.instanceid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.eip.association.instanceid",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.association.networkinterfaceid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.eip.association.networkinterfaceid",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.association.privateipaddress": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.eip.association.privateipaddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.domain": {
        "Allowed values": "standard | vpc",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.eip.domain",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.instanceid": {
        "Required": "No",
        "SampleValue": "TODO-InstanceId",
        "UniqueKey": "ec2.eip.instanceid",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.publicipv4pool": {
        "Required": "No",
        "SampleValue": "TODO-PublicIpv4Pool",
        "UniqueKey": "ec2.eip.publicipv4pool",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.tags": {
        "Required": "No",
        "SampleValue": "TODO-Tags",
        "UniqueKey": "ec2.eip.tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.accessloggingpolicy": {
        "Required": "No",
        "Type": "AccessLoggingPolicy",
        "UniqueKey": "ec2.elb.accessloggingpolicy",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.accessloggingpolicy.emitinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.elb.accessloggingpolicy.emitinterval",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.accessloggingpolicy.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.elb.accessloggingpolicy.enabled",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.accessloggingpolicy.s3bucketname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.accessloggingpolicy.s3bucketname",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.accessloggingpolicy.s3bucketprefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.accessloggingpolicy.s3bucketprefix",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.appcookiestickinesspolicy": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "ec2.elb.appcookiestickinesspolicy",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.appcookiestickinesspolicy.cookiename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.appcookiestickinesspolicy.cookiename",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.appcookiestickinesspolicy.policyname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.appcookiestickinesspolicy.policyname",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.availabilityzones": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.availabilityzones",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.connectiondrainingpolicy": {
        "Required": "No",
        "SampleValue": "TODO-ConnectionDrainingPolicy",
        "UniqueKey": "ec2.elb.connectiondrainingpolicy",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.connectiondrainingpolicy.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.elb.connectiondrainingpolicy.enabled",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.connectiondrainingpolicy.timeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.elb.connectiondrainingpolicy.timeout",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.connectionsettings": {
        "Required": "No",
        "SampleValue": "TODO-ConnectionSettings",
        "UniqueKey": "ec2.elb.connectionsettings",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.connectionsettings.idletimeout": {
        "Maximum": "3600",
        "Minimum": "1",
        "Pattern": "^[1,3600]}$",
        "Required": "Yes",
        "SampleValue": "1...3600",
        "Type": "Integer",
        "UniqueKey": "ec2.elb.connectionsettings.idletimeout",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.crosszone": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ec2.elb.crosszone",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.health.check.healthythreshold": {
        "Maximum": "10",
        "Minimum": "2",
        "Pattern": "^.{2,10}$",
        "Required": "Yes",
        "SampleValue": "TODO-ec2.elb.health.check.HealthyThreshold",
        "Type": "String",
        "UniqueKey": "ec2.elb.health.check.healthythreshold",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.health.check.interval": {
        "Maximum": "300",
        "Minimum": "5",
        "Pattern": "^.{5,300}$",
        "Required": "Yes",
        "SampleValue": "TODO-ec2.elb.health.check.Interval",
        "Type": "String",
        "UniqueKey": "ec2.elb.health.check.interval",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.health.check.target": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.health.check.target",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.health.check.timeout": {
        "Maximum": "60",
        "Minimum": "2",
        "Pattern": "^.{2,60}$",
        "Required": "Yes",
        "SampleValue": "TODO-ec2.elb.health.check.Timeout",
        "Type": "String",
        "UniqueKey": "ec2.elb.health.check.timeout",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.health.check.unhealthythreshold": {
        "Maximum": "10",
        "Minimum": "2",
        "Pattern": "^.{2,10}$",
        "Required": "Yes",
        "SampleValue": "TODO-ec2.elb.health.check.UnhealthyThreshold",
        "Type": "String",
        "UniqueKey": "ec2.elb.health.check.unhealthythreshold",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.healthcheck": {
        "Required": "No",
        "Type": "HealthCheck",
        "UniqueKey": "ec2.elb.healthcheck",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.instances": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.instances",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.lbcookiestickinesspolicy": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "ec2.elb.lbcookiestickinesspolicy",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.lbcookiestickinesspolicy.cookieexpirationperiod": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.lbcookiestickinesspolicy.cookieexpirationperiod",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.lbcookiestickinesspolicy.policyname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.lbcookiestickinesspolicy.policyname",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.listener.instanceport": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^.{1,65535}$",
        "Required": "Yes",
        "SampleValue": "TODO-ec2.elb.listener.InstancePort",
        "Type": "String",
        "UniqueKey": "ec2.elb.listener.instanceport",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.listener.instanceprotocol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.listener.instanceprotocol",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.listener.loadbalancerport": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.listener.loadbalancerport",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.listener.policynames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.listener.policynames",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.listener.protocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.listener.protocol",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.listener.sslcertificateid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.listener.sslcertificateid",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.listeners": {
        "Required": "Yes",
        "Type": "List",
        "UniqueKey": "ec2.elb.listeners",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.loadbalancername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.loadbalancername",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.policies": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "ec2.elb.policies",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.policy.attributes": {
        "Required": "Yes",
        "Type": "List of Json",
        "UniqueKey": "ec2.elb.policy.attributes",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.policy.instanceports": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.policy.instanceports",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.policy.loadbalancerports": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.policy.loadbalancerports",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.policy.policyname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.policy.policyname",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.policy.policytype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.policy.policytype",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.scheme": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.scheme",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.securitygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.securitygroups",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.subnets": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.subnets",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.elb.tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.additionalinfo": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.additionalinfo",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.affinity": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.affinity",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.availabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.availabilityzone",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.blockdevicemappings": {
        "Required": "No",
        "Type": "List of [BlockDeviceMapping",
        "UniqueKey": "ec2.instance.blockdevicemappings",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.cpuoptions": {
        "Required": "No",
        "Type": "CpuOptions",
        "UniqueKey": "ec2.instance.cpuoptions",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.cpuoptions.corecount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.instance.cpuoptions.corecount",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.cpuoptions.threadspercore": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.instance.cpuoptions.threadspercore",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.creditspecification": {
        "Required": "No",
        "SampleValue": "TODO-CreditSpecification",
        "UniqueKey": "ec2.instance.creditspecification",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.creditspecification.cpucredits": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.creditspecification.cpucredits",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.disableapitermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.instance.disableapitermination",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.ebsoptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.instance.ebsoptimized",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.elasticgpuspecification.type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "ec2.instance.elasticgpuspecification.type",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.elasticgpuspecifications": {
        "Required": "No",
        "SampleValue": "TODO-ElasticGpuSpecifications",
        "UniqueKey": "ec2.instance.elasticgpuspecifications",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.elasticinferenceaccelerator.count": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.instance.elasticinferenceaccelerator.count",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.elasticinferenceaccelerator.type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.instance.elasticinferenceaccelerator.type",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.elasticinferenceaccelerators": {
        "Required": "No",
        "Type": "List of [ElasticInferenceAccelerator",
        "UniqueKey": "ec2.instance.elasticinferenceaccelerators",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.enclaveoptions": {
        "Required": "No",
        "Type": "EnclaveOptions",
        "UniqueKey": "ec2.instance.enclaveoptions",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.enclaveoptions.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.instance.enclaveoptions.enabled",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.hibernationoptions": {
        "Required": "No",
        "SampleValue": "TODO-HibernationOptions",
        "UniqueKey": "ec2.instance.hibernationoptions",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.hibernationoptions.configured": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.instance.hibernationoptions.configured",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.hostid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.hostid",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.hostresourcegrouparn": {
        "Required": "No",
        "SampleValue": "TODO-HostResourceGroupArn",
        "UniqueKey": "ec2.instance.hostresourcegrouparn",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.iaminstanceprofile": {
        "Required": "No",
        "SampleValue": "TODO-IamInstanceProfile",
        "UniqueKey": "ec2.instance.iaminstanceprofile",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.imageid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.instance.imageid",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.instanceinitiatedshutdownbehavior": {
        "Allowed values": "stop | terminate",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.instanceinitiatedshutdownbehavior",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.instanceipv6address.ipv6address": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.instance.instanceipv6address.ipv6address",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.instancetype": {
        "Required": "No",
        "SampleValue": "TODO-InstanceType",
        "UniqueKey": "ec2.instance.instancetype",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.ipv6addresscount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.instance.ipv6addresscount",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.ipv6addresses": {
        "Required": "No",
        "Type": "List of [InstanceIpv6Address",
        "UniqueKey": "ec2.instance.ipv6addresses",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.kernelid": {
        "Required": "No",
        "SampleValue": "TODO-KernelId",
        "UniqueKey": "ec2.instance.kernelid",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.keyname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.keyname",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.launchtemplate": {
        "Required": "No",
        "Type": "LaunchTemplateSpecification",
        "UniqueKey": "ec2.instance.launchtemplate",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.launchtemplatespecification.launchtemplateid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.instance.launchtemplatespecification.launchtemplateid",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.launchtemplatespecification.launchtemplatename": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.instance.launchtemplatespecification.launchtemplatename",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.launchtemplatespecification.version": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.instance.launchtemplatespecification.version",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.licensespecification.licenseconfigurationarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.instance.licensespecification.licenseconfigurationarn",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.licensespecifications": {
        "Required": "No",
        "Type": "List of [LicenseSpecification",
        "UniqueKey": "ec2.instance.licensespecifications",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.monitoring": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.instance.monitoring",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.networkinterfaces": {
        "Required": "No",
        "Type": "List of [NetworkInterface",
        "UniqueKey": "ec2.instance.networkinterfaces",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.placementgroupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.placementgroupname",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.privateipaddress": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.privateipaddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.ramdiskid": {
        "Required": "No",
        "SampleValue": "TODO-RamdiskId",
        "UniqueKey": "ec2.instance.ramdiskid",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.securitygroupids": {
        "Required": "Conditional",
        "Type": "List of String",
        "UniqueKey": "ec2.instance.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.securitygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.instance.securitygroups",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.sourcedestcheck": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ec2.instance.sourcedestcheck",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.ssmassociations": {
        "Required": "No",
        "SampleValue": "TODO-SsmAssociations",
        "UniqueKey": "ec2.instance.ssmassociations",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.ssmassociations.associationparameters": {
        "Required": "No",
        "Type": "List of [AssociationParameter",
        "UniqueKey": "ec2.instance.ssmassociations.associationparameters",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.ssmassociations.associationparameters.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.instance.ssmassociations.associationparameters.key",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.ssmassociations.associationparameters.value": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "ec2.instance.ssmassociations.associationparameters.value",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.ssmassociations.documentname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.instance.ssmassociations.documentname",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.subnetid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.subnetid",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.instance.tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.tenancy": {
        "Allowed values": "dedicated | default | host",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.tenancy",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.userdata": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.userdata",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.volumes": {
        "Required": "No",
        "Type": "List of [Volume",
        "UniqueKey": "ec2.instance.volumes",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.devicename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.devicename",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs": {
        "Required": "No",
        "Type": "Ebs",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.deleteontermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.deleteontermination",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.encrypted",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.iops": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.iops",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.kmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.snapshotid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.snapshotid",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.throughput": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.throughput",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.volumesize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.volumesize",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.volumetype": {
        "Required": "No",
        "SampleValue": "TODO-VolumeType",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.volumetype",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.nodevice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.nodevice",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.blockdevicemapping.virtualname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.virtualname",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.capacityreservationtarget.capacityreservationid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.capacityreservationtarget.capacityreservationid",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.capacityreservationtarget.capacityreservationresourcegrouparn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.capacityreservationtarget.capacityreservationresourcegrouparn",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.elasticgpuspecification.type": {
        "Required": "No",
        "SampleValue": "TODO-Type",
        "UniqueKey": "ec2.launchtemplate.elasticgpuspecification.type",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.ipv6add.ipv6address": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.ipv6add.ipv6address",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.blockdevicemappings": {
        "Required": "No",
        "Type": "List of [BlockDeviceMapping",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.blockdevicemappings",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification": {
        "Required": "No",
        "Type": "CapacityReservationSpecification",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification.capacityreservationpreference": {
        "Allowed values": "none | open",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification.capacityreservationpreference",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification.capacityreservationtarget": {
        "Required": "No",
        "Type": "CapacityReservationTarget",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification.capacityreservationtarget",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.cpuoptions": {
        "Required": "No",
        "SampleValue": "TODO-CpuOptions",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.cpuoptions",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.cpuoptions.corecount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.cpuoptions.corecount",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.cpuoptions.threadspercore": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.cpuoptions.threadspercore",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.creditspecification": {
        "Required": "No",
        "Type": "CreditSpecification",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.creditspecification",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.creditspecification.cpucredits": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.creditspecification.cpucredits",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.disableapitermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.disableapitermination",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.ebsoptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.ebsoptimized",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.elasticgpuspecifications": {
        "Required": "No",
        "Type": "List of [ElasticGpuSpecification",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.elasticgpuspecifications",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.elasticinferenceaccelerators": {
        "Required": "No",
        "Type": "List of [LaunchTemplateElasticInferenceAccelerator",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.elasticinferenceaccelerators",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.enclaveoptions": {
        "Required": "No",
        "Type": "EnclaveOptions",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.enclaveoptions",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.enclaveoptions.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.enclaveoptions.enabled",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.hibernationoptions": {
        "Required": "No",
        "SampleValue": "TODO-HibernationOptions",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.hibernationoptions",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.hibernationoptions.configured": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.hibernationoptions.configured",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile": {
        "Required": "No",
        "Type": "IamInstanceProfile",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile.arn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile.arn",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile.name",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.imageid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.imageid",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.instanceinitiatedshutdownbehavior": {
        "Allowed values": "stop | terminate",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instanceinitiatedshutdownbehavior",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions": {
        "Required": "No",
        "Type": "InstanceMarketOptions",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.markettype": {
        "Allowed values": "spot",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.markettype",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions": {
        "Required": "No",
        "Type": "SpotOptions",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.blockdurationminutes": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.blockdurationminutes",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.instanceinterruptionbehavior": {
        "Allowed values": "hibernate | stop | terminate",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.instanceinterruptionbehavior",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.maxprice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.maxprice",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.spotinstancetype": {
        "Allowed values": "one-time | persistent",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.spotinstancetype",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.validuntil": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.validuntil",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.instancetype": {
        "Required": "No",
        "SampleValue": "TODO-InstanceType",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancetype",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.kernelid": {
        "Required": "No",
        "SampleValue": "TODO-KernelId",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.kernelid",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.keyname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.keyname",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.licensespecifications": {
        "Required": "No",
        "Type": "List of [LicenseSpecification",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.licensespecifications",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.metadataoptions": {
        "Required": "No",
        "SampleValue": "TODO-MetadataOptions",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.metadataoptions",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.metadataoptions.httpendpoint": {
        "Allowed values": "disabled | enabled",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.metadataoptions.httpendpoint",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.metadataoptions.httpputresponsehoplimit": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.metadataoptions.httpputresponsehoplimit",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.metadataoptions.httptokens": {
        "Allowed values": "optional | required",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.metadataoptions.httptokens",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.monitoring": {
        "Required": "No",
        "Type": "Monitoring",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.monitoring",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.monitoring.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.monitoring.enabled",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.networkinterfaces": {
        "Required": "No",
        "Type": "List of [NetworkInterface",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.networkinterfaces",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.placement": {
        "Required": "No",
        "Type": "Placement",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.affinity": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.affinity",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.availabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.availabilityzone",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.groupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.groupname",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.hostid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.hostid",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.hostresourcegrouparn": {
        "Required": "No",
        "SampleValue": "TODO-HostResourceGroupArn",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.hostresourcegrouparn",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.partitionnumber": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.partitionnumber",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.spreaddomain": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.spreaddomain",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.tenancy": {
        "Allowed values": "dedicated | default | host",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.tenancy",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.ramdiskid": {
        "Required": "No",
        "SampleValue": "TODO-RamDiskId",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.ramdiskid",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.securitygroupids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.securitygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.securitygroups",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.tagspecifications": {
        "Required": "No",
        "Type": "List of [TagSpecification",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.tagspecifications",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplatedata.userdata": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.userdata",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplateelasticinferenceaccelerator.count": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.launchtemplateelasticinferenceaccelerator.count",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.launchtemplateelasticinferenceaccelerator.type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplateelasticinferenceaccelerator.type",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.licensespecification.licenseconfigurationarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.licensespecification.licenseconfigurationarn",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.associatecarrieripaddress": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ec2.launchtemplate.networkinterface.associatecarrieripaddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.associatepublicipaddress": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.networkinterface.associatepublicipaddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.deleteontermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.networkinterface.deleteontermination",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.networkinterface.description",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.deviceindex": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.networkinterface.deviceindex",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.groups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.launchtemplate.networkinterface.groups",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.interfacetype": {
        "Required": "No",
        "SampleValue": "TODO-InterfaceType",
        "UniqueKey": "ec2.launchtemplate.networkinterface.interfacetype",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.ipv6addresscount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.networkinterface.ipv6addresscount",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.ipv6addresses": {
        "Required": "No",
        "Type": "List of [Ipv6Add",
        "UniqueKey": "ec2.launchtemplate.networkinterface.ipv6addresses",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.networkcardindex": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.networkinterface.networkcardindex",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.networkinterfaceid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.networkinterface.networkinterfaceid",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.privateipaddress": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.networkinterface.privateipaddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.privateipaddresses": {
        "Required": "No",
        "Type": "List of [PrivateIpAdd",
        "UniqueKey": "ec2.launchtemplate.networkinterface.privateipaddresses",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.secondaryprivateipaddresscount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.networkinterface.secondaryprivateipaddresscount",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.networkinterface.subnetid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.networkinterface.subnetid",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.privateipadd.primary": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.privateipadd.primary",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.privateipadd.privateipaddress": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.privateipadd.privateipaddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.tagspecification.resourcetype": {
        "Allowed values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | egress-only-internet-gateway | elastic-gpu | elastic-ip | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | internet-gateway | key-pair | launch-template | local-gateway-route-table-vpc-association | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-flow-log | vpc-peering-connection | vpn-connection | vpn-gateway",
        "Conditional": "Required if tags are set\\.",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.tagspecification.resourcetype",
        "UpdateRequires": "Replacement"
    },
    "ec2.launchtemplate.tagspecification.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.launchtemplate.tagspecification.tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.localgatewayroutetablevpcassociation.tags.tags": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "ec2.localgatewayroutetablevpcassociation.tags.tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.mount.point.device": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.mount.point.device",
        "UpdateRequires": "Replacement"
    },
    "ec2.mount.point.volumeid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.mount.point.volumeid",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.associatepublicipaddress": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.network.iface.embedded.associatepublicipaddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.deleteontermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.network.iface.embedded.deleteontermination",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.network.iface.embedded.description",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.deviceindex": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.network.iface.embedded.deviceindex",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.groupset": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.network.iface.embedded.groupset",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.ipv6addresscount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.network.iface.embedded.ipv6addresscount",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.ipv6addresses": {
        "Required": "No",
        "Type": "List of [InstanceIpv6Address",
        "UniqueKey": "ec2.network.iface.embedded.ipv6addresses",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.networkinterfaceid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.network.iface.embedded.networkinterfaceid",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.privateipaddress": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.network.iface.embedded.privateipaddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.privateipaddresses": {
        "Required": "No",
        "Type": "List of [PrivateIpAddressSpecification",
        "UniqueKey": "ec2.network.iface.embedded.privateipaddresses",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.secondaryprivateipaddresscount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.network.iface.embedded.secondaryprivateipaddresscount",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.iface.embedded.subnetid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.network.iface.embedded.subnetid",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.interface.privateipspec.1.primary": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.network.interface.privateipspec.1.primary",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.interface.privateipspec.1.privateipaddress": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.network.interface.privateipspec.1.privateipaddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.interface.privateipspec.primary": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.network.interface.privateipspec.primary",
        "UpdateRequires": "Replacement"
    },
    "ec2.network.interface.privateipspec.privateipaddress": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.network.interface.privateipspec.privateipaddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkaclentry.icmp.code": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.networkaclentry.icmp.code",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkaclentry.icmp.type": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.networkaclentry.icmp.type",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkaclentry.portrange.from": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.networkaclentry.portrange.from",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkaclentry.portrange.to": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.networkaclentry.portrange.to",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.alternatepathhint.componentarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.alternatepathhint.componentarn",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.alternatepathhint.componentid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.alternatepathhint.componentid",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisaclrule.cidr": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisaclrule.cidr",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisaclrule.egress": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisaclrule.egress",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisaclrule.portrange": {
        "Required": "No",
        "Type": "PortRange",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisaclrule.portrange",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisaclrule.protocol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisaclrule.protocol",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisaclrule.ruleaction": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisaclrule.ruleaction",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisaclrule.rulenumber": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisaclrule.rulenumber",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysiscomponent.arn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysiscomponent.arn",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysiscomponent.id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysiscomponent.id",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisloadbalancerlistener.instanceport": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "No",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisloadbalancerlistener.instanceport",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisloadbalancerlistener.loadbalancerport": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "No",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisloadbalancerlistener.loadbalancerport",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisloadbalancertarget.address": {
        "Maximum": "15",
        "Minimum": "0",
        "Pattern": "^([0-9]{1,3}.){3}[0-9]{1,3}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisloadbalancertarget.address",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisloadbalancertarget.availabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisloadbalancertarget.availabilityzone",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisloadbalancertarget.instance": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisloadbalancertarget.instance",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisloadbalancertarget.port": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "No",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisloadbalancertarget.port",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysispacketheader.destinationaddresses": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysispacketheader.destinationaddresses",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysispacketheader.destinationportranges": {
        "Required": "No",
        "Type": "List of [PortRange",
        "UniqueKey": "ec2.networkinsightsanalysis.analysispacketheader.destinationportranges",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysispacketheader.protocol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysispacketheader.protocol",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysispacketheader.sourceaddresses": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysispacketheader.sourceaddresses",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysispacketheader.sourceportranges": {
        "Required": "No",
        "Type": "List of [PortRange",
        "UniqueKey": "ec2.networkinsightsanalysis.analysispacketheader.sourceportranges",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisroutetableroute.destinationcidr": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisroutetableroute.destinationcidr",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisroutetableroute.destinationprefixlistid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisroutetableroute.destinationprefixlistid",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisroutetableroute.egressonlyinternetgatewayid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisroutetableroute.egressonlyinternetgatewayid",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisroutetableroute.gatewayid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisroutetableroute.gatewayid",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisroutetableroute.instanceid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisroutetableroute.instanceid",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisroutetableroute.natgatewayid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisroutetableroute.natgatewayid",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisroutetableroute.networkinterfaceid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisroutetableroute.networkinterfaceid",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisroutetableroute.origin": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisroutetableroute.origin",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisroutetableroute.transitgatewayid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisroutetableroute.transitgatewayid",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysisroutetableroute.vpcpeeringconnectionid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysisroutetableroute.vpcpeeringconnectionid",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysissecuritygrouprule.cidr": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysissecuritygrouprule.cidr",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysissecuritygrouprule.direction": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysissecuritygrouprule.direction",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysissecuritygrouprule.portrange": {
        "Required": "No",
        "Type": "PortRange",
        "UniqueKey": "ec2.networkinsightsanalysis.analysissecuritygrouprule.portrange",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysissecuritygrouprule.prefixlistid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysissecuritygrouprule.prefixlistid",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysissecuritygrouprule.protocol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysissecuritygrouprule.protocol",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.analysissecuritygrouprule.securitygroupid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.analysissecuritygrouprule.securitygroupid",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.acl": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.acl",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.aclrule": {
        "Required": "No",
        "Type": "AnalysisAclRule",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.aclrule",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.address": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.address",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.addresses": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.addresses",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.attachedto": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.attachedto",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.availabilityzones": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.availabilityzones",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.cidrs": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.cidrs",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.classicloadbalancerlistener": {
        "Required": "No",
        "Type": "AnalysisLoadBalancerListener",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.classicloadbalancerlistener",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.component": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.component",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.customergateway": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.customergateway",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.destination": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.destination",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.destinationvpc": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.destinationvpc",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.direction": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.direction",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.elasticloadbalancerlistener": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.elasticloadbalancerlistener",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.explanationcode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.explanationcode",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.ingressroutetable": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.ingressroutetable",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.internetgateway": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.internetgateway",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.loadbalancerarn": {
        "Maximum": "1283",
        "Minimum": "1",
        "Pattern": "^.{1,1283}$",
        "Required": "No",
        "SampleValue": "TODO-ec2.networkinsightsanalysis.explanation.LoadBalancerArn",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.loadbalancerarn",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.loadbalancerlistenerport": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "No",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.loadbalancerlistenerport",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.loadbalancertarget": {
        "Required": "No",
        "Type": "AnalysisLoadBalancerTarget",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.loadbalancertarget",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.loadbalancertargetgroup": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.loadbalancertargetgroup",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.loadbalancertargetgroups": {
        "Required": "No",
        "Type": "List of [AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.loadbalancertargetgroups",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.loadbalancertargetport": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "No",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.loadbalancertargetport",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.missingcomponent": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.missingcomponent",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.natgateway": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.natgateway",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.networkinterface": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.networkinterface",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.packetfield": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.packetfield",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.port": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "No",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.port",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.portranges": {
        "Required": "No",
        "Type": "List of [PortRange",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.portranges",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.prefixlist": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.prefixlist",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.protocols": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.protocols",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.routetable": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.routetable",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.routetableroute": {
        "Required": "No",
        "Type": "AnalysisRouteTableRoute",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.routetableroute",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.securitygroup": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.securitygroup",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.securitygrouprule": {
        "Required": "No",
        "Type": "AnalysisSecurityGroupRule",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.securitygrouprule",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.securitygroups": {
        "Required": "No",
        "Type": "List of [AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.securitygroups",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.sourcevpc": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.sourcevpc",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.state": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.state",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.subnet": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.subnet",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.subnetroutetable": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.subnetroutetable",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.vpc": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.vpc",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.vpcendpoint": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.vpcendpoint",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.vpcpeeringconnection": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.vpcpeeringconnection",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.vpnconnection": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.vpnconnection",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.explanation.vpngateway": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.explanation.vpngateway",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.pathcomponent.aclrule": {
        "Required": "No",
        "Type": "AnalysisAclRule",
        "UniqueKey": "ec2.networkinsightsanalysis.pathcomponent.aclrule",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.pathcomponent.component": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.pathcomponent.component",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.pathcomponent.destinationvpc": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.pathcomponent.destinationvpc",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.pathcomponent.inboundheader": {
        "Required": "No",
        "Type": "AnalysisPacketHeader",
        "UniqueKey": "ec2.networkinsightsanalysis.pathcomponent.inboundheader",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.pathcomponent.outboundheader": {
        "Required": "No",
        "Type": "AnalysisPacketHeader",
        "UniqueKey": "ec2.networkinsightsanalysis.pathcomponent.outboundheader",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.pathcomponent.routetableroute": {
        "Required": "No",
        "Type": "AnalysisRouteTableRoute",
        "UniqueKey": "ec2.networkinsightsanalysis.pathcomponent.routetableroute",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.pathcomponent.securitygrouprule": {
        "Required": "No",
        "Type": "AnalysisSecurityGroupRule",
        "UniqueKey": "ec2.networkinsightsanalysis.pathcomponent.securitygrouprule",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.pathcomponent.sequencenumber": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.networkinsightsanalysis.pathcomponent.sequencenumber",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.pathcomponent.sourcevpc": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.pathcomponent.sourcevpc",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.pathcomponent.subnet": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.pathcomponent.subnet",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.pathcomponent.vpc": {
        "Required": "No",
        "Type": "AnalysisComponent",
        "UniqueKey": "ec2.networkinsightsanalysis.pathcomponent.vpc",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.portrange.from": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.networkinsightsanalysis.portrange.from",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinsightsanalysis.portrange.to": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.networkinsightsanalysis.portrange.to",
        "UpdateRequires": "Replacement"
    },
    "ec2.networkinterface.instanceipv6address.ipv6address": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.networkinterface.instanceipv6address.ipv6address",
        "UpdateRequires": "Replacement"
    },
    "ec2.prefixlist.entry.cidr": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.prefixlist.entry.cidr",
        "UpdateRequires": "Replacement"
    },
    "ec2.prefixlist.entry.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.prefixlist.entry.description",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.groupdescription": {
        "Required": "Yes",
        "SampleValue": "TODO-GroupDescription",
        "UniqueKey": "ec2.security.group.groupdescription",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.groupname": {
        "Required": "No",
        "SampleValue": "TODO-GroupName",
        "UniqueKey": "ec2.security.group.groupname",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.cidrip": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.cidrip",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.cidripv6": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.cidripv6",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.description",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.fromport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.security.group.ingress.fromport",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.groupid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.groupid",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.groupname": {
        "Required": "No",
        "SampleValue": "TODO-GroupName",
        "UniqueKey": "ec2.security.group.ingress.groupname",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.ipprotocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.ipprotocol",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.sourceprefixlistid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.sourceprefixlistid",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.sourcesecuritygroupid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.sourcesecuritygroupid",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.sourcesecuritygroupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.sourcesecuritygroupname",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.sourcesecuritygroupownerid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.sourcesecuritygroupownerid",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.toport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.security.group.ingress.toport",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.cidrip": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.cidrip",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.cidripv6": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.cidripv6",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.description": {
        "Required": "No",
        "SampleValue": "TODO-Description",
        "UniqueKey": "ec2.security.group.rule.1.description",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.fromport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.security.group.rule.1.fromport",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.ipprotocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.ipprotocol",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.sourceprefixlistid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.sourceprefixlistid",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.sourcesecuritygroupid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.sourcesecuritygroupid",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.sourcesecuritygroupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.sourcesecuritygroupname",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.sourcesecuritygroupownerid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.sourcesecuritygroupownerid",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.toport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.security.group.rule.1.toport",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.cidrip": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.cidrip",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.cidripv6": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.cidripv6",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.description": {
        "Required": "No",
        "SampleValue": "TODO-Description",
        "UniqueKey": "ec2.security.group.rule.description",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.destinationprefixlistid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.destinationprefixlistid",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.destinationsecuritygroupid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.destinationsecuritygroupid",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.fromport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.security.group.rule.fromport",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.ipprotocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.ipprotocol",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.toport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.security.group.rule.toport",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.securitygroupegress": {
        "Required": "No",
        "Type": "List of [Egress",
        "UniqueKey": "ec2.security.group.securitygroupegress",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.securitygroupingress": {
        "Required": "No",
        "Type": "List of [Ingress",
        "UniqueKey": "ec2.security.group.securitygroupingress",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.security.group.tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.vpcid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.vpcid",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.classicloadbalancer.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.classicloadbalancer.name",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.classicloadbalancersconfig.classicloadbalancers": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of [ClassicLoadBalancer",
        "UniqueKey": "ec2.spotfleet.classicloadbalancersconfig.classicloadbalancers",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.fleetlaunchtemplatespecification.launchtemplateid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.fleetlaunchtemplatespecification.launchtemplateid",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.fleetlaunchtemplatespecification.launchtemplatename": {
        "Maximum": "128",
        "Minimum": "3",
        "Pattern": "[a-zA-Z0-9\\(\\)\\.\\-/_]+",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.fleetlaunchtemplatespecification.launchtemplatename",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.fleetlaunchtemplatespecification.version": {
        "Required": "Yes",
        "SampleValue": "TODO-Version",
        "UniqueKey": "ec2.spotfleet.fleetlaunchtemplatespecification.version",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.instanceipv6address.ipv6address": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.instanceipv6address.ipv6address",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.launchtemplateconfig.launchtemplatespecification": {
        "Required": "No",
        "Type": "FleetLaunchTemplateSpecification",
        "UniqueKey": "ec2.spotfleet.launchtemplateconfig.launchtemplatespecification",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.launchtemplateconfig.overrides": {
        "Required": "No",
        "Type": "List of [LaunchTemplateOverrides",
        "UniqueKey": "ec2.spotfleet.launchtemplateconfig.overrides",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.launchtemplateoverrides.availabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.launchtemplateoverrides.availabilityzone",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.launchtemplateoverrides.instancetype": {
        "Allowed values": "a1.2xlarge | a1.4xlarge | a1.large | a1.medium | a1.metal | a1.xlarge | c1.medium | c1.xlarge | c3.2xlarge | c3.4xlarge | c3.8xlarge | c3.large | c3.xlarge | c4.2xlarge | c4.4xlarge | c4.8xlarge | c4.large | c4.xlarge | c5.12xlarge | c5.18xlarge | c5.24xlarge | c5.2xlarge | c5.4xlarge | c5.9xlarge | c5.large | c5.metal | c5.xlarge | c5a.12xlarge | c5a.16xlarge | c5a.24xlarge | c5a.2xlarge | c5a.4xlarge | c5a.8xlarge | c5a.large | c5a.xlarge | c5ad.12xlarge | c5ad.16xlarge | c5ad.24xlarge | c5ad.2xlarge | c5ad.4xlarge | c5ad.8xlarge | c5ad.large | c5ad.xlarge | c5d.12xlarge | c5d.18xlarge | c5d.24xlarge | c5d.2xlarge | c5d.4xlarge | c5d.9xlarge | c5d.large | c5d.metal | c5d.xlarge | c5n.18xlarge | c5n.2xlarge | c5n.4xlarge | c5n.9xlarge | c5n.large | c5n.metal | c5n.xlarge | c6g.12xlarge | c6g.16xlarge | c6g.2xlarge | c6g.4xlarge | c6g.8xlarge | c6g.large | c6g.medium | c6g.metal | c6g.xlarge | c6gd.12xlarge | c6gd.16xlarge | c6gd.2xlarge | c6gd.4xlarge | c6gd.8xlarge | c6gd.large | c6gd.medium | c6gd.metal | c6gd.xlarge | c6gn.12xlarge | c6gn.16xlarge | c6gn.2xlarge | c6gn.4xlarge | c6gn.8xlarge | c6gn.large | c6gn.medium | c6gn.metal | c6gn.xlarge | cc1.4xlarge | cc2.8xlarge | cg1.4xlarge | cr1.8xlarge | d2.2xlarge | d2.4xlarge | d2.8xlarge | d2.xlarge | d3.2xlarge | d3.4xlarge | d3.8xlarge | d3.metal | d3.xlarge | d3en.12xlarge | d3en.2xlarge | d3en.4xlarge | d3en.6xlarge | d3en.8xlarge | d3en.large | d3en.metal | d3en.xlarge | f1.16xlarge | f1.2xlarge | f1.4xlarge | g2.2xlarge | g2.8xlarge | g3.16xlarge | g3.4xlarge | g3.8xlarge | g3s.xlarge | g4ad.16xlarge | g4ad.2xlarge | g4ad.4xlarge | g4ad.8xlarge | g4ad.xlarge | g4dn.12xlarge | g4dn.16xlarge | g4dn.2xlarge | g4dn.4xlarge | g4dn.8xlarge | g4dn.metal | g4dn.xlarge | h1.16xlarge | h1.2xlarge | h1.4xlarge | h1.8xlarge | hi1.4xlarge | hpc5a.48xlarge | hs1.8xlarge | i2.2xlarge | i2.4xlarge | i2.8xlarge | i2.xlarge | i3.16xlarge | i3.2xlarge | i3.4xlarge | i3.8xlarge | i3.large | i3.metal | i3.xlarge | i3en.12xlarge | i3en.24xlarge | i3en.2xlarge | i3en.3xlarge | i3en.6xlarge | i3en.large | i3en.metal | i3en.xlarge | inf1.24xlarge | inf1.2xlarge | inf1.6xlarge | inf1.xlarge | m1.large | m1.medium | m1.small | m1.xlarge | m2.2xlarge | m2.4xlarge | m2.xlarge | m3.2xlarge | m3.large | m3.medium | m3.xlarge | m4.10xlarge | m4.16xlarge | m4.2xlarge | m4.4xlarge | m4.large | m4.xlarge | m5.12xlarge | m5.16xlarge | m5.24xlarge | m5.2xlarge | m5.4xlarge | m5.8xlarge | m5.large | m5.metal | m5.xlarge | m5a.12xlarge | m5a.16xlarge | m5a.24xlarge | m5a.2xlarge | m5a.4xlarge | m5a.8xlarge | m5a.large | m5a.xlarge | m5ad.12xlarge | m5ad.16xlarge | m5ad.24xlarge | m5ad.2xlarge | m5ad.4xlarge | m5ad.8xlarge | m5ad.large | m5ad.xlarge | m5d.12xlarge | m5d.16xlarge | m5d.24xlarge | m5d.2xlarge | m5d.4xlarge | m5d.8xlarge | m5d.large | m5d.metal | m5d.xlarge | m5dn.12xlarge | m5dn.16xlarge | m5dn.24xlarge | m5dn.2xlarge | m5dn.4xlarge | m5dn.8xlarge | m5dn.large | m5dn.xlarge | m5n.12xlarge | m5n.16xlarge | m5n.24xlarge | m5n.2xlarge | m5n.4xlarge | m5n.8xlarge | m5n.large | m5n.xlarge | m5zn.12xlarge | m5zn.2xlarge | m5zn.3xlarge | m5zn.6xlarge | m5zn.large | m5zn.metal | m5zn.xlarge | m6g.12xlarge | m6g.16xlarge | m6g.2xlarge | m6g.4xlarge | m6g.8xlarge | m6g.large | m6g.medium | m6g.metal | m6g.xlarge | m6gd.12xlarge | m6gd.16xlarge | m6gd.2xlarge | m6gd.4xlarge | m6gd.8xlarge | m6gd.large | m6gd.medium | m6gd.metal | m6gd.xlarge | mac1.metal | p2.16xlarge | p2.8xlarge | p2.xlarge | p3.16xlarge | p3.2xlarge | p3.8xlarge | p3dn.24xlarge | p4d.24xlarge | r3.2xlarge | r3.4xlarge | r3.8xlarge | r3.large | r3.xlarge | r4.16xlarge | r4.2xlarge | r4.4xlarge | r4.8xlarge | r4.large | r4.xlarge | r5.12xlarge | r5.16xlarge | r5.24xlarge | r5.2xlarge | r5.4xlarge | r5.8xlarge | r5.large | r5.metal | r5.xlarge | r5a.12xlarge | r5a.16xlarge | r5a.24xlarge | r5a.2xlarge | r5a.4xlarge | r5a.8xlarge | r5a.large | r5a.xlarge | r5ad.12xlarge | r5ad.16xlarge | r5ad.24xlarge | r5ad.2xlarge | r5ad.4xlarge | r5ad.8xlarge | r5ad.large | r5ad.xlarge | r5b.12xlarge | r5b.16xlarge | r5b.24xlarge | r5b.2xlarge | r5b.4xlarge | r5b.8xlarge | r5b.large | r5b.metal | r5b.xlarge | r5d.12xlarge | r5d.16xlarge | r5d.24xlarge | r5d.2xlarge | r5d.4xlarge | r5d.8xlarge | r5d.large | r5d.metal | r5d.xlarge | r5dn.12xlarge | r5dn.16xlarge | r5dn.24xlarge | r5dn.2xlarge | r5dn.4xlarge | r5dn.8xlarge | r5dn.large | r5dn.xlarge | r5n.12xlarge | r5n.16xlarge | r5n.24xlarge | r5n.2xlarge | r5n.4xlarge | r5n.8xlarge | r5n.large | r5n.xlarge | r6g.12xlarge | r6g.16xlarge | r6g.2xlarge | r6g.4xlarge | r6g.8xlarge | r6g.large | r6g.medium | r6g.metal | r6g.xlarge | r6gd.12xlarge | r6gd.16xlarge | r6gd.2xlarge | r6gd.4xlarge | r6gd.8xlarge | r6gd.large | r6gd.medium | r6gd.metal | r6gd.xlarge | t1.micro | t2.2xlarge | t2.large | t2.medium | t2.micro | t2.nano | t2.small | t2.xlarge | t3.2xlarge | t3.large | t3.medium | t3.micro | t3.nano | t3.small | t3.xlarge | t3a.2xlarge | t3a.large | t3a.medium | t3a.micro | t3a.nano | t3a.small | t3a.xlarge | t4g.2xlarge | t4g.large | t4g.medium | t4g.micro | t4g.nano | t4g.small | t4g.xlarge | u-12tb1.metal | u-18tb1.metal | u-24tb1.metal | u-6tb1.metal | u-9tb1.metal | x1.16xlarge | x1.32xlarge | x1e.16xlarge | x1e.2xlarge | x1e.32xlarge | x1e.4xlarge | x1e.8xlarge | x1e.xlarge | z1d.12xlarge | z1d.2xlarge | z1d.3xlarge | z1d.6xlarge | z1d.large | z1d.metal | z1d.xlarge",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.launchtemplateoverrides.instancetype",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.launchtemplateoverrides.priority": {
        "Required": "No",
        "SampleValue": "TODO-Priority",
        "UniqueKey": "ec2.spotfleet.launchtemplateoverrides.priority",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.launchtemplateoverrides.spotprice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.launchtemplateoverrides.spotprice",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.launchtemplateoverrides.subnetid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.launchtemplateoverrides.subnetid",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.launchtemplateoverrides.weightedcapacity": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "ec2.spotfleet.launchtemplateoverrides.weightedcapacity",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.loadbalancersconfig.classicloadbalancersconfig": {
        "Required": "No",
        "Type": "ClassicLoadBalancersConfig",
        "UniqueKey": "ec2.spotfleet.loadbalancersconfig.classicloadbalancersconfig",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.loadbalancersconfig.targetgroupsconfig": {
        "Required": "No",
        "Type": "TargetGroupsConfig",
        "UniqueKey": "ec2.spotfleet.loadbalancersconfig.targetgroupsconfig",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotcapacityrebalance.replacementstrategy": {
        "Allowed values": "launch",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotcapacityrebalance.replacementstrategy",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.allocationstrategy": {
        "Allowed values": "capacityOptimized | diversified | lowestPrice",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.allocationstrategy",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.excesscapacityterminationpolicy": {
        "Allowed values": "default | noTermination",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.excesscapacityterminationpolicy",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.iamfleetrole": {
        "Required": "Yes",
        "SampleValue": "TODO-IamFleetRole",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.iamfleetrole",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.instanceinterruptionbehavior": {
        "Allowed values": "hibernate | stop | terminate",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.instanceinterruptionbehavior",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.instancepoolstousecount": {
        "Required": "No",
        "SampleValue": "TODO-InstancePoolsToUseCount",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.instancepoolstousecount",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications": {
        "Required": "Conditional",
        "Type": "List of [SpotFleetLaunchSpecification",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings": {
        "Required": "No",
        "Type": "List of [BlockDeviceMapping",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.devicename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.devicename",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs": {
        "Required": "Conditional",
        "Type": "EbsBlockDevice",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.deleteontermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.deleteontermination",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.encrypted",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.iops": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.iops",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.snapshotid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.snapshotid",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.volumesize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.volumesize",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.volumetype": {
        "Required": "No",
        "SampleValue": "TODO-VolumeType",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.volumetype",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.nodevice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.nodevice",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.virtualname": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.virtualname",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.ebsoptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.ebsoptimized",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.iaminstanceprofile": {
        "Required": "No",
        "Type": "IamInstanceProfileSpecification",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.iaminstanceprofile",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.iaminstanceprofile.arn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.iaminstanceprofile.arn",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.imageid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.imageid",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.instancetype": {
        "Allowed values": "a1.2xlarge | a1.4xlarge | a1.large | a1.medium | a1.metal | a1.xlarge | c1.medium | c1.xlarge | c3.2xlarge | c3.4xlarge | c3.8xlarge | c3.large | c3.xlarge | c4.2xlarge | c4.4xlarge | c4.8xlarge | c4.large | c4.xlarge | c5.12xlarge | c5.18xlarge | c5.24xlarge | c5.2xlarge | c5.4xlarge | c5.9xlarge | c5.large | c5.metal | c5.xlarge | c5a.12xlarge | c5a.16xlarge | c5a.24xlarge | c5a.2xlarge | c5a.4xlarge | c5a.8xlarge | c5a.large | c5a.xlarge | c5ad.12xlarge | c5ad.16xlarge | c5ad.24xlarge | c5ad.2xlarge | c5ad.4xlarge | c5ad.8xlarge | c5ad.large | c5ad.xlarge | c5d.12xlarge | c5d.18xlarge | c5d.24xlarge | c5d.2xlarge | c5d.4xlarge | c5d.9xlarge | c5d.large | c5d.metal | c5d.xlarge | c5n.18xlarge | c5n.2xlarge | c5n.4xlarge | c5n.9xlarge | c5n.large | c5n.metal | c5n.xlarge | c6g.12xlarge | c6g.16xlarge | c6g.2xlarge | c6g.4xlarge | c6g.8xlarge | c6g.large | c6g.medium | c6g.metal | c6g.xlarge | c6gd.12xlarge | c6gd.16xlarge | c6gd.2xlarge | c6gd.4xlarge | c6gd.8xlarge | c6gd.large | c6gd.medium | c6gd.metal | c6gd.xlarge | c6gn.12xlarge | c6gn.16xlarge | c6gn.2xlarge | c6gn.4xlarge | c6gn.8xlarge | c6gn.large | c6gn.medium | c6gn.metal | c6gn.xlarge | cc1.4xlarge | cc2.8xlarge | cg1.4xlarge | cr1.8xlarge | d2.2xlarge | d2.4xlarge | d2.8xlarge | d2.xlarge | d3.2xlarge | d3.4xlarge | d3.8xlarge | d3.metal | d3.xlarge | d3en.12xlarge | d3en.2xlarge | d3en.4xlarge | d3en.6xlarge | d3en.8xlarge | d3en.large | d3en.metal | d3en.xlarge | f1.16xlarge | f1.2xlarge | f1.4xlarge | g2.2xlarge | g2.8xlarge | g3.16xlarge | g3.4xlarge | g3.8xlarge | g3s.xlarge | g4ad.16xlarge | g4ad.2xlarge | g4ad.4xlarge | g4ad.8xlarge | g4ad.xlarge | g4dn.12xlarge | g4dn.16xlarge | g4dn.2xlarge | g4dn.4xlarge | g4dn.8xlarge | g4dn.metal | g4dn.xlarge | h1.16xlarge | h1.2xlarge | h1.4xlarge | h1.8xlarge | hi1.4xlarge | hpc5a.48xlarge | hs1.8xlarge | i2.2xlarge | i2.4xlarge | i2.8xlarge | i2.xlarge | i3.16xlarge | i3.2xlarge | i3.4xlarge | i3.8xlarge | i3.large | i3.metal | i3.xlarge | i3en.12xlarge | i3en.24xlarge | i3en.2xlarge | i3en.3xlarge | i3en.6xlarge | i3en.large | i3en.metal | i3en.xlarge | inf1.24xlarge | inf1.2xlarge | inf1.6xlarge | inf1.xlarge | m1.large | m1.medium | m1.small | m1.xlarge | m2.2xlarge | m2.4xlarge | m2.xlarge | m3.2xlarge | m3.large | m3.medium | m3.xlarge | m4.10xlarge | m4.16xlarge | m4.2xlarge | m4.4xlarge | m4.large | m4.xlarge | m5.12xlarge | m5.16xlarge | m5.24xlarge | m5.2xlarge | m5.4xlarge | m5.8xlarge | m5.large | m5.metal | m5.xlarge | m5a.12xlarge | m5a.16xlarge | m5a.24xlarge | m5a.2xlarge | m5a.4xlarge | m5a.8xlarge | m5a.large | m5a.xlarge | m5ad.12xlarge | m5ad.16xlarge | m5ad.24xlarge | m5ad.2xlarge | m5ad.4xlarge | m5ad.8xlarge | m5ad.large | m5ad.xlarge | m5d.12xlarge | m5d.16xlarge | m5d.24xlarge | m5d.2xlarge | m5d.4xlarge | m5d.8xlarge | m5d.large | m5d.metal | m5d.xlarge | m5dn.12xlarge | m5dn.16xlarge | m5dn.24xlarge | m5dn.2xlarge | m5dn.4xlarge | m5dn.8xlarge | m5dn.large | m5dn.xlarge | m5n.12xlarge | m5n.16xlarge | m5n.24xlarge | m5n.2xlarge | m5n.4xlarge | m5n.8xlarge | m5n.large | m5n.xlarge | m5zn.12xlarge | m5zn.2xlarge | m5zn.3xlarge | m5zn.6xlarge | m5zn.large | m5zn.metal | m5zn.xlarge | m6g.12xlarge | m6g.16xlarge | m6g.2xlarge | m6g.4xlarge | m6g.8xlarge | m6g.large | m6g.medium | m6g.metal | m6g.xlarge | m6gd.12xlarge | m6gd.16xlarge | m6gd.2xlarge | m6gd.4xlarge | m6gd.8xlarge | m6gd.large | m6gd.medium | m6gd.metal | m6gd.xlarge | mac1.metal | p2.16xlarge | p2.8xlarge | p2.xlarge | p3.16xlarge | p3.2xlarge | p3.8xlarge | p3dn.24xlarge | p4d.24xlarge | r3.2xlarge | r3.4xlarge | r3.8xlarge | r3.large | r3.xlarge | r4.16xlarge | r4.2xlarge | r4.4xlarge | r4.8xlarge | r4.large | r4.xlarge | r5.12xlarge | r5.16xlarge | r5.24xlarge | r5.2xlarge | r5.4xlarge | r5.8xlarge | r5.large | r5.metal | r5.xlarge | r5a.12xlarge | r5a.16xlarge | r5a.24xlarge | r5a.2xlarge | r5a.4xlarge | r5a.8xlarge | r5a.large | r5a.xlarge | r5ad.12xlarge | r5ad.16xlarge | r5ad.24xlarge | r5ad.2xlarge | r5ad.4xlarge | r5ad.8xlarge | r5ad.large | r5ad.xlarge | r5b.12xlarge | r5b.16xlarge | r5b.24xlarge | r5b.2xlarge | r5b.4xlarge | r5b.8xlarge | r5b.large | r5b.metal | r5b.xlarge | r5d.12xlarge | r5d.16xlarge | r5d.24xlarge | r5d.2xlarge | r5d.4xlarge | r5d.8xlarge | r5d.large | r5d.metal | r5d.xlarge | r5dn.12xlarge | r5dn.16xlarge | r5dn.24xlarge | r5dn.2xlarge | r5dn.4xlarge | r5dn.8xlarge | r5dn.large | r5dn.xlarge | r5n.12xlarge | r5n.16xlarge | r5n.24xlarge | r5n.2xlarge | r5n.4xlarge | r5n.8xlarge | r5n.large | r5n.xlarge | r6g.12xlarge | r6g.16xlarge | r6g.2xlarge | r6g.4xlarge | r6g.8xlarge | r6g.large | r6g.medium | r6g.metal | r6g.xlarge | r6gd.12xlarge | r6gd.16xlarge | r6gd.2xlarge | r6gd.4xlarge | r6gd.8xlarge | r6gd.large | r6gd.medium | r6gd.metal | r6gd.xlarge | t1.micro | t2.2xlarge | t2.large | t2.medium | t2.micro | t2.nano | t2.small | t2.xlarge | t3.2xlarge | t3.large | t3.medium | t3.micro | t3.nano | t3.small | t3.xlarge | t3a.2xlarge | t3a.large | t3a.medium | t3a.micro | t3a.nano | t3a.small | t3a.xlarge | t4g.2xlarge | t4g.large | t4g.medium | t4g.micro | t4g.nano | t4g.small | t4g.xlarge | u-12tb1.metal | u-18tb1.metal | u-24tb1.metal | u-6tb1.metal | u-9tb1.metal | x1.16xlarge | x1.32xlarge | x1e.16xlarge | x1e.2xlarge | x1e.32xlarge | x1e.4xlarge | x1e.8xlarge | x1e.xlarge | z1d.12xlarge | z1d.2xlarge | z1d.3xlarge | z1d.6xlarge | z1d.large | z1d.metal | z1d.xlarge",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.instancetype",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.kernelid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.kernelid",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.keyname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.keyname",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.monitoring": {
        "Required": "No",
        "Type": "SpotFleetMonitoring",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.monitoring",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.monitoring.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.monitoring.enabled",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces": {
        "Required": "No",
        "Type": "List of [InstanceNetworkInterfaceSpecification",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.associatepublicipaddress": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.associatepublicipaddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.deleteontermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.deleteontermination",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.description",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.deviceindex": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.deviceindex",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.groups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.groups",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.ipv6addresscount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.ipv6addresscount",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.ipv6addresses": {
        "Required": "No",
        "Type": "List of [InstanceIpv6Address",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.ipv6addresses",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.networkinterfaceid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.networkinterfaceid",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses": {
        "Required": "No",
        "Type": "List of [PrivateIpAddressSpecification",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses.primary": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses.primary",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses.privateipaddress": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses.privateipaddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.secondaryprivateipaddresscount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.secondaryprivateipaddresscount",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.subnetid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.subnetid",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement": {
        "Required": "No",
        "Type": "SpotPlacement",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.availabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.availabilityzone",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.groupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.groupname",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.tenancy": {
        "Allowed values": "dedicated | default | host",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.tenancy",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.ramdiskid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.ramdiskid",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.securitygroups": {
        "Required": "No",
        "Type": "List of [GroupIdentifier",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.securitygroups",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.securitygroups.groupid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.securitygroups.groupid",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.spotprice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.spotprice",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.subnetid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.subnetid",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications": {
        "Required": "No",
        "Type": "List of [SpotFleetTagSpecification",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications.resourcetype": {
        "Allowed values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | egress-only-internet-gateway | elastic-gpu | elastic-ip | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | internet-gateway | key-pair | launch-template | local-gateway-route-table-vpc-association | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-flow-log | vpc-peering-connection | vpn-connection | vpn-gateway",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications.resourcetype",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications.tags",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.userdata": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.userdata",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.weightedcapacity": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.weightedcapacity",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchtemplateconfigs": {
        "Required": "Conditional",
        "Type": "List of [LaunchTemplateConfig",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchtemplateconfigs",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.loadbalancersconfig": {
        "Required": "No",
        "Type": "LoadBalancersConfig",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.loadbalancersconfig",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.ondemandallocationstrategy": {
        "Allowed values": "lowestPrice | prioritized",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.ondemandallocationstrategy",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.ondemandmaxtotalprice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.ondemandmaxtotalprice",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.ondemandtargetcapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.ondemandtargetcapacity",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.replaceunhealthyinstances": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.replaceunhealthyinstances",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.spotmaintenancestrategies": {
        "Required": "No",
        "Type": "SpotMaintenanceStrategies",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.spotmaintenancestrategies",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.spotmaxtotalprice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.spotmaxtotalprice",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.spotprice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.spotprice",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.targetcapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.targetcapacity",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.terminateinstanceswithexpiration": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.terminateinstanceswithexpiration",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.type": {
        "Allowed values": "instant | maintain | request",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.type",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.validfrom": {
        "Required": "No",
        "SampleValue": "TODO-ValidFrom",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.validfrom",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.validuntil": {
        "Required": "No",
        "SampleValue": "TODO-ValidUntil",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.validuntil",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotmaintenancestrategies.capacityrebalance": {
        "Required": "No",
        "Type": "SpotCapacityRebalance",
        "UniqueKey": "ec2.spotfleet.spotmaintenancestrategies.capacityrebalance",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.targetgroup.arn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.targetgroup.arn",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.targetgroupsconfig.targetgroups": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of [TargetGroup",
        "UniqueKey": "ec2.spotfleet.targetgroupsconfig.targetgroups",
        "UpdateRequires": "Replacement"
    },
    "ec2.trafficmirrorfilterrule.trafficmirrorportrange.fromport": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ec2.trafficmirrorfilterrule.trafficmirrorportrange.fromport",
        "UpdateRequires": "Replacement"
    },
    "ec2.trafficmirrorfilterrule.trafficmirrorportrange.toport": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ec2.trafficmirrorfilterrule.trafficmirrorportrange.toport",
        "UpdateRequires": "Replacement"
    },
    "ec2.vpnconnection.vpntunneloptionsspecification.presharedkey": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.vpnconnection.vpntunneloptionsspecification.presharedkey",
        "UpdateRequires": "Replacement"
    },
    "ec2.vpnconnection.vpntunneloptionsspecification.tunnelinsidecidr": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.vpnconnection.vpntunneloptionsspecification.tunnelinsidecidr",
        "UpdateRequires": "Replacement"
    },
    "ecr.repository.lifecyclepolicy.lifecyclepolicytext": {
        "Maximum": "30720",
        "Minimum": "100",
        "Pattern": "^.{100,30720}$",
        "Required": "No",
        "SampleValue": "TODO-ecr.repository.lifecyclepolicy.LifecyclePolicyText",
        "Type": "String",
        "UniqueKey": "ecr.repository.lifecyclepolicy.lifecyclepolicytext",
        "UpdateRequires": "Replacement"
    },
    "ecr.repository.lifecyclepolicy.registryid": {
        "Pattern": "[0-9]{12}",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecr.repository.lifecyclepolicy.registryid",
        "UpdateRequires": "Replacement"
    },
    "ecs.capacityprovider.autoscalinggroupprovider.autoscalinggrouparn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.capacityprovider.autoscalinggroupprovider.autoscalinggrouparn",
        "UpdateRequires": "Replacement"
    },
    "ecs.capacityprovider.autoscalinggroupprovider.managedscaling": {
        "Required": "No",
        "Type": "ManagedScaling",
        "UniqueKey": "ecs.capacityprovider.autoscalinggroupprovider.managedscaling",
        "UpdateRequires": "Replacement"
    },
    "ecs.capacityprovider.autoscalinggroupprovider.managedterminationprotection": {
        "Required": "No",
        "SampleValue": "TODO-ManagedTerminationProtection",
        "UniqueKey": "ecs.capacityprovider.autoscalinggroupprovider.managedterminationprotection",
        "UpdateRequires": "Replacement"
    },
    "ecs.capacityprovider.managedscaling.maximumscalingstepsize": {
        "Maximum": "10000",
        "Minimum": "1",
        "Pattern": "^[1,10000]}$",
        "Required": "No",
        "SampleValue": "1...10000",
        "Type": "Integer",
        "UniqueKey": "ecs.capacityprovider.managedscaling.maximumscalingstepsize",
        "UpdateRequires": "Replacement"
    },
    "ecs.capacityprovider.managedscaling.minimumscalingstepsize": {
        "Maximum": "10000",
        "Minimum": "1",
        "Pattern": "^[1,10000]}$",
        "Required": "No",
        "SampleValue": "1...10000",
        "Type": "Integer",
        "UniqueKey": "ecs.capacityprovider.managedscaling.minimumscalingstepsize",
        "UpdateRequires": "Replacement"
    },
    "ecs.capacityprovider.managedscaling.status": {
        "Allowed values": "DISABLED | ENABLED",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.capacityprovider.managedscaling.status",
        "UpdateRequires": "Replacement"
    },
    "ecs.capacityprovider.managedscaling.targetcapacity": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[1,100]}$",
        "Required": "No",
        "SampleValue": "1...100",
        "Type": "Integer",
        "UniqueKey": "ecs.capacityprovider.managedscaling.targetcapacity",
        "UpdateRequires": "Replacement"
    },
    "ecs.cluster.capacityproviderstrategyitem.base": {
        "Maximum": "100000",
        "Minimum": "0",
        "Required": "No",
        "UniqueKey": "ecs.cluster.capacityproviderstrategyitem.base",
        "UpdateRequires": "Replacement"
    },
    "ecs.cluster.capacityproviderstrategyitem.capacityprovider": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.cluster.capacityproviderstrategyitem.capacityprovider",
        "UpdateRequires": "Replacement"
    },
    "ecs.cluster.capacityproviderstrategyitem.weight": {
        "Maximum": "1000",
        "Minimum": "0",
        "Required": "No",
        "UniqueKey": "ecs.cluster.capacityproviderstrategyitem.weight",
        "UpdateRequires": "Replacement"
    },
    "ecs.cluster.clustersetting.name": {
        "Allowed Values": "containerInsights",
        "AllowedValues": [
            "containerInsights"
        ],
        "Pattern": "^[containerInsights]",
        "Required": "Yes",
        "SampleValue": "containerInsights",
        "Type": "String",
        "UniqueKey": "ecs.cluster.clustersetting.name",
        "UpdateRequires": "Replacement"
    },
    "ecs.cluster.clustersetting.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.cluster.clustersetting.value",
        "UpdateRequires": "Replacement"
    },
    "ecs.cluster.clustersettings.name": {
        "Allowed values": "containerInsights",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.cluster.clustersettings.name",
        "UpdateRequires": "Replacement"
    },
    "ecs.cluster.clustersettings.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.cluster.clustersettings.value",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.awsvpcconfiguration.assignpublicip": {
        "Allowed values": "DISABLED | ENABLED",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.service.awsvpcconfiguration.assignpublicip",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.awsvpcconfiguration.securitygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.service.awsvpcconfiguration.securitygroups",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.awsvpcconfiguration.subnets": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.service.awsvpcconfiguration.subnets",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.capacityproviderstrategyitem.base": {
        "Maximum": "100000",
        "Minimum": "0",
        "Required": "No",
        "UniqueKey": "ecs.service.capacityproviderstrategyitem.base",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.capacityproviderstrategyitem.capacityprovider": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.service.capacityproviderstrategyitem.capacityprovider",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.capacityproviderstrategyitem.weight": {
        "Maximum": "1000",
        "Minimum": "0",
        "Required": "No",
        "UniqueKey": "ecs.service.capacityproviderstrategyitem.weight",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.deploymentcircuitbreaker.enable": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.service.deploymentcircuitbreaker.enable",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.deploymentcircuitbreaker.rollback": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.service.deploymentcircuitbreaker.rollback",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.deploymentconfiguration.deploymentcircuitbreaker": {
        "Required": "No",
        "SampleValue": "TODO-DeploymentCircuitBreaker",
        "UniqueKey": "ecs.service.deploymentconfiguration.deploymentcircuitbreaker",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.deploymentconfiguration.maximumpercent": {
        "Required": "No",
        "SampleValue": "TODO-MaximumPercent",
        "UniqueKey": "ecs.service.deploymentconfiguration.maximumpercent",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.deploymentconfiguration.minimumhealthypercent": {
        "Required": "No",
        "SampleValue": "TODO-MinimumHealthyPercent",
        "UniqueKey": "ecs.service.deploymentconfiguration.minimumhealthypercent",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.deploymentcontroller.type": {
        "Allowed Values": "ECS` \\| `EXTERNAL` \\| `CODE_DEPLOY",
        "AllowedValues": [
            "ECS` \\| `EXTERNAL` \\| `CODE_DEPLOY"
        ],
        "Pattern": "^[ECS` \\| `EXTERNAL` \\| `CODE_DEPLOY]",
        "Required": "No",
        "SampleValue": "ECS` \\| `EXTERNAL` \\| `CODE_DEPLOY",
        "Type": "String",
        "UniqueKey": "ecs.service.deploymentcontroller.type",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.loadbalancer.containername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.service.loadbalancer.containername",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.loadbalancer.containerport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.service.loadbalancer.containerport",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.loadbalancer.loadbalancername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.service.loadbalancer.loadbalancername",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.loadbalancer.targetgrouparn": {
        "Required": "No",
        "SampleValue": "TODO-TargetGroupArn",
        "UniqueKey": "ecs.service.loadbalancer.targetgrouparn",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.loadbalancers.containername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.service.loadbalancers.containername",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.loadbalancers.containerport": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ecs.service.loadbalancers.containerport",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.loadbalancers.loadbalancername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.service.loadbalancers.loadbalancername",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.loadbalancers.targetgrouparn": {
        "Required": "No",
        "SampleValue": "TODO-TargetGroupArn",
        "UniqueKey": "ecs.service.loadbalancers.targetgrouparn",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.networkconfiguration.awsvpcconfiguration": {
        "Required": "No",
        "Type": "AwsVpcConfiguration",
        "UniqueKey": "ecs.service.networkconfiguration.awsvpcconfiguration",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.placementconstraint.expression": {
        "Required": "No",
        "SampleValue": "TODO-Expression",
        "UniqueKey": "ecs.service.placementconstraint.expression",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.placementconstraint.type": {
        "Allowed values": "distinctInstance | memberOf",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.service.placementconstraint.type",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.placementstrategy.field": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.service.placementstrategy.field",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.placementstrategy.type": {
        "Allowed values": "binpack | random | spread",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.service.placementstrategy.type",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.serviceregistry.containername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.service.serviceregistry.containername",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.serviceregistry.containerport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.service.serviceregistry.containerport",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.serviceregistry.port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.service.serviceregistry.port",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.serviceregistry.registryarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.service.serviceregistry.registryarn",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.authorizationconfig.accesspointid": {
        "Required": "No",
        "SampleValue": "TODO-AccessPointId",
        "UniqueKey": "ecs.taskdefinition.authorizationconfig.accesspointid",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.authorizationconfig.iam": {
        "Required": "No",
        "SampleValue": "TODO-IAM",
        "UniqueKey": "ecs.taskdefinition.authorizationconfig.iam",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.command": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.command",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.cpu": {
        "Required": "No",
        "SampleValue": "TODO-Cpu",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.cpu",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.dependson": {
        "Required": "No",
        "SampleValue": "TODO-DependsOn",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.dependson",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.disablenetworking": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.disablenetworking",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.dnssearchdomains": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.dnssearchdomains",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.dnsservers": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.dnsservers",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.dockerlabels": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.dockerlabels",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.dockersecurityoptions": {
        "Required": "No",
        "SampleValue": "TODO-DockerSecurityOptions",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.dockersecurityoptions",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.entrypoint": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.entrypoint",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.environment": {
        "Required": "No",
        "Type": "List of [KeyValuePair",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.environment",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.environment.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.environment.name",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.environment.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.environment.value",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.environmentfiles": {
        "Required": "No",
        "SampleValue": "TODO-EnvironmentFiles",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.environmentfiles",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.essential": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.essential",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.extrahosts": {
        "Required": "No",
        "Type": "List of [HostEntry",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.extrahosts",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.firelensconfiguration": {
        "Required": "No",
        "SampleValue": "TODO-FirelensConfiguration",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.firelensconfiguration",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.healthcheck": {
        "Required": "No",
        "Type": "HealthCheck",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.healthcheck",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.hostentry.hostname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.hostentry.hostname",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.hostentry.ipaddress": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.hostentry.ipaddress",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.hostname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.hostname",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.image": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.image",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.interactive": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.interactive",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.links": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.links",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.linuxparameters": {
        "Required": "No",
        "Type": "LinuxParameters",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.linuxparameters",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.logconfiguration": {
        "Required": "No",
        "SampleValue": "TODO-LogConfiguration",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.logconfiguration",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.logconfiguration.logdriver": {
        "Required": "Yes",
        "SampleValue": "TODO-LogDriver",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.logconfiguration.logdriver",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.logconfiguration.options": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.logconfiguration.options",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.logconfiguration.secretoptions": {
        "Required": "No",
        "SampleValue": "TODO-SecretOptions",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.logconfiguration.secretoptions",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.memory": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.memory",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.memoryreservation": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.memoryreservation",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.mountpoints": {
        "Required": "No",
        "Type": "List of [MountPoint",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.mountpoints",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.mountpoints.containerpath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.mountpoints.containerpath",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.mountpoints.readonly": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.mountpoints.readonly",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.mountpoints.sourcevolume": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.mountpoints.sourcevolume",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.name",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.portmappings": {
        "Required": "No",
        "SampleValue": "TODO-PortMappings",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.portmappings",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.portmappings.containerport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.portmappings.containerport",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.portmappings.hostport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.portmappings.hostport",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.portmappings.protocol": {
        "Allowed values": "tcp | udp",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.portmappings.protocol",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.privileged": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.privileged",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.pseudoterminal": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.pseudoterminal",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.readonlyrootfilesystem": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.readonlyrootfilesystem",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.repositorycredentials": {
        "Required": "No",
        "Type": "RepositoryCredentials",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.repositorycredentials",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.resourcerequirements": {
        "Required": "No",
        "Type": "List of [ResourceRequirement",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.resourcerequirements",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.secrets": {
        "Required": "No",
        "SampleValue": "TODO-Secrets",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.secrets",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.starttimeout": {
        "Required": "No",
        "SampleValue": "TODO-StartTimeout",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.starttimeout",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.stoptimeout": {
        "Required": "No",
        "SampleValue": "TODO-StopTimeout",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.stoptimeout",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.systemcontrols": {
        "Required": "No",
        "Type": "List of [SystemControl",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.systemcontrols",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.ulimit.hardlimit": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.ulimit.hardlimit",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.ulimit.name": {
        "Allowed values": "core | cpu | data | fsize | locks | memlock | msgqueue | nice | nofile | nproc | rss | rtprio | rttime | sigpending | stack",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.ulimit.name",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.ulimit.softlimit": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.ulimit.softlimit",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.ulimits": {
        "Required": "No",
        "Type": "List of [Ulimit",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.ulimits",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.user": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.user",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.volumesfrom": {
        "Required": "No",
        "Type": "List of [VolumeFrom",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.volumesfrom",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.volumesfrom.readonly": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.volumesfrom.readonly",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.volumesfrom.sourcecontainer": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.volumesfrom.sourcecontainer",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.workingdirectory": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.workingdirectory",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdependency.condition": {
        "Allowed values": "COMPLETE | HEALTHY | START | SUCCESS",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdependency.condition",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdependency.containername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdependency.containername",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.device.containerpath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.device.containerpath",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.device.hostpath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.device.hostpath",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.device.permissions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.device.permissions",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.dockervolumeconfiguration.autoprovision": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.dockervolumeconfiguration.autoprovision",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.dockervolumeconfiguration.driver": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.dockervolumeconfiguration.driver",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.dockervolumeconfiguration.driveropts": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "ecs.taskdefinition.dockervolumeconfiguration.driveropts",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.dockervolumeconfiguration.labels": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "ecs.taskdefinition.dockervolumeconfiguration.labels",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.dockervolumeconfiguration.scope": {
        "Allowed values": "shared | task",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.dockervolumeconfiguration.scope",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.efsvolumeconfiguration.authorizationconfig": {
        "Required": "No",
        "Type": "AuthorizationConfig",
        "UniqueKey": "ecs.taskdefinition.efsvolumeconfiguration.authorizationconfig",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.efsvolumeconfiguration.filesystemid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.efsvolumeconfiguration.filesystemid",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.efsvolumeconfiguration.rootdirectory": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.efsvolumeconfiguration.rootdirectory",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.efsvolumeconfiguration.transitencryption": {
        "Required": "No",
        "SampleValue": "TODO-TransitEncryption",
        "UniqueKey": "ecs.taskdefinition.efsvolumeconfiguration.transitencryption",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.efsvolumeconfiguration.transitencryptionport": {
        "Required": "No",
        "SampleValue": "TODO-TransitEncryptionPort",
        "UniqueKey": "ecs.taskdefinition.efsvolumeconfiguration.transitencryptionport",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.environmentfile.type": {
        "Allowed values": "s3",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.environmentfile.type",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.environmentfile.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.environmentfile.value",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.firelensconfiguration.options": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "ecs.taskdefinition.firelensconfiguration.options",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.firelensconfiguration.type": {
        "Allowed values": "fluentbit | fluentd",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.firelensconfiguration.type",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.healthcheck.command": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.healthcheck.command",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.healthcheck.interval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.healthcheck.interval",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.healthcheck.retries": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.healthcheck.retries",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.healthcheck.startperiod": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.healthcheck.startperiod",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.healthcheck.timeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.healthcheck.timeout",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.inferenceaccelerator.devicename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.inferenceaccelerator.devicename",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.inferenceaccelerator.devicetype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.inferenceaccelerator.devicetype",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.kernelcapabilities.add": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.kernelcapabilities.add",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.kernelcapabilities.drop": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.kernelcapabilities.drop",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.capabilities": {
        "Required": "No",
        "Type": "KernelCapabilities",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.capabilities",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.devices": {
        "Required": "No",
        "Type": "List of [Device",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.devices",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.initprocessenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.initprocessenabled",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.maxswap": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.maxswap",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.sharedmemorysize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.sharedmemorysize",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.swappiness": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.swappiness",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.tmpfs": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.tmpfs",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.proxyconfiguration.containername": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.proxyconfiguration.containername",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.proxyconfiguration.proxyconfigurationproperties": {
        "Required": "No",
        "Type": "List of [KeyValuePair",
        "UniqueKey": "ecs.taskdefinition.proxyconfiguration.proxyconfigurationproperties",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.proxyconfiguration.type": {
        "Allowed values": "APPMESH",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.proxyconfiguration.type",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.repositorycredentials.credentialsparameter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.repositorycredentials.credentialsparameter",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.resourcerequirement.type": {
        "Allowed values": "GPU | InferenceAccelerator",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.resourcerequirement.type",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.resourcerequirement.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.resourcerequirement.value",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.secret.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.secret.name",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.secret.valuefrom": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.secret.valuefrom",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.systemcontrol.namespace": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.systemcontrol.namespace",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.systemcontrol.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.systemcontrol.value",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.taskdefinitionplacementconstraint.expression": {
        "Required": "No",
        "SampleValue": "TODO-Expression",
        "UniqueKey": "ecs.taskdefinition.taskdefinitionplacementconstraint.expression",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.taskdefinitionplacementconstraint.type": {
        "Allowed values": "memberOf",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.taskdefinitionplacementconstraint.type",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.tmpfs.containerpath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.tmpfs.containerpath",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.tmpfs.mountoptions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.tmpfs.mountoptions",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.tmpfs.size": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.tmpfs.size",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.volumes.dockervolumeconfiguration": {
        "Required": "No",
        "Type": "DockerVolumeConfiguration",
        "UniqueKey": "ecs.taskdefinition.volumes.dockervolumeconfiguration",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.volumes.efsvolumeconfiguration": {
        "Required": "No",
        "Type": "EFSVolumeConfiguration",
        "UniqueKey": "ecs.taskdefinition.volumes.efsvolumeconfiguration",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.volumes.host": {
        "Required": "No",
        "Type": "HostVolumeProperties",
        "UniqueKey": "ecs.taskdefinition.volumes.host",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.volumes.host.sourcepath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.volumes.host.sourcepath",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.volumes.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.volumes.name",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.awsvpcconfiguration.assignpublicip": {
        "Allowed values": "DISABLED | ENABLED",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskset.awsvpcconfiguration.assignpublicip",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.awsvpcconfiguration.securitygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskset.awsvpcconfiguration.securitygroups",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.awsvpcconfiguration.subnets": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "ecs.taskset.awsvpcconfiguration.subnets",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.loadbalancer.containername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskset.loadbalancer.containername",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.loadbalancer.containerport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskset.loadbalancer.containerport",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.loadbalancer.loadbalancername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskset.loadbalancer.loadbalancername",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.loadbalancer.targetgrouparn": {
        "Required": "No",
        "SampleValue": "TODO-TargetGroupArn",
        "UniqueKey": "ecs.taskset.loadbalancer.targetgrouparn",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.networkconfiguration.awsvpcconfiguration": {
        "Required": "No",
        "Type": "AwsVpcConfiguration",
        "UniqueKey": "ecs.taskset.networkconfiguration.awsvpcconfiguration",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.scale.unit": {
        "Allowed values": "PERCENT",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskset.scale.unit",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.scale.value": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "ecs.taskset.scale.value",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.serviceregistry.containername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskset.serviceregistry.containername",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.serviceregistry.containerport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskset.serviceregistry.containerport",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.serviceregistry.port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskset.serviceregistry.port",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.serviceregistry.registryarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskset.serviceregistry.registryarn",
        "UpdateRequires": "Replacement"
    },
    "efs.accesspoint.accesspointtag.key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^(?![aA]{1}[wW]{1}[sS]{1}:)([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]+)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "efs.accesspoint.accesspointtag.key",
        "UpdateRequires": "Replacement"
    },
    "efs.accesspoint.accesspointtag.value": {
        "Maximum": "256",
        "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "efs.accesspoint.accesspointtag.value",
        "UpdateRequires": "Replacement"
    },
    "efs.accesspoint.creationinfo.ownergid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "efs.accesspoint.creationinfo.ownergid",
        "UpdateRequires": "Replacement"
    },
    "efs.accesspoint.creationinfo.owneruid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "efs.accesspoint.creationinfo.owneruid",
        "UpdateRequires": "Replacement"
    },
    "efs.accesspoint.creationinfo.permissions": {
        "Pattern": "^[0-7]{3,4}$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "efs.accesspoint.creationinfo.permissions",
        "UpdateRequires": "Replacement"
    },
    "efs.accesspoint.posixuser.gid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "efs.accesspoint.posixuser.gid",
        "UpdateRequires": "Replacement"
    },
    "efs.accesspoint.posixuser.secondarygids": {
        "Maximum": "16",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "efs.accesspoint.posixuser.secondarygids",
        "UpdateRequires": "Replacement"
    },
    "efs.accesspoint.posixuser.uid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "efs.accesspoint.posixuser.uid",
        "UpdateRequires": "Replacement"
    },
    "efs.accesspoint.rootdirectory.creationinfo": {
        "Required": "No",
        "Type": "CreationInfo",
        "UniqueKey": "efs.accesspoint.rootdirectory.creationinfo",
        "UpdateRequires": "Replacement"
    },
    "efs.accesspoint.rootdirectory.path": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "No",
        "SampleValue": "TODO-efs.accesspoint.rootdirectory.Path",
        "Type": "String",
        "UniqueKey": "efs.accesspoint.rootdirectory.path",
        "UpdateRequires": "Replacement"
    },
    "efs.filesystem.backuppolicy.status": {
        "Required": "Yes",
        "SampleValue": "TODO-Status",
        "UniqueKey": "efs.filesystem.backuppolicy.status",
        "UpdateRequires": "Replacement"
    },
    "efs.filesystem.elasticfilesystemtag.key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^(?![aA]{1}[wW]{1}[sS]{1}:)([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]+)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "efs.filesystem.elasticfilesystemtag.key",
        "UpdateRequires": "Replacement"
    },
    "efs.filesystem.elasticfilesystemtag.value": {
        "Maximum": "256",
        "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "efs.filesystem.elasticfilesystemtag.value",
        "UpdateRequires": "Replacement"
    },
    "efs.filesystem.filesystemtags.key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "Yes",
        "SampleValue": "TODO-efs.filesystem.filesystemtags.key",
        "Type": "String",
        "UniqueKey": "efs.filesystem.filesystemtags.key",
        "UpdateRequires": "Replacement"
    },
    "efs.filesystem.filesystemtags.value": {
        "Maximum": "256",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "efs.filesystem.filesystemtags.value",
        "UpdateRequires": "Replacement"
    },
    "efs.filesystem.lifecyclepolicy.transitiontoia": {
        "Allowed values": "AFTER_14_DAYS | AFTER_30_DAYS | AFTER_60_DAYS | AFTER_7_DAYS | AFTER_90_DAYS",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "efs.filesystem.lifecyclepolicy.transitiontoia",
        "UpdateRequires": "Replacement"
    },
    "eks.cluster.encryptionconfig.provider": {
        "Required": "No",
        "Type": "Provider",
        "UniqueKey": "eks.cluster.encryptionconfig.provider",
        "UpdateRequires": "Replacement"
    },
    "eks.cluster.encryptionconfig.resources": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "eks.cluster.encryptionconfig.resources",
        "UpdateRequires": "Replacement"
    },
    "eks.cluster.kubernetesnetworkconfig.serviceipv4cidr": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "eks.cluster.kubernetesnetworkconfig.serviceipv4cidr",
        "UpdateRequires": "Replacement"
    },
    "eks.cluster.provider.keyarn": {
        "Required": "No",
        "SampleValue": "TODO-KeyArn",
        "UniqueKey": "eks.cluster.provider.keyarn",
        "UpdateRequires": "Replacement"
    },
    "eks.cluster.resourcesvpcconfig.securitygroupids": {
        "Required": "No",
        "SampleValue": "TODO-SecurityGroupIds",
        "UniqueKey": "eks.cluster.resourcesvpcconfig.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "eks.cluster.resourcesvpcconfig.subnetids": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "eks.cluster.resourcesvpcconfig.subnetids",
        "UpdateRequires": "Replacement"
    },
    "eks.fargateprofile.label.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eks.fargateprofile.label.key",
        "UpdateRequires": "Replacement"
    },
    "eks.fargateprofile.label.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eks.fargateprofile.label.value",
        "UpdateRequires": "Replacement"
    },
    "eks.fargateprofile.selector.labels": {
        "Required": "No",
        "Type": "List of [Label",
        "UniqueKey": "eks.fargateprofile.selector.labels",
        "UpdateRequires": "Replacement"
    },
    "eks.fargateprofile.selector.namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eks.fargateprofile.selector.namespace",
        "UpdateRequires": "Replacement"
    },
    "eks.nodegroup.launchtemplatespecification.id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "eks.nodegroup.launchtemplatespecification.id",
        "UpdateRequires": "Replacement"
    },
    "eks.nodegroup.launchtemplatespecification.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "eks.nodegroup.launchtemplatespecification.name",
        "UpdateRequires": "Replacement"
    },
    "eks.nodegroup.launchtemplatespecification.version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "eks.nodegroup.launchtemplatespecification.version",
        "UpdateRequires": "Replacement"
    },
    "eks.nodegroup.remoteaccess.ec2sshkey": {
        "Required": "Yes",
        "SampleValue": "TODO-Ec2SshKey",
        "UniqueKey": "eks.nodegroup.remoteaccess.ec2sshkey",
        "UpdateRequires": "Replacement"
    },
    "eks.nodegroup.remoteaccess.sourcesecuritygroups": {
        "Required": "No",
        "SampleValue": "TODO-SourceSecurityGroups",
        "UniqueKey": "eks.nodegroup.remoteaccess.sourcesecuritygroups",
        "UpdateRequires": "Replacement"
    },
    "eks.nodegroup.scalingconfig.desiredsize": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "eks.nodegroup.scalingconfig.desiredsize",
        "UpdateRequires": "Replacement"
    },
    "eks.nodegroup.scalingconfig.maxsize": {
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "eks.nodegroup.scalingconfig.maxsize",
        "UpdateRequires": "Replacement"
    },
    "eks.nodegroup.scalingconfig.minsize": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "eks.nodegroup.scalingconfig.minsize",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.autominorversionupgrade": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticache.cache.cluster.autominorversionupgrade",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.azmode": {
        "Allowed values": "cross-az | single-az",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.azmode",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.cachenodetype": {
        "Required": "Yes",
        "SampleValue": "TODO-CacheNodeType",
        "UniqueKey": "elasticache.cache.cluster.cachenodetype",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.cacheparametergroupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.cacheparametergroupname",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.cachesecuritygroupnames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticache.cache.cluster.cachesecuritygroupnames",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.cachesubnetgroupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.cachesubnetgroupname",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.clustername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.clustername",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.engine": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.engine",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.engineversion": {
        "Required": "No",
        "SampleValue": "TODO-EngineVersion",
        "UniqueKey": "elasticache.cache.cluster.engineversion",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.notificationtopicarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.notificationtopicarn",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.numcachenodes": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticache.cache.cluster.numcachenodes",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticache.cache.cluster.port",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.preferredavailabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.preferredavailabilityzone",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.preferredavailabilityzones": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticache.cache.cluster.preferredavailabilityzones",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.preferredmaintenancewindow": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.preferredmaintenancewindow",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.snapshotarns": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticache.cache.cluster.snapshotarns",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.snapshotname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.snapshotname",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.snapshotretentionlimit": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticache.cache.cluster.snapshotretentionlimit",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.snapshotwindow": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.snapshotwindow",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "elasticache.cache.cluster.tags",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.vpcsecuritygroupids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticache.cache.cluster.vpcsecuritygroupids",
        "UpdateRequires": "Replacement"
    },
    "elasticache.globalreplicationgroup.globalreplicationgroupmember.replicationgroupid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.globalreplicationgroup.globalreplicationgroupmember.replicationgroupid",
        "UpdateRequires": "Replacement"
    },
    "elasticache.globalreplicationgroup.globalreplicationgroupmember.replicationgroupregion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.globalreplicationgroup.globalreplicationgroupmember.replicationgroupregion",
        "UpdateRequires": "Replacement"
    },
    "elasticache.globalreplicationgroup.globalreplicationgroupmember.role": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.globalreplicationgroup.globalreplicationgroupmember.role",
        "UpdateRequires": "Replacement"
    },
    "elasticache.globalreplicationgroup.globalreplicationgroupmember.status": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.globalreplicationgroup.globalreplicationgroupmember.status",
        "UpdateRequires": "Replacement"
    },
    "elasticache.globalreplicationgroup.regionalconfiguration.replicationgroupid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.globalreplicationgroup.regionalconfiguration.replicationgroupid",
        "UpdateRequires": "Replacement"
    },
    "elasticache.globalreplicationgroup.regionalconfiguration.replicationgroupregion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.globalreplicationgroup.regionalconfiguration.replicationgroupregion",
        "UpdateRequires": "Replacement"
    },
    "elasticache.globalreplicationgroup.regionalconfiguration.reshardingconfigurations": {
        "Required": "No",
        "Type": "List of [ReshardingConfiguration",
        "UniqueKey": "elasticache.globalreplicationgroup.regionalconfiguration.reshardingconfigurations",
        "UpdateRequires": "Replacement"
    },
    "elasticache.globalreplicationgroup.reshardingconfiguration.nodegroupid": {
        "Maximum": "4",
        "Minimum": "1",
        "Pattern": "\\d+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.globalreplicationgroup.reshardingconfiguration.nodegroupid",
        "UpdateRequires": "Replacement"
    },
    "elasticache.globalreplicationgroup.reshardingconfiguration.preferredavailabilityzones": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticache.globalreplicationgroup.reshardingconfiguration.preferredavailabilityzones",
        "UpdateRequires": "Replacement"
    },
    "elasticache.parameter.group.": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticache.parameter.group.",
        "UpdateRequires": "Replacement"
    },
    "elasticache.parameter.group.cacheparametergroupfamily": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.parameter.group.cacheparametergroupfamily",
        "UpdateRequires": "Replacement"
    },
    "elasticache.parameter.group.description": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.parameter.group.description",
        "UpdateRequires": "Replacement"
    },
    "elasticache.parameter.group.properties": {
        "UniqueKey": "elasticache.parameter.group.properties"
    },
    "elasticache.replicationgroup.nodegroupconfiguration.nodegroupid": {
        "Maximum": "4",
        "Minimum": "1",
        "Pattern": "\\d+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.replicationgroup.nodegroupconfiguration.nodegroupid",
        "UpdateRequires": "Replacement"
    },
    "elasticache.replicationgroup.nodegroupconfiguration.primaryavailabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.replicationgroup.nodegroupconfiguration.primaryavailabilityzone",
        "UpdateRequires": "Replacement"
    },
    "elasticache.replicationgroup.nodegroupconfiguration.replicaavailabilityzones": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticache.replicationgroup.nodegroupconfiguration.replicaavailabilityzones",
        "UpdateRequires": "Replacement"
    },
    "elasticache.replicationgroup.nodegroupconfiguration.replicacount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticache.replicationgroup.nodegroupconfiguration.replicacount",
        "UpdateRequires": "Replacement"
    },
    "elasticache.replicationgroup.nodegroupconfiguration.slots": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.replicationgroup.nodegroupconfiguration.slots",
        "UpdateRequires": "Replacement"
    },
    "elasticache.security.group.description": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.security.group.description",
        "UpdateRequires": "Replacement"
    },
    "elasticache.security.group.ingress.cachesecuritygroupname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.security.group.ingress.cachesecuritygroupname",
        "UpdateRequires": "Replacement"
    },
    "elasticache.security.group.ingress.ec2securitygroupname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.security.group.ingress.ec2securitygroupname",
        "UpdateRequires": "Replacement"
    },
    "elasticache.security.group.ingress.ec2securitygroupownerid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.security.group.ingress.ec2securitygroupownerid",
        "UpdateRequires": "Replacement"
    },
    "elasticache.subnetgroup.cachesubnetgroupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.subnetgroup.cachesubnetgroupname",
        "UpdateRequires": "Replacement"
    },
    "elasticache.subnetgroup.description": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.subnetgroup.description",
        "UpdateRequires": "Replacement"
    },
    "elasticache.subnetgroup.subnetids": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "elasticache.subnetgroup.subnetids",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.application.applicationresourcelifecycleconfig.servicerole": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.application.applicationresourcelifecycleconfig.servicerole",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.application.applicationresourcelifecycleconfig.versionlifecycleconfig": {
        "Required": "No",
        "Type": "ApplicationVersionLifecycleConfig",
        "UniqueKey": "elasticbeanstalk.application.applicationresourcelifecycleconfig.versionlifecycleconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.application.applicationversionlifecycleconfig.maxagerule": {
        "Required": "No",
        "Type": "MaxAgeRule",
        "UniqueKey": "elasticbeanstalk.application.applicationversionlifecycleconfig.maxagerule",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.application.applicationversionlifecycleconfig.maxcountrule": {
        "Required": "No",
        "Type": "MaxCountRule",
        "UniqueKey": "elasticbeanstalk.application.applicationversionlifecycleconfig.maxcountrule",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.application.maxagerule.deletesourcefroms3": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticbeanstalk.application.maxagerule.deletesourcefroms3",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.application.maxagerule.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticbeanstalk.application.maxagerule.enabled",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.application.maxagerule.maxageindays": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticbeanstalk.application.maxagerule.maxageindays",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.application.maxcountrule.deletesourcefroms3": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticbeanstalk.application.maxcountrule.deletesourcefroms3",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.application.maxcountrule.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticbeanstalk.application.maxcountrule.enabled",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.application.maxcountrule.maxcount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticbeanstalk.application.maxcountrule.maxcount",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.configurationtemplate.configurationoptionsetting.namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.configurationtemplate.configurationoptionsetting.namespace",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.configurationtemplate.configurationoptionsetting.optionname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.configurationtemplate.configurationoptionsetting.optionname",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.configurationtemplate.configurationoptionsetting.resourcename": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-elasticbeanstalk.configurationtemplate.configurationoptionsetting.ResourceName",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.configurationtemplate.configurationoptionsetting.resourcename",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.configurationtemplate.configurationoptionsetting.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.configurationtemplate.configurationoptionsetting.value",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.configurationtemplate.sourceconfiguration.applicationname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "Yes",
        "SampleValue": "TODO-elasticbeanstalk.configurationtemplate.sourceconfiguration.ApplicationName",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.configurationtemplate.sourceconfiguration.applicationname",
        "UpdateRequires": "Replacement"
    },
    "elasticbeanstalk.configurationtemplate.sourceconfiguration.templatename": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "Yes",
        "SampleValue": "TODO-elasticbeanstalk.configurationtemplate.sourceconfiguration.TemplateName",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.configurationtemplate.sourceconfiguration.templatename",
        "UpdateRequires": "Replacement"
    },
    "elasticfilesystem.filesystem.lifecyclepolicy.transitiontoia": {
        "Allowed Values": "AFTER_14_DAYS | AFTER_30_DAYS | AFTER_60_DAYS | AFTER_7_DAYS | AFTER_90_DAYS",
        "AllowedValues": [
            "AFTER_14_DAYS",
            "AFTER_30_DAYS",
            "AFTER_60_DAYS",
            "AFTER_7_DAYS",
            "AFTER_90_DAYS"
        ],
        "Pattern": "^[AFTER_14_DAYS|AFTER_30_DAYS|AFTER_60_DAYS|AFTER_7_DAYS|AFTER_90_DAYS]",
        "Required": "Yes",
        "SampleValue": "AFTER_14_DAYS|AFTER_30_DAYS|AFTER_60_DAYS|AFTER_7_DAYS|AFTER_90_DAYS",
        "Type": "String",
        "UniqueKey": "elasticfilesystem.filesystem.lifecyclepolicy.transitiontoia",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.action.authenticatecognitoconfig": {
        "Required": "No",
        "Type": "AuthenticateCognitoConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.action.authenticatecognitoconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.action.authenticateoidcconfig": {
        "Required": "No",
        "Type": "AuthenticateOidcConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.action.authenticateoidcconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.action.fixedresponseconfig": {
        "Required": "No",
        "Type": "FixedResponseConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.action.fixedresponseconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.action.forwardconfig": {
        "Required": "No",
        "Type": "ForwardConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.action.forwardconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.action.order": {
        "Maximum": "50000",
        "Minimum": "1",
        "Pattern": "^[1,50000]}$",
        "Required": "No",
        "SampleValue": "1...50000",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.listener.action.order",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.action.redirectconfig": {
        "Required": "No",
        "Type": "RedirectConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.action.redirectconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.action.targetgrouparn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.action.targetgrouparn",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.action.type": {
        "Allowed values": "authenticate-cognito | authenticate-oidc | fixed-response | forward | redirect",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.action.type",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.authenticationrequestextraparams": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.authenticationrequestextraparams",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.onunauthenticatedrequest": {
        "Allowed values": "allow | authenticate | deny",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.onunauthenticatedrequest",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.scope": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.scope",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.sessioncookiename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.sessioncookiename",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.sessiontimeout": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.sessiontimeout",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.userpoolarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.userpoolarn",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.userpoolclientid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.userpoolclientid",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.userpooldomain": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.userpooldomain",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.authenticationrequestextraparams": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.authenticationrequestextraparams",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.authorizationendpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.authorizationendpoint",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.clientid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.clientid",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.clientsecret": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.clientsecret",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.issuer": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.issuer",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.onunauthenticatedrequest": {
        "Allowed values": "allow | authenticate | deny",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.onunauthenticatedrequest",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.scope": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.scope",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.sessioncookiename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.sessioncookiename",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.sessiontimeout": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.sessiontimeout",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.tokenendpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.tokenendpoint",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.userinfoendpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.userinfoendpoint",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.certificate.certificatearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.certificate.certificatearn",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.certificates.1.certificatearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.certificates.1.certificatearn",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.certificates.certificatearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.certificates.certificatearn",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.defaultactions.authenticatecognitoconfig": {
        "Required": "No",
        "Type": "AuthenticateCognitoConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.authenticatecognitoconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.defaultactions.authenticateoidcconfig": {
        "Required": "No",
        "Type": "AuthenticateOidcConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.authenticateoidcconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.defaultactions.fixedresponseconfig": {
        "Required": "No",
        "Type": "FixedResponseConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.fixedresponseconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.defaultactions.forwardconfig": {
        "Required": "No",
        "Type": "ForwardConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.forwardconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.defaultactions.order": {
        "Maximum": "50000",
        "Minimum": "1",
        "Pattern": "^[1,50000]}$",
        "Required": "No",
        "SampleValue": "1...50000",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.order",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.defaultactions.redirectconfig": {
        "Required": "No",
        "Type": "RedirectConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.redirectconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.defaultactions.targetgrouparn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.targetgrouparn",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.defaultactions.type": {
        "Allowed values": "authenticate-cognito | authenticate-oidc | fixed-response | forward | redirect",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.type",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.fixedresponseconfig.contenttype": {
        "Maximum": "32",
        "Minimum": "0",
        "Pattern": "^.{0,32}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listener.fixedresponseconfig.ContentType",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.fixedresponseconfig.contenttype",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.fixedresponseconfig.messagebody": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": "^.{0,1024}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listener.fixedresponseconfig.MessageBody",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.fixedresponseconfig.messagebody",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.fixedresponseconfig.statuscode": {
        "Pattern": "^(2|4|5)\\d\\d$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.fixedresponseconfig.statuscode",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.forwardconfig.targetgroups": {
        "Required": "No",
        "Type": "List of [TargetGroupTuple",
        "UniqueKey": "elasticloadbalancingv2.listener.forwardconfig.targetgroups",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.forwardconfig.targetgroupstickinessconfig": {
        "Required": "No",
        "Type": "TargetGroupStickinessConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.forwardconfig.targetgroupstickinessconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.redirectconfig.host": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listener.redirectconfig.Host",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.redirectconfig.host",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.redirectconfig.path": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listener.redirectconfig.Path",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.redirectconfig.path",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.redirectconfig.port": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.redirectconfig.port",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.redirectconfig.protocol": {
        "Pattern": "^(HTTPS?|#\\{protocol\\})$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.redirectconfig.protocol",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.redirectconfig.query": {
        "Maximum": "128",
        "Minimum": "0",
        "Pattern": "^.{0,128}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listener.redirectconfig.Query",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.redirectconfig.query",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.redirectconfig.statuscode": {
        "Allowed values": "HTTP_301 | HTTP_302",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.redirectconfig.statuscode",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.targetgroupstickinessconfig.durationseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.listener.targetgroupstickinessconfig.durationseconds",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.targetgroupstickinessconfig.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticloadbalancingv2.listener.targetgroupstickinessconfig.enabled",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.targetgrouptuple.targetgrouparn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.targetgrouptuple.targetgrouparn",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listener.targetgrouptuple.weight": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.listener.targetgrouptuple.weight",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.action.authenticatecognitoconfig": {
        "Required": "No",
        "Type": "AuthenticateCognitoConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.action.authenticatecognitoconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.action.authenticateoidcconfig": {
        "Required": "No",
        "Type": "AuthenticateOidcConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.action.authenticateoidcconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.action.fixedresponseconfig": {
        "Required": "No",
        "Type": "FixedResponseConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.action.fixedresponseconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.action.forwardconfig": {
        "Required": "No",
        "Type": "ForwardConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.action.forwardconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.action.order": {
        "Maximum": "50000",
        "Minimum": "1",
        "Pattern": "^[1,50000]}$",
        "Required": "No",
        "SampleValue": "1...50000",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.action.order",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.action.redirectconfig": {
        "Required": "No",
        "Type": "RedirectConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.action.redirectconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.action.targetgrouparn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.action.targetgrouparn",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.action.type": {
        "Allowed values": "authenticate-cognito | authenticate-oidc | fixed-response | forward | redirect",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.action.type",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.actions.authenticatecognitoconfig": {
        "Required": "No",
        "Type": "AuthenticateCognitoConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.authenticatecognitoconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.actions.authenticateoidcconfig": {
        "Required": "No",
        "Type": "AuthenticateOidcConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.authenticateoidcconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.actions.fixedresponseconfig": {
        "Required": "No",
        "Type": "FixedResponseConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.fixedresponseconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.actions.forwardconfig": {
        "Required": "No",
        "Type": "ForwardConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.forwardconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.actions.order": {
        "Maximum": "50000",
        "Minimum": "1",
        "Pattern": "^[1,50000]}$",
        "Required": "No",
        "SampleValue": "1...50000",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.order",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.actions.redirectconfig": {
        "Required": "No",
        "Type": "RedirectConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.redirectconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.actions.targetgrouparn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.targetgrouparn",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.actions.type": {
        "Allowed values": "authenticate-cognito | authenticate-oidc | fixed-response | forward | redirect",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.type",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.authenticationrequestextraparams": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.authenticationrequestextraparams",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.onunauthenticatedrequest": {
        "Allowed values": "allow | authenticate | deny",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.onunauthenticatedrequest",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.scope": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.scope",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.sessioncookiename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.sessioncookiename",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.sessiontimeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.sessiontimeout",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.userpoolarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.userpoolarn",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.userpoolclientid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.userpoolclientid",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.userpooldomain": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.userpooldomain",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.authenticationrequestextraparams": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.authenticationrequestextraparams",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.authorizationendpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.authorizationendpoint",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.clientid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.clientid",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.clientsecret": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.clientsecret",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.issuer": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.issuer",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.onunauthenticatedrequest": {
        "Allowed values": "allow | authenticate | deny",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.onunauthenticatedrequest",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.scope": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.scope",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.sessioncookiename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.sessioncookiename",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.sessiontimeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.sessiontimeout",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.tokenendpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.tokenendpoint",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.useexistingclientsecret": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.useexistingclientsecret",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.userinfoendpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.userinfoendpoint",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.conditions.field": {
        "Maximum": "64",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.field",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.conditions.hostheaderconfig": {
        "Required": "No",
        "Type": "HostHeaderConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.hostheaderconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.conditions.httpheaderconfig": {
        "Required": "Conditional",
        "Type": "HttpHeaderConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.httpheaderconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.conditions.httprequestmethodconfig": {
        "Required": "Conditional",
        "Type": "HttpRequestMethodConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.httprequestmethodconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.conditions.pathpatternconfig": {
        "Required": "No",
        "Type": "PathPatternConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.pathpatternconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.conditions.querystringconfig": {
        "Required": "Conditional",
        "Type": "QueryStringConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.querystringconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.conditions.sourceipconfig": {
        "Required": "Conditional",
        "Type": "SourceIpConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.sourceipconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.conditions.values": {
        "Required": "No",
        "SampleValue": "TODO-Values",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.values",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.fixedresponseconfig.contenttype": {
        "Maximum": "32",
        "Minimum": "0",
        "Pattern": "^.{0,32}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listenerrule.fixedresponseconfig.ContentType",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.fixedresponseconfig.contenttype",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.fixedresponseconfig.messagebody": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": "^.{0,1024}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listenerrule.fixedresponseconfig.MessageBody",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.fixedresponseconfig.messagebody",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.fixedresponseconfig.statuscode": {
        "Pattern": "^(2|4|5)\\d\\d$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.fixedresponseconfig.statuscode",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.forwardconfig.targetgroups": {
        "Required": "No",
        "Type": "List of [TargetGroupTuple",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.forwardconfig.targetgroups",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.forwardconfig.targetgroupstickinessconfig": {
        "Required": "No",
        "Type": "TargetGroupStickinessConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.forwardconfig.targetgroupstickinessconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.hostheaderconfig.values": {
        "Required": "No",
        "SampleValue": "TODO-Values",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.hostheaderconfig.values",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.httpheaderconfig.httpheadername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.httpheaderconfig.httpheadername",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.httpheaderconfig.values": {
        "Required": "No",
        "SampleValue": "TODO-Values",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.httpheaderconfig.values",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.httprequestmethodconfig.values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.httprequestmethodconfig.values",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.pathpatternconfig.values": {
        "Required": "No",
        "SampleValue": "TODO-Values",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.pathpatternconfig.values",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.querystringconfig.values": {
        "Required": "No",
        "SampleValue": "TODO-Values",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.querystringconfig.values",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.querystringkeyvalue.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.querystringkeyvalue.key",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.querystringkeyvalue.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.querystringkeyvalue.value",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.redirectconfig.host": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listenerrule.redirectconfig.Host",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.redirectconfig.host",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.redirectconfig.path": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listenerrule.redirectconfig.Path",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.redirectconfig.path",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.redirectconfig.port": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.redirectconfig.port",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.redirectconfig.protocol": {
        "Pattern": "^(HTTPS?|#\\{protocol\\})$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.redirectconfig.protocol",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.redirectconfig.query": {
        "Maximum": "128",
        "Minimum": "0",
        "Pattern": "^.{0,128}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listenerrule.redirectconfig.Query",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.redirectconfig.query",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.redirectconfig.statuscode": {
        "Allowed values": "HTTP_301 | HTTP_302",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.redirectconfig.statuscode",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.rulecondition.field": {
        "Maximum": "64",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.rulecondition.field",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.rulecondition.hostheaderconfig": {
        "Required": "No",
        "Type": "HostHeaderConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.rulecondition.hostheaderconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.rulecondition.httpheaderconfig": {
        "Required": "Conditional",
        "Type": "HttpHeaderConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.rulecondition.httpheaderconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.rulecondition.httprequestmethodconfig": {
        "Required": "Conditional",
        "Type": "HttpRequestMethodConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.rulecondition.httprequestmethodconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.rulecondition.pathpatternconfig": {
        "Required": "No",
        "Type": "PathPatternConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.rulecondition.pathpatternconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.rulecondition.querystringconfig": {
        "Required": "Conditional",
        "Type": "QueryStringConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.rulecondition.querystringconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.rulecondition.sourceipconfig": {
        "Required": "Conditional",
        "Type": "SourceIpConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.rulecondition.sourceipconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.rulecondition.values": {
        "Required": "No",
        "SampleValue": "TODO-Values",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.rulecondition.values",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.sourceipconfig.values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.sourceipconfig.values",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.targetgroupstickinessconfig.durationseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.targetgroupstickinessconfig.durationseconds",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.targetgroupstickinessconfig.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.targetgroupstickinessconfig.enabled",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.targetgrouptuple.targetgrouparn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.targetgrouptuple.targetgrouparn",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.listenerrule.targetgrouptuple.weight": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.targetgrouptuple.weight",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.loadbalancer.loadbalancerattributes.key": {
        "Maximum": "256",
        "Pattern": "^[a-zA-Z0-9._]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.loadbalancer.loadbalancerattributes.key",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.loadbalancer.loadbalancerattributes.value": {
        "Maximum": "1024",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.loadbalancer.loadbalancerattributes.value",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.loadbalancer.subnetmapping.allocationid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.loadbalancer.subnetmapping.allocationid",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.loadbalancer.subnetmapping.ipv6address": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.loadbalancer.subnetmapping.ipv6address",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.loadbalancer.subnetmapping.privateipv4address": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.loadbalancer.subnetmapping.privateipv4address",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.loadbalancer.subnetmapping.subnetid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.loadbalancer.subnetmapping.subnetid",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.targetgroup.matcher.httpcode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.targetgroup.matcher.httpcode",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.targetgroup.targetdescription.availabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.targetgroup.targetdescription.availabilityzone",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.targetgroup.targetdescription.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.targetgroup.targetdescription.id",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.targetgroup.targetdescription.port": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "No",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.targetgroup.targetdescription.port",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.targetgroup.targetgroupattribute.key": {
        "Maximum": "256",
        "Pattern": "^[a-zA-Z0-9._]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.targetgroup.targetgroupattribute.key",
        "UpdateRequires": "Replacement"
    },
    "elasticloadbalancingv2.targetgroup.targetgroupattribute.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.targetgroup.targetgroupattribute.value",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.application.additionalinfo": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticmapreduce.cluster.application.additionalinfo",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.application.args": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.cluster.application.args",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.application.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.application.name",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.application.version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.application.version",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.autoscalingpolicy.constraints": {
        "Required": "Yes",
        "Type": "ScalingConstraints",
        "UniqueKey": "elasticmapreduce.cluster.autoscalingpolicy.constraints",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.autoscalingpolicy.rules": {
        "Required": "Yes",
        "Type": "List of [ScalingRule",
        "UniqueKey": "elasticmapreduce.cluster.autoscalingpolicy.rules",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.bootstrapactionconfig.name": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.bootstrapactionconfig.name",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.bootstrapactionconfig.scriptbootstrapaction": {
        "Required": "Yes",
        "Type": "ScriptBootstrapActionConfig",
        "UniqueKey": "elasticmapreduce.cluster.bootstrapactionconfig.scriptbootstrapaction",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.comparisonoperator": {
        "Allowed values": "GREATER_THAN | GREATER_THAN_OR_EQUAL | LESS_THAN | LESS_THAN_OR_EQUAL",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.comparisonoperator",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.dimensions": {
        "Required": "No",
        "Type": "List of [MetricDimension",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.dimensions",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.evaluationperiods": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.evaluationperiods",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.metricname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.metricname",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.namespace": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.namespace",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.period": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.period",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.statistic": {
        "Allowed values": "AVERAGE | MAXIMUM | MINIMUM | SAMPLE_COUNT | SUM",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.statistic",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.threshold": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.threshold",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.unit": {
        "Allowed values": "BITS | BITS_PER_SECOND | BYTES | BYTES_PER_SECOND | COUNT | COUNT_PER_SECOND | GIGA_BITS | GIGA_BITS_PER_SECOND | GIGA_BYTES | GIGA_BYTES_PER_SECOND | KILO_BITS | KILO_BITS_PER_SECOND | KILO_BYTES | KILO_BYTES_PER_SECOND | MEGA_BITS | MEGA_BITS_PER_SECOND | MEGA_BYTES | MEGA_BYTES_PER_SECOND | MICRO_SECONDS | MILLI_SECONDS | NONE | PERCENT | SECONDS | TERA_BITS | TERA_BITS_PER_SECOND | TERA_BYTES | TERA_BYTES_PER_SECOND",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.unit",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.computelimits.maximumcapacityunits": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.computelimits.maximumcapacityunits",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.computelimits.maximumcorecapacityunits": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.computelimits.maximumcorecapacityunits",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.computelimits.maximumondemandcapacityunits": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.computelimits.maximumondemandcapacityunits",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.computelimits.minimumcapacityunits": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.computelimits.minimumcapacityunits",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.computelimits.unittype": {
        "Allowed values": "InstanceFleetUnits | Instances | VCPU",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.computelimits.unittype",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.configuration.classification": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.configuration.classification",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.configuration.configurationproperties": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticmapreduce.cluster.configuration.configurationproperties",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.configuration.configurations": {
        "Required": "No",
        "Type": "List of [Configuration",
        "UniqueKey": "elasticmapreduce.cluster.configuration.configurations",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.ebsblockdeviceconfig.volumespecification": {
        "Required": "Yes",
        "Type": "VolumeSpecification",
        "UniqueKey": "elasticmapreduce.cluster.ebsblockdeviceconfig.volumespecification",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.ebsblockdeviceconfig.volumesperinstance": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.ebsblockdeviceconfig.volumesperinstance",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.ebsconfiguration.ebsblockdeviceconfigs": {
        "Required": "No",
        "Type": "List of [EbsBlockDeviceConfig",
        "UniqueKey": "elasticmapreduce.cluster.ebsconfiguration.ebsblockdeviceconfigs",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.ebsconfiguration.ebsoptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticmapreduce.cluster.ebsconfiguration.ebsoptimized",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.hadoopjarstepconfig.args": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.cluster.hadoopjarstepconfig.args",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.hadoopjarstepconfig.jar": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.hadoopjarstepconfig.jar",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.hadoopjarstepconfig.mainclass": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.hadoopjarstepconfig.mainclass",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.hadoopjarstepconfig.stepproperties": {
        "Required": "No",
        "Type": "List of [KeyValue",
        "UniqueKey": "elasticmapreduce.cluster.hadoopjarstepconfig.stepproperties",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancefleetconfig.instancetypeconfigs": {
        "Required": "No",
        "Type": "List of [InstanceTypeConfig",
        "UniqueKey": "elasticmapreduce.cluster.instancefleetconfig.instancetypeconfigs",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancefleetconfig.launchspecifications": {
        "Required": "No",
        "Type": "InstanceFleetProvisioningSpecifications",
        "UniqueKey": "elasticmapreduce.cluster.instancefleetconfig.launchspecifications",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancefleetconfig.name": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancefleetconfig.name",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancefleetconfig.targetondemandcapacity": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.instancefleetconfig.targetondemandcapacity",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancefleetconfig.targetspotcapacity": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.instancefleetconfig.targetspotcapacity",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancefleetprovisioningspecifications.ondemandspecification": {
        "Required": "No",
        "Type": "OnDemandProvisioningSpecification",
        "UniqueKey": "elasticmapreduce.cluster.instancefleetprovisioningspecifications.ondemandspecification",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancefleetprovisioningspecifications.spotspecification": {
        "Required": "No",
        "Type": "SpotProvisioningSpecification",
        "UniqueKey": "elasticmapreduce.cluster.instancefleetprovisioningspecifications.spotspecification",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.autoscalingpolicy": {
        "Required": "No",
        "Type": "AutoScalingPolicy",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.autoscalingpolicy",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.bidprice": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.bidprice",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.configurations": {
        "Required": "No",
        "Type": "List of [Configuration",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.configurations",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.ebsconfiguration": {
        "Required": "No",
        "Type": "EbsConfiguration",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.ebsconfiguration",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.instancecount": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.instancecount",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.instancetype": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.instancetype",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.market": {
        "Allowed values": "ON_DEMAND | SPOT",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.market",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.name": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.name",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancetypeconfig.bidprice": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancetypeconfig.bidprice",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancetypeconfig.bidpriceaspercentageofondemandprice": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "elasticmapreduce.cluster.instancetypeconfig.bidpriceaspercentageofondemandprice",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancetypeconfig.configurations": {
        "Required": "No",
        "Type": "List of [Configuration",
        "UniqueKey": "elasticmapreduce.cluster.instancetypeconfig.configurations",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancetypeconfig.ebsconfiguration": {
        "Required": "No",
        "Type": "EbsConfiguration",
        "UniqueKey": "elasticmapreduce.cluster.instancetypeconfig.ebsconfiguration",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancetypeconfig.instancetype": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancetypeconfig.instancetype",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancetypeconfig.weightedcapacity": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.instancetypeconfig.weightedcapacity",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.additionalmastersecuritygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.additionalmastersecuritygroups",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.additionalslavesecuritygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.additionalslavesecuritygroups",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.coreinstancefleet": {
        "Required": "No",
        "Type": "InstanceFleetConfig",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.coreinstancefleet",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.coreinstancegroup": {
        "Required": "No",
        "Type": "InstanceGroupConfig",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.coreinstancegroup",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.ec2keyname": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.ec2keyname",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.ec2subnetid": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.ec2subnetid",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.ec2subnetids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.ec2subnetids",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.emrmanagedmastersecuritygroup": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.emrmanagedmastersecuritygroup",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.emrmanagedslavesecuritygroup": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.emrmanagedslavesecuritygroup",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.hadoopversion": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.hadoopversion",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.keepjobflowalivewhennosteps": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.keepjobflowalivewhennosteps",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.masterinstancefleet": {
        "Required": "No",
        "Type": "InstanceFleetConfig",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.masterinstancefleet",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.masterinstancegroup": {
        "Required": "No",
        "Type": "InstanceGroupConfig",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.masterinstancegroup",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.placement": {
        "Required": "No",
        "Type": "PlacementType",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.placement",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.serviceaccesssecuritygroup": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.serviceaccesssecuritygroup",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.terminationprotected": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.terminationprotected",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.kerberosattributes.addomainjoinpassword": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.kerberosattributes.addomainjoinpassword",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.kerberosattributes.addomainjoinuser": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.kerberosattributes.addomainjoinuser",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.kerberosattributes.crossrealmtrustprincipalpassword": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.kerberosattributes.crossrealmtrustprincipalpassword",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.kerberosattributes.kdcadminpassword": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.kerberosattributes.kdcadminpassword",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.kerberosattributes.realm": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.kerberosattributes.realm",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.keyvalue.key": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.keyvalue.key",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.keyvalue.value": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.keyvalue.value",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.managedscalingpolicy.computelimits": {
        "Required": "No",
        "Type": "ComputeLimits",
        "UniqueKey": "elasticmapreduce.cluster.managedscalingpolicy.computelimits",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.metricdimension.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.metricdimension.key",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.metricdimension.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.metricdimension.value",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.ondemandprovisioningspecification.allocationstrategy": {
        "Allowed values": "lowest-price",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.ondemandprovisioningspecification.allocationstrategy",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.placementtype.availabilityzone": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.placementtype.availabilityzone",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scalingaction.market": {
        "Allowed values": "ON_DEMAND | SPOT",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.scalingaction.market",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scalingaction.simplescalingpolicyconfiguration": {
        "Required": "Yes",
        "Type": "SimpleScalingPolicyConfiguration",
        "UniqueKey": "elasticmapreduce.cluster.scalingaction.simplescalingpolicyconfiguration",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scalingconstraints.maxcapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.scalingconstraints.maxcapacity",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scalingconstraints.mincapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.scalingconstraints.mincapacity",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scalingrule.action": {
        "Required": "Yes",
        "Type": "ScalingAction",
        "UniqueKey": "elasticmapreduce.cluster.scalingrule.action",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scalingrule.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.scalingrule.description",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scalingrule.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.scalingrule.name",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scalingrule.trigger": {
        "Required": "Yes",
        "Type": "ScalingTrigger",
        "UniqueKey": "elasticmapreduce.cluster.scalingrule.trigger",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scalingtrigger.cloudwatchalarmdefinition": {
        "Required": "Yes",
        "Type": "CloudWatchAlarmDefinition",
        "UniqueKey": "elasticmapreduce.cluster.scalingtrigger.cloudwatchalarmdefinition",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scriptbootstrapactionconfig.args": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.cluster.scriptbootstrapactionconfig.args",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.scriptbootstrapactionconfig.path": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.scriptbootstrapactionconfig.path",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.simplescalingpolicyconfiguration.adjustmenttype": {
        "Allowed values": "CHANGE_IN_CAPACITY | EXACT_CAPACITY | PERCENT_CHANGE_IN_CAPACITY",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.simplescalingpolicyconfiguration.adjustmenttype",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.simplescalingpolicyconfiguration.cooldown": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.simplescalingpolicyconfiguration.cooldown",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.simplescalingpolicyconfiguration.scalingadjustment": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.simplescalingpolicyconfiguration.scalingadjustment",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.spotprovisioningspecification.allocationstrategy": {
        "Allowed values": "capacity-optimized",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.spotprovisioningspecification.allocationstrategy",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.spotprovisioningspecification.blockdurationminutes": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.spotprovisioningspecification.blockdurationminutes",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.spotprovisioningspecification.timeoutaction": {
        "Allowed values": "SWITCH_TO_ON_DEMAND | TERMINATE_CLUSTER",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.spotprovisioningspecification.timeoutaction",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.spotprovisioningspecification.timeoutdurationminutes": {
        "Minimum": "0",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.spotprovisioningspecification.timeoutdurationminutes",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.stepconfig.actiononfailure": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.stepconfig.actiononfailure",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.stepconfig.hadoopjarstep": {
        "Required": "Yes",
        "Type": "HadoopJarStepConfig",
        "UniqueKey": "elasticmapreduce.cluster.stepconfig.hadoopjarstep",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.stepconfig.name": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.stepconfig.name",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.volumespecification.iops": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.volumespecification.iops",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.volumespecification.sizeingb": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.volumespecification.sizeingb",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.volumespecification.volumetype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.volumespecification.volumetype",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.configuration.classification": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.configuration.classification",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.configuration.configurationproperties": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.configuration.configurationproperties",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.configuration.configurations": {
        "Required": "No",
        "Type": "List of [Configuration",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.configuration.configurations",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.ebsblockdeviceconfig.volumespecification": {
        "Required": "Yes",
        "Type": "VolumeSpecification",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.ebsblockdeviceconfig.volumespecification",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.ebsblockdeviceconfig.volumesperinstance": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.ebsblockdeviceconfig.volumesperinstance",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.ebsconfiguration.ebsblockdeviceconfigs": {
        "Required": "No",
        "Type": "List of [EbsBlockDeviceConfig",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.ebsconfiguration.ebsblockdeviceconfigs",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.ebsconfiguration.ebsoptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.ebsconfiguration.ebsoptimized",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancefleetprovisioningspecifications.ondemandspecification": {
        "Required": "No",
        "Type": "OnDemandProvisioningSpecification",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancefleetprovisioningspecifications.ondemandspecification",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancefleetprovisioningspecifications.spotspecification": {
        "Required": "No",
        "Type": "SpotProvisioningSpecification",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancefleetprovisioningspecifications.spotspecification",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancetypeconfig.bidprice": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancetypeconfig.bidprice",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancetypeconfig.bidpriceaspercentageofondemandprice": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancetypeconfig.bidpriceaspercentageofondemandprice",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancetypeconfig.configurations": {
        "Required": "No",
        "Type": "List of [Configuration",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancetypeconfig.configurations",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancetypeconfig.ebsconfiguration": {
        "Required": "No",
        "Type": "EbsConfiguration",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancetypeconfig.ebsconfiguration",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancetypeconfig.instancetype": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancetypeconfig.instancetype",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancetypeconfig.weightedcapacity": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancetypeconfig.weightedcapacity",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.ondemandprovisioningspecification.allocationstrategy": {
        "Allowed values": "lowest-price",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.ondemandprovisioningspecification.allocationstrategy",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.allocationstrategy": {
        "Allowed values": "capacity-optimized",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.allocationstrategy",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.blockdurationminutes": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.blockdurationminutes",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.timeoutaction": {
        "Allowed values": "SWITCH_TO_ON_DEMAND | TERMINATE_CLUSTER",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.timeoutaction",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.timeoutdurationminutes": {
        "Minimum": "0",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.timeoutdurationminutes",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.volumespecification.iops": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.volumespecification.iops",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.volumespecification.sizeingb": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.volumespecification.sizeingb",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.volumespecification.volumetype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.volumespecification.volumetype",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.autoscalingpolicy.constraints": {
        "Required": "Yes",
        "Type": "ScalingConstraints",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.autoscalingpolicy.constraints",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.autoscalingpolicy.rules": {
        "Required": "Yes",
        "Type": "List of [ScalingRule",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.autoscalingpolicy.rules",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.comparisonoperator": {
        "Allowed values": "GREATER_THAN | GREATER_THAN_OR_EQUAL | LESS_THAN | LESS_THAN_OR_EQUAL",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.comparisonoperator",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.dimensions": {
        "Required": "No",
        "Type": "List of [MetricDimension",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.dimensions",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.evaluationperiods": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.evaluationperiods",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.metricname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.metricname",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.namespace": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.namespace",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.period": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.period",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.statistic": {
        "Allowed values": "AVERAGE | MAXIMUM | MINIMUM | SAMPLE_COUNT | SUM",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.statistic",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.threshold": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.threshold",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.unit": {
        "Allowed values": "BITS | BITS_PER_SECOND | BYTES | BYTES_PER_SECOND | COUNT | COUNT_PER_SECOND | GIGA_BITS | GIGA_BITS_PER_SECOND | GIGA_BYTES | GIGA_BYTES_PER_SECOND | KILO_BITS | KILO_BITS_PER_SECOND | KILO_BYTES | KILO_BYTES_PER_SECOND | MEGA_BITS | MEGA_BITS_PER_SECOND | MEGA_BYTES | MEGA_BYTES_PER_SECOND | MICRO_SECONDS | MILLI_SECONDS | NONE | PERCENT | SECONDS | TERA_BITS | TERA_BITS_PER_SECOND | TERA_BYTES | TERA_BYTES_PER_SECOND",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.unit",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.metricdimension.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.metricdimension.key",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.metricdimension.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.metricdimension.value",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.scalingaction.market": {
        "Allowed values": "ON_DEMAND | SPOT",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingaction.market",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.scalingaction.simplescalingpolicyconfiguration": {
        "Required": "Yes",
        "Type": "SimpleScalingPolicyConfiguration",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingaction.simplescalingpolicyconfiguration",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.scalingconstraints.maxcapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingconstraints.maxcapacity",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.scalingconstraints.mincapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingconstraints.mincapacity",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.scalingrule.action": {
        "Required": "Yes",
        "Type": "ScalingAction",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingrule.action",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.scalingrule.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingrule.description",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.scalingrule.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingrule.name",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.scalingrule.trigger": {
        "Required": "Yes",
        "Type": "ScalingTrigger",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingrule.trigger",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.scalingtrigger.cloudwatchalarmdefinition": {
        "Required": "Yes",
        "Type": "CloudWatchAlarmDefinition",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingtrigger.cloudwatchalarmdefinition",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.adjustmenttype": {
        "Allowed values": "CHANGE_IN_CAPACITY | EXACT_CAPACITY | PERCENT_CHANGE_IN_CAPACITY",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.adjustmenttype",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.cooldown": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.cooldown",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.scalingadjustment": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.scalingadjustment",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.step.hadoopjarstepconfig.args": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.step.hadoopjarstepconfig.args",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.step.hadoopjarstepconfig.jar": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.step.hadoopjarstepconfig.jar",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.step.hadoopjarstepconfig.mainclass": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.step.hadoopjarstepconfig.mainclass",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.step.hadoopjarstepconfig.stepproperties": {
        "Required": "No",
        "Type": "List of [KeyValue",
        "UniqueKey": "elasticmapreduce.step.hadoopjarstepconfig.stepproperties",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.step.keyvalue.key": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.step.keyvalue.key",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.step.keyvalue.value": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.step.keyvalue.value",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.advancedsecurityoptionsinput.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.advancedsecurityoptionsinput.enabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.advancedsecurityoptionsinput.internaluserdatabaseenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.advancedsecurityoptionsinput.internaluserdatabaseenabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.advancedsecurityoptionsinput.masteruseroptions": {
        "Required": "No",
        "Type": "MasterUserOptions",
        "UniqueKey": "elasticsearch.domain.advancedsecurityoptionsinput.masteruseroptions",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.cognitooptions.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.cognitooptions.enabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.cognitooptions.identitypoolid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.cognitooptions.identitypoolid",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.cognitooptions.rolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.cognitooptions.rolearn",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.cognitooptions.userpoolid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.cognitooptions.userpoolid",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.domainendpointoptions.customendpoint": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.domainendpointoptions.customendpoint",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.domainendpointoptions.customendpointcertificatearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.domainendpointoptions.customendpointcertificatearn",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.domainendpointoptions.customendpointenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.domainendpointoptions.customendpointenabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.domainendpointoptions.enforcehttps": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.domainendpointoptions.enforcehttps",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.domainendpointoptions.tlssecuritypolicy": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.domainendpointoptions.tlssecuritypolicy",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.ebsoptions.ebsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.ebsoptions.ebsenabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.ebsoptions.iops": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticsearch.domain.ebsoptions.iops",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.ebsoptions.volumesize": {
        "Required": "No",
        "SampleValue": "TODO-VolumeSize",
        "UniqueKey": "elasticsearch.domain.ebsoptions.volumesize",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.ebsoptions.volumetype": {
        "Required": "No",
        "SampleValue": "TODO-VolumeType",
        "UniqueKey": "elasticsearch.domain.ebsoptions.volumetype",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.dedicatedmastercount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.dedicatedmastercount",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.dedicatedmasterenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.dedicatedmasterenabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.dedicatedmastertype": {
        "Required": "No",
        "SampleValue": "TODO-DedicatedMasterType",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.dedicatedmastertype",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.instancecount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.instancecount",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.instancetype": {
        "Required": "No",
        "SampleValue": "TODO-InstanceType",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.instancetype",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.warmcount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.warmcount",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.warmenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.warmenabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.warmtype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.warmtype",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.zoneawarenessconfig": {
        "Required": "No",
        "Type": "ZoneAwarenessConfig",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.zoneawarenessconfig",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.zoneawarenessenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.zoneawarenessenabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.encryptionatrestoptions.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.encryptionatrestoptions.enabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.encryptionatrestoptions.kmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.encryptionatrestoptions.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.logpublishingoption.cloudwatchlogsloggrouparn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.logpublishingoption.cloudwatchlogsloggrouparn",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.logpublishingoption.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.logpublishingoption.enabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.masteruseroptions.masteruserarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.masteruseroptions.masteruserarn",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.masteruseroptions.masterusername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.masteruseroptions.masterusername",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.masteruseroptions.masteruserpassword": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.masteruseroptions.masteruserpassword",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.nodetonodeencryptionoptions.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.nodetonodeencryptionoptions.enabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.snapshotoptions.automatedsnapshotstarthour": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticsearch.domain.snapshotoptions.automatedsnapshotstarthour",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.vpcoptions.securitygroupids": {
        "Required": "No",
        "SampleValue": "TODO-SecurityGroupIds",
        "UniqueKey": "elasticsearch.domain.vpcoptions.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.vpcoptions.subnetids": {
        "Required": "No",
        "SampleValue": "TODO-SubnetIds",
        "UniqueKey": "elasticsearch.domain.vpcoptions.subnetids",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.zoneawarenessconfig.availabilityzonecount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticsearch.domain.zoneawarenessconfig.availabilityzonecount",
        "UpdateRequires": "Replacement"
    },
    "emr.cluster.configuration.classification": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "emr.cluster.configuration.classification",
        "UpdateRequires": "Replacement"
    },
    "emr.cluster.configuration.configurationproperties": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "emr.cluster.configuration.configurationproperties",
        "UpdateRequires": "Replacement"
    },
    "emr.cluster.configuration.configurations": {
        "Required": "No",
        "Type": "List of [Configuration",
        "UniqueKey": "emr.cluster.configuration.configurations",
        "UpdateRequires": "Replacement"
    },
    "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification": {
        "Required": "Yes",
        "Type": "VolumeSpecification",
        "UniqueKey": "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification",
        "UpdateRequires": "Replacement"
    },
    "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.iops": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.iops",
        "UpdateRequires": "Replacement"
    },
    "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.sizeingb": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.sizeingb",
        "UpdateRequires": "Replacement"
    },
    "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.volumetype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.volumetype",
        "UpdateRequires": "Replacement"
    },
    "emr.ebsconfiguration.ebsblockdeviceconfig.volumesperinstance": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "emr.ebsconfiguration.ebsblockdeviceconfig.volumesperinstance",
        "UpdateRequires": "Replacement"
    },
    "emr.ebsconfiguration.ebsblockdeviceconfigs": {
        "Required": "No",
        "Type": "List of [EbsBlockDeviceConfig",
        "UniqueKey": "emr.ebsconfiguration.ebsblockdeviceconfigs",
        "UpdateRequires": "Replacement"
    },
    "emr.ebsconfiguration.ebsoptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "emr.ebsconfiguration.ebsoptimized",
        "UpdateRequires": "Replacement"
    },
    "emrcontainers.virtualcluster.containerinfo.eksinfo": {
        "Required": "Yes",
        "Type": "EksInfo",
        "UniqueKey": "emrcontainers.virtualcluster.containerinfo.eksinfo",
        "UpdateRequires": "Replacement"
    },
    "emrcontainers.virtualcluster.containerprovider.id": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[0-9A-Za-z][A-Za-z0-9\\-_]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "emrcontainers.virtualcluster.containerprovider.id",
        "UpdateRequires": "Replacement"
    },
    "emrcontainers.virtualcluster.containerprovider.info": {
        "Required": "Yes",
        "Type": "ContainerInfo",
        "UniqueKey": "emrcontainers.virtualcluster.containerprovider.info",
        "UpdateRequires": "Replacement"
    },
    "emrcontainers.virtualcluster.containerprovider.type": {
        "Allowed values": "EKS",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "emrcontainers.virtualcluster.containerprovider.type",
        "UpdateRequires": "Replacement"
    },
    "emrcontainers.virtualcluster.eksinfo.namespace": {
        "Maximum": "63",
        "Minimum": "1",
        "Pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "emrcontainers.virtualcluster.eksinfo.namespace",
        "UpdateRequires": "Replacement"
    },
    "events.eventbuspolicy.condition.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.eventbuspolicy.condition.key",
        "UpdateRequires": "Replacement"
    },
    "events.eventbuspolicy.condition.type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.eventbuspolicy.condition.type",
        "UpdateRequires": "Replacement"
    },
    "events.eventbuspolicy.condition.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.eventbuspolicy.condition.value",
        "UpdateRequires": "Replacement"
    },
    "events.rule.awsvpcconfiguration.assignpublicip": {
        "Allowed values": "DISABLED | ENABLED",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.rule.awsvpcconfiguration.assignpublicip",
        "UpdateRequires": "Replacement"
    },
    "events.rule.awsvpcconfiguration.securitygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "events.rule.awsvpcconfiguration.securitygroups",
        "UpdateRequires": "Replacement"
    },
    "events.rule.awsvpcconfiguration.subnets": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "events.rule.awsvpcconfiguration.subnets",
        "UpdateRequires": "Replacement"
    },
    "events.rule.batcharrayproperties.size": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "events.rule.batcharrayproperties.size",
        "UpdateRequires": "Replacement"
    },
    "events.rule.batchparameters.arrayproperties": {
        "Required": "No",
        "Type": "BatchArrayProperties",
        "UniqueKey": "events.rule.batchparameters.arrayproperties",
        "UpdateRequires": "Replacement"
    },
    "events.rule.batchparameters.jobdefinition": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "events.rule.batchparameters.jobdefinition",
        "UpdateRequires": "Replacement"
    },
    "events.rule.batchparameters.jobname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "events.rule.batchparameters.jobname",
        "UpdateRequires": "Replacement"
    },
    "events.rule.batchparameters.retrystrategy": {
        "Required": "No",
        "Type": "BatchRetryStrategy",
        "UniqueKey": "events.rule.batchparameters.retrystrategy",
        "UpdateRequires": "Replacement"
    },
    "events.rule.batchretrystrategy.attempts": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "events.rule.batchretrystrategy.attempts",
        "UpdateRequires": "Replacement"
    },
    "events.rule.deadletterconfig.arn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.rule.deadletterconfig.arn",
        "UpdateRequires": "Replacement"
    },
    "events.rule.ecsparameters.group": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.rule.ecsparameters.group",
        "UpdateRequires": "Replacement"
    },
    "events.rule.ecsparameters.launchtype": {
        "Required": "No",
        "SampleValue": "TODO-LaunchType",
        "UniqueKey": "events.rule.ecsparameters.launchtype",
        "UpdateRequires": "Replacement"
    },
    "events.rule.ecsparameters.networkconfiguration": {
        "Required": "No",
        "Type": "NetworkConfiguration",
        "UniqueKey": "events.rule.ecsparameters.networkconfiguration",
        "UpdateRequires": "Replacement"
    },
    "events.rule.ecsparameters.platformversion": {
        "Required": "No",
        "SampleValue": "TODO-PlatformVersion",
        "UniqueKey": "events.rule.ecsparameters.platformversion",
        "UpdateRequires": "Replacement"
    },
    "events.rule.ecsparameters.taskcount": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "events.rule.ecsparameters.taskcount",
        "UpdateRequires": "Replacement"
    },
    "events.rule.ecsparameters.taskdefinitionarn": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "^.{1,1600}$",
        "Required": "Yes",
        "SampleValue": "TODO-events.rule.ecsparameters.TaskDefinitionArn",
        "Type": "String",
        "UniqueKey": "events.rule.ecsparameters.taskdefinitionarn",
        "UpdateRequires": "Replacement"
    },
    "events.rule.httpparameters.headerparameters": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "events.rule.httpparameters.headerparameters",
        "UpdateRequires": "Replacement"
    },
    "events.rule.httpparameters.pathparametervalues": {
        "Required": "No",
        "SampleValue": "TODO-PathParameterValues",
        "UniqueKey": "events.rule.httpparameters.pathparametervalues",
        "UpdateRequires": "Replacement"
    },
    "events.rule.httpparameters.querystringparameters": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "events.rule.httpparameters.querystringparameters",
        "UpdateRequires": "Replacement"
    },
    "events.rule.inputtransformer.inputpathsmap": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "events.rule.inputtransformer.inputpathsmap",
        "UpdateRequires": "Replacement"
    },
    "events.rule.inputtransformer.inputtemplate": {
        "Maximum": "8192",
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "events.rule.inputtransformer.inputtemplate",
        "UpdateRequires": "Replacement"
    },
    "events.rule.kinesisparameters.partitionkeypath": {
        "Maximum": "256",
        "Required": "Yes",
        "UniqueKey": "events.rule.kinesisparameters.partitionkeypath",
        "UpdateRequires": "Replacement"
    },
    "events.rule.networkconfiguration.awsvpcconfiguration": {
        "Required": "No",
        "Type": "AwsVpcConfiguration",
        "UniqueKey": "events.rule.networkconfiguration.awsvpcconfiguration",
        "UpdateRequires": "Replacement"
    },
    "events.rule.redshiftdataparameters.database": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "([a-zA-Z0-9]+)|(\\$(\\.[\\w_-]+(\\[(\\d+|\\*)\\])*)*)",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "events.rule.redshiftdataparameters.database",
        "UpdateRequires": "Replacement"
    },
    "events.rule.redshiftdataparameters.dbuser": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "([a-zA-Z0-9]+)|(\\$(\\.[\\w_-]+(\\[(\\d+|\\*)\\])*)*)",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.rule.redshiftdataparameters.dbuser",
        "UpdateRequires": "Replacement"
    },
    "events.rule.redshiftdataparameters.secretmanagerarn": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "(^arn:aws([a-z]|\\-)*:secretsmanager:[a-z0-9-.]+:.*)|(\\$(\\.[\\w_-]+(\\[(\\d+|\\*)\\])*)*)",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.rule.redshiftdataparameters.secretmanagerarn",
        "UpdateRequires": "Replacement"
    },
    "events.rule.redshiftdataparameters.sql": {
        "Maximum": "100000",
        "Minimum": "1",
        "Pattern": "^.{1,100000}$",
        "Required": "Yes",
        "SampleValue": "TODO-events.rule.redshiftdataparameters.Sql",
        "Type": "String",
        "UniqueKey": "events.rule.redshiftdataparameters.sql",
        "UpdateRequires": "Replacement"
    },
    "events.rule.redshiftdataparameters.statementname": {
        "Maximum": "500",
        "Minimum": "1",
        "Pattern": "^.{1,500}$",
        "Required": "No",
        "SampleValue": "TODO-events.rule.redshiftdataparameters.StatementName",
        "Type": "String",
        "UniqueKey": "events.rule.redshiftdataparameters.statementname",
        "UpdateRequires": "Replacement"
    },
    "events.rule.redshiftdataparameters.withevent": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "events.rule.redshiftdataparameters.withevent",
        "UpdateRequires": "Replacement"
    },
    "events.rule.retrypolicy.maximumeventageinseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "events.rule.retrypolicy.maximumeventageinseconds",
        "UpdateRequires": "Replacement"
    },
    "events.rule.retrypolicy.maximumretryattempts": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "events.rule.retrypolicy.maximumretryattempts",
        "UpdateRequires": "Replacement"
    },
    "events.rule.runcommandparameters.runcommandtargets": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of [RunCommandTarget",
        "UniqueKey": "events.rule.runcommandparameters.runcommandtargets",
        "UpdateRequires": "Replacement"
    },
    "events.rule.runcommandtarget.key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*$",
        "Required": "Yes",
        "UniqueKey": "events.rule.runcommandtarget.key",
        "UpdateRequires": "Replacement"
    },
    "events.rule.runcommandtarget.values": {
        "Maximum": "50",
        "Required": "Yes",
        "UniqueKey": "events.rule.runcommandtarget.values",
        "UpdateRequires": "Replacement"
    },
    "events.rule.sqsparameters.messagegroupid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "events.rule.sqsparameters.messagegroupid",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.arn": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "^.{1,1600}$",
        "Required": "Yes",
        "SampleValue": "TODO-events.rule.target.Arn",
        "Type": "String",
        "UniqueKey": "events.rule.target.arn",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.batchparameters": {
        "Required": "No",
        "SampleValue": "TODO-BatchParameters",
        "UniqueKey": "events.rule.target.batchparameters",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.deadletterconfig": {
        "Required": "No",
        "Type": "DeadLetterConfig",
        "UniqueKey": "events.rule.target.deadletterconfig",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.ecsparameters": {
        "Required": "No",
        "SampleValue": "TODO-EcsParameters",
        "UniqueKey": "events.rule.target.ecsparameters",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.httpparameters": {
        "Required": "No",
        "Type": "HttpParameters",
        "UniqueKey": "events.rule.target.httpparameters",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.id": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "[\\.\\-_A-Za-z0-9]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "events.rule.target.id",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.input": {
        "Maximum": "8192",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.rule.target.input",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.inputpath": {
        "Maximum": "256",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.rule.target.inputpath",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.inputtransformer": {
        "Required": "No",
        "Type": "InputTransformer",
        "UniqueKey": "events.rule.target.inputtransformer",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.kinesisparameters": {
        "Required": "No",
        "Type": "KinesisParameters",
        "UniqueKey": "events.rule.target.kinesisparameters",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.redshiftdataparameters": {
        "Required": "No",
        "Type": "RedshiftDataParameters",
        "UniqueKey": "events.rule.target.redshiftdataparameters",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.retrypolicy": {
        "Required": "No",
        "Type": "RetryPolicy",
        "UniqueKey": "events.rule.target.retrypolicy",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.rolearn": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "^.{1,1600}$",
        "Required": "No",
        "SampleValue": "TODO-events.rule.target.RoleArn",
        "Type": "String",
        "UniqueKey": "events.rule.target.rolearn",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.runcommandparameters": {
        "Required": "No",
        "Type": "RunCommandParameters",
        "UniqueKey": "events.rule.target.runcommandparameters",
        "UpdateRequires": "Replacement"
    },
    "events.rule.target.sqsparameters": {
        "Required": "No",
        "Type": "SqsParameters",
        "UniqueKey": "events.rule.target.sqsparameters",
        "UpdateRequires": "Replacement"
    },
    "eventschemas.discoverer.tagsentry.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eventschemas.discoverer.tagsentry.key",
        "UpdateRequires": "Replacement"
    },
    "eventschemas.discoverer.tagsentry.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eventschemas.discoverer.tagsentry.value",
        "UpdateRequires": "Replacement"
    },
    "eventschemas.registry.tagsentry.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eventschemas.registry.tagsentry.key",
        "UpdateRequires": "Replacement"
    },
    "eventschemas.registry.tagsentry.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eventschemas.registry.tagsentry.value",
        "UpdateRequires": "Replacement"
    },
    "eventschemas.schema.tagsentry.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eventschemas.schema.tagsentry.key",
        "UpdateRequires": "Replacement"
    },
    "eventschemas.schema.tagsentry.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eventschemas.schema.tagsentry.value",
        "UpdateRequires": "Replacement"
    },
    "fms.policy.iemap.account": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "fms.policy.iemap.account",
        "UpdateRequires": "Replacement"
    },
    "fms.policy.iemap.orgunit": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "fms.policy.iemap.orgunit",
        "UpdateRequires": "Replacement"
    },
    "fms.policy.policytag.key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "fms.policy.policytag.key",
        "UpdateRequires": "Replacement"
    },
    "fms.policy.policytag.value": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "fms.policy.policytag.value",
        "UpdateRequires": "Replacement"
    },
    "fms.policy.resourcetag.key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "fms.policy.resourcetag.key",
        "UpdateRequires": "Replacement"
    },
    "fms.policy.resourcetag.value": {
        "Maximum": "256",
        "Pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fms.policy.resourcetag.value",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.autoimportpolicy": {
        "Allowed values": "NEW | NEW_CHANGED | NONE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.autoimportpolicy",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.automaticbackupretentiondays": {
        "Maximum": "90",
        "Minimum": "0",
        "Required": "No",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.automaticbackupretentiondays",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.copytagstobackups": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.copytagstobackups",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.dailyautomaticbackupstarttime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.dailyautomaticbackupstarttime",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.deploymenttype": {
        "Allowed values": "PERSISTENT_1 | SCRATCH_1 | SCRATCH_2",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.deploymenttype",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.drivecachetype": {
        "Allowed values": "NONE | READ",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.drivecachetype",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.exportpath": {
        "Maximum": "4357",
        "Minimum": "3",
        "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{3,4357}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.exportpath",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.importedfilechunksize": {
        "Maximum": "512000",
        "Minimum": "1",
        "Pattern": "^[1,512000]}$",
        "Required": "No",
        "SampleValue": "1...512000",
        "Type": "Integer",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.importedfilechunksize",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.importpath": {
        "Maximum": "4357",
        "Minimum": "3",
        "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{3,4357}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.importpath",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.perunitstoragethroughput": {
        "Maximum": "200",
        "Minimum": "12",
        "Pattern": "^[12,200]}$",
        "Required": "Conditional",
        "SampleValue": "12...200",
        "Type": "Integer",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.perunitstoragethroughput",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.weeklymaintenancestarttime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.weeklymaintenancestarttime",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.activedirectoryid": {
        "Maximum": "12",
        "Minimum": "12",
        "Pattern": "^d-[0-9a-f]{10}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.activedirectoryid",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.automaticbackupretentiondays": {
        "Maximum": "90",
        "Minimum": "0",
        "Pattern": "^[0,90]}$",
        "Required": "No",
        "SampleValue": "0...90",
        "Type": "Integer",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.automaticbackupretentiondays",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.copytagstobackups": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.copytagstobackups",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.dailyautomaticbackupstarttime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.dailyautomaticbackupstarttime",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.deploymenttype": {
        "Allowed values": "MULTI_AZ_1 | SINGLE_AZ_1 | SINGLE_AZ_2",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.deploymenttype",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.preferredsubnetid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.preferredsubnetid",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration": {
        "Required": "No",
        "Type": "SelfManagedActiveDirectoryConfiguration",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.dnsips": {
        "Maximum": "2",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.dnsips",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.domainname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{1,255}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.domainname",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.filesystemadministratorsgroup": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{1,256}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.filesystemadministratorsgroup",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.organizationalunitdistinguishedname": {
        "Maximum": "2000",
        "Minimum": "1",
        "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{1,2000}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.organizationalunitdistinguishedname",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.password": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.password",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.username": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{1,256}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.username",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.throughputcapacity": {
        "Maximum": "2048",
        "Minimum": "8",
        "Required": "Yes",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.throughputcapacity",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.weeklymaintenancestarttime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.weeklymaintenancestarttime",
        "UpdateRequires": "Replacement"
    },
    "gamelift.alias.routingstrategy.fleetid": {
        "Pattern": "^fleet-\\S+",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "gamelift.alias.routingstrategy.fleetid",
        "UpdateRequires": "Replacement"
    },
    "gamelift.alias.routingstrategy.message": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "gamelift.alias.routingstrategy.message",
        "UpdateRequires": "Replacement"
    },
    "gamelift.alias.routingstrategy.type": {
        "Required": "No",
        "SampleValue": "TODO-Type",
        "UniqueKey": "gamelift.alias.routingstrategy.type",
        "UpdateRequires": "Replacement"
    },
    "gamelift.build.storagelocation.bucket": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.build.storagelocation.bucket",
        "UpdateRequires": "Replacement"
    },
    "gamelift.build.storagelocation.key": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.build.storagelocation.key",
        "UpdateRequires": "Replacement"
    },
    "gamelift.build.storagelocation.objectversion": {
        "Minimum": "1",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "gamelift.build.storagelocation.objectversion",
        "UpdateRequires": "Replacement"
    },
    "gamelift.build.storagelocation.rolearn": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.build.storagelocation.rolearn",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.certificateconfiguration.certificatetype": {
        "Allowed values": "DISABLED | GENERATED",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.fleet.certificateconfiguration.certificatetype",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.ec2inboundpermission.fromport": {
        "Maximum": "60000",
        "Minimum": "1",
        "Pattern": "^[1,60000]}$",
        "Required": "Yes",
        "SampleValue": "1...60000",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.ec2inboundpermission.fromport",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.ec2inboundpermission.iprange": {
        "Pattern": "[^\\s]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.fleet.ec2inboundpermission.iprange",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.ec2inboundpermission.protocol": {
        "Allowed values": "TCP | UDP",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.fleet.ec2inboundpermission.protocol",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.ec2inboundpermission.toport": {
        "Maximum": "60000",
        "Minimum": "1",
        "Pattern": "^[1,60000]}$",
        "Required": "Yes",
        "SampleValue": "1...60000",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.ec2inboundpermission.toport",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.resourcecreationlimitpolicy.newgamesessionspercreator": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.resourcecreationlimitpolicy.newgamesessionspercreator",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.resourcecreationlimitpolicy.policyperiodinminutes": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.resourcecreationlimitpolicy.policyperiodinminutes",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.runtimeconfiguration.gamesessionactivationtimeoutseconds": {
        "Maximum": "600",
        "Minimum": "1",
        "Pattern": "^[1,600]}$",
        "Required": "No",
        "SampleValue": "1...600",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.runtimeconfiguration.gamesessionactivationtimeoutseconds",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.runtimeconfiguration.maxconcurrentgamesessionactivations": {
        "Maximum": "2147483647",
        "Minimum": "1",
        "Pattern": "^[1,2147483647]}$",
        "Required": "No",
        "SampleValue": "1...2147483647",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.runtimeconfiguration.maxconcurrentgamesessionactivations",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.runtimeconfiguration.serverprocesses": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of [ServerProcess",
        "UniqueKey": "gamelift.fleet.runtimeconfiguration.serverprocesses",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.serverprocess.concurrentexecutions": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.serverprocess.concurrentexecutions",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.serverprocess.launchpath": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-gamelift.fleet.serverprocess.LaunchPath",
        "Type": "String",
        "UniqueKey": "gamelift.fleet.serverprocess.launchpath",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.serverprocess.parameters": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-gamelift.fleet.serverprocess.Parameters",
        "Type": "String",
        "UniqueKey": "gamelift.fleet.serverprocess.parameters",
        "UpdateRequires": "Replacement"
    },
    "gamelift.gameservergroup.autoscalingpolicy.estimatedinstancewarmup": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "gamelift.gameservergroup.autoscalingpolicy.estimatedinstancewarmup",
        "UpdateRequires": "Replacement"
    },
    "gamelift.gameservergroup.autoscalingpolicy.targettrackingconfiguration": {
        "Required": "Yes",
        "Type": "TargetTrackingConfiguration",
        "UniqueKey": "gamelift.gameservergroup.autoscalingpolicy.targettrackingconfiguration",
        "UpdateRequires": "Replacement"
    },
    "gamelift.gameservergroup.instancedefinition.instancetype": {
        "Allowed values": "c4.2xlarge | c4.4xlarge | c4.8xlarge | c4.large | c4.xlarge | c5.12xlarge | c5.18xlarge | c5.24xlarge | c5.2xlarge | c5.4xlarge | c5.9xlarge | c5.large | c5.xlarge | m4.10xlarge | m4.2xlarge | m4.4xlarge | m4.large | m4.xlarge | m5.12xlarge | m5.16xlarge | m5.24xlarge | m5.2xlarge | m5.4xlarge | m5.8xlarge | m5.large | m5.xlarge | r4.16xlarge | r4.2xlarge | r4.4xlarge | r4.8xlarge | r4.large | r4.xlarge | r5.12xlarge | r5.16xlarge | r5.24xlarge | r5.2xlarge | r5.4xlarge | r5.8xlarge | r5.large | r5.xlarge",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.gameservergroup.instancedefinition.instancetype",
        "UpdateRequires": "Replacement"
    },
    "gamelift.gameservergroup.instancedefinition.weightedcapacity": {
        "Maximum": "3",
        "Minimum": "1",
        "Pattern": "^[\\u0031-\\u0039][\\u0030-\\u0039]{0,2}$",
        "Required": "No",
        "UniqueKey": "gamelift.gameservergroup.instancedefinition.weightedcapacity",
        "UpdateRequires": "Replacement"
    },
    "gamelift.gameservergroup.instancedefinitions.instancedefinitions": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "gamelift.gameservergroup.instancedefinitions.instancedefinitions",
        "UpdateRequires": "Replacement"
    },
    "gamelift.gameservergroup.launchtemplate.launchtemplateid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "gamelift.gameservergroup.launchtemplate.launchtemplateid",
        "UpdateRequires": "Replacement"
    },
    "gamelift.gameservergroup.launchtemplate.launchtemplatename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "gamelift.gameservergroup.launchtemplate.launchtemplatename",
        "UpdateRequires": "Replacement"
    },
    "gamelift.gameservergroup.launchtemplate.version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "gamelift.gameservergroup.launchtemplate.version",
        "UpdateRequires": "Replacement"
    },
    "gamelift.gameservergroup.tags.tags": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "gamelift.gameservergroup.tags.tags",
        "UpdateRequires": "Replacement"
    },
    "gamelift.gameservergroup.targettrackingconfiguration.targetvalue": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "gamelift.gameservergroup.targettrackingconfiguration.targetvalue",
        "UpdateRequires": "Replacement"
    },
    "gamelift.gameservergroup.vpcsubnets.vpcsubnets": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "gamelift.gameservergroup.vpcsubnets.vpcsubnets",
        "UpdateRequires": "Replacement"
    },
    "gamelift.gamesessionqueue.destination.destinationarn": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9:/-]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "gamelift.gamesessionqueue.destination.destinationarn",
        "UpdateRequires": "Replacement"
    },
    "gamelift.gamesessionqueue.playerlatencypolicy.maximumindividualplayerlatencymilliseconds": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "gamelift.gamesessionqueue.playerlatencypolicy.maximumindividualplayerlatencymilliseconds",
        "UpdateRequires": "Replacement"
    },
    "gamelift.gamesessionqueue.playerlatencypolicy.policydurationseconds": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "gamelift.gamesessionqueue.playerlatencypolicy.policydurationseconds",
        "UpdateRequires": "Replacement"
    },
    "gamelift.matchmakingconfiguration.gameproperty.key": {
        "Maximum": "32",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.matchmakingconfiguration.gameproperty.key",
        "UpdateRequires": "Replacement"
    },
    "gamelift.matchmakingconfiguration.gameproperty.value": {
        "Maximum": "96",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.matchmakingconfiguration.gameproperty.value",
        "UpdateRequires": "Replacement"
    },
    "gamelift.script.s3location.bucket": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.script.s3location.bucket",
        "UpdateRequires": "Replacement"
    },
    "gamelift.script.s3location.key": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.script.s3location.key",
        "UpdateRequires": "Replacement"
    },
    "gamelift.script.s3location.objectversion": {
        "Minimum": "1",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "gamelift.script.s3location.objectversion",
        "UpdateRequires": "Replacement"
    },
    "gamelift.script.s3location.rolearn": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.script.s3location.rolearn",
        "UpdateRequires": "Replacement"
    },
    "globalaccelerator.endpointgroup.endpointconfiguration.clientippreservationenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "globalaccelerator.endpointgroup.endpointconfiguration.clientippreservationenabled",
        "UpdateRequires": "Replacement"
    },
    "globalaccelerator.endpointgroup.endpointconfiguration.endpointid": {
        "Maximum": "255",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "globalaccelerator.endpointgroup.endpointconfiguration.endpointid",
        "UpdateRequires": "Replacement"
    },
    "globalaccelerator.endpointgroup.endpointconfiguration.weight": {
        "Maximum": "255",
        "Minimum": "0",
        "Required": "No",
        "UniqueKey": "globalaccelerator.endpointgroup.endpointconfiguration.weight",
        "UpdateRequires": "Replacement"
    },
    "globalaccelerator.endpointgroup.portoverride.endpointport": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "Yes",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "globalaccelerator.endpointgroup.portoverride.endpointport",
        "UpdateRequires": "Replacement"
    },
    "globalaccelerator.endpointgroup.portoverride.listenerport": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "Yes",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "globalaccelerator.endpointgroup.portoverride.listenerport",
        "UpdateRequires": "Replacement"
    },
    "globalaccelerator.listener.portrange.fromport": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "Yes",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "globalaccelerator.listener.portrange.fromport",
        "UpdateRequires": "Replacement"
    },
    "globalaccelerator.listener.portrange.toport": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "Yes",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "globalaccelerator.listener.portrange.toport",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.csvclassifier.allowsinglecolumn": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.classifier.csvclassifier.allowsinglecolumn",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.csvclassifier.containsheader": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.csvclassifier.containsheader",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.csvclassifier.delimiter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.csvclassifier.delimiter",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.csvclassifier.disablevaluetrimming": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.classifier.csvclassifier.disablevaluetrimming",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.csvclassifier.header": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.classifier.csvclassifier.header",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.csvclassifier.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.csvclassifier.name",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.csvclassifier.quotesymbol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.csvclassifier.quotesymbol",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.grokclassifier.classification": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.classifier.grokclassifier.classification",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.grokclassifier.custompatterns": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.grokclassifier.custompatterns",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.grokclassifier.grokpattern": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.classifier.grokclassifier.grokpattern",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.grokclassifier.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.grokclassifier.name",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.jsonclassifier.jsonpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.classifier.jsonclassifier.jsonpath",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.jsonclassifier.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.jsonclassifier.name",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.xmlclassifier.classification": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.classifier.xmlclassifier.classification",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.xmlclassifier.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.xmlclassifier.name",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.xmlclassifier.rowtag": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.classifier.xmlclassifier.rowtag",
        "UpdateRequires": "Replacement"
    },
    "glue.connection.connectioninput.connectionproperties": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.connection.connectioninput.connectionproperties",
        "UpdateRequires": "Replacement"
    },
    "glue.connection.connectioninput.connectiontype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.connection.connectioninput.connectiontype",
        "UpdateRequires": "Replacement"
    },
    "glue.connection.connectioninput.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.connection.connectioninput.description",
        "UpdateRequires": "Replacement"
    },
    "glue.connection.connectioninput.matchcriteria": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.connection.connectioninput.matchcriteria",
        "UpdateRequires": "Replacement"
    },
    "glue.connection.connectioninput.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.connection.connectioninput.name",
        "UpdateRequires": "Replacement"
    },
    "glue.connection.connectioninput.physicalconnectionrequirements": {
        "Required": "No",
        "Type": "PhysicalConnectionRequirements",
        "UniqueKey": "glue.connection.connectioninput.physicalconnectionrequirements",
        "UpdateRequires": "Replacement"
    },
    "glue.connection.physicalconnectionrequirements.availabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.connection.physicalconnectionrequirements.availabilityzone",
        "UpdateRequires": "Replacement"
    },
    "glue.connection.physicalconnectionrequirements.securitygroupidlist": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.connection.physicalconnectionrequirements.securitygroupidlist",
        "UpdateRequires": "Replacement"
    },
    "glue.connection.physicalconnectionrequirements.subnetid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.connection.physicalconnectionrequirements.subnetid",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.catalogtarget.databasename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.catalogtarget.databasename",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.catalogtarget.tables": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.crawler.catalogtarget.tables",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.dynamodbtarget.path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.dynamodbtarget.path",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.jdbctarget.connectionname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.jdbctarget.connectionname",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.jdbctarget.exclusions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.crawler.jdbctarget.exclusions",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.jdbctarget.path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.jdbctarget.path",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.s3target.connectionname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.s3target.connectionname",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.s3target.exclusions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.crawler.s3target.exclusions",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.s3target.path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.s3target.path",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.schedule.scheduleexpression": {
        "Required": "No",
        "SampleValue": "TODO-ScheduleExpression",
        "UniqueKey": "glue.crawler.schedule.scheduleexpression",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.schemachangepolicy.deletebehavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.schemachangepolicy.deletebehavior",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.schemachangepolicy.updatebehavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.schemachangepolicy.updatebehavior",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.targets.catalogtargets": {
        "Required": "No",
        "Type": "List of [CatalogTarget",
        "UniqueKey": "glue.crawler.targets.catalogtargets",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.targets.dynamodbtargets": {
        "Required": "No",
        "Type": "List of [DynamoDBTarget",
        "UniqueKey": "glue.crawler.targets.dynamodbtargets",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.targets.jdbctargets": {
        "Required": "No",
        "Type": "List of [JdbcTarget",
        "UniqueKey": "glue.crawler.targets.jdbctargets",
        "UpdateRequires": "Replacement"
    },
    "glue.crawler.targets.s3targets": {
        "Required": "No",
        "Type": "List of [S3Target",
        "UniqueKey": "glue.crawler.targets.s3targets",
        "UpdateRequires": "Replacement"
    },
    "glue.database.databaseidentifier.catalogid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.database.databaseidentifier.catalogid",
        "UpdateRequires": "Replacement"
    },
    "glue.database.databaseidentifier.databasename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.database.databaseidentifier.databasename",
        "UpdateRequires": "Replacement"
    },
    "glue.database.databaseinput.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.database.databaseinput.description",
        "UpdateRequires": "Replacement"
    },
    "glue.database.databaseinput.locationuri": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.database.databaseinput.locationuri",
        "UpdateRequires": "Replacement"
    },
    "glue.database.databaseinput.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.database.databaseinput.name",
        "UpdateRequires": "Replacement"
    },
    "glue.database.databaseinput.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.database.databaseinput.parameters",
        "UpdateRequires": "Replacement"
    },
    "glue.database.databaseinput.targetdatabase": {
        "Required": "No",
        "Type": "DatabaseIdentifier",
        "UniqueKey": "glue.database.databaseinput.targetdatabase",
        "UpdateRequires": "Replacement"
    },
    "glue.database.datalakeprincipal.datalakeprincipalidentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.database.datalakeprincipal.datalakeprincipalidentifier",
        "UpdateRequires": "Replacement"
    },
    "glue.database.principalprivileges.permissions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.database.principalprivileges.permissions",
        "UpdateRequires": "Replacement"
    },
    "glue.database.principalprivileges.principal": {
        "Required": "No",
        "Type": "DataLakePrincipal",
        "UniqueKey": "glue.database.principalprivileges.principal",
        "UpdateRequires": "Replacement"
    },
    "glue.datacatalogencryptionsettings.connectionpasswordencryption.kmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.datacatalogencryptionsettings.connectionpasswordencryption.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "glue.datacatalogencryptionsettings.connectionpasswordencryption.returnconnectionpasswordencrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.datacatalogencryptionsettings.connectionpasswordencryption.returnconnectionpasswordencrypted",
        "UpdateRequires": "Replacement"
    },
    "glue.datacatalogencryptionsettings.datacatalogencryptionsettings.connectionpasswordencryption": {
        "Required": "No",
        "Type": "ConnectionPasswordEncryption",
        "UniqueKey": "glue.datacatalogencryptionsettings.datacatalogencryptionsettings.connectionpasswordencryption",
        "UpdateRequires": "Replacement"
    },
    "glue.datacatalogencryptionsettings.datacatalogencryptionsettings.encryptionatrest": {
        "Required": "No",
        "Type": "EncryptionAtRest",
        "UniqueKey": "glue.datacatalogencryptionsettings.datacatalogencryptionsettings.encryptionatrest",
        "UpdateRequires": "Replacement"
    },
    "glue.datacatalogencryptionsettings.encryptionatrest.catalogencryptionmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.datacatalogencryptionsettings.encryptionatrest.catalogencryptionmode",
        "UpdateRequires": "Replacement"
    },
    "glue.datacatalogencryptionsettings.encryptionatrest.sseawskmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.datacatalogencryptionsettings.encryptionatrest.sseawskmskeyid",
        "UpdateRequires": "Replacement"
    },
    "glue.job.connectionslist.connections": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.job.connectionslist.connections",
        "UpdateRequires": "Replacement"
    },
    "glue.job.executionproperty.maxconcurrentruns": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "glue.job.executionproperty.maxconcurrentruns",
        "UpdateRequires": "Replacement"
    },
    "glue.job.jobcommand.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.job.jobcommand.name",
        "UpdateRequires": "Replacement"
    },
    "glue.job.jobcommand.pythonversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.job.jobcommand.pythonversion",
        "UpdateRequires": "Replacement"
    },
    "glue.job.jobcommand.scriptlocation": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.job.jobcommand.scriptlocation",
        "UpdateRequires": "Replacement"
    },
    "glue.job.notificationproperty.notifydelayafter": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.job.notificationproperty.notifydelayafter",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.inputrecordtables.gluetables": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "glue.mltransform.inputrecordtables.gluetables",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.inputrecordtables.gluetables.catalogid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.mltransform.inputrecordtables.gluetables.catalogid",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.inputrecordtables.gluetables.connectionname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.mltransform.inputrecordtables.gluetables.connectionname",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.inputrecordtables.gluetables.databasename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.mltransform.inputrecordtables.gluetables.databasename",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.inputrecordtables.gluetables.tablename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.mltransform.inputrecordtables.gluetables.tablename",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.transformencryption.mluserdataencryption": {
        "Required": "No",
        "Type": "MLUserDataEncryption",
        "UniqueKey": "glue.mltransform.transformencryption.mluserdataencryption",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.transformencryption.mluserdataencryption.kmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.mltransform.transformencryption.mluserdataencryption.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.transformencryption.mluserdataencryption.mluserdataencryptionmode": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.mltransform.transformencryption.mluserdataencryption.mluserdataencryptionmode",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.transformencryption.taskrunsecurityconfigurationname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.mltransform.transformencryption.taskrunsecurityconfigurationname",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.transformparameters.findmatchesparameters": {
        "Required": "No",
        "Type": "FindMatchesParameters",
        "UniqueKey": "glue.mltransform.transformparameters.findmatchesparameters",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.transformparameters.findmatchesparameters.accuracycosttradeoff": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "glue.mltransform.transformparameters.findmatchesparameters.accuracycosttradeoff",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.transformparameters.findmatchesparameters.enforceprovidedlabels": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.mltransform.transformparameters.findmatchesparameters.enforceprovidedlabels",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.transformparameters.findmatchesparameters.precisionrecalltradeoff": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "glue.mltransform.transformparameters.findmatchesparameters.precisionrecalltradeoff",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.transformparameters.findmatchesparameters.primarykeycolumnname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.mltransform.transformparameters.findmatchesparameters.primarykeycolumnname",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.transformparameters.transformtype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.mltransform.transformparameters.transformtype",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.column.comment": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.column.comment",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.column.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.partition.column.name",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.column.type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.column.type",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.order.column": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.partition.order.column",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.order.sortorder": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.partition.order.sortorder",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.partitioninput.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.partition.partitioninput.parameters",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.partitioninput.storagedescriptor": {
        "Required": "No",
        "Type": "StorageDescriptor",
        "UniqueKey": "glue.partition.partitioninput.storagedescriptor",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.partitioninput.values": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "glue.partition.partitioninput.values",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.schemaid.registryname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.schemaid.registryname",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.schemaid.schemaarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.schemaid.schemaarn",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.schemaid.schemaname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.schemaid.schemaname",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.schemareference.schameversionid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.schemareference.schameversionid",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.schemareference.schemaid": {
        "Required": "No",
        "Type": "SchemaId",
        "UniqueKey": "glue.partition.schemareference.schemaid",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.schemareference.schemaversionnumber": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.partition.schemareference.schemaversionnumber",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.serdeinfo.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.serdeinfo.name",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.serdeinfo.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.partition.serdeinfo.parameters",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.serdeinfo.serializationlibrary": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.serdeinfo.serializationlibrary",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.skewedinfo.skewedcolumnnames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.partition.skewedinfo.skewedcolumnnames",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.skewedinfo.skewedcolumnvaluelocationmaps": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.partition.skewedinfo.skewedcolumnvaluelocationmaps",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.skewedinfo.skewedcolumnvalues": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.partition.skewedinfo.skewedcolumnvalues",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.bucketcolumns": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.partition.storagedescriptor.bucketcolumns",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.columns": {
        "Required": "No",
        "Type": "List of [Column",
        "UniqueKey": "glue.partition.storagedescriptor.columns",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.compressed": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.partition.storagedescriptor.compressed",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.inputformat": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.storagedescriptor.inputformat",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.location": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.storagedescriptor.location",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.numberofbuckets": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "glue.partition.storagedescriptor.numberofbuckets",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.outputformat": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.storagedescriptor.outputformat",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.partition.storagedescriptor.parameters",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.schemareference": {
        "Required": "No",
        "Type": "SchemaReference",
        "UniqueKey": "glue.partition.storagedescriptor.schemareference",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.serdeinfo": {
        "Required": "No",
        "Type": "SerdeInfo",
        "UniqueKey": "glue.partition.storagedescriptor.serdeinfo",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.skewedinfo": {
        "Required": "No",
        "Type": "SkewedInfo",
        "UniqueKey": "glue.partition.storagedescriptor.skewedinfo",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.sortcolumns": {
        "Required": "No",
        "Type": "List of [Order",
        "UniqueKey": "glue.partition.storagedescriptor.sortcolumns",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.storagedescriptor.storedassubdirectories": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.partition.storagedescriptor.storedassubdirectories",
        "UpdateRequires": "Replacement"
    },
    "glue.schema.registry.arn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.schema.registry.arn",
        "UpdateRequires": "Replacement"
    },
    "glue.schema.registry.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.schema.registry.name",
        "UpdateRequires": "Replacement"
    },
    "glue.schema.schemaversion.islatest": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.schema.schemaversion.islatest",
        "UpdateRequires": "Replacement"
    },
    "glue.schema.schemaversion.versionnumber": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.schema.schemaversion.versionnumber",
        "UpdateRequires": "Replacement"
    },
    "glue.schemaversion.schema.registryname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.schemaversion.schema.registryname",
        "UpdateRequires": "Replacement"
    },
    "glue.schemaversion.schema.schemaarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.schemaversion.schema.schemaarn",
        "UpdateRequires": "Replacement"
    },
    "glue.schemaversion.schema.schemaname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.schemaversion.schema.schemaname",
        "UpdateRequires": "Replacement"
    },
    "glue.securityconfiguration.cloudwatchencryption.cloudwatchencryptionmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.securityconfiguration.cloudwatchencryption.cloudwatchencryptionmode",
        "UpdateRequires": "Replacement"
    },
    "glue.securityconfiguration.cloudwatchencryption.kmskeyarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.securityconfiguration.cloudwatchencryption.kmskeyarn",
        "UpdateRequires": "Replacement"
    },
    "glue.securityconfiguration.encryptionconfiguration.cloudwatchencryption": {
        "Required": "No",
        "Type": "CloudWatchEncryption",
        "UniqueKey": "glue.securityconfiguration.encryptionconfiguration.cloudwatchencryption",
        "UpdateRequires": "Replacement"
    },
    "glue.securityconfiguration.encryptionconfiguration.jobbookmarksencryption": {
        "Required": "No",
        "Type": "JobBookmarksEncryption",
        "UniqueKey": "glue.securityconfiguration.encryptionconfiguration.jobbookmarksencryption",
        "UpdateRequires": "Replacement"
    },
    "glue.securityconfiguration.encryptionconfiguration.s3encryptions": {
        "Required": "No",
        "Type": "S3Encryptions",
        "UniqueKey": "glue.securityconfiguration.encryptionconfiguration.s3encryptions",
        "UpdateRequires": "Replacement"
    },
    "glue.securityconfiguration.jobbookmarksencryption.jobbookmarksencryptionmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.securityconfiguration.jobbookmarksencryption.jobbookmarksencryptionmode",
        "UpdateRequires": "Replacement"
    },
    "glue.securityconfiguration.jobbookmarksencryption.kmskeyarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.securityconfiguration.jobbookmarksencryption.kmskeyarn",
        "UpdateRequires": "Replacement"
    },
    "glue.securityconfiguration.s3encryption.kmskeyarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.securityconfiguration.s3encryption.kmskeyarn",
        "UpdateRequires": "Replacement"
    },
    "glue.securityconfiguration.s3encryption.s3encryptionmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.securityconfiguration.s3encryption.s3encryptionmode",
        "UpdateRequires": "Replacement"
    },
    "glue.table.column.comment": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.column.comment",
        "UpdateRequires": "Replacement"
    },
    "glue.table.column.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.table.column.name",
        "UpdateRequires": "Replacement"
    },
    "glue.table.column.type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.column.type",
        "UpdateRequires": "Replacement"
    },
    "glue.table.order.column": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.table.order.column",
        "UpdateRequires": "Replacement"
    },
    "glue.table.order.sortorder": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "glue.table.order.sortorder",
        "UpdateRequires": "Replacement"
    },
    "glue.table.schemaid.registryname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.schemaid.registryname",
        "UpdateRequires": "Replacement"
    },
    "glue.table.schemaid.schemaarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.schemaid.schemaarn",
        "UpdateRequires": "Replacement"
    },
    "glue.table.schemaid.schemaname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.schemaid.schemaname",
        "UpdateRequires": "Replacement"
    },
    "glue.table.schemareference.schameversionid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.schemareference.schameversionid",
        "UpdateRequires": "Replacement"
    },
    "glue.table.schemareference.schemaid": {
        "Required": "No",
        "Type": "SchemaId",
        "UniqueKey": "glue.table.schemareference.schemaid",
        "UpdateRequires": "Replacement"
    },
    "glue.table.schemareference.schemaversionnumber": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.table.schemareference.schemaversionnumber",
        "UpdateRequires": "Replacement"
    },
    "glue.table.serdeinfo.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.serdeinfo.name",
        "UpdateRequires": "Replacement"
    },
    "glue.table.serdeinfo.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.table.serdeinfo.parameters",
        "UpdateRequires": "Replacement"
    },
    "glue.table.serdeinfo.serializationlibrary": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.serdeinfo.serializationlibrary",
        "UpdateRequires": "Replacement"
    },
    "glue.table.skewedinfo.skewedcolumnnames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.table.skewedinfo.skewedcolumnnames",
        "UpdateRequires": "Replacement"
    },
    "glue.table.skewedinfo.skewedcolumnvaluelocationmaps": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.table.skewedinfo.skewedcolumnvaluelocationmaps",
        "UpdateRequires": "Replacement"
    },
    "glue.table.skewedinfo.skewedcolumnvalues": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.table.skewedinfo.skewedcolumnvalues",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.bucketcolumns": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.table.storagedescriptor.bucketcolumns",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.columns": {
        "Required": "No",
        "Type": "List of [Column",
        "UniqueKey": "glue.table.storagedescriptor.columns",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.compressed": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.table.storagedescriptor.compressed",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.inputformat": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.storagedescriptor.inputformat",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.location": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.storagedescriptor.location",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.numberofbuckets": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.table.storagedescriptor.numberofbuckets",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.outputformat": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.storagedescriptor.outputformat",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.table.storagedescriptor.parameters",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.schemareference": {
        "Required": "No",
        "Type": "SchemaReference",
        "UniqueKey": "glue.table.storagedescriptor.schemareference",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.serdeinfo": {
        "Required": "No",
        "Type": "SerdeInfo",
        "UniqueKey": "glue.table.storagedescriptor.serdeinfo",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.skewedinfo": {
        "Required": "No",
        "Type": "SkewedInfo",
        "UniqueKey": "glue.table.storagedescriptor.skewedinfo",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.sortcolumns": {
        "Required": "No",
        "Type": "List of [Order",
        "UniqueKey": "glue.table.storagedescriptor.sortcolumns",
        "UpdateRequires": "Replacement"
    },
    "glue.table.storagedescriptor.storedassubdirectories": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.table.storagedescriptor.storedassubdirectories",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableidentifier.catalogid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableidentifier.catalogid",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableidentifier.databasename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableidentifier.databasename",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableidentifier.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableidentifier.name",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableinput.description",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableinput.name",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.owner": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableinput.owner",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.table.tableinput.parameters",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.partitionkeys": {
        "Required": "No",
        "Type": "List of [Column",
        "UniqueKey": "glue.table.tableinput.partitionkeys",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.retention": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.table.tableinput.retention",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.storagedescriptor": {
        "Required": "No",
        "Type": "StorageDescriptor",
        "UniqueKey": "glue.table.tableinput.storagedescriptor",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.tabletype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableinput.tabletype",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.targettable": {
        "Required": "No",
        "Type": "TableIdentifier",
        "UniqueKey": "glue.table.tableinput.targettable",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.viewexpandedtext": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableinput.viewexpandedtext",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.vieworiginaltext": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableinput.vieworiginaltext",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.action.arguments": {
        "Required": "No",
        "SampleValue": "TODO-Arguments",
        "UniqueKey": "glue.trigger.action.arguments",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.action.crawlername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.action.crawlername",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.action.jobname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.action.jobname",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.action.notificationproperty": {
        "Required": "No",
        "Type": "NotificationProperty",
        "UniqueKey": "glue.trigger.action.notificationproperty",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.action.securityconfiguration": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.action.securityconfiguration",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.action.timeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.trigger.action.timeout",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.condition.crawlername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.condition.crawlername",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.condition.crawlstate": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.condition.crawlstate",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.condition.jobname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.condition.jobname",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.condition.logicaloperator": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.condition.logicaloperator",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.condition.state": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.condition.state",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.notificationproperty.notifydelayafter": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.trigger.notificationproperty.notifydelayafter",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.predicate.conditions": {
        "Required": "No",
        "Type": "List of [Condition",
        "UniqueKey": "glue.trigger.predicate.conditions",
        "UpdateRequires": "Replacement"
    },
    "glue.trigger.predicate.logical": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.predicate.logical",
        "UpdateRequires": "Replacement"
    },
    "greengrass.connectordefinition.connector.connectorarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.connectordefinition.connector.connectorarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.connectordefinition.connector.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.connectordefinition.connector.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.connectordefinition.connector.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "greengrass.connectordefinition.connector.parameters",
        "UpdateRequires": "Replacement"
    },
    "greengrass.connectordefinition.connectordefinitionversion.connectors": {
        "Required": "Yes",
        "Type": "List of [Connector",
        "UniqueKey": "greengrass.connectordefinition.connectordefinitionversion.connectors",
        "UpdateRequires": "Replacement"
    },
    "greengrass.connectordefinitionversion.connector.connectorarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.connectordefinitionversion.connector.connectorarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.connectordefinitionversion.connector.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.connectordefinitionversion.connector.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.connectordefinitionversion.connector.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "greengrass.connectordefinitionversion.connector.parameters",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinition.core.certificatearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.coredefinition.core.certificatearn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinition.core.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.coredefinition.core.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinition.core.syncshadow": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.coredefinition.core.syncshadow",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinition.core.thingarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.coredefinition.core.thingarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinition.coredefinitionversion.cores": {
        "Required": "Yes",
        "Type": "List of [Core",
        "UniqueKey": "greengrass.coredefinition.coredefinitionversion.cores",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinitionversion.core.certificatearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.coredefinitionversion.core.certificatearn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinitionversion.core.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.coredefinitionversion.core.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinitionversion.core.syncshadow": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.coredefinitionversion.core.syncshadow",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinitionversion.core.thingarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.coredefinitionversion.core.thingarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinition.device.certificatearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.devicedefinition.device.certificatearn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinition.device.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.devicedefinition.device.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinition.device.syncshadow": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.devicedefinition.device.syncshadow",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinition.device.thingarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.devicedefinition.device.thingarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinition.devicedefinitionversion.devices": {
        "Required": "Yes",
        "Type": "List of [Device",
        "UniqueKey": "greengrass.devicedefinition.devicedefinitionversion.devices",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinitionversion.device.certificatearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.devicedefinitionversion.device.certificatearn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinitionversion.device.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.devicedefinitionversion.device.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinitionversion.device.syncshadow": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.devicedefinitionversion.device.syncshadow",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinitionversion.device.thingarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.devicedefinitionversion.device.thingarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.defaultconfig.execution": {
        "Required": "Yes",
        "Type": "Execution",
        "UniqueKey": "greengrass.functiondefinition.defaultconfig.execution",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.environment.accesssysfs": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.functiondefinition.environment.accesssysfs",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.environment.execution": {
        "Required": "No",
        "Type": "Execution",
        "UniqueKey": "greengrass.functiondefinition.environment.execution",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.environment.resourceaccesspolicies": {
        "Required": "No",
        "Type": "List of [ResourceAccessPolicy",
        "UniqueKey": "greengrass.functiondefinition.environment.resourceaccesspolicies",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.environment.variables": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "greengrass.functiondefinition.environment.variables",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.execution.isolationmode": {
        "Required": "No",
        "SampleValue": "TODO-IsolationMode",
        "UniqueKey": "greengrass.functiondefinition.execution.isolationmode",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.execution.runas": {
        "Required": "No",
        "SampleValue": "TODO-RunAs",
        "UniqueKey": "greengrass.functiondefinition.execution.runas",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.function.functionarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.function.functionarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.function.functionconfiguration": {
        "Required": "Yes",
        "Type": "FunctionConfiguration",
        "UniqueKey": "greengrass.functiondefinition.function.functionconfiguration",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.function.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.function.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functionconfiguration.encodingtype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.encodingtype",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functionconfiguration.environment": {
        "Required": "No",
        "Type": "Environment",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.environment",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functionconfiguration.execargs": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.execargs",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functionconfiguration.executable": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.executable",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functionconfiguration.memorysize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.memorysize",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functionconfiguration.pinned": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.pinned",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functionconfiguration.timeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.timeout",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functiondefinitionversion.defaultconfig": {
        "Required": "No",
        "Type": "DefaultConfig",
        "UniqueKey": "greengrass.functiondefinition.functiondefinitionversion.defaultconfig",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functiondefinitionversion.functions": {
        "Required": "Yes",
        "Type": "List of [Function",
        "UniqueKey": "greengrass.functiondefinition.functiondefinitionversion.functions",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.resourceaccesspolicy.permission": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.resourceaccesspolicy.permission",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.resourceaccesspolicy.resourceid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.resourceaccesspolicy.resourceid",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.runas.gid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinition.runas.gid",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.runas.uid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinition.runas.uid",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.defaultconfig.execution": {
        "Required": "Yes",
        "Type": "Execution",
        "UniqueKey": "greengrass.functiondefinitionversion.defaultconfig.execution",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.environment.accesssysfs": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.functiondefinitionversion.environment.accesssysfs",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.environment.execution": {
        "Required": "No",
        "Type": "Execution",
        "UniqueKey": "greengrass.functiondefinitionversion.environment.execution",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.environment.resourceaccesspolicies": {
        "Required": "No",
        "Type": "List of [ResourceAccessPolicy",
        "UniqueKey": "greengrass.functiondefinitionversion.environment.resourceaccesspolicies",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.environment.variables": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "greengrass.functiondefinitionversion.environment.variables",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.execution.isolationmode": {
        "Required": "No",
        "SampleValue": "TODO-IsolationMode",
        "UniqueKey": "greengrass.functiondefinitionversion.execution.isolationmode",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.execution.runas": {
        "Required": "No",
        "SampleValue": "TODO-RunAs",
        "UniqueKey": "greengrass.functiondefinitionversion.execution.runas",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.function.functionarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.function.functionarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.function.functionconfiguration": {
        "Required": "Yes",
        "Type": "FunctionConfiguration",
        "UniqueKey": "greengrass.functiondefinitionversion.function.functionconfiguration",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.function.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.function.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.encodingtype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.encodingtype",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.environment": {
        "Required": "No",
        "Type": "Environment",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.environment",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.execargs": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.execargs",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.executable": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.executable",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.memorysize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.memorysize",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.pinned": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.pinned",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.timeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.timeout",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.resourceaccesspolicy.permission": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.resourceaccesspolicy.permission",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.resourceaccesspolicy.resourceid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.resourceaccesspolicy.resourceid",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.runas.gid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinitionversion.runas.gid",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.runas.uid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinitionversion.runas.uid",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.connectordefinitionversionarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.connectordefinitionversionarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.coredefinitionversionarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.coredefinitionversionarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.devicedefinitionversionarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.devicedefinitionversionarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.functiondefinitionversionarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.functiondefinitionversionarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.loggerdefinitionversionarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.loggerdefinitionversionarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.resourcedefinitionversionarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.resourcedefinitionversionarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.subscriptiondefinitionversionarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.subscriptiondefinitionversionarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinition.logger.component": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinition.logger.component",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinition.logger.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinition.logger.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinition.logger.level": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinition.logger.level",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinition.logger.space": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.loggerdefinition.logger.space",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinition.logger.type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinition.logger.type",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinition.loggerdefinitionversion.loggers": {
        "Required": "Yes",
        "Type": "List of [Logger",
        "UniqueKey": "greengrass.loggerdefinition.loggerdefinitionversion.loggers",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinitionversion.logger.component": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinitionversion.logger.component",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinitionversion.logger.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinitionversion.logger.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinitionversion.logger.level": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinitionversion.logger.level",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinitionversion.logger.space": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.loggerdefinitionversion.logger.space",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinitionversion.logger.type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinitionversion.logger.type",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.groupownersetting.autoaddgroupowner": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.resourcedefinition.groupownersetting.autoaddgroupowner",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.groupownersetting.groupowner": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.groupownersetting.groupowner",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.localdeviceresourcedata.groupownersetting": {
        "Required": "No",
        "Type": "GroupOwnerSetting",
        "UniqueKey": "greengrass.resourcedefinition.localdeviceresourcedata.groupownersetting",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.localdeviceresourcedata.sourcepath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.localdeviceresourcedata.sourcepath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.localvolumeresourcedata.destinationpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.localvolumeresourcedata.destinationpath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.localvolumeresourcedata.groupownersetting": {
        "Required": "No",
        "Type": "GroupOwnerSetting",
        "UniqueKey": "greengrass.resourcedefinition.localvolumeresourcedata.groupownersetting",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.localvolumeresourcedata.sourcepath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.localvolumeresourcedata.sourcepath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedatacontainer.localdeviceresourcedata": {
        "Required": "No",
        "Type": "LocalDeviceResourceData",
        "UniqueKey": "greengrass.resourcedefinition.resourcedatacontainer.localdeviceresourcedata",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedatacontainer.localvolumeresourcedata": {
        "Required": "No",
        "Type": "LocalVolumeResourceData",
        "UniqueKey": "greengrass.resourcedefinition.resourcedatacontainer.localvolumeresourcedata",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedatacontainer.s3machinelearningmodelresourcedata": {
        "Required": "No",
        "Type": "S3MachineLearningModelResourceData",
        "UniqueKey": "greengrass.resourcedefinition.resourcedatacontainer.s3machinelearningmodelresourcedata",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedatacontainer.sagemakermachinelearningmodelresourcedata": {
        "Required": "No",
        "Type": "SageMakerMachineLearningModelResourceData",
        "UniqueKey": "greengrass.resourcedefinition.resourcedatacontainer.sagemakermachinelearningmodelresourcedata",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedatacontainer.secretsmanagersecretresourcedata": {
        "Required": "No",
        "Type": "SecretsManagerSecretResourceData",
        "UniqueKey": "greengrass.resourcedefinition.resourcedatacontainer.secretsmanagersecretresourcedata",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedefinitionversion.resources": {
        "Required": "Yes",
        "Type": "List of [ResourceInstance",
        "UniqueKey": "greengrass.resourcedefinition.resourcedefinitionversion.resources",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedownloadownersetting.groupowner": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.resourcedownloadownersetting.groupowner",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedownloadownersetting.grouppermission": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.resourcedownloadownersetting.grouppermission",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourceinstance.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.resourceinstance.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourceinstance.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.resourceinstance.name",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourceinstance.resourcedatacontainer": {
        "Required": "Yes",
        "Type": "ResourceDataContainer",
        "UniqueKey": "greengrass.resourcedefinition.resourceinstance.resourcedatacontainer",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.destinationpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.destinationpath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.ownersetting": {
        "Required": "No",
        "SampleValue": "TODO-OwnerSetting",
        "UniqueKey": "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.ownersetting",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.s3uri": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.s3uri",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.destinationpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.destinationpath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.ownersetting": {
        "Required": "No",
        "SampleValue": "TODO-OwnerSetting",
        "UniqueKey": "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.ownersetting",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.sagemakerjobarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.sagemakerjobarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.secretsmanagersecretresourcedata.additionalstaginglabelstodownload": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "greengrass.resourcedefinition.secretsmanagersecretresourcedata.additionalstaginglabelstodownload",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.secretsmanagersecretresourcedata.arn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.secretsmanagersecretresourcedata.arn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.groupownersetting.autoaddgroupowner": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.resourcedefinitionversion.groupownersetting.autoaddgroupowner",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.groupownersetting.groupowner": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.groupownersetting.groupowner",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.localdeviceresourcedata.groupownersetting": {
        "Required": "No",
        "Type": "GroupOwnerSetting",
        "UniqueKey": "greengrass.resourcedefinitionversion.localdeviceresourcedata.groupownersetting",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.localdeviceresourcedata.sourcepath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.localdeviceresourcedata.sourcepath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.localvolumeresourcedata.destinationpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.localvolumeresourcedata.destinationpath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.localvolumeresourcedata.groupownersetting": {
        "Required": "No",
        "Type": "GroupOwnerSetting",
        "UniqueKey": "greengrass.resourcedefinitionversion.localvolumeresourcedata.groupownersetting",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.localvolumeresourcedata.sourcepath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.localvolumeresourcedata.sourcepath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourcedatacontainer.localdeviceresourcedata": {
        "Required": "No",
        "Type": "LocalDeviceResourceData",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourcedatacontainer.localdeviceresourcedata",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourcedatacontainer.localvolumeresourcedata": {
        "Required": "No",
        "Type": "LocalVolumeResourceData",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourcedatacontainer.localvolumeresourcedata",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourcedatacontainer.s3machinelearningmodelresourcedata": {
        "Required": "No",
        "Type": "S3MachineLearningModelResourceData",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourcedatacontainer.s3machinelearningmodelresourcedata",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourcedatacontainer.sagemakermachinelearningmodelresourcedata": {
        "Required": "No",
        "Type": "SageMakerMachineLearningModelResourceData",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourcedatacontainer.sagemakermachinelearningmodelresourcedata",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourcedatacontainer.secretsmanagersecretresourcedata": {
        "Required": "No",
        "Type": "SecretsManagerSecretResourceData",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourcedatacontainer.secretsmanagersecretresourcedata",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourcedownloadownersetting.groupowner": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourcedownloadownersetting.groupowner",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourcedownloadownersetting.grouppermission": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourcedownloadownersetting.grouppermission",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourceinstance.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourceinstance.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourceinstance.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourceinstance.name",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourceinstance.resourcedatacontainer": {
        "Required": "Yes",
        "Type": "ResourceDataContainer",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourceinstance.resourcedatacontainer",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.destinationpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.destinationpath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.ownersetting": {
        "Required": "No",
        "SampleValue": "TODO-OwnerSetting",
        "UniqueKey": "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.ownersetting",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.s3uri": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.s3uri",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.destinationpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.destinationpath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.ownersetting": {
        "Required": "No",
        "SampleValue": "TODO-OwnerSetting",
        "UniqueKey": "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.ownersetting",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.sagemakerjobarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.sagemakerjobarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.secretsmanagersecretresourcedata.additionalstaginglabelstodownload": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "greengrass.resourcedefinitionversion.secretsmanagersecretresourcedata.additionalstaginglabelstodownload",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.secretsmanagersecretresourcedata.arn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.secretsmanagersecretresourcedata.arn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinition.subscription.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinition.subscription.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinition.subscription.source": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinition.subscription.source",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinition.subscription.subject": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinition.subscription.subject",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinition.subscription.target": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinition.subscription.target",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinition.subscriptiondefinitionversion.subscriptions": {
        "Required": "Yes",
        "Type": "List of [Subscription",
        "UniqueKey": "greengrass.subscriptiondefinition.subscriptiondefinitionversion.subscriptions",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinitionversion.subscription.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinitionversion.subscription.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinitionversion.subscription.source": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinitionversion.subscription.source",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinitionversion.subscription.subject": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinitionversion.subscription.subject",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinitionversion.subscription.target": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinitionversion.subscription.target",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.componentdependencyrequirement.dependencytype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrassv2.componentversion.componentdependencyrequirement.dependencytype",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.componentdependencyrequirement.versionrequirement": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrassv2.componentversion.componentdependencyrequirement.versionrequirement",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.componentplatform.attributes": {
        "Required": "No",
        "SampleValue": "TODO-Attributes",
        "UniqueKey": "greengrassv2.componentversion.componentplatform.attributes",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.componentplatform.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrassv2.componentversion.componentplatform.name",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdacontainerparams.devices": {
        "Required": "No",
        "Type": "List of [LambdaDeviceMount",
        "UniqueKey": "greengrassv2.componentversion.lambdacontainerparams.devices",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdacontainerparams.memorysizeinkb": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrassv2.componentversion.lambdacontainerparams.memorysizeinkb",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdacontainerparams.mountrosysfs": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrassv2.componentversion.lambdacontainerparams.mountrosysfs",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdacontainerparams.volumes": {
        "Required": "No",
        "Type": "List of [LambdaVolumeMount",
        "UniqueKey": "greengrassv2.componentversion.lambdacontainerparams.volumes",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdadevicemount.addgroupowner": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrassv2.componentversion.lambdadevicemount.addgroupowner",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdadevicemount.path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrassv2.componentversion.lambdadevicemount.path",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdadevicemount.permission": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrassv2.componentversion.lambdadevicemount.permission",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdaeventsource.topic": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrassv2.componentversion.lambdaeventsource.topic",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdaeventsource.type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrassv2.componentversion.lambdaeventsource.type",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdaexecutionparameters.environmentvariables": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "greengrassv2.componentversion.lambdaexecutionparameters.environmentvariables",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdaexecutionparameters.eventsources": {
        "Required": "No",
        "Type": "List of [LambdaEventSource",
        "UniqueKey": "greengrassv2.componentversion.lambdaexecutionparameters.eventsources",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdaexecutionparameters.execargs": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "greengrassv2.componentversion.lambdaexecutionparameters.execargs",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdaexecutionparameters.inputpayloadencodingtype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrassv2.componentversion.lambdaexecutionparameters.inputpayloadencodingtype",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdaexecutionparameters.linuxprocessparams": {
        "Required": "No",
        "Type": "LambdaLinuxProcessParams",
        "UniqueKey": "greengrassv2.componentversion.lambdaexecutionparameters.linuxprocessparams",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdaexecutionparameters.maxidletimeinseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrassv2.componentversion.lambdaexecutionparameters.maxidletimeinseconds",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdaexecutionparameters.maxinstancescount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrassv2.componentversion.lambdaexecutionparameters.maxinstancescount",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdaexecutionparameters.maxqueuesize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrassv2.componentversion.lambdaexecutionparameters.maxqueuesize",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdaexecutionparameters.pinned": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrassv2.componentversion.lambdaexecutionparameters.pinned",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdaexecutionparameters.statustimeoutinseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrassv2.componentversion.lambdaexecutionparameters.statustimeoutinseconds",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdaexecutionparameters.timeoutinseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrassv2.componentversion.lambdaexecutionparameters.timeoutinseconds",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdafunctionrecipesource.componentdependencies": {
        "Required": "No",
        "Type": "Map of [ComponentDependencyRequirement",
        "UniqueKey": "greengrassv2.componentversion.lambdafunctionrecipesource.componentdependencies",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdafunctionrecipesource.componentlambdaparameters": {
        "Required": "No",
        "Type": "LambdaExecutionParameters",
        "UniqueKey": "greengrassv2.componentversion.lambdafunctionrecipesource.componentlambdaparameters",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdafunctionrecipesource.componentname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrassv2.componentversion.lambdafunctionrecipesource.componentname",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdafunctionrecipesource.componentplatforms": {
        "Required": "No",
        "Type": "List of [ComponentPlatform",
        "UniqueKey": "greengrassv2.componentversion.lambdafunctionrecipesource.componentplatforms",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdafunctionrecipesource.componentversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrassv2.componentversion.lambdafunctionrecipesource.componentversion",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdafunctionrecipesource.lambdaarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrassv2.componentversion.lambdafunctionrecipesource.lambdaarn",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdalinuxprocessparams.containerparams": {
        "Required": "No",
        "Type": "LambdaContainerParams",
        "UniqueKey": "greengrassv2.componentversion.lambdalinuxprocessparams.containerparams",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdalinuxprocessparams.isolationmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrassv2.componentversion.lambdalinuxprocessparams.isolationmode",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdavolumemount.addgroupowner": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrassv2.componentversion.lambdavolumemount.addgroupowner",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdavolumemount.destinationpath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrassv2.componentversion.lambdavolumemount.destinationpath",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdavolumemount.permission": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrassv2.componentversion.lambdavolumemount.permission",
        "UpdateRequires": "Replacement"
    },
    "greengrassv2.componentversion.lambdavolumemount.sourcepath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrassv2.componentversion.lambdavolumemount.sourcepath",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.antennadownlinkconfig.spectrumconfig": {
        "Required": "Yes",
        "Type": "SpectrumConfig",
        "UniqueKey": "groundstation.config.antennadownlinkconfig.spectrumconfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.antennadownlinkdemoddecodeconfig.decodeconfig": {
        "Required": "Yes",
        "Type": "DecodeConfig",
        "UniqueKey": "groundstation.config.antennadownlinkdemoddecodeconfig.decodeconfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.antennadownlinkdemoddecodeconfig.demodulationconfig": {
        "Required": "Yes",
        "Type": "DemodulationConfig",
        "UniqueKey": "groundstation.config.antennadownlinkdemoddecodeconfig.demodulationconfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.antennadownlinkdemoddecodeconfig.spectrumconfig": {
        "Required": "Yes",
        "Type": "SpectrumConfig",
        "UniqueKey": "groundstation.config.antennadownlinkdemoddecodeconfig.spectrumconfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.antennauplinkconfig.spectrumconfig": {
        "Required": "Yes",
        "Type": "SpectrumConfig",
        "UniqueKey": "groundstation.config.antennauplinkconfig.spectrumconfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.antennauplinkconfig.targeteirp": {
        "Required": "Yes",
        "Type": "Eirp",
        "UniqueKey": "groundstation.config.antennauplinkconfig.targeteirp",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.bandwidth.units": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "groundstation.config.bandwidth.units",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.bandwidth.value": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "groundstation.config.bandwidth.value",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.configdata.antennadownlinkconfig": {
        "Required": "No",
        "Type": "AntennaDownlinkConfig",
        "UniqueKey": "groundstation.config.configdata.antennadownlinkconfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.configdata.antennadownlinkdemoddecodeconfig": {
        "Required": "No",
        "Type": "AntennaDownlinkDemodDecodeConfig",
        "UniqueKey": "groundstation.config.configdata.antennadownlinkdemoddecodeconfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.configdata.antennauplinkconfig": {
        "Required": "No",
        "Type": "AntennaUplinkConfig",
        "UniqueKey": "groundstation.config.configdata.antennauplinkconfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.configdata.dataflowendpointconfig": {
        "Required": "No",
        "Type": "DataflowEndpointConfig",
        "UniqueKey": "groundstation.config.configdata.dataflowendpointconfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.configdata.trackingconfig": {
        "Required": "No",
        "Type": "TrackingConfig",
        "UniqueKey": "groundstation.config.configdata.trackingconfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.configdata.uplinkechoconfig": {
        "Required": "No",
        "Type": "UplinkEchoConfig",
        "UniqueKey": "groundstation.config.configdata.uplinkechoconfig",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.dataflowendpointconfig.dataflowendpointname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "groundstation.config.dataflowendpointconfig.dataflowendpointname",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.dataflowendpointconfig.dataflowendpointregion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "groundstation.config.dataflowendpointconfig.dataflowendpointregion",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.decodeconfig.unvalidatedjson": {
        "Required": "Yes",
        "Type": "JSON",
        "UniqueKey": "groundstation.config.decodeconfig.unvalidatedjson",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.demodulationconfig.unvalidatedjson": {
        "Required": "Yes",
        "Type": "JSON",
        "UniqueKey": "groundstation.config.demodulationconfig.unvalidatedjson",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.eirp.units": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "groundstation.config.eirp.units",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.eirp.value": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "groundstation.config.eirp.value",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.frequency.units": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "groundstation.config.frequency.units",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.frequency.value": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "groundstation.config.frequency.value",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.spectrumconfig.bandwidth": {
        "Required": "Yes",
        "Type": "Bandwidth",
        "UniqueKey": "groundstation.config.spectrumconfig.bandwidth",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.spectrumconfig.centerfrequency": {
        "Required": "Yes",
        "Type": "Frequency",
        "UniqueKey": "groundstation.config.spectrumconfig.centerfrequency",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.spectrumconfig.polarization": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "groundstation.config.spectrumconfig.polarization",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.trackingconfig.autotrack": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "groundstation.config.trackingconfig.autotrack",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.uplinkechoconfig.antennauplinkconfigarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "groundstation.config.uplinkechoconfig.antennauplinkconfigarn",
        "UpdateRequires": "Replacement"
    },
    "groundstation.config.uplinkechoconfig.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "groundstation.config.uplinkechoconfig.enabled",
        "UpdateRequires": "Replacement"
    },
    "groundstation.dataflowendpointgroup.dataflowendpoint.address": {
        "Required": "No",
        "Type": "SocketAddress",
        "UniqueKey": "groundstation.dataflowendpointgroup.dataflowendpoint.address",
        "UpdateRequires": "Replacement"
    },
    "groundstation.dataflowendpointgroup.dataflowendpoint.mtu": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "groundstation.dataflowendpointgroup.dataflowendpoint.mtu",
        "UpdateRequires": "Replacement"
    },
    "groundstation.dataflowendpointgroup.dataflowendpoint.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "groundstation.dataflowendpointgroup.dataflowendpoint.name",
        "UpdateRequires": "Replacement"
    },
    "groundstation.dataflowendpointgroup.endpointdetails.dataflowendpoint": {
        "Required": "No",
        "Type": "DataflowEndpoint",
        "UniqueKey": "groundstation.dataflowendpointgroup.endpointdetails.dataflowendpoint",
        "UpdateRequires": "Replacement"
    },
    "groundstation.dataflowendpointgroup.endpointdetails.securitydetails": {
        "Required": "No",
        "Type": "SecurityDetails",
        "UniqueKey": "groundstation.dataflowendpointgroup.endpointdetails.securitydetails",
        "UpdateRequires": "Replacement"
    },
    "groundstation.dataflowendpointgroup.securitydetails.rolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "groundstation.dataflowendpointgroup.securitydetails.rolearn",
        "UpdateRequires": "Replacement"
    },
    "groundstation.dataflowendpointgroup.securitydetails.securitygroupids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "groundstation.dataflowendpointgroup.securitydetails.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "groundstation.dataflowendpointgroup.securitydetails.subnetids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "groundstation.dataflowendpointgroup.securitydetails.subnetids",
        "UpdateRequires": "Replacement"
    },
    "groundstation.dataflowendpointgroup.socketaddress.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "groundstation.dataflowendpointgroup.socketaddress.name",
        "UpdateRequires": "Replacement"
    },
    "groundstation.dataflowendpointgroup.socketaddress.port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "groundstation.dataflowendpointgroup.socketaddress.port",
        "UpdateRequires": "Replacement"
    },
    "groundstation.missionprofile.dataflowedge.destination": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "groundstation.missionprofile.dataflowedge.destination",
        "UpdateRequires": "Replacement"
    },
    "groundstation.missionprofile.dataflowedge.source": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "groundstation.missionprofile.dataflowedge.source",
        "UpdateRequires": "Replacement"
    },
    "guardduty.detector.cfndatasourceconfigurations.s3logs": {
        "Required": "No",
        "Type": "CFNS3LogsConfiguration",
        "UniqueKey": "guardduty.detector.cfndatasourceconfigurations.s3logs",
        "UpdateRequires": "Replacement"
    },
    "guardduty.detector.cfns3logsconfiguration.enable": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "guardduty.detector.cfns3logsconfiguration.enable",
        "UpdateRequires": "Replacement"
    },
    "guardduty.filter.condition.eq": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "guardduty.filter.condition.eq",
        "UpdateRequires": "Replacement"
    },
    "guardduty.filter.condition.gte": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "guardduty.filter.condition.gte",
        "UpdateRequires": "Replacement"
    },
    "guardduty.filter.condition.lt": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "guardduty.filter.condition.lt",
        "UpdateRequires": "Replacement"
    },
    "guardduty.filter.condition.lte": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "guardduty.filter.condition.lte",
        "UpdateRequires": "Replacement"
    },
    "guardduty.filter.condition.neq": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "guardduty.filter.condition.neq",
        "UpdateRequires": "Replacement"
    },
    "guardduty.filter.findingcriteria.criterion": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "guardduty.filter.findingcriteria.criterion",
        "UpdateRequires": "Replacement"
    },
    "guardduty.filter.findingcriteria.itemtype": {
        "Required": "No",
        "Type": "Condition",
        "UniqueKey": "guardduty.filter.findingcriteria.itemtype",
        "UpdateRequires": "Replacement"
    },
    "iam.accesskey.serial": {
        "Required": "No",
        "SampleValue": "TODO-Serial",
        "UniqueKey": "iam.accesskey.serial",
        "UpdateRequires": "Replacement"
    },
    "iam.accesskey.status": {
        "Allowed values": "Active | Inactive",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iam.accesskey.status",
        "UpdateRequires": "Replacement"
    },
    "iam.accesskey.username": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\w+=,.@-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iam.accesskey.username",
        "UpdateRequires": "Replacement"
    },
    "iam.addusertogroup.groupname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\w+=,.@-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iam.addusertogroup.groupname",
        "UpdateRequires": "Replacement"
    },
    "iam.addusertogroup.users": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "iam.addusertogroup.users",
        "UpdateRequires": "Replacement"
    },
    "iam.group.groupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iam.group.groupname",
        "UpdateRequires": "Replacement"
    },
    "iam.group.managedpolicyarns": {
        "Required": "No",
        "SampleValue": "TODO-ManagedPolicyArns",
        "UniqueKey": "iam.group.managedpolicyarns",
        "UpdateRequires": "Replacement"
    },
    "iam.group.path": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)",
        "Required": "No",
        "UniqueKey": "iam.group.path",
        "UpdateRequires": "Replacement"
    },
    "iam.group.policies": {
        "Required": "No",
        "SampleValue": "TODO-Policies",
        "UniqueKey": "iam.group.policies",
        "UpdateRequires": "Replacement"
    },
    "iam.policy.1.policydocument": {
        "Maximum": "131072",
        "Minimum": "1",
        "Pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
        "Required": "Yes",
        "Type": "Json",
        "UniqueKey": "iam.policy.1.policydocument",
        "UpdateRequires": "Replacement"
    },
    "iam.policy.1.policyname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\w+=,.@-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iam.policy.1.policyname",
        "UpdateRequires": "Replacement"
    },
    "iam.policy.2.policydocument": {
        "Maximum": "131072",
        "Minimum": "1",
        "Pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
        "Required": "Yes",
        "Type": "Json",
        "UniqueKey": "iam.policy.2.policydocument",
        "UpdateRequires": "Replacement"
    },
    "iam.policy.2.policyname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\w+=,.@-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iam.policy.2.policyname",
        "UpdateRequires": "Replacement"
    },
    "iam.policy.policydocument": {
        "Maximum": "131072",
        "Minimum": "1",
        "Pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
        "Required": "Yes",
        "Type": "Json",
        "UniqueKey": "iam.policy.policydocument",
        "UpdateRequires": "Replacement"
    },
    "iam.policy.policyname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\w+=,.@-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iam.policy.policyname",
        "UpdateRequires": "Replacement"
    },
    "iam.user.groups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "iam.user.groups",
        "UpdateRequires": "Replacement"
    },
    "iam.user.loginprofile": {
        "Required": "No",
        "SampleValue": "TODO-LoginProfile",
        "UniqueKey": "iam.user.loginprofile",
        "UpdateRequires": "Replacement"
    },
    "iam.user.loginprofile.password": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iam.user.loginprofile.password",
        "UpdateRequires": "Replacement"
    },
    "iam.user.loginprofile.passwordresetrequired": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iam.user.loginprofile.passwordresetrequired",
        "UpdateRequires": "Replacement"
    },
    "iam.user.managedpolicyarns": {
        "Required": "No",
        "SampleValue": "TODO-ManagedPolicyArns",
        "UniqueKey": "iam.user.managedpolicyarns",
        "UpdateRequires": "Replacement"
    },
    "iam.user.path": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)",
        "Required": "No",
        "UniqueKey": "iam.user.path",
        "UpdateRequires": "Replacement"
    },
    "iam.user.permissionsboundary": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iam.user.permissionsboundary",
        "UpdateRequires": "Replacement"
    },
    "iam.user.policies": {
        "Required": "No",
        "SampleValue": "TODO-Policies",
        "UniqueKey": "iam.user.policies",
        "UpdateRequires": "Replacement"
    },
    "iam.user.tags": {
        "Maximum": "50",
        "Required": "No",
        "UniqueKey": "iam.user.tags",
        "UpdateRequires": "Replacement"
    },
    "iam.user.username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iam.user.username",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.distributionconfiguration.distribution.amidistributionconfiguration": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "imagebuilder.distributionconfiguration.distribution.amidistributionconfiguration",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.distributionconfiguration.distribution.containerdistributionconfiguration": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "imagebuilder.distributionconfiguration.distribution.containerdistributionconfiguration",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.distributionconfiguration.distribution.licenseconfigurationarns": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "imagebuilder.distributionconfiguration.distribution.licenseconfigurationarns",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.distributionconfiguration.distribution.region": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-imagebuilder.distributionconfiguration.distribution.Region",
        "Type": "String",
        "UniqueKey": "imagebuilder.distributionconfiguration.distribution.region",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.image.imagetestsconfiguration.imagetestsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "imagebuilder.image.imagetestsconfiguration.imagetestsenabled",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.image.imagetestsconfiguration.timeoutminutes": {
        "Maximum": "1440",
        "Minimum": "60",
        "Pattern": "^[60,1440]}$",
        "Required": "No",
        "SampleValue": "60...1440",
        "Type": "Integer",
        "UniqueKey": "imagebuilder.image.imagetestsconfiguration.timeoutminutes",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagepipeline.imagetestsconfiguration.imagetestsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "imagebuilder.imagepipeline.imagetestsconfiguration.imagetestsenabled",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagepipeline.imagetestsconfiguration.timeoutminutes": {
        "Maximum": "1440",
        "Minimum": "60",
        "Pattern": "^[60,1440]}$",
        "Required": "No",
        "SampleValue": "60...1440",
        "Type": "Integer",
        "UniqueKey": "imagebuilder.imagepipeline.imagetestsconfiguration.timeoutminutes",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagepipeline.schedule.pipelineexecutionstartcondition": {
        "Required": "No",
        "SampleValue": "TODO-PipelineExecutionStartCondition",
        "UniqueKey": "imagebuilder.imagepipeline.schedule.pipelineexecutionstartcondition",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagepipeline.schedule.scheduleexpression": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-imagebuilder.imagepipeline.schedule.ScheduleExpression",
        "Type": "String",
        "UniqueKey": "imagebuilder.imagepipeline.schedule.scheduleexpression",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.componentconfiguration.componentarn": {
        "Pattern": "^arn:aws[^:]*:imagebuilder:[^:]+:(?:\\d{12}|aws):component/[a-z0-9-_]+/(?:(?:(\\d+|x)\\.(\\d+|x)\\.(\\d+|x))|(?:\\d+\\.\\d+\\.\\d+/\\d+))$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "imagebuilder.imagerecipe.componentconfiguration.componentarn",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.deleteontermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.deleteontermination",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.encrypted",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.iops": {
        "Maximum": "10000",
        "Minimum": "100",
        "Pattern": "^[100,10000]}$",
        "Required": "No",
        "SampleValue": "100...10000",
        "Type": "Integer",
        "UniqueKey": "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.iops",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.kmskeyid": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.KmsKeyId",
        "Type": "String",
        "UniqueKey": "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.snapshotid": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.SnapshotId",
        "Type": "String",
        "UniqueKey": "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.snapshotid",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.volumesize": {
        "Maximum": "16000",
        "Minimum": "1",
        "Pattern": "^[1,16000]}$",
        "Required": "No",
        "SampleValue": "1...16000",
        "Type": "Integer",
        "UniqueKey": "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.volumesize",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.volumetype": {
        "Allowed values": "gp2 | io1 | io2 | sc1 | st1 | standard",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "imagebuilder.imagerecipe.ebsinstanceblockdevicespecification.volumetype",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.instanceblockdevicemapping.devicename": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-imagebuilder.imagerecipe.instanceblockdevicemapping.DeviceName",
        "Type": "String",
        "UniqueKey": "imagebuilder.imagerecipe.instanceblockdevicemapping.devicename",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.instanceblockdevicemapping.ebs": {
        "Required": "No",
        "Type": "EbsInstanceBlockDeviceSpecification",
        "UniqueKey": "imagebuilder.imagerecipe.instanceblockdevicemapping.ebs",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.instanceblockdevicemapping.nodevice": {
        "UniqueKey": "imagebuilder.imagerecipe.instanceblockdevicemapping.nodevice"
    },
    "imagebuilder.imagerecipe.instanceblockdevicemapping.nodevice:\"\"": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "imagebuilder.imagerecipe.instanceblockdevicemapping.nodevice:\"\"",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.imagerecipe.instanceblockdevicemapping.virtualname": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-imagebuilder.imagerecipe.instanceblockdevicemapping.VirtualName",
        "Type": "String",
        "UniqueKey": "imagebuilder.imagerecipe.instanceblockdevicemapping.virtualname",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.infrastructureconfiguration.logging.s3logs": {
        "Required": "No",
        "Type": "S3Logs",
        "UniqueKey": "imagebuilder.infrastructureconfiguration.logging.s3logs",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.infrastructureconfiguration.s3logs.s3bucketname": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-imagebuilder.infrastructureconfiguration.s3logs.S3BucketName",
        "Type": "String",
        "UniqueKey": "imagebuilder.infrastructureconfiguration.s3logs.s3bucketname",
        "UpdateRequires": "Replacement"
    },
    "imagebuilder.infrastructureconfiguration.s3logs.s3keyprefix": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-imagebuilder.infrastructureconfiguration.s3logs.S3KeyPrefix",
        "Type": "String",
        "UniqueKey": "imagebuilder.infrastructureconfiguration.s3logs.s3keyprefix",
        "UpdateRequires": "Replacement"
    },
    "iot.authorizer.tags.tags": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "iot.authorizer.tags.tags",
        "UpdateRequires": "Replacement"
    },
    "iot.domainconfiguration.authorizerconfig.allowauthorizeroverride": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iot.domainconfiguration.authorizerconfig.allowauthorizeroverride",
        "UpdateRequires": "Replacement"
    },
    "iot.domainconfiguration.authorizerconfig.defaultauthorizername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.domainconfiguration.authorizerconfig.defaultauthorizername",
        "UpdateRequires": "Replacement"
    },
    "iot.domainconfiguration.servercertificatesummary.servercertificatearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.domainconfiguration.servercertificatesummary.servercertificatearn",
        "UpdateRequires": "Replacement"
    },
    "iot.domainconfiguration.servercertificatesummary.servercertificatestatus": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.domainconfiguration.servercertificatesummary.servercertificatestatus",
        "UpdateRequires": "Replacement"
    },
    "iot.domainconfiguration.servercertificatesummary.servercertificatestatusdetail": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.domainconfiguration.servercertificatesummary.servercertificatestatusdetail",
        "UpdateRequires": "Replacement"
    },
    "iot.domainconfiguration.tags.tags": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "iot.domainconfiguration.tags.tags",
        "UpdateRequires": "Replacement"
    },
    "iot.provisioningtemplate.provisioninghook.payloadversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.provisioningtemplate.provisioninghook.payloadversion",
        "UpdateRequires": "Replacement"
    },
    "iot.provisioningtemplate.provisioninghook.targetarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.provisioningtemplate.provisioninghook.targetarn",
        "UpdateRequires": "Replacement"
    },
    "iot.provisioningtemplate.tags.tags": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "iot.provisioningtemplate.tags.tags",
        "UpdateRequires": "Replacement"
    },
    "iot.thing.attributepayload.attributes": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "iot.thing.attributepayload.attributes",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.cloudwatchalarm": {
        "Required": "No",
        "Type": "CloudwatchAlarmAction",
        "UniqueKey": "iot.topicrule.action.cloudwatchalarm",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.cloudwatchmetric": {
        "Required": "No",
        "Type": "CloudwatchMetricAction",
        "UniqueKey": "iot.topicrule.action.cloudwatchmetric",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.dynamodb": {
        "Required": "No",
        "Type": "DynamoDBAction",
        "UniqueKey": "iot.topicrule.action.dynamodb",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.dynamodbv2": {
        "Required": "No",
        "Type": "DynamoDBv2Action",
        "UniqueKey": "iot.topicrule.action.dynamodbv2",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.elasticsearch": {
        "Required": "No",
        "Type": "ElasticsearchAction",
        "UniqueKey": "iot.topicrule.action.elasticsearch",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.firehose": {
        "Required": "No",
        "Type": "FirehoseAction",
        "UniqueKey": "iot.topicrule.action.firehose",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.http": {
        "Required": "No",
        "Type": "HttpAction",
        "UniqueKey": "iot.topicrule.action.http",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.iotanalytics": {
        "Required": "No",
        "Type": "IotAnalyticsAction",
        "UniqueKey": "iot.topicrule.action.iotanalytics",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.iotevents": {
        "Required": "No",
        "Type": "IotEventsAction",
        "UniqueKey": "iot.topicrule.action.iotevents",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.iotsitewise": {
        "Required": "No",
        "Type": "IotSiteWiseAction",
        "UniqueKey": "iot.topicrule.action.iotsitewise",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.kinesis": {
        "Required": "No",
        "Type": "KinesisAction",
        "UniqueKey": "iot.topicrule.action.kinesis",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.lambda": {
        "Required": "No",
        "Type": "LambdaAction",
        "UniqueKey": "iot.topicrule.action.lambda",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.republish": {
        "Required": "No",
        "Type": "RepublishAction",
        "UniqueKey": "iot.topicrule.action.republish",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.s3": {
        "Required": "No",
        "Type": "S3Action",
        "UniqueKey": "iot.topicrule.action.s3",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.sns": {
        "Required": "No",
        "Type": "SnsAction",
        "UniqueKey": "iot.topicrule.action.sns",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.sqs": {
        "Required": "No",
        "Type": "SqsAction",
        "UniqueKey": "iot.topicrule.action.sqs",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.action.stepfunctions": {
        "Required": "No",
        "Type": "StepFunctionsAction",
        "UniqueKey": "iot.topicrule.action.stepfunctions",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.assetpropertytimestamp.offsetinnanos": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.assetpropertytimestamp.offsetinnanos",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.assetpropertytimestamp.timeinseconds": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.assetpropertytimestamp.timeinseconds",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.assetpropertyvalue.quality": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.assetpropertyvalue.quality",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.assetpropertyvalue.timestamp": {
        "Required": "Yes",
        "Type": "AssetPropertyTimestamp",
        "UniqueKey": "iot.topicrule.assetpropertyvalue.timestamp",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.assetpropertyvalue.value": {
        "Required": "Yes",
        "Type": "AssetPropertyVariant",
        "UniqueKey": "iot.topicrule.assetpropertyvalue.value",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.assetpropertyvariant.booleanvalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.assetpropertyvariant.booleanvalue",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.assetpropertyvariant.doublevalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.assetpropertyvariant.doublevalue",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.assetpropertyvariant.integervalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.assetpropertyvariant.integervalue",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.assetpropertyvariant.stringvalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.assetpropertyvariant.stringvalue",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.cloudwatchalarmaction.alarmname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchalarmaction.alarmname",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.cloudwatchalarmaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchalarmaction.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.cloudwatchalarmaction.statereason": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchalarmaction.statereason",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.cloudwatchalarmaction.statevalue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchalarmaction.statevalue",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.cloudwatchmetricaction.metricname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchmetricaction.metricname",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.cloudwatchmetricaction.metricnamespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchmetricaction.metricnamespace",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.cloudwatchmetricaction.metrictimestamp": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchmetricaction.metrictimestamp",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.cloudwatchmetricaction.metricunit": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchmetricaction.metricunit",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.cloudwatchmetricaction.metricvalue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchmetricaction.metricvalue",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.cloudwatchmetricaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchmetricaction.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbaction.hashkeyfield": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.hashkeyfield",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbaction.hashkeytype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.hashkeytype",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbaction.hashkeyvalue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.hashkeyvalue",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbaction.payloadfield": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.payloadfield",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbaction.rangekeyfield": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.rangekeyfield",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbaction.rangekeytype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.rangekeytype",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbaction.rangekeyvalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.rangekeyvalue",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbaction.tablename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.tablename",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbv2action.putitem": {
        "Required": "No",
        "Type": "PutItemInput",
        "UniqueKey": "iot.topicrule.dynamodbv2action.putitem",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.dynamodbv2action.rolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbv2action.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.elasticsearchaction.endpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.elasticsearchaction.endpoint",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.elasticsearchaction.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.elasticsearchaction.id",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.elasticsearchaction.index": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.elasticsearchaction.index",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.elasticsearchaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.elasticsearchaction.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.elasticsearchaction.type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.elasticsearchaction.type",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.firehoseaction.deliverystreamname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.firehoseaction.deliverystreamname",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.firehoseaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.firehoseaction.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.firehoseaction.separator": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.firehoseaction.separator",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.httpaction.auth": {
        "Required": "No",
        "Type": "HttpAuthorization",
        "UniqueKey": "iot.topicrule.httpaction.auth",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.httpaction.confirmationurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.httpaction.confirmationurl",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.httpaction.headers": {
        "Required": "No",
        "Type": "List of [HttpActionHeader",
        "UniqueKey": "iot.topicrule.httpaction.headers",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.httpaction.url": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.httpaction.url",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.httpactionheader.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.httpactionheader.key",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.httpactionheader.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.httpactionheader.value",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.httpauthorization.sigv4": {
        "Required": "No",
        "Type": "SigV4Authorization",
        "UniqueKey": "iot.topicrule.httpauthorization.sigv4",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.iotanalyticsaction.channelname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.iotanalyticsaction.channelname",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.iotanalyticsaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.iotanalyticsaction.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.ioteventsaction.inputname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.ioteventsaction.inputname",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.ioteventsaction.messageid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.ioteventsaction.messageid",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.ioteventsaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.ioteventsaction.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.iotsitewiseaction.putassetpropertyvalueentries": {
        "Required": "Yes",
        "Type": "List of [PutAssetPropertyValueEntry",
        "UniqueKey": "iot.topicrule.iotsitewiseaction.putassetpropertyvalueentries",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.iotsitewiseaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.iotsitewiseaction.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.kinesisaction.partitionkey": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.kinesisaction.partitionkey",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.kinesisaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.kinesisaction.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.kinesisaction.streamname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.kinesisaction.streamname",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.lambdaaction.functionarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.lambdaaction.functionarn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.putassetpropertyvalueentry.assetid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.putassetpropertyvalueentry.assetid",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.putassetpropertyvalueentry.entryid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.putassetpropertyvalueentry.entryid",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.putassetpropertyvalueentry.propertyalias": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.putassetpropertyvalueentry.propertyalias",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.putassetpropertyvalueentry.propertyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.putassetpropertyvalueentry.propertyid",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.putassetpropertyvalueentry.propertyvalues": {
        "Required": "Yes",
        "Type": "List of [AssetPropertyValue",
        "UniqueKey": "iot.topicrule.putassetpropertyvalueentry.propertyvalues",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.putiteminput.tablename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.putiteminput.tablename",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.republishaction.qos": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iot.topicrule.republishaction.qos",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.republishaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.republishaction.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.republishaction.topic": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.republishaction.topic",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.s3action.bucketname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.s3action.bucketname",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.s3action.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.s3action.key",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.s3action.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.s3action.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.sigv4authorization.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.sigv4authorization.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.sigv4authorization.servicename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.sigv4authorization.servicename",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.sigv4authorization.signingregion": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.sigv4authorization.signingregion",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.snsaction.messageformat": {
        "Required": "No",
        "SampleValue": "TODO-MessageFormat",
        "UniqueKey": "iot.topicrule.snsaction.messageformat",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.snsaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.snsaction.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.snsaction.targetarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.snsaction.targetarn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.sqsaction.queueurl": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.sqsaction.queueurl",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.sqsaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.sqsaction.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.sqsaction.usebase64": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iot.topicrule.sqsaction.usebase64",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.stepfunctionsaction.executionnameprefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.stepfunctionsaction.executionnameprefix",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.stepfunctionsaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.stepfunctionsaction.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.stepfunctionsaction.statemachinename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.stepfunctionsaction.statemachinename",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.topicrulepayload.actions": {
        "Required": "Yes",
        "Type": "List of [Action",
        "UniqueKey": "iot.topicrule.topicrulepayload.actions",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.topicrulepayload.awsiotsqlversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.topicrulepayload.awsiotsqlversion",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.topicrulepayload.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.topicrulepayload.description",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.topicrulepayload.erroraction": {
        "Required": "No",
        "Type": "Action",
        "UniqueKey": "iot.topicrule.topicrulepayload.erroraction",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.topicrulepayload.ruledisabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iot.topicrule.topicrulepayload.ruledisabled",
        "UpdateRequires": "Replacement"
    },
    "iot.topicrule.topicrulepayload.sql": {
        "Required": "Yes",
        "SampleValue": "TODO-Sql",
        "UniqueKey": "iot.topicrule.topicrulepayload.sql",
        "UpdateRequires": "Replacement"
    },
    "iot.topicruledestination.httpurldestinationsummary.confirmationurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicruledestination.httpurldestinationsummary.confirmationurl",
        "UpdateRequires": "Replacement"
    },
    "iot.topicruledestination.vpcdestinationproperties.rolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicruledestination.vpcdestinationproperties.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iot.topicruledestination.vpcdestinationproperties.securitygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "iot.topicruledestination.vpcdestinationproperties.securitygroups",
        "UpdateRequires": "Replacement"
    },
    "iot.topicruledestination.vpcdestinationproperties.subnetids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "iot.topicruledestination.vpcdestinationproperties.subnetids",
        "UpdateRequires": "Replacement"
    },
    "iot.topicruledestination.vpcdestinationproperties.vpcid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicruledestination.vpcdestinationproperties.vpcid",
        "UpdateRequires": "Replacement"
    },
    "iot1click.project.devicetemplate.callbackoverrides": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "iot1click.project.devicetemplate.callbackoverrides",
        "UpdateRequires": "Replacement"
    },
    "iot1click.project.devicetemplate.devicetype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot1click.project.devicetemplate.devicetype",
        "UpdateRequires": "Replacement"
    },
    "iot1click.project.placementtemplate.defaultattributes": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "iot1click.project.placementtemplate.defaultattributes",
        "UpdateRequires": "Replacement"
    },
    "iot1click.project.placementtemplate.devicetemplates": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "iot1click.project.placementtemplate.devicetemplates",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.channel.channelstorage.customermanageds3": {
        "Required": "No",
        "Type": "CustomerManagedS3",
        "UniqueKey": "iotanalytics.channel.channelstorage.customermanageds3",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.channel.channelstorage.servicemanageds3": {
        "Required": "No",
        "Type": "ServiceManagedS3",
        "UniqueKey": "iotanalytics.channel.channelstorage.servicemanageds3",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.channel.customermanageds3.bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.channel.customermanageds3.bucket",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.channel.customermanageds3.keyprefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.channel.customermanageds3.keyprefix",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.channel.customermanageds3.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.channel.customermanageds3.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.channel.retentionperiod.numberofdays": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.channel.retentionperiod.numberofdays",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.channel.retentionperiod.unlimited": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotanalytics.channel.retentionperiod.unlimited",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.action.actionname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.action.actionname",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.action.containeraction": {
        "Required": "No",
        "Type": "ContainerAction",
        "UniqueKey": "iotanalytics.dataset.action.containeraction",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.action.queryaction": {
        "Required": "No",
        "Type": "QueryAction",
        "UniqueKey": "iotanalytics.dataset.action.queryaction",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.containeraction.executionrolearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^.{20,2048}$",
        "Required": "Yes",
        "SampleValue": "TODO-iotanalytics.dataset.containeraction.ExecutionRoleArn",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.containeraction.executionrolearn",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.containeraction.image": {
        "Maximum": "255",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.containeraction.image",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.containeraction.resourceconfiguration": {
        "Required": "Yes",
        "Type": "ResourceConfiguration",
        "UniqueKey": "iotanalytics.dataset.containeraction.resourceconfiguration",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.containeraction.variables": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of [Variable",
        "UniqueKey": "iotanalytics.dataset.containeraction.variables",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.datasetcontentdeliveryrule.destination": {
        "Required": "Yes",
        "Type": "DatasetContentDeliveryRuleDestination",
        "UniqueKey": "iotanalytics.dataset.datasetcontentdeliveryrule.destination",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.datasetcontentdeliveryrule.entryname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.datasetcontentdeliveryrule.entryname",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.datasetcontentdeliveryruledestination.ioteventsdestinationconfiguration": {
        "Required": "No",
        "Type": "IotEventsDestinationConfiguration",
        "UniqueKey": "iotanalytics.dataset.datasetcontentdeliveryruledestination.ioteventsdestinationconfiguration",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.datasetcontentdeliveryruledestination.s3destinationconfiguration": {
        "Required": "No",
        "Type": "S3DestinationConfiguration",
        "UniqueKey": "iotanalytics.dataset.datasetcontentdeliveryruledestination.s3destinationconfiguration",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.deltatime.offsetseconds": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.dataset.deltatime.offsetseconds",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.deltatime.timeexpression": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.deltatime.timeexpression",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.filter.deltatime": {
        "Required": "No",
        "Type": "DeltaTime",
        "UniqueKey": "iotanalytics.dataset.filter.deltatime",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.glueconfiguration.databasename": {
        "Maximum": "150",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.glueconfiguration.databasename",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.glueconfiguration.tablename": {
        "Maximum": "150",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.glueconfiguration.tablename",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.ioteventsdestinationconfiguration.inputname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.ioteventsdestinationconfiguration.inputname",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.ioteventsdestinationconfiguration.rolearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^.{20,2048}$",
        "Required": "Yes",
        "SampleValue": "TODO-iotanalytics.dataset.ioteventsdestinationconfiguration.RoleArn",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.ioteventsdestinationconfiguration.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.queryaction.filters": {
        "Maximum": "1",
        "Required": "No",
        "Type": "List of [Filter",
        "UniqueKey": "iotanalytics.dataset.queryaction.filters",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.queryaction.sqlquery": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.queryaction.sqlquery",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.resourceconfiguration.computetype": {
        "Allowed values": "ACU_1 | ACU_2",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.resourceconfiguration.computetype",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.resourceconfiguration.volumesizeingb": {
        "Maximum": "50",
        "Minimum": "1",
        "Pattern": "^[1,50]}$",
        "Required": "Yes",
        "SampleValue": "1...50",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.dataset.resourceconfiguration.volumesizeingb",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.retentionperiod.numberofdays": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.dataset.retentionperiod.numberofdays",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.retentionperiod.unlimited": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotanalytics.dataset.retentionperiod.unlimited",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.s3destinationconfiguration.bucket": {
        "Maximum": "255",
        "Minimum": "3",
        "Pattern": "^[a-zA-Z0-9.\\-_]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.s3destinationconfiguration.bucket",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.s3destinationconfiguration.glueconfiguration": {
        "Required": "No",
        "Type": "GlueConfiguration",
        "UniqueKey": "iotanalytics.dataset.s3destinationconfiguration.glueconfiguration",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.s3destinationconfiguration.key": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9!_.*'()/{}:-]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.s3destinationconfiguration.key",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.s3destinationconfiguration.rolearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^.{20,2048}$",
        "Required": "Yes",
        "SampleValue": "TODO-iotanalytics.dataset.s3destinationconfiguration.RoleArn",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.s3destinationconfiguration.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.trigger.schedule": {
        "Required": "No",
        "Type": "Schedule",
        "UniqueKey": "iotanalytics.dataset.trigger.schedule",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.trigger.schedule.scheduleexpression": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.trigger.schedule.scheduleexpression",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.trigger.triggeringdataset": {
        "Required": "No",
        "Type": "TriggeringDataset",
        "UniqueKey": "iotanalytics.dataset.trigger.triggeringdataset",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.triggeringdataset.datasetname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.triggeringdataset.datasetname",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.variable.datasetcontentversionvalue": {
        "Required": "No",
        "Type": "DatasetContentVersionValue",
        "UniqueKey": "iotanalytics.dataset.variable.datasetcontentversionvalue",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.variable.datasetcontentversionvalue.datasetname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.variable.datasetcontentversionvalue.datasetname",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.variable.doublevalue": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "iotanalytics.dataset.variable.doublevalue",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.variable.outputfileurivalue": {
        "Required": "No",
        "Type": "OutputFileUriValue",
        "UniqueKey": "iotanalytics.dataset.variable.outputfileurivalue",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.variable.outputfileurivalue.filename": {
        "Pattern": "[\\w\\.-]{1,255}",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.variable.outputfileurivalue.filename",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.variable.stringvalue": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": "^.{0,1024}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.dataset.variable.StringValue",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.variable.stringvalue",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.variable.variablename": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "Yes",
        "SampleValue": "TODO-iotanalytics.dataset.variable.VariableName",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.variable.variablename",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.versioningconfiguration.maxversions": {
        "Maximum": "1000",
        "Minimum": "1",
        "Pattern": "^[1,1000]}$",
        "Required": "No",
        "SampleValue": "1...1000",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.dataset.versioningconfiguration.maxversions",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.dataset.versioningconfiguration.unlimited": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotanalytics.dataset.versioningconfiguration.unlimited",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.datastore.column.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.datastore.column.name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.datastore.column.type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.datastore.column.type",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.datastore.customermanageds3.bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.datastore.customermanageds3.bucket",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.datastore.customermanageds3.keyprefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.datastore.customermanageds3.keyprefix",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.datastore.customermanageds3.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.datastore.customermanageds3.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.datastore.datastorestorage.customermanageds3": {
        "Required": "No",
        "Type": "CustomerManagedS3",
        "UniqueKey": "iotanalytics.datastore.datastorestorage.customermanageds3",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.datastore.datastorestorage.servicemanageds3": {
        "Required": "No",
        "Type": "ServiceManagedS3",
        "UniqueKey": "iotanalytics.datastore.datastorestorage.servicemanageds3",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.datastore.fileformatconfiguration.jsonconfiguration": {
        "Required": "No",
        "Type": "JsonConfiguration",
        "UniqueKey": "iotanalytics.datastore.fileformatconfiguration.jsonconfiguration",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.datastore.fileformatconfiguration.parquetconfiguration": {
        "Required": "No",
        "Type": "ParquetConfiguration",
        "UniqueKey": "iotanalytics.datastore.fileformatconfiguration.parquetconfiguration",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.datastore.parquetconfiguration.schemadefinition": {
        "Required": "No",
        "Type": "SchemaDefinition",
        "UniqueKey": "iotanalytics.datastore.parquetconfiguration.schemadefinition",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.datastore.retentionperiod.numberofdays": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.datastore.retentionperiod.numberofdays",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.datastore.retentionperiod.unlimited": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotanalytics.datastore.retentionperiod.unlimited",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.datastore.schemadefinition.columns": {
        "Required": "No",
        "Type": "List of [Column",
        "UniqueKey": "iotanalytics.datastore.schemadefinition.columns",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.activity.addattributes": {
        "Required": "No",
        "Type": "AddAttributes",
        "UniqueKey": "iotanalytics.pipeline.activity.addattributes",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.activity.channel": {
        "Required": "No",
        "Type": "Channel",
        "UniqueKey": "iotanalytics.pipeline.activity.channel",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.activity.datastore": {
        "Required": "No",
        "Type": "Datastore",
        "UniqueKey": "iotanalytics.pipeline.activity.datastore",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.activity.deviceregistryenrich": {
        "Required": "No",
        "Type": "DeviceRegistryEnrich",
        "UniqueKey": "iotanalytics.pipeline.activity.deviceregistryenrich",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.activity.deviceshadowenrich": {
        "Required": "No",
        "Type": "DeviceShadowEnrich",
        "UniqueKey": "iotanalytics.pipeline.activity.deviceshadowenrich",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.activity.filter": {
        "Required": "No",
        "Type": "Filter",
        "UniqueKey": "iotanalytics.pipeline.activity.filter",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.activity.lambda": {
        "Required": "No",
        "Type": "Lambda",
        "UniqueKey": "iotanalytics.pipeline.activity.lambda",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.activity.math": {
        "Required": "No",
        "Type": "Math",
        "UniqueKey": "iotanalytics.pipeline.activity.math",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.activity.removeattributes": {
        "Required": "No",
        "Type": "RemoveAttributes",
        "UniqueKey": "iotanalytics.pipeline.activity.removeattributes",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.activity.selectattributes": {
        "Required": "No",
        "Type": "SelectAttributes",
        "UniqueKey": "iotanalytics.pipeline.activity.selectattributes",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.addattributes.attributes": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "iotanalytics.pipeline.addattributes.attributes",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.addattributes.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.addattributes.Name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.addattributes.name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.addattributes.next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.addattributes.Next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.addattributes.next",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.channel.channelname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.channel.channelname",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.channel.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.channel.Name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.channel.name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.channel.next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.channel.Next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.channel.next",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.datastore.datastorename": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.datastore.datastorename",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.datastore.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.datastore.Name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.datastore.name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.deviceregistryenrich.attribute": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceregistryenrich.Attribute",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceregistryenrich.attribute",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.deviceregistryenrich.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceregistryenrich.Name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceregistryenrich.name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.deviceregistryenrich.next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceregistryenrich.Next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceregistryenrich.next",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.deviceregistryenrich.rolearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^.{20,2048}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceregistryenrich.RoleArn",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceregistryenrich.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.deviceregistryenrich.thingname": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceregistryenrich.ThingName",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceregistryenrich.thingname",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.deviceshadowenrich.attribute": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceshadowenrich.Attribute",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceshadowenrich.attribute",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.deviceshadowenrich.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceshadowenrich.Name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceshadowenrich.name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.deviceshadowenrich.next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceshadowenrich.Next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceshadowenrich.next",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.deviceshadowenrich.rolearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^.{20,2048}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceshadowenrich.RoleArn",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceshadowenrich.rolearn",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.deviceshadowenrich.thingname": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceshadowenrich.ThingName",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceshadowenrich.thingname",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.filter.filter": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.filter.Filter",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.filter.filter",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.filter.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.filter.Name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.filter.name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.filter.next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.filter.Next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.filter.next",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.lambda.batchsize": {
        "Maximum": "1000",
        "Minimum": "1",
        "Pattern": "^[1,1000]}$",
        "Required": "No",
        "SampleValue": "1...1000",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.pipeline.lambda.batchsize",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.lambda.lambdaname": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_-]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.lambda.lambdaname",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.lambda.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.lambda.Name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.lambda.name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.lambda.next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.lambda.Next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.lambda.next",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.math.attribute": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.math.Attribute",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.math.attribute",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.math.math": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.math.Math",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.math.math",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.math.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.math.Name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.math.name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.math.next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.math.Next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.math.next",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.removeattributes.attributes": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "iotanalytics.pipeline.removeattributes.attributes",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.removeattributes.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.removeattributes.Name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.removeattributes.name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.removeattributes.next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.removeattributes.Next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.removeattributes.next",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.selectattributes.attributes": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "iotanalytics.pipeline.selectattributes.attributes",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.selectattributes.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.selectattributes.Name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.selectattributes.name",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.pipeline.selectattributes.next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.selectattributes.Next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.selectattributes.next",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.cleartimer": {
        "Required": "No",
        "Type": "ClearTimer",
        "UniqueKey": "iotevents.detectormodel.action.cleartimer",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.dynamodb": {
        "Required": "No",
        "SampleValue": "TODO-DynamoDB",
        "UniqueKey": "iotevents.detectormodel.action.dynamodb",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.dynamodbv2": {
        "Required": "No",
        "SampleValue": "TODO-DynamoDBv2",
        "UniqueKey": "iotevents.detectormodel.action.dynamodbv2",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.firehose": {
        "Required": "No",
        "Type": "Firehose",
        "UniqueKey": "iotevents.detectormodel.action.firehose",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.iotevents": {
        "Required": "No",
        "Type": "IotEvents",
        "UniqueKey": "iotevents.detectormodel.action.iotevents",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.iotsitewise": {
        "Required": "No",
        "Type": "IotSiteWise",
        "UniqueKey": "iotevents.detectormodel.action.iotsitewise",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.iottopicpublish": {
        "Required": "No",
        "Type": "IotTopicPublish",
        "UniqueKey": "iotevents.detectormodel.action.iottopicpublish",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.lambda": {
        "Required": "No",
        "Type": "Lambda",
        "UniqueKey": "iotevents.detectormodel.action.lambda",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.resettimer": {
        "Required": "No",
        "Type": "ResetTimer",
        "UniqueKey": "iotevents.detectormodel.action.resettimer",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.settimer": {
        "Required": "No",
        "Type": "SetTimer",
        "UniqueKey": "iotevents.detectormodel.action.settimer",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.setvariable": {
        "Required": "No",
        "Type": "SetVariable",
        "UniqueKey": "iotevents.detectormodel.action.setvariable",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.sns": {
        "Required": "No",
        "Type": "Sns",
        "UniqueKey": "iotevents.detectormodel.action.sns",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.action.sqs": {
        "Required": "No",
        "Type": "Sqs",
        "UniqueKey": "iotevents.detectormodel.action.sqs",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.assetpropertytimestamp.offsetinnanos": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.assetpropertytimestamp.offsetinnanos",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.assetpropertytimestamp.timeinseconds": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.assetpropertytimestamp.timeinseconds",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.assetpropertyvalue.quality": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.assetpropertyvalue.quality",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.assetpropertyvalue.timestamp": {
        "Required": "No",
        "Type": "AssetPropertyTimestamp",
        "UniqueKey": "iotevents.detectormodel.assetpropertyvalue.timestamp",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.assetpropertyvalue.value": {
        "Required": "No",
        "Type": "AssetPropertyVariant",
        "UniqueKey": "iotevents.detectormodel.assetpropertyvalue.value",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.assetpropertyvariant.booleanvalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.assetpropertyvariant.booleanvalue",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.assetpropertyvariant.doublevalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.assetpropertyvariant.doublevalue",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.assetpropertyvariant.integervalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.assetpropertyvariant.integervalue",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.assetpropertyvariant.stringvalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.assetpropertyvariant.stringvalue",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.cleartimer.timername": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.cleartimer.TimerName",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.cleartimer.timername",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.detectormodeldefinition.initialstatename": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.detectormodeldefinition.InitialStateName",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.detectormodeldefinition.initialstatename",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.detectormodeldefinition.states": {
        "Required": "No",
        "Type": "List of [State",
        "UniqueKey": "iotevents.detectormodel.detectormodeldefinition.states",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodb.hashkeyfield": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.dynamodb.hashkeyfield",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodb.hashkeytype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.dynamodb.hashkeytype",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodb.hashkeyvalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.dynamodb.hashkeyvalue",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodb.operation": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.dynamodb.operation",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodb.payload": {
        "Required": "No",
        "Type": "Payload",
        "UniqueKey": "iotevents.detectormodel.dynamodb.payload",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodb.payloadfield": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.dynamodb.payloadfield",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodb.rangekeyfield": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.dynamodb.rangekeyfield",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodb.rangekeytype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.dynamodb.rangekeytype",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodb.rangekeyvalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.dynamodb.rangekeyvalue",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodb.tablename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.dynamodb.tablename",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodbv2.payload": {
        "Required": "No",
        "Type": "Payload",
        "UniqueKey": "iotevents.detectormodel.dynamodbv2.payload",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.dynamodbv2.tablename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.dynamodbv2.tablename",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.event.actions": {
        "Required": "No",
        "Type": "List of [Action",
        "UniqueKey": "iotevents.detectormodel.event.actions",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.event.condition": {
        "Maximum": "512",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.event.condition",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.event.eventname": {
        "Maximum": "128",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.event.eventname",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.firehose.deliverystreamname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.firehose.deliverystreamname",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.firehose.payload": {
        "Required": "No",
        "Type": "Payload",
        "UniqueKey": "iotevents.detectormodel.firehose.payload",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.firehose.separator": {
        "Pattern": "([\\n\\t])|(\\r\\n)|(,)",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.firehose.separator",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.iotevents.inputname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.iotevents.inputname",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.iotevents.payload": {
        "Required": "No",
        "Type": "Payload",
        "UniqueKey": "iotevents.detectormodel.iotevents.payload",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.iotsitewise.assetid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.iotsitewise.assetid",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.iotsitewise.entryid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.iotsitewise.entryid",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.iotsitewise.propertyalias": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.iotsitewise.propertyalias",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.iotsitewise.propertyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.iotsitewise.propertyid",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.iotsitewise.propertyvalue": {
        "Required": "No",
        "Type": "AssetPropertyValue",
        "UniqueKey": "iotevents.detectormodel.iotsitewise.propertyvalue",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.iottopicpublish.mqtttopic": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.iottopicpublish.MqttTopic",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.iottopicpublish.mqtttopic",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.iottopicpublish.payload": {
        "Required": "No",
        "Type": "Payload",
        "UniqueKey": "iotevents.detectormodel.iottopicpublish.payload",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.lambda.functionarn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.lambda.FunctionArn",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.lambda.functionarn",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.lambda.payload": {
        "Required": "No",
        "Type": "Payload",
        "UniqueKey": "iotevents.detectormodel.lambda.payload",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.onenter.events": {
        "Required": "No",
        "Type": "List of [Event",
        "UniqueKey": "iotevents.detectormodel.onenter.events",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.onexit.events": {
        "Required": "No",
        "Type": "List of [Event",
        "UniqueKey": "iotevents.detectormodel.onexit.events",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.oninput.events": {
        "Required": "No",
        "Type": "List of [Event",
        "UniqueKey": "iotevents.detectormodel.oninput.events",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.oninput.transitionevents": {
        "Required": "No",
        "Type": "List of [TransitionEvent",
        "UniqueKey": "iotevents.detectormodel.oninput.transitionevents",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.payload.contentexpression": {
        "Minimum": "1",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.payload.contentexpression",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.payload.type": {
        "Allowed values": "JSON | STRING",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.payload.type",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.resettimer.timername": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.resettimer.TimerName",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.resettimer.timername",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.settimer.durationexpression": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.settimer.DurationExpression",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.settimer.durationexpression",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.settimer.seconds": {
        "Maximum": "31622400",
        "Minimum": "1",
        "Pattern": "^[1,31622400]}$",
        "Required": "No",
        "SampleValue": "1...31622400",
        "Type": "Integer",
        "UniqueKey": "iotevents.detectormodel.settimer.seconds",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.settimer.timername": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.settimer.TimerName",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.settimer.timername",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.setvariable.value": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.setvariable.Value",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.setvariable.value",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.setvariable.variablename": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.setvariable.variablename",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.sns.payload": {
        "Required": "No",
        "Type": "Payload",
        "UniqueKey": "iotevents.detectormodel.sns.payload",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.sns.targetarn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.sns.TargetArn",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.sns.targetarn",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.sqs.payload": {
        "Required": "No",
        "Type": "Payload",
        "UniqueKey": "iotevents.detectormodel.sqs.payload",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.sqs.queueurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.sqs.queueurl",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.sqs.usebase64": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotevents.detectormodel.sqs.usebase64",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.state.onenter": {
        "Required": "No",
        "Type": "OnEnter",
        "UniqueKey": "iotevents.detectormodel.state.onenter",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.state.onexit": {
        "Required": "No",
        "Type": "OnExit",
        "UniqueKey": "iotevents.detectormodel.state.onexit",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.state.oninput": {
        "Required": "No",
        "Type": "OnInput",
        "UniqueKey": "iotevents.detectormodel.state.oninput",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.state.statename": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.state.StateName",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.state.statename",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.transitionevent.actions": {
        "Required": "No",
        "Type": "List of [Action",
        "UniqueKey": "iotevents.detectormodel.transitionevent.actions",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.transitionevent.condition": {
        "Maximum": "512",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.transitionevent.condition",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.transitionevent.eventname": {
        "Maximum": "128",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.transitionevent.eventname",
        "UpdateRequires": "Replacement"
    },
    "iotevents.detectormodel.transitionevent.nextstate": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.transitionevent.NextState",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.transitionevent.nextstate",
        "UpdateRequires": "Replacement"
    },
    "iotevents.input.attribute.jsonpath": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^((`[\\w\\- ]+`)|([\\w\\-]+))(\\.((`[\\w- ]+`)|([\\w\\-]+)))*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.input.attribute.jsonpath",
        "UpdateRequires": "Replacement"
    },
    "iotevents.input.inputdefinition.attributes": {
        "Maximum": "200",
        "Required": "No",
        "Type": "List of [Attribute",
        "UniqueKey": "iotevents.input.inputdefinition.attributes",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.accesspolicy.accesspolicyidentity.user": {
        "Required": "No",
        "Type": "User",
        "UniqueKey": "iotsitewise.accesspolicy.accesspolicyidentity.user",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.accesspolicy.accesspolicyresource.portal": {
        "Required": "No",
        "Type": "Portal",
        "UniqueKey": "iotsitewise.accesspolicy.accesspolicyresource.portal",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.accesspolicy.accesspolicyresource.project": {
        "Required": "No",
        "Type": "Project",
        "UniqueKey": "iotsitewise.accesspolicy.accesspolicyresource.project",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.accesspolicy.portal.id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotsitewise.accesspolicy.portal.id",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.accesspolicy.project.id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotsitewise.accesspolicy.project.id",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.accesspolicy.user.id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotsitewise.accesspolicy.user.id",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.asset.assethierarchy.childassetid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotsitewise.asset.assethierarchy.childassetid",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.asset.assethierarchy.logicalid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotsitewise.asset.assethierarchy.logicalid",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.asset.assetproperty.alias": {
        "Required": "No",
        "SampleValue": "TODO-Alias",
        "UniqueKey": "iotsitewise.asset.assetproperty.alias",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.asset.assetproperty.logicalid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotsitewise.asset.assetproperty.logicalid",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.asset.assetproperty.notificationstate": {
        "Required": "No",
        "SampleValue": "TODO-NotificationState",
        "UniqueKey": "iotsitewise.asset.assetproperty.notificationstate",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.assetmodelhierarchy.childassetmodelid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotsitewise.assetmodel.assetmodelhierarchy.childassetmodelid",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.assetmodelhierarchy.logicalid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotsitewise.assetmodel.assetmodelhierarchy.logicalid",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.assetmodelhierarchy.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotsitewise.assetmodel.assetmodelhierarchy.name",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.assetmodelproperty.datatype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotsitewise.assetmodel.assetmodelproperty.datatype",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.assetmodelproperty.logicalid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotsitewise.assetmodel.assetmodelproperty.logicalid",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.assetmodelproperty.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotsitewise.assetmodel.assetmodelproperty.name",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.assetmodelproperty.type": {
        "Required": "Yes",
        "Type": "PropertyType",
        "UniqueKey": "iotsitewise.assetmodel.assetmodelproperty.type",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.assetmodelproperty.unit": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotsitewise.assetmodel.assetmodelproperty.unit",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.attribute.defaultvalue": {
        "Required": "No",
        "SampleValue": "TODO-DefaultValue",
        "UniqueKey": "iotsitewise.assetmodel.attribute.defaultvalue",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.expressionvariable.name": {
        "Required": "Yes",
        "SampleValue": "TODO-Name",
        "UniqueKey": "iotsitewise.assetmodel.expressionvariable.name",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.expressionvariable.value": {
        "Required": "Yes",
        "Type": "VariableValue",
        "UniqueKey": "iotsitewise.assetmodel.expressionvariable.value",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.metric.expression": {
        "Required": "Yes",
        "SampleValue": "TODO-Expression",
        "UniqueKey": "iotsitewise.assetmodel.metric.expression",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.metric.variables": {
        "Required": "Yes",
        "Type": "List of [ExpressionVariable",
        "UniqueKey": "iotsitewise.assetmodel.metric.variables",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.metric.window": {
        "Required": "Yes",
        "Type": "MetricWindow",
        "UniqueKey": "iotsitewise.assetmodel.metric.window",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.metricwindow.tumbling": {
        "Required": "No",
        "Type": "TumblingWindow",
        "UniqueKey": "iotsitewise.assetmodel.metricwindow.tumbling",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.propertytype.attribute": {
        "Required": "No",
        "Type": "Attribute",
        "UniqueKey": "iotsitewise.assetmodel.propertytype.attribute",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.propertytype.metric": {
        "Required": "No",
        "Type": "Metric",
        "UniqueKey": "iotsitewise.assetmodel.propertytype.metric",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.propertytype.transform": {
        "Required": "No",
        "Type": "Transform",
        "UniqueKey": "iotsitewise.assetmodel.propertytype.transform",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.propertytype.typename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotsitewise.assetmodel.propertytype.typename",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.transform.expression": {
        "Required": "Yes",
        "SampleValue": "TODO-Expression",
        "UniqueKey": "iotsitewise.assetmodel.transform.expression",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.transform.variables": {
        "Required": "Yes",
        "Type": "List of [ExpressionVariable",
        "UniqueKey": "iotsitewise.assetmodel.transform.variables",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.tumblingwindow.interval": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotsitewise.assetmodel.tumblingwindow.interval",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.variablevalue.hierarchylogicalid": {
        "Required": "No",
        "SampleValue": "TODO-HierarchyLogicalId",
        "UniqueKey": "iotsitewise.assetmodel.variablevalue.hierarchylogicalid",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.assetmodel.variablevalue.propertylogicalid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotsitewise.assetmodel.variablevalue.propertylogicalid",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.gateway.gatewaycapabilitysummary.capabilityconfiguration": {
        "Required": "No",
        "SampleValue": "TODO-CapabilityConfiguration",
        "UniqueKey": "iotsitewise.gateway.gatewaycapabilitysummary.capabilityconfiguration",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.gateway.gatewaycapabilitysummary.capabilitynamespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotsitewise.gateway.gatewaycapabilitysummary.capabilitynamespace",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.gateway.gatewayplatform.greengrass": {
        "Required": "Yes",
        "Type": "Greengrass",
        "UniqueKey": "iotsitewise.gateway.gatewayplatform.greengrass",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.gateway.greengrass.grouparn": {
        "Required": "Yes",
        "SampleValue": "TODO-GroupArn",
        "UniqueKey": "iotsitewise.gateway.greengrass.grouparn",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.portal.monitorerrordetails.code": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotsitewise.portal.monitorerrordetails.code",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.portal.monitorerrordetails.message": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotsitewise.portal.monitorerrordetails.message",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.portal.portalstatus.error": {
        "Required": "No",
        "Type": "MonitorErrorDetails",
        "UniqueKey": "iotsitewise.portal.portalstatus.error",
        "UpdateRequires": "Replacement"
    },
    "iotsitewise.portal.portalstatus.state": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotsitewise.portal.portalstatus.state",
        "UpdateRequires": "Replacement"
    },
    "iotthingsgraph.flowtemplate.definitiondocument.language": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotthingsgraph.flowtemplate.definitiondocument.language",
        "UpdateRequires": "Replacement"
    },
    "iotthingsgraph.flowtemplate.definitiondocument.text": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotthingsgraph.flowtemplate.definitiondocument.text",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.deviceprofile.lorawandeviceprofile.classbtimeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotwireless.deviceprofile.lorawandeviceprofile.classbtimeout",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.deviceprofile.lorawandeviceprofile.classctimeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotwireless.deviceprofile.lorawandeviceprofile.classctimeout",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.deviceprofile.lorawandeviceprofile.macversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotwireless.deviceprofile.lorawandeviceprofile.macversion",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.deviceprofile.lorawandeviceprofile.maxdutycycle": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotwireless.deviceprofile.lorawandeviceprofile.maxdutycycle",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.deviceprofile.lorawandeviceprofile.maxeirp": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotwireless.deviceprofile.lorawandeviceprofile.maxeirp",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.deviceprofile.lorawandeviceprofile.pingslotdr": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotwireless.deviceprofile.lorawandeviceprofile.pingslotdr",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.deviceprofile.lorawandeviceprofile.pingslotfreq": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotwireless.deviceprofile.lorawandeviceprofile.pingslotfreq",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.deviceprofile.lorawandeviceprofile.pingslotperiod": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotwireless.deviceprofile.lorawandeviceprofile.pingslotperiod",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.deviceprofile.lorawandeviceprofile.regparamsrevision": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotwireless.deviceprofile.lorawandeviceprofile.regparamsrevision",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.deviceprofile.lorawandeviceprofile.rfregion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotwireless.deviceprofile.lorawandeviceprofile.rfregion",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.deviceprofile.lorawandeviceprofile.supports32bitfcnt": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotwireless.deviceprofile.lorawandeviceprofile.supports32bitfcnt",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.deviceprofile.lorawandeviceprofile.supportsclassb": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotwireless.deviceprofile.lorawandeviceprofile.supportsclassb",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.deviceprofile.lorawandeviceprofile.supportsclassc": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotwireless.deviceprofile.lorawandeviceprofile.supportsclassc",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.deviceprofile.lorawandeviceprofile.supportsjoin": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotwireless.deviceprofile.lorawandeviceprofile.supportsjoin",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.serviceprofile.lorawangetserviceprofileinfo.addgwmetadata": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotwireless.serviceprofile.lorawangetserviceprofileinfo.addgwmetadata",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.serviceprofile.lorawangetserviceprofileinfo.channelmask": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotwireless.serviceprofile.lorawangetserviceprofileinfo.channelmask",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.serviceprofile.lorawangetserviceprofileinfo.devstatusreqfreq": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotwireless.serviceprofile.lorawangetserviceprofileinfo.devstatusreqfreq",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.serviceprofile.lorawangetserviceprofileinfo.dlbucketsize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotwireless.serviceprofile.lorawangetserviceprofileinfo.dlbucketsize",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.serviceprofile.lorawangetserviceprofileinfo.dlrate": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotwireless.serviceprofile.lorawangetserviceprofileinfo.dlrate",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.serviceprofile.lorawangetserviceprofileinfo.dlratepolicy": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotwireless.serviceprofile.lorawangetserviceprofileinfo.dlratepolicy",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.serviceprofile.lorawangetserviceprofileinfo.drmax": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotwireless.serviceprofile.lorawangetserviceprofileinfo.drmax",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.serviceprofile.lorawangetserviceprofileinfo.drmin": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotwireless.serviceprofile.lorawangetserviceprofileinfo.drmin",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.serviceprofile.lorawangetserviceprofileinfo.hrallowed": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotwireless.serviceprofile.lorawangetserviceprofileinfo.hrallowed",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.serviceprofile.lorawangetserviceprofileinfo.mingwdiversity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotwireless.serviceprofile.lorawangetserviceprofileinfo.mingwdiversity",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.serviceprofile.lorawangetserviceprofileinfo.nwkgeoloc": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotwireless.serviceprofile.lorawangetserviceprofileinfo.nwkgeoloc",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.serviceprofile.lorawangetserviceprofileinfo.prallowed": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotwireless.serviceprofile.lorawangetserviceprofileinfo.prallowed",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.serviceprofile.lorawangetserviceprofileinfo.raallowed": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotwireless.serviceprofile.lorawangetserviceprofileinfo.raallowed",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.serviceprofile.lorawangetserviceprofileinfo.reportdevstatusbattery": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotwireless.serviceprofile.lorawangetserviceprofileinfo.reportdevstatusbattery",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.serviceprofile.lorawangetserviceprofileinfo.reportdevstatusmargin": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotwireless.serviceprofile.lorawangetserviceprofileinfo.reportdevstatusmargin",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.serviceprofile.lorawangetserviceprofileinfo.targetper": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotwireless.serviceprofile.lorawangetserviceprofileinfo.targetper",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.serviceprofile.lorawangetserviceprofileinfo.ulbucketsize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotwireless.serviceprofile.lorawangetserviceprofileinfo.ulbucketsize",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.serviceprofile.lorawangetserviceprofileinfo.ulrate": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotwireless.serviceprofile.lorawangetserviceprofileinfo.ulrate",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.serviceprofile.lorawangetserviceprofileinfo.ulratepolicy": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotwireless.serviceprofile.lorawangetserviceprofileinfo.ulratepolicy",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.serviceprofile.lorawanserviceprofile.addgwmetadata": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotwireless.serviceprofile.lorawanserviceprofile.addgwmetadata",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.abpv10x.devaddr": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotwireless.wirelessdevice.abpv10x.devaddr",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.abpv10x.sessionkeys": {
        "Required": "Yes",
        "Type": "SessionKeysAbpV10X",
        "UniqueKey": "iotwireless.wirelessdevice.abpv10x.sessionkeys",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.abpv11.devaddr": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotwireless.wirelessdevice.abpv11.devaddr",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.abpv11.sessionkeys": {
        "Required": "Yes",
        "Type": "SessionKeysAbpV11",
        "UniqueKey": "iotwireless.wirelessdevice.abpv11.sessionkeys",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.lorawandevice.abpv10x": {
        "Required": "No",
        "Type": "AbpV10X",
        "UniqueKey": "iotwireless.wirelessdevice.lorawandevice.abpv10x",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.lorawandevice.abpv11": {
        "Required": "No",
        "Type": "AbpV11",
        "UniqueKey": "iotwireless.wirelessdevice.lorawandevice.abpv11",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.lorawandevice.deveui": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotwireless.wirelessdevice.lorawandevice.deveui",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.lorawandevice.deviceprofileid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotwireless.wirelessdevice.lorawandevice.deviceprofileid",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.lorawandevice.otaav10x": {
        "Required": "No",
        "Type": "OtaaV10X",
        "UniqueKey": "iotwireless.wirelessdevice.lorawandevice.otaav10x",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.lorawandevice.otaav11": {
        "Required": "No",
        "Type": "OtaaV11",
        "UniqueKey": "iotwireless.wirelessdevice.lorawandevice.otaav11",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.lorawandevice.serviceprofileid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotwireless.wirelessdevice.lorawandevice.serviceprofileid",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.otaav10x.appeui": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotwireless.wirelessdevice.otaav10x.appeui",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.otaav10x.appkey": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotwireless.wirelessdevice.otaav10x.appkey",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.otaav11.appkey": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotwireless.wirelessdevice.otaav11.appkey",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.otaav11.joineui": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotwireless.wirelessdevice.otaav11.joineui",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.otaav11.nwkkey": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotwireless.wirelessdevice.otaav11.nwkkey",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.sessionkeysabpv10x.appskey": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotwireless.wirelessdevice.sessionkeysabpv10x.appskey",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.sessionkeysabpv10x.nwkskey": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotwireless.wirelessdevice.sessionkeysabpv10x.nwkskey",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.sessionkeysabpv11.appskey": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotwireless.wirelessdevice.sessionkeysabpv11.appskey",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.sessionkeysabpv11.fnwksintkey": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotwireless.wirelessdevice.sessionkeysabpv11.fnwksintkey",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.sessionkeysabpv11.nwksenckey": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotwireless.wirelessdevice.sessionkeysabpv11.nwksenckey",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessdevice.sessionkeysabpv11.snwksintkey": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotwireless.wirelessdevice.sessionkeysabpv11.snwksintkey",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessgateway.lorawangateway.gatewayeui": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotwireless.wirelessgateway.lorawangateway.gatewayeui",
        "UpdateRequires": "Replacement"
    },
    "iotwireless.wirelessgateway.lorawangateway.rfregion": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotwireless.wirelessgateway.lorawangateway.rfregion",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.accesscontrollistconfiguration.keypath": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-kendra.datasource.accesscontrollistconfiguration.KeyPath",
        "Type": "String",
        "UniqueKey": "kendra.datasource.accesscontrollistconfiguration.keypath",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.aclconfiguration.allowedgroupscolumnname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.aclconfiguration.allowedgroupscolumnname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.changedetectingcolumns.changedetectingcolumns": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.datasource.changedetectingcolumns.changedetectingcolumns",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.columnconfiguration.changedetectingcolumns": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "ChangeDetectingColumns",
        "UniqueKey": "kendra.datasource.columnconfiguration.changedetectingcolumns",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.columnconfiguration.documentdatacolumnname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.columnconfiguration.documentdatacolumnname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.columnconfiguration.documentidcolumnname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.columnconfiguration.documentidcolumnname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.columnconfiguration.documenttitlecolumnname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.datasource.columnconfiguration.documenttitlecolumnname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.columnconfiguration.fieldmappings": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceToIndexFieldMappingList",
        "UniqueKey": "kendra.datasource.columnconfiguration.fieldmappings",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceattachmentconfiguration.attachmentfieldmappings": {
        "Maximum": "11",
        "Required": "No",
        "Type": "ConfluenceAttachmentFieldMappingsList",
        "UniqueKey": "kendra.datasource.confluenceattachmentconfiguration.attachmentfieldmappings",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceattachmentconfiguration.crawlattachments": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kendra.datasource.confluenceattachmentconfiguration.crawlattachments",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceattachmentfieldmappingslist.confluenceattachmentfieldmappingslist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.datasource.confluenceattachmentfieldmappingslist.confluenceattachmentfieldmappingslist",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceattachmenttoindexfieldmapping.datasourcefieldname": {
        "Allowed values": "AUTHOR | CONTENT_TYPE | CREATED_DATE | DISPLAY_URL | FILE_SIZE | ITEM_TYPE | PARENT_ID | SPACE_KEY | SPACE_NAME | URL | VERSION",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.confluenceattachmenttoindexfieldmapping.datasourcefieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceattachmenttoindexfieldmapping.datefieldformat": {
        "Maximum": "40",
        "Minimum": "4",
        "Pattern": "^(?!\\s).*(?<!\\s)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.datasource.confluenceattachmenttoindexfieldmapping.datefieldformat",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceattachmenttoindexfieldmapping.indexfieldname": {
        "Maximum": "30",
        "Minimum": "1",
        "Pattern": "^\\P{C}*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.confluenceattachmenttoindexfieldmapping.indexfieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceblogconfiguration.blogfieldmappings": {
        "Maximum": "9",
        "Required": "No",
        "Type": "ConfluenceBlogFieldMappingsList",
        "UniqueKey": "kendra.datasource.confluenceblogconfiguration.blogfieldmappings",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceblogfieldmappingslist.confluenceblogfieldmappingslist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.datasource.confluenceblogfieldmappingslist.confluenceblogfieldmappingslist",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceblogtoindexfieldmapping.datasourcefieldname": {
        "Allowed values": "AUTHOR | DISPLAY_URL | ITEM_TYPE | LABELS | PUBLISH_DATE | SPACE_KEY | SPACE_NAME | URL | VERSION",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.confluenceblogtoindexfieldmapping.datasourcefieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceblogtoindexfieldmapping.datefieldformat": {
        "Maximum": "40",
        "Minimum": "4",
        "Pattern": "^(?!\\s).*(?<!\\s)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.datasource.confluenceblogtoindexfieldmapping.datefieldformat",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceblogtoindexfieldmapping.indexfieldname": {
        "Maximum": "30",
        "Minimum": "1",
        "Pattern": "^\\P{C}*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.confluenceblogtoindexfieldmapping.indexfieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceconfiguration.attachmentconfiguration": {
        "Required": "No",
        "Type": "ConfluenceAttachmentConfiguration",
        "UniqueKey": "kendra.datasource.confluenceconfiguration.attachmentconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceconfiguration.blogconfiguration": {
        "Required": "No",
        "Type": "ConfluenceBlogConfiguration",
        "UniqueKey": "kendra.datasource.confluenceconfiguration.blogconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceconfiguration.exclusionpatterns": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceInclusionsExclusionsStrings",
        "UniqueKey": "kendra.datasource.confluenceconfiguration.exclusionpatterns",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceconfiguration.inclusionpatterns": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceInclusionsExclusionsStrings",
        "UniqueKey": "kendra.datasource.confluenceconfiguration.inclusionpatterns",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceconfiguration.pageconfiguration": {
        "Required": "No",
        "Type": "ConfluencePageConfiguration",
        "UniqueKey": "kendra.datasource.confluenceconfiguration.pageconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceconfiguration.secretarn": {
        "Maximum": "1284",
        "Minimum": "1",
        "Pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.confluenceconfiguration.secretarn",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceconfiguration.serverurl": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^(https?|ftp|file):\\/\\/([^\\s]*)",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.confluenceconfiguration.serverurl",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceconfiguration.spaceconfiguration": {
        "Required": "No",
        "Type": "ConfluenceSpaceConfiguration",
        "UniqueKey": "kendra.datasource.confluenceconfiguration.spaceconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceconfiguration.version": {
        "Allowed values": "CLOUD | SERVER",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.confluenceconfiguration.version",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluenceconfiguration.vpcconfiguration": {
        "Required": "No",
        "Type": "DataSourceVpcConfiguration",
        "UniqueKey": "kendra.datasource.confluenceconfiguration.vpcconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluencepageconfiguration.pagefieldmappings": {
        "Maximum": "12",
        "Required": "No",
        "Type": "ConfluencePageFieldMappingsList",
        "UniqueKey": "kendra.datasource.confluencepageconfiguration.pagefieldmappings",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluencepagefieldmappingslist.confluencepagefieldmappingslist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.datasource.confluencepagefieldmappingslist.confluencepagefieldmappingslist",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluencepagetoindexfieldmapping.datasourcefieldname": {
        "Allowed values": "AUTHOR | CONTENT_STATUS | CREATED_DATE | DISPLAY_URL | ITEM_TYPE | LABELS | MODIFIED_DATE | PARENT_ID | SPACE_KEY | SPACE_NAME | URL | VERSION",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.confluencepagetoindexfieldmapping.datasourcefieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluencepagetoindexfieldmapping.datefieldformat": {
        "Maximum": "40",
        "Minimum": "4",
        "Pattern": "^(?!\\s).*(?<!\\s)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.datasource.confluencepagetoindexfieldmapping.datefieldformat",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluencepagetoindexfieldmapping.indexfieldname": {
        "Maximum": "30",
        "Minimum": "1",
        "Pattern": "^\\P{C}*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.confluencepagetoindexfieldmapping.indexfieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluencespaceconfiguration.crawlarchivedspaces": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kendra.datasource.confluencespaceconfiguration.crawlarchivedspaces",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluencespaceconfiguration.crawlpersonalspaces": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kendra.datasource.confluencespaceconfiguration.crawlpersonalspaces",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluencespaceconfiguration.excludespaces": {
        "Required": "No",
        "Type": "ConfluenceSpaceList",
        "UniqueKey": "kendra.datasource.confluencespaceconfiguration.excludespaces",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluencespaceconfiguration.includespaces": {
        "Required": "No",
        "Type": "ConfluenceSpaceList",
        "UniqueKey": "kendra.datasource.confluencespaceconfiguration.includespaces",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluencespaceconfiguration.spacefieldmappings": {
        "Maximum": "4",
        "Required": "No",
        "Type": "ConfluenceSpaceFieldMappingsList",
        "UniqueKey": "kendra.datasource.confluencespaceconfiguration.spacefieldmappings",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluencespacefieldmappingslist.confluencespacefieldmappingslist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.datasource.confluencespacefieldmappingslist.confluencespacefieldmappingslist",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluencespacelist.confluencespacelist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.datasource.confluencespacelist.confluencespacelist",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluencespacetoindexfieldmapping.datasourcefieldname": {
        "Allowed values": "DISPLAY_URL | ITEM_TYPE | SPACE_KEY | URL",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.confluencespacetoindexfieldmapping.datasourcefieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluencespacetoindexfieldmapping.datefieldformat": {
        "Maximum": "40",
        "Minimum": "4",
        "Pattern": "^(?!\\s).*(?<!\\s)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.datasource.confluencespacetoindexfieldmapping.datefieldformat",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.confluencespacetoindexfieldmapping.indexfieldname": {
        "Maximum": "30",
        "Minimum": "1",
        "Pattern": "^\\P{C}*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.confluencespacetoindexfieldmapping.indexfieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.connectionconfiguration.databasehost": {
        "Maximum": "253",
        "Minimum": "1",
        "Pattern": "^.{1,253}$",
        "Required": "Yes",
        "SampleValue": "TODO-kendra.datasource.connectionconfiguration.DatabaseHost",
        "Type": "String",
        "UniqueKey": "kendra.datasource.connectionconfiguration.databasehost",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.connectionconfiguration.databasename": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.connectionconfiguration.databasename",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.connectionconfiguration.databaseport": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "Yes",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "kendra.datasource.connectionconfiguration.databaseport",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.connectionconfiguration.secretarn": {
        "Maximum": "1284",
        "Minimum": "1",
        "Pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "Required": "Yes",
        "UniqueKey": "kendra.datasource.connectionconfiguration.secretarn",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.connectionconfiguration.tablename": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.connectionconfiguration.tablename",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.databaseconfiguration.aclconfiguration": {
        "Required": "No",
        "Type": "AclConfiguration",
        "UniqueKey": "kendra.datasource.databaseconfiguration.aclconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.databaseconfiguration.columnconfiguration": {
        "Required": "Yes",
        "Type": "ColumnConfiguration",
        "UniqueKey": "kendra.datasource.databaseconfiguration.columnconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.databaseconfiguration.connectionconfiguration": {
        "Required": "Yes",
        "Type": "ConnectionConfiguration",
        "UniqueKey": "kendra.datasource.databaseconfiguration.connectionconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.databaseconfiguration.databaseenginetype": {
        "Allowed values": "RDS_AURORA_MYSQL | RDS_AURORA_POSTGRESQL | RDS_MYSQL | RDS_POSTGRESQL",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.databaseconfiguration.databaseenginetype",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.databaseconfiguration.sqlconfiguration": {
        "Required": "No",
        "Type": "SqlConfiguration",
        "UniqueKey": "kendra.datasource.databaseconfiguration.sqlconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.databaseconfiguration.vpcconfiguration": {
        "Required": "No",
        "Type": "DataSourceVpcConfiguration",
        "UniqueKey": "kendra.datasource.databaseconfiguration.vpcconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.datasourceconfiguration.confluenceconfiguration": {
        "Required": "No",
        "Type": "ConfluenceConfiguration",
        "UniqueKey": "kendra.datasource.datasourceconfiguration.confluenceconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.datasourceconfiguration.databaseconfiguration": {
        "Required": "No",
        "Type": "DatabaseConfiguration",
        "UniqueKey": "kendra.datasource.datasourceconfiguration.databaseconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.datasourceconfiguration.googledriveconfiguration": {
        "Required": "No",
        "Type": "GoogleDriveConfiguration",
        "UniqueKey": "kendra.datasource.datasourceconfiguration.googledriveconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.datasourceconfiguration.onedriveconfiguration": {
        "Required": "No",
        "Type": "OneDriveConfiguration",
        "UniqueKey": "kendra.datasource.datasourceconfiguration.onedriveconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.datasourceconfiguration.s3configuration": {
        "Required": "No",
        "Type": "S3DataSourceConfiguration",
        "UniqueKey": "kendra.datasource.datasourceconfiguration.s3configuration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.datasourceconfiguration.salesforceconfiguration": {
        "Required": "No",
        "Type": "SalesforceConfiguration",
        "UniqueKey": "kendra.datasource.datasourceconfiguration.salesforceconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.datasourceconfiguration.servicenowconfiguration": {
        "Required": "No",
        "Type": "ServiceNowConfiguration",
        "UniqueKey": "kendra.datasource.datasourceconfiguration.servicenowconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.datasourceconfiguration.sharepointconfiguration": {
        "Required": "No",
        "Type": "SharePointConfiguration",
        "UniqueKey": "kendra.datasource.datasourceconfiguration.sharepointconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.datasourceinclusionsexclusionsstrings.datasourceinclusionsexclusionsstrings": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.datasource.datasourceinclusionsexclusionsstrings.datasourceinclusionsexclusionsstrings",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.datasourcetoindexfieldmapping.datasourcefieldname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_.]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.datasourcetoindexfieldmapping.datasourcefieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.datasourcetoindexfieldmapping.datefieldformat": {
        "Maximum": "40",
        "Minimum": "4",
        "Pattern": "^(?!\\s).*(?<!\\s)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.datasource.datasourcetoindexfieldmapping.datefieldformat",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.datasourcetoindexfieldmapping.indexfieldname": {
        "Maximum": "30",
        "Minimum": "1",
        "Pattern": "^\\P{C}*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.datasourcetoindexfieldmapping.indexfieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.datasourcetoindexfieldmappinglist.datasourcetoindexfieldmappinglist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.datasource.datasourcetoindexfieldmappinglist.datasourcetoindexfieldmappinglist",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.datasourcevpcconfiguration.securitygroupids": {
        "Maximum": "10",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "kendra.datasource.datasourcevpcconfiguration.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.datasourcevpcconfiguration.subnetids": {
        "Maximum": "6",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "kendra.datasource.datasourcevpcconfiguration.subnetids",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.documentsmetadataconfiguration.s3prefix": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-kendra.datasource.documentsmetadataconfiguration.S3Prefix",
        "Type": "String",
        "UniqueKey": "kendra.datasource.documentsmetadataconfiguration.s3prefix",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.excludemimetypeslist.excludemimetypeslist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.datasource.excludemimetypeslist.excludemimetypeslist",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.excludeshareddriveslist.excludeshareddriveslist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.datasource.excludeshareddriveslist.excludeshareddriveslist",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.excludeuseraccountslist.excludeuseraccountslist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.datasource.excludeuseraccountslist.excludeuseraccountslist",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.googledriveconfiguration.excludemimetypes": {
        "Maximum": "30",
        "Required": "No",
        "Type": "ExcludeMimeTypesList",
        "UniqueKey": "kendra.datasource.googledriveconfiguration.excludemimetypes",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.googledriveconfiguration.excludeshareddrives": {
        "Maximum": "100",
        "Required": "No",
        "Type": "ExcludeSharedDrivesList",
        "UniqueKey": "kendra.datasource.googledriveconfiguration.excludeshareddrives",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.googledriveconfiguration.excludeuseraccounts": {
        "Maximum": "100",
        "Required": "No",
        "Type": "ExcludeUserAccountsList",
        "UniqueKey": "kendra.datasource.googledriveconfiguration.excludeuseraccounts",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.googledriveconfiguration.exclusionpatterns": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceInclusionsExclusionsStrings",
        "UniqueKey": "kendra.datasource.googledriveconfiguration.exclusionpatterns",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.googledriveconfiguration.fieldmappings": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceToIndexFieldMappingList",
        "UniqueKey": "kendra.datasource.googledriveconfiguration.fieldmappings",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.googledriveconfiguration.inclusionpatterns": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceInclusionsExclusionsStrings",
        "UniqueKey": "kendra.datasource.googledriveconfiguration.inclusionpatterns",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.googledriveconfiguration.secretarn": {
        "Maximum": "1284",
        "Minimum": "1",
        "Pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.googledriveconfiguration.secretarn",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.onedriveconfiguration.disablelocalgroups": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kendra.datasource.onedriveconfiguration.disablelocalgroups",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.onedriveconfiguration.exclusionpatterns": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceInclusionsExclusionsStrings",
        "UniqueKey": "kendra.datasource.onedriveconfiguration.exclusionpatterns",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.onedriveconfiguration.fieldmappings": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceToIndexFieldMappingList",
        "UniqueKey": "kendra.datasource.onedriveconfiguration.fieldmappings",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.onedriveconfiguration.inclusionpatterns": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceInclusionsExclusionsStrings",
        "UniqueKey": "kendra.datasource.onedriveconfiguration.inclusionpatterns",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.onedriveconfiguration.onedriveusers": {
        "Required": "Yes",
        "Type": "OneDriveUsers",
        "UniqueKey": "kendra.datasource.onedriveconfiguration.onedriveusers",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.onedriveconfiguration.secretarn": {
        "Maximum": "1284",
        "Minimum": "1",
        "Pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.onedriveconfiguration.secretarn",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.onedriveconfiguration.tenantdomain": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+[a-z]{2,}$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.onedriveconfiguration.tenantdomain",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.onedriveuserlist.onedriveuserlist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.datasource.onedriveuserlist.onedriveuserlist",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.onedriveusers.onedriveuserlist": {
        "Maximum": "100",
        "Required": "No",
        "Type": "OneDriveUserList",
        "UniqueKey": "kendra.datasource.onedriveusers.onedriveuserlist",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.onedriveusers.onedriveusers3path": {
        "Required": "No",
        "Type": "S3Path",
        "UniqueKey": "kendra.datasource.onedriveusers.onedriveusers3path",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.s3datasourceconfiguration.accesscontrollistconfiguration": {
        "Required": "No",
        "Type": "AccessControlListConfiguration",
        "UniqueKey": "kendra.datasource.s3datasourceconfiguration.accesscontrollistconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.s3datasourceconfiguration.bucketname": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.s3datasourceconfiguration.bucketname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.s3datasourceconfiguration.documentsmetadataconfiguration": {
        "Required": "No",
        "Type": "DocumentsMetadataConfiguration",
        "UniqueKey": "kendra.datasource.s3datasourceconfiguration.documentsmetadataconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.s3datasourceconfiguration.exclusionpatterns": {
        "Maximum": "100",
        "Required": "No",
        "UniqueKey": "kendra.datasource.s3datasourceconfiguration.exclusionpatterns",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.s3datasourceconfiguration.inclusionpatterns": {
        "Maximum": "100",
        "Required": "No",
        "UniqueKey": "kendra.datasource.s3datasourceconfiguration.inclusionpatterns",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.s3datasourceconfiguration.inclusionprefixes": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceInclusionsExclusionsStrings",
        "UniqueKey": "kendra.datasource.s3datasourceconfiguration.inclusionprefixes",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.s3path.bucket": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.s3path.bucket",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.s3path.key": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-kendra.datasource.s3path.Key",
        "Type": "String",
        "UniqueKey": "kendra.datasource.s3path.key",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforcechatterfeedconfiguration.documentdatafieldname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_.]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.salesforcechatterfeedconfiguration.documentdatafieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforcechatterfeedconfiguration.documenttitlefieldname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_.]*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.datasource.salesforcechatterfeedconfiguration.documenttitlefieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforcechatterfeedconfiguration.fieldmappings": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceToIndexFieldMappingList",
        "UniqueKey": "kendra.datasource.salesforcechatterfeedconfiguration.fieldmappings",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforcechatterfeedconfiguration.includefiltertypes": {
        "Maximum": "2",
        "Required": "No",
        "Type": "SalesforceChatterFeedIncludeFilterTypes",
        "UniqueKey": "kendra.datasource.salesforcechatterfeedconfiguration.includefiltertypes",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforcechatterfeedincludefiltertypes.salesforcechatterfeedincludefiltertypes": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.datasource.salesforcechatterfeedincludefiltertypes.salesforcechatterfeedincludefiltertypes",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforceconfiguration.chatterfeedconfiguration": {
        "Required": "No",
        "Type": "SalesforceChatterFeedConfiguration",
        "UniqueKey": "kendra.datasource.salesforceconfiguration.chatterfeedconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforceconfiguration.crawlattachments": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kendra.datasource.salesforceconfiguration.crawlattachments",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforceconfiguration.excludeattachmentfilepatterns": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceInclusionsExclusionsStrings",
        "UniqueKey": "kendra.datasource.salesforceconfiguration.excludeattachmentfilepatterns",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforceconfiguration.includeattachmentfilepatterns": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceInclusionsExclusionsStrings",
        "UniqueKey": "kendra.datasource.salesforceconfiguration.includeattachmentfilepatterns",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforceconfiguration.knowledgearticleconfiguration": {
        "Required": "No",
        "Type": "SalesforceKnowledgeArticleConfiguration",
        "UniqueKey": "kendra.datasource.salesforceconfiguration.knowledgearticleconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforceconfiguration.secretarn": {
        "Maximum": "1284",
        "Minimum": "1",
        "Pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.salesforceconfiguration.secretarn",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforceconfiguration.serverurl": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^(https?|ftp|file):\\/\\/([^\\s]*)",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.salesforceconfiguration.serverurl",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforceconfiguration.standardobjectattachmentconfiguration": {
        "Required": "No",
        "Type": "SalesforceStandardObjectAttachmentConfiguration",
        "UniqueKey": "kendra.datasource.salesforceconfiguration.standardobjectattachmentconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforceconfiguration.standardobjectconfigurations": {
        "Maximum": "17",
        "Required": "No",
        "Type": "SalesforceStandardObjectConfigurationList",
        "UniqueKey": "kendra.datasource.salesforceconfiguration.standardobjectconfigurations",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforcecustomknowledgearticletypeconfiguration.documentdatafieldname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_.]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.salesforcecustomknowledgearticletypeconfiguration.documentdatafieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforcecustomknowledgearticletypeconfiguration.documenttitlefieldname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_.]*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.datasource.salesforcecustomknowledgearticletypeconfiguration.documenttitlefieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforcecustomknowledgearticletypeconfiguration.fieldmappings": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceToIndexFieldMappingList",
        "UniqueKey": "kendra.datasource.salesforcecustomknowledgearticletypeconfiguration.fieldmappings",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforcecustomknowledgearticletypeconfiguration.name": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.salesforcecustomknowledgearticletypeconfiguration.name",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforcecustomknowledgearticletypeconfigurationlist.salesforcecustomknowledgearticletypeconfigurationlist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.datasource.salesforcecustomknowledgearticletypeconfigurationlist.salesforcecustomknowledgearticletypeconfigurationlist",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforceknowledgearticleconfiguration.customknowledgearticletypeconfigurations": {
        "Maximum": "10",
        "Required": "No",
        "Type": "SalesforceCustomKnowledgeArticleTypeConfigurationList",
        "UniqueKey": "kendra.datasource.salesforceknowledgearticleconfiguration.customknowledgearticletypeconfigurations",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforceknowledgearticleconfiguration.includedstates": {
        "Maximum": "3",
        "Required": "Yes",
        "Type": "SalesforceKnowledgeArticleStateList",
        "UniqueKey": "kendra.datasource.salesforceknowledgearticleconfiguration.includedstates",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforceknowledgearticleconfiguration.standardknowledgearticletypeconfiguration": {
        "Required": "No",
        "Type": "SalesforceStandardKnowledgeArticleTypeConfiguration",
        "UniqueKey": "kendra.datasource.salesforceknowledgearticleconfiguration.standardknowledgearticletypeconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforceknowledgearticlestatelist.salesforceknowledgearticlestatelist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.datasource.salesforceknowledgearticlestatelist.salesforceknowledgearticlestatelist",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforcestandardknowledgearticletypeconfiguration.documentdatafieldname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_.]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.salesforcestandardknowledgearticletypeconfiguration.documentdatafieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforcestandardknowledgearticletypeconfiguration.documenttitlefieldname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_.]*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.datasource.salesforcestandardknowledgearticletypeconfiguration.documenttitlefieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforcestandardknowledgearticletypeconfiguration.fieldmappings": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceToIndexFieldMappingList",
        "UniqueKey": "kendra.datasource.salesforcestandardknowledgearticletypeconfiguration.fieldmappings",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforcestandardobjectattachmentconfiguration.documenttitlefieldname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_.]*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.datasource.salesforcestandardobjectattachmentconfiguration.documenttitlefieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforcestandardobjectattachmentconfiguration.fieldmappings": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceToIndexFieldMappingList",
        "UniqueKey": "kendra.datasource.salesforcestandardobjectattachmentconfiguration.fieldmappings",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforcestandardobjectconfiguration.documentdatafieldname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_.]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.salesforcestandardobjectconfiguration.documentdatafieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforcestandardobjectconfiguration.documenttitlefieldname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_.]*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.datasource.salesforcestandardobjectconfiguration.documenttitlefieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforcestandardobjectconfiguration.fieldmappings": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceToIndexFieldMappingList",
        "UniqueKey": "kendra.datasource.salesforcestandardobjectconfiguration.fieldmappings",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforcestandardobjectconfiguration.name": {
        "Allowed values": "ACCOUNT | CAMPAIGN | CASE | CONTACT | CONTRACT | DOCUMENT | GROUP | IDEA | LEAD | OPPORTUNITY | PARTNER | PRICEBOOK | PRODUCT | PROFILE | SOLUTION | TASK | USER",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.salesforcestandardobjectconfiguration.name",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.salesforcestandardobjectconfigurationlist.salesforcestandardobjectconfigurationlist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.datasource.salesforcestandardobjectconfigurationlist.salesforcestandardobjectconfigurationlist",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.servicenowconfiguration.hosturl": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^(?!(^(https?|ftp|file):\\/\\/))[a-z0-9-]+(\\.service-now\\.com)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.servicenowconfiguration.hosturl",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.servicenowconfiguration.knowledgearticleconfiguration": {
        "Required": "No",
        "Type": "ServiceNowKnowledgeArticleConfiguration",
        "UniqueKey": "kendra.datasource.servicenowconfiguration.knowledgearticleconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.servicenowconfiguration.secretarn": {
        "Maximum": "1284",
        "Minimum": "1",
        "Pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.servicenowconfiguration.secretarn",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.servicenowconfiguration.servicecatalogconfiguration": {
        "Required": "No",
        "Type": "ServiceNowServiceCatalogConfiguration",
        "UniqueKey": "kendra.datasource.servicenowconfiguration.servicecatalogconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.servicenowconfiguration.servicenowbuildversion": {
        "Allowed values": "LONDON | OTHERS",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.servicenowconfiguration.servicenowbuildversion",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.servicenowknowledgearticleconfiguration.crawlattachments": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kendra.datasource.servicenowknowledgearticleconfiguration.crawlattachments",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.servicenowknowledgearticleconfiguration.documentdatafieldname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_.]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.servicenowknowledgearticleconfiguration.documentdatafieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.servicenowknowledgearticleconfiguration.documenttitlefieldname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_.]*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.datasource.servicenowknowledgearticleconfiguration.documenttitlefieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.servicenowknowledgearticleconfiguration.excludeattachmentfilepatterns": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceInclusionsExclusionsStrings",
        "UniqueKey": "kendra.datasource.servicenowknowledgearticleconfiguration.excludeattachmentfilepatterns",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.servicenowknowledgearticleconfiguration.fieldmappings": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceToIndexFieldMappingList",
        "UniqueKey": "kendra.datasource.servicenowknowledgearticleconfiguration.fieldmappings",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.servicenowknowledgearticleconfiguration.includeattachmentfilepatterns": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceInclusionsExclusionsStrings",
        "UniqueKey": "kendra.datasource.servicenowknowledgearticleconfiguration.includeattachmentfilepatterns",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.servicenowservicecatalogconfiguration.crawlattachments": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kendra.datasource.servicenowservicecatalogconfiguration.crawlattachments",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.servicenowservicecatalogconfiguration.documentdatafieldname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_.]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.servicenowservicecatalogconfiguration.documentdatafieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.servicenowservicecatalogconfiguration.documenttitlefieldname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_.]*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.datasource.servicenowservicecatalogconfiguration.documenttitlefieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.servicenowservicecatalogconfiguration.excludeattachmentfilepatterns": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceInclusionsExclusionsStrings",
        "UniqueKey": "kendra.datasource.servicenowservicecatalogconfiguration.excludeattachmentfilepatterns",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.servicenowservicecatalogconfiguration.fieldmappings": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceToIndexFieldMappingList",
        "UniqueKey": "kendra.datasource.servicenowservicecatalogconfiguration.fieldmappings",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.servicenowservicecatalogconfiguration.includeattachmentfilepatterns": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceInclusionsExclusionsStrings",
        "UniqueKey": "kendra.datasource.servicenowservicecatalogconfiguration.includeattachmentfilepatterns",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.sharepointconfiguration.crawlattachments": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kendra.datasource.sharepointconfiguration.crawlattachments",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.sharepointconfiguration.disablelocalgroups": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kendra.datasource.sharepointconfiguration.disablelocalgroups",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.sharepointconfiguration.documenttitlefieldname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_.]*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.datasource.sharepointconfiguration.documenttitlefieldname",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.sharepointconfiguration.exclusionpatterns": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceInclusionsExclusionsStrings",
        "UniqueKey": "kendra.datasource.sharepointconfiguration.exclusionpatterns",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.sharepointconfiguration.fieldmappings": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceToIndexFieldMappingList",
        "UniqueKey": "kendra.datasource.sharepointconfiguration.fieldmappings",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.sharepointconfiguration.inclusionpatterns": {
        "Maximum": "100",
        "Required": "No",
        "Type": "DataSourceInclusionsExclusionsStrings",
        "UniqueKey": "kendra.datasource.sharepointconfiguration.inclusionpatterns",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.sharepointconfiguration.secretarn": {
        "Maximum": "1284",
        "Minimum": "1",
        "Pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "Required": "Yes",
        "UniqueKey": "kendra.datasource.sharepointconfiguration.secretarn",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.sharepointconfiguration.sharepointversion": {
        "Allowed values": "SHAREPOINT_ONLINE",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.datasource.sharepointconfiguration.sharepointversion",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.sharepointconfiguration.urls": {
        "Maximum": "100",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "kendra.datasource.sharepointconfiguration.urls",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.sharepointconfiguration.usechangelog": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kendra.datasource.sharepointconfiguration.usechangelog",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.sharepointconfiguration.vpcconfiguration": {
        "Required": "No",
        "Type": "DataSourceVpcConfiguration",
        "UniqueKey": "kendra.datasource.sharepointconfiguration.vpcconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.sqlconfiguration.queryidentifiersenclosingoption": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.datasource.sqlconfiguration.queryidentifiersenclosingoption",
        "UpdateRequires": "Replacement"
    },
    "kendra.datasource.taglist.taglist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.datasource.taglist.taglist",
        "UpdateRequires": "Replacement"
    },
    "kendra.faq.s3path.bucket": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.faq.s3path.bucket",
        "UpdateRequires": "Replacement"
    },
    "kendra.faq.s3path.key": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-kendra.faq.s3path.Key",
        "Type": "String",
        "UniqueKey": "kendra.faq.s3path.key",
        "UpdateRequires": "Replacement"
    },
    "kendra.faq.taglist.taglist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.faq.taglist.taglist",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.capacityunitsconfiguration.querycapacityunits": {
        "Minimum": "0",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "kendra.index.capacityunitsconfiguration.querycapacityunits",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.capacityunitsconfiguration.storagecapacityunits": {
        "Minimum": "0",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "kendra.index.capacityunitsconfiguration.storagecapacityunits",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.documentmetadataconfiguration.name": {
        "Maximum": "30",
        "Minimum": "1",
        "Pattern": "^.{1,30}$",
        "Required": "Yes",
        "SampleValue": "TODO-kendra.index.documentmetadataconfiguration.Name",
        "Type": "String",
        "UniqueKey": "kendra.index.documentmetadataconfiguration.name",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.documentmetadataconfiguration.relevance": {
        "Required": "No",
        "Type": "Relevance",
        "UniqueKey": "kendra.index.documentmetadataconfiguration.relevance",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.documentmetadataconfiguration.search": {
        "Required": "No",
        "Type": "Search",
        "UniqueKey": "kendra.index.documentmetadataconfiguration.search",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.documentmetadataconfiguration.type": {
        "Allowed values": "DATE_VALUE | LONG_VALUE | STRING_LIST_VALUE | STRING_VALUE",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.index.documentmetadataconfiguration.type",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.documentmetadataconfigurationlist.documentmetadataconfigurationlist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.index.documentmetadataconfigurationlist.documentmetadataconfigurationlist",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.jsontokentypeconfiguration.groupattributefield": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "Yes",
        "SampleValue": "TODO-kendra.index.jsontokentypeconfiguration.GroupAttributeField",
        "Type": "String",
        "UniqueKey": "kendra.index.jsontokentypeconfiguration.groupattributefield",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.jsontokentypeconfiguration.usernameattributefield": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "Yes",
        "SampleValue": "TODO-kendra.index.jsontokentypeconfiguration.UserNameAttributeField",
        "Type": "String",
        "UniqueKey": "kendra.index.jsontokentypeconfiguration.usernameattributefield",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.jwttokentypeconfiguration.claimregex": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^\\P{C}*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.index.jwttokentypeconfiguration.claimregex",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.jwttokentypeconfiguration.groupattributefield": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^\\P{C}*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.index.jwttokentypeconfiguration.groupattributefield",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.jwttokentypeconfiguration.issuer": {
        "Maximum": "65",
        "Minimum": "1",
        "Pattern": "^\\P{C}*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.index.jwttokentypeconfiguration.issuer",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.jwttokentypeconfiguration.keylocation": {
        "Allowed values": "SECRET_MANAGER | URL",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kendra.index.jwttokentypeconfiguration.keylocation",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.jwttokentypeconfiguration.secretmanagerarn": {
        "Maximum": "1284",
        "Minimum": "1",
        "Pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.index.jwttokentypeconfiguration.secretmanagerarn",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.jwttokentypeconfiguration.url": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^(https?|ftp|file):\\/\\/([^\\s]*)",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.index.jwttokentypeconfiguration.url",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.jwttokentypeconfiguration.usernameattributefield": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^\\P{C}*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.index.jwttokentypeconfiguration.usernameattributefield",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.relevance.duration": {
        "Maximum": "10",
        "Minimum": "1",
        "Pattern": "[0-9]+[s]",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.index.relevance.duration",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.relevance.freshness": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kendra.index.relevance.freshness",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.relevance.importance": {
        "Maximum": "10",
        "Minimum": "1",
        "Pattern": "^[1,10]}$",
        "Required": "No",
        "SampleValue": "1...10",
        "Type": "Integer",
        "UniqueKey": "kendra.index.relevance.importance",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.relevance.rankorder": {
        "Allowed values": "ASCENDING | DESCENDING",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.index.relevance.rankorder",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.relevance.valueimportanceitems": {
        "Required": "No",
        "Type": "ValueImportanceItems",
        "UniqueKey": "kendra.index.relevance.valueimportanceitems",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.search.displayable": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kendra.index.search.displayable",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.search.facetable": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kendra.index.search.facetable",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.search.searchable": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kendra.index.search.searchable",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.search.sortable": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kendra.index.search.sortable",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.serversideencryptionconfiguration.kmskeyid": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-kendra.index.serversideencryptionconfiguration.KmsKeyId",
        "Type": "String",
        "UniqueKey": "kendra.index.serversideencryptionconfiguration.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.taglist.taglist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.index.taglist.taglist",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.usertokenconfiguration.jsontokentypeconfiguration": {
        "Required": "No",
        "Type": "JsonTokenTypeConfiguration",
        "UniqueKey": "kendra.index.usertokenconfiguration.jsontokentypeconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.usertokenconfiguration.jwttokentypeconfiguration": {
        "Required": "No",
        "Type": "JwtTokenTypeConfiguration",
        "UniqueKey": "kendra.index.usertokenconfiguration.jwttokentypeconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.valueimportanceitem.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kendra.index.valueimportanceitem.key",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.valueimportanceitem.value": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kendra.index.valueimportanceitem.value",
        "UpdateRequires": "Replacement"
    },
    "kendra.index.valueimportanceitems.valueimportanceitems": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "kendra.index.valueimportanceitems.valueimportanceitems",
        "UpdateRequires": "Replacement"
    },
    "kinesis.stream.streamencryption.encryptiontype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesis.stream.streamencryption.encryptiontype",
        "UpdateRequires": "Replacement"
    },
    "kinesis.stream.streamencryption.keyid": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesis.stream.streamencryption.KeyId",
        "Type": "String",
        "UniqueKey": "kinesis.stream.streamencryption.keyid",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.csvmappingparameters.recordcolumndelimiter": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.csvmappingparameters.recordcolumndelimiter",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.csvmappingparameters.recordrowdelimiter": {
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "kinesisanalytics.application.csvmappingparameters.recordrowdelimiter",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.input.inputparallelism": {
        "Required": "No",
        "Type": "InputParallelism",
        "UniqueKey": "kinesisanalytics.application.input.inputparallelism",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.input.inputprocessingconfiguration": {
        "Required": "No",
        "Type": "InputProcessingConfiguration",
        "UniqueKey": "kinesisanalytics.application.input.inputprocessingconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.input.inputschema": {
        "Required": "Yes",
        "Type": "InputSchema",
        "UniqueKey": "kinesisanalytics.application.input.inputschema",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.input.kinesisfirehoseinput": {
        "Required": "Conditional",
        "Type": "KinesisFirehoseInput",
        "UniqueKey": "kinesisanalytics.application.input.kinesisfirehoseinput",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.input.kinesisstreamsinput": {
        "Required": "Conditional",
        "Type": "KinesisStreamsInput",
        "UniqueKey": "kinesisanalytics.application.input.kinesisstreamsinput",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.input.nameprefix": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "^.{1,32}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesisanalytics.application.input.NamePrefix",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.input.nameprefix",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.inputlambdaprocessor.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.inputlambdaprocessor.resourcearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.inputlambdaprocessor.rolearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.inputlambdaprocessor.rolearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.inputparallelism.count": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^[1,64]}$",
        "Required": "No",
        "SampleValue": "1...64",
        "Type": "Integer",
        "UniqueKey": "kinesisanalytics.application.inputparallelism.count",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.inputprocessingconfiguration.inputlambdaprocessor": {
        "Required": "No",
        "Type": "InputLambdaProcessor",
        "UniqueKey": "kinesisanalytics.application.inputprocessingconfiguration.inputlambdaprocessor",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.inputschema.recordcolumns": {
        "Maximum": "1000",
        "Required": "Yes",
        "Type": "List of [RecordColumn",
        "UniqueKey": "kinesisanalytics.application.inputschema.recordcolumns",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.inputschema.recordencoding": {
        "Pattern": "UTF-8",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.inputschema.recordencoding",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.inputschema.recordformat": {
        "Required": "Yes",
        "Type": "RecordFormat",
        "UniqueKey": "kinesisanalytics.application.inputschema.recordformat",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.jsonmappingparameters.recordrowpath": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.jsonmappingparameters.recordrowpath",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.kinesisfirehoseinput.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.kinesisfirehoseinput.resourcearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.kinesisfirehoseinput.rolearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.kinesisfirehoseinput.rolearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.kinesisstreamsinput.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.kinesisstreamsinput.resourcearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.kinesisstreamsinput.rolearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.kinesisstreamsinput.rolearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.mappingparameters.csvmappingparameters": {
        "Required": "No",
        "Type": "CSVMappingParameters",
        "UniqueKey": "kinesisanalytics.application.mappingparameters.csvmappingparameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.mappingparameters.jsonmappingparameters": {
        "Required": "No",
        "Type": "JSONMappingParameters",
        "UniqueKey": "kinesisanalytics.application.mappingparameters.jsonmappingparameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.recordcolumn.mapping": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.recordcolumn.mapping",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.recordcolumn.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.recordcolumn.name",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.recordcolumn.sqltype": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.recordcolumn.sqltype",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.recordformat.mappingparameters": {
        "Required": "No",
        "Type": "MappingParameters",
        "UniqueKey": "kinesisanalytics.application.recordformat.mappingparameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.application.recordformat.recordformattype": {
        "Allowed values": "CSV | JSON",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.recordformat.recordformattype",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.destinationschema.recordformattype": {
        "Allowed values": "CSV | JSON",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.destinationschema.recordformattype",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.kinesisfirehoseoutput.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.kinesisfirehoseoutput.resourcearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.kinesisfirehoseoutput.rolearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.kinesisfirehoseoutput.rolearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.kinesisstreamsoutput.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.kinesisstreamsoutput.resourcearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.kinesisstreamsoutput.rolearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.kinesisstreamsoutput.rolearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.lambdaoutput.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.lambdaoutput.resourcearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.lambdaoutput.rolearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.lambdaoutput.rolearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.output.destinationschema": {
        "Required": "Yes",
        "Type": "DestinationSchema",
        "UniqueKey": "kinesisanalytics.applicationoutput.output.destinationschema",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.output.kinesisfirehoseoutput": {
        "Required": "No",
        "Type": "KinesisFirehoseOutput",
        "UniqueKey": "kinesisanalytics.applicationoutput.output.kinesisfirehoseoutput",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.output.kinesisstreamsoutput": {
        "Required": "No",
        "Type": "KinesisStreamsOutput",
        "UniqueKey": "kinesisanalytics.applicationoutput.output.kinesisstreamsoutput",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.output.lambdaoutput": {
        "Required": "No",
        "Type": "LambdaOutput",
        "UniqueKey": "kinesisanalytics.applicationoutput.output.lambdaoutput",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationoutput.output.name": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "^.{1,32}$",
        "Required": "No",
        "SampleValue": "TODO-kinesisanalytics.applicationoutput.output.Name",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.output.name",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.csvmappingparameters.recordcolumndelimiter": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.csvmappingparameters.recordcolumndelimiter",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.csvmappingparameters.recordrowdelimiter": {
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.csvmappingparameters.recordrowdelimiter",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.jsonmappingparameters.recordrowpath": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.jsonmappingparameters.recordrowpath",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.mappingparameters.csvmappingparameters": {
        "Required": "No",
        "Type": "CSVMappingParameters",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.mappingparameters.csvmappingparameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.mappingparameters.jsonmappingparameters": {
        "Required": "No",
        "Type": "JSONMappingParameters",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.mappingparameters.jsonmappingparameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.recordcolumn.mapping": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.recordcolumn.mapping",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.recordcolumn.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.recordcolumn.name",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.recordcolumn.sqltype": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.recordcolumn.sqltype",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.recordformat.mappingparameters": {
        "Required": "No",
        "Type": "MappingParameters",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.recordformat.mappingparameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.recordformat.recordformattype": {
        "Allowed values": "CSV | JSON",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.recordformat.recordformattype",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.referencedatasource.referenceschema": {
        "Required": "Yes",
        "Type": "ReferenceSchema",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.referencedatasource.referenceschema",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.referencedatasource.s3referencedatasource": {
        "Required": "No",
        "Type": "S3ReferenceDataSource",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.referencedatasource.s3referencedatasource",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.referencedatasource.tablename": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "^.{1,32}$",
        "Required": "No",
        "SampleValue": "TODO-kinesisanalytics.applicationreferencedatasource.referencedatasource.TableName",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.referencedatasource.tablename",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.referenceschema.recordcolumns": {
        "Required": "Yes",
        "Type": "List of [RecordColumn",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.referenceschema.recordcolumns",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.referenceschema.recordencoding": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.referenceschema.recordencoding",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.referenceschema.recordformat": {
        "Required": "Yes",
        "Type": "RecordFormat",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.referenceschema.recordformat",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.bucketarn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.bucketarn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.filekey": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesisanalytics.applicationreferencedatasource.s3referencedatasource.FileKey",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.filekey",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.referencerolearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.referencerolearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.applicationcodeconfiguration.codecontent": {
        "Required": "Yes",
        "Type": "CodeContent",
        "UniqueKey": "kinesisanalyticsv2.application.applicationcodeconfiguration.codecontent",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.applicationcodeconfiguration.codecontenttype": {
        "Allowed values": "PLAINTEXT | ZIPFILE",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.applicationcodeconfiguration.codecontenttype",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.applicationconfiguration.applicationcodeconfiguration": {
        "Required": "Conditional",
        "Type": "ApplicationCodeConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.applicationconfiguration.applicationcodeconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.applicationconfiguration.applicationsnapshotconfiguration": {
        "Required": "No",
        "Type": "ApplicationSnapshotConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.applicationconfiguration.applicationsnapshotconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.applicationconfiguration.environmentproperties": {
        "Required": "No",
        "Type": "EnvironmentProperties",
        "UniqueKey": "kinesisanalyticsv2.application.applicationconfiguration.environmentproperties",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.applicationconfiguration.flinkapplicationconfiguration": {
        "Required": "No",
        "Type": "FlinkApplicationConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.applicationconfiguration.flinkapplicationconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.applicationconfiguration.sqlapplicationconfiguration": {
        "Required": "No",
        "Type": "SqlApplicationConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.applicationconfiguration.sqlapplicationconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.applicationsnapshotconfiguration.snapshotsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisanalyticsv2.application.applicationsnapshotconfiguration.snapshotsenabled",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.checkpointconfiguration.checkpointingenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisanalyticsv2.application.checkpointconfiguration.checkpointingenabled",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.checkpointconfiguration.checkpointinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisanalyticsv2.application.checkpointconfiguration.checkpointinterval",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.checkpointconfiguration.configurationtype": {
        "Required": "Yes",
        "SampleValue": "TODO-ConfigurationType",
        "UniqueKey": "kinesisanalyticsv2.application.checkpointconfiguration.configurationtype",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.checkpointconfiguration.minpausebetweencheckpoints": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisanalyticsv2.application.checkpointconfiguration.minpausebetweencheckpoints",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.codecontent.s3contentlocation": {
        "Required": "No",
        "Type": "S3ContentLocation",
        "UniqueKey": "kinesisanalyticsv2.application.codecontent.s3contentlocation",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.codecontent.textcontent": {
        "Maximum": "102400",
        "Minimum": "0",
        "Pattern": "^.{0,102400}$",
        "Required": "No",
        "SampleValue": "TODO-kinesisanalyticsv2.application.codecontent.TextContent",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.codecontent.textcontent",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.codecontent.zipfilecontent": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.codecontent.zipfilecontent",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.csvmappingparameters.recordcolumndelimiter": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesisanalyticsv2.application.csvmappingparameters.RecordColumnDelimiter",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.csvmappingparameters.recordcolumndelimiter",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.csvmappingparameters.recordrowdelimiter": {
        "Maximum": "1024",
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "kinesisanalyticsv2.application.csvmappingparameters.recordrowdelimiter",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.environmentproperties.propertygroups": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of [PropertyGroup",
        "UniqueKey": "kinesisanalyticsv2.application.environmentproperties.propertygroups",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.flinkapplicationconfiguration.checkpointconfiguration": {
        "Required": "No",
        "Type": "CheckpointConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.flinkapplicationconfiguration.checkpointconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.flinkapplicationconfiguration.monitoringconfiguration": {
        "Required": "No",
        "Type": "MonitoringConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.flinkapplicationconfiguration.monitoringconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.flinkapplicationconfiguration.parallelismconfiguration": {
        "Required": "No",
        "Type": "ParallelismConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.flinkapplicationconfiguration.parallelismconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.input.inputparallelism": {
        "Required": "No",
        "Type": "InputParallelism",
        "UniqueKey": "kinesisanalyticsv2.application.input.inputparallelism",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.input.inputprocessingconfiguration": {
        "Required": "No",
        "Type": "InputProcessingConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.input.inputprocessingconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.input.inputschema": {
        "Required": "Yes",
        "Type": "InputSchema",
        "UniqueKey": "kinesisanalyticsv2.application.input.inputschema",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.input.kinesisfirehoseinput": {
        "Required": "No",
        "Type": "KinesisFirehoseInput",
        "UniqueKey": "kinesisanalyticsv2.application.input.kinesisfirehoseinput",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.input.kinesisstreamsinput": {
        "Required": "No",
        "Type": "KinesisStreamsInput",
        "UniqueKey": "kinesisanalyticsv2.application.input.kinesisstreamsinput",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.input.nameprefix": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "[^-\\s<>&]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.input.nameprefix",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.inputlambdaprocessor.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.inputlambdaprocessor.resourcearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.inputparallelism.count": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^[1,64]}$",
        "Required": "No",
        "SampleValue": "1...64",
        "Type": "Integer",
        "UniqueKey": "kinesisanalyticsv2.application.inputparallelism.count",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.inputprocessingconfiguration.inputlambdaprocessor": {
        "Required": "No",
        "Type": "InputLambdaProcessor",
        "UniqueKey": "kinesisanalyticsv2.application.inputprocessingconfiguration.inputlambdaprocessor",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.inputschema.recordcolumns": {
        "Maximum": "1000",
        "Required": "Yes",
        "Type": "List of [RecordColumn",
        "UniqueKey": "kinesisanalyticsv2.application.inputschema.recordcolumns",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.inputschema.recordencoding": {
        "Maximum": "5",
        "Minimum": "5",
        "Pattern": "UTF-8",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.inputschema.recordencoding",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.inputschema.recordformat": {
        "Required": "Yes",
        "Type": "RecordFormat",
        "UniqueKey": "kinesisanalyticsv2.application.inputschema.recordformat",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.jsonmappingparameters.recordrowpath": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^(?=^\\$)(?=^\\S+$).*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.jsonmappingparameters.recordrowpath",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.kinesisfirehoseinput.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.kinesisfirehoseinput.resourcearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.kinesisstreamsinput.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.kinesisstreamsinput.resourcearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.mappingparameters.csvmappingparameters": {
        "Required": "No",
        "Type": "CSVMappingParameters",
        "UniqueKey": "kinesisanalyticsv2.application.mappingparameters.csvmappingparameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.mappingparameters.jsonmappingparameters": {
        "Required": "No",
        "Type": "JSONMappingParameters",
        "UniqueKey": "kinesisanalyticsv2.application.mappingparameters.jsonmappingparameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.monitoringconfiguration.configurationtype": {
        "Allowed values": "CUSTOM | DEFAULT",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.monitoringconfiguration.configurationtype",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.monitoringconfiguration.loglevel": {
        "Allowed values": "DEBUG | ERROR | INFO | WARN",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.monitoringconfiguration.loglevel",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.monitoringconfiguration.metricslevel": {
        "Allowed values": "APPLICATION | OPERATOR | PARALLELISM | TASK",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.monitoringconfiguration.metricslevel",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.parallelismconfiguration.autoscalingenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisanalyticsv2.application.parallelismconfiguration.autoscalingenabled",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.parallelismconfiguration.configurationtype": {
        "Allowed values": "CUSTOM | DEFAULT",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.parallelismconfiguration.configurationtype",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.parallelismconfiguration.parallelism": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisanalyticsv2.application.parallelismconfiguration.parallelism",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.parallelismconfiguration.parallelismperkpu": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisanalyticsv2.application.parallelismconfiguration.parallelismperkpu",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.propertygroup.propertygroupid": {
        "Maximum": "50",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9_.-]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.propertygroup.propertygroupid",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.propertygroup.propertymap": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "kinesisanalyticsv2.application.propertygroup.propertymap",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.recordcolumn.mapping": {
        "Maximum": "65535",
        "Minimum": "0",
        "Pattern": "^.{0,65535}$",
        "Required": "No",
        "SampleValue": "TODO-kinesisanalyticsv2.application.recordcolumn.Mapping",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.recordcolumn.mapping",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.recordcolumn.name": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[^-\\s<>&]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.recordcolumn.name",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.recordcolumn.sqltype": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesisanalyticsv2.application.recordcolumn.SqlType",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.recordcolumn.sqltype",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.recordformat.mappingparameters": {
        "Required": "No",
        "Type": "MappingParameters",
        "UniqueKey": "kinesisanalyticsv2.application.recordformat.mappingparameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.recordformat.recordformattype": {
        "Allowed values": "CSV | JSON",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.recordformat.recordformattype",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.s3contentlocation.bucketarn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.s3contentlocation.bucketarn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.s3contentlocation.filekey": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-kinesisanalyticsv2.application.s3contentlocation.FileKey",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.s3contentlocation.filekey",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.s3contentlocation.objectversion": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": "^.{0,1024}$",
        "Required": "No",
        "SampleValue": "TODO-kinesisanalyticsv2.application.s3contentlocation.ObjectVersion",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.s3contentlocation.objectversion",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.application.sqlapplicationconfiguration.inputs": {
        "Required": "No",
        "Type": "List of [Input",
        "UniqueKey": "kinesisanalyticsv2.application.sqlapplicationconfiguration.inputs",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationcloudwatchloggingoption.cloudwatchloggingoption.logstreamarn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationcloudwatchloggingoption.cloudwatchloggingoption.logstreamarn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationoutput.destinationschema.recordformattype": {
        "Allowed values": "CSV | JSON",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.destinationschema.recordformattype",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationoutput.kinesisfirehoseoutput.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.kinesisfirehoseoutput.resourcearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationoutput.kinesisstreamsoutput.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.kinesisstreamsoutput.resourcearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationoutput.lambdaoutput.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.lambdaoutput.resourcearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationoutput.output.destinationschema": {
        "Required": "Yes",
        "Type": "DestinationSchema",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.output.destinationschema",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationoutput.output.kinesisfirehoseoutput": {
        "Required": "No",
        "Type": "KinesisFirehoseOutput",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.output.kinesisfirehoseoutput",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationoutput.output.kinesisstreamsoutput": {
        "Required": "No",
        "Type": "KinesisStreamsOutput",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.output.kinesisstreamsoutput",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationoutput.output.lambdaoutput": {
        "Required": "No",
        "Type": "LambdaOutput",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.output.lambdaoutput",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationoutput.output.name": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "[^-\\s<>&]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.output.name",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.csvmappingparameters.recordcolumndelimiter": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesisanalyticsv2.applicationreferencedatasource.csvmappingparameters.RecordColumnDelimiter",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.csvmappingparameters.recordcolumndelimiter",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.csvmappingparameters.recordrowdelimiter": {
        "Maximum": "1024",
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.csvmappingparameters.recordrowdelimiter",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.jsonmappingparameters.recordrowpath": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^(?=^\\$)(?=^\\S+$).*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.jsonmappingparameters.recordrowpath",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.mappingparameters.csvmappingparameters": {
        "Required": "No",
        "Type": "CSVMappingParameters",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.mappingparameters.csvmappingparameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.mappingparameters.jsonmappingparameters": {
        "Required": "No",
        "Type": "JSONMappingParameters",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.mappingparameters.jsonmappingparameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.mapping": {
        "Maximum": "65535",
        "Minimum": "0",
        "Pattern": "^.{0,65535}$",
        "Required": "No",
        "SampleValue": "TODO-kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.Mapping",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.mapping",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.name": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[^-\\s<>&]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.name",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.sqltype": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.SqlType",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.sqltype",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.recordformat.mappingparameters": {
        "Required": "No",
        "Type": "MappingParameters",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.recordformat.mappingparameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.recordformat.recordformattype": {
        "Allowed values": "CSV | JSON",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.recordformat.recordformattype",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.referenceschema": {
        "Required": "Yes",
        "Type": "ReferenceSchema",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.referenceschema",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.s3referencedatasource": {
        "Required": "No",
        "Type": "S3ReferenceDataSource",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.s3referencedatasource",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.tablename": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "^.{1,32}$",
        "Required": "No",
        "SampleValue": "TODO-kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.TableName",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.tablename",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.recordcolumns": {
        "Maximum": "1000",
        "Required": "Yes",
        "Type": "List of [RecordColumn",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.recordcolumns",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.recordencoding": {
        "Maximum": "5",
        "Minimum": "5",
        "Pattern": "UTF-8",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.recordencoding",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.recordformat": {
        "Required": "Yes",
        "Type": "RecordFormat",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.recordformat",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.s3referencedatasource.bucketarn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.s3referencedatasource.bucketarn",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.s3referencedatasource.filekey": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesisanalyticsv2.applicationreferencedatasource.s3referencedatasource.FileKey",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.s3referencedatasource.filekey",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.bufferinghints.intervalinseconds": {
        "Maximum": "900",
        "Minimum": "60",
        "Required": "No",
        "UniqueKey": "kinesisfirehose.deliverystream.bufferinghints.intervalinseconds",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.bufferinghints.sizeinmbs": {
        "Maximum": "128",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "kinesisfirehose.deliverystream.bufferinghints.sizeinmbs",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.cloudwatchloggingoptions.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.cloudwatchloggingoptions.enabled",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.cloudwatchloggingoptions.loggroupname": {
        "Maximum": "512",
        "Minimum": "0",
        "Pattern": "[\\.\\-_/#A-Za-z0-9]*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.cloudwatchloggingoptions.loggroupname",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.cloudwatchloggingoptions.logstreamname": {
        "Maximum": "512",
        "Minimum": "0",
        "Pattern": "[^:*]*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.cloudwatchloggingoptions.logstreamname",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.copycommand.copyoptions": {
        "Maximum": "204800",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "No",
        "UniqueKey": "kinesisfirehose.deliverystream.copycommand.copyoptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.copycommand.datatablecolumns": {
        "Maximum": "204800",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.copycommand.datatablecolumns",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.copycommand.datatablename": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.copycommand.datatablename",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.dataformatconversionconfiguration.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.dataformatconversionconfiguration.enabled",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.dataformatconversionconfiguration.inputformatconfiguration": {
        "Required": "No",
        "Type": "InputFormatConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.dataformatconversionconfiguration.inputformatconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.dataformatconversionconfiguration.outputformatconfiguration": {
        "Required": "No",
        "Type": "OutputFormatConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.dataformatconversionconfiguration.outputformatconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.dataformatconversionconfiguration.schemaconfiguration": {
        "Required": "No",
        "Type": "SchemaConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.dataformatconversionconfiguration.schemaconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.deliverystreamencryptionconfigurationinput.keyarn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.deliverystreamencryptionconfigurationinput.keyarn",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.deliverystreamencryptionconfigurationinput.keytype": {
        "Allowed values": "AWS_OWNED_CMK | CUSTOMER_MANAGED_CMK",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.deliverystreamencryptionconfigurationinput.keytype",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.deserializer.hivejsonserde": {
        "Required": "No",
        "Type": "HiveJsonSerDe",
        "UniqueKey": "kinesisfirehose.deliverystream.deserializer.hivejsonserde",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.deserializer.openxjsonserde": {
        "Required": "No",
        "Type": "OpenXJsonSerDe",
        "UniqueKey": "kinesisfirehose.deliverystream.deserializer.openxjsonserde",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchbufferinghints.intervalinseconds": {
        "Maximum": "900",
        "Minimum": "60",
        "Required": "No",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchbufferinghints.intervalinseconds",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchbufferinghints.sizeinmbs": {
        "Maximum": "100",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchbufferinghints.sizeinmbs",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.bufferinghints": {
        "Required": "No",
        "Type": "ElasticsearchBufferingHints",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.bufferinghints",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.cloudwatchloggingoptions": {
        "Required": "No",
        "Type": "CloudWatchLoggingOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.cloudwatchloggingoptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.clusterendpoint": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.clusterendpoint",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.domainarn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "No",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.domainarn",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.indexname": {
        "Maximum": "80",
        "Minimum": "1",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.indexname",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.indexrotationperiod": {
        "Required": "No",
        "SampleValue": "TODO-IndexRotationPeriod",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.indexrotationperiod",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.processingconfiguration": {
        "Required": "No",
        "Type": "ProcessingConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.processingconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.retryoptions": {
        "Required": "No",
        "Type": "ElasticsearchRetryOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.retryoptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.rolearn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.rolearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.s3backupmode": {
        "Required": "No",
        "SampleValue": "TODO-S3BackupMode",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.s3backupmode",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.s3configuration": {
        "Required": "Yes",
        "Type": "S3DestinationConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.s3configuration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.typename": {
        "Maximum": "100",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.typename",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.vpcconfiguration": {
        "Required": "No",
        "Type": "VpcConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.vpcconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.elasticsearchretryoptions.durationinseconds": {
        "Maximum": "7200",
        "Minimum": "0",
        "Required": "No",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchretryoptions.durationinseconds",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.encryptionconfiguration.kmsencryptionconfig": {
        "Required": "No",
        "Type": "KMSEncryptionConfig",
        "UniqueKey": "kinesisfirehose.deliverystream.encryptionconfiguration.kmsencryptionconfig",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.encryptionconfiguration.noencryptionconfig": {
        "Required": "No",
        "SampleValue": "TODO-NoEncryptionConfig",
        "UniqueKey": "kinesisfirehose.deliverystream.encryptionconfiguration.noencryptionconfig",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.bucketarn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.bucketarn",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.bufferinghints": {
        "Required": "No",
        "Type": "BufferingHints",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.bufferinghints",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.cloudwatchloggingoptions": {
        "Required": "No",
        "Type": "CloudWatchLoggingOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.cloudwatchloggingoptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.compressionformat": {
        "Allowed values": "GZIP | HADOOP_SNAPPY | Snappy | UNCOMPRESSED | ZIP",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.compressionformat",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.dataformatconversionconfiguration": {
        "Required": "No",
        "Type": "DataFormatConversionConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.dataformatconversionconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.encryptionconfiguration": {
        "Required": "No",
        "Type": "EncryptionConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.encryptionconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.erroroutputprefix": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.erroroutputprefix",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.prefix": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "No",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.prefix",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.processingconfiguration": {
        "Required": "No",
        "Type": "ProcessingConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.processingconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.rolearn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.rolearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.s3backupconfiguration": {
        "Required": "No",
        "Type": "S3DestinationConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.s3backupconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.s3backupmode": {
        "Allowed values": "Disabled | Enabled",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.s3backupmode",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.hivejsonserde.timestampformats": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "kinesisfirehose.deliverystream.hivejsonserde.timestampformats",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointcommonattribute.attributename": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^(?!\\s*$).+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointcommonattribute.attributename",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointcommonattribute.attributevalue": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointcommonattribute.attributevalue",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointconfiguration.accesskey": {
        "Maximum": "4096",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointconfiguration.accesskey",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointconfiguration.name": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^(?!\\s*$).+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointconfiguration.name",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointconfiguration.url": {
        "Maximum": "1000",
        "Minimum": "1",
        "Pattern": "https://.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointconfiguration.url",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.bufferinghints": {
        "Required": "No",
        "Type": "BufferingHints",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.bufferinghints",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.cloudwatchloggingoptions": {
        "Required": "No",
        "Type": "CloudWatchLoggingOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.cloudwatchloggingoptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.endpointconfiguration": {
        "Required": "Yes",
        "Type": "HttpEndpointConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.endpointconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.processingconfiguration": {
        "Required": "No",
        "Type": "ProcessingConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.processingconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.requestconfiguration": {
        "Required": "No",
        "Type": "HttpEndpointRequestConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.requestconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.retryoptions": {
        "Required": "No",
        "Type": "RetryOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.retryoptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.rolearn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.rolearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.s3backupmode": {
        "Allowed values": "AllData | FailedDataOnly",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.s3backupmode",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.s3configuration": {
        "Required": "Yes",
        "Type": "S3DestinationConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointdestinationconfiguration.s3configuration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointrequestconfiguration.commonattributes": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of [HttpEndpointCommonAttribute",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointrequestconfiguration.commonattributes",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.httpendpointrequestconfiguration.contentencoding": {
        "Allowed values": "GZIP | NONE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.httpendpointrequestconfiguration.contentencoding",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.inputformatconfiguration.deserializer": {
        "Required": "No",
        "Type": "Deserializer",
        "UniqueKey": "kinesisfirehose.deliverystream.inputformatconfiguration.deserializer",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.kinesisstreamsourceconfiguration.kinesisstreamarn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.kinesisstreamsourceconfiguration.kinesisstreamarn",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.kinesisstreamsourceconfiguration.rolearn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.kinesisstreamsourceconfiguration.rolearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.kmsencryptionconfig.awskmskeyarn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.kmsencryptionconfig.awskmskeyarn",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.openxjsonserde.caseinsensitive": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.openxjsonserde.caseinsensitive",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.openxjsonserde.columntojsonkeymappings": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "kinesisfirehose.deliverystream.openxjsonserde.columntojsonkeymappings",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.openxjsonserde.convertdotsinjsonkeystounderscores": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.openxjsonserde.convertdotsinjsonkeystounderscores",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.orcserde.blocksizebytes": {
        "Minimum": "67108864",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.blocksizebytes",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.orcserde.bloomfiltercolumns": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.bloomfiltercolumns",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.orcserde.bloomfilterfalsepositiveprobability": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.bloomfilterfalsepositiveprobability",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.orcserde.compression": {
        "Allowed values": "NONE | SNAPPY | ZLIB",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.compression",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.orcserde.dictionarykeythreshold": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.dictionarykeythreshold",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.orcserde.enablepadding": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.enablepadding",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.orcserde.formatversion": {
        "Allowed values": "V0_11 | V0_12",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.formatversion",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.orcserde.paddingtolerance": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.paddingtolerance",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.orcserde.rowindexstride": {
        "Minimum": "1000",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.rowindexstride",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.orcserde.stripesizebytes": {
        "Minimum": "8388608",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.stripesizebytes",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.outputformatconfiguration.serializer": {
        "Required": "No",
        "Type": "Serializer",
        "UniqueKey": "kinesisfirehose.deliverystream.outputformatconfiguration.serializer",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.parquetserde.blocksizebytes": {
        "Minimum": "67108864",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.parquetserde.blocksizebytes",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.parquetserde.compression": {
        "Allowed values": "GZIP | SNAPPY | UNCOMPRESSED",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.parquetserde.compression",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.parquetserde.enabledictionarycompression": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.parquetserde.enabledictionarycompression",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.parquetserde.maxpaddingbytes": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.parquetserde.maxpaddingbytes",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.parquetserde.pagesizebytes": {
        "Minimum": "65536",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.parquetserde.pagesizebytes",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.parquetserde.writerversion": {
        "Allowed values": "V1 | V2",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.parquetserde.writerversion",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.processingconfiguration.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.processingconfiguration.enabled",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.processingconfiguration.processors": {
        "Required": "No",
        "Type": "List of [Processor",
        "UniqueKey": "kinesisfirehose.deliverystream.processingconfiguration.processors",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.processor.parameters": {
        "Required": "No",
        "Type": "List of [ProcessorParameter",
        "UniqueKey": "kinesisfirehose.deliverystream.processor.parameters",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.processor.type": {
        "Allowed values": "Lambda",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.processor.type",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.processorparameter.parametername": {
        "Allowed values": "BufferIntervalInSeconds | BufferSizeInMBs | LambdaArn | NumberOfRetries | RoleArn",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.processorparameter.parametername",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.processorparameter.parametervalue": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "^(?!\\s*$).+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.processorparameter.parametervalue",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.cloudwatchloggingoptions": {
        "Required": "No",
        "Type": "CloudWatchLoggingOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.cloudwatchloggingoptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.clusterjdbcurl": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "jdbc:(redshift|postgresql)://((?!-)[A-Za-z0-9-]{1,63}(?<!-)\\.)+redshift\\.([a-zA-Z0-9\\.]+):\\d{1,5}/[a-zA-Z0-9_$]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.clusterjdbcurl",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.copycommand": {
        "Required": "Yes",
        "Type": "CopyCommand",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.copycommand",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.password": {
        "Maximum": "512",
        "Minimum": "6",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.password",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.processingconfiguration": {
        "Required": "No",
        "Type": "ProcessingConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.processingconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.retryoptions": {
        "Required": "No",
        "Type": "RedshiftRetryOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.retryoptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.rolearn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.rolearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.s3backupconfiguration": {
        "Required": "No",
        "Type": "S3DestinationConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.s3backupconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.s3backupmode": {
        "Allowed values": "Disabled | Enabled",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.s3backupmode",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.s3configuration": {
        "Required": "Yes",
        "Type": "S3DestinationConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.s3configuration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.username": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.username",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.redshiftretryoptions.durationinseconds": {
        "Maximum": "7200",
        "Minimum": "0",
        "Pattern": "^[0,7200]}$",
        "Required": "No",
        "SampleValue": "0...7200",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftretryoptions.durationinseconds",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.retryoptions.durationinseconds": {
        "Maximum": "7200",
        "Minimum": "0",
        "Pattern": "^[0,7200]}$",
        "Required": "No",
        "SampleValue": "0...7200",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.retryoptions.durationinseconds",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.bucketarn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.bucketarn",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.bufferinghints": {
        "Required": "No",
        "Type": "BufferingHints",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.bufferinghints",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.cloudwatchloggingoptions": {
        "Required": "No",
        "Type": "CloudWatchLoggingOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.cloudwatchloggingoptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.compressionformat": {
        "Required": "No",
        "SampleValue": "TODO-CompressionFormat",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.compressionformat",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.encryptionconfiguration": {
        "Required": "No",
        "Type": "EncryptionConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.encryptionconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.erroroutputprefix": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.erroroutputprefix",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.prefix": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.prefix",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.rolearn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.rolearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.schemaconfiguration.catalogid": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^\\S+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.schemaconfiguration.catalogid",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.schemaconfiguration.databasename": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^\\S+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.schemaconfiguration.databasename",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.schemaconfiguration.region": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^\\S+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.schemaconfiguration.region",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.schemaconfiguration.rolearn": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^\\S+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.schemaconfiguration.rolearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.schemaconfiguration.tablename": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^\\S+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.schemaconfiguration.tablename",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.schemaconfiguration.versionid": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^\\S+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.schemaconfiguration.versionid",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.serializer.orcserde": {
        "Required": "No",
        "Type": "OrcSerDe",
        "UniqueKey": "kinesisfirehose.deliverystream.serializer.orcserde",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.serializer.parquetserde": {
        "Required": "No",
        "Type": "ParquetSerDe",
        "UniqueKey": "kinesisfirehose.deliverystream.serializer.parquetserde",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.cloudwatchloggingoptions": {
        "Required": "No",
        "Type": "CloudWatchLoggingOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.cloudwatchloggingoptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.hecacknowledgmenttimeoutinseconds": {
        "Maximum": "600",
        "Minimum": "180",
        "Pattern": "^[180,600]}$",
        "Required": "No",
        "SampleValue": "180...600",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.hecacknowledgmenttimeoutinseconds",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.hecendpoint": {
        "Maximum": "2048",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.hecendpoint",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.hecendpointtype": {
        "Allowed values": "Event | Raw",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.hecendpointtype",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.hectoken": {
        "Maximum": "2048",
        "Minimum": "0",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.hectoken",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.processingconfiguration": {
        "Required": "No",
        "Type": "ProcessingConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.processingconfiguration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.retryoptions": {
        "Required": "No",
        "Type": "SplunkRetryOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.retryoptions",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.s3backupmode": {
        "Allowed values": "AllEvents | FailedEventsOnly",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.s3backupmode",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.s3configuration": {
        "Required": "Yes",
        "Type": "S3DestinationConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.s3configuration",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.splunkretryoptions.durationinseconds": {
        "Maximum": "7200",
        "Minimum": "0",
        "Pattern": "^[0,7200]}$",
        "Required": "No",
        "SampleValue": "0...7200",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkretryoptions.durationinseconds",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.vpcconfiguration.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.vpcconfiguration.rolearn",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.vpcconfiguration.securitygroupids": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "kinesisfirehose.deliverystream.vpcconfiguration.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "kinesisfirehose.deliverystream.vpcconfiguration.subnetids": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "kinesisfirehose.deliverystream.vpcconfiguration.subnetids",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.datalakesettings.datalakeprincipal.datalakeprincipalidentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.datalakesettings.datalakeprincipal.datalakeprincipalidentifier",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.columnwildcard.excludedcolumnnames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "lakeformation.permissions.columnwildcard.excludedcolumnnames",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.databaseresource.catalogid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.databaseresource.catalogid",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.databaseresource.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.databaseresource.name",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.datalakeprincipal.datalakeprincipalidentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.datalakeprincipal.datalakeprincipalidentifier",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.datalocationresource.catalogid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.datalocationresource.catalogid",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.datalocationresource.s3resource": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.datalocationresource.s3resource",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.resource.databaseresource": {
        "Required": "No",
        "Type": "DatabaseResource",
        "UniqueKey": "lakeformation.permissions.resource.databaseresource",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.resource.datalocationresource": {
        "Required": "No",
        "Type": "DataLocationResource",
        "UniqueKey": "lakeformation.permissions.resource.datalocationresource",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.resource.tableresource": {
        "Required": "No",
        "Type": "TableResource",
        "UniqueKey": "lakeformation.permissions.resource.tableresource",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.resource.tablewithcolumnsresource": {
        "Required": "No",
        "Type": "TableWithColumnsResource",
        "UniqueKey": "lakeformation.permissions.resource.tablewithcolumnsresource",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.tableresource.catalogid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.tableresource.catalogid",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.tableresource.databasename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.tableresource.databasename",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.tableresource.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.tableresource.name",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.tableresource.tablewildcard": {
        "Required": "No",
        "Type": "TableWildcard",
        "UniqueKey": "lakeformation.permissions.tableresource.tablewildcard",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.tablewithcolumnsresource.catalogid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.tablewithcolumnsresource.catalogid",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.tablewithcolumnsresource.columnnames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "lakeformation.permissions.tablewithcolumnsresource.columnnames",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.tablewithcolumnsresource.columnwildcard": {
        "Required": "No",
        "Type": "ColumnWildcard",
        "UniqueKey": "lakeformation.permissions.tablewithcolumnsresource.columnwildcard",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.tablewithcolumnsresource.databasename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.tablewithcolumnsresource.databasename",
        "UpdateRequires": "Replacement"
    },
    "lakeformation.permissions.tablewithcolumnsresource.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.tablewithcolumnsresource.name",
        "UpdateRequires": "Replacement"
    },
    "lambda.alias.aliasroutingconfiguration.additionalversionweights": {
        "Required": "Yes",
        "Type": "List of [VersionWeight",
        "UniqueKey": "lambda.alias.aliasroutingconfiguration.additionalversionweights",
        "UpdateRequires": "Replacement"
    },
    "lambda.alias.provisionedconcurrencyconfiguration.provisionedconcurrentexecutions": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "lambda.alias.provisionedconcurrencyconfiguration.provisionedconcurrentexecutions",
        "UpdateRequires": "Replacement"
    },
    "lambda.alias.versionweight.functionversion": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "lambda.alias.versionweight.functionversion",
        "UpdateRequires": "Replacement"
    },
    "lambda.alias.versionweight.functionweight": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "lambda.alias.versionweight.functionweight",
        "UpdateRequires": "Replacement"
    },
    "lambda.codesigningconfig.allowedpublishers.signingprofileversionarns": {
        "Maximum": "20",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "lambda.codesigningconfig.allowedpublishers.signingprofileversionarns",
        "UpdateRequires": "Replacement"
    },
    "lambda.codesigningconfig.codesigningpolicies.untrustedartifactondeployment": {
        "Allowed values": "Enforce | Warn",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "lambda.codesigningconfig.codesigningpolicies.untrustedartifactondeployment",
        "UpdateRequires": "Replacement"
    },
    "lambda.eventinvokeconfig.destinationconfig.onfailure": {
        "Required": "No",
        "Type": "OnFailure",
        "UniqueKey": "lambda.eventinvokeconfig.destinationconfig.onfailure",
        "UpdateRequires": "Replacement"
    },
    "lambda.eventinvokeconfig.destinationconfig.onfailure.destination": {
        "Maximum": "350",
        "Minimum": "0",
        "Pattern": "^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "lambda.eventinvokeconfig.destinationconfig.onfailure.destination",
        "UpdateRequires": "Replacement"
    },
    "lambda.eventinvokeconfig.destinationconfig.onsuccess": {
        "Required": "No",
        "Type": "OnSuccess",
        "UniqueKey": "lambda.eventinvokeconfig.destinationconfig.onsuccess",
        "UpdateRequires": "Replacement"
    },
    "lambda.eventinvokeconfig.destinationconfig.onsuccess.destination": {
        "Maximum": "350",
        "Minimum": "0",
        "Pattern": "^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "lambda.eventinvokeconfig.destinationconfig.onsuccess.destination",
        "UpdateRequires": "Replacement"
    },
    "lambda.eventsourcemapping.destinationconfig.onfailure": {
        "Required": "No",
        "Type": "OnFailure",
        "UniqueKey": "lambda.eventsourcemapping.destinationconfig.onfailure",
        "UpdateRequires": "Replacement"
    },
    "lambda.eventsourcemapping.endpoints.kafkabootstrapservers": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "lambda.eventsourcemapping.endpoints.kafkabootstrapservers",
        "UpdateRequires": "Replacement"
    },
    "lambda.eventsourcemapping.onfailure.destination": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lambda.eventsourcemapping.onfailure.destination",
        "UpdateRequires": "Replacement"
    },
    "lambda.eventsourcemapping.selfmanagedeventsource.endpoints": {
        "Required": "No",
        "Type": "Endpoints",
        "UniqueKey": "lambda.eventsourcemapping.selfmanagedeventsource.endpoints",
        "UpdateRequires": "Replacement"
    },
    "lambda.eventsourcemapping.sourceaccessconfiguration.type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lambda.eventsourcemapping.sourceaccessconfiguration.type",
        "UpdateRequires": "Replacement"
    },
    "lambda.eventsourcemapping.sourceaccessconfiguration.uri": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lambda.eventsourcemapping.sourceaccessconfiguration.uri",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.code.imageuri": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lambda.function.code.imageuri",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.code.s3bucket": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "lambda.function.code.s3bucket",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.code.s3key": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Conditional",
        "SampleValue": "TODO-lambda.function.code.S3Key",
        "Type": "String",
        "UniqueKey": "lambda.function.code.s3key",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.code.s3objectversion": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Conditional",
        "SampleValue": "TODO-lambda.function.code.S3ObjectVersion",
        "Type": "String",
        "UniqueKey": "lambda.function.code.s3objectversion",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.code.zipfile": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "lambda.function.code.zipfile",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.deadletterconfig.targetarn": {
        "Pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lambda.function.deadletterconfig.targetarn",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.environment.variables": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "lambda.function.environment.variables",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.filesystemconfig.arn": {
        "Maximum": "200",
        "Pattern": "arn:aws[a-zA-Z-]*:elasticfilesystem:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:access-point/fsap-[a-f0-9]{17}",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "lambda.function.filesystemconfig.arn",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.filesystemconfig.localmountpath": {
        "Maximum": "160",
        "Pattern": "^/mnt/[a-zA-Z0-9-_.]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "lambda.function.filesystemconfig.localmountpath",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.imageconfig.command": {
        "Maximum": "1500",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "lambda.function.imageconfig.command",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.imageconfig.entrypoint": {
        "Maximum": "1500",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "lambda.function.imageconfig.entrypoint",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.imageconfig.workingdirectory": {
        "Maximum": "1000",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lambda.function.imageconfig.workingdirectory",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.tracingconfig.mode": {
        "Allowed values": "Active | PassThrough",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lambda.function.tracingconfig.mode",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.vpcconfig.securitygroupids": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "lambda.function.vpcconfig.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "lambda.function.vpcconfig.subnetids": {
        "Maximum": "16",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "lambda.function.vpcconfig.subnetids",
        "UpdateRequires": "Replacement"
    },
    "lambda.layerversion.content.s3bucket": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "lambda.layerversion.content.s3bucket",
        "UpdateRequires": "Replacement"
    },
    "lambda.layerversion.content.s3key": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-lambda.layerversion.content.S3Key",
        "Type": "String",
        "UniqueKey": "lambda.layerversion.content.s3key",
        "UpdateRequires": "Replacement"
    },
    "lambda.layerversion.content.s3objectversion": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-lambda.layerversion.content.S3ObjectVersion",
        "Type": "String",
        "UniqueKey": "lambda.layerversion.content.s3objectversion",
        "UpdateRequires": "Replacement"
    },
    "lambda.version.provisionedconcurrencyconfiguration.provisionedconcurrentexecutions": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "lambda.version.provisionedconcurrencyconfiguration.provisionedconcurrentexecutions",
        "UpdateRequires": "Replacement"
    },
    "licensemanager.license.borrowconfiguration.allowearlycheckin": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "licensemanager.license.borrowconfiguration.allowearlycheckin",
        "UpdateRequires": "Replacement"
    },
    "licensemanager.license.borrowconfiguration.maxtimetoliveinminutes": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "licensemanager.license.borrowconfiguration.maxtimetoliveinminutes",
        "UpdateRequires": "Replacement"
    },
    "licensemanager.license.consumptionconfiguration.borrowconfiguration": {
        "Required": "No",
        "Type": "BorrowConfiguration",
        "UniqueKey": "licensemanager.license.consumptionconfiguration.borrowconfiguration",
        "UpdateRequires": "Replacement"
    },
    "licensemanager.license.consumptionconfiguration.provisionalconfiguration": {
        "Required": "No",
        "Type": "ProvisionalConfiguration",
        "UniqueKey": "licensemanager.license.consumptionconfiguration.provisionalconfiguration",
        "UpdateRequires": "Replacement"
    },
    "licensemanager.license.consumptionconfiguration.renewtype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "licensemanager.license.consumptionconfiguration.renewtype",
        "UpdateRequires": "Replacement"
    },
    "licensemanager.license.entitlement.allowcheckin": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "licensemanager.license.entitlement.allowcheckin",
        "UpdateRequires": "Replacement"
    },
    "licensemanager.license.entitlement.maxcount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "licensemanager.license.entitlement.maxcount",
        "UpdateRequires": "Replacement"
    },
    "licensemanager.license.entitlement.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "licensemanager.license.entitlement.name",
        "UpdateRequires": "Replacement"
    },
    "licensemanager.license.entitlement.overage": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "licensemanager.license.entitlement.overage",
        "UpdateRequires": "Replacement"
    },
    "licensemanager.license.entitlement.unit": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "licensemanager.license.entitlement.unit",
        "UpdateRequires": "Replacement"
    },
    "licensemanager.license.entitlement.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "licensemanager.license.entitlement.value",
        "UpdateRequires": "Replacement"
    },
    "licensemanager.license.issuerdata.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "licensemanager.license.issuerdata.name",
        "UpdateRequires": "Replacement"
    },
    "licensemanager.license.issuerdata.signkey": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "licensemanager.license.issuerdata.signkey",
        "UpdateRequires": "Replacement"
    },
    "licensemanager.license.metadata.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "licensemanager.license.metadata.name",
        "UpdateRequires": "Replacement"
    },
    "licensemanager.license.metadata.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "licensemanager.license.metadata.value",
        "UpdateRequires": "Replacement"
    },
    "licensemanager.license.provisionalconfiguration.maxtimetoliveinminutes": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "licensemanager.license.provisionalconfiguration.maxtimetoliveinminutes",
        "UpdateRequires": "Replacement"
    },
    "licensemanager.license.validitydateformat.begin": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "licensemanager.license.validitydateformat.begin",
        "UpdateRequires": "Replacement"
    },
    "licensemanager.license.validitydateformat.end": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "licensemanager.license.validitydateformat.end",
        "UpdateRequires": "Replacement"
    },
    "logs.metricfilter.metrictransformation.defaultvalue": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "logs.metricfilter.metrictransformation.defaultvalue",
        "UpdateRequires": "Replacement"
    },
    "logs.metricfilter.metrictransformation.metricname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "logs.metricfilter.metrictransformation.metricname",
        "UpdateRequires": "Replacement"
    },
    "logs.metricfilter.metrictransformation.metricnamespace": {
        "Maximum": "255",
        "Pattern": "[^:*$]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "logs.metricfilter.metrictransformation.metricnamespace",
        "UpdateRequires": "Replacement"
    },
    "logs.metricfilter.metrictransformation.metricvalue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "logs.metricfilter.metrictransformation.metricvalue",
        "UpdateRequires": "Replacement"
    },
    "macie.findingsfilter.findingcriteria.criterion": {
        "Required": "No",
        "Type": "Criterion",
        "UniqueKey": "macie.findingsfilter.findingcriteria.criterion",
        "UpdateRequires": "Replacement"
    },
    "macie.findingsfilter.findingsfilterlistitem.id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "macie.findingsfilter.findingsfilterlistitem.id",
        "UpdateRequires": "Replacement"
    },
    "macie.findingsfilter.findingsfilterlistitem.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "macie.findingsfilter.findingsfilterlistitem.name",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.approvalthresholdpolicy.proposaldurationinhours": {
        "Maximum": "168",
        "Minimum": "1",
        "Pattern": "^[1,168]}$",
        "Required": "No",
        "SampleValue": "1...168",
        "Type": "Integer",
        "UniqueKey": "managedblockchain.member.approvalthresholdpolicy.proposaldurationinhours",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.approvalthresholdpolicy.thresholdcomparator": {
        "Allowed values": "GREATER_THAN | GREATER_THAN_OR_EQUAL_TO",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.approvalthresholdpolicy.thresholdcomparator",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.approvalthresholdpolicy.thresholdpercentage": {
        "Maximum": "100",
        "Minimum": "0",
        "Pattern": "^[0,100]}$",
        "Required": "No",
        "SampleValue": "0...100",
        "Type": "Integer",
        "UniqueKey": "managedblockchain.member.approvalthresholdpolicy.thresholdpercentage",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.memberconfiguration.description": {
        "Maximum": "128",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.memberconfiguration.description",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.memberconfiguration.memberframeworkconfiguration": {
        "Required": "No",
        "Type": "MemberFrameworkConfiguration",
        "UniqueKey": "managedblockchain.member.memberconfiguration.memberframeworkconfiguration",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.memberconfiguration.name": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^(?!-|[0-9])(?!.*-$)(?!.*?--)[a-zA-Z0-9-]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.memberconfiguration.name",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.memberfabricconfiguration.adminpassword": {
        "Maximum": "32",
        "Minimum": "8",
        "Pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?!.*[@'\\\\\"/])[a-zA-Z0-9\\S]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.memberfabricconfiguration.adminpassword",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.memberfabricconfiguration.adminusername": {
        "Maximum": "16",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.memberfabricconfiguration.adminusername",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.memberframeworkconfiguration.memberfabricconfiguration": {
        "Required": "No",
        "Type": "MemberFabricConfiguration",
        "UniqueKey": "managedblockchain.member.memberframeworkconfiguration.memberfabricconfiguration",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.networkconfiguration.description": {
        "Maximum": "128",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.networkconfiguration.description",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.networkconfiguration.framework": {
        "Allowed values": "ETHEREUM | HYPERLEDGER_FABRIC",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.networkconfiguration.framework",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.networkconfiguration.frameworkversion": {
        "Maximum": "8",
        "Minimum": "1",
        "Pattern": "^.{1,8}$",
        "Required": "Yes",
        "SampleValue": "TODO-managedblockchain.member.networkconfiguration.FrameworkVersion",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.networkconfiguration.frameworkversion",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.networkconfiguration.name": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.networkconfiguration.name",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.networkconfiguration.networkframeworkconfiguration": {
        "Required": "No",
        "Type": "NetworkFrameworkConfiguration",
        "UniqueKey": "managedblockchain.member.networkconfiguration.networkframeworkconfiguration",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.networkconfiguration.votingpolicy": {
        "Required": "Yes",
        "Type": "VotingPolicy",
        "UniqueKey": "managedblockchain.member.networkconfiguration.votingpolicy",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.networkfabricconfiguration.edition": {
        "Allowed values": "STANDARD | STARTER",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.networkfabricconfiguration.edition",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.networkframeworkconfiguration.networkfabricconfiguration": {
        "Required": "No",
        "Type": "NetworkFabricConfiguration",
        "UniqueKey": "managedblockchain.member.networkframeworkconfiguration.networkfabricconfiguration",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.member.votingpolicy.approvalthresholdpolicy": {
        "Required": "No",
        "Type": "ApprovalThresholdPolicy",
        "UniqueKey": "managedblockchain.member.votingpolicy.approvalthresholdpolicy",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.node.nodeconfiguration.availabilityzone": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.node.nodeconfiguration.availabilityzone",
        "UpdateRequires": "Replacement"
    },
    "managedblockchain.node.nodeconfiguration.instancetype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.node.nodeconfiguration.instancetype",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.encryption.algorithm": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediaconnect.flow.encryption.algorithm",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.encryption.constantinitializationvector": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flow.encryption.constantinitializationvector",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.encryption.deviceid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flow.encryption.deviceid",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.encryption.keytype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flow.encryption.keytype",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.encryption.region": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flow.encryption.region",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.encryption.resourceid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flow.encryption.resourceid",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.encryption.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediaconnect.flow.encryption.rolearn",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.encryption.secretarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flow.encryption.secretarn",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.encryption.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flow.encryption.url",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.failoverconfig.recoverywindow": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediaconnect.flow.failoverconfig.recoverywindow",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.failoverconfig.state": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flow.failoverconfig.state",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.source.decryption": {
        "Required": "No",
        "Type": "Encryption",
        "UniqueKey": "mediaconnect.flow.source.decryption",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.source.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flow.source.description",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.source.entitlementarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flow.source.entitlementarn",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.source.ingestip": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flow.source.ingestip",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.source.ingestport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediaconnect.flow.source.ingestport",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.source.maxbitrate": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediaconnect.flow.source.maxbitrate",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.source.maxlatency": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediaconnect.flow.source.maxlatency",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.source.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flow.source.name",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.source.protocol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flow.source.protocol",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.source.sourcearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flow.source.sourcearn",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.source.streamid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flow.source.streamid",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.source.vpcinterfacename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flow.source.vpcinterfacename",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flow.source.whitelistcidr": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flow.source.whitelistcidr",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowentitlement.encryption.algorithm": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowentitlement.encryption.algorithm",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowentitlement.encryption.constantinitializationvector": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowentitlement.encryption.constantinitializationvector",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowentitlement.encryption.deviceid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowentitlement.encryption.deviceid",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowentitlement.encryption.keytype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowentitlement.encryption.keytype",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowentitlement.encryption.region": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowentitlement.encryption.region",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowentitlement.encryption.resourceid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowentitlement.encryption.resourceid",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowentitlement.encryption.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowentitlement.encryption.rolearn",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowentitlement.encryption.secretarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowentitlement.encryption.secretarn",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowentitlement.encryption.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowentitlement.encryption.url",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowoutput.encryption.algorithm": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowoutput.encryption.algorithm",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowoutput.encryption.keytype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowoutput.encryption.keytype",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowoutput.encryption.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowoutput.encryption.rolearn",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowoutput.encryption.secretarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowoutput.encryption.secretarn",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowoutput.vpcinterfaceattachment.vpcinterfacename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowoutput.vpcinterfaceattachment.vpcinterfacename",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowsource.encryption.algorithm": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowsource.encryption.algorithm",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowsource.encryption.constantinitializationvector": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowsource.encryption.constantinitializationvector",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowsource.encryption.deviceid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowsource.encryption.deviceid",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowsource.encryption.keytype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowsource.encryption.keytype",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowsource.encryption.region": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowsource.encryption.region",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowsource.encryption.resourceid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowsource.encryption.resourceid",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowsource.encryption.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowsource.encryption.rolearn",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowsource.encryption.secretarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowsource.encryption.secretarn",
        "UpdateRequires": "Replacement"
    },
    "mediaconnect.flowsource.encryption.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconnect.flowsource.encryption.url",
        "UpdateRequires": "Replacement"
    },
    "mediaconvert.jobtemplate.accelerationsettings.mode": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediaconvert.jobtemplate.accelerationsettings.mode",
        "UpdateRequires": "Replacement"
    },
    "mediaconvert.jobtemplate.hopdestination.priority": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediaconvert.jobtemplate.hopdestination.priority",
        "UpdateRequires": "Replacement"
    },
    "mediaconvert.jobtemplate.hopdestination.queue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediaconvert.jobtemplate.hopdestination.queue",
        "UpdateRequires": "Replacement"
    },
    "mediaconvert.jobtemplate.hopdestination.waitminutes": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediaconvert.jobtemplate.hopdestination.waitminutes",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.aacsettings.bitrate": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "medialive.channel.aacsettings.bitrate",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.aacsettings.codingmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.aacsettings.codingmode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.aacsettings.inputtype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.aacsettings.inputtype",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.aacsettings.profile": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.aacsettings.profile",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.aacsettings.ratecontrolmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.aacsettings.ratecontrolmode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.aacsettings.rawformat": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.aacsettings.rawformat",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.aacsettings.samplerate": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "medialive.channel.aacsettings.samplerate",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.aacsettings.spec": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.aacsettings.spec",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.aacsettings.vbrquality": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.aacsettings.vbrquality",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.ac3settings.bitrate": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "medialive.channel.ac3settings.bitrate",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.ac3settings.bitstreammode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.ac3settings.bitstreammode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.ac3settings.codingmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.ac3settings.codingmode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.ac3settings.dialnorm": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.ac3settings.dialnorm",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.ac3settings.drcprofile": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.ac3settings.drcprofile",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.ac3settings.lfefilter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.ac3settings.lfefilter",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.ac3settings.metadatacontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.ac3settings.metadatacontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.ancillarysourcesettings.sourceancillarychannelnumber": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.ancillarysourcesettings.sourceancillarychannelnumber",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.archivecontainersettings.m2tssettings": {
        "Required": "No",
        "Type": "M2tsSettings",
        "UniqueKey": "medialive.channel.archivecontainersettings.m2tssettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.archivecontainersettings.rawsettings": {
        "Required": "No",
        "Type": "RawSettings",
        "UniqueKey": "medialive.channel.archivecontainersettings.rawsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.archivegroupsettings.destination": {
        "Required": "No",
        "Type": "OutputLocationRef",
        "UniqueKey": "medialive.channel.archivegroupsettings.destination",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.archivegroupsettings.rolloverinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.archivegroupsettings.rolloverinterval",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.archiveoutputsettings.containersettings": {
        "Required": "No",
        "Type": "ArchiveContainerSettings",
        "UniqueKey": "medialive.channel.archiveoutputsettings.containersettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.archiveoutputsettings.extension": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.archiveoutputsettings.extension",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.archiveoutputsettings.namemodifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.archiveoutputsettings.namemodifier",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiochannelmapping.inputchannellevels": {
        "Required": "No",
        "Type": "List of [InputChannelLevel",
        "UniqueKey": "medialive.channel.audiochannelmapping.inputchannellevels",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiochannelmapping.outputchannel": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.audiochannelmapping.outputchannel",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiocodecsettings.aacsettings": {
        "Required": "No",
        "Type": "AacSettings",
        "UniqueKey": "medialive.channel.audiocodecsettings.aacsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiocodecsettings.ac3settings": {
        "Required": "No",
        "Type": "Ac3Settings",
        "UniqueKey": "medialive.channel.audiocodecsettings.ac3settings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiocodecsettings.eac3settings": {
        "Required": "No",
        "Type": "Eac3Settings",
        "UniqueKey": "medialive.channel.audiocodecsettings.eac3settings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiocodecsettings.mp2settings": {
        "Required": "No",
        "Type": "Mp2Settings",
        "UniqueKey": "medialive.channel.audiocodecsettings.mp2settings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiocodecsettings.passthroughsettings": {
        "Required": "No",
        "Type": "PassThroughSettings",
        "UniqueKey": "medialive.channel.audiocodecsettings.passthroughsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiocodecsettings.wavsettings": {
        "Required": "No",
        "Type": "WavSettings",
        "UniqueKey": "medialive.channel.audiocodecsettings.wavsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiodescription.audionormalizationsettings": {
        "Required": "No",
        "Type": "AudioNormalizationSettings",
        "UniqueKey": "medialive.channel.audiodescription.audionormalizationsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiodescription.audioselectorname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audiodescription.audioselectorname",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiodescription.audiotype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audiodescription.audiotype",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiodescription.audiotypecontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audiodescription.audiotypecontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiodescription.codecsettings": {
        "Required": "No",
        "Type": "AudioCodecSettings",
        "UniqueKey": "medialive.channel.audiodescription.codecsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiodescription.languagecode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audiodescription.languagecode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiodescription.languagecodecontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audiodescription.languagecodecontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiodescription.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audiodescription.name",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiodescription.remixsettings": {
        "Required": "No",
        "Type": "RemixSettings",
        "UniqueKey": "medialive.channel.audiodescription.remixsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiodescription.streamname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audiodescription.streamname",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiolanguageselection.languagecode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audiolanguageselection.languagecode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiolanguageselection.languageselectionpolicy": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audiolanguageselection.languageselectionpolicy",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audionormalizationsettings.algorithm": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audionormalizationsettings.algorithm",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audionormalizationsettings.algorithmcontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audionormalizationsettings.algorithmcontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audionormalizationsettings.targetlkfs": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "medialive.channel.audionormalizationsettings.targetlkfs",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audioonlyhlssettings.audiogroupid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audioonlyhlssettings.audiogroupid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audioonlyhlssettings.audioonlyimage": {
        "Required": "No",
        "SampleValue": "TODO-AudioOnlyImage",
        "UniqueKey": "medialive.channel.audioonlyhlssettings.audioonlyimage",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audioonlyhlssettings.audiotracktype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audioonlyhlssettings.audiotracktype",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audioonlyhlssettings.segmenttype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audioonlyhlssettings.segmenttype",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiopidselection.pid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.audiopidselection.pid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audioselector.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audioselector.name",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audioselector.selectorsettings": {
        "Required": "No",
        "Type": "AudioSelectorSettings",
        "UniqueKey": "medialive.channel.audioselector.selectorsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audioselectorsettings.audiolanguageselection": {
        "Required": "No",
        "Type": "AudioLanguageSelection",
        "UniqueKey": "medialive.channel.audioselectorsettings.audiolanguageselection",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audioselectorsettings.audiopidselection": {
        "Required": "No",
        "Type": "AudioPidSelection",
        "UniqueKey": "medialive.channel.audioselectorsettings.audiopidselection",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audioselectorsettings.audiotrackselection": {
        "Required": "No",
        "Type": "AudioTrackSelection",
        "UniqueKey": "medialive.channel.audioselectorsettings.audiotrackselection",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiosilencefailoversettings.audioselectorname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audiosilencefailoversettings.audioselectorname",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiosilencefailoversettings.audiosilencethresholdmsec": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.audiosilencefailoversettings.audiosilencethresholdmsec",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiotrack.track": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.audiotrack.track",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.audiotrackselection.tracks": {
        "Required": "No",
        "Type": "List of [AudioTrack",
        "UniqueKey": "medialive.channel.audiotrackselection.tracks",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.automaticinputfailoversettings.errorcleartimemsec": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.automaticinputfailoversettings.errorcleartimemsec",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.automaticinputfailoversettings.failoverconditions": {
        "Required": "No",
        "Type": "List of [FailoverCondition",
        "UniqueKey": "medialive.channel.automaticinputfailoversettings.failoverconditions",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.automaticinputfailoversettings.inputpreference": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.automaticinputfailoversettings.inputpreference",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.automaticinputfailoversettings.secondaryinputid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.automaticinputfailoversettings.secondaryinputid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.availblanking.availblankingimage": {
        "Required": "No",
        "Type": "InputLocation",
        "UniqueKey": "medialive.channel.availblanking.availblankingimage",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.availblanking.state": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.availblanking.state",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.availconfiguration.availsettings": {
        "Required": "No",
        "Type": "AvailSettings",
        "UniqueKey": "medialive.channel.availconfiguration.availsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.availsettings.scte35spliceinsert": {
        "Required": "No",
        "Type": "Scte35SpliceInsert",
        "UniqueKey": "medialive.channel.availsettings.scte35spliceinsert",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.availsettings.scte35timesignalapos": {
        "Required": "No",
        "Type": "Scte35TimeSignalApos",
        "UniqueKey": "medialive.channel.availsettings.scte35timesignalapos",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.blackoutslate.blackoutslateimage": {
        "Required": "No",
        "Type": "InputLocation",
        "UniqueKey": "medialive.channel.blackoutslate.blackoutslateimage",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.blackoutslate.networkendblackout": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.blackoutslate.networkendblackout",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.blackoutslate.networkendblackoutimage": {
        "Required": "No",
        "Type": "InputLocation",
        "UniqueKey": "medialive.channel.blackoutslate.networkendblackoutimage",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.blackoutslate.networkid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.blackoutslate.networkid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.blackoutslate.state": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.blackoutslate.state",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.burnindestinationsettings.alignment": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.burnindestinationsettings.alignment",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.burnindestinationsettings.backgroundcolor": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.burnindestinationsettings.backgroundcolor",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.burnindestinationsettings.backgroundopacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.burnindestinationsettings.backgroundopacity",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.burnindestinationsettings.font": {
        "Required": "No",
        "Type": "InputLocation",
        "UniqueKey": "medialive.channel.burnindestinationsettings.font",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.burnindestinationsettings.fontcolor": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.burnindestinationsettings.fontcolor",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.burnindestinationsettings.fontopacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.burnindestinationsettings.fontopacity",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.burnindestinationsettings.fontresolution": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.burnindestinationsettings.fontresolution",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.burnindestinationsettings.fontsize": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.burnindestinationsettings.fontsize",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.burnindestinationsettings.outlinecolor": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.burnindestinationsettings.outlinecolor",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.burnindestinationsettings.outlinesize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.burnindestinationsettings.outlinesize",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.burnindestinationsettings.shadowcolor": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.burnindestinationsettings.shadowcolor",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.burnindestinationsettings.shadowopacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.burnindestinationsettings.shadowopacity",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.burnindestinationsettings.shadowxoffset": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.burnindestinationsettings.shadowxoffset",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.burnindestinationsettings.shadowyoffset": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.burnindestinationsettings.shadowyoffset",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.burnindestinationsettings.teletextgridcontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.burnindestinationsettings.teletextgridcontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.burnindestinationsettings.xposition": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.burnindestinationsettings.xposition",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.burnindestinationsettings.yposition": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.burnindestinationsettings.yposition",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captiondescription.captionselectorname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.captiondescription.captionselectorname",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captiondescription.destinationsettings": {
        "Required": "No",
        "Type": "CaptionDestinationSettings",
        "UniqueKey": "medialive.channel.captiondescription.destinationsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captiondescription.languagecode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.captiondescription.languagecode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captiondescription.languagedescription": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.captiondescription.languagedescription",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captiondescription.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.captiondescription.name",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captiondestinationsettings.aribdestinationsettings": {
        "Required": "No",
        "Type": "AribDestinationSettings",
        "UniqueKey": "medialive.channel.captiondestinationsettings.aribdestinationsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captiondestinationsettings.burnindestinationsettings": {
        "Required": "No",
        "Type": "BurnInDestinationSettings",
        "UniqueKey": "medialive.channel.captiondestinationsettings.burnindestinationsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captiondestinationsettings.dvbsubdestinationsettings": {
        "Required": "No",
        "Type": "DvbSubDestinationSettings",
        "UniqueKey": "medialive.channel.captiondestinationsettings.dvbsubdestinationsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captiondestinationsettings.ebuttddestinationsettings": {
        "Required": "No",
        "Type": "EbuTtDDestinationSettings",
        "UniqueKey": "medialive.channel.captiondestinationsettings.ebuttddestinationsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captiondestinationsettings.embeddeddestinationsettings": {
        "Required": "No",
        "Type": "EmbeddedDestinationSettings",
        "UniqueKey": "medialive.channel.captiondestinationsettings.embeddeddestinationsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captiondestinationsettings.embeddedplusscte20destinationsettings": {
        "Required": "No",
        "Type": "EmbeddedPlusScte20DestinationSettings",
        "UniqueKey": "medialive.channel.captiondestinationsettings.embeddedplusscte20destinationsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captiondestinationsettings.rtmpcaptioninfodestinationsettings": {
        "Required": "No",
        "Type": "RtmpCaptionInfoDestinationSettings",
        "UniqueKey": "medialive.channel.captiondestinationsettings.rtmpcaptioninfodestinationsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captiondestinationsettings.scte20plusembeddeddestinationsettings": {
        "Required": "No",
        "Type": "Scte20PlusEmbeddedDestinationSettings",
        "UniqueKey": "medialive.channel.captiondestinationsettings.scte20plusembeddeddestinationsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captiondestinationsettings.scte27destinationsettings": {
        "Required": "No",
        "Type": "Scte27DestinationSettings",
        "UniqueKey": "medialive.channel.captiondestinationsettings.scte27destinationsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captiondestinationsettings.smptettdestinationsettings": {
        "Required": "No",
        "Type": "SmpteTtDestinationSettings",
        "UniqueKey": "medialive.channel.captiondestinationsettings.smptettdestinationsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captiondestinationsettings.teletextdestinationsettings": {
        "Required": "No",
        "Type": "TeletextDestinationSettings",
        "UniqueKey": "medialive.channel.captiondestinationsettings.teletextdestinationsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captiondestinationsettings.ttmldestinationsettings": {
        "Required": "No",
        "Type": "TtmlDestinationSettings",
        "UniqueKey": "medialive.channel.captiondestinationsettings.ttmldestinationsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captiondestinationsettings.webvttdestinationsettings": {
        "Required": "No",
        "Type": "WebvttDestinationSettings",
        "UniqueKey": "medialive.channel.captiondestinationsettings.webvttdestinationsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionlanguagemapping.captionchannel": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.captionlanguagemapping.captionchannel",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionlanguagemapping.languagecode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.captionlanguagemapping.languagecode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionlanguagemapping.languagedescription": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.captionlanguagemapping.languagedescription",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionselector.languagecode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.captionselector.languagecode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionselector.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.captionselector.name",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionselector.selectorsettings": {
        "Required": "No",
        "Type": "CaptionSelectorSettings",
        "UniqueKey": "medialive.channel.captionselector.selectorsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionselectorsettings.ancillarysourcesettings": {
        "Required": "No",
        "Type": "AncillarySourceSettings",
        "UniqueKey": "medialive.channel.captionselectorsettings.ancillarysourcesettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionselectorsettings.aribsourcesettings": {
        "Required": "No",
        "Type": "AribSourceSettings",
        "UniqueKey": "medialive.channel.captionselectorsettings.aribsourcesettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionselectorsettings.dvbsubsourcesettings": {
        "Required": "No",
        "Type": "DvbSubSourceSettings",
        "UniqueKey": "medialive.channel.captionselectorsettings.dvbsubsourcesettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionselectorsettings.embeddedsourcesettings": {
        "Required": "No",
        "Type": "EmbeddedSourceSettings",
        "UniqueKey": "medialive.channel.captionselectorsettings.embeddedsourcesettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionselectorsettings.scte20sourcesettings": {
        "Required": "No",
        "Type": "Scte20SourceSettings",
        "UniqueKey": "medialive.channel.captionselectorsettings.scte20sourcesettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionselectorsettings.scte27sourcesettings": {
        "Required": "No",
        "Type": "Scte27SourceSettings",
        "UniqueKey": "medialive.channel.captionselectorsettings.scte27sourcesettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.captionselectorsettings.teletextsourcesettings": {
        "Required": "No",
        "Type": "TeletextSourceSettings",
        "UniqueKey": "medialive.channel.captionselectorsettings.teletextsourcesettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.cdiinputspecification.resolution": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.cdiinputspecification.resolution",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbnitsettings.networkid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.dvbnitsettings.networkid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbnitsettings.networkname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.dvbnitsettings.networkname",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbnitsettings.repinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.dvbnitsettings.repinterval",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsdtsettings.outputsdt": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.dvbsdtsettings.outputsdt",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsdtsettings.repinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.dvbsdtsettings.repinterval",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsdtsettings.servicename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.dvbsdtsettings.servicename",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsdtsettings.serviceprovidername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.dvbsdtsettings.serviceprovidername",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsubdestinationsettings.alignment": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.dvbsubdestinationsettings.alignment",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsubdestinationsettings.backgroundcolor": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.dvbsubdestinationsettings.backgroundcolor",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsubdestinationsettings.backgroundopacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.dvbsubdestinationsettings.backgroundopacity",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsubdestinationsettings.font": {
        "Required": "No",
        "Type": "InputLocation",
        "UniqueKey": "medialive.channel.dvbsubdestinationsettings.font",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsubdestinationsettings.fontcolor": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.dvbsubdestinationsettings.fontcolor",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsubdestinationsettings.fontopacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.dvbsubdestinationsettings.fontopacity",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsubdestinationsettings.fontresolution": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.dvbsubdestinationsettings.fontresolution",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsubdestinationsettings.fontsize": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.dvbsubdestinationsettings.fontsize",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsubdestinationsettings.outlinecolor": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.dvbsubdestinationsettings.outlinecolor",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsubdestinationsettings.outlinesize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.dvbsubdestinationsettings.outlinesize",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsubdestinationsettings.shadowcolor": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.dvbsubdestinationsettings.shadowcolor",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsubdestinationsettings.shadowopacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.dvbsubdestinationsettings.shadowopacity",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsubdestinationsettings.shadowxoffset": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.dvbsubdestinationsettings.shadowxoffset",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsubdestinationsettings.shadowyoffset": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.dvbsubdestinationsettings.shadowyoffset",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsubdestinationsettings.teletextgridcontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.dvbsubdestinationsettings.teletextgridcontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsubdestinationsettings.xposition": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.dvbsubdestinationsettings.xposition",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsubdestinationsettings.yposition": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.dvbsubdestinationsettings.yposition",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbsubsourcesettings.pid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.dvbsubsourcesettings.pid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.dvbtdtsettings.repinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.dvbtdtsettings.repinterval",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.eac3settings.attenuationcontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.eac3settings.attenuationcontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.eac3settings.bitrate": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "medialive.channel.eac3settings.bitrate",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.eac3settings.bitstreammode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.eac3settings.bitstreammode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.eac3settings.codingmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.eac3settings.codingmode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.eac3settings.dcfilter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.eac3settings.dcfilter",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.eac3settings.dialnorm": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.eac3settings.dialnorm",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.eac3settings.drcline": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.eac3settings.drcline",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.eac3settings.drcrf": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.eac3settings.drcrf",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.eac3settings.lfecontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.eac3settings.lfecontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.eac3settings.lfefilter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.eac3settings.lfefilter",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.eac3settings.lorocentermixlevel": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "medialive.channel.eac3settings.lorocentermixlevel",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.eac3settings.lorosurroundmixlevel": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "medialive.channel.eac3settings.lorosurroundmixlevel",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.eac3settings.ltrtcentermixlevel": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "medialive.channel.eac3settings.ltrtcentermixlevel",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.eac3settings.ltrtsurroundmixlevel": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "medialive.channel.eac3settings.ltrtsurroundmixlevel",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.eac3settings.metadatacontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.eac3settings.metadatacontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.eac3settings.passthroughcontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.eac3settings.passthroughcontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.eac3settings.phasecontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.eac3settings.phasecontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.eac3settings.stereodownmix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.eac3settings.stereodownmix",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.eac3settings.surroundexmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.eac3settings.surroundexmode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.eac3settings.surroundmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.eac3settings.surroundmode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.ebuttddestinationsettings.filllinegap": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.ebuttddestinationsettings.filllinegap",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.ebuttddestinationsettings.fontfamily": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.ebuttddestinationsettings.fontfamily",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.ebuttddestinationsettings.stylecontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.ebuttddestinationsettings.stylecontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.embeddedsourcesettings.convert608to708": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.embeddedsourcesettings.convert608to708",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.embeddedsourcesettings.scte20detection": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.embeddedsourcesettings.scte20detection",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.embeddedsourcesettings.source608channelnumber": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.embeddedsourcesettings.source608channelnumber",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.embeddedsourcesettings.source608tracknumber": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.embeddedsourcesettings.source608tracknumber",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.encodersettings.audiodescriptions": {
        "Required": "No",
        "Type": "List of [AudioDescription",
        "UniqueKey": "medialive.channel.encodersettings.audiodescriptions",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.encodersettings.availblanking": {
        "Required": "No",
        "Type": "AvailBlanking",
        "UniqueKey": "medialive.channel.encodersettings.availblanking",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.encodersettings.availconfiguration": {
        "Required": "No",
        "Type": "AvailConfiguration",
        "UniqueKey": "medialive.channel.encodersettings.availconfiguration",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.encodersettings.blackoutslate": {
        "Required": "No",
        "Type": "BlackoutSlate",
        "UniqueKey": "medialive.channel.encodersettings.blackoutslate",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.encodersettings.captiondescriptions": {
        "Required": "No",
        "Type": "List of [CaptionDescription",
        "UniqueKey": "medialive.channel.encodersettings.captiondescriptions",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.encodersettings.featureactivations": {
        "Required": "No",
        "Type": "FeatureActivations",
        "UniqueKey": "medialive.channel.encodersettings.featureactivations",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.encodersettings.globalconfiguration": {
        "Required": "No",
        "Type": "GlobalConfiguration",
        "UniqueKey": "medialive.channel.encodersettings.globalconfiguration",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.encodersettings.nielsenconfiguration": {
        "Required": "No",
        "Type": "NielsenConfiguration",
        "UniqueKey": "medialive.channel.encodersettings.nielsenconfiguration",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.encodersettings.outputgroups": {
        "Required": "No",
        "Type": "List of [OutputGroup",
        "UniqueKey": "medialive.channel.encodersettings.outputgroups",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.encodersettings.timecodeconfig": {
        "Required": "No",
        "Type": "TimecodeConfig",
        "UniqueKey": "medialive.channel.encodersettings.timecodeconfig",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.encodersettings.videodescriptions": {
        "Required": "No",
        "Type": "List of [VideoDescription",
        "UniqueKey": "medialive.channel.encodersettings.videodescriptions",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.failovercondition.failoverconditionsettings": {
        "Required": "No",
        "Type": "FailoverConditionSettings",
        "UniqueKey": "medialive.channel.failovercondition.failoverconditionsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.failoverconditionsettings.audiosilencesettings": {
        "Required": "No",
        "Type": "AudioSilenceFailoverSettings",
        "UniqueKey": "medialive.channel.failoverconditionsettings.audiosilencesettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.failoverconditionsettings.inputlosssettings": {
        "Required": "No",
        "Type": "InputLossFailoverSettings",
        "UniqueKey": "medialive.channel.failoverconditionsettings.inputlosssettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.failoverconditionsettings.videoblacksettings": {
        "Required": "No",
        "Type": "VideoBlackFailoverSettings",
        "UniqueKey": "medialive.channel.failoverconditionsettings.videoblacksettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.featureactivations.inputpreparescheduleactions": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.featureactivations.inputpreparescheduleactions",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.fecoutputsettings.columndepth": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.fecoutputsettings.columndepth",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.fecoutputsettings.includefec": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.fecoutputsettings.includefec",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.fecoutputsettings.rowlength": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.fecoutputsettings.rowlength",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.fmp4hlssettings.audiorenditionsets": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.fmp4hlssettings.audiorenditionsets",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.fmp4hlssettings.nielsenid3behavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.fmp4hlssettings.nielsenid3behavior",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.fmp4hlssettings.timedmetadatabehavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.fmp4hlssettings.timedmetadatabehavior",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.framecapturegroupsettings.destination": {
        "Required": "No",
        "Type": "OutputLocationRef",
        "UniqueKey": "medialive.channel.framecapturegroupsettings.destination",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.framecaptureoutputsettings.namemodifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.framecaptureoutputsettings.namemodifier",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.framecapturesettings.captureinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.framecapturesettings.captureinterval",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.framecapturesettings.captureintervalunits": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.framecapturesettings.captureintervalunits",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.globalconfiguration.initialaudiogain": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.globalconfiguration.initialaudiogain",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.globalconfiguration.inputendaction": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.globalconfiguration.inputendaction",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.globalconfiguration.inputlossbehavior": {
        "Required": "No",
        "Type": "InputLossBehavior",
        "UniqueKey": "medialive.channel.globalconfiguration.inputlossbehavior",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.globalconfiguration.outputlockingmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.globalconfiguration.outputlockingmode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.globalconfiguration.outputtimingsource": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.globalconfiguration.outputtimingsource",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.globalconfiguration.supportlowframerateinputs": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.globalconfiguration.supportlowframerateinputs",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264colorspacesettings.colorspacepassthroughsettings": {
        "Required": "No",
        "Type": "ColorSpacePassthroughSettings",
        "UniqueKey": "medialive.channel.h264colorspacesettings.colorspacepassthroughsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264colorspacesettings.rec601settings": {
        "Required": "No",
        "Type": "Rec601Settings",
        "UniqueKey": "medialive.channel.h264colorspacesettings.rec601settings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264colorspacesettings.rec709settings": {
        "Required": "No",
        "Type": "Rec709Settings",
        "UniqueKey": "medialive.channel.h264colorspacesettings.rec709settings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264filtersettings.temporalfiltersettings": {
        "Required": "No",
        "Type": "TemporalFilterSettings",
        "UniqueKey": "medialive.channel.h264filtersettings.temporalfiltersettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.adaptivequantization": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.adaptivequantization",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.afdsignaling": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.afdsignaling",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.bitrate": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h264settings.bitrate",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.buffillpct": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h264settings.buffillpct",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.bufsize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h264settings.bufsize",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.colormetadata": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.colormetadata",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.colorspacesettings": {
        "Required": "No",
        "Type": "H264ColorSpaceSettings",
        "UniqueKey": "medialive.channel.h264settings.colorspacesettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.entropyencoding": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.entropyencoding",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.filtersettings": {
        "Required": "No",
        "Type": "H264FilterSettings",
        "UniqueKey": "medialive.channel.h264settings.filtersettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.fixedafd": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.fixedafd",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.flickeraq": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.flickeraq",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.forcefieldpictures": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.forcefieldpictures",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.frameratecontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.frameratecontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.frameratedenominator": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h264settings.frameratedenominator",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.frameratenumerator": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h264settings.frameratenumerator",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.gopbreference": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.gopbreference",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.gopclosedcadence": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h264settings.gopclosedcadence",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.gopnumbframes": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h264settings.gopnumbframes",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.gopsize": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "medialive.channel.h264settings.gopsize",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.gopsizeunits": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.gopsizeunits",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.level": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.level",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.lookaheadratecontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.lookaheadratecontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.maxbitrate": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h264settings.maxbitrate",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.miniinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h264settings.miniinterval",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.numrefframes": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h264settings.numrefframes",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.parcontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.parcontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.pardenominator": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h264settings.pardenominator",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.parnumerator": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h264settings.parnumerator",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.profile": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.profile",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.qualitylevel": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.qualitylevel",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.qvbrqualitylevel": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h264settings.qvbrqualitylevel",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.ratecontrolmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.ratecontrolmode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.scantype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.scantype",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.scenechangedetect": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.scenechangedetect",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.slices": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h264settings.slices",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.softness": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h264settings.softness",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.spatialaq": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.spatialaq",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.subgoplength": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.subgoplength",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.syntax": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.syntax",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.temporalaq": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.temporalaq",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h264settings.timecodeinsertion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h264settings.timecodeinsertion",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265colorspacesettings.colorspacepassthroughsettings": {
        "Required": "No",
        "Type": "ColorSpacePassthroughSettings",
        "UniqueKey": "medialive.channel.h265colorspacesettings.colorspacepassthroughsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265colorspacesettings.hdr10settings": {
        "Required": "No",
        "Type": "Hdr10Settings",
        "UniqueKey": "medialive.channel.h265colorspacesettings.hdr10settings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265colorspacesettings.rec601settings": {
        "Required": "No",
        "Type": "Rec601Settings",
        "UniqueKey": "medialive.channel.h265colorspacesettings.rec601settings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265colorspacesettings.rec709settings": {
        "Required": "No",
        "Type": "Rec709Settings",
        "UniqueKey": "medialive.channel.h265colorspacesettings.rec709settings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265filtersettings.temporalfiltersettings": {
        "Required": "No",
        "Type": "TemporalFilterSettings",
        "UniqueKey": "medialive.channel.h265filtersettings.temporalfiltersettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.adaptivequantization": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h265settings.adaptivequantization",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.afdsignaling": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h265settings.afdsignaling",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.alternativetransferfunction": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h265settings.alternativetransferfunction",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.bitrate": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h265settings.bitrate",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.bufsize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h265settings.bufsize",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.colormetadata": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h265settings.colormetadata",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.colorspacesettings": {
        "Required": "No",
        "Type": "H265ColorSpaceSettings",
        "UniqueKey": "medialive.channel.h265settings.colorspacesettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.filtersettings": {
        "Required": "No",
        "Type": "H265FilterSettings",
        "UniqueKey": "medialive.channel.h265settings.filtersettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.fixedafd": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h265settings.fixedafd",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.flickeraq": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h265settings.flickeraq",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.frameratedenominator": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h265settings.frameratedenominator",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.frameratenumerator": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h265settings.frameratenumerator",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.gopclosedcadence": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h265settings.gopclosedcadence",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.gopsize": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "medialive.channel.h265settings.gopsize",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.gopsizeunits": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h265settings.gopsizeunits",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.level": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h265settings.level",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.lookaheadratecontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h265settings.lookaheadratecontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.maxbitrate": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h265settings.maxbitrate",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.miniinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h265settings.miniinterval",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.pardenominator": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h265settings.pardenominator",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.parnumerator": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h265settings.parnumerator",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.profile": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h265settings.profile",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.qvbrqualitylevel": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h265settings.qvbrqualitylevel",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.ratecontrolmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h265settings.ratecontrolmode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.scantype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h265settings.scantype",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.scenechangedetect": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h265settings.scenechangedetect",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.slices": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.h265settings.slices",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.tier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h265settings.tier",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.h265settings.timecodeinsertion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.h265settings.timecodeinsertion",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hdr10settings.maxcll": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hdr10settings.maxcll",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hdr10settings.maxfall": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hdr10settings.maxfall",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsakamaisettings.connectionretryinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsakamaisettings.connectionretryinterval",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsakamaisettings.filecacheduration": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsakamaisettings.filecacheduration",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsakamaisettings.httptransfermode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsakamaisettings.httptransfermode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsakamaisettings.numretries": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsakamaisettings.numretries",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsakamaisettings.restartdelay": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsakamaisettings.restartdelay",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsakamaisettings.salt": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsakamaisettings.salt",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsakamaisettings.token": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsakamaisettings.token",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsbasicputsettings.connectionretryinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsbasicputsettings.connectionretryinterval",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsbasicputsettings.filecacheduration": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsbasicputsettings.filecacheduration",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsbasicputsettings.numretries": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsbasicputsettings.numretries",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsbasicputsettings.restartdelay": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsbasicputsettings.restartdelay",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlscdnsettings.hlsakamaisettings": {
        "Required": "No",
        "Type": "HlsAkamaiSettings",
        "UniqueKey": "medialive.channel.hlscdnsettings.hlsakamaisettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlscdnsettings.hlsbasicputsettings": {
        "Required": "No",
        "Type": "HlsBasicPutSettings",
        "UniqueKey": "medialive.channel.hlscdnsettings.hlsbasicputsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlscdnsettings.hlsmediastoresettings": {
        "Required": "No",
        "Type": "HlsMediaStoreSettings",
        "UniqueKey": "medialive.channel.hlscdnsettings.hlsmediastoresettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlscdnsettings.hlswebdavsettings": {
        "Required": "No",
        "Type": "HlsWebdavSettings",
        "UniqueKey": "medialive.channel.hlscdnsettings.hlswebdavsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.admarkers": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.admarkers",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.baseurlcontent": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.baseurlcontent",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.baseurlcontent1": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.baseurlcontent1",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.baseurlmanifest": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.baseurlmanifest",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.baseurlmanifest1": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.baseurlmanifest1",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.captionlanguagemappings": {
        "Required": "No",
        "Type": "List of [CaptionLanguageMapping",
        "UniqueKey": "medialive.channel.hlsgroupsettings.captionlanguagemappings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.captionlanguagesetting": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.captionlanguagesetting",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.clientcache": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.clientcache",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.codecspecification": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.codecspecification",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.constantiv": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.constantiv",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.destination": {
        "Required": "No",
        "Type": "OutputLocationRef",
        "UniqueKey": "medialive.channel.hlsgroupsettings.destination",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.directorystructure": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.directorystructure",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.discontinuitytags": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.discontinuitytags",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.encryptiontype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.encryptiontype",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.hlscdnsettings": {
        "Required": "No",
        "Type": "HlsCdnSettings",
        "UniqueKey": "medialive.channel.hlsgroupsettings.hlscdnsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.hlsid3segmenttagging": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.hlsid3segmenttagging",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.iframeonlyplaylists": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.iframeonlyplaylists",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.incompletesegmentbehavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.incompletesegmentbehavior",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.indexnsegments": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsgroupsettings.indexnsegments",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.inputlossaction": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.inputlossaction",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.ivinmanifest": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.ivinmanifest",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.ivsource": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.ivsource",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.keepsegments": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsgroupsettings.keepsegments",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.keyformat": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.keyformat",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.keyformatversions": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.keyformatversions",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.keyprovidersettings": {
        "Required": "No",
        "Type": "KeyProviderSettings",
        "UniqueKey": "medialive.channel.hlsgroupsettings.keyprovidersettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.manifestcompression": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.manifestcompression",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.manifestdurationformat": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.manifestdurationformat",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.minsegmentlength": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsgroupsettings.minsegmentlength",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.mode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.mode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.outputselection": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.outputselection",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.programdatetime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.programdatetime",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.programdatetimeperiod": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsgroupsettings.programdatetimeperiod",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.redundantmanifest": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.redundantmanifest",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.segmentationmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.segmentationmode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.segmentlength": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsgroupsettings.segmentlength",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.segmentspersubdirectory": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsgroupsettings.segmentspersubdirectory",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.streaminfresolution": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.streaminfresolution",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.timedmetadataid3frame": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.timedmetadataid3frame",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.timedmetadataid3period": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsgroupsettings.timedmetadataid3period",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.timestampdeltamilliseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsgroupsettings.timestampdeltamilliseconds",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsgroupsettings.tsfilemode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsgroupsettings.tsfilemode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsinputsettings.bandwidth": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsinputsettings.bandwidth",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsinputsettings.buffersegments": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsinputsettings.buffersegments",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsinputsettings.retries": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsinputsettings.retries",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsinputsettings.retryinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsinputsettings.retryinterval",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsmediastoresettings.connectionretryinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsmediastoresettings.connectionretryinterval",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsmediastoresettings.filecacheduration": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsmediastoresettings.filecacheduration",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsmediastoresettings.mediastorestorageclass": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsmediastoresettings.mediastorestorageclass",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsmediastoresettings.numretries": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsmediastoresettings.numretries",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsmediastoresettings.restartdelay": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsmediastoresettings.restartdelay",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsoutputsettings.h265packagingtype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsoutputsettings.h265packagingtype",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsoutputsettings.hlssettings": {
        "Required": "No",
        "Type": "HlsSettings",
        "UniqueKey": "medialive.channel.hlsoutputsettings.hlssettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsoutputsettings.namemodifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsoutputsettings.namemodifier",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlsoutputsettings.segmentmodifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlsoutputsettings.segmentmodifier",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlssettings.audioonlyhlssettings": {
        "Required": "No",
        "Type": "AudioOnlyHlsSettings",
        "UniqueKey": "medialive.channel.hlssettings.audioonlyhlssettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlssettings.fmp4hlssettings": {
        "Required": "No",
        "Type": "Fmp4HlsSettings",
        "UniqueKey": "medialive.channel.hlssettings.fmp4hlssettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlssettings.standardhlssettings": {
        "Required": "No",
        "Type": "StandardHlsSettings",
        "UniqueKey": "medialive.channel.hlssettings.standardhlssettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlswebdavsettings.connectionretryinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlswebdavsettings.connectionretryinterval",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlswebdavsettings.filecacheduration": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlswebdavsettings.filecacheduration",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlswebdavsettings.httptransfermode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.hlswebdavsettings.httptransfermode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlswebdavsettings.numretries": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlswebdavsettings.numretries",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.hlswebdavsettings.restartdelay": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlswebdavsettings.restartdelay",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputattachment.automaticinputfailoversettings": {
        "Required": "No",
        "Type": "AutomaticInputFailoverSettings",
        "UniqueKey": "medialive.channel.inputattachment.automaticinputfailoversettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputattachment.inputattachmentname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputattachment.inputattachmentname",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputattachment.inputid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputattachment.inputid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputattachment.inputsettings": {
        "Required": "No",
        "Type": "InputSettings",
        "UniqueKey": "medialive.channel.inputattachment.inputsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputchannellevel.gain": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.inputchannellevel.gain",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputchannellevel.inputchannel": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.inputchannellevel.inputchannel",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputlocation.passwordparam": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputlocation.passwordparam",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputlocation.uri": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputlocation.uri",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputlocation.username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputlocation.username",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputlossbehavior.blackframemsec": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.inputlossbehavior.blackframemsec",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputlossbehavior.inputlossimagecolor": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputlossbehavior.inputlossimagecolor",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputlossbehavior.inputlossimageslate": {
        "Required": "No",
        "Type": "InputLocation",
        "UniqueKey": "medialive.channel.inputlossbehavior.inputlossimageslate",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputlossbehavior.inputlossimagetype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputlossbehavior.inputlossimagetype",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputlossbehavior.repeatframemsec": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.inputlossbehavior.repeatframemsec",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputlossfailoversettings.inputlossthresholdmsec": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.inputlossfailoversettings.inputlossthresholdmsec",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputsettings.audioselectors": {
        "Required": "No",
        "Type": "List of [AudioSelector",
        "UniqueKey": "medialive.channel.inputsettings.audioselectors",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputsettings.captionselectors": {
        "Required": "No",
        "Type": "List of [CaptionSelector",
        "UniqueKey": "medialive.channel.inputsettings.captionselectors",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputsettings.deblockfilter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputsettings.deblockfilter",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputsettings.denoisefilter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputsettings.denoisefilter",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputsettings.filterstrength": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.inputsettings.filterstrength",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputsettings.inputfilter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputsettings.inputfilter",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputsettings.networkinputsettings": {
        "Required": "No",
        "Type": "NetworkInputSettings",
        "UniqueKey": "medialive.channel.inputsettings.networkinputsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputsettings.smpte2038datapreference": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputsettings.smpte2038datapreference",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputsettings.sourceendbehavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputsettings.sourceendbehavior",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputsettings.videoselector": {
        "Required": "No",
        "Type": "VideoSelector",
        "UniqueKey": "medialive.channel.inputsettings.videoselector",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputspecification.codec": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputspecification.codec",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputspecification.maximumbitrate": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputspecification.maximumbitrate",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputspecification.resolution": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputspecification.resolution",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.keyprovidersettings.statickeysettings": {
        "Required": "No",
        "Type": "StaticKeySettings",
        "UniqueKey": "medialive.channel.keyprovidersettings.statickeysettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.absentinputaudiobehavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.absentinputaudiobehavior",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.arib": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.arib",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.aribcaptionspid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.aribcaptionspid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.aribcaptionspidcontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.aribcaptionspidcontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.audiobuffermodel": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.audiobuffermodel",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.audioframesperpes": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.m2tssettings.audioframesperpes",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.audiopids": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.audiopids",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.audiostreamtype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.audiostreamtype",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.bitrate": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.m2tssettings.bitrate",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.buffermodel": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.buffermodel",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.ccdescriptor": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.ccdescriptor",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.dvbnitsettings": {
        "Required": "No",
        "Type": "DvbNitSettings",
        "UniqueKey": "medialive.channel.m2tssettings.dvbnitsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.dvbsdtsettings": {
        "Required": "No",
        "Type": "DvbSdtSettings",
        "UniqueKey": "medialive.channel.m2tssettings.dvbsdtsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.dvbsubpids": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.dvbsubpids",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.dvbtdtsettings": {
        "Required": "No",
        "Type": "DvbTdtSettings",
        "UniqueKey": "medialive.channel.m2tssettings.dvbtdtsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.dvbteletextpid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.dvbteletextpid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.ebif": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.ebif",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.ebpaudiointerval": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.ebpaudiointerval",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.ebplookaheadms": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.m2tssettings.ebplookaheadms",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.ebpplacement": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.ebpplacement",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.ecmpid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.ecmpid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.esrateinpes": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.esrateinpes",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.etvplatformpid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.etvplatformpid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.etvsignalpid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.etvsignalpid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.fragmenttime": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "medialive.channel.m2tssettings.fragmenttime",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.klv": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.klv",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.klvdatapids": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.klvdatapids",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.nielsenid3behavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.nielsenid3behavior",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.nullpacketbitrate": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "medialive.channel.m2tssettings.nullpacketbitrate",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.patinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.m2tssettings.patinterval",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.pcrcontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.pcrcontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.pcrperiod": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.m2tssettings.pcrperiod",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.pcrpid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.pcrpid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.pmtinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.m2tssettings.pmtinterval",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.pmtpid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.pmtpid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.programnum": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.m2tssettings.programnum",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.ratemode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.ratemode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.scte27pids": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.scte27pids",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.scte35control": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.scte35control",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.scte35pid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.scte35pid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.segmentationmarkers": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.segmentationmarkers",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.segmentationstyle": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.segmentationstyle",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.segmentationtime": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "medialive.channel.m2tssettings.segmentationtime",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.timedmetadatabehavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.timedmetadatabehavior",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.timedmetadatapid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.timedmetadatapid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.transportstreamid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.m2tssettings.transportstreamid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m2tssettings.videopid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m2tssettings.videopid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m3u8settings.audioframesperpes": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.m3u8settings.audioframesperpes",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m3u8settings.audiopids": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m3u8settings.audiopids",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m3u8settings.ecmpid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m3u8settings.ecmpid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m3u8settings.nielsenid3behavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m3u8settings.nielsenid3behavior",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m3u8settings.patinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.m3u8settings.patinterval",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m3u8settings.pcrcontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m3u8settings.pcrcontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m3u8settings.pcrperiod": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.m3u8settings.pcrperiod",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m3u8settings.pcrpid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m3u8settings.pcrpid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m3u8settings.pmtinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.m3u8settings.pmtinterval",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m3u8settings.pmtpid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m3u8settings.pmtpid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m3u8settings.programnum": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.m3u8settings.programnum",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m3u8settings.scte35behavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m3u8settings.scte35behavior",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m3u8settings.scte35pid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m3u8settings.scte35pid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m3u8settings.timedmetadatabehavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m3u8settings.timedmetadatabehavior",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m3u8settings.timedmetadatapid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m3u8settings.timedmetadatapid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m3u8settings.transportstreamid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.m3u8settings.transportstreamid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.m3u8settings.videopid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.m3u8settings.videopid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mediapackagegroupsettings.destination": {
        "Required": "No",
        "Type": "OutputLocationRef",
        "UniqueKey": "medialive.channel.mediapackagegroupsettings.destination",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mediapackageoutputdestinationsettings.channelid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mediapackageoutputdestinationsettings.channelid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mp2settings.bitrate": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "medialive.channel.mp2settings.bitrate",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mp2settings.codingmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mp2settings.codingmode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mp2settings.samplerate": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "medialive.channel.mp2settings.samplerate",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mpeg2filtersettings.temporalfiltersettings": {
        "Required": "No",
        "Type": "TemporalFilterSettings",
        "UniqueKey": "medialive.channel.mpeg2filtersettings.temporalfiltersettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mpeg2settings.adaptivequantization": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mpeg2settings.adaptivequantization",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mpeg2settings.afdsignaling": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mpeg2settings.afdsignaling",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mpeg2settings.colormetadata": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mpeg2settings.colormetadata",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mpeg2settings.colorspace": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mpeg2settings.colorspace",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mpeg2settings.displayaspectratio": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mpeg2settings.displayaspectratio",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mpeg2settings.filtersettings": {
        "Required": "No",
        "Type": "Mpeg2FilterSettings",
        "UniqueKey": "medialive.channel.mpeg2settings.filtersettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mpeg2settings.fixedafd": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mpeg2settings.fixedafd",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mpeg2settings.frameratedenominator": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.mpeg2settings.frameratedenominator",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mpeg2settings.frameratenumerator": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.mpeg2settings.frameratenumerator",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mpeg2settings.gopclosedcadence": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.mpeg2settings.gopclosedcadence",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mpeg2settings.gopnumbframes": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.mpeg2settings.gopnumbframes",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mpeg2settings.gopsize": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "medialive.channel.mpeg2settings.gopsize",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mpeg2settings.gopsizeunits": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mpeg2settings.gopsizeunits",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mpeg2settings.scantype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mpeg2settings.scantype",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mpeg2settings.subgoplength": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mpeg2settings.subgoplength",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mpeg2settings.timecodeinsertion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mpeg2settings.timecodeinsertion",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothgroupsettings.acquisitionpointid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mssmoothgroupsettings.acquisitionpointid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothgroupsettings.audioonlytimecodecontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mssmoothgroupsettings.audioonlytimecodecontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothgroupsettings.certificatemode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mssmoothgroupsettings.certificatemode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothgroupsettings.connectionretryinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.mssmoothgroupsettings.connectionretryinterval",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothgroupsettings.destination": {
        "Required": "No",
        "Type": "OutputLocationRef",
        "UniqueKey": "medialive.channel.mssmoothgroupsettings.destination",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothgroupsettings.eventid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mssmoothgroupsettings.eventid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothgroupsettings.eventidmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mssmoothgroupsettings.eventidmode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothgroupsettings.eventstopbehavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mssmoothgroupsettings.eventstopbehavior",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothgroupsettings.filecacheduration": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.mssmoothgroupsettings.filecacheduration",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothgroupsettings.fragmentlength": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.mssmoothgroupsettings.fragmentlength",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothgroupsettings.inputlossaction": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mssmoothgroupsettings.inputlossaction",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothgroupsettings.numretries": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.mssmoothgroupsettings.numretries",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothgroupsettings.restartdelay": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.mssmoothgroupsettings.restartdelay",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothgroupsettings.segmentationmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mssmoothgroupsettings.segmentationmode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothgroupsettings.senddelayms": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.mssmoothgroupsettings.senddelayms",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothgroupsettings.sparsetracktype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mssmoothgroupsettings.sparsetracktype",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothgroupsettings.streammanifestbehavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mssmoothgroupsettings.streammanifestbehavior",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothgroupsettings.timestampoffset": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mssmoothgroupsettings.timestampoffset",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothgroupsettings.timestampoffsetmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mssmoothgroupsettings.timestampoffsetmode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothoutputsettings.h265packagingtype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mssmoothoutputsettings.h265packagingtype",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.mssmoothoutputsettings.namemodifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mssmoothoutputsettings.namemodifier",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.multiplexoutputsettings.destination": {
        "Required": "No",
        "Type": "OutputLocationRef",
        "UniqueKey": "medialive.channel.multiplexoutputsettings.destination",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.multiplexprogramchanneldestinationsettings.multiplexid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.multiplexprogramchanneldestinationsettings.multiplexid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.multiplexprogramchanneldestinationsettings.programname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.multiplexprogramchanneldestinationsettings.programname",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.networkinputsettings.hlsinputsettings": {
        "Required": "No",
        "Type": "HlsInputSettings",
        "UniqueKey": "medialive.channel.networkinputsettings.hlsinputsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.networkinputsettings.servervalidation": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.networkinputsettings.servervalidation",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.nielsenconfiguration.distributorid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.nielsenconfiguration.distributorid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.nielsenconfiguration.nielsenpcmtoid3tagging": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.nielsenconfiguration.nielsenpcmtoid3tagging",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.output.audiodescriptionnames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "medialive.channel.output.audiodescriptionnames",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.output.captiondescriptionnames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "medialive.channel.output.captiondescriptionnames",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.output.outputname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.output.outputname",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.output.outputsettings": {
        "Required": "No",
        "Type": "OutputSettings",
        "UniqueKey": "medialive.channel.output.outputsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.output.videodescriptionname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.output.videodescriptionname",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputdestination.id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.outputdestination.id",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputdestination.mediapackagesettings": {
        "Required": "No",
        "Type": "List of [MediaPackageOutputDestinationSettings",
        "UniqueKey": "medialive.channel.outputdestination.mediapackagesettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputdestination.multiplexsettings": {
        "Required": "No",
        "Type": "MultiplexProgramChannelDestinationSettings",
        "UniqueKey": "medialive.channel.outputdestination.multiplexsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputdestination.settings": {
        "Required": "No",
        "Type": "List of [OutputDestinationSettings",
        "UniqueKey": "medialive.channel.outputdestination.settings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputdestinationsettings.passwordparam": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.outputdestinationsettings.passwordparam",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputdestinationsettings.streamname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.outputdestinationsettings.streamname",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputdestinationsettings.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.outputdestinationsettings.url",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputdestinationsettings.username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.outputdestinationsettings.username",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputgroup.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.outputgroup.name",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputgroup.outputgroupsettings": {
        "Required": "No",
        "Type": "OutputGroupSettings",
        "UniqueKey": "medialive.channel.outputgroup.outputgroupsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputgroup.outputs": {
        "Required": "No",
        "Type": "List of [Output",
        "UniqueKey": "medialive.channel.outputgroup.outputs",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputgroupsettings.archivegroupsettings": {
        "Required": "No",
        "Type": "ArchiveGroupSettings",
        "UniqueKey": "medialive.channel.outputgroupsettings.archivegroupsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputgroupsettings.framecapturegroupsettings": {
        "Required": "No",
        "Type": "FrameCaptureGroupSettings",
        "UniqueKey": "medialive.channel.outputgroupsettings.framecapturegroupsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputgroupsettings.hlsgroupsettings": {
        "Required": "No",
        "Type": "HlsGroupSettings",
        "UniqueKey": "medialive.channel.outputgroupsettings.hlsgroupsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputgroupsettings.mediapackagegroupsettings": {
        "Required": "No",
        "Type": "MediaPackageGroupSettings",
        "UniqueKey": "medialive.channel.outputgroupsettings.mediapackagegroupsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputgroupsettings.mssmoothgroupsettings": {
        "Required": "No",
        "Type": "MsSmoothGroupSettings",
        "UniqueKey": "medialive.channel.outputgroupsettings.mssmoothgroupsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputgroupsettings.multiplexgroupsettings": {
        "Required": "No",
        "Type": "MultiplexGroupSettings",
        "UniqueKey": "medialive.channel.outputgroupsettings.multiplexgroupsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputgroupsettings.rtmpgroupsettings": {
        "Required": "No",
        "Type": "RtmpGroupSettings",
        "UniqueKey": "medialive.channel.outputgroupsettings.rtmpgroupsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputgroupsettings.udpgroupsettings": {
        "Required": "No",
        "Type": "UdpGroupSettings",
        "UniqueKey": "medialive.channel.outputgroupsettings.udpgroupsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputlocationref.destinationrefid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.outputlocationref.destinationrefid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputsettings.archiveoutputsettings": {
        "Required": "No",
        "Type": "ArchiveOutputSettings",
        "UniqueKey": "medialive.channel.outputsettings.archiveoutputsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputsettings.framecaptureoutputsettings": {
        "Required": "No",
        "Type": "FrameCaptureOutputSettings",
        "UniqueKey": "medialive.channel.outputsettings.framecaptureoutputsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputsettings.hlsoutputsettings": {
        "Required": "No",
        "Type": "HlsOutputSettings",
        "UniqueKey": "medialive.channel.outputsettings.hlsoutputsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputsettings.mediapackageoutputsettings": {
        "Required": "No",
        "Type": "MediaPackageOutputSettings",
        "UniqueKey": "medialive.channel.outputsettings.mediapackageoutputsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputsettings.mssmoothoutputsettings": {
        "Required": "No",
        "Type": "MsSmoothOutputSettings",
        "UniqueKey": "medialive.channel.outputsettings.mssmoothoutputsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputsettings.multiplexoutputsettings": {
        "Required": "No",
        "Type": "MultiplexOutputSettings",
        "UniqueKey": "medialive.channel.outputsettings.multiplexoutputsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputsettings.rtmpoutputsettings": {
        "Required": "No",
        "Type": "RtmpOutputSettings",
        "UniqueKey": "medialive.channel.outputsettings.rtmpoutputsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.outputsettings.udpoutputsettings": {
        "Required": "No",
        "Type": "UdpOutputSettings",
        "UniqueKey": "medialive.channel.outputsettings.udpoutputsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.remixsettings.channelmappings": {
        "Required": "No",
        "Type": "List of [AudioChannelMapping",
        "UniqueKey": "medialive.channel.remixsettings.channelmappings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.remixsettings.channelsin": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.remixsettings.channelsin",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.remixsettings.channelsout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.remixsettings.channelsout",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.rtmpgroupsettings.admarkers": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "medialive.channel.rtmpgroupsettings.admarkers",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.rtmpgroupsettings.authenticationscheme": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.rtmpgroupsettings.authenticationscheme",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.rtmpgroupsettings.cachefullbehavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.rtmpgroupsettings.cachefullbehavior",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.rtmpgroupsettings.cachelength": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.rtmpgroupsettings.cachelength",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.rtmpgroupsettings.captiondata": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.rtmpgroupsettings.captiondata",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.rtmpgroupsettings.inputlossaction": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.rtmpgroupsettings.inputlossaction",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.rtmpgroupsettings.restartdelay": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.rtmpgroupsettings.restartdelay",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.rtmpoutputsettings.certificatemode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.rtmpoutputsettings.certificatemode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.rtmpoutputsettings.connectionretryinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.rtmpoutputsettings.connectionretryinterval",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.rtmpoutputsettings.destination": {
        "Required": "No",
        "Type": "OutputLocationRef",
        "UniqueKey": "medialive.channel.rtmpoutputsettings.destination",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.rtmpoutputsettings.numretries": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.rtmpoutputsettings.numretries",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.scte20sourcesettings.convert608to708": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.scte20sourcesettings.convert608to708",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.scte20sourcesettings.source608channelnumber": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.scte20sourcesettings.source608channelnumber",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.scte27sourcesettings.pid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.scte27sourcesettings.pid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.scte35spliceinsert.adavailoffset": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.scte35spliceinsert.adavailoffset",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.scte35spliceinsert.noregionalblackoutflag": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.scte35spliceinsert.noregionalblackoutflag",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.scte35spliceinsert.webdeliveryallowedflag": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.scte35spliceinsert.webdeliveryallowedflag",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.scte35timesignalapos.adavailoffset": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.scte35timesignalapos.adavailoffset",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.scte35timesignalapos.noregionalblackoutflag": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.scte35timesignalapos.noregionalblackoutflag",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.scte35timesignalapos.webdeliveryallowedflag": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.scte35timesignalapos.webdeliveryallowedflag",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.standardhlssettings.audiorenditionsets": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.standardhlssettings.audiorenditionsets",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.standardhlssettings.m3u8settings": {
        "Required": "No",
        "Type": "M3u8Settings",
        "UniqueKey": "medialive.channel.standardhlssettings.m3u8settings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.statickeysettings.keyproviderserver": {
        "Required": "No",
        "Type": "InputLocation",
        "UniqueKey": "medialive.channel.statickeysettings.keyproviderserver",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.statickeysettings.statickeyvalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.statickeysettings.statickeyvalue",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.teletextsourcesettings.pagenumber": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.teletextsourcesettings.pagenumber",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.temporalfiltersettings.postfiltersharpening": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.temporalfiltersettings.postfiltersharpening",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.temporalfiltersettings.strength": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.temporalfiltersettings.strength",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.timecodeconfig.source": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.timecodeconfig.source",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.timecodeconfig.syncthreshold": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.timecodeconfig.syncthreshold",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.ttmldestinationsettings.stylecontrol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.ttmldestinationsettings.stylecontrol",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.udpcontainersettings.m2tssettings": {
        "Required": "No",
        "Type": "M2tsSettings",
        "UniqueKey": "medialive.channel.udpcontainersettings.m2tssettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.udpgroupsettings.inputlossaction": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.udpgroupsettings.inputlossaction",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.udpgroupsettings.timedmetadataid3frame": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.udpgroupsettings.timedmetadataid3frame",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.udpgroupsettings.timedmetadataid3period": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.udpgroupsettings.timedmetadataid3period",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.udpoutputsettings.buffermsec": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.udpoutputsettings.buffermsec",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.udpoutputsettings.containersettings": {
        "Required": "No",
        "Type": "UdpContainerSettings",
        "UniqueKey": "medialive.channel.udpoutputsettings.containersettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.udpoutputsettings.destination": {
        "Required": "No",
        "Type": "OutputLocationRef",
        "UniqueKey": "medialive.channel.udpoutputsettings.destination",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.udpoutputsettings.fecoutputsettings": {
        "Required": "No",
        "Type": "FecOutputSettings",
        "UniqueKey": "medialive.channel.udpoutputsettings.fecoutputsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videoblackfailoversettings.blackdetectthreshold": {
        "Required": "No",
        "SampleValue": "TODO-BlackDetectThreshold",
        "UniqueKey": "medialive.channel.videoblackfailoversettings.blackdetectthreshold",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videoblackfailoversettings.videoblackthresholdmsec": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.videoblackfailoversettings.videoblackthresholdmsec",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videocodecsettings.framecapturesettings": {
        "Required": "No",
        "Type": "FrameCaptureSettings",
        "UniqueKey": "medialive.channel.videocodecsettings.framecapturesettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videocodecsettings.h264settings": {
        "Required": "No",
        "Type": "H264Settings",
        "UniqueKey": "medialive.channel.videocodecsettings.h264settings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videocodecsettings.h265settings": {
        "Required": "No",
        "Type": "H265Settings",
        "UniqueKey": "medialive.channel.videocodecsettings.h265settings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videocodecsettings.mpeg2settings": {
        "Required": "No",
        "Type": "Mpeg2Settings",
        "UniqueKey": "medialive.channel.videocodecsettings.mpeg2settings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videodescription.codecsettings": {
        "Required": "No",
        "Type": "VideoCodecSettings",
        "UniqueKey": "medialive.channel.videodescription.codecsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videodescription.height": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.videodescription.height",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videodescription.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.videodescription.name",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videodescription.respondtoafd": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.videodescription.respondtoafd",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videodescription.scalingbehavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.videodescription.scalingbehavior",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videodescription.sharpness": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.videodescription.sharpness",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videodescription.width": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.videodescription.width",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videoselector.colorspace": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.videoselector.colorspace",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videoselector.colorspaceusage": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.videoselector.colorspaceusage",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videoselector.selectorsettings": {
        "Required": "No",
        "Type": "VideoSelectorSettings",
        "UniqueKey": "medialive.channel.videoselector.selectorsettings",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videoselectorpid.pid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.videoselectorpid.pid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videoselectorprogramid.programid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.videoselectorprogramid.programid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videoselectorsettings.videoselectorpid": {
        "Required": "No",
        "Type": "VideoSelectorPid",
        "UniqueKey": "medialive.channel.videoselectorsettings.videoselectorpid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.videoselectorsettings.videoselectorprogramid": {
        "Required": "No",
        "Type": "VideoSelectorProgramId",
        "UniqueKey": "medialive.channel.videoselectorsettings.videoselectorprogramid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.wavsettings.bitdepth": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "medialive.channel.wavsettings.bitdepth",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.wavsettings.codingmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.wavsettings.codingmode",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.wavsettings.samplerate": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "medialive.channel.wavsettings.samplerate",
        "UpdateRequires": "Replacement"
    },
    "medialive.input.inputdestinationrequest.streamname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.input.inputdestinationrequest.streamname",
        "UpdateRequires": "Replacement"
    },
    "medialive.input.inputdevicerequest.id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.input.inputdevicerequest.id",
        "UpdateRequires": "Replacement"
    },
    "medialive.input.inputdevicesettings.id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.input.inputdevicesettings.id",
        "UpdateRequires": "Replacement"
    },
    "medialive.input.inputsourcerequest.passwordparam": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.input.inputsourcerequest.passwordparam",
        "UpdateRequires": "Replacement"
    },
    "medialive.input.inputsourcerequest.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.input.inputsourcerequest.url",
        "UpdateRequires": "Replacement"
    },
    "medialive.input.inputsourcerequest.username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.input.inputsourcerequest.username",
        "UpdateRequires": "Replacement"
    },
    "medialive.input.inputvpcrequest.securitygroupids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "medialive.input.inputvpcrequest.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "medialive.input.inputvpcrequest.subnetids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "medialive.input.inputvpcrequest.subnetids",
        "UpdateRequires": "Replacement"
    },
    "medialive.input.mediaconnectflowrequest.flowarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.input.mediaconnectflowrequest.flowarn",
        "UpdateRequires": "Replacement"
    },
    "medialive.inputsecuritygroup.inputwhitelistrulecidr.cidr": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.inputsecuritygroup.inputwhitelistrulecidr.cidr",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.asset.egressendpoint.packagingconfigurationid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediapackage.asset.egressendpoint.packagingconfigurationid",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.asset.egressendpoint.url": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediapackage.asset.egressendpoint.url",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.channel.hlsingest.ingestendpoints": {
        "Required": "No",
        "Type": "List of [IngestEndpoint",
        "UniqueKey": "mediapackage.channel.hlsingest.ingestendpoints",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.channel.ingestendpoint.id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediapackage.channel.ingestendpoint.id",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.channel.ingestendpoint.password": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediapackage.channel.ingestendpoint.password",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.channel.ingestendpoint.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediapackage.channel.ingestendpoint.url",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.channel.ingestendpoint.username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediapackage.channel.ingestendpoint.username",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.authorization.cdnidentifiersecret": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediapackage.originendpoint.authorization.cdnidentifiersecret",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.authorization.secretsrolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediapackage.originendpoint.authorization.secretsrolearn",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.cmafencryption.keyrotationintervalseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.originendpoint.cmafencryption.keyrotationintervalseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.cmafencryption.spekekeyprovider": {
        "Required": "Yes",
        "Type": "SpekeKeyProvider",
        "UniqueKey": "mediapackage.originendpoint.cmafencryption.spekekeyprovider",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.cmafpackage.encryption": {
        "Required": "No",
        "Type": "CmafEncryption",
        "UniqueKey": "mediapackage.originendpoint.cmafpackage.encryption",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.cmafpackage.hlsmanifests": {
        "Required": "No",
        "Type": "List of [HlsManifest",
        "UniqueKey": "mediapackage.originendpoint.cmafpackage.hlsmanifests",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.cmafpackage.segmentdurationseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.originendpoint.cmafpackage.segmentdurationseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.cmafpackage.segmentprefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediapackage.originendpoint.cmafpackage.segmentprefix",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.cmafpackage.streamselection": {
        "Required": "No",
        "Type": "StreamSelection",
        "UniqueKey": "mediapackage.originendpoint.cmafpackage.streamselection",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.dashencryption.keyrotationintervalseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.originendpoint.dashencryption.keyrotationintervalseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.dashencryption.spekekeyprovider": {
        "Required": "Yes",
        "Type": "SpekeKeyProvider",
        "UniqueKey": "mediapackage.originendpoint.dashencryption.spekekeyprovider",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.dashpackage.adsondeliveryrestrictions": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediapackage.originendpoint.dashpackage.adsondeliveryrestrictions",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.dashpackage.adtriggers": {
        "Required": "No",
        "SampleValue": "TODO-AdTriggers",
        "UniqueKey": "mediapackage.originendpoint.dashpackage.adtriggers",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.dashpackage.encryption": {
        "Required": "No",
        "Type": "DashEncryption",
        "UniqueKey": "mediapackage.originendpoint.dashpackage.encryption",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.dashpackage.manifestlayout": {
        "Required": "No",
        "SampleValue": "TODO-ManifestLayout",
        "UniqueKey": "mediapackage.originendpoint.dashpackage.manifestlayout",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.dashpackage.manifestwindowseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.originendpoint.dashpackage.manifestwindowseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.dashpackage.minbuffertimeseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.originendpoint.dashpackage.minbuffertimeseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.dashpackage.minupdateperiodseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.originendpoint.dashpackage.minupdateperiodseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.dashpackage.periodtriggers": {
        "Required": "No",
        "SampleValue": "TODO-PeriodTriggers",
        "UniqueKey": "mediapackage.originendpoint.dashpackage.periodtriggers",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.dashpackage.profile": {
        "Required": "No",
        "SampleValue": "TODO-Profile",
        "UniqueKey": "mediapackage.originendpoint.dashpackage.profile",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.dashpackage.segmentdurationseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.originendpoint.dashpackage.segmentdurationseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.dashpackage.segmenttemplateformat": {
        "Required": "No",
        "SampleValue": "TODO-SegmentTemplateFormat",
        "UniqueKey": "mediapackage.originendpoint.dashpackage.segmenttemplateformat",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.dashpackage.streamselection": {
        "Required": "No",
        "Type": "StreamSelection",
        "UniqueKey": "mediapackage.originendpoint.dashpackage.streamselection",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.dashpackage.suggestedpresentationdelayseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.originendpoint.dashpackage.suggestedpresentationdelayseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlsencryption.constantinitializationvector": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediapackage.originendpoint.hlsencryption.constantinitializationvector",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlsencryption.encryptionmethod": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediapackage.originendpoint.hlsencryption.encryptionmethod",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlsencryption.keyrotationintervalseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.originendpoint.hlsencryption.keyrotationintervalseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlsencryption.repeatextxkey": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "mediapackage.originendpoint.hlsencryption.repeatextxkey",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlsencryption.spekekeyprovider": {
        "Required": "Yes",
        "Type": "SpekeKeyProvider",
        "UniqueKey": "mediapackage.originendpoint.hlsencryption.spekekeyprovider",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlsmanifest.admarkers": {
        "Required": "No",
        "SampleValue": "TODO-AdMarkers",
        "UniqueKey": "mediapackage.originendpoint.hlsmanifest.admarkers",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlsmanifest.adsondeliveryrestrictions": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediapackage.originendpoint.hlsmanifest.adsondeliveryrestrictions",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlsmanifest.adtriggers": {
        "Required": "No",
        "SampleValue": "TODO-AdTriggers",
        "UniqueKey": "mediapackage.originendpoint.hlsmanifest.adtriggers",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlsmanifest.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediapackage.originendpoint.hlsmanifest.id",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlsmanifest.includeiframeonlystream": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "mediapackage.originendpoint.hlsmanifest.includeiframeonlystream",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlsmanifest.manifestname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediapackage.originendpoint.hlsmanifest.manifestname",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlsmanifest.playlisttype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediapackage.originendpoint.hlsmanifest.playlisttype",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlsmanifest.playlistwindowseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.originendpoint.hlsmanifest.playlistwindowseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlsmanifest.programdatetimeintervalseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.originendpoint.hlsmanifest.programdatetimeintervalseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlsmanifest.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediapackage.originendpoint.hlsmanifest.url",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlspackage.admarkers": {
        "Required": "No",
        "SampleValue": "TODO-AdMarkers",
        "UniqueKey": "mediapackage.originendpoint.hlspackage.admarkers",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlspackage.adsondeliveryrestrictions": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediapackage.originendpoint.hlspackage.adsondeliveryrestrictions",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlspackage.adtriggers": {
        "Required": "No",
        "SampleValue": "TODO-AdTriggers",
        "UniqueKey": "mediapackage.originendpoint.hlspackage.adtriggers",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlspackage.encryption": {
        "Required": "No",
        "Type": "HlsEncryption",
        "UniqueKey": "mediapackage.originendpoint.hlspackage.encryption",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlspackage.includeiframeonlystream": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "mediapackage.originendpoint.hlspackage.includeiframeonlystream",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlspackage.playlisttype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediapackage.originendpoint.hlspackage.playlisttype",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlspackage.playlistwindowseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.originendpoint.hlspackage.playlistwindowseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlspackage.programdatetimeintervalseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.originendpoint.hlspackage.programdatetimeintervalseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlspackage.segmentdurationseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.originendpoint.hlspackage.segmentdurationseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlspackage.streamselection": {
        "Required": "No",
        "Type": "StreamSelection",
        "UniqueKey": "mediapackage.originendpoint.hlspackage.streamselection",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.hlspackage.useaudiorenditiongroup": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "mediapackage.originendpoint.hlspackage.useaudiorenditiongroup",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.mssencryption.spekekeyprovider": {
        "Required": "Yes",
        "Type": "SpekeKeyProvider",
        "UniqueKey": "mediapackage.originendpoint.mssencryption.spekekeyprovider",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.msspackage.encryption": {
        "Required": "No",
        "Type": "MssEncryption",
        "UniqueKey": "mediapackage.originendpoint.msspackage.encryption",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.msspackage.manifestwindowseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.originendpoint.msspackage.manifestwindowseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.msspackage.segmentdurationseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.originendpoint.msspackage.segmentdurationseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.msspackage.streamselection": {
        "Required": "No",
        "Type": "StreamSelection",
        "UniqueKey": "mediapackage.originendpoint.msspackage.streamselection",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.spekekeyprovider.certificatearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediapackage.originendpoint.spekekeyprovider.certificatearn",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.spekekeyprovider.resourceid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediapackage.originendpoint.spekekeyprovider.resourceid",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.spekekeyprovider.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediapackage.originendpoint.spekekeyprovider.rolearn",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.spekekeyprovider.systemids": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "mediapackage.originendpoint.spekekeyprovider.systemids",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.spekekeyprovider.url": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediapackage.originendpoint.spekekeyprovider.url",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.streamselection.maxvideobitspersecond": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.originendpoint.streamselection.maxvideobitspersecond",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.streamselection.minvideobitspersecond": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.originendpoint.streamselection.minvideobitspersecond",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.originendpoint.streamselection.streamorder": {
        "Required": "No",
        "SampleValue": "TODO-StreamOrder",
        "UniqueKey": "mediapackage.originendpoint.streamselection.streamorder",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.cmafencryption.spekekeyprovider": {
        "Required": "Yes",
        "Type": "",
        "UniqueKey": "mediapackage.packagingconfiguration.cmafencryption.spekekeyprovider",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.cmafpackage.encryption": {
        "Required": "No",
        "Type": "CmafEncryption",
        "UniqueKey": "mediapackage.packagingconfiguration.cmafpackage.encryption",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.cmafpackage.hlsmanifests": {
        "Required": "Yes",
        "Type": "List of [HlsManifest",
        "UniqueKey": "mediapackage.packagingconfiguration.cmafpackage.hlsmanifests",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.cmafpackage.segmentdurationseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.packagingconfiguration.cmafpackage.segmentdurationseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.dashencryption.spekekeyprovider": {
        "Required": "Yes",
        "Type": "",
        "UniqueKey": "mediapackage.packagingconfiguration.dashencryption.spekekeyprovider",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.dashmanifest.manifestlayout": {
        "Required": "No",
        "SampleValue": "TODO-ManifestLayout",
        "UniqueKey": "mediapackage.packagingconfiguration.dashmanifest.manifestlayout",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.dashmanifest.manifestname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediapackage.packagingconfiguration.dashmanifest.manifestname",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.dashmanifest.minbuffertimeseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.packagingconfiguration.dashmanifest.minbuffertimeseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.dashmanifest.profile": {
        "Required": "No",
        "SampleValue": "TODO-Profile",
        "UniqueKey": "mediapackage.packagingconfiguration.dashmanifest.profile",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.dashmanifest.streamselection": {
        "Required": "No",
        "Type": "StreamSelection",
        "UniqueKey": "mediapackage.packagingconfiguration.dashmanifest.streamselection",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.dashpackage.dashmanifests": {
        "Required": "Yes",
        "Type": "List of [DashManifest",
        "UniqueKey": "mediapackage.packagingconfiguration.dashpackage.dashmanifests",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.dashpackage.encryption": {
        "Required": "No",
        "Type": "DashEncryption",
        "UniqueKey": "mediapackage.packagingconfiguration.dashpackage.encryption",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.dashpackage.periodtriggers": {
        "Required": "No",
        "SampleValue": "TODO-PeriodTriggers",
        "UniqueKey": "mediapackage.packagingconfiguration.dashpackage.periodtriggers",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.dashpackage.segmentdurationseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.packagingconfiguration.dashpackage.segmentdurationseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.dashpackage.segmenttemplateformat": {
        "Required": "No",
        "SampleValue": "TODO-SegmentTemplateFormat",
        "UniqueKey": "mediapackage.packagingconfiguration.dashpackage.segmenttemplateformat",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.hlsencryption.constantinitializationvector": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediapackage.packagingconfiguration.hlsencryption.constantinitializationvector",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.hlsencryption.encryptionmethod": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediapackage.packagingconfiguration.hlsencryption.encryptionmethod",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.hlsencryption.spekekeyprovider": {
        "Required": "Yes",
        "Type": "",
        "UniqueKey": "mediapackage.packagingconfiguration.hlsencryption.spekekeyprovider",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.hlsmanifest.admarkers": {
        "Required": "No",
        "SampleValue": "TODO-AdMarkers",
        "UniqueKey": "mediapackage.packagingconfiguration.hlsmanifest.admarkers",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.hlsmanifest.includeiframeonlystream": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "mediapackage.packagingconfiguration.hlsmanifest.includeiframeonlystream",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.hlsmanifest.manifestname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediapackage.packagingconfiguration.hlsmanifest.manifestname",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.hlsmanifest.programdatetimeintervalseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.packagingconfiguration.hlsmanifest.programdatetimeintervalseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.hlsmanifest.repeatextxkey": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "mediapackage.packagingconfiguration.hlsmanifest.repeatextxkey",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.hlsmanifest.streamselection": {
        "Required": "No",
        "Type": "StreamSelection",
        "UniqueKey": "mediapackage.packagingconfiguration.hlsmanifest.streamselection",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.hlspackage.encryption": {
        "Required": "No",
        "Type": "HlsEncryption",
        "UniqueKey": "mediapackage.packagingconfiguration.hlspackage.encryption",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.hlspackage.hlsmanifests": {
        "Required": "Yes",
        "Type": "List of [HlsManifest",
        "UniqueKey": "mediapackage.packagingconfiguration.hlspackage.hlsmanifests",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.hlspackage.segmentdurationseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.packagingconfiguration.hlspackage.segmentdurationseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.hlspackage.useaudiorenditiongroup": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "mediapackage.packagingconfiguration.hlspackage.useaudiorenditiongroup",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.mssencryption.spekekeyprovider": {
        "Required": "Yes",
        "Type": "",
        "UniqueKey": "mediapackage.packagingconfiguration.mssencryption.spekekeyprovider",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.mssmanifest.manifestname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mediapackage.packagingconfiguration.mssmanifest.manifestname",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.mssmanifest.streamselection": {
        "Required": "No",
        "Type": "StreamSelection",
        "UniqueKey": "mediapackage.packagingconfiguration.mssmanifest.streamselection",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.msspackage.encryption": {
        "Required": "No",
        "Type": "MssEncryption",
        "UniqueKey": "mediapackage.packagingconfiguration.msspackage.encryption",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.msspackage.mssmanifests": {
        "Required": "Yes",
        "Type": "List of [MssManifest",
        "UniqueKey": "mediapackage.packagingconfiguration.msspackage.mssmanifests",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.msspackage.segmentdurationseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.packagingconfiguration.msspackage.segmentdurationseconds",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.spekekeyprovider.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediapackage.packagingconfiguration.spekekeyprovider.rolearn",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.spekekeyprovider.systemids": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "mediapackage.packagingconfiguration.spekekeyprovider.systemids",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.spekekeyprovider.url": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediapackage.packagingconfiguration.spekekeyprovider.url",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.streamselection.maxvideobitspersecond": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.packagingconfiguration.streamselection.maxvideobitspersecond",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.streamselection.minvideobitspersecond": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "mediapackage.packagingconfiguration.streamselection.minvideobitspersecond",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packagingconfiguration.streamselection.streamorder": {
        "Required": "No",
        "SampleValue": "TODO-StreamOrder",
        "UniqueKey": "mediapackage.packagingconfiguration.streamselection.streamorder",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packaginggroup.authorization.cdnidentifiersecret": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediapackage.packaginggroup.authorization.cdnidentifiersecret",
        "UpdateRequires": "Replacement"
    },
    "mediapackage.packaginggroup.authorization.secretsrolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediapackage.packaginggroup.authorization.secretsrolearn",
        "UpdateRequires": "Replacement"
    },
    "mediastore.container.corsrule.allowedheaders": {
        "Maximum": "100",
        "Required": "No",
        "UniqueKey": "mediastore.container.corsrule.allowedheaders",
        "UpdateRequires": "Replacement"
    },
    "mediastore.container.corsrule.allowedmethods": {
        "Maximum": "4",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "mediastore.container.corsrule.allowedmethods",
        "UpdateRequires": "Replacement"
    },
    "mediastore.container.corsrule.allowedorigins": {
        "Maximum": "100",
        "Required": "No",
        "UniqueKey": "mediastore.container.corsrule.allowedorigins",
        "UpdateRequires": "Replacement"
    },
    "mediastore.container.corsrule.exposeheaders": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "mediastore.container.corsrule.exposeheaders",
        "UpdateRequires": "Replacement"
    },
    "mediastore.container.corsrule.maxageseconds": {
        "Maximum": "2147483647",
        "Minimum": "0",
        "Pattern": "^[0,2147483647]}$",
        "Required": "No",
        "SampleValue": "0...2147483647",
        "Type": "Integer",
        "UniqueKey": "mediastore.container.corsrule.maxageseconds",
        "UpdateRequires": "Replacement"
    },
    "mediastore.container.metricpolicy.containerlevelmetrics": {
        "Allowed values": "DISABLED | ENABLED",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediastore.container.metricpolicy.containerlevelmetrics",
        "UpdateRequires": "Replacement"
    },
    "mediastore.container.metricpolicy.metricpolicyrules": {
        "Maximum": "300",
        "Required": "No",
        "Type": "List of [MetricPolicyRule",
        "UniqueKey": "mediastore.container.metricpolicy.metricpolicyrules",
        "UpdateRequires": "Replacement"
    },
    "mediastore.container.metricpolicyrule.objectgroup": {
        "Maximum": "900",
        "Minimum": "1",
        "Pattern": "/?(?:[A-Za-z0-9_=:\\.\\-\\~\\*]+/){0,10}(?:[A-Za-z0-9_=:\\.\\-\\~\\*]+)?/?",
        "Required": "Yes",
        "UniqueKey": "mediastore.container.metricpolicyrule.objectgroup",
        "UpdateRequires": "Replacement"
    },
    "mediastore.container.metricpolicyrule.objectgroupname": {
        "Maximum": "30",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9_]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediastore.container.metricpolicyrule.objectgroupname",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.brokerlogs.cloudwatchlogs": {
        "Required": "No",
        "Type": "CloudWatchLogs",
        "UniqueKey": "msk.cluster.brokerlogs.cloudwatchlogs",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.brokerlogs.firehose": {
        "Required": "No",
        "Type": "Firehose",
        "UniqueKey": "msk.cluster.brokerlogs.firehose",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.brokerlogs.s3": {
        "Required": "No",
        "Type": "S3",
        "UniqueKey": "msk.cluster.brokerlogs.s3",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.brokernodegroupinfo.brokerazdistribution": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "msk.cluster.brokernodegroupinfo.brokerazdistribution",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.brokernodegroupinfo.clientsubnets": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "msk.cluster.brokernodegroupinfo.clientsubnets",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.brokernodegroupinfo.instancetype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "msk.cluster.brokernodegroupinfo.instancetype",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.brokernodegroupinfo.securitygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "msk.cluster.brokernodegroupinfo.securitygroups",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.brokernodegroupinfo.storageinfo": {
        "Required": "No",
        "Type": "StorageInfo",
        "UniqueKey": "msk.cluster.brokernodegroupinfo.storageinfo",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.clientauthentication.sasl": {
        "Required": "No",
        "Type": "Sasl",
        "UniqueKey": "msk.cluster.clientauthentication.sasl",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.clientauthentication.tls": {
        "Required": "No",
        "Type": "Tls",
        "UniqueKey": "msk.cluster.clientauthentication.tls",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.cloudwatchlogs.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "msk.cluster.cloudwatchlogs.enabled",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.cloudwatchlogs.loggroup": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "msk.cluster.cloudwatchlogs.loggroup",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.configurationinfo.arn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "msk.cluster.configurationinfo.arn",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.configurationinfo.revision": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "msk.cluster.configurationinfo.revision",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.ebsstorageinfo.volumesize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "msk.cluster.ebsstorageinfo.volumesize",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.encryptionatrest.datavolumekmskeyid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "msk.cluster.encryptionatrest.datavolumekmskeyid",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.encryptioninfo.encryptionatrest": {
        "Required": "No",
        "Type": "EncryptionAtRest",
        "UniqueKey": "msk.cluster.encryptioninfo.encryptionatrest",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.encryptioninfo.encryptionintransit": {
        "Required": "No",
        "Type": "EncryptionInTransit",
        "UniqueKey": "msk.cluster.encryptioninfo.encryptionintransit",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.encryptionintransit.clientbroker": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "msk.cluster.encryptionintransit.clientbroker",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.encryptionintransit.incluster": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "msk.cluster.encryptionintransit.incluster",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.firehose.deliverystream": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "msk.cluster.firehose.deliverystream",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.firehose.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "msk.cluster.firehose.enabled",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.jmxexporter.enabledinbroker": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "msk.cluster.jmxexporter.enabledinbroker",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.logginginfo.brokerlogs": {
        "Required": "Yes",
        "Type": "BrokerLogs",
        "UniqueKey": "msk.cluster.logginginfo.brokerlogs",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.nodeexporter.enabledinbroker": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "msk.cluster.nodeexporter.enabledinbroker",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.openmonitoring.prometheus": {
        "Required": "Yes",
        "Type": "Prometheus",
        "UniqueKey": "msk.cluster.openmonitoring.prometheus",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.prometheus.jmxexporter": {
        "Required": "No",
        "Type": "JmxExporter",
        "UniqueKey": "msk.cluster.prometheus.jmxexporter",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.prometheus.nodeexporter": {
        "Required": "No",
        "Type": "NodeExporter",
        "UniqueKey": "msk.cluster.prometheus.nodeexporter",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.s3.bucket": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "msk.cluster.s3.bucket",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.s3.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "msk.cluster.s3.enabled",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.s3.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "msk.cluster.s3.prefix",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.sasl.scram": {
        "Required": "Yes",
        "Type": "Scram",
        "UniqueKey": "msk.cluster.sasl.scram",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.scram.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "msk.cluster.scram.enabled",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.storageinfo.ebsstorageinfo": {
        "Required": "No",
        "Type": "EBSStorageInfo",
        "UniqueKey": "msk.cluster.storageinfo.ebsstorageinfo",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.tls.certificateauthorityarnlist": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "msk.cluster.tls.certificateauthorityarnlist",
        "UpdateRequires": "Replacement"
    },
    "mwaa.environment.lastupdate.createdat": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mwaa.environment.lastupdate.createdat",
        "UpdateRequires": "Replacement"
    },
    "mwaa.environment.lastupdate.error": {
        "Required": "No",
        "Type": "UpdateError",
        "UniqueKey": "mwaa.environment.lastupdate.error",
        "UpdateRequires": "Replacement"
    },
    "mwaa.environment.lastupdate.status": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mwaa.environment.lastupdate.status",
        "UpdateRequires": "Replacement"
    },
    "mwaa.environment.loggingconfiguration.dagprocessinglogs": {
        "Required": "No",
        "Type": "ModuleLoggingConfiguration",
        "UniqueKey": "mwaa.environment.loggingconfiguration.dagprocessinglogs",
        "UpdateRequires": "Replacement"
    },
    "mwaa.environment.loggingconfiguration.schedulerlogs": {
        "Required": "No",
        "Type": "ModuleLoggingConfiguration",
        "UniqueKey": "mwaa.environment.loggingconfiguration.schedulerlogs",
        "UpdateRequires": "Replacement"
    },
    "mwaa.environment.loggingconfiguration.tasklogs": {
        "Required": "No",
        "Type": "ModuleLoggingConfiguration",
        "UniqueKey": "mwaa.environment.loggingconfiguration.tasklogs",
        "UpdateRequires": "Replacement"
    },
    "mwaa.environment.loggingconfiguration.webserverlogs": {
        "Required": "No",
        "Type": "ModuleLoggingConfiguration",
        "UniqueKey": "mwaa.environment.loggingconfiguration.webserverlogs",
        "UpdateRequires": "Replacement"
    },
    "mwaa.environment.loggingconfiguration.workerlogs": {
        "Required": "No",
        "Type": "ModuleLoggingConfiguration",
        "UniqueKey": "mwaa.environment.loggingconfiguration.workerlogs",
        "UpdateRequires": "Replacement"
    },
    "mwaa.environment.moduleloggingconfiguration.cloudwatchloggrouparn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mwaa.environment.moduleloggingconfiguration.cloudwatchloggrouparn",
        "UpdateRequires": "Replacement"
    },
    "mwaa.environment.moduleloggingconfiguration.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "mwaa.environment.moduleloggingconfiguration.enabled",
        "UpdateRequires": "Replacement"
    },
    "mwaa.environment.moduleloggingconfiguration.loglevel": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mwaa.environment.moduleloggingconfiguration.loglevel",
        "UpdateRequires": "Replacement"
    },
    "mwaa.environment.networkconfiguration.securitygroupids": {
        "Required": "No",
        "Type": "SecurityGroupList",
        "UniqueKey": "mwaa.environment.networkconfiguration.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "mwaa.environment.networkconfiguration.subnetids": {
        "Required": "No",
        "Type": "SubnetList",
        "UniqueKey": "mwaa.environment.networkconfiguration.subnetids",
        "UpdateRequires": "Replacement"
    },
    "mwaa.environment.securitygrouplist.securitygrouplist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "mwaa.environment.securitygrouplist.securitygrouplist",
        "UpdateRequires": "Replacement"
    },
    "mwaa.environment.subnetlist.subnetlist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "mwaa.environment.subnetlist.subnetlist",
        "UpdateRequires": "Replacement"
    },
    "mwaa.environment.updateerror.errorcode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mwaa.environment.updateerror.errorcode",
        "UpdateRequires": "Replacement"
    },
    "mwaa.environment.updateerror.errormessage": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "mwaa.environment.updateerror.errormessage",
        "UpdateRequires": "Replacement"
    },
    "neptune.dbcluster.dbclusterrole.featurename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "neptune.dbcluster.dbclusterrole.featurename",
        "UpdateRequires": "Replacement"
    },
    "neptune.dbcluster.dbclusterrole.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "neptune.dbcluster.dbclusterrole.rolearn",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewall.subnetmapping.subnetid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "networkfirewall.firewall.subnetmapping.subnetid",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewall.tags.tags": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.firewall.tags.tags",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewallpolicy.actiondefinition.publishmetricaction": {
        "Required": "No",
        "Type": "PublishMetricAction",
        "UniqueKey": "networkfirewall.firewallpolicy.actiondefinition.publishmetricaction",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewallpolicy.customaction.actiondefinition": {
        "Required": "Yes",
        "Type": "ActionDefinition",
        "UniqueKey": "networkfirewall.firewallpolicy.customaction.actiondefinition",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewallpolicy.customaction.actionname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "networkfirewall.firewallpolicy.customaction.actionname",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewallpolicy.customactions.customactions": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.firewallpolicy.customactions.customactions",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewallpolicy.dimension.value": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9-_ ]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "networkfirewall.firewallpolicy.dimension.value",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewallpolicy.dimensions.dimensions": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.firewallpolicy.dimensions.dimensions",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewallpolicy.firewallpolicy.statefulrulegroupreferences": {
        "Required": "No",
        "Type": "List of [StatefulRuleGroupReference",
        "UniqueKey": "networkfirewall.firewallpolicy.firewallpolicy.statefulrulegroupreferences",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewallpolicy.firewallpolicy.statelesscustomactions": {
        "Required": "No",
        "Type": "List of [CustomAction",
        "UniqueKey": "networkfirewall.firewallpolicy.firewallpolicy.statelesscustomactions",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewallpolicy.firewallpolicy.statelessdefaultactions": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "networkfirewall.firewallpolicy.firewallpolicy.statelessdefaultactions",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewallpolicy.firewallpolicy.statelessfragmentdefaultactions": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "networkfirewall.firewallpolicy.firewallpolicy.statelessfragmentdefaultactions",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewallpolicy.firewallpolicy.statelessrulegroupreferences": {
        "Required": "No",
        "Type": "List of [StatelessRuleGroupReference",
        "UniqueKey": "networkfirewall.firewallpolicy.firewallpolicy.statelessrulegroupreferences",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewallpolicy.publishmetricaction.dimensions": {
        "Maximum": "1",
        "Required": "Yes",
        "Type": "List of [Dimension",
        "UniqueKey": "networkfirewall.firewallpolicy.publishmetricaction.dimensions",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewallpolicy.statefulrulegroupreference.resourcearn": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^arn:aws.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "networkfirewall.firewallpolicy.statefulrulegroupreference.resourcearn",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewallpolicy.statefulrulegroupreferences.statefulrulegroupreferences": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.firewallpolicy.statefulrulegroupreferences.statefulrulegroupreferences",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewallpolicy.statelessactions.statelessactions": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.firewallpolicy.statelessactions.statelessactions",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewallpolicy.statelessrulegroupreference.priority": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "Yes",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "networkfirewall.firewallpolicy.statelessrulegroupreference.priority",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewallpolicy.statelessrulegroupreference.resourcearn": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^arn:aws.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "networkfirewall.firewallpolicy.statelessrulegroupreference.resourcearn",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewallpolicy.statelessrulegroupreferences.statelessrulegroupreferences": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.firewallpolicy.statelessrulegroupreferences.statelessrulegroupreferences",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.firewallpolicy.tags.tags": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.firewallpolicy.tags.tags",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.loggingconfiguration.logdestinationconfig.logdestination": {
        "Required": "Yes",
        "Type": "Map of String",
        "UniqueKey": "networkfirewall.loggingconfiguration.logdestinationconfig.logdestination",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.loggingconfiguration.logdestinationconfig.logdestinationtype": {
        "Allowed values": "CloudWatchLogs | KinesisDataFirehose | S3",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "networkfirewall.loggingconfiguration.logdestinationconfig.logdestinationtype",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.loggingconfiguration.logdestinationconfig.logtype": {
        "Allowed values": "ALERT | FLOW",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "networkfirewall.loggingconfiguration.logdestinationconfig.logtype",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.loggingconfiguration.logdestinationconfigs.logdestinationconfigs": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.loggingconfiguration.logdestinationconfigs.logdestinationconfigs",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.loggingconfiguration.loggingconfiguration.logdestinationconfigs": {
        "Required": "Yes",
        "Type": "List of [LogDestinationConfig",
        "UniqueKey": "networkfirewall.loggingconfiguration.loggingconfiguration.logdestinationconfigs",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.actiondefinition.publishmetricaction": {
        "Required": "No",
        "Type": "PublishMetricAction",
        "UniqueKey": "networkfirewall.rulegroup.actiondefinition.publishmetricaction",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.address.addressdefinition": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^([a-fA-F\\d:\\.]+/\\d{1,3})$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "networkfirewall.rulegroup.address.addressdefinition",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.addresses.addresses": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.rulegroup.addresses.addresses",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.customaction.actiondefinition": {
        "Required": "Yes",
        "Type": "ActionDefinition",
        "UniqueKey": "networkfirewall.rulegroup.customaction.actiondefinition",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.customaction.actionname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "networkfirewall.rulegroup.customaction.actionname",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.customactions.customactions": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.rulegroup.customactions.customactions",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.dimension.value": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9-_ ]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "networkfirewall.rulegroup.dimension.value",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.dimensions.dimensions": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.rulegroup.dimensions.dimensions",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.flags.flags": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.rulegroup.flags.flags",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.header.destination": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "networkfirewall.rulegroup.header.destination",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.header.destinationport": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "networkfirewall.rulegroup.header.destinationport",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.header.direction": {
        "Allowed values": "ANY | FORWARD",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "networkfirewall.rulegroup.header.direction",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.header.protocol": {
        "Allowed values": "DCERPC | DHCP | DNS | FTP | HTTP | ICMP | IKEV2 | IMAP | IP | KRB5 | MSN | NTP | SMB | SMTP | SSH | TCP | TFTP | TLS | UDP",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "networkfirewall.rulegroup.header.protocol",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.header.source": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "networkfirewall.rulegroup.header.source",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.header.sourceport": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "networkfirewall.rulegroup.header.sourceport",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.ipset.definition": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "networkfirewall.rulegroup.ipset.definition",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.matchattributes.destinationports": {
        "Required": "No",
        "Type": "List of [PortRange",
        "UniqueKey": "networkfirewall.rulegroup.matchattributes.destinationports",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.matchattributes.destinations": {
        "Required": "No",
        "Type": "List of [Address",
        "UniqueKey": "networkfirewall.rulegroup.matchattributes.destinations",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.matchattributes.protocols": {
        "Required": "No",
        "Type": "List of Integer",
        "UniqueKey": "networkfirewall.rulegroup.matchattributes.protocols",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.matchattributes.sourceports": {
        "Required": "No",
        "Type": "List of [PortRange",
        "UniqueKey": "networkfirewall.rulegroup.matchattributes.sourceports",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.matchattributes.sources": {
        "Required": "No",
        "Type": "List of [Address",
        "UniqueKey": "networkfirewall.rulegroup.matchattributes.sources",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.matchattributes.tcpflags": {
        "Required": "No",
        "Type": "List of [TCPFlagField",
        "UniqueKey": "networkfirewall.rulegroup.matchattributes.tcpflags",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.portrange.fromport": {
        "Maximum": "65535",
        "Minimum": "0",
        "Pattern": "^[0,65535]}$",
        "Required": "Yes",
        "SampleValue": "0...65535",
        "Type": "Integer",
        "UniqueKey": "networkfirewall.rulegroup.portrange.fromport",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.portrange.toport": {
        "Maximum": "65535",
        "Minimum": "0",
        "Pattern": "^[0,65535]}$",
        "Required": "Yes",
        "SampleValue": "0...65535",
        "Type": "Integer",
        "UniqueKey": "networkfirewall.rulegroup.portrange.toport",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.portranges.portranges": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.rulegroup.portranges.portranges",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.portset.definition": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "networkfirewall.rulegroup.portset.definition",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.protocolnumbers.protocolnumbers": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.rulegroup.protocolnumbers.protocolnumbers",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.publishmetricaction.dimensions": {
        "Maximum": "1",
        "Required": "Yes",
        "Type": "List of [Dimension",
        "UniqueKey": "networkfirewall.rulegroup.publishmetricaction.dimensions",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.ruledefinition.actions": {
        "Required": "Yes",
        "SampleValue": "TODO-Actions",
        "UniqueKey": "networkfirewall.rulegroup.ruledefinition.actions",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.ruledefinition.matchattributes": {
        "Required": "Yes",
        "Type": "MatchAttributes",
        "UniqueKey": "networkfirewall.rulegroup.ruledefinition.matchattributes",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.rulegroup.rulessource": {
        "Required": "Yes",
        "Type": "RulesSource",
        "UniqueKey": "networkfirewall.rulegroup.rulegroup.rulessource",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.rulegroup.rulevariables": {
        "Required": "No",
        "Type": "RuleVariables",
        "UniqueKey": "networkfirewall.rulegroup.rulegroup.rulevariables",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.ruleoption.keyword": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "networkfirewall.rulegroup.ruleoption.keyword",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.ruleoption.settings": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "networkfirewall.rulegroup.ruleoption.settings",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.ruleoptions.ruleoptions": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.rulegroup.ruleoptions.ruleoptions",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.rulessource.rulessourcelist": {
        "Required": "No",
        "Type": "RulesSourceList",
        "UniqueKey": "networkfirewall.rulegroup.rulessource.rulessourcelist",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.rulessource.rulesstring": {
        "Maximum": "1000000",
        "Minimum": "0",
        "Pattern": "^.{0,1000000}$",
        "Required": "No",
        "SampleValue": "TODO-networkfirewall.rulegroup.rulessource.RulesString",
        "Type": "String",
        "UniqueKey": "networkfirewall.rulegroup.rulessource.rulesstring",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.rulessource.statefulrules": {
        "Required": "No",
        "Type": "List of [StatefulRule",
        "UniqueKey": "networkfirewall.rulegroup.rulessource.statefulrules",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.rulessource.statelessrulesandcustomactions": {
        "Required": "No",
        "Type": "StatelessRulesAndCustomActions",
        "UniqueKey": "networkfirewall.rulegroup.rulessource.statelessrulesandcustomactions",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.rulessourcelist.generatedrulestype": {
        "Allowed values": "ALLOWLIST | DENYLIST",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "networkfirewall.rulegroup.rulessourcelist.generatedrulestype",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.rulessourcelist.targets": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "networkfirewall.rulegroup.rulessourcelist.targets",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.rulessourcelist.targettypes": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "networkfirewall.rulegroup.rulessourcelist.targettypes",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.rulevariables.ipsets": {
        "Required": "No",
        "Type": "Map of [IPSet",
        "UniqueKey": "networkfirewall.rulegroup.rulevariables.ipsets",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.rulevariables.portsets": {
        "Required": "No",
        "Type": "Map of [PortSet",
        "UniqueKey": "networkfirewall.rulegroup.rulevariables.portsets",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.statefulrule.action": {
        "Required": "Yes",
        "SampleValue": "TODO-Action",
        "UniqueKey": "networkfirewall.rulegroup.statefulrule.action",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.statefulrule.header": {
        "Required": "Yes",
        "Type": "Header",
        "UniqueKey": "networkfirewall.rulegroup.statefulrule.header",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.statefulrule.ruleoptions": {
        "Required": "Yes",
        "Type": "List of [RuleOption",
        "UniqueKey": "networkfirewall.rulegroup.statefulrule.ruleoptions",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.statefulrules.statefulrules": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.rulegroup.statefulrules.statefulrules",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.statelessrule.priority": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "Yes",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "networkfirewall.rulegroup.statelessrule.priority",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.statelessrule.ruledefinition": {
        "Required": "Yes",
        "Type": "RuleDefinition",
        "UniqueKey": "networkfirewall.rulegroup.statelessrule.ruledefinition",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.statelessrules.statelessrules": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.rulegroup.statelessrules.statelessrules",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.statelessrulesandcustomactions.customactions": {
        "Required": "No",
        "Type": "List of [CustomAction",
        "UniqueKey": "networkfirewall.rulegroup.statelessrulesandcustomactions.customactions",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.statelessrulesandcustomactions.statelessrules": {
        "Required": "Yes",
        "Type": "List of [StatelessRule",
        "UniqueKey": "networkfirewall.rulegroup.statelessrulesandcustomactions.statelessrules",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.tags.tags": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.rulegroup.tags.tags",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.targettypes.targettypes": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.rulegroup.targettypes.targettypes",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.tcpflagfield.flags": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "networkfirewall.rulegroup.tcpflagfield.flags",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.tcpflagfield.masks": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "networkfirewall.rulegroup.tcpflagfield.masks",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.tcpflags.tcpflags": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.rulegroup.tcpflags.tcpflags",
        "UpdateRequires": "Replacement"
    },
    "networkfirewall.rulegroup.variabledefinitionlist.variabledefinitionlist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "networkfirewall.rulegroup.variabledefinitionlist.variabledefinitionlist",
        "UpdateRequires": "Replacement"
    },
    "networkmanager.device.location.address": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "networkmanager.device.location.address",
        "UpdateRequires": "Replacement"
    },
    "networkmanager.device.location.latitude": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "networkmanager.device.location.latitude",
        "UpdateRequires": "Replacement"
    },
    "networkmanager.device.location.longitude": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "networkmanager.device.location.longitude",
        "UpdateRequires": "Replacement"
    },
    "networkmanager.link.bandwidth.downloadspeed": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "networkmanager.link.bandwidth.downloadspeed",
        "UpdateRequires": "Replacement"
    },
    "networkmanager.link.bandwidth.uploadspeed": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "networkmanager.link.bandwidth.uploadspeed",
        "UpdateRequires": "Replacement"
    },
    "networkmanager.site.location.address": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "networkmanager.site.location.address",
        "UpdateRequires": "Replacement"
    },
    "networkmanager.site.location.latitude": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "networkmanager.site.location.latitude",
        "UpdateRequires": "Replacement"
    },
    "networkmanager.site.location.longitude": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "networkmanager.site.location.longitude",
        "UpdateRequires": "Replacement"
    },
    "opsworks.app.datasource.arn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.app.datasource.arn",
        "UpdateRequires": "Replacement"
    },
    "opsworks.app.datasource.databasename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.app.datasource.databasename",
        "UpdateRequires": "Replacement"
    },
    "opsworks.app.datasource.type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.app.datasource.type",
        "UpdateRequires": "Replacement"
    },
    "opsworks.app.environment.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "opsworks.app.environment.key",
        "UpdateRequires": "Replacement"
    },
    "opsworks.app.environment.secure": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "opsworks.app.environment.secure",
        "UpdateRequires": "Replacement"
    },
    "opsworks.app.environment.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "opsworks.app.environment.value",
        "UpdateRequires": "Replacement"
    },
    "opsworks.app.sslconfiguration.certificate": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.app.sslconfiguration.certificate",
        "UpdateRequires": "Replacement"
    },
    "opsworks.app.sslconfiguration.chain": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.app.sslconfiguration.chain",
        "UpdateRequires": "Replacement"
    },
    "opsworks.app.sslconfiguration.privatekey": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.app.sslconfiguration.privatekey",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.blockdevicemapping.devicename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.instance.blockdevicemapping.devicename",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.blockdevicemapping.ebs": {
        "Required": "Conditional",
        "Type": "EbsBlockDevice",
        "UniqueKey": "opsworks.instance.blockdevicemapping.ebs",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.blockdevicemapping.nodevice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.instance.blockdevicemapping.nodevice",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.blockdevicemapping.virtualname": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "opsworks.instance.blockdevicemapping.virtualname",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.ebsblockdevice.deleteontermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "opsworks.instance.ebsblockdevice.deleteontermination",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.ebsblockdevice.iops": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.instance.ebsblockdevice.iops",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.ebsblockdevice.snapshotid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.instance.ebsblockdevice.snapshotid",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.ebsblockdevice.volumesize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.instance.ebsblockdevice.volumesize",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.ebsblockdevice.volumetype": {
        "Allowed values": "gp2 | io1 | standard",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.instance.ebsblockdevice.volumetype",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.timebasedautoscaling.friday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.friday",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.timebasedautoscaling.monday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.monday",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.timebasedautoscaling.saturday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.saturday",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.timebasedautoscaling.sunday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.sunday",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.timebasedautoscaling.thursday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.thursday",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.timebasedautoscaling.tuesday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.tuesday",
        "UpdateRequires": "Replacement"
    },
    "opsworks.instance.timebasedautoscaling.wednesday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.wednesday",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration": {
        "Required": "No",
        "Type": "ShutdownEventConfiguration",
        "UniqueKey": "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration.delayuntilelbconnectionsdrained": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration.delayuntilelbconnectionsdrained",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration.executiontimeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration.executiontimeout",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.cputhreshold": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.cputhreshold",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.ignoremetricstime": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[1,100]}$",
        "Required": "No",
        "SampleValue": "1...100",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.ignoremetricstime",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.instancecount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.instancecount",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.loadthreshold": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.loadthreshold",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.memorythreshold": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.memorythreshold",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.thresholdswaittime": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[1,100]}$",
        "Required": "No",
        "SampleValue": "1...100",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.thresholdswaittime",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.loadbasedautoscaling.downscaling": {
        "Required": "No",
        "Type": "AutoScalingThresholds",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.downscaling",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.loadbasedautoscaling.enable": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.enable",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.loadbasedautoscaling.upscaling": {
        "Required": "No",
        "Type": "AutoScalingThresholds",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.upscaling",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.recipes.configure": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "opsworks.layer.recipes.configure",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.recipes.deploy": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "opsworks.layer.recipes.deploy",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.recipes.setup": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "opsworks.layer.recipes.setup",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.recipes.shutdown": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "opsworks.layer.recipes.shutdown",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.recipes.undeploy": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "opsworks.layer.recipes.undeploy",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.volumeconfiguration.encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "opsworks.layer.volumeconfiguration.encrypted",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.volumeconfiguration.iops": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.volumeconfiguration.iops",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.volumeconfiguration.mountpoint": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.layer.volumeconfiguration.mountpoint",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.volumeconfiguration.numberofdisks": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.volumeconfiguration.numberofdisks",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.volumeconfiguration.raidlevel": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.volumeconfiguration.raidlevel",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.volumeconfiguration.size": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.volumeconfiguration.size",
        "UpdateRequires": "Replacement"
    },
    "opsworks.layer.volumeconfiguration.volumetype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.layer.volumeconfiguration.volumetype",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.chefconfiguration.berkshelfversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.chefconfiguration.berkshelfversion",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.chefconfiguration.manageberkshelf": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "opsworks.stack.chefconfiguration.manageberkshelf",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.elasticip.ip": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "opsworks.stack.elasticip.ip",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.elasticip.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.elasticip.name",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.rdsdbinstance.dbpassword": {
        "Required": "Yes",
        "SampleValue": "TODO-DbPassword",
        "UniqueKey": "opsworks.stack.rdsdbinstance.dbpassword",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.rdsdbinstance.dbuser": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "opsworks.stack.rdsdbinstance.dbuser",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.rdsdbinstance.rdsdbinstancearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "opsworks.stack.rdsdbinstance.rdsdbinstancearn",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.1.password": {
        "Required": "No",
        "SampleValue": "TODO-Password",
        "UniqueKey": "opsworks.stack.source.1.password",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.1.revision": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.1.revision",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.1.sshkey": {
        "Required": "No",
        "SampleValue": "TODO-SshKey",
        "UniqueKey": "opsworks.stack.source.1.sshkey",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.1.type": {
        "Allowed values": "archive | git | s3 | svn",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.1.type",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.1.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.1.url",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.1.username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.1.username",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.password": {
        "Required": "No",
        "SampleValue": "TODO-Password",
        "UniqueKey": "opsworks.stack.source.password",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.revision": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.revision",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.sshkey": {
        "Required": "No",
        "SampleValue": "TODO-SshKey",
        "UniqueKey": "opsworks.stack.source.sshkey",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.type": {
        "Allowed values": "archive | git | s3 | svn",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.type",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.url",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.source.username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.username",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.stackconfigmanager.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.stackconfigmanager.name",
        "UpdateRequires": "Replacement"
    },
    "opsworks.stack.stackconfigmanager.version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.stackconfigmanager.version",
        "UpdateRequires": "Replacement"
    },
    "opsworkscm.server.engineattribute.name": {
        "Maximum": "10000",
        "Pattern": "(?s).*",
        "Required": "No",
        "UniqueKey": "opsworkscm.server.engineattribute.name",
        "UpdateRequires": "Replacement"
    },
    "opsworkscm.server.engineattribute.value": {
        "Maximum": "10000",
        "Pattern": "(?s).*",
        "Required": "No",
        "UniqueKey": "opsworkscm.server.engineattribute.value",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.applicationsettings.campaignhook.lambdafunctionname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.applicationsettings.campaignhook.lambdafunctionname",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.applicationsettings.campaignhook.mode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.applicationsettings.campaignhook.mode",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.applicationsettings.campaignhook.weburl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.applicationsettings.campaignhook.weburl",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.applicationsettings.limits.daily": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.applicationsettings.limits.daily",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.applicationsettings.limits.maximumduration": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.applicationsettings.limits.maximumduration",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.applicationsettings.limits.messagespersecond": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.applicationsettings.limits.messagespersecond",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.applicationsettings.limits.total": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.applicationsettings.limits.total",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.applicationsettings.quiettime.end": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.applicationsettings.quiettime.end",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.applicationsettings.quiettime.start": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.applicationsettings.quiettime.start",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.attributedimension.attributetype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.attributedimension.attributetype",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.attributedimension.values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "pinpoint.campaign.attributedimension.values",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaignemailmessage.body": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignemailmessage.body",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaignemailmessage.fromaddress": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignemailmessage.fromaddress",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaignemailmessage.htmlbody": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignemailmessage.htmlbody",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaignemailmessage.title": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignemailmessage.title",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaigneventfilter.dimensions": {
        "Required": "No",
        "Type": "EventDimensions",
        "UniqueKey": "pinpoint.campaign.campaigneventfilter.dimensions",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaigneventfilter.filtertype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaigneventfilter.filtertype",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaignhook.lambdafunctionname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignhook.lambdafunctionname",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaignhook.mode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignhook.mode",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaignhook.weburl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignhook.weburl",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaignsmsmessage.body": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignsmsmessage.body",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaignsmsmessage.messagetype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignsmsmessage.messagetype",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.campaignsmsmessage.senderid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignsmsmessage.senderid",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.eventdimensions.attributes": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "pinpoint.campaign.eventdimensions.attributes",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.eventdimensions.eventtype": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.campaign.eventdimensions.eventtype",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.eventdimensions.metrics": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "pinpoint.campaign.eventdimensions.metrics",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.limits.daily": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.campaign.limits.daily",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.limits.maximumduration": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.campaign.limits.maximumduration",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.limits.messagespersecond": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.campaign.limits.messagespersecond",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.limits.total": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.campaign.limits.total",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.action": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.action",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.body": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.body",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.imageiconurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.imageiconurl",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.imagesmalliconurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.imagesmalliconurl",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.imageurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.imageurl",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.jsonbody": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.jsonbody",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.mediaurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.mediaurl",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.rawcontent": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.rawcontent",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.silentpush": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "pinpoint.campaign.message.silentpush",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.timetolive": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.campaign.message.timetolive",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.title": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.title",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.message.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.url",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.messageconfiguration.admmessage": {
        "Required": "No",
        "Type": "Message",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.admmessage",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.messageconfiguration.apnsmessage": {
        "Required": "No",
        "Type": "Message",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.apnsmessage",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.messageconfiguration.baidumessage": {
        "Required": "No",
        "Type": "Message",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.baidumessage",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.messageconfiguration.defaultmessage": {
        "Required": "No",
        "Type": "Message",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.defaultmessage",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.messageconfiguration.emailmessage": {
        "Required": "No",
        "Type": "CampaignEmailMessage",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.emailmessage",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.messageconfiguration.gcmmessage": {
        "Required": "No",
        "Type": "Message",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.gcmmessage",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.messageconfiguration.smsmessage": {
        "Required": "No",
        "Type": "CampaignSmsMessage",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.smsmessage",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.metricdimension.comparisonoperator": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.metricdimension.comparisonoperator",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.metricdimension.value": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "pinpoint.campaign.metricdimension.value",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.schedule.endtime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.schedule.endtime",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.schedule.eventfilter": {
        "Required": "No",
        "Type": "CampaignEventFilter",
        "UniqueKey": "pinpoint.campaign.schedule.eventfilter",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.schedule.frequency": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.schedule.frequency",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.schedule.islocaltime": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "pinpoint.campaign.schedule.islocaltime",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.schedule.quiettime": {
        "Required": "No",
        "Type": "QuietTime",
        "UniqueKey": "pinpoint.campaign.schedule.quiettime",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.schedule.quiettime.end": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.schedule.quiettime.end",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.schedule.quiettime.start": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.schedule.quiettime.start",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.schedule.starttime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.schedule.starttime",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.schedule.timezone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.schedule.timezone",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.setdimension.dimensiontype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.setdimension.dimensiontype",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.setdimension.values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "pinpoint.campaign.setdimension.values",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.writetreatmentresource.messageconfiguration": {
        "Required": "No",
        "Type": "MessageConfiguration",
        "UniqueKey": "pinpoint.campaign.writetreatmentresource.messageconfiguration",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.writetreatmentresource.schedule": {
        "Required": "No",
        "Type": "Schedule",
        "UniqueKey": "pinpoint.campaign.writetreatmentresource.schedule",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.writetreatmentresource.sizepercent": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.campaign.writetreatmentresource.sizepercent",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.writetreatmentresource.treatmentdescription": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.writetreatmentresource.treatmentdescription",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.campaign.writetreatmentresource.treatmentname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.writetreatmentresource.treatmentname",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.action": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.action",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.body": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.body",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.imageiconurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.imageiconurl",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.imageurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.imageurl",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.smallimageiconurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.smallimageiconurl",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.sound": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.sound",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.title": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.title",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.url",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.apnspushnotificationtemplate.action": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.apnspushnotificationtemplate.action",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.apnspushnotificationtemplate.body": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.apnspushnotificationtemplate.body",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.apnspushnotificationtemplate.mediaurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.apnspushnotificationtemplate.mediaurl",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.apnspushnotificationtemplate.sound": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.apnspushnotificationtemplate.sound",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.apnspushnotificationtemplate.title": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.apnspushnotificationtemplate.title",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.apnspushnotificationtemplate.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.apnspushnotificationtemplate.url",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.defaultpushnotificationtemplate.action": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.defaultpushnotificationtemplate.action",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.defaultpushnotificationtemplate.body": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.defaultpushnotificationtemplate.body",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.defaultpushnotificationtemplate.sound": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.defaultpushnotificationtemplate.sound",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.defaultpushnotificationtemplate.title": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.defaultpushnotificationtemplate.title",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.pushtemplate.defaultpushnotificationtemplate.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.defaultpushnotificationtemplate.url",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.attributedimension.attributetype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.attributedimension.attributetype",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.attributedimension.values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "pinpoint.segment.attributedimension.values",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.attributes": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "pinpoint.segment.segmentdimensions.attributes",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.behavior": {
        "Required": "No",
        "Type": "Behavior",
        "UniqueKey": "pinpoint.segment.segmentdimensions.behavior",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.behavior.recency": {
        "Required": "No",
        "Type": "Recency",
        "UniqueKey": "pinpoint.segment.segmentdimensions.behavior.recency",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.behavior.recency.duration": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.segmentdimensions.behavior.recency.duration",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.behavior.recency.recencytype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.segmentdimensions.behavior.recency.recencytype",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.demographic": {
        "Required": "No",
        "Type": "Demographic",
        "UniqueKey": "pinpoint.segment.segmentdimensions.demographic",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.demographic.appversion": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.demographic.appversion",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.demographic.channel": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.demographic.channel",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.demographic.devicetype": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.demographic.devicetype",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.demographic.make": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.demographic.make",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.demographic.model": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.demographic.model",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.demographic.platform": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.demographic.platform",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.location": {
        "Required": "No",
        "Type": "Location",
        "UniqueKey": "pinpoint.segment.segmentdimensions.location",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.location.country": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.location.country",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.location.gpspoint": {
        "Required": "No",
        "Type": "GPSPoint",
        "UniqueKey": "pinpoint.segment.segmentdimensions.location.gpspoint",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates": {
        "Required": "Yes",
        "Type": "Coordinates",
        "UniqueKey": "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates.latitude": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates.latitude",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates.longitude": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates.longitude",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.location.gpspoint.rangeinkilometers": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "pinpoint.segment.segmentdimensions.location.gpspoint.rangeinkilometers",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.metrics": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "pinpoint.segment.segmentdimensions.metrics",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentdimensions.userattributes": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "pinpoint.segment.segmentdimensions.userattributes",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentgroups.groups": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "pinpoint.segment.segmentgroups.groups",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentgroups.groups.dimensions": {
        "Required": "No",
        "Type": "List of [SegmentDimensions",
        "UniqueKey": "pinpoint.segment.segmentgroups.groups.dimensions",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentgroups.groups.sourcesegments": {
        "Required": "No",
        "SampleValue": "TODO-SourceSegments",
        "UniqueKey": "pinpoint.segment.segmentgroups.groups.sourcesegments",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentgroups.groups.sourcesegments.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.segmentgroups.groups.sourcesegments.id",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentgroups.groups.sourcesegments.version": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.segment.segmentgroups.groups.sourcesegments.version",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentgroups.groups.sourcetype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.segmentgroups.groups.sourcetype",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentgroups.groups.type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.segmentgroups.groups.type",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.segmentgroups.include": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.segmentgroups.include",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.setdimension.dimensiontype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.setdimension.dimensiontype",
        "UpdateRequires": "Replacement"
    },
    "pinpoint.segment.setdimension.values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "pinpoint.segment.setdimension.values",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationset.deliveryoptions.sendingpoolname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationset.deliveryoptions.sendingpoolname",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationset.reputationoptions.reputationmetricsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "pinpointemail.configurationset.reputationoptions.reputationmetricsenabled",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationset.sendingoptions.sendingenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "pinpointemail.configurationset.sendingoptions.sendingenabled",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationset.tags.key": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationset.tags.key",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationset.tags.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationset.tags.value",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationset.trackingoptions.customredirectdomain": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationset.trackingoptions.customredirectdomain",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.cloudwatchdestination.dimensionconfigurations": {
        "Required": "No",
        "Type": "List of [DimensionConfiguration",
        "UniqueKey": "pinpointemail.configurationseteventdestination.cloudwatchdestination.dimensionconfigurations",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.dimensionconfiguration.defaultdimensionvalue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.dimensionconfiguration.defaultdimensionvalue",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.dimensionconfiguration.dimensionname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.dimensionconfiguration.dimensionname",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.dimensionconfiguration.dimensionvaluesource": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.dimensionconfiguration.dimensionvaluesource",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.eventdestination.cloudwatchdestination": {
        "Required": "No",
        "Type": "CloudWatchDestination",
        "UniqueKey": "pinpointemail.configurationseteventdestination.eventdestination.cloudwatchdestination",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.eventdestination.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "pinpointemail.configurationseteventdestination.eventdestination.enabled",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.eventdestination.kinesisfirehosedestination": {
        "Required": "No",
        "Type": "KinesisFirehoseDestination",
        "UniqueKey": "pinpointemail.configurationseteventdestination.eventdestination.kinesisfirehosedestination",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.eventdestination.matchingeventtypes": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.eventdestination.matchingeventtypes",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.eventdestination.pinpointdestination": {
        "Required": "No",
        "Type": "PinpointDestination",
        "UniqueKey": "pinpointemail.configurationseteventdestination.eventdestination.pinpointdestination",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.eventdestination.snsdestination": {
        "Required": "No",
        "Type": "SnsDestination",
        "UniqueKey": "pinpointemail.configurationseteventdestination.eventdestination.snsdestination",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.kinesisfirehosedestination.deliverystreamarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.kinesisfirehosedestination.deliverystreamarn",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.kinesisfirehosedestination.iamrolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.kinesisfirehosedestination.iamrolearn",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.pinpointdestination.applicationarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.pinpointdestination.applicationarn",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.configurationseteventdestination.snsdestination.topicarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.snsdestination.topicarn",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.dedicatedippool.tags.key": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "pinpointemail.dedicatedippool.tags.key",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.dedicatedippool.tags.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.dedicatedippool.tags.value",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.identity.mailfromattributes.behavioronmxfailure": {
        "Required": "No",
        "SampleValue": "TODO-BehaviorOnMxFailure",
        "UniqueKey": "pinpointemail.identity.mailfromattributes.behavioronmxfailure",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.identity.mailfromattributes.mailfromdomain": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.identity.mailfromattributes.mailfromdomain",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.identity.tags.key": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "pinpointemail.identity.tags.key",
        "UpdateRequires": "Replacement"
    },
    "pinpointemail.identity.tags.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.identity.tags.value",
        "UpdateRequires": "Replacement"
    },
    "qldb.stream.kinesisconfiguration.aggregationenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "qldb.stream.kinesisconfiguration.aggregationenabled",
        "UpdateRequires": "Replacement"
    },
    "qldb.stream.kinesisconfiguration.streamarn": {
        "Maximum": "1600",
        "Minimum": "20",
        "Pattern": "^.{20,1600}$",
        "Required": "No",
        "SampleValue": "TODO-qldb.stream.kinesisconfiguration.StreamArn",
        "Type": "String",
        "UniqueKey": "qldb.stream.kinesisconfiguration.streamarn",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.analysiserror.message": {
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.analysis.analysiserror.message",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.analysiserror.type": {
        "Allowed values": "ACCESS_DENIED | COLUMN_GEOGRAPHIC_ROLE_MISMATCH | COLUMN_REPLACEMENT_MISSING | COLUMN_TYPE_MISMATCH | DATA_SET_NOT_FOUND | INTERNAL_FAILURE | PARAMETER_NOT_FOUND | PARAMETER_TYPE_INVALID | PARAMETER_VALUE_INCOMPATIBLE | SOURCE_NOT_FOUND",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.analysis.analysiserror.type",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.analysissourceentity.sourcetemplate": {
        "Required": "No",
        "Type": "AnalysisSourceTemplate",
        "UniqueKey": "quicksight.analysis.analysissourceentity.sourcetemplate",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.analysissourcetemplate.arn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.analysis.analysissourcetemplate.arn",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.analysissourcetemplate.datasetreferences": {
        "Required": "Yes",
        "Type": "List of [DataSetReference",
        "UniqueKey": "quicksight.analysis.analysissourcetemplate.datasetreferences",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.datasetreference.datasetarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.analysis.datasetreference.datasetarn",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.datasetreference.datasetplaceholder": {
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.analysis.datasetreference.datasetplaceholder",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.datetimeparameter.name": {
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.analysis.datetimeparameter.name",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.datetimeparameter.values": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "quicksight.analysis.datetimeparameter.values",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.decimalparameter.name": {
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.analysis.decimalparameter.name",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.decimalparameter.values": {
        "Required": "Yes",
        "Type": "List of Double",
        "UniqueKey": "quicksight.analysis.decimalparameter.values",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.integerparameter.name": {
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.analysis.integerparameter.name",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.integerparameter.values": {
        "Required": "Yes",
        "Type": "List of Double",
        "UniqueKey": "quicksight.analysis.integerparameter.values",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.parameters.datetimeparameters": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of [DateTimeParameter",
        "UniqueKey": "quicksight.analysis.parameters.datetimeparameters",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.parameters.decimalparameters": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of [DecimalParameter",
        "UniqueKey": "quicksight.analysis.parameters.decimalparameters",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.parameters.integerparameters": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of [IntegerParameter",
        "UniqueKey": "quicksight.analysis.parameters.integerparameters",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.parameters.stringparameters": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of [StringParameter",
        "UniqueKey": "quicksight.analysis.parameters.stringparameters",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.resourcepermission.actions": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "quicksight.analysis.resourcepermission.actions",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.resourcepermission.principal": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.analysis.resourcepermission.principal",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.sheet.name": {
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.analysis.sheet.name",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.sheet.sheetid": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "[\\w\\-]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.analysis.sheet.sheetid",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.stringparameter.name": {
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.analysis.stringparameter.name",
        "UpdateRequires": "Replacement"
    },
    "quicksight.analysis.stringparameter.values": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "quicksight.analysis.stringparameter.values",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.adhocfilteringoption.availabilitystatus": {
        "Allowed values": "DISABLED | ENABLED",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.adhocfilteringoption.availabilitystatus",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.dashboarderror.message": {
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.dashboarderror.message",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.dashboarderror.type": {
        "Allowed values": "ACCESS_DENIED | COLUMN_GEOGRAPHIC_ROLE_MISMATCH | COLUMN_REPLACEMENT_MISSING | COLUMN_TYPE_MISMATCH | DATA_SET_NOT_FOUND | INTERNAL_FAILURE | PARAMETER_NOT_FOUND | PARAMETER_TYPE_INVALID | PARAMETER_VALUE_INCOMPATIBLE | SOURCE_NOT_FOUND",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.dashboarderror.type",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.dashboardpublishoptions.adhocfilteringoption": {
        "Required": "No",
        "Type": "AdHocFilteringOption",
        "UniqueKey": "quicksight.dashboard.dashboardpublishoptions.adhocfilteringoption",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.dashboardpublishoptions.exporttocsvoption": {
        "Required": "No",
        "Type": "ExportToCSVOption",
        "UniqueKey": "quicksight.dashboard.dashboardpublishoptions.exporttocsvoption",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.dashboardpublishoptions.sheetcontrolsoption": {
        "Required": "No",
        "Type": "SheetControlsOption",
        "UniqueKey": "quicksight.dashboard.dashboardpublishoptions.sheetcontrolsoption",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.dashboardsourceentity.sourcetemplate": {
        "Required": "No",
        "Type": "DashboardSourceTemplate",
        "UniqueKey": "quicksight.dashboard.dashboardsourceentity.sourcetemplate",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.dashboardsourcetemplate.arn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.dashboardsourcetemplate.arn",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.dashboardsourcetemplate.datasetreferences": {
        "Required": "Yes",
        "Type": "List of [DataSetReference",
        "UniqueKey": "quicksight.dashboard.dashboardsourcetemplate.datasetreferences",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.dashboardversion.arn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.dashboardversion.arn",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.dashboardversion.createdtime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.dashboardversion.createdtime",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.dashboardversion.datasetarns": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "quicksight.dashboard.dashboardversion.datasetarns",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.dashboardversion.description": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "^.{1,512}$",
        "Required": "No",
        "SampleValue": "TODO-quicksight.dashboard.dashboardversion.Description",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.dashboardversion.description",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.dashboardversion.errors": {
        "Required": "No",
        "Type": "List of [DashboardError",
        "UniqueKey": "quicksight.dashboard.dashboardversion.errors",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.dashboardversion.sheets": {
        "Maximum": "20",
        "Required": "No",
        "Type": "List of [Sheet",
        "UniqueKey": "quicksight.dashboard.dashboardversion.sheets",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.dashboardversion.sourceentityarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.dashboardversion.sourceentityarn",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.dashboardversion.status": {
        "Allowed values": "CREATION_FAILED | CREATION_IN_PROGRESS | CREATION_SUCCESSFUL | DELETED | UPDATE_FAILED | UPDATE_IN_PROGRESS | UPDATE_SUCCESSFUL",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.dashboardversion.status",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.dashboardversion.themearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.dashboardversion.themearn",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.dashboardversion.versionnumber": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "quicksight.dashboard.dashboardversion.versionnumber",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.datasetreference.datasetarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.datasetreference.datasetarn",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.datasetreference.datasetplaceholder": {
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.datasetreference.datasetplaceholder",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.datetimeparameter.name": {
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.datetimeparameter.name",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.datetimeparameter.values": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "quicksight.dashboard.datetimeparameter.values",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.decimalparameter.name": {
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.decimalparameter.name",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.decimalparameter.values": {
        "Required": "Yes",
        "Type": "List of Double",
        "UniqueKey": "quicksight.dashboard.decimalparameter.values",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.exporttocsvoption.availabilitystatus": {
        "Allowed values": "DISABLED | ENABLED",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.exporttocsvoption.availabilitystatus",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.integerparameter.name": {
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.integerparameter.name",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.integerparameter.values": {
        "Required": "Yes",
        "Type": "List of Double",
        "UniqueKey": "quicksight.dashboard.integerparameter.values",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.parameters.datetimeparameters": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of [DateTimeParameter",
        "UniqueKey": "quicksight.dashboard.parameters.datetimeparameters",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.parameters.decimalparameters": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of [DecimalParameter",
        "UniqueKey": "quicksight.dashboard.parameters.decimalparameters",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.parameters.integerparameters": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of [IntegerParameter",
        "UniqueKey": "quicksight.dashboard.parameters.integerparameters",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.parameters.stringparameters": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of [StringParameter",
        "UniqueKey": "quicksight.dashboard.parameters.stringparameters",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.resourcepermission.actions": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "quicksight.dashboard.resourcepermission.actions",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.resourcepermission.principal": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.resourcepermission.principal",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.sheet.name": {
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.sheet.name",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.sheet.sheetid": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "[\\w\\-]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.sheet.sheetid",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.sheetcontrolsoption.visibilitystate": {
        "Allowed values": "COLLAPSED | EXPANDED",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.sheetcontrolsoption.visibilitystate",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.stringparameter.name": {
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.dashboard.stringparameter.name",
        "UpdateRequires": "Replacement"
    },
    "quicksight.dashboard.stringparameter.values": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "quicksight.dashboard.stringparameter.values",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.columngroupcolumnschema.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.template.columngroupcolumnschema.name",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.columngroupschema.columngroupcolumnschemalist": {
        "Maximum": "500",
        "Required": "No",
        "Type": "List of [ColumnGroupColumnSchema",
        "UniqueKey": "quicksight.template.columngroupschema.columngroupcolumnschemalist",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.columngroupschema.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.template.columngroupschema.name",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.columnschema.datatype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.template.columnschema.datatype",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.columnschema.geographicrole": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.template.columnschema.geographicrole",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.columnschema.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.template.columnschema.name",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.datasetconfiguration.columngroupschemalist": {
        "Maximum": "500",
        "Required": "No",
        "Type": "List of [ColumnGroupSchema",
        "UniqueKey": "quicksight.template.datasetconfiguration.columngroupschemalist",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.datasetconfiguration.datasetschema": {
        "Required": "No",
        "Type": "DataSetSchema",
        "UniqueKey": "quicksight.template.datasetconfiguration.datasetschema",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.datasetconfiguration.placeholder": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.template.datasetconfiguration.placeholder",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.datasetreference.datasetarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.template.datasetreference.datasetarn",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.datasetreference.datasetplaceholder": {
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.template.datasetreference.datasetplaceholder",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.datasetschema.columnschemalist": {
        "Maximum": "500",
        "Required": "No",
        "Type": "List of [ColumnSchema",
        "UniqueKey": "quicksight.template.datasetschema.columnschemalist",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.resourcepermission.actions": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "quicksight.template.resourcepermission.actions",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.resourcepermission.principal": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.template.resourcepermission.principal",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.sheet.name": {
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.template.sheet.name",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.sheet.sheetid": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "[\\w\\-]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.template.sheet.sheetid",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.templateerror.message": {
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.template.templateerror.message",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.templateerror.type": {
        "Allowed values": "ACCESS_DENIED | DATA_SET_NOT_FOUND | INTERNAL_FAILURE | SOURCE_NOT_FOUND",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.template.templateerror.type",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.templatesourceanalysis.arn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.template.templatesourceanalysis.arn",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.templatesourceanalysis.datasetreferences": {
        "Required": "Yes",
        "Type": "List of [DataSetReference",
        "UniqueKey": "quicksight.template.templatesourceanalysis.datasetreferences",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.templatesourceentity.sourceanalysis": {
        "Required": "No",
        "Type": "TemplateSourceAnalysis",
        "UniqueKey": "quicksight.template.templatesourceentity.sourceanalysis",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.templatesourceentity.sourcetemplate": {
        "Required": "No",
        "Type": "TemplateSourceTemplate",
        "UniqueKey": "quicksight.template.templatesourceentity.sourcetemplate",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.templatesourcetemplate.arn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.template.templatesourcetemplate.arn",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.templateversion.createdtime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.template.templateversion.createdtime",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.templateversion.datasetconfigurations": {
        "Maximum": "30",
        "Required": "No",
        "Type": "List of [DataSetConfiguration",
        "UniqueKey": "quicksight.template.templateversion.datasetconfigurations",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.templateversion.description": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "^.{1,512}$",
        "Required": "No",
        "SampleValue": "TODO-quicksight.template.templateversion.Description",
        "Type": "String",
        "UniqueKey": "quicksight.template.templateversion.description",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.templateversion.errors": {
        "Required": "No",
        "Type": "List of [TemplateError",
        "UniqueKey": "quicksight.template.templateversion.errors",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.templateversion.sheets": {
        "Maximum": "20",
        "Required": "No",
        "Type": "List of [Sheet",
        "UniqueKey": "quicksight.template.templateversion.sheets",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.templateversion.sourceentityarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.template.templateversion.sourceentityarn",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.templateversion.status": {
        "Allowed values": "CREATION_FAILED | CREATION_IN_PROGRESS | CREATION_SUCCESSFUL | DELETED | UPDATE_FAILED | UPDATE_IN_PROGRESS | UPDATE_SUCCESSFUL",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.template.templateversion.status",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.templateversion.themearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.template.templateversion.themearn",
        "UpdateRequires": "Replacement"
    },
    "quicksight.template.templateversion.versionnumber": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "quicksight.template.templateversion.versionnumber",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.borderstyle.show": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "quicksight.theme.borderstyle.show",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.datacolorpalette.colors": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "quicksight.theme.datacolorpalette.colors",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.datacolorpalette.emptyfillcolor": {
        "Pattern": "^#[A-F0-9]{6}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.datacolorpalette.emptyfillcolor",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.datacolorpalette.minmaxgradient": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "quicksight.theme.datacolorpalette.minmaxgradient",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.font.fontfamily": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.font.fontfamily",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.gutterstyle.show": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "quicksight.theme.gutterstyle.show",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.marginstyle.show": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "quicksight.theme.marginstyle.show",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.resourcepermission.actions": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "quicksight.theme.resourcepermission.actions",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.resourcepermission.principal": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "quicksight.theme.resourcepermission.principal",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.sheetstyle.tile": {
        "Required": "No",
        "Type": "TileStyle",
        "UniqueKey": "quicksight.theme.sheetstyle.tile",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.sheetstyle.tilelayout": {
        "Required": "No",
        "Type": "TileLayoutStyle",
        "UniqueKey": "quicksight.theme.sheetstyle.tilelayout",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.themeconfiguration.datacolorpalette": {
        "Required": "No",
        "Type": "DataColorPalette",
        "UniqueKey": "quicksight.theme.themeconfiguration.datacolorpalette",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.themeconfiguration.sheet": {
        "Required": "No",
        "Type": "SheetStyle",
        "UniqueKey": "quicksight.theme.themeconfiguration.sheet",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.themeconfiguration.typography": {
        "Required": "No",
        "Type": "Typography",
        "UniqueKey": "quicksight.theme.themeconfiguration.typography",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.themeconfiguration.uicolorpalette": {
        "Required": "No",
        "Type": "UIColorPalette",
        "UniqueKey": "quicksight.theme.themeconfiguration.uicolorpalette",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.themeerror.message": {
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.themeerror.message",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.themeerror.type": {
        "Allowed values": "INTERNAL_FAILURE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.themeerror.type",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.themeversion.arn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.themeversion.arn",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.themeversion.basethemeid": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "[\\w\\-]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.themeversion.basethemeid",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.themeversion.configuration": {
        "Required": "No",
        "Type": "ThemeConfiguration",
        "UniqueKey": "quicksight.theme.themeversion.configuration",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.themeversion.createdtime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.themeversion.createdtime",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.themeversion.description": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "^.{1,512}$",
        "Required": "No",
        "SampleValue": "TODO-quicksight.theme.themeversion.Description",
        "Type": "String",
        "UniqueKey": "quicksight.theme.themeversion.description",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.themeversion.errors": {
        "Required": "No",
        "Type": "List of [ThemeError",
        "UniqueKey": "quicksight.theme.themeversion.errors",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.themeversion.status": {
        "Allowed values": "CREATION_FAILED | CREATION_IN_PROGRESS | CREATION_SUCCESSFUL | DELETED | UPDATE_FAILED | UPDATE_IN_PROGRESS | UPDATE_SUCCESSFUL",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.themeversion.status",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.themeversion.versionnumber": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "quicksight.theme.themeversion.versionnumber",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.tilelayoutstyle.gutter": {
        "Required": "No",
        "Type": "GutterStyle",
        "UniqueKey": "quicksight.theme.tilelayoutstyle.gutter",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.tilelayoutstyle.margin": {
        "Required": "No",
        "Type": "MarginStyle",
        "UniqueKey": "quicksight.theme.tilelayoutstyle.margin",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.tilestyle.border": {
        "Required": "No",
        "Type": "BorderStyle",
        "UniqueKey": "quicksight.theme.tilestyle.border",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.typography.fontfamilies": {
        "Required": "No",
        "Type": "List of [Font",
        "UniqueKey": "quicksight.theme.typography.fontfamilies",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.uicolorpalette.accent": {
        "Pattern": "^#[A-F0-9]{6}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.uicolorpalette.accent",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.uicolorpalette.accentforeground": {
        "Pattern": "^#[A-F0-9]{6}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.uicolorpalette.accentforeground",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.uicolorpalette.danger": {
        "Pattern": "^#[A-F0-9]{6}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.uicolorpalette.danger",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.uicolorpalette.dangerforeground": {
        "Pattern": "^#[A-F0-9]{6}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.uicolorpalette.dangerforeground",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.uicolorpalette.dimension": {
        "Pattern": "^#[A-F0-9]{6}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.uicolorpalette.dimension",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.uicolorpalette.dimensionforeground": {
        "Pattern": "^#[A-F0-9]{6}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.uicolorpalette.dimensionforeground",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.uicolorpalette.measure": {
        "Pattern": "^#[A-F0-9]{6}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.uicolorpalette.measure",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.uicolorpalette.measureforeground": {
        "Pattern": "^#[A-F0-9]{6}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.uicolorpalette.measureforeground",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.uicolorpalette.primarybackground": {
        "Pattern": "^#[A-F0-9]{6}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.uicolorpalette.primarybackground",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.uicolorpalette.primaryforeground": {
        "Pattern": "^#[A-F0-9]{6}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.uicolorpalette.primaryforeground",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.uicolorpalette.secondarybackground": {
        "Pattern": "^#[A-F0-9]{6}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.uicolorpalette.secondarybackground",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.uicolorpalette.secondaryforeground": {
        "Pattern": "^#[A-F0-9]{6}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.uicolorpalette.secondaryforeground",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.uicolorpalette.success": {
        "Pattern": "^#[A-F0-9]{6}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.uicolorpalette.success",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.uicolorpalette.successforeground": {
        "Pattern": "^#[A-F0-9]{6}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.uicolorpalette.successforeground",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.uicolorpalette.warning": {
        "Pattern": "^#[A-F0-9]{6}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.uicolorpalette.warning",
        "UpdateRequires": "Replacement"
    },
    "quicksight.theme.uicolorpalette.warningforeground": {
        "Pattern": "^#[A-F0-9]{6}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "quicksight.theme.uicolorpalette.warningforeground",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.allocatedstorage": {
        "Required": "Conditional",
        "SampleValue": "TODO-AllocatedStorage",
        "UniqueKey": "rds.database.instance.allocatedstorage",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.allowmajorversionupgrade": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "rds.database.instance.allowmajorversionupgrade",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.associatedroles": {
        "Required": "No",
        "Type": "List of [DBInstanceRole",
        "UniqueKey": "rds.database.instance.associatedroles",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.autominorversionupgrade": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "rds.database.instance.autominorversionupgrade",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.availabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.availabilityzone",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.aws rds describe-db-parameter-groups --query \"dbparametergroups[].dbparametergroupname\" --output text": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.aws rds describe-db-parameter-groups --query \"dbparametergroups[].dbparametergroupname\" --output text",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.backupretentionperiod": {
        "Required": "No",
        "SampleValue": "TODO-BackupRetentionPeriod",
        "UniqueKey": "rds.database.instance.backupretentionperiod",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.cacertificateidentifier": {
        "Required": "No",
        "SampleValue": "TODO-CACertificateIdentifier",
        "UniqueKey": "rds.database.instance.cacertificateidentifier",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.charactersetname": {
        "Required": "No",
        "SampleValue": "TODO-CharacterSetName",
        "UniqueKey": "rds.database.instance.charactersetname",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.copytagstosnapshot": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "rds.database.instance.copytagstosnapshot",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.dbclusteridentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.dbclusteridentifier",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.dbinstanceclass": {
        "Required": "Yes",
        "SampleValue": "TODO-DBInstanceClass",
        "UniqueKey": "rds.database.instance.dbinstanceclass",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.dbinstanceidentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.dbinstanceidentifier",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.dbname": {
        "Required": "No",
        "SampleValue": "TODO-DBName",
        "UniqueKey": "rds.database.instance.dbname",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.dbparametergroupname": {
        "UniqueKey": "rds.database.instance.dbparametergroupname"
    },
    "rds.database.instance.dbsecuritygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "rds.database.instance.dbsecuritygroups",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.dbsnapshotidentifier": {
        "Required": "No",
        "SampleValue": "TODO-DBSnapshotIdentifier",
        "UniqueKey": "rds.database.instance.dbsnapshotidentifier",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.dbsubnetgroupname": {
        "Required": "No",
        "SampleValue": "TODO-DBSubnetGroupName",
        "UniqueKey": "rds.database.instance.dbsubnetgroupname",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.deleteautomatedbackups": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "rds.database.instance.deleteautomatedbackups",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.deletionprotection": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "rds.database.instance.deletionprotection",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.domain": {
        "Required": "No",
        "SampleValue": "TODO-Domain",
        "UniqueKey": "rds.database.instance.domain",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.domainiamrolename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.domainiamrolename",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.enablecloudwatchlogsexports": {
        "Required": "No",
        "SampleValue": "TODO-EnableCloudwatchLogsExports",
        "UniqueKey": "rds.database.instance.enablecloudwatchlogsexports",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.enableiamdatabaseauthentication": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "rds.database.instance.enableiamdatabaseauthentication",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.enableperformanceinsights": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "rds.database.instance.enableperformanceinsights",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.engine": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "rds.database.instance.engine",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.engineversion": {
        "Required": "No",
        "SampleValue": "TODO-EngineVersion",
        "UniqueKey": "rds.database.instance.engineversion",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.iops": {
        "Required": "No",
        "SampleValue": "TODO-Iops",
        "UniqueKey": "rds.database.instance.iops",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.kmskeyid": {
        "Required": "No",
        "SampleValue": "TODO-KmsKeyId",
        "UniqueKey": "rds.database.instance.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.licensemodel": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.licensemodel",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.masterusername": {
        "Required": "No",
        "SampleValue": "TODO-MasterUsername",
        "UniqueKey": "rds.database.instance.masterusername",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.masteruserpassword": {
        "Required": "No",
        "SampleValue": "TODO-MasterUserPassword",
        "UniqueKey": "rds.database.instance.masteruserpassword",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.maxallocatedstorage": {
        "Required": "No",
        "SampleValue": "TODO-MaxAllocatedStorage",
        "UniqueKey": "rds.database.instance.maxallocatedstorage",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.monitoringinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.database.instance.monitoringinterval",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.monitoringrolearn": {
        "Required": "No",
        "SampleValue": "TODO-MonitoringRoleArn",
        "UniqueKey": "rds.database.instance.monitoringrolearn",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.multiaz": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "rds.database.instance.multiaz",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.optiongroupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.optiongroupname",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.performanceinsightskmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.performanceinsightskmskeyid",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.performanceinsightsretentionperiod": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.database.instance.performanceinsightsretentionperiod",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.port": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.port",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.preferredbackupwindow": {
        "Required": "No",
        "SampleValue": "TODO-PreferredBackupWindow",
        "UniqueKey": "rds.database.instance.preferredbackupwindow",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.preferredmaintenancewindow": {
        "Required": "No",
        "SampleValue": "TODO-PreferredMaintenanceWindow",
        "UniqueKey": "rds.database.instance.preferredmaintenancewindow",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.processorfeatures": {
        "Required": "No",
        "Type": "List of [ProcessorFeature",
        "UniqueKey": "rds.database.instance.processorfeatures",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.promotiontier": {
        "Required": "No",
        "SampleValue": "TODO-PromotionTier",
        "UniqueKey": "rds.database.instance.promotiontier",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.publiclyaccessible": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "rds.database.instance.publiclyaccessible",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.sourcedbinstanceidentifier": {
        "Required": "No",
        "SampleValue": "TODO-SourceDBInstanceIdentifier",
        "UniqueKey": "rds.database.instance.sourcedbinstanceidentifier",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.sourceregion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.sourceregion",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.storageencrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "rds.database.instance.storageencrypted",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.storagetype": {
        "Required": "No",
        "SampleValue": "TODO-StorageType",
        "UniqueKey": "rds.database.instance.storagetype",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "rds.database.instance.tags",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.timezone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.timezone",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.usedefaultprocessorfeatures": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "rds.database.instance.usedefaultprocessorfeatures",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.vpcsecuritygroups": {
        "Required": "No",
        "SampleValue": "TODO-VPCSecurityGroups",
        "UniqueKey": "rds.database.instance.vpcsecuritygroups",
        "UpdateRequires": "Replacement"
    },
    "rds.dbcluster.dbclusterrole.featurename": {
        "Required": "No",
        "SampleValue": "TODO-FeatureName",
        "UniqueKey": "rds.dbcluster.dbclusterrole.featurename",
        "UpdateRequires": "Replacement"
    },
    "rds.dbcluster.dbclusterrole.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "rds.dbcluster.dbclusterrole.rolearn",
        "UpdateRequires": "Replacement"
    },
    "rds.dbcluster.scalingconfiguration.autopause": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "rds.dbcluster.scalingconfiguration.autopause",
        "UpdateRequires": "Replacement"
    },
    "rds.dbcluster.scalingconfiguration.maxcapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.dbcluster.scalingconfiguration.maxcapacity",
        "UpdateRequires": "Replacement"
    },
    "rds.dbcluster.scalingconfiguration.mincapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.dbcluster.scalingconfiguration.mincapacity",
        "UpdateRequires": "Replacement"
    },
    "rds.dbcluster.scalingconfiguration.secondsuntilautopause": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.dbcluster.scalingconfiguration.secondsuntilautopause",
        "UpdateRequires": "Replacement"
    },
    "rds.dbinstance.dbinstancerole.featurename": {
        "Required": "Yes",
        "SampleValue": "TODO-FeatureName",
        "UniqueKey": "rds.dbinstance.dbinstancerole.featurename",
        "UpdateRequires": "Replacement"
    },
    "rds.dbinstance.dbinstancerole.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "rds.dbinstance.dbinstancerole.rolearn",
        "UpdateRequires": "Replacement"
    },
    "rds.dbinstance.processorfeature.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.dbinstance.processorfeature.name",
        "UpdateRequires": "Replacement"
    },
    "rds.dbinstance.processorfeature.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.dbinstance.processorfeature.value",
        "UpdateRequires": "Replacement"
    },
    "rds.dbparametergroup.aws rds describe-db-engine-versions --query \"dbengineversions[].dbparametergroupfamily\"": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "rds.dbparametergroup.aws rds describe-db-engine-versions --query \"dbengineversions[].dbparametergroupfamily\"",
        "UpdateRequires": "Replacement"
    },
    "rds.dbparametergroup.description": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "rds.dbparametergroup.description",
        "UpdateRequires": "Replacement"
    },
    "rds.dbparametergroup.family": {
        "UniqueKey": "rds.dbparametergroup.family"
    },
    "rds.dbparametergroup.parameters": {
        "Required": "No",
        "SampleValue": "TODO-Parameters",
        "UniqueKey": "rds.dbparametergroup.parameters",
        "UpdateRequires": "Replacement"
    },
    "rds.dbparametergroup.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "rds.dbparametergroup.tags",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxy.authformat.authscheme": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.dbproxy.authformat.authscheme",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxy.authformat.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.dbproxy.authformat.description",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxy.authformat.iamauth": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.dbproxy.authformat.iamauth",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxy.authformat.secretarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.dbproxy.authformat.secretarn",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxy.authformat.username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.dbproxy.authformat.username",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxy.tagformat.key": {
        "Required": "No",
        "SampleValue": "TODO-Key",
        "UniqueKey": "rds.dbproxy.tagformat.key",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxy.tagformat.value": {
        "Required": "No",
        "SampleValue": "TODO-Value",
        "UniqueKey": "rds.dbproxy.tagformat.value",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.connectionborrowtimeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.connectionborrowtimeout",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.initquery": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.initquery",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.maxconnectionspercent": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.maxconnectionspercent",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.maxidleconnectionspercent": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.maxidleconnectionspercent",
        "UpdateRequires": "Replacement"
    },
    "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.sessionpinningfilters": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "rds.dbproxytargetgroup.connectionpoolconfigurationinfoformat.sessionpinningfilters",
        "UpdateRequires": "Replacement"
    },
    "rds.optiongroup.optionconfigurations.dbsecuritygroupmemberships": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "rds.optiongroup.optionconfigurations.dbsecuritygroupmemberships",
        "UpdateRequires": "Replacement"
    },
    "rds.optiongroup.optionconfigurations.optionname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "rds.optiongroup.optionconfigurations.optionname",
        "UpdateRequires": "Replacement"
    },
    "rds.optiongroup.optionconfigurations.optionsettings": {
        "Required": "No",
        "Type": "List of [OptionSetting",
        "UniqueKey": "rds.optiongroup.optionconfigurations.optionsettings",
        "UpdateRequires": "Replacement"
    },
    "rds.optiongroup.optionconfigurations.optionsettings.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.optiongroup.optionconfigurations.optionsettings.name",
        "UpdateRequires": "Replacement"
    },
    "rds.optiongroup.optionconfigurations.optionsettings.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.optiongroup.optionconfigurations.optionsettings.value",
        "UpdateRequires": "Replacement"
    },
    "rds.optiongroup.optionconfigurations.optionversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.optiongroup.optionconfigurations.optionversion",
        "UpdateRequires": "Replacement"
    },
    "rds.optiongroup.optionconfigurations.port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.optiongroup.optionconfigurations.port",
        "UpdateRequires": "Replacement"
    },
    "rds.optiongroup.optionconfigurations.vpcsecuritygroupmemberships": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "rds.optiongroup.optionconfigurations.vpcsecuritygroupmemberships",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.dbsecuritygroupingress": {
        "Required": "Yes",
        "Type": "List of [Ingress",
        "UniqueKey": "rds.security.group.dbsecuritygroupingress",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.ec2vpcid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.security.group.ec2vpcid",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.groupdescription": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "rds.security.group.groupdescription",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.rule.cidrip": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.security.group.rule.cidrip",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.rule.ec2securitygroupid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.security.group.rule.ec2securitygroupid",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.rule.ec2securitygroupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.security.group.rule.ec2securitygroupname",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.rule.ec2securitygroupownerid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.security.group.rule.ec2securitygroupownerid",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "rds.security.group.tags",
        "UpdateRequires": "Replacement"
    },
    "redshift.cluster.loggingproperties.bucketname": {
        "Maximum": "2147483647",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "redshift.cluster.loggingproperties.bucketname",
        "UpdateRequires": "Replacement"
    },
    "redshift.cluster.loggingproperties.s3keyprefix": {
        "Maximum": "2147483647",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "redshift.cluster.loggingproperties.s3keyprefix",
        "UpdateRequires": "Replacement"
    },
    "resourcegroups.group.query.resourcetypefilters": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "resourcegroups.group.query.resourcetypefilters",
        "UpdateRequires": "Replacement"
    },
    "resourcegroups.group.query.stackidentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "resourcegroups.group.query.stackidentifier",
        "UpdateRequires": "Replacement"
    },
    "resourcegroups.group.query.tagfilter": {
        "Required": "Conditional",
        "Type": "List of [TagFilter",
        "UniqueKey": "resourcegroups.group.query.tagfilter",
        "UpdateRequires": "Replacement"
    },
    "resourcegroups.group.query.tagfilters": {
        "UniqueKey": "resourcegroups.group.query.tagfilters"
    },
    "resourcegroups.group.resourcequery.query": {
        "Required": "Conditional",
        "Type": "Query",
        "UniqueKey": "resourcegroups.group.resourcequery.query",
        "UpdateRequires": "Replacement"
    },
    "resourcegroups.group.resourcequery.type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "resourcegroups.group.resourcequery.type",
        "UpdateRequires": "Replacement"
    },
    "resourcegroups.group.tagfilter.key": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "resourcegroups.group.tagfilter.key",
        "UpdateRequires": "Replacement"
    },
    "resourcegroups.group.tagfilter.values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "resourcegroups.group.tagfilter.values",
        "UpdateRequires": "Replacement"
    },
    "robomaker.robotapplication.robotsoftwaresuite.name": {
        "Allowed values": "ROS | ROS2",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.robotapplication.robotsoftwaresuite.name",
        "UpdateRequires": "Replacement"
    },
    "robomaker.robotapplication.robotsoftwaresuite.version": {
        "Allowed values": "Dashing | Kinetic | Melodic",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.robotapplication.robotsoftwaresuite.version",
        "UpdateRequires": "Replacement"
    },
    "robomaker.robotapplication.sourceconfig.architecture": {
        "Allowed values": "ARM64 | ARMHF | X86_64",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.robotapplication.sourceconfig.architecture",
        "UpdateRequires": "Replacement"
    },
    "robomaker.robotapplication.sourceconfig.s3bucket": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "[a-z0-9][a-z0-9.\\-]*[a-z0-9]",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.robotapplication.sourceconfig.s3bucket",
        "UpdateRequires": "Replacement"
    },
    "robomaker.robotapplication.sourceconfig.s3key": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.robotapplication.sourceconfig.s3key",
        "UpdateRequires": "Replacement"
    },
    "robomaker.simulationapplication.renderingengine.name": {
        "Allowed values": "OGRE",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.renderingengine.name",
        "UpdateRequires": "Replacement"
    },
    "robomaker.simulationapplication.renderingengine.version": {
        "Maximum": "4",
        "Minimum": "1",
        "Pattern": "1.x",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.renderingengine.version",
        "UpdateRequires": "Replacement"
    },
    "robomaker.simulationapplication.robotsoftwaresuite.name": {
        "Allowed values": "ROS | ROS2",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.robotsoftwaresuite.name",
        "UpdateRequires": "Replacement"
    },
    "robomaker.simulationapplication.robotsoftwaresuite.version": {
        "Allowed values": "Dashing | Kinetic | Melodic",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.robotsoftwaresuite.version",
        "UpdateRequires": "Replacement"
    },
    "robomaker.simulationapplication.simulationsoftwaresuite.name": {
        "Allowed values": "Gazebo | RosbagPlay",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.simulationsoftwaresuite.name",
        "UpdateRequires": "Replacement"
    },
    "robomaker.simulationapplication.simulationsoftwaresuite.version": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": "7|9|Kinetic|Melodic|Dashing",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.simulationsoftwaresuite.version",
        "UpdateRequires": "Replacement"
    },
    "robomaker.simulationapplication.sourceconfig.architecture": {
        "Allowed values": "ARM64 | ARMHF | X86_64",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.sourceconfig.architecture",
        "UpdateRequires": "Replacement"
    },
    "robomaker.simulationapplication.sourceconfig.s3bucket": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "[a-z0-9][a-z0-9.\\-]*[a-z0-9]",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.sourceconfig.s3bucket",
        "UpdateRequires": "Replacement"
    },
    "robomaker.simulationapplication.sourceconfig.s3key": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.sourceconfig.s3key",
        "UpdateRequires": "Replacement"
    },
    "route53.aliastarget.1.dnsname": {
        "Alias records only:* The value that you specify depends on where you want to route queries:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the applicable domain name for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalDomainName`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionDomainName`\\. This is the name of the associated CloudFront distribution, such as `da1b2c3d4e5.cloudfront.net`\\.\nThe name of the record that you're creating must match a custom domain name for your API, such as `api.example.com`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nEnter the API endpoint for the interface endpoint, such as `vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com`\\. For edge\\-optimized APIs, this is the domain name for the corresponding CloudFront distribution\\. You can get the value of `DnsName` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify the domain name that CloudFront assigned when you created your distribution\\.  \nYour CloudFront distribution must include an alternate domain name that matches the name of the record\\. For example, if the name of the record is *acme\\.example\\.com*, your CloudFront distribution must include *acme\\.example\\.com* as one of the alternate domain names\\. For more information, see [Using Alternate Domain Names \\(CNAMEs\\)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html) in the *Amazon CloudFront Developer Guide*\\.  \nYou can't create a record in a private hosted zone to route traffic to a CloudFront distribution\\.  \nFor failover alias records, you can't specify a CloudFront distribution for both the primary and secondary records\\. A distribution must include an alternate domain name that matches the name of the record\\. However, the primary and secondary records have the same name, and you can't include the same alternate domain name in more than one distribution\\.   \nElastic Beanstalk environment  \nIf the domain name for your Elastic Beanstalk environment includes the region that you deployed the environment in, you can create an alias record that routes traffic to the environment\\. For example, the domain name `my-environment.us-west-2.elasticbeanstalk.com` is a regionalized domain name\\.   \nFor environments that were created before early 2016, the domain name doesn't include the region\\. To route traffic to these environments, you must create a CNAME record instead of an alias record\\. Note that you can't create a CNAME record for the root domain name\\. For example, if your domain name is example\\.com, you can create a record that routes traffic for acme\\.example\\.com to your Elastic Beanstalk environment, but you can't create a record that routes traffic for example\\.com to your Elastic Beanstalk environment\\.\nFor Elastic Beanstalk environments that have regionalized subdomains, specify the `CNAME` attribute for the environment\\. You can use the following methods to get the value of the CNAME attribute:  \n+ *AWS Management Console": "For information about how to get the value by using the console, see [Using Custom Domains with AWS Elastic Beanstalk](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customdomains.html) in the *AWS Elastic Beanstalk Developer Guide*\\.\n+ *Elastic Beanstalk API",
        "Maximum": "1024",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.aliastarget.1.dnsname",
        "UpdateRequires": "Replacement"
    },
    "route53.aliastarget.1.evaluatetargethealth": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "EvaluateTargetHealth`  <a name=\"cfn-route53-aliastarget-evaluatetargethealth\"></a>\n *Applies only to alias, failover alias, geolocation alias, latency alias, and weighted alias resource record sets:* When `EvaluateTargetHealth` is `true`, an alias resource record set inherits the health of the referenced AWS resource, such as an ELB load balancer or another resource record set in the hosted zone\\.  \nNote the following:    \nCloudFront distributions  \nYou can't set `EvaluateTargetHealth` to `true` when the alias target is a CloudFront distribution\\.  \nElastic Beanstalk environments that have regionalized subdomains  \nIf you specify an Elastic Beanstalk environment in `DNSName` and the environment contains an ELB load balancer, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. \\(An environment automatically contains an ELB load balancer if it includes more than one Amazon EC2 instance\\.\\) If you set `EvaluateTargetHealth` to `true` and either no Amazon EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other available resources that are healthy, if any\\.   \nIf the environment contains a single Amazon EC2 instance, there are no special requirements\\.  \nELB load balancers  \nHealth checking behavior depends on the type of load balancer:  \n+  **Classic Load Balancers*": "If you specify an ELB Classic Load Balancer in `DNSName`, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. If you set `EvaluateTargetHealth` to `true` and either no EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other resources\\.\n+  **Application and Network Load Balancers*",
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "route53.aliastarget.1.evaluatetargethealth",
        "UpdateRequires": "Replacement"
    },
    "route53.aliastarget.1.hostedzoneid": {
        "Alias resource records sets only": "The value used depends on where you want to route traffic:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the hosted zone ID for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalHostedZoneId`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionHostedZoneId`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nSpecify the hosted zone ID for your interface endpoint\\. You can get the value of `HostedZoneId` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify `Z2FDTNDATAQYW2`\\. This is always the hosted zone ID when you create an alias record that routes traffic to a CloudFront distribution\\.  \nAlias records for CloudFront can't be created in a private zone\\.  \nElastic Beanstalk environment  \nSpecify the hosted zone ID for the region that you created the environment in\\. The environment must have a regionalized subdomain\\. For a list of regions and the corresponding hosted zone IDs, see [AWS Elastic Beanstalk endpoints and quotas](https://docs.aws.amazon.com/general/latest/gr/elasticbeanstalk.html) in the *Amazon Web Services General Reference*\\.  \nELB load balancer  \nSpecify the value of the hosted zone ID for the load balancer\\. Use the following methods to get the hosted zone ID:  \n+ [Service Endpoints](https://docs.aws.amazon.com/general/latest/gr/elb.html) table in the \"Elastic Load Balancing Endpoints and Quotas\" topic in the *Amazon Web Services General Reference",
        "Maximum": "32",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.aliastarget.1.hostedzoneid",
        "UpdateRequires": "Replacement"
    },
    "route53.aliastarget.dnsname": {
        "Alias records only:* The value that you specify depends on where you want to route queries:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the applicable domain name for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalDomainName`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionDomainName`\\. This is the name of the associated CloudFront distribution, such as `da1b2c3d4e5.cloudfront.net`\\.\nThe name of the record that you're creating must match a custom domain name for your API, such as `api.example.com`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nEnter the API endpoint for the interface endpoint, such as `vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com`\\. For edge\\-optimized APIs, this is the domain name for the corresponding CloudFront distribution\\. You can get the value of `DnsName` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify the domain name that CloudFront assigned when you created your distribution\\.  \nYour CloudFront distribution must include an alternate domain name that matches the name of the record\\. For example, if the name of the record is *acme\\.example\\.com*, your CloudFront distribution must include *acme\\.example\\.com* as one of the alternate domain names\\. For more information, see [Using Alternate Domain Names \\(CNAMEs\\)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html) in the *Amazon CloudFront Developer Guide*\\.  \nYou can't create a record in a private hosted zone to route traffic to a CloudFront distribution\\.  \nFor failover alias records, you can't specify a CloudFront distribution for both the primary and secondary records\\. A distribution must include an alternate domain name that matches the name of the record\\. However, the primary and secondary records have the same name, and you can't include the same alternate domain name in more than one distribution\\.   \nElastic Beanstalk environment  \nIf the domain name for your Elastic Beanstalk environment includes the region that you deployed the environment in, you can create an alias record that routes traffic to the environment\\. For example, the domain name `my-environment.us-west-2.elasticbeanstalk.com` is a regionalized domain name\\.   \nFor environments that were created before early 2016, the domain name doesn't include the region\\. To route traffic to these environments, you must create a CNAME record instead of an alias record\\. Note that you can't create a CNAME record for the root domain name\\. For example, if your domain name is example\\.com, you can create a record that routes traffic for acme\\.example\\.com to your Elastic Beanstalk environment, but you can't create a record that routes traffic for example\\.com to your Elastic Beanstalk environment\\.\nFor Elastic Beanstalk environments that have regionalized subdomains, specify the `CNAME` attribute for the environment\\. You can use the following methods to get the value of the CNAME attribute:  \n+ *AWS Management Console": "For information about how to get the value by using the console, see [Using Custom Domains with AWS Elastic Beanstalk](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customdomains.html) in the *AWS Elastic Beanstalk Developer Guide*\\.\n+ *Elastic Beanstalk API",
        "Maximum": "1024",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.aliastarget.dnsname",
        "UpdateRequires": "Replacement"
    },
    "route53.aliastarget.evaluatetargethealth": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Applies only to alias records with any routing policy:* When `EvaluateTargetHealth` is `true`, an alias record inherits the health of the referenced AWS resource, such as an ELB load balancer or another record in the hosted zone\\.  \nNote the following:    \nCloudFront distributions  \nYou can't set `EvaluateTargetHealth` to `true` when the alias target is a CloudFront distribution\\.  \nElastic Beanstalk environments that have regionalized subdomains  \nIf you specify an Elastic Beanstalk environment in `DNSName` and the environment contains an ELB load balancer, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. \\(An environment automatically contains an ELB load balancer if it includes more than one Amazon EC2 instance\\.\\) If you set `EvaluateTargetHealth` to `true` and either no Amazon EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other available resources that are healthy, if any\\.   \nIf the environment contains a single Amazon EC2 instance, there are no special requirements\\.  \nELB load balancers  \nHealth checking behavior depends on the type of load balancer:  \n+ **Classic Load Balancers*": "If you specify an ELB Classic Load Balancer in `DNSName`, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. If you set `EvaluateTargetHealth` to `true` and either no EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other resources\\.\n+ **Application and Network Load Balancers*",
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "route53.aliastarget.evaluatetargethealth",
        "UpdateRequires": "Replacement"
    },
    "route53.aliastarget.hostedzoneid": {
        "Alias resource records sets only": "The value used depends on where you want to route traffic:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the hosted zone ID for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalHostedZoneId`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionHostedZoneId`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nSpecify the hosted zone ID for your interface endpoint\\. You can get the value of `HostedZoneId` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify `Z2FDTNDATAQYW2`\\. This is always the hosted zone ID when you create an alias record that routes traffic to a CloudFront distribution\\.  \nAlias records for CloudFront can't be created in a private zone\\.  \nElastic Beanstalk environment  \nSpecify the hosted zone ID for the region that you created the environment in\\. The environment must have a regionalized subdomain\\. For a list of regions and the corresponding hosted zone IDs, see [AWS Elastic Beanstalk endpoints and quotas](https://docs.aws.amazon.com/general/latest/gr/elasticbeanstalk.html) in the *Amazon Web Services General Reference*\\.  \nELB load balancer  \nSpecify the value of the hosted zone ID for the load balancer\\. Use the following methods to get the hosted zone ID:  \n+ [Service Endpoints](https://docs.aws.amazon.com/general/latest/gr/elb.html) table in the \"Elastic Load Balancing endpoints and quotas\" topic in the *Amazon Web Services General Reference",
        "Maximum": "32",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.aliastarget.hostedzoneid",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.alarmidentifier.name": {
        "Maximum": "256",
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "route53.healthcheck.alarmidentifier.name",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.alarmidentifier.region": {
        "Required": "Yes",
        "SampleValue": "TODO-Region",
        "UniqueKey": "route53.healthcheck.alarmidentifier.region",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.alarmidentifier": {
        "Required": "No",
        "Type": "AlarmIdentifier",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.alarmidentifier",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.childhealthchecks": {
        "Maximum": "256",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.childhealthchecks",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.enablesni": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.enablesni",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.failurethreshold": {
        "Maximum": "10",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.failurethreshold",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.fullyqualifieddomainname": {
        "FullyQualifiedDomainName`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-fullyqualifieddomainname\"></a>\nAmazon Route 53 behavior depends on whether you specify a value for `IPAddress`\\.  \n **If you specify a value for** `IPAddress`:  \nAmazon Route 53 sends health check requests to the specified IPv4 or IPv6 address and passes the value of `FullyQualifiedDomainName` in the `Host` header for all health checks except TCP health checks\\. This is typically the fully qualified DNS name of the endpoint on which you want Route 53 to perform health checks\\.  \nWhen Route 53 checks the health of an endpoint, here is how it constructs the `Host` header:  \n+ If you specify a value of `80` for `Port` and `HTTP` or `HTTP_STR_MATCH` for `Type`, Route 53 passes the value of `FullyQualifiedDomainName` to the endpoint in the Host header\\. \n+ If you specify a value of `443` for `Port` and `HTTPS` or `HTTPS_STR_MATCH` for `Type`, Route 53 passes the value of `FullyQualifiedDomainName` to the endpoint in the `Host` header\\.\n+ If you specify another value for `Port` and any value except `TCP` for `Type`, Route 53 passes `FullyQualifiedDomainName:Port` to the endpoint in the `Host` header\\.\nIf you don't specify a value for `FullyQualifiedDomainName`, Route 53 substitutes the value of `IPAddress` in the `Host` header in each of the preceding cases\\.  \n **If you don't specify a value for `IPAddress` *": "Route 53 sends a DNS request to the domain that you specify for `FullyQualifiedDomainName` at the interval that you specify for `RequestInterval`\\. Using an IPv4 address that DNS returns, Route 53 then checks the health of the endpoint\\.  \nIf you don't specify a value for `IPAddress`, Route 53 uses only IPv4 to send health checks to the endpoint\\. If there's no record with a type of A for the name that you specify for `FullyQualifiedDomainName`, the health check fails with a \"DNS resolution failed\" error\\.\nIf you want to check the health of multiple records that have the same name and type, such as multiple weighted records, and if you choose to specify the endpoint only by `FullyQualifiedDomainName`, we recommend that you create a separate health check for each endpoint\\. For example, create a health check for each HTTP server that is serving content for www\\.example\\.com\\. For the value of `FullyQualifiedDomainName`, specify the domain name of the server \\(such as us\\-east\\-2\\-www\\.example\\.com\\), not the name of the records \\(www\\.example\\.com\\)\\.  \nIn this configuration, if you create a health check for which the value of `FullyQualifiedDomainName` matches the name of the records and you then associate the health check with those records, health check results will be unpredictable\\.\nIn addition, if the value that you specify for `Type` is `HTTP`, `HTTPS`, `HTTP_STR_MATCH`, or `HTTPS_STR_MATCH`, Route 53 passes the value of `FullyQualifiedDomainName` in the `Host` header, as it does when you specify a value for `IPAddress`\\. If the value of `Type` is `TCP`, Route 53 doesn't pass a `Host` header\\.",
        "Maximum": "255",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.fullyqualifieddomainname",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.healththreshold": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "^[0,256]}$",
        "Required": "No",
        "SampleValue": "0...256",
        "Type": "Integer",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.healththreshold",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.insufficientdatahealthstatus": {
        "Allowed values": "Healthy | LastKnownStatus | Unhealthy",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.insufficientdatahealthstatus",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.inverted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.inverted",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.ipaddress": {
        "IPAddress`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-ipaddress\"></a>\nThe IPv4 or IPv6 IP address of the endpoint that you want Amazon Route 53 to perform health checks on\\. If you don't specify a value for `IPAddress`, Route 53 sends a DNS request to resolve the domain name that you specify in `FullyQualifiedDomainName` at the interval that you specify in `RequestInterval`\\. Using an IP address returned by DNS, Route 53 then checks the health of the endpoint\\.  \nUse one of the following formats for the value of `IPAddress`:   \n+  **IPv4 address*": "four values between 0 and 255, separated by periods \\(\\.\\), for example, `192.0.2.44`\\.\n+  **IPv6 address*",
        "Maximum": "45",
        "Pattern": "(^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$|^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.ipaddress",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.measurelatency": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.measurelatency",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.port": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "No",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.port",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.regions": {
        "Maximum": "64",
        "Required": "No",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.regions",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.requestinterval": {
        "Maximum": "30",
        "Minimum": "10",
        "Pattern": "^[10,30]}$",
        "Required": "No",
        "SampleValue": "10...30",
        "Type": "Integer",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.requestinterval",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.resourcepath": {
        "Maximum": "255",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.resourcepath",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.searchstring": {
        "Maximum": "255",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.searchstring",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.type": {
        "*Important**  \nIf you specify `HTTPS` for the value of `Type`, the endpoint must support TLS v1\\.0 or later\\.\n+  **HTTP\\_STR\\_MATCH*": "Route 53 tries to establish a TCP connection\\. If successful, Route 53 submits an HTTP request and searches the first 5,120 bytes of the response body for the string that you specify in `SearchString`\\.\n+  **HTTPS\\_STR\\_MATCH*",
        "Allowed values": "CALCULATED | CLOUDWATCH_METRIC | HTTP | HTTP_STR_MATCH | HTTPS | HTTPS_STR_MATCH | TCP",
        "Required": "Yes",
        "Type": "String",
        "Type`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-type\"></a>\nThe type of health check that you want to create, which indicates how Amazon Route 53 determines whether an endpoint is healthy\\.  \nYou can't change the value of `Type` after you create a health check\\.\nYou can create the following types of health checks:  \n+  **HTTP*": "Route 53 tries to establish a TCP connection\\. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400\\.\n+  **HTTPS*",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.type",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthchecktag.key": {
        "Key`  <a name=\"cfn-route53-healthcheck-healthchecktag-key\"></a>\nThe value of `Key` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Key` is the name that you want to give the new tag\\.\n+  **Edit a tag*",
        "Maximum": "128",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthchecktag.key",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthchecktag.value": {
        "Maximum": "256",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthchecktag.value",
        "UpdateRequires": "Replacement",
        "Value`  <a name=\"cfn-route53-healthcheck-healthchecktag-value\"></a>\nThe value of `Value` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Value` is the value that you want to give the new tag\\.\n+  **Edit a tag*"
    },
    "route53.hostedzone.hostedzoneconfig.comment": {
        "Maximum": "256",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.hostedzone.hostedzoneconfig.comment",
        "UpdateRequires": "Replacement"
    },
    "route53.hostedzone.hostedzonetag.key": {
        "Key`  <a name=\"cfn-route53-hostedzone-hostedzonetag-key\"></a>\nThe value of `Key` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Key` is the name that you want to give the new tag\\.\n+  **Edit a tag*",
        "Maximum": "128",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.hostedzone.hostedzonetag.key",
        "UpdateRequires": "Replacement"
    },
    "route53.hostedzone.hostedzonetag.value": {
        "Maximum": "256",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.hostedzone.hostedzonetag.value",
        "UpdateRequires": "Replacement",
        "Value`  <a name=\"cfn-route53-hostedzone-hostedzonetag-value\"></a>\nThe value of `Value` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Value` is the value that you want to give the new tag\\.\n+  **Edit a tag*"
    },
    "route53.hostedzone.hostedzonetags.key": {
        "Key`  <a name=\"cfn-route53-hostedzonetags-key\"></a>\nThe value of `Key` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Key` is the name that you want to give the new tag\\.\n+  **Edit a tag*",
        "Maximum": "128",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.hostedzone.hostedzonetags.key",
        "UpdateRequires": "Replacement"
    },
    "route53.hostedzone.hostedzonetags.value": {
        "Maximum": "256",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.hostedzone.hostedzonetags.value",
        "UpdateRequires": "Replacement",
        "Value`  <a name=\"cfn-route53-hostedzonetags-value\"></a>\nThe value of `Value` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Value` is the value that you want to give the new tag\\.\n+  **Edit a tag*"
    },
    "route53.hostedzone.queryloggingconfig.cloudwatchlogsloggrouparn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.hostedzone.queryloggingconfig.cloudwatchlogsloggrouparn",
        "UpdateRequires": "Replacement"
    },
    "route53.hostedzone.vpc.vpcid": {
        "Required": "Yes",
        "SampleValue": "TODO-VPCId",
        "UniqueKey": "route53.hostedzone.vpc.vpcid",
        "UpdateRequires": "Replacement"
    },
    "route53.hostedzone.vpc.vpcregion": {
        "Required": "Yes",
        "SampleValue": "TODO-VPCRegion",
        "UniqueKey": "route53.hostedzone.vpc.vpcregion",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.aliastarget": {
        "Required": "No",
        "SampleValue": "TODO-AliasTarget",
        "UniqueKey": "route53.recordset.1.aliastarget",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.comment": {
        "Maximum": "256",
        "Required": "No",
        "UniqueKey": "route53.recordset.1.comment",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.failover": {
        "Allowed values": "PRIMARY | SECONDARY",
        "Failover`  <a name=\"cfn-route53-recordset-failover\"></a>\n *Failover resource record sets only:* To configure failover, you add the `Failover` element to two resource record sets\\. For one resource record set, you specify `PRIMARY` as the value for `Failover`; for the other resource record set, you specify `SECONDARY`\\. In addition, you include the `HealthCheckId` element and specify the health check that you want Amazon Route 53 to perform for each resource record set\\.  \nExcept where noted, the following failover behaviors assume that you have included the `HealthCheckId` element in both resource record sets:  \n+ When the primary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the secondary resource record set\\.\n+ When the primary resource record set is unhealthy and the secondary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the secondary resource record set\\.\n+ When the secondary resource record set is unhealthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the primary resource record set\\.\n+ If you omit the `HealthCheckId` element for the secondary resource record set, and if the primary resource record set is unhealthy, Route 53 always responds to DNS queries with the applicable value from the secondary resource record set\\. This is true regardless of the health of the associated endpoint\\.\nYou can't create non\\-failover resource record sets that have the same values for the `Name` and `Type` elements as failover resource record sets\\.  \nFor failover alias resource record sets, you must also include the `EvaluateTargetHealth` element and set the value to true\\.  \nFor more information about configuring failover for Route 53, see the following topics in the *Amazon Route 53 Developer Guide": "+  [Route 53 Health Checks and DNS Failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html)",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.1.failover",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.geolocation": {
        "Required": "No",
        "SampleValue": "TODO-GeoLocation",
        "UniqueKey": "route53.recordset.1.geolocation",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.healthcheckid": {
        "HealthCheckId`  <a name=\"cfn-route53-recordset-healthcheckid\"></a>\nIf you want Amazon Route 53 to return this resource record set in response to a DNS query only when the status of a health check is healthy, include the `HealthCheckId` element and specify the ID of the applicable health check\\.  \nRoute 53 determines whether a resource record set is healthy based on one of the following:  \n+ By periodically sending a request to the endpoint that is specified in the health check\n+ By aggregating the status of a specified group of health checks \\(calculated health checks\\)\n+ By determining the current state of a CloudWatch alarm \\(CloudWatch metric health checks\\)\nRoute 53 doesn't check the health of the endpoint that is specified in the resource record set, for example, the endpoint specified by the IP address in the `Value` element\\. When you add a `HealthCheckId` element to a resource record set, Route 53 checks the health of the endpoint that you specified in the health check\\. \nFor more information, see the following topics in the *Amazon Route 53 Developer Guide": "+  [How Amazon Route 53 Determines Whether an Endpoint Is Healthy](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html) \n+  [Route 53 Health Checks and DNS Failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html) \n **When to Specify HealthCheckId**   \nSpecifying a value for `HealthCheckId` is useful only when Route 53 is choosing between two or more resource record sets to respond to a DNS query, and you want Route 53 to base the choice in part on the status of a health check\\. Configuring health checks makes sense only in the following configurations:  \n+  **Non\\-alias resource record sets*",
        "Maximum": "64",
        "Required": "No",
        "UniqueKey": "route53.recordset.1.healthcheckid",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.hostedzoneid": {
        "Maximum": "32",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.1.hostedzoneid",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.hostedzonename": {
        "Maximum": "1024",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.1.hostedzonename",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.multivalueanswer": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "MultiValueAnswer`  <a name=\"cfn-route53-recordset-multivalueanswer\"></a>\n *Multivalue answer resource record sets only": "To route traffic approximately randomly to multiple resources, such as web servers, create one multivalue answer record for each resource and specify `true` for `MultiValueAnswer`\\. Note the following:  \n+ If you associate a health check with a multivalue answer resource record set, Amazon Route 53 responds to DNS queries with the corresponding IP address only when the health check is healthy\\.\n+ If you don't associate a health check with a multivalue answer record, Route 53 always considers the record to be healthy\\.\n+ Route 53 responds to DNS queries with up to eight healthy records; if you have eight or fewer healthy records, Route 53 responds to all DNS queries with all the healthy records\\.\n+ If you have more than eight healthy records, Route 53 responds to different DNS resolvers with different combinations of healthy records\\.\n+ When all records are unhealthy, Route 53 responds to DNS queries with up to eight unhealthy records\\.\n+ If a resource becomes unavailable after a resolver caches a response, client software typically tries another of the IP addresses in the response\\.\nYou can't create multivalue answer alias records\\.",
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "route53.recordset.1.multivalueanswer",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.name": {
        "Maximum": "1024",
        "Required": "Yes",
        "UniqueKey": "route53.recordset.1.name",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.region": {
        "Required": "No",
        "SampleValue": "TODO-Region",
        "UniqueKey": "route53.recordset.1.region",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.resourcerecords": {
        "Required": "No",
        "SampleValue": "TODO-ResourceRecords",
        "UniqueKey": "route53.recordset.1.resourcerecords",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.setidentifier": {
        "Maximum": "128",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "route53.recordset.1.setidentifier",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.ttl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.1.ttl",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.type": {
        "Required": "Yes",
        "Type`  <a name=\"cfn-route53-recordset-type\"></a>\nThe DNS record type\\. For information about different record types and how data is encoded for them, see [Supported DNS Resource Record Types](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html) in the *Amazon Route 53 Developer Guide*\\.  \nValid values for basic resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `DS` \\|`MX` \\| `NAPTR` \\| `NS` \\| `PTR` \\| `SOA` \\| `SPF` \\| `SRV` \\| `TXT`   \nValues for weighted, latency, geolocation, and failover resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`\\. When creating a group of weighted, latency, geolocation, or failover resource record sets, specify the same value for all of the resource record sets in the group\\.  \nValid values for multivalue answer resource record sets: `A` \\| `AAAA` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`   \nSPF records were formerly used to verify the identity of the sender of email messages\\. However, we no longer recommend that you create resource record sets for which the value of `Type` is `SPF`\\. RFC 7208, *Sender Policy Framework \\(SPF\\) for Authorizing Use of Domains in Email, Version 1*, has been updated to say, \"\\.\\.\\.\\[I\\]ts existence and mechanism defined in \\[RFC4408\\] have led to some interoperability issues\\. Accordingly, its use is no longer appropriate for SPF version 1; implementations are not to use it\\.\" In RFC 7208, see section 14\\.1, [The SPF DNS Record Type](http://tools.ietf.org/html/rfc7208#section-14.1)\\.\nValues for alias resource record sets:  \n+  **Amazon API Gateway custom regional APIs and edge\\-optimized APIs:** `A` \n+  **CloudFront distributions:** `A` \n\n  If IPv6 is enabled for the distribution, create two resource record sets to route traffic to your distribution, one with a value of `A` and one with a value of `AAAA`\\. \n+  **Amazon API Gateway environment that has a regionalized subdomain*": "A` \n+  **ELB load balancers:** `A` \\| `AAAA` \n+  **Amazon S3 buckets:** `A` \n+  **Amazon Virtual Private Cloud interface VPC endpoints** `A` \n+  **Another resource record set in this hosted zone:** Specify the type of the resource record set that you're creating the alias for\\. All values are supported except `NS` and `SOA`\\.",
        "UniqueKey": "route53.recordset.1.type",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.1.weight": {
        "Required": "No",
        "SampleValue": "TODO-Weight",
        "UniqueKey": "route53.recordset.1.weight",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.aliastarget": {
        "Required": "No",
        "SampleValue": "TODO-AliasTarget",
        "UniqueKey": "route53.recordset.aliastarget",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.comment": {
        "Maximum": "256",
        "Required": "No",
        "UniqueKey": "route53.recordset.comment",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.failover": {
        "Allowed values": "PRIMARY | SECONDARY",
        "Failover`  <a name=\"cfn-route53-recordset-failover\"></a>\n *Failover resource record sets only:* To configure failover, you add the `Failover` element to two resource record sets\\. For one resource record set, you specify `PRIMARY` as the value for `Failover`; for the other resource record set, you specify `SECONDARY`\\. In addition, you include the `HealthCheckId` element and specify the health check that you want Amazon Route 53 to perform for each resource record set\\.  \nExcept where noted, the following failover behaviors assume that you have included the `HealthCheckId` element in both resource record sets:  \n+ When the primary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the secondary resource record set\\.\n+ When the primary resource record set is unhealthy and the secondary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the secondary resource record set\\.\n+ When the secondary resource record set is unhealthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the primary resource record set\\.\n+ If you omit the `HealthCheckId` element for the secondary resource record set, and if the primary resource record set is unhealthy, Route 53 always responds to DNS queries with the applicable value from the secondary resource record set\\. This is true regardless of the health of the associated endpoint\\.\nYou can't create non\\-failover resource record sets that have the same values for the `Name` and `Type` elements as failover resource record sets\\.  \nFor failover alias resource record sets, you must also include the `EvaluateTargetHealth` element and set the value to true\\.  \nFor more information about configuring failover for Route 53, see the following topics in the *Amazon Route 53 Developer Guide": "+  [Route 53 Health Checks and DNS Failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html)",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.failover",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.geolocation": {
        "Required": "No",
        "SampleValue": "TODO-GeoLocation",
        "UniqueKey": "route53.recordset.geolocation",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.geolocation.1.continentcode": {
        "ContinentCode`  <a name=\"cfn-route53-recordset-geolocation-continentcode\"></a>\nFor geolocation resource record sets, a two\\-letter abbreviation that identifies a continent\\. Route 53 supports the following continent codes:  \n+ **AF*": "Africa\n+ **AN*",
        "Maximum": "2",
        "Minimum": "2",
        "Pattern": "^.{2,2}$",
        "Required": "No",
        "SampleValue": "TODO-route53.recordset.geolocation.1.ContinentCode",
        "Type": "String",
        "UniqueKey": "route53.recordset.geolocation.1.continentcode",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.geolocation.1.countrycode": {
        "Maximum": "2",
        "Minimum": "1",
        "Pattern": "^.{1,2}$",
        "Required": "No",
        "SampleValue": "TODO-route53.recordset.geolocation.1.CountryCode",
        "Type": "String",
        "UniqueKey": "route53.recordset.geolocation.1.countrycode",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.geolocation.1.subdivisioncode": {
        "Maximum": "3",
        "Minimum": "1",
        "Pattern": "^.{1,3}$",
        "Required": "No",
        "SampleValue": "TODO-route53.recordset.geolocation.1.SubdivisionCode",
        "Type": "String",
        "UniqueKey": "route53.recordset.geolocation.1.subdivisioncode",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.geolocation.continentcode": {
        "ContinentCode`  <a name=\"cfn-route53-recordsetgroup-geolocation-continentcode\"></a>\nFor geolocation resource record sets, a two\\-letter abbreviation that identifies a continent\\. Route 53 supports the following continent codes:  \n+ **AF*": "Africa\n+ **AN*",
        "Maximum": "2",
        "Minimum": "2",
        "Pattern": "^.{2,2}$",
        "Required": "No",
        "SampleValue": "TODO-route53.recordset.geolocation.ContinentCode",
        "Type": "String",
        "UniqueKey": "route53.recordset.geolocation.continentcode",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.geolocation.countrycode": {
        "Maximum": "2",
        "Minimum": "1",
        "Pattern": "^.{1,2}$",
        "Required": "No",
        "SampleValue": "TODO-route53.recordset.geolocation.CountryCode",
        "Type": "String",
        "UniqueKey": "route53.recordset.geolocation.countrycode",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.geolocation.subdivisioncode": {
        "Maximum": "3",
        "Minimum": "1",
        "Pattern": "^.{1,3}$",
        "Required": "No",
        "SampleValue": "TODO-route53.recordset.geolocation.SubdivisionCode",
        "Type": "String",
        "UniqueKey": "route53.recordset.geolocation.subdivisioncode",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.healthcheckid": {
        "HealthCheckId`  <a name=\"cfn-route53-recordset-healthcheckid\"></a>\nIf you want Amazon Route 53 to return this resource record set in response to a DNS query only when the status of a health check is healthy, include the `HealthCheckId` element and specify the ID of the applicable health check\\.  \nRoute 53 determines whether a resource record set is healthy based on one of the following:  \n+ By periodically sending a request to the endpoint that is specified in the health check\n+ By aggregating the status of a specified group of health checks \\(calculated health checks\\)\n+ By determining the current state of a CloudWatch alarm \\(CloudWatch metric health checks\\)\nRoute 53 doesn't check the health of the endpoint that is specified in the resource record set, for example, the endpoint specified by the IP address in the `Value` element\\. When you add a `HealthCheckId` element to a resource record set, Route 53 checks the health of the endpoint that you specified in the health check\\. \nFor more information, see the following topics in the *Amazon Route 53 Developer Guide": "+  [How Amazon Route 53 Determines Whether an Endpoint Is Healthy](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html) \n+  [Route 53 Health Checks and DNS Failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html) \n **When to Specify HealthCheckId**   \nSpecifying a value for `HealthCheckId` is useful only when Route 53 is choosing between two or more resource record sets to respond to a DNS query, and you want Route 53 to base the choice in part on the status of a health check\\. Configuring health checks makes sense only in the following configurations:  \n+  **Non\\-alias resource record sets*",
        "Maximum": "64",
        "Required": "No",
        "UniqueKey": "route53.recordset.healthcheckid",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.hostedzoneid": {
        "Maximum": "32",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.hostedzoneid",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.hostedzonename": {
        "Maximum": "32",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.hostedzonename",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.multivalueanswer": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "MultiValueAnswer`  <a name=\"cfn-route53-recordset-multivalueanswer\"></a>\n *Multivalue answer resource record sets only": "To route traffic approximately randomly to multiple resources, such as web servers, create one multivalue answer record for each resource and specify `true` for `MultiValueAnswer`\\. Note the following:  \n+ If you associate a health check with a multivalue answer resource record set, Amazon Route 53 responds to DNS queries with the corresponding IP address only when the health check is healthy\\.\n+ If you don't associate a health check with a multivalue answer record, Route 53 always considers the record to be healthy\\.\n+ Route 53 responds to DNS queries with up to eight healthy records; if you have eight or fewer healthy records, Route 53 responds to all DNS queries with all the healthy records\\.\n+ If you have more than eight healthy records, Route 53 responds to different DNS resolvers with different combinations of healthy records\\.\n+ When all records are unhealthy, Route 53 responds to DNS queries with up to eight unhealthy records\\.\n+ If a resource becomes unavailable after a resolver caches a response, client software typically tries another of the IP addresses in the response\\.\nYou can't create multivalue answer alias records\\.",
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "route53.recordset.multivalueanswer",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.name": {
        "Maximum": "1024",
        "Required": "Yes",
        "UniqueKey": "route53.recordset.name",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.region": {
        "Required": "No",
        "SampleValue": "TODO-Region",
        "UniqueKey": "route53.recordset.region",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.resourcerecords": {
        "Required": "No",
        "SampleValue": "TODO-ResourceRecords",
        "UniqueKey": "route53.recordset.resourcerecords",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.setidentifier": {
        "Maximum": "128",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "route53.recordset.setidentifier",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.ttl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.ttl",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.type": {
        "Required": "Yes",
        "Type`  <a name=\"cfn-route53-recordset-type\"></a>\nThe DNS record type\\. For information about different record types and how data is encoded for them, see [Supported DNS Resource Record Types](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html) in the *Amazon Route 53 Developer Guide*\\.  \nValid values for basic resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `DS` \\|`MX` \\| `NAPTR` \\| `NS` \\| `PTR` \\| `SOA` \\| `SPF` \\| `SRV` \\| `TXT`   \nValues for weighted, latency, geolocation, and failover resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`\\. When creating a group of weighted, latency, geolocation, or failover resource record sets, specify the same value for all of the resource record sets in the group\\.  \nValid values for multivalue answer resource record sets: `A` \\| `AAAA` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`   \nSPF records were formerly used to verify the identity of the sender of email messages\\. However, we no longer recommend that you create resource record sets for which the value of `Type` is `SPF`\\. RFC 7208, *Sender Policy Framework \\(SPF\\) for Authorizing Use of Domains in Email, Version 1*, has been updated to say, \"\\.\\.\\.\\[I\\]ts existence and mechanism defined in \\[RFC4408\\] have led to some interoperability issues\\. Accordingly, its use is no longer appropriate for SPF version 1; implementations are not to use it\\.\" In RFC 7208, see section 14\\.1, [The SPF DNS Record Type](http://tools.ietf.org/html/rfc7208#section-14.1)\\.\nValues for alias resource record sets:  \n+  **Amazon API Gateway custom regional APIs and edge\\-optimized APIs:** `A` \n+  **CloudFront distributions:** `A` \n\n  If IPv6 is enabled for the distribution, create two resource record sets to route traffic to your distribution, one with a value of `A` and one with a value of `AAAA`\\. \n+  **Amazon API Gateway environment that has a regionalized subdomain*": "A` \n+  **ELB load balancers:** `A` \\| `AAAA` \n+  **Amazon S3 buckets:** `A` \n+  **Amazon Virtual Private Cloud interface VPC endpoints** `A` \n+  **Another resource record set in this hosted zone:** Specify the type of the resource record set that you're creating the alias for\\. All values are supported except `NS` and `SOA`\\.",
        "UniqueKey": "route53.recordset.type",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.weight": {
        "Required": "No",
        "SampleValue": "TODO-Weight",
        "UniqueKey": "route53.recordset.weight",
        "UpdateRequires": "Replacement"
    },
    "route53resolver.resolverendpoint.ipaddressrequest.ip": {
        "Maximum": "36",
        "Minimum": "7",
        "Pattern": "^.{7,36}$",
        "Required": "No",
        "SampleValue": "TODO-route53resolver.resolverendpoint.ipaddressrequest.Ip",
        "Type": "String",
        "UniqueKey": "route53resolver.resolverendpoint.ipaddressrequest.ip",
        "UpdateRequires": "Replacement"
    },
    "route53resolver.resolverendpoint.ipaddressrequest.subnetid": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "^.{1,32}$",
        "Required": "Yes",
        "SampleValue": "TODO-route53resolver.resolverendpoint.ipaddressrequest.SubnetId",
        "Type": "String",
        "UniqueKey": "route53resolver.resolverendpoint.ipaddressrequest.subnetid",
        "UpdateRequires": "Replacement"
    },
    "route53resolver.resolverrule.targetaddress.ip": {
        "Maximum": "36",
        "Minimum": "7",
        "Pattern": "^.{7,36}$",
        "Required": "Yes",
        "SampleValue": "TODO-route53resolver.resolverrule.targetaddress.Ip",
        "Type": "String",
        "UniqueKey": "route53resolver.resolverrule.targetaddress.ip",
        "UpdateRequires": "Replacement"
    },
    "route53resolver.resolverrule.targetaddress.port": {
        "Maximum": "65535",
        "Minimum": "0",
        "Pattern": "^.{0,65535}$",
        "Required": "No",
        "SampleValue": "TODO-route53resolver.resolverrule.targetaddress.Port",
        "Type": "String",
        "UniqueKey": "route53resolver.resolverrule.targetaddress.port",
        "UpdateRequires": "Replacement"
    },
    "s3.accesspoint.publicaccessblockconfiguration.blockpublicacls": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.accesspoint.publicaccessblockconfiguration.blockpublicacls",
        "UpdateRequires": "Replacement"
    },
    "s3.accesspoint.publicaccessblockconfiguration.blockpublicpolicy": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.accesspoint.publicaccessblockconfiguration.blockpublicpolicy",
        "UpdateRequires": "Replacement"
    },
    "s3.accesspoint.publicaccessblockconfiguration.ignorepublicacls": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.accesspoint.publicaccessblockconfiguration.ignorepublicacls",
        "UpdateRequires": "Replacement"
    },
    "s3.accesspoint.publicaccessblockconfiguration.restrictpublicbuckets": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.accesspoint.publicaccessblockconfiguration.restrictpublicbuckets",
        "UpdateRequires": "Replacement"
    },
    "s3.accesspoint.vpcconfiguration.vpcid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.accesspoint.vpcconfiguration.vpcid",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.abortincompletemultipartupload.daysafterinitiation": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.abortincompletemultipartupload.daysafterinitiation",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.accelerateconfiguration": {
        "Required": "No",
        "SampleValue": "TODO-AccelerateConfiguration",
        "UniqueKey": "s3.bucket.accelerateconfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.accelerateconfiguration.accelerationstatus": {
        "Allowed values": "Enabled | Suspended",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.accelerateconfiguration.accelerationstatus",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.accesscontrol": {
        "Required": "No",
        "SampleValue": "TODO-AccessControl",
        "UniqueKey": "s3.bucket.accesscontrol",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.accesscontroltranslation.owner": {
        "Required": "Yes",
        "SampleValue": "TODO-Owner",
        "UniqueKey": "s3.bucket.accesscontroltranslation.owner",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.analyticsconfiguration.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.analyticsconfiguration.id",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.analyticsconfiguration.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.analyticsconfiguration.prefix",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.analyticsconfiguration.storageclassanalysis": {
        "Required": "Yes",
        "Type": "StorageClassAnalysis",
        "UniqueKey": "s3.bucket.analyticsconfiguration.storageclassanalysis",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.analyticsconfiguration.tagfilters": {
        "Required": "No",
        "Type": "List of [TagFilter",
        "UniqueKey": "s3.bucket.analyticsconfiguration.tagfilters",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.analyticsconfigurations": {
        "Required": "No",
        "Type": "List of [AnalyticsConfiguration",
        "UniqueKey": "s3.bucket.analyticsconfigurations",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.bucketencryption": {
        "Required": "No",
        "SampleValue": "TODO-BucketEncryption",
        "UniqueKey": "s3.bucket.bucketencryption",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.bucketencryption.serversideencryptionconfiguration": {
        "Required": "Yes",
        "Type": "List of [ServerSideEncryptionRule",
        "UniqueKey": "s3.bucket.bucketencryption.serversideencryptionconfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.bucketname": {
        "Required": "No",
        "SampleValue": "TODO-BucketName",
        "UniqueKey": "s3.bucket.bucketname",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.cors.corsrule.allowedheaders": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "s3.bucket.cors.corsrule.allowedheaders",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.cors.corsrule.allowedmethods": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "s3.bucket.cors.corsrule.allowedmethods",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.cors.corsrule.allowedorigins": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "s3.bucket.cors.corsrule.allowedorigins",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.cors.corsrule.exposedheaders": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "s3.bucket.cors.corsrule.exposedheaders",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.cors.corsrule.id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.cors.corsrule.id",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.cors.corsrule.maxage": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.cors.corsrule.maxage",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.cors.corsrules": {
        "Required": "Yes",
        "Type": "List of [CorsRule",
        "UniqueKey": "s3.bucket.cors.corsrules",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.corsconfiguration": {
        "Required": "No",
        "SampleValue": "TODO-CorsConfiguration",
        "UniqueKey": "s3.bucket.corsconfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.dataexport.destination": {
        "Required": "Yes",
        "Type": "Destination",
        "UniqueKey": "s3.bucket.dataexport.destination",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.dataexport.outputschemaversion": {
        "Allowed values": "V_1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.dataexport.outputschemaversion",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.defaultretention.days": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.defaultretention.days",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.defaultretention.mode": {
        "Required": "No",
        "SampleValue": "TODO-Mode",
        "UniqueKey": "s3.bucket.defaultretention.mode",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.defaultretention.years": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.defaultretention.years",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.deletemarkerreplication.status": {
        "Allowed values": "Disabled | Enabled",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.deletemarkerreplication.status",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.destination.bucketaccountid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.destination.bucketaccountid",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.destination.bucketarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.destination.bucketarn",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.destination.format": {
        "Allowed values": "CSV` \\| `ORC` \\| `Parquet",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.destination.format",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.destination.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.destination.prefix",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.encryptionconfiguration.replicakmskeyid": {
        "Required": "Yes",
        "SampleValue": "TODO-ReplicaKmsKeyID",
        "UniqueKey": "s3.bucket.encryptionconfiguration.replicakmskeyid",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.intelligenttieringconfiguration.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.intelligenttieringconfiguration.id",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.intelligenttieringconfiguration.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.intelligenttieringconfiguration.prefix",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.intelligenttieringconfiguration.status": {
        "Allowed values": "Disabled | Enabled",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.intelligenttieringconfiguration.status",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.intelligenttieringconfiguration.tagfilters": {
        "Required": "No",
        "Type": "List of [TagFilter",
        "UniqueKey": "s3.bucket.intelligenttieringconfiguration.tagfilters",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.intelligenttieringconfiguration.tierings": {
        "Required": "Yes",
        "Type": "List of [Tiering",
        "UniqueKey": "s3.bucket.intelligenttieringconfiguration.tierings",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.intelligenttieringconfigurations": {
        "Required": "No",
        "Type": "List of [IntelligentTieringConfiguration",
        "UniqueKey": "s3.bucket.intelligenttieringconfigurations",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.inventoryconfiguration.destination": {
        "Required": "Yes",
        "Type": "Destination",
        "UniqueKey": "s3.bucket.inventoryconfiguration.destination",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.inventoryconfiguration.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.bucket.inventoryconfiguration.enabled",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.inventoryconfiguration.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.inventoryconfiguration.id",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.inventoryconfiguration.includedobjectversions": {
        "Allowed values": "All | Current",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.inventoryconfiguration.includedobjectversions",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.inventoryconfiguration.optionalfields": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "s3.bucket.inventoryconfiguration.optionalfields",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.inventoryconfiguration.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.inventoryconfiguration.prefix",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.inventoryconfiguration.schedulefrequency": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.inventoryconfiguration.schedulefrequency",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.inventoryconfigurations": {
        "Required": "No",
        "SampleValue": "TODO-InventoryConfigurations",
        "UniqueKey": "s3.bucket.inventoryconfigurations",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.abortincompletemultipartupload": {
        "Required": "Conditional",
        "Type": "AbortIncompleteMultipartUpload",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.abortincompletemultipartupload",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.expirationdate": {
        "Required": "Conditional",
        "Type": "Timestamp",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.expirationdate",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.expirationindays": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.expirationindays",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.id",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.noncurrentversionexpirationindays": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.noncurrentversionexpirationindays",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition": {
        "Required": "Conditional",
        "Type": "NoncurrentVersionTransition",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition.storageclass": {
        "Allowed values": "DEEP_ARCHIVE | GLACIER | INTELLIGENT_TIERING | ONEZONE_IA | STANDARD_IA",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition.storageclass",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition.transitionindays": {
        "Required": "Yes",
        "SampleValue": "TODO-TransitionInDays",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition.transitionindays",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.noncurrentversiontransitions": {
        "Required": "Conditional",
        "Type": "List of [NoncurrentVersionTransition",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.noncurrentversiontransitions",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.prefix",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.status": {
        "Allowed values": "Disabled | Enabled",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.status",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.tagfilters": {
        "Required": "No",
        "Type": "List of [TagFilter",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.tagfilters",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.transition": {
        "Required": "Conditional",
        "Type": "Transition",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.transition",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.transition.storageclass": {
        "Allowed values": "DEEP_ARCHIVE | GLACIER | INTELLIGENT_TIERING | ONEZONE_IA | STANDARD_IA",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.transition.storageclass",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.transition.transitiondate": {
        "Required": "Conditional",
        "Type": "Timestamp",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.transition.transitiondate",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.transition.transitionindays": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.transition.transitionindays",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rule.transitions": {
        "Required": "Conditional",
        "Type": "List of [Transition",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.transitions",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfig.rules": {
        "Required": "Yes",
        "Type": "List of [Rule",
        "UniqueKey": "s3.bucket.lifecycleconfig.rules",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.lifecycleconfiguration": {
        "Required": "No",
        "SampleValue": "TODO-LifecycleConfiguration",
        "UniqueKey": "s3.bucket.lifecycleconfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.loggingconfig.destinationbucketname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.loggingconfig.destinationbucketname",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.loggingconfig.logfileprefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.loggingconfig.logfileprefix",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.loggingconfiguration": {
        "Required": "No",
        "Type": "LoggingConfiguration",
        "UniqueKey": "s3.bucket.loggingconfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.metrics.eventthreshold": {
        "Required": "No",
        "Type": "ReplicationTimeValue",
        "UniqueKey": "s3.bucket.metrics.eventthreshold",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.metrics.status": {
        "Allowed values": "Disabled | Enabled",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.metrics.status",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.metricsconfiguration.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.metricsconfiguration.id",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.metricsconfiguration.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.metricsconfiguration.prefix",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.metricsconfiguration.tagfilters": {
        "Required": "No",
        "Type": "List of [TagFilter",
        "UniqueKey": "s3.bucket.metricsconfiguration.tagfilters",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.metricsconfigurations": {
        "Required": "No",
        "SampleValue": "TODO-MetricsConfigurations",
        "UniqueKey": "s3.bucket.metricsconfigurations",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.lambdaconfig.event": {
        "Required": "Yes",
        "SampleValue": "TODO-Event",
        "UniqueKey": "s3.bucket.notificationconfig.lambdaconfig.event",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.lambdaconfig.filter": {
        "Required": "No",
        "Type": "NotificationFilter",
        "UniqueKey": "s3.bucket.notificationconfig.lambdaconfig.filter",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.lambdaconfig.function": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.notificationconfig.lambdaconfig.function",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.lambdaconfigurations": {
        "Required": "No",
        "Type": "List of [LambdaConfiguration",
        "UniqueKey": "s3.bucket.notificationconfig.lambdaconfigurations",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.queueconfig.event": {
        "Required": "Yes",
        "SampleValue": "TODO-Event",
        "UniqueKey": "s3.bucket.notificationconfig.queueconfig.event",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.queueconfig.filter": {
        "Required": "No",
        "Type": "NotificationFilter",
        "UniqueKey": "s3.bucket.notificationconfig.queueconfig.filter",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.queueconfig.queue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.notificationconfig.queueconfig.queue",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.queueconfigurations": {
        "Required": "No",
        "Type": "List of [QueueConfiguration",
        "UniqueKey": "s3.bucket.notificationconfig.queueconfigurations",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.topicconfig.event": {
        "Required": "Yes",
        "SampleValue": "TODO-Event",
        "UniqueKey": "s3.bucket.notificationconfig.topicconfig.event",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.topicconfig.filter": {
        "Required": "No",
        "Type": "NotificationFilter",
        "UniqueKey": "s3.bucket.notificationconfig.topicconfig.filter",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.topicconfig.topic": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.notificationconfig.topicconfig.topic",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfig.topicconfigurations": {
        "Required": "No",
        "Type": "List of [TopicConfiguration",
        "UniqueKey": "s3.bucket.notificationconfig.topicconfigurations",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfiguration": {
        "Required": "No",
        "Type": "NotificationConfiguration",
        "UniqueKey": "s3.bucket.notificationconfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfiguration.config.filter.s3key": {
        "Required": "Yes",
        "Type": "S3KeyFilter",
        "UniqueKey": "s3.bucket.notificationconfiguration.config.filter.s3key",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfiguration.config.filter.s3key.rules": {
        "Required": "Yes",
        "Type": "List of [FilterRule",
        "UniqueKey": "s3.bucket.notificationconfiguration.config.filter.s3key.rules",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfiguration.config.filter.s3key.rules.name": {
        "Required": "Yes",
        "SampleValue": "TODO-Name",
        "UniqueKey": "s3.bucket.notificationconfiguration.config.filter.s3key.rules.name",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.notificationconfiguration.config.filter.s3key.rules.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.notificationconfiguration.config.filter.s3key.rules.value",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.objectlockconfiguration": {
        "Required": "No",
        "SampleValue": "TODO-ObjectLockConfiguration",
        "UniqueKey": "s3.bucket.objectlockconfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.objectlockconfiguration.objectlockenabled": {
        "Allowed values": "Enabled",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.objectlockconfiguration.objectlockenabled",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.objectlockconfiguration.rule": {
        "Required": "No",
        "Type": "ObjectLockRule",
        "UniqueKey": "s3.bucket.objectlockconfiguration.rule",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.objectlockenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.bucket.objectlockenabled",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.objectlockrule.defaultretention": {
        "Required": "No",
        "Type": "DefaultRetention",
        "UniqueKey": "s3.bucket.objectlockrule.defaultretention",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.ownershipcontrols": {
        "Required": "No",
        "Type": "OwnershipControls",
        "UniqueKey": "s3.bucket.ownershipcontrols",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.ownershipcontrols.rules": {
        "Required": "Yes",
        "Type": "List of [OwnershipControlsRule",
        "UniqueKey": "s3.bucket.ownershipcontrols.rules",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.ownershipcontrolsrule.objectownership": {
        "Allowed values": "ObjectWriter` \\| `BucketOwnerPreferred",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.ownershipcontrolsrule.objectownership",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.publicaccessblockconfiguration": {
        "Required": "No",
        "Type": "PublicAccessBlockConfiguration",
        "UniqueKey": "s3.bucket.publicaccessblockconfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.publicaccessblockconfiguration.blockpublicacls": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.bucket.publicaccessblockconfiguration.blockpublicacls",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.publicaccessblockconfiguration.blockpublicpolicy": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.bucket.publicaccessblockconfiguration.blockpublicpolicy",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.publicaccessblockconfiguration.ignorepublicacls": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.bucket.publicaccessblockconfiguration.ignorepublicacls",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.publicaccessblockconfiguration.restrictpublicbuckets": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.bucket.publicaccessblockconfiguration.restrictpublicbuckets",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicamodifications.status": {
        "Allowed values": "Enabled` \\| `Disabled",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.replicamodifications.status",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration": {
        "Required": "No",
        "Type": "ReplicationConfiguration",
        "UniqueKey": "s3.bucket.replicationconfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.role": {
        "Required": "Yes",
        "SampleValue": "TODO-Role",
        "UniqueKey": "s3.bucket.replicationconfiguration.role",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules": {
        "Required": "Yes",
        "Type": "List of [ReplicationRule",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.deletemarkerreplication": {
        "Required": "No",
        "Type": "DeleteMarkerReplication",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.deletemarkerreplication",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.destination": {
        "Required": "Yes",
        "Type": "ReplicationDestination",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.destination.accesscontroltranslation": {
        "Required": "No",
        "Type": "AccessControlTranslation",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination.accesscontroltranslation",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.destination.account": {
        "Required": "Conditional",
        "SampleValue": "TODO-Account",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination.account",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.destination.bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination.bucket",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.destination.encryptionconfiguration": {
        "Required": "No",
        "Type": "EncryptionConfiguration",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination.encryptionconfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.destination.metrics": {
        "Required": "No",
        "Type": "Metrics",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination.metrics",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.destination.replicationtime": {
        "Required": "No",
        "Type": "ReplicationTime",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination.replicationtime",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.destination.storageclass": {
        "Required": "No",
        "SampleValue": "TODO-StorageClass",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination.storageclass",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.filter": {
        "Required": "No",
        "Type": "ReplicationRuleFilter",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.filter",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.id",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.prefix",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.priority": {
        "Required": "No",
        "SampleValue": "TODO-Priority",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.priority",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.sourceselectioncriteria": {
        "Required": "No",
        "Type": "SourceSelectionCriteria",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.sourceselectioncriteria",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationconfiguration.rules.status": {
        "Allowed values": "Disabled | Enabled",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.status",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationruleandoperator.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.replicationruleandoperator.prefix",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationruleandoperator.tagfilters": {
        "Required": "No",
        "Type": "List of [TagFilter",
        "UniqueKey": "s3.bucket.replicationruleandoperator.tagfilters",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationrulefilter.and": {
        "Required": "No",
        "Type": "ReplicationRuleAndOperator",
        "UniqueKey": "s3.bucket.replicationrulefilter.and",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationrulefilter.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.replicationrulefilter.prefix",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationrulefilter.tagfilter": {
        "Required": "No",
        "Type": "TagFilter",
        "UniqueKey": "s3.bucket.replicationrulefilter.tagfilter",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationtime.status": {
        "Allowed values": "Disabled | Enabled",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.replicationtime.status",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationtime.time": {
        "Required": "Yes",
        "Type": "ReplicationTimeValue",
        "UniqueKey": "s3.bucket.replicationtime.time",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.replicationtimevalue.minutes": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.replicationtimevalue.minutes",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.serversideencryptionbydefault.kmsmasterkeyid": {
        "Required": "No",
        "SampleValue": "TODO-KMSMasterKeyID",
        "UniqueKey": "s3.bucket.serversideencryptionbydefault.kmsmasterkeyid",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.serversideencryptionbydefault.ssealgorithm": {
        "Allowed values": "AES256 | aws:kms",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.serversideencryptionbydefault.ssealgorithm",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.serversideencryptionrule.bucketkeyenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "s3.bucket.serversideencryptionrule.bucketkeyenabled",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.serversideencryptionrule.serversideencryptionbydefault": {
        "Required": "No",
        "Type": "ServerSideEncryptionByDefault",
        "UniqueKey": "s3.bucket.serversideencryptionrule.serversideencryptionbydefault",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.sourceselectioncriteria.replicamodifications": {
        "Required": "No",
        "Type": "ReplicaModifications",
        "UniqueKey": "s3.bucket.sourceselectioncriteria.replicamodifications",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.sourceselectioncriteria.ssekmsencryptedobjects": {
        "Required": "No",
        "Type": "SseKmsEncryptedObjects",
        "UniqueKey": "s3.bucket.sourceselectioncriteria.ssekmsencryptedobjects",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.ssekmsencryptedobjects.status": {
        "Allowed values": "Disabled | Enabled",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.ssekmsencryptedobjects.status",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.storageclassanalysis.dataexport": {
        "Required": "No",
        "Type": "DataExport",
        "UniqueKey": "s3.bucket.storageclassanalysis.dataexport",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.tagfilter.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.tagfilter.key",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.tagfilter.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.tagfilter.value",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "s3.bucket.tags",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.tiering.accesstier": {
        "Allowed values": "ARCHIVE_ACCESS | DEEP_ARCHIVE_ACCESS",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.tiering.accesstier",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.tiering.days": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.tiering.days",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.versioningconfig.status": {
        "Allowed values": "Enabled | Suspended",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.versioningconfig.status",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.versioningconfiguration": {
        "Required": "No",
        "Type": "VersioningConfiguration",
        "UniqueKey": "s3.bucket.versioningconfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.websiteconfiguration": {
        "Required": "No",
        "Type": "WebsiteConfiguration",
        "UniqueKey": "s3.bucket.websiteconfiguration",
        "UpdateRequires": "Replacement"
    },
    "s3.policy.bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.policy.bucket",
        "UpdateRequires": "Replacement"
    },
    "s3.policy.policydocument": {
        "Required": "Yes",
        "SampleValue": "TODO-PolicyDocument",
        "UniqueKey": "s3.policy.policydocument",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.accountlevel.activitymetrics": {
        "Required": "No",
        "Type": "ActivityMetrics",
        "UniqueKey": "s3.storagelens.accountlevel.activitymetrics",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.accountlevel.bucketlevel": {
        "Required": "Yes",
        "Type": "BucketLevel",
        "UniqueKey": "s3.storagelens.accountlevel.bucketlevel",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.activitymetrics.isenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.storagelens.activitymetrics.isenabled",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.awsorg.arn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.storagelens.awsorg.arn",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.bucketlevel.activitymetrics": {
        "Required": "No",
        "Type": "ActivityMetrics",
        "UniqueKey": "s3.storagelens.bucketlevel.activitymetrics",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.bucketlevel.prefixlevel": {
        "Required": "No",
        "Type": "PrefixLevel",
        "UniqueKey": "s3.storagelens.bucketlevel.prefixlevel",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.bucketsandregions.buckets": {
        "Required": "No",
        "SampleValue": "TODO-Buckets",
        "UniqueKey": "s3.storagelens.bucketsandregions.buckets",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.bucketsandregions.regions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "s3.storagelens.bucketsandregions.regions",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.dataexport.s3bucketdestination": {
        "Required": "Yes",
        "Type": "S3BucketDestination",
        "UniqueKey": "s3.storagelens.dataexport.s3bucketdestination",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.prefixlevel.storagemetrics": {
        "Required": "Yes",
        "Type": "PrefixLevelStorageMetrics",
        "UniqueKey": "s3.storagelens.prefixlevel.storagemetrics",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.prefixlevelstoragemetrics.isenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.storagelens.prefixlevelstoragemetrics.isenabled",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.prefixlevelstoragemetrics.selectioncriteria": {
        "Required": "No",
        "Type": "SelectionCriteria",
        "UniqueKey": "s3.storagelens.prefixlevelstoragemetrics.selectioncriteria",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.s3bucketdestination.accountid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.storagelens.s3bucketdestination.accountid",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.s3bucketdestination.arn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.storagelens.s3bucketdestination.arn",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.s3bucketdestination.encryption": {
        "Required": "No",
        "Type": "Encryption",
        "UniqueKey": "s3.storagelens.s3bucketdestination.encryption",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.s3bucketdestination.format": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.storagelens.s3bucketdestination.format",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.s3bucketdestination.outputschemaversion": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.storagelens.s3bucketdestination.outputschemaversion",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.s3bucketdestination.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.storagelens.s3bucketdestination.prefix",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.selectioncriteria.delimiter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.storagelens.selectioncriteria.delimiter",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.selectioncriteria.maxdepth": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "s3.storagelens.selectioncriteria.maxdepth",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.selectioncriteria.minstoragebytespercentage": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "s3.storagelens.selectioncriteria.minstoragebytespercentage",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.storagelensconfiguration.accountlevel": {
        "Required": "Yes",
        "Type": "AccountLevel",
        "UniqueKey": "s3.storagelens.storagelensconfiguration.accountlevel",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.storagelensconfiguration.awsorg": {
        "Required": "No",
        "Type": "AwsOrg",
        "UniqueKey": "s3.storagelens.storagelensconfiguration.awsorg",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.storagelensconfiguration.dataexport": {
        "Required": "No",
        "Type": "DataExport",
        "UniqueKey": "s3.storagelens.storagelensconfiguration.dataexport",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.storagelensconfiguration.exclude": {
        "Required": "No",
        "Type": "BucketsAndRegions",
        "UniqueKey": "s3.storagelens.storagelensconfiguration.exclude",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.storagelensconfiguration.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.storagelens.storagelensconfiguration.id",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.storagelensconfiguration.include": {
        "Required": "No",
        "Type": "BucketsAndRegions",
        "UniqueKey": "s3.storagelens.storagelensconfiguration.include",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.storagelensconfiguration.isenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.storagelens.storagelensconfiguration.isenabled",
        "UpdateRequires": "Replacement"
    },
    "s3.storagelens.storagelensconfiguration.storagelensarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.storagelens.storagelensconfiguration.storagelensarn",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.errordocument": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.errordocument",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.indexdocument": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.indexdocument",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.redirectallrequeststo": {
        "Required": "No",
        "Type": "RedirectAllRequestsTo",
        "UniqueKey": "s3.websiteconfiguration.redirectallrequeststo",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.redirectallrequeststo.hostname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.redirectallrequeststo.hostname",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.redirectallrequeststo.protocol": {
        "Allowed values": "http | https",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.redirectallrequeststo.protocol",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.routingrules": {
        "Required": "No",
        "Type": "List of [RoutingRule",
        "UniqueKey": "s3.websiteconfiguration.routingrules",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.routingrules.redirectrule": {
        "Required": "Yes",
        "Type": "RedirectRule",
        "UniqueKey": "s3.websiteconfiguration.routingrules.redirectrule",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.routingrules.redirectrule.hostname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.redirectrule.hostname",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.routingrules.redirectrule.httpredirectcode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.redirectrule.httpredirectcode",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.routingrules.redirectrule.protocol": {
        "Allowed values": "http | https",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.redirectrule.protocol",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.routingrules.redirectrule.replacekeyprefixwith": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.redirectrule.replacekeyprefixwith",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.routingrules.redirectrule.replacekeywith": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.redirectrule.replacekeywith",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.routingrules.routingrulecondition": {
        "Required": "No",
        "Type": "RoutingRuleCondition",
        "UniqueKey": "s3.websiteconfiguration.routingrules.routingrulecondition",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.routingrules.routingrulecondition.httperrorcodereturnedequals": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.routingrulecondition.httperrorcodereturnedequals",
        "UpdateRequires": "Replacement"
    },
    "s3.websiteconfiguration.routingrules.routingrulecondition.keyprefixequals": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.routingrulecondition.keyprefixequals",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.coderepository.gitconfig.branch": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "[^ ~^:?*\\[]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.coderepository.gitconfig.branch",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.coderepository.gitconfig.repositoryurl": {
        "Pattern": "^https://([^/]+)/?(.*)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.coderepository.gitconfig.repositoryurl",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.coderepository.gitconfig.secretarn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:aws[a-z\\-]*:secretsmanager:[a-z0-9\\-]*:[0-9]{12}:secret:.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.coderepository.gitconfig.secretarn",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.clusterconfig.instancecount": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.clusterconfig.instancecount",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.clusterconfig.instancetype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.clusterconfig.instancetype",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.clusterconfig.volumekmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.clusterconfig.volumekmskeyid",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.clusterconfig.volumesizeingb": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.clusterconfig.volumesizeingb",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.constraintsresource.s3uri": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.constraintsresource.s3uri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.dataqualityappspecification.containerarguments": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.dataqualityappspecification.containerarguments",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.dataqualityappspecification.containerentrypoint": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.dataqualityappspecification.containerentrypoint",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.dataqualityappspecification.environment": {
        "Required": "No",
        "Type": "Environment",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.dataqualityappspecification.environment",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.dataqualityappspecification.imageuri": {
        "Maximum": "255",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.dataqualityappspecification.imageuri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.dataqualityappspecification.postanalyticsprocessorsourceuri": {
        "Maximum": "1024",
        "Pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.dataqualityappspecification.postanalyticsprocessorsourceuri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.dataqualityappspecification.recordpreprocessorsourceuri": {
        "Maximum": "1024",
        "Pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.dataqualityappspecification.recordpreprocessorsourceuri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.dataqualitybaselineconfig.baseliningjobname": {
        "Maximum": "63",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.dataqualitybaselineconfig.baseliningjobname",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.dataqualitybaselineconfig.constraintsresource": {
        "Required": "No",
        "Type": "ConstraintsResource",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.dataqualitybaselineconfig.constraintsresource",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.dataqualitybaselineconfig.statisticsresource": {
        "Required": "No",
        "Type": "StatisticsResource",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.dataqualitybaselineconfig.statisticsresource",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.dataqualityjobinput.endpointinput": {
        "Required": "Yes",
        "Type": "EndpointInput",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.dataqualityjobinput.endpointinput",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.endpointinput.endpointname": {
        "Maximum": "63",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.endpointinput.endpointname",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.endpointinput.localpath": {
        "Maximum": "256",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.endpointinput.localpath",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.endpointinput.s3datadistributiontype": {
        "Allowed values": "FullyReplicated | ShardedByS3Key",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.endpointinput.s3datadistributiontype",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.endpointinput.s3inputmode": {
        "Allowed values": "File | Pipe",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.endpointinput.s3inputmode",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.monitoringoutput.s3output": {
        "Required": "Yes",
        "Type": "S3Output",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.monitoringoutput.s3output",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.monitoringoutputconfig.kmskeyid": {
        "Maximum": "2048",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.monitoringoutputconfig.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.monitoringoutputconfig.monitoringoutputs": {
        "Maximum": "1",
        "Required": "Yes",
        "Type": "List of [MonitoringOutput",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.monitoringoutputconfig.monitoringoutputs",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.monitoringresources.clusterconfig": {
        "Required": "Yes",
        "Type": "ClusterConfig",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.monitoringresources.clusterconfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.networkconfig.enableintercontainertrafficencryption": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.networkconfig.enableintercontainertrafficencryption",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.networkconfig.enablenetworkisolation": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.networkconfig.enablenetworkisolation",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.networkconfig.vpcconfig": {
        "Required": "No",
        "Type": "VpcConfig",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.networkconfig.vpcconfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.s3output.localpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.s3output.localpath",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.s3output.s3uploadmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.s3output.s3uploadmode",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.s3output.s3uri": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.s3output.s3uri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.statisticsresource.s3uri": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.statisticsresource.s3uri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.stoppingcondition.maxruntimeinseconds": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.stoppingcondition.maxruntimeinseconds",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.vpcconfig.securitygroupids": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.vpcconfig.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.dataqualityjobdefinition.vpcconfig.subnets": {
        "Maximum": "16",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sagemaker.dataqualityjobdefinition.vpcconfig.subnets",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.device.device.description": {
        "Maximum": "40",
        "Minimum": "1",
        "Pattern": "[\\S\\s]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.device.device.description",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.device.device.devicename": {
        "Maximum": "63",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.device.device.devicename",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.device.device.iotthingname": {
        "Maximum": "128",
        "Pattern": "[a-zA-Z0-9:_-]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.device.device.iotthingname",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.devicefleet.edgeoutputconfig.kmskeyid": {
        "Maximum": "2048",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.devicefleet.edgeoutputconfig.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.devicefleet.edgeoutputconfig.s3outputlocation": {
        "Maximum": "1024",
        "Pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.devicefleet.edgeoutputconfig.s3outputlocation",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpoint.alarm.alarmname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^(?!\\s*$).+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.endpoint.alarm.alarmname",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpoint.autorollbackconfig.alarms": {
        "Maximum": "10",
        "Required": "Yes",
        "Type": "List of [Alarm",
        "UniqueKey": "sagemaker.endpoint.autorollbackconfig.alarms",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpoint.bluegreenupdatepolicy.maximumexecutiontimeoutinseconds": {
        "Maximum": "14400",
        "Minimum": "600",
        "Pattern": "^[600,14400]}$",
        "Required": "No",
        "SampleValue": "600...14400",
        "Type": "Integer",
        "UniqueKey": "sagemaker.endpoint.bluegreenupdatepolicy.maximumexecutiontimeoutinseconds",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpoint.bluegreenupdatepolicy.terminationwaitinseconds": {
        "Maximum": "3600",
        "Minimum": "0",
        "Pattern": "^[0,3600]}$",
        "Required": "No",
        "SampleValue": "0...3600",
        "Type": "Integer",
        "UniqueKey": "sagemaker.endpoint.bluegreenupdatepolicy.terminationwaitinseconds",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpoint.bluegreenupdatepolicy.trafficroutingconfiguration": {
        "Required": "Yes",
        "Type": "TrafficRoutingConfig",
        "UniqueKey": "sagemaker.endpoint.bluegreenupdatepolicy.trafficroutingconfiguration",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpoint.capacitysize.type": {
        "Allowed values": "CAPACITY_PERCENT | INSTANCE_COUNT",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.endpoint.capacitysize.type",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpoint.capacitysize.value": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.endpoint.capacitysize.value",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpoint.deploymentconfig.autorollbackconfiguration": {
        "Required": "No",
        "Type": "AutoRollbackConfig",
        "UniqueKey": "sagemaker.endpoint.deploymentconfig.autorollbackconfiguration",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpoint.deploymentconfig.bluegreenupdatepolicy": {
        "Required": "Yes",
        "Type": "BlueGreenUpdatePolicy",
        "UniqueKey": "sagemaker.endpoint.deploymentconfig.bluegreenupdatepolicy",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpoint.trafficroutingconfig.canarysize": {
        "Required": "No",
        "Type": "CapacitySize",
        "UniqueKey": "sagemaker.endpoint.trafficroutingconfig.canarysize",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpoint.trafficroutingconfig.type": {
        "Allowed values": "ALL_AT_ONCE | CANARY",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.endpoint.trafficroutingconfig.type",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpoint.trafficroutingconfig.waitintervalinseconds": {
        "Maximum": "3600",
        "Minimum": "0",
        "Pattern": "^[0,3600]}$",
        "Required": "No",
        "SampleValue": "0...3600",
        "Type": "Integer",
        "UniqueKey": "sagemaker.endpoint.trafficroutingconfig.waitintervalinseconds",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpoint.variantproperty.variantpropertytype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.endpoint.variantproperty.variantpropertytype",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.captureoption.capturemode": {
        "Allowed values": "Input | Output",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.endpointconfig.captureoption.capturemode",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.datacaptureconfig.capturecontenttypeheader": {
        "Required": "No",
        "Type": "CaptureContentTypeHeader",
        "UniqueKey": "sagemaker.endpointconfig.datacaptureconfig.capturecontenttypeheader",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.datacaptureconfig.capturecontenttypeheader.csvcontenttypes": {
        "Maximum": "10",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "sagemaker.endpointconfig.datacaptureconfig.capturecontenttypeheader.csvcontenttypes",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.datacaptureconfig.capturecontenttypeheader.jsoncontenttypes": {
        "Maximum": "10",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "sagemaker.endpointconfig.datacaptureconfig.capturecontenttypeheader.jsoncontenttypes",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.datacaptureconfig.captureoptions": {
        "Maximum": "2",
        "Required": "Yes",
        "Type": "List of [CaptureOption",
        "UniqueKey": "sagemaker.endpointconfig.datacaptureconfig.captureoptions",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.datacaptureconfig.destinations3uri": {
        "Maximum": "512",
        "Pattern": "^(https|s3)://([^/])/?(.*)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.endpointconfig.datacaptureconfig.destinations3uri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.datacaptureconfig.enablecapture": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "sagemaker.endpointconfig.datacaptureconfig.enablecapture",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.datacaptureconfig.initialsamplingpercentage": {
        "Maximum": "100",
        "Minimum": "0",
        "Pattern": "^[0,100]}$",
        "Required": "Yes",
        "SampleValue": "0...100",
        "Type": "Integer",
        "UniqueKey": "sagemaker.endpointconfig.datacaptureconfig.initialsamplingpercentage",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.datacaptureconfig.kmskeyid": {
        "Maximum": "2048",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.endpointconfig.datacaptureconfig.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.productionvariant.acceleratortype": {
        "Allowed values": "ml.eia1.large | ml.eia1.medium | ml.eia1.xlarge | ml.eia2.large | ml.eia2.medium | ml.eia2.xlarge",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.endpointconfig.productionvariant.acceleratortype",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.productionvariant.initialinstancecount": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.endpointconfig.productionvariant.initialinstancecount",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.productionvariant.initialvariantweight": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "sagemaker.endpointconfig.productionvariant.initialvariantweight",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.productionvariant.instancetype": {
        "Allowed values": "ml.c4.2xlarge | ml.c4.4xlarge | ml.c4.8xlarge | ml.c4.large | ml.c4.xlarge | ml.c5.18xlarge | ml.c5.2xlarge | ml.c5.4xlarge | ml.c5.9xlarge | ml.c5.large | ml.c5.xlarge | ml.c5d.18xlarge | ml.c5d.2xlarge | ml.c5d.4xlarge | ml.c5d.9xlarge | ml.c5d.large | ml.c5d.xlarge | ml.g4dn.12xlarge | ml.g4dn.16xlarge | ml.g4dn.2xlarge | ml.g4dn.4xlarge | ml.g4dn.8xlarge | ml.g4dn.xlarge | ml.inf1.24xlarge | ml.inf1.2xlarge | ml.inf1.6xlarge | ml.inf1.xlarge | ml.m4.10xlarge | ml.m4.16xlarge | ml.m4.2xlarge | ml.m4.4xlarge | ml.m4.xlarge | ml.m5.12xlarge | ml.m5.24xlarge | ml.m5.2xlarge | ml.m5.4xlarge | ml.m5.large | ml.m5.xlarge | ml.m5d.12xlarge | ml.m5d.24xlarge | ml.m5d.2xlarge | ml.m5d.4xlarge | ml.m5d.large | ml.m5d.xlarge | ml.p2.16xlarge | ml.p2.8xlarge | ml.p2.xlarge | ml.p3.16xlarge | ml.p3.2xlarge | ml.p3.8xlarge | ml.r5.12xlarge | ml.r5.24xlarge | ml.r5.2xlarge | ml.r5.4xlarge | ml.r5.large | ml.r5.xlarge | ml.r5d.12xlarge | ml.r5d.24xlarge | ml.r5d.2xlarge | ml.r5d.4xlarge | ml.r5d.large | ml.r5d.xlarge | ml.t2.2xlarge | ml.t2.large | ml.t2.medium | ml.t2.xlarge",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.endpointconfig.productionvariant.instancetype",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.productionvariant.modelname": {
        "Maximum": "63",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.endpointconfig.productionvariant.modelname",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.productionvariant.variantname": {
        "Maximum": "63",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.endpointconfig.productionvariant.variantname",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.containerdefinition.containerhostname": {
        "Maximum": "63",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.model.containerdefinition.containerhostname",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.containerdefinition.environment": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "sagemaker.model.containerdefinition.environment",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.containerdefinition.image": {
        "Maximum": "255",
        "Pattern": "[\\S]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.model.containerdefinition.image",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.containerdefinition.imageconfig": {
        "Required": "No",
        "Type": "ImageConfig",
        "UniqueKey": "sagemaker.model.containerdefinition.imageconfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.containerdefinition.imageconfig.repositoryaccessmode": {
        "Allowed values": "Platform | Vpc",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.model.containerdefinition.imageconfig.repositoryaccessmode",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.containerdefinition.mode": {
        "Allowed values": "MultiModel | SingleModel",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.model.containerdefinition.mode",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.containerdefinition.modeldataurl": {
        "Maximum": "1024",
        "Pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "Required": "No",
        "UniqueKey": "sagemaker.model.containerdefinition.modeldataurl",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.containerdefinition.modelpackagename": {
        "Maximum": "176",
        "Minimum": "1",
        "Pattern": "(arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:[a-z\\-]*\\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)(\\/[0-9]{1,5})?$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.model.containerdefinition.modelpackagename",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.containerdefinition.multimodelconfig": {
        "Required": "No",
        "Type": "MultiModelConfig",
        "UniqueKey": "sagemaker.model.containerdefinition.multimodelconfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.containerdefinition.multimodelconfig.modelcachesetting": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.model.containerdefinition.multimodelconfig.modelcachesetting",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.vpcconfig.securitygroupids": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sagemaker.model.vpcconfig.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.vpcconfig.subnets": {
        "Maximum": "16",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sagemaker.model.vpcconfig.subnets",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.clusterconfig.instancecount": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.clusterconfig.instancecount",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.clusterconfig.instancetype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.clusterconfig.instancetype",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.clusterconfig.volumekmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.clusterconfig.volumekmskeyid",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.clusterconfig.volumesizeingb": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.clusterconfig.volumesizeingb",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.constraintsresource.s3uri": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.constraintsresource.s3uri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.endpointinput.endpointname": {
        "Maximum": "63",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.endpointinput.endpointname",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.endpointinput.endtimeoffset": {
        "Maximum": "15",
        "Minimum": "1",
        "Pattern": "^.?P.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.endpointinput.endtimeoffset",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.endpointinput.featuresattribute": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.endpointinput.featuresattribute",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.endpointinput.inferenceattribute": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.endpointinput.inferenceattribute",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.endpointinput.localpath": {
        "Maximum": "256",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.endpointinput.localpath",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.endpointinput.probabilityattribute": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.endpointinput.probabilityattribute",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.endpointinput.probabilitythresholdattribute": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.endpointinput.probabilitythresholdattribute",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.endpointinput.s3datadistributiontype": {
        "Allowed values": "FullyReplicated | ShardedByS3Key",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.endpointinput.s3datadistributiontype",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.endpointinput.s3inputmode": {
        "Allowed values": "File | Pipe",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.endpointinput.s3inputmode",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.endpointinput.starttimeoffset": {
        "Maximum": "15",
        "Minimum": "1",
        "Pattern": "^.?P.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.endpointinput.starttimeoffset",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.modelbiasappspecification.configuri": {
        "Maximum": "1024",
        "Pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.modelbiasappspecification.configuri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.modelbiasappspecification.environment": {
        "Required": "No",
        "Type": "Environment",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.modelbiasappspecification.environment",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.modelbiasappspecification.imageuri": {
        "Maximum": "255",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.modelbiasappspecification.imageuri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.modelbiasbaselineconfig.baseliningjobname": {
        "Maximum": "63",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.modelbiasbaselineconfig.baseliningjobname",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.modelbiasbaselineconfig.constraintsresource": {
        "Required": "No",
        "Type": "ConstraintsResource",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.modelbiasbaselineconfig.constraintsresource",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.modelbiasjobinput.endpointinput": {
        "Required": "Yes",
        "Type": "EndpointInput",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.modelbiasjobinput.endpointinput",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.modelbiasjobinput.groundtruths3input": {
        "Required": "Yes",
        "Type": "MonitoringGroundTruthS3Input",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.modelbiasjobinput.groundtruths3input",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.monitoringgroundtruths3input.s3uri": {
        "Maximum": "512",
        "Pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.monitoringgroundtruths3input.s3uri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.monitoringoutput.s3output": {
        "Required": "Yes",
        "Type": "S3Output",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.monitoringoutput.s3output",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.monitoringoutputconfig.kmskeyid": {
        "Maximum": "2048",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.monitoringoutputconfig.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.monitoringoutputconfig.monitoringoutputs": {
        "Maximum": "1",
        "Required": "Yes",
        "Type": "List of [MonitoringOutput",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.monitoringoutputconfig.monitoringoutputs",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.monitoringresources.clusterconfig": {
        "Required": "Yes",
        "Type": "ClusterConfig",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.monitoringresources.clusterconfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.networkconfig.enableintercontainertrafficencryption": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.networkconfig.enableintercontainertrafficencryption",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.networkconfig.enablenetworkisolation": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.networkconfig.enablenetworkisolation",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.networkconfig.vpcconfig": {
        "Required": "No",
        "Type": "VpcConfig",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.networkconfig.vpcconfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.s3output.localpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.s3output.localpath",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.s3output.s3uploadmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.s3output.s3uploadmode",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.s3output.s3uri": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.s3output.s3uri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.stoppingcondition.maxruntimeinseconds": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.stoppingcondition.maxruntimeinseconds",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.vpcconfig.securitygroupids": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.vpcconfig.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelbiasjobdefinition.vpcconfig.subnets": {
        "Maximum": "16",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sagemaker.modelbiasjobdefinition.vpcconfig.subnets",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.clusterconfig.instancecount": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.clusterconfig.instancecount",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.clusterconfig.instancetype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.clusterconfig.instancetype",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.clusterconfig.volumekmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.clusterconfig.volumekmskeyid",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.clusterconfig.volumesizeingb": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.clusterconfig.volumesizeingb",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.constraintsresource.s3uri": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.constraintsresource.s3uri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.endpointinput.endpointname": {
        "Maximum": "63",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.endpointinput.endpointname",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.endpointinput.featuresattribute": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.endpointinput.featuresattribute",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.endpointinput.inferenceattribute": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.endpointinput.inferenceattribute",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.endpointinput.localpath": {
        "Maximum": "256",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.endpointinput.localpath",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.endpointinput.probabilityattribute": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.endpointinput.probabilityattribute",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.endpointinput.s3datadistributiontype": {
        "Allowed values": "FullyReplicated | ShardedByS3Key",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.endpointinput.s3datadistributiontype",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.endpointinput.s3inputmode": {
        "Allowed values": "File | Pipe",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.endpointinput.s3inputmode",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.modelexplainabilityappspecification.configuri": {
        "Maximum": "1024",
        "Pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.modelexplainabilityappspecification.configuri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.modelexplainabilityappspecification.environment": {
        "Required": "No",
        "Type": "Environment",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.modelexplainabilityappspecification.environment",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.modelexplainabilityappspecification.imageuri": {
        "Maximum": "255",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.modelexplainabilityappspecification.imageuri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.modelexplainabilitybaselineconfig.baseliningjobname": {
        "Maximum": "63",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.modelexplainabilitybaselineconfig.baseliningjobname",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.modelexplainabilitybaselineconfig.constraintsresource": {
        "Required": "No",
        "Type": "ConstraintsResource",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.modelexplainabilitybaselineconfig.constraintsresource",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.modelexplainabilityjobinput.endpointinput": {
        "Required": "Yes",
        "Type": "EndpointInput",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.modelexplainabilityjobinput.endpointinput",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.monitoringoutput.s3output": {
        "Required": "Yes",
        "Type": "S3Output",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.monitoringoutput.s3output",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.monitoringoutputconfig.kmskeyid": {
        "Maximum": "2048",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.monitoringoutputconfig.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.monitoringoutputconfig.monitoringoutputs": {
        "Maximum": "1",
        "Required": "Yes",
        "Type": "List of [MonitoringOutput",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.monitoringoutputconfig.monitoringoutputs",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.monitoringresources.clusterconfig": {
        "Required": "Yes",
        "Type": "ClusterConfig",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.monitoringresources.clusterconfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.networkconfig.enableintercontainertrafficencryption": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.networkconfig.enableintercontainertrafficencryption",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.networkconfig.enablenetworkisolation": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.networkconfig.enablenetworkisolation",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.networkconfig.vpcconfig": {
        "Required": "No",
        "Type": "VpcConfig",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.networkconfig.vpcconfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.s3output.localpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.s3output.localpath",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.s3output.s3uploadmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.s3output.s3uploadmode",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.s3output.s3uri": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.s3output.s3uri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.stoppingcondition.maxruntimeinseconds": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.stoppingcondition.maxruntimeinseconds",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.vpcconfig.securitygroupids": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.vpcconfig.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelexplainabilityjobdefinition.vpcconfig.subnets": {
        "Maximum": "16",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sagemaker.modelexplainabilityjobdefinition.vpcconfig.subnets",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.clusterconfig.instancecount": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.clusterconfig.instancecount",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.clusterconfig.instancetype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.clusterconfig.instancetype",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.clusterconfig.volumekmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.clusterconfig.volumekmskeyid",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.clusterconfig.volumesizeingb": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.clusterconfig.volumesizeingb",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.constraintsresource.s3uri": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.constraintsresource.s3uri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.endpointinput.endpointname": {
        "Maximum": "63",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.endpointinput.endpointname",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.endpointinput.endtimeoffset": {
        "Maximum": "15",
        "Minimum": "1",
        "Pattern": "^.?P.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.endpointinput.endtimeoffset",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.endpointinput.inferenceattribute": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.endpointinput.inferenceattribute",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.endpointinput.localpath": {
        "Maximum": "256",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.endpointinput.localpath",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.endpointinput.probabilityattribute": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.endpointinput.probabilityattribute",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.endpointinput.probabilitythresholdattribute": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.endpointinput.probabilitythresholdattribute",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.endpointinput.s3datadistributiontype": {
        "Allowed values": "FullyReplicated | ShardedByS3Key",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.endpointinput.s3datadistributiontype",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.endpointinput.s3inputmode": {
        "Allowed values": "File | Pipe",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.endpointinput.s3inputmode",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.endpointinput.starttimeoffset": {
        "Maximum": "15",
        "Minimum": "1",
        "Pattern": "^.?P.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.endpointinput.starttimeoffset",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.modelqualityappspecification.containerarguments": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.modelqualityappspecification.containerarguments",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.modelqualityappspecification.containerentrypoint": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.modelqualityappspecification.containerentrypoint",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.modelqualityappspecification.environment": {
        "Required": "No",
        "Type": "Environment",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.modelqualityappspecification.environment",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.modelqualityappspecification.imageuri": {
        "Maximum": "255",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.modelqualityappspecification.imageuri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.modelqualityappspecification.postanalyticsprocessorsourceuri": {
        "Maximum": "1024",
        "Pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.modelqualityappspecification.postanalyticsprocessorsourceuri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.modelqualityappspecification.problemtype": {
        "Allowed values": "BinaryClassification | MulticlassClassification | Regression",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.modelqualityappspecification.problemtype",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.modelqualityappspecification.recordpreprocessorsourceuri": {
        "Maximum": "1024",
        "Pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.modelqualityappspecification.recordpreprocessorsourceuri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.modelqualitybaselineconfig.baseliningjobname": {
        "Maximum": "63",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.modelqualitybaselineconfig.baseliningjobname",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.modelqualitybaselineconfig.constraintsresource": {
        "Required": "No",
        "Type": "ConstraintsResource",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.modelqualitybaselineconfig.constraintsresource",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.modelqualityjobinput.endpointinput": {
        "Required": "Yes",
        "Type": "EndpointInput",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.modelqualityjobinput.endpointinput",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.modelqualityjobinput.groundtruths3input": {
        "Required": "Yes",
        "Type": "MonitoringGroundTruthS3Input",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.modelqualityjobinput.groundtruths3input",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.monitoringgroundtruths3input.s3uri": {
        "Maximum": "512",
        "Pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.monitoringgroundtruths3input.s3uri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.monitoringoutput.s3output": {
        "Required": "Yes",
        "Type": "S3Output",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.monitoringoutput.s3output",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.monitoringoutputconfig.kmskeyid": {
        "Maximum": "2048",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.monitoringoutputconfig.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.monitoringoutputconfig.monitoringoutputs": {
        "Maximum": "1",
        "Required": "Yes",
        "Type": "List of [MonitoringOutput",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.monitoringoutputconfig.monitoringoutputs",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.monitoringresources.clusterconfig": {
        "Required": "Yes",
        "Type": "ClusterConfig",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.monitoringresources.clusterconfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.networkconfig.enableintercontainertrafficencryption": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.networkconfig.enableintercontainertrafficencryption",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.networkconfig.enablenetworkisolation": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.networkconfig.enablenetworkisolation",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.networkconfig.vpcconfig": {
        "Required": "No",
        "Type": "VpcConfig",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.networkconfig.vpcconfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.s3output.localpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.s3output.localpath",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.s3output.s3uploadmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.s3output.s3uploadmode",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.s3output.s3uri": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.s3output.s3uri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.stoppingcondition.maxruntimeinseconds": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.stoppingcondition.maxruntimeinseconds",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.vpcconfig.securitygroupids": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.vpcconfig.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.modelqualityjobdefinition.vpcconfig.subnets": {
        "Maximum": "16",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sagemaker.modelqualityjobdefinition.vpcconfig.subnets",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.baselineconfig.constraintsresource": {
        "Required": "No",
        "Type": "ConstraintsResource",
        "UniqueKey": "sagemaker.monitoringschedule.baselineconfig.constraintsresource",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.baselineconfig.statisticsresource": {
        "Required": "No",
        "Type": "StatisticsResource",
        "UniqueKey": "sagemaker.monitoringschedule.baselineconfig.statisticsresource",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.clusterconfig.instancecount": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.monitoringschedule.clusterconfig.instancecount",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.clusterconfig.instancetype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.clusterconfig.instancetype",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.clusterconfig.volumekmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.clusterconfig.volumekmskeyid",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.clusterconfig.volumesizeingb": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.monitoringschedule.clusterconfig.volumesizeingb",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.constraintsresource.s3uri": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.constraintsresource.s3uri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.endpointinput.endpointname": {
        "Maximum": "63",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.endpointinput.endpointname",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.endpointinput.localpath": {
        "Maximum": "256",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.endpointinput.localpath",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.endpointinput.s3datadistributiontype": {
        "Allowed values": "FullyReplicated | ShardedByS3Key",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.endpointinput.s3datadistributiontype",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.endpointinput.s3inputmode": {
        "Allowed values": "File | Pipe",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.endpointinput.s3inputmode",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringappspecification.containerarguments": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringappspecification.containerarguments",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringappspecification.containerentrypoint": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringappspecification.containerentrypoint",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringappspecification.imageuri": {
        "Maximum": "255",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringappspecification.imageuri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringappspecification.postanalyticsprocessorsourceuri": {
        "Maximum": "1024",
        "Pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringappspecification.postanalyticsprocessorsourceuri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringappspecification.recordpreprocessorsourceuri": {
        "Maximum": "1024",
        "Pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringappspecification.recordpreprocessorsourceuri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringexecutionsummary.creationtime": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringexecutionsummary.creationtime",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringexecutionsummary.endpointname": {
        "Maximum": "63",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringexecutionsummary.endpointname",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringexecutionsummary.failurereason": {
        "Maximum": "1024",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringexecutionsummary.failurereason",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringexecutionsummary.lastmodifiedtime": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringexecutionsummary.lastmodifiedtime",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringexecutionsummary.monitoringexecutionstatus": {
        "Allowed values": "Completed | CompletedWithViolations | Failed | InProgress | Pending | Stopped | Stopping",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringexecutionsummary.monitoringexecutionstatus",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringexecutionsummary.monitoringschedulename": {
        "Maximum": "63",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringexecutionsummary.monitoringschedulename",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringexecutionsummary.processingjobarn": {
        "Maximum": "256",
        "Pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:processing-job/.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringexecutionsummary.processingjobarn",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringexecutionsummary.scheduledtime": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringexecutionsummary.scheduledtime",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringinput.endpointinput": {
        "Required": "Yes",
        "Type": "EndpointInput",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringinput.endpointinput",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringinputs.monitoringinputs": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringinputs.monitoringinputs",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringjobdefinition.baselineconfig": {
        "Required": "No",
        "Type": "BaselineConfig",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringjobdefinition.baselineconfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringjobdefinition.environment": {
        "Required": "No",
        "Type": "Environment",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringjobdefinition.environment",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringjobdefinition.monitoringappspecification": {
        "Required": "Yes",
        "Type": "MonitoringAppSpecification",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringjobdefinition.monitoringappspecification",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringjobdefinition.monitoringinputs": {
        "Maximum": "1",
        "Required": "Yes",
        "Type": "MonitoringInputs",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringjobdefinition.monitoringinputs",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringjobdefinition.monitoringoutputconfig": {
        "Required": "Yes",
        "Type": "MonitoringOutputConfig",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringjobdefinition.monitoringoutputconfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringjobdefinition.monitoringresources": {
        "Required": "Yes",
        "Type": "MonitoringResources",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringjobdefinition.monitoringresources",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringjobdefinition.networkconfig": {
        "Required": "No",
        "Type": "NetworkConfig",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringjobdefinition.networkconfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringjobdefinition.rolearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringjobdefinition.rolearn",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringjobdefinition.stoppingcondition": {
        "Required": "No",
        "Type": "StoppingCondition",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringjobdefinition.stoppingcondition",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringoutput.s3output": {
        "Required": "Yes",
        "Type": "S3Output",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringoutput.s3output",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringoutputconfig.kmskeyid": {
        "Maximum": "2048",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringoutputconfig.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringoutputconfig.monitoringoutputs": {
        "Maximum": "1",
        "Required": "Yes",
        "Type": "List of [MonitoringOutput",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringoutputconfig.monitoringoutputs",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringresources.clusterconfig": {
        "Required": "Yes",
        "Type": "ClusterConfig",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringresources.clusterconfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringscheduleconfig.monitoringjobdefinition": {
        "Required": "No",
        "Type": "MonitoringJobDefinition",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringscheduleconfig.monitoringjobdefinition",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringscheduleconfig.monitoringjobdefinitionname": {
        "Maximum": "63",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringscheduleconfig.monitoringjobdefinitionname",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringscheduleconfig.monitoringtype": {
        "Allowed values": "DataQuality | ModelBias | ModelExplainability | ModelQuality",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringscheduleconfig.monitoringtype",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.monitoringscheduleconfig.scheduleconfig": {
        "Required": "No",
        "Type": "ScheduleConfig",
        "UniqueKey": "sagemaker.monitoringschedule.monitoringscheduleconfig.scheduleconfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.networkconfig.enableintercontainertrafficencryption": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "sagemaker.monitoringschedule.networkconfig.enableintercontainertrafficencryption",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.networkconfig.enablenetworkisolation": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "sagemaker.monitoringschedule.networkconfig.enablenetworkisolation",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.networkconfig.vpcconfig": {
        "Required": "No",
        "Type": "VpcConfig",
        "UniqueKey": "sagemaker.monitoringschedule.networkconfig.vpcconfig",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.s3output.localpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.s3output.localpath",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.s3output.s3uploadmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.s3output.s3uploadmode",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.s3output.s3uri": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.s3output.s3uri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.scheduleconfig.scheduleexpression": {
        "Maximum": "256",
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "sagemaker.monitoringschedule.scheduleconfig.scheduleexpression",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.statisticsresource.s3uri": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.monitoringschedule.statisticsresource.s3uri",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.stoppingcondition.maxruntimeinseconds": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.monitoringschedule.stoppingcondition.maxruntimeinseconds",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.vpcconfig.securitygroupids": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sagemaker.monitoringschedule.vpcconfig.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.monitoringschedule.vpcconfig.subnets": {
        "Maximum": "16",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sagemaker.monitoringschedule.vpcconfig.subnets",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.notebookinstancelifecycleconfig.notebookinstancelifecyclehook.content": {
        "Maximum": "16384",
        "Minimum": "1",
        "Pattern": "[\\S\\s]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.notebookinstancelifecycleconfig.notebookinstancelifecyclehook.content",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.workteam.cognitomemberdefinition.cognitoclientid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.workteam.cognitomemberdefinition.cognitoclientid",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.workteam.cognitomemberdefinition.cognitousergroup": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.workteam.cognitomemberdefinition.cognitousergroup",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.workteam.cognitomemberdefinition.cognitouserpool": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.workteam.cognitomemberdefinition.cognitouserpool",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.workteam.memberdefinition.cognitomemberdefinition": {
        "Required": "Yes",
        "Type": "CognitoMemberDefinition",
        "UniqueKey": "sagemaker.workteam.memberdefinition.cognitomemberdefinition",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.workteam.notificationconfiguration.notificationtopicarn": {
        "Pattern": "arn:aws[a-z\\-]*:sns:[a-z0-9\\-]*:[0-9]{12}:[a-zA-Z0-9_.-]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.workteam.notificationconfiguration.notificationtopicarn",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.rotationschedule.hostedrotationlambda.kmskeyarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "secretsmanager.rotationschedule.hostedrotationlambda.kmskeyarn",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.rotationschedule.hostedrotationlambda.mastersecretarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "secretsmanager.rotationschedule.hostedrotationlambda.mastersecretarn",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.rotationschedule.hostedrotationlambda.mastersecretkmskeyarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "secretsmanager.rotationschedule.hostedrotationlambda.mastersecretkmskeyarn",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.rotationschedule.hostedrotationlambda.rotationlambdaname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "secretsmanager.rotationschedule.hostedrotationlambda.rotationlambdaname",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.rotationschedule.hostedrotationlambda.rotationtype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "secretsmanager.rotationschedule.hostedrotationlambda.rotationtype",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.rotationschedule.hostedrotationlambda.vpcsecuritygroupids": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "secretsmanager.rotationschedule.hostedrotationlambda.vpcsecuritygroupids",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.rotationschedule.hostedrotationlambda.vpcsubnetids": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "secretsmanager.rotationschedule.hostedrotationlambda.vpcsubnetids",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.rotationschedule.rotationrules.automaticallyafterdays": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "secretsmanager.rotationschedule.rotationrules.automaticallyafterdays",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.secret.generatesecretstring.excludecharacters": {
        "Maximum": "4096",
        "Minimum": "0",
        "Pattern": "^.{0,4096}$",
        "Required": "No",
        "SampleValue": "TODO-secretsmanager.secret.generatesecretstring.ExcludeCharacters",
        "Type": "String",
        "UniqueKey": "secretsmanager.secret.generatesecretstring.excludecharacters",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.secret.generatesecretstring.excludelowercase": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "secretsmanager.secret.generatesecretstring.excludelowercase",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.secret.generatesecretstring.excludenumbers": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "secretsmanager.secret.generatesecretstring.excludenumbers",
        "UpdateRequires": "Replacement"
    },
    "secretsmanager.secret.generatesecretstring.excludepunctuation": {
        "UniqueKey": "secretsmanager.secret.generatesecretstring.excludepunctuation"
    },
    "servicecatalog.cloudformationproduct.provisioningartifactproperties.description": {
        "Maximum": "8192",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "servicecatalog.cloudformationproduct.provisioningartifactproperties.description",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationproduct.provisioningartifactproperties.disabletemplatevalidation": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "servicecatalog.cloudformationproduct.provisioningartifactproperties.disabletemplatevalidation",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationproduct.provisioningartifactproperties.info": {
        "Required": "Yes",
        "Type": "Json",
        "UniqueKey": "servicecatalog.cloudformationproduct.provisioningartifactproperties.info",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationproduct.provisioningartifactproperties.name": {
        "Maximum": "8192",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "servicecatalog.cloudformationproduct.provisioningartifactproperties.name",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningparameter.key": {
        "Maximum": "1000",
        "Minimum": "1",
        "Pattern": "^.{1,1000}$",
        "Required": "Yes",
        "SampleValue": "TODO-servicecatalog.cloudformationprovisionedproduct.provisioningparameter.Key",
        "Type": "String",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningparameter.key",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningparameter.value": {
        "Maximum": "4096",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningparameter.value",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetaccounts": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetaccounts",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetfailuretolerancecount": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetfailuretolerancecount",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetfailuretolerancepercentage": {
        "Maximum": "100",
        "Minimum": "0",
        "Pattern": "^[0,100]}$",
        "Required": "No",
        "SampleValue": "0...100",
        "Type": "Integer",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetfailuretolerancepercentage",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetmaxconcurrencycount": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetmaxconcurrencycount",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetmaxconcurrencypercentage": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[1,100]}$",
        "Required": "No",
        "SampleValue": "1...100",
        "Type": "Integer",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetmaxconcurrencypercentage",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetoperationtype": {
        "Allowed values": "CREATE | DELETE | UPDATE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetoperationtype",
        "UpdateRequires": "Replacement"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetregions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetregions",
        "UpdateRequires": "Replacement"
    },
    "servicediscovery.service.dnsconfig.dnsrecords": {
        "Required": "Yes",
        "Type": "List of [DnsRecord",
        "UniqueKey": "servicediscovery.service.dnsconfig.dnsrecords",
        "UpdateRequires": "Replacement"
    },
    "servicediscovery.service.dnsconfig.namespaceid": {
        "Maximum": "64",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "servicediscovery.service.dnsconfig.namespaceid",
        "UpdateRequires": "Replacement"
    },
    "servicediscovery.service.dnsconfig.routingpolicy": {
        "Required": "No",
        "SampleValue": "TODO-RoutingPolicy",
        "UniqueKey": "servicediscovery.service.dnsconfig.routingpolicy",
        "UpdateRequires": "Replacement"
    },
    "servicediscovery.service.dnsrecord.priority weight port service-hostname": {
        "Allowed values": "A | AAAA | CNAME | SRV",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "servicediscovery.service.dnsrecord.priority weight port service-hostname",
        "UpdateRequires": "Replacement"
    },
    "servicediscovery.service.dnsrecord.ttl": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "servicediscovery.service.dnsrecord.ttl",
        "UpdateRequires": "Replacement"
    },
    "servicediscovery.service.dnsrecord.type": {
        "UniqueKey": "servicediscovery.service.dnsrecord.type"
    },
    "servicediscovery.service.healthcheckconfig.failurethreshold": {
        "Maximum": "10",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "servicediscovery.service.healthcheckconfig.failurethreshold",
        "UpdateRequires": "Replacement"
    },
    "servicediscovery.service.healthcheckconfig.resourcepath": {
        "Maximum": "255",
        "Required": "No",
        "UniqueKey": "servicediscovery.service.healthcheckconfig.resourcepath",
        "UpdateRequires": "Replacement"
    },
    "servicediscovery.service.healthcheckconfig.type": {
        "*Important**  \nIf you specify HTTPS for the value of `Type`, the endpoint must support TLS v1\\.0 or later\\.\n+  **TCP*": "Route\u00a053 tries to establish a TCP connection\\.\n\n  If you specify `TCP` for `Type`, don't specify a value for `ResourcePath`\\.\nFor more information, see [How Route\u00a053 Determines Whether an Endpoint Is Healthy](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html) in the *Route\u00a053 Developer Guide*\\.",
        "Allowed values": "HTTP | HTTPS | TCP",
        "Required": "Yes",
        "Type": "String",
        "Type`  <a name=\"cfn-servicediscovery-service-healthcheckconfig-type\"></a>\nThe type of health check that you want to create, which indicates how Route\u00a053 determines whether an endpoint is healthy\\.  \nYou can't change the value of `Type` after you create a health check\\.\nYou can create the following types of health checks:  \n+  **HTTP*": "Route\u00a053 tries to establish a TCP connection\\. If successful, Route\u00a053 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400\\.\n+  **HTTPS*",
        "UniqueKey": "servicediscovery.service.healthcheckconfig.type",
        "UpdateRequires": "Replacement"
    },
    "servicediscovery.service.healthcheckcustomconfig.failurethreshold": {
        "Maximum": "10",
        "Minimum": "1",
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "servicediscovery.service.healthcheckcustomconfig.failurethreshold",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.cloudwatchdestination.dimensionconfigurations": {
        "Required": "No",
        "Type": "List of [DimensionConfiguration",
        "UniqueKey": "ses.configurationseteventdestination.cloudwatchdestination.dimensionconfigurations",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.dimensionconfiguration.defaultdimensionvalue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.configurationseteventdestination.dimensionconfiguration.defaultdimensionvalue",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.dimensionconfiguration.dimensionname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.configurationseteventdestination.dimensionconfiguration.dimensionname",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.dimensionconfiguration.dimensionvaluesource": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.configurationseteventdestination.dimensionconfiguration.dimensionvaluesource",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.eventdestination.cloudwatchdestination": {
        "Required": "No",
        "Type": "CloudWatchDestination",
        "UniqueKey": "ses.configurationseteventdestination.eventdestination.cloudwatchdestination",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.eventdestination.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ses.configurationseteventdestination.eventdestination.enabled",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.eventdestination.kinesisfirehosedestination": {
        "Required": "No",
        "Type": "KinesisFirehoseDestination",
        "UniqueKey": "ses.configurationseteventdestination.eventdestination.kinesisfirehosedestination",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.eventdestination.matchingeventtypes": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "ses.configurationseteventdestination.eventdestination.matchingeventtypes",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.eventdestination.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.configurationseteventdestination.eventdestination.name",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.kinesisfirehosedestination.deliverystreamarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.configurationseteventdestination.kinesisfirehosedestination.deliverystreamarn",
        "UpdateRequires": "Replacement"
    },
    "ses.configurationseteventdestination.kinesisfirehosedestination.iamrolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.configurationseteventdestination.kinesisfirehosedestination.iamrolearn",
        "UpdateRequires": "Replacement"
    },
    "ses.contactlist.topic.defaultsubscriptionstatus": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.contactlist.topic.defaultsubscriptionstatus",
        "UpdateRequires": "Replacement"
    },
    "ses.contactlist.topic.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.contactlist.topic.description",
        "UpdateRequires": "Replacement"
    },
    "ses.contactlist.topic.displayname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.contactlist.topic.displayname",
        "UpdateRequires": "Replacement"
    },
    "ses.contactlist.topic.topicname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.contactlist.topic.topicname",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptfilter.filter.ipfilter": {
        "Required": "Yes",
        "Type": "IpFilter",
        "UniqueKey": "ses.receiptfilter.filter.ipfilter",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptfilter.filter.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptfilter.filter.name",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptfilter.ipfilter.cidr": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptfilter.ipfilter.cidr",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptfilter.ipfilter.policy": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptfilter.ipfilter.policy",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.action.addheaderaction": {
        "Required": "No",
        "Type": "AddHeaderAction",
        "UniqueKey": "ses.receiptrule.action.addheaderaction",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.action.bounceaction": {
        "Required": "No",
        "Type": "BounceAction",
        "UniqueKey": "ses.receiptrule.action.bounceaction",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.action.lambdaaction": {
        "Required": "No",
        "Type": "LambdaAction",
        "UniqueKey": "ses.receiptrule.action.lambdaaction",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.action.s3action": {
        "Required": "No",
        "Type": "S3Action",
        "UniqueKey": "ses.receiptrule.action.s3action",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.action.snsaction": {
        "Required": "No",
        "Type": "SNSAction",
        "UniqueKey": "ses.receiptrule.action.snsaction",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.action.stopaction": {
        "Required": "No",
        "Type": "StopAction",
        "UniqueKey": "ses.receiptrule.action.stopaction",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.action.workmailaction": {
        "Required": "No",
        "Type": "WorkmailAction",
        "UniqueKey": "ses.receiptrule.action.workmailaction",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.addheaderaction.headername": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.addheaderaction.headername",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.addheaderaction.headervalue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.addheaderaction.headervalue",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.bounceaction.message": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.bounceaction.message",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.bounceaction.sender": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.bounceaction.sender",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.bounceaction.smtpreplycode": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.bounceaction.smtpreplycode",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.bounceaction.statuscode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.bounceaction.statuscode",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.bounceaction.topicarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.bounceaction.topicarn",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.lambdaaction.functionarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.lambdaaction.functionarn",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.lambdaaction.invocationtype": {
        "Allowed values": "Event | RequestResponse",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.lambdaaction.invocationtype",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.lambdaaction.topicarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.lambdaaction.topicarn",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.rule.actions": {
        "Required": "No",
        "Type": "List of [Action",
        "UniqueKey": "ses.receiptrule.rule.actions",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.rule.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ses.receiptrule.rule.enabled",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.rule.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.rule.name",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.rule.recipients": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ses.receiptrule.rule.recipients",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.rule.scanenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ses.receiptrule.rule.scanenabled",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.rule.tlspolicy": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.rule.tlspolicy",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.s3action.bucketname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.s3action.bucketname",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.s3action.kmskeyarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.s3action.kmskeyarn",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.s3action.objectkeyprefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.s3action.objectkeyprefix",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.s3action.topicarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.s3action.topicarn",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.snsaction.encoding": {
        "Allowed values": "Base64 | UTF-8",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.snsaction.encoding",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.snsaction.topicarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.snsaction.topicarn",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.stopaction.scope": {
        "Allowed values": "RuleSet",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.stopaction.scope",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.stopaction.topicarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.stopaction.topicarn",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.workmailaction.organizationarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.workmailaction.organizationarn",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.workmailaction.topicarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.workmailaction.topicarn",
        "UpdateRequires": "Replacement"
    },
    "ses.template.template.htmlpart": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.template.template.htmlpart",
        "UpdateRequires": "Replacement"
    },
    "ses.template.template.subjectpart": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.template.template.subjectpart",
        "UpdateRequires": "Replacement"
    },
    "ses.template.template.templatename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.template.template.templatename",
        "UpdateRequires": "Replacement"
    },
    "ses.template.template.textpart": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.template.template.textpart",
        "UpdateRequires": "Replacement"
    },
    "signer.signingprofile.signaturevalidityperiod.type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "signer.signingprofile.signaturevalidityperiod.type",
        "UpdateRequires": "Replacement"
    },
    "signer.signingprofile.signaturevalidityperiod.value": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "signer.signingprofile.signaturevalidityperiod.value",
        "UpdateRequires": "Replacement"
    },
    "simpledb.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "simpledb.description",
        "UpdateRequires": "Replacement"
    },
    "sns.policy.policydocument": {
        "Required": "Yes",
        "Type": "Json",
        "UniqueKey": "sns.policy.policydocument",
        "UpdateRequires": "Replacement"
    },
    "sns.policy.topics": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sns.policy.topics",
        "UpdateRequires": "Replacement"
    },
    "sns.subscription.endpoint": {
        "Required": "Yes",
        "SampleValue": "TODO-Endpoint",
        "UniqueKey": "sns.subscription.endpoint",
        "UpdateRequires": "Replacement"
    },
    "sns.subscription.protocol": {
        "Required": "Yes",
        "SampleValue": "TODO-Protocol",
        "UniqueKey": "sns.subscription.protocol",
        "UpdateRequires": "Replacement"
    },
    "sns.topic.contentbaseddeduplication": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "sns.topic.contentbaseddeduplication",
        "UpdateRequires": "Replacement"
    },
    "sns.topic.displayname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sns.topic.displayname",
        "UpdateRequires": "Replacement"
    },
    "sns.topic.fifotopic": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "sns.topic.fifotopic",
        "UpdateRequires": "Replacement"
    },
    "sns.topic.kmsmasterkeyid": {
        "Required": "No",
        "SampleValue": "TODO-KmsMasterKeyId",
        "UniqueKey": "sns.topic.kmsmasterkeyid",
        "UpdateRequires": "Replacement"
    },
    "sns.topic.subscription": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "sns.topic.subscription",
        "UpdateRequires": "Replacement"
    },
    "sns.topic.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "sns.topic.tags",
        "UpdateRequires": "Replacement"
    },
    "sns.topic.topicname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sns.topic.topicname",
        "UpdateRequires": "Replacement"
    },
    "sqs.policy.policydocument": {
        "Required": "Yes",
        "SampleValue": "TODO-PolicyDocument",
        "UniqueKey": "sqs.policy.policydocument",
        "UpdateRequires": "Replacement"
    },
    "sqs.policy.queues": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sqs.policy.queues",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.contentbaseddeduplication": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "sqs.queues.contentbaseddeduplication",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.delayseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "sqs.queues.delayseconds",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.fifoqueue": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "sqs.queues.fifoqueue",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.kmsdatakeyreuseperiodseconds": {
        "Required": "No",
        "SampleValue": "TODO-KmsDataKeyReusePeriodSeconds",
        "UniqueKey": "sqs.queues.kmsdatakeyreuseperiodseconds",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.kmsmasterkeyid": {
        "Required": "No",
        "SampleValue": "TODO-KmsMasterKeyId",
        "UniqueKey": "sqs.queues.kmsmasterkeyid",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.maximummessagesize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "sqs.queues.maximummessagesize",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.messageretentionperiod": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "sqs.queues.messageretentionperiod",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.queuename": {
        "Required": "No",
        "SampleValue": "TODO-QueueName",
        "UniqueKey": "sqs.queues.queuename",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.receivemessagewaittimeseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "sqs.queues.receivemessagewaittimeseconds",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.redrivepolicy": {
        "Required": "No",
        "SampleValue": "TODO-RedrivePolicy",
        "UniqueKey": "sqs.queues.redrivepolicy",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.tags": {
        "Required": "No",
        "SampleValue": "TODO-Tags",
        "UniqueKey": "sqs.queues.tags",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.visibilitytimeout": {
        "Required": "No",
        "SampleValue": "TODO-VisibilityTimeout",
        "UniqueKey": "sqs.queues.visibilitytimeout",
        "UpdateRequires": "Replacement"
    },
    "ssm.association.instanceassociationoutputlocation.s3location": {
        "Required": "No",
        "Type": "S3OutputLocation",
        "UniqueKey": "ssm.association.instanceassociationoutputlocation.s3location",
        "UpdateRequires": "Replacement"
    },
    "ssm.association.parametervalues.parametervalues": {
        "Required": "Yes",
        "Type": "List",
        "UniqueKey": "ssm.association.parametervalues.parametervalues",
        "UpdateRequires": "Replacement"
    },
    "ssm.association.s3outputlocation.outputs3bucketname": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "^.{3,63}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.association.s3outputlocation.OutputS3BucketName",
        "Type": "String",
        "UniqueKey": "ssm.association.s3outputlocation.outputs3bucketname",
        "UpdateRequires": "Replacement"
    },
    "ssm.association.s3outputlocation.outputs3keyprefix": {
        "Maximum": "500",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.association.s3outputlocation.outputs3keyprefix",
        "UpdateRequires": "Replacement"
    },
    "ssm.association.s3outputlocation.outputs3region": {
        "Maximum": "20",
        "Minimum": "3",
        "Pattern": "^.{3,20}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.association.s3outputlocation.OutputS3Region",
        "Type": "String",
        "UniqueKey": "ssm.association.s3outputlocation.outputs3region",
        "UpdateRequires": "Replacement"
    },
    "ssm.association.target.key": {
        "Maximum": "163",
        "Minimum": "1",
        "Pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$|resource-groups:ResourceTypeFilters|resource-groups:Name",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ssm.association.target.key",
        "UpdateRequires": "Replacement"
    },
    "ssm.association.target.values": {
        "Maximum": "50",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "ssm.association.target.values",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtarget.targets.key": {
        "Maximum": "163",
        "Minimum": "1",
        "Pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$|resource-groups:ResourceTypeFilters|resource-groups:Name",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtarget.targets.key",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtarget.targets.values": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ssm.maintenancewindowtarget.targets.values",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.logginginfo.region": {
        "Maximum": "20",
        "Minimum": "3",
        "Pattern": "^.{3,20}$",
        "Required": "Yes",
        "SampleValue": "TODO-ssm.maintenancewindowtask.logginginfo.Region",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.logginginfo.region",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.logginginfo.s3bucket": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "^.{3,63}$",
        "Required": "Yes",
        "SampleValue": "TODO-ssm.maintenancewindowtask.logginginfo.S3Bucket",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.logginginfo.s3bucket",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.logginginfo.s3prefix": {
        "Maximum": "500",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.logginginfo.s3prefix",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowautomationparameters.documentversion": {
        "Pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowautomationparameters.documentversion",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowautomationparameters.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowautomationparameters.parameters",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.clientcontext": {
        "Maximum": "8000",
        "Minimum": "1",
        "Pattern": "^.{1,8000}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.maintenancewindowtask.maintenancewindowlambdaparameters.ClientContext",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.clientcontext",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.payload": {
        "Required": "No",
        "SampleValue": "TODO-Payload",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.payload",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.qualifier": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.maintenancewindowtask.maintenancewindowlambdaparameters.Qualifier",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.qualifier",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.comment": {
        "Maximum": "100",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.comment",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.documenthash": {
        "Maximum": "256",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.documenthash",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.documenthashtype": {
        "Allowed values": "Sha1 | Sha256",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.documenthashtype",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.notificationconfig": {
        "Required": "No",
        "Type": "NotificationConfig",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.notificationconfig",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.outputs3bucketname": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "^.{3,63}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.maintenancewindowtask.maintenancewindowruncommandparameters.OutputS3BucketName",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.outputs3bucketname",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.outputs3keyprefix": {
        "Maximum": "500",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.outputs3keyprefix",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.parameters": {
        "Required": "No",
        "SampleValue": "TODO-Parameters",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.parameters",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.servicerolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.servicerolearn",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.timeoutseconds": {
        "Maximum": "2592000",
        "Minimum": "30",
        "Pattern": "^[30,2592000]}$",
        "Required": "No",
        "SampleValue": "30...2592000",
        "Type": "Integer",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.timeoutseconds",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowstepfunctionsparameters.input": {
        "Maximum": "4096",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowstepfunctionsparameters.input",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.maintenancewindowstepfunctionsparameters.name": {
        "Maximum": "80",
        "Minimum": "1",
        "Pattern": "^.{1,80}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.maintenancewindowtask.maintenancewindowstepfunctionsparameters.Name",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowstepfunctionsparameters.name",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.notificationconfig.notificationarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.notificationconfig.notificationarn",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.notificationconfig.notificationevents": {
        "Required": "No",
        "SampleValue": "TODO-NotificationEvents",
        "UniqueKey": "ssm.maintenancewindowtask.notificationconfig.notificationevents",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.notificationconfig.notificationtype": {
        "Allowed values": "Command | Invocation",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.notificationconfig.notificationtype",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.target.key": {
        "Maximum": "163",
        "Minimum": "1",
        "Pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$|resource-groups:ResourceTypeFilters|resource-groups:Name",
        "Required": "Yes",
        "UniqueKey": "ssm.maintenancewindowtask.target.key",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.target.values": {
        "Maximum": "50",
        "Required": "No",
        "UniqueKey": "ssm.maintenancewindowtask.target.values",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.taskinvocationparameters.maintenancewindowautomationparameters": {
        "Required": "No",
        "Type": "MaintenanceWindowAutomationParameters",
        "UniqueKey": "ssm.maintenancewindowtask.taskinvocationparameters.maintenancewindowautomationparameters",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.taskinvocationparameters.maintenancewindowlambdaparameters": {
        "Required": "No",
        "Type": "MaintenanceWindowLambdaParameters",
        "UniqueKey": "ssm.maintenancewindowtask.taskinvocationparameters.maintenancewindowlambdaparameters",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.taskinvocationparameters.maintenancewindowruncommandparameters": {
        "Required": "No",
        "Type": "MaintenanceWindowRunCommandParameters",
        "UniqueKey": "ssm.maintenancewindowtask.taskinvocationparameters.maintenancewindowruncommandparameters",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtask.taskinvocationparameters.maintenancewindowstepfunctionsparameters": {
        "Required": "No",
        "Type": "MaintenanceWindowStepFunctionsParameters",
        "UniqueKey": "ssm.maintenancewindowtask.taskinvocationparameters.maintenancewindowstepfunctionsparameters",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.patchfilter.key": {
        "Required": "No",
        "SampleValue": "TODO-Key",
        "UniqueKey": "ssm.patchbaseline.patchfilter.key",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.patchfilter.values": {
        "Maximum": "20",
        "Required": "No",
        "UniqueKey": "ssm.patchbaseline.patchfilter.values",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.patchfiltergroup.patchfilters": {
        "Maximum": "4",
        "Required": "No",
        "Type": "List of [PatchFilter",
        "UniqueKey": "ssm.patchbaseline.patchfiltergroup.patchfilters",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.patchsource.configuration": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.patchbaseline.patchsource.Configuration",
        "Type": "String",
        "UniqueKey": "ssm.patchbaseline.patchsource.configuration",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.patchsource.name": {
        "Pattern": "^[a-zA-Z0-9_\\-.]{3,50}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.patchbaseline.patchsource.name",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.patchsource.products": {
        "Maximum": "20",
        "Required": "No",
        "UniqueKey": "ssm.patchbaseline.patchsource.products",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.rule.approveafterdays": {
        "Maximum": "100",
        "Minimum": "0",
        "Pattern": "^[0,100]}$",
        "Required": "Conditional",
        "SampleValue": "0...100",
        "Type": "Integer",
        "UniqueKey": "ssm.patchbaseline.rule.approveafterdays",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.rule.approveuntildate": {
        "Maximum": "10",
        "Minimum": "1",
        "Required": "No",
        "Type": "PatchStringDate",
        "UniqueKey": "ssm.patchbaseline.rule.approveuntildate",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.rule.compliancelevel": {
        "Allowed values": "CRITICAL | HIGH | INFORMATIONAL | LOW | MEDIUM | UNSPECIFIED",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.patchbaseline.rule.compliancelevel",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.rule.enablenonsecurity": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ssm.patchbaseline.rule.enablenonsecurity",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.rule.patchfiltergroup": {
        "Required": "No",
        "Type": "PatchFilterGroup",
        "UniqueKey": "ssm.patchbaseline.rule.patchfiltergroup",
        "UpdateRequires": "Replacement"
    },
    "ssm.patchbaseline.rulegroup.patchrules": {
        "Maximum": "10",
        "Required": "No",
        "Type": "List of [Rule",
        "UniqueKey": "ssm.patchbaseline.rulegroup.patchrules",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.awsorganizationssource.organizationalunits": {
        "Maximum": "1000",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ssm.resourcedatasync.awsorganizationssource.organizationalunits",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.awsorganizationssource.organizationsourcetype": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^.{1,64}$",
        "Required": "Yes",
        "SampleValue": "TODO-ssm.resourcedatasync.awsorganizationssource.OrganizationSourceType",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.awsorganizationssource.organizationsourcetype",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.s3destination.bucketname": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "Yes",
        "SampleValue": "TODO-ssm.resourcedatasync.s3destination.BucketName",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.s3destination.bucketname",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.s3destination.bucketprefix": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.resourcedatasync.s3destination.BucketPrefix",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.s3destination.bucketprefix",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.s3destination.bucketregion": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^.{1,64}$",
        "Required": "Yes",
        "SampleValue": "TODO-ssm.resourcedatasync.s3destination.BucketRegion",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.s3destination.bucketregion",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.s3destination.kmskeyarn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.s3destination.kmskeyarn",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.s3destination.syncformat": {
        "Allowed values": "JsonSerDe",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.s3destination.syncformat",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.syncsource.awsorganizationssource": {
        "Required": "No",
        "Type": "AwsOrganizationsSource",
        "UniqueKey": "ssm.resourcedatasync.syncsource.awsorganizationssource",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.syncsource.includefutureregions": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ssm.resourcedatasync.syncsource.includefutureregions",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.syncsource.sourceregions": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "ssm.resourcedatasync.syncsource.sourceregions",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.syncsource.sourcetype": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^.{1,64}$",
        "Required": "Yes",
        "SampleValue": "TODO-ssm.resourcedatasync.syncsource.SourceType",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.syncsource.sourcetype",
        "UpdateRequires": "Replacement"
    },
    "sso.instanceaccesscontrolattributeconfiguration.accesscontrolattribute.key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sso.instanceaccesscontrolattributeconfiguration.accesscontrolattribute.key",
        "UpdateRequires": "Replacement"
    },
    "sso.instanceaccesscontrolattributeconfiguration.accesscontrolattribute.value": {
        "Required": "Yes",
        "Type": "AccessControlAttributeValue",
        "UniqueKey": "sso.instanceaccesscontrolattributeconfiguration.accesscontrolattribute.value",
        "UpdateRequires": "Replacement"
    },
    "sso.instanceaccesscontrolattributeconfiguration.accesscontrolattributevalue.source": {
        "Maximum": "1",
        "Required": "Yes",
        "Type": "AccessControlAttributeValueSourceList",
        "UniqueKey": "sso.instanceaccesscontrolattributeconfiguration.accesscontrolattributevalue.source",
        "UpdateRequires": "Replacement"
    },
    "sso.instanceaccesscontrolattributeconfiguration.accesscontrolattributevaluesourcelist.accesscontrolattributevaluesourcelist": {
        "Maximum": "1",
        "Required": "No",
        "Type": "List",
        "UniqueKey": "sso.instanceaccesscontrolattributeconfiguration.accesscontrolattributevaluesourcelist.accesscontrolattributevaluesourcelist",
        "UpdateRequires": "Replacement"
    },
    "stack.notificationarns": {
        "Maximum": "5",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "stack.notificationarns",
        "UpdateRequires": "Replacement"
    },
    "stack.parameters": {
        "Required": "Conditional",
        "Type": "Map of String",
        "UniqueKey": "stack.parameters",
        "UpdateRequires": "Replacement"
    },
    "stack.tags": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "stack.tags",
        "UpdateRequires": "Replacement"
    },
    "stack.templateurl": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-stack.TemplateURL",
        "Type": "String",
        "UniqueKey": "stack.templateurl",
        "UpdateRequires": "Replacement"
    },
    "stack.timeoutinminutes": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "stack.timeoutinminutes",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.activity.tagsentry.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "stepfunctions.activity.tagsentry.key",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.activity.tagsentry.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "stepfunctions.activity.tagsentry.value",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.cloudwatchlogsloggroup.loggrouparn": {
        "Required": "No",
        "SampleValue": "TODO-LogGroupArn",
        "UniqueKey": "stepfunctions.statemachine.cloudwatchlogsloggroup.loggrouparn",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.logdestination.cloudwatchlogsloggroup": {
        "Required": "No",
        "Type": "CloudWatchLogsLogGroup",
        "UniqueKey": "stepfunctions.statemachine.logdestination.cloudwatchlogsloggroup",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.logdestination.cloudwatchlogsloggroup.loggrouparn": {
        "Required": "Yes",
        "SampleValue": "TODO-LogGroupArn",
        "UniqueKey": "stepfunctions.statemachine.logdestination.cloudwatchlogsloggroup.loggrouparn",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.loggingconfiguration.destinations": {
        "Required": "No",
        "Type": "List of [LogDestination",
        "UniqueKey": "stepfunctions.statemachine.loggingconfiguration.destinations",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.loggingconfiguration.includeexecutiondata": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "stepfunctions.statemachine.loggingconfiguration.includeexecutiondata",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.loggingconfiguration.level": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "stepfunctions.statemachine.loggingconfiguration.level",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.s3location.bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "stepfunctions.statemachine.s3location.bucket",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.s3location.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "stepfunctions.statemachine.s3location.key",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.s3location.version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "stepfunctions.statemachine.s3location.version",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.tagsentry.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "stepfunctions.statemachine.tagsentry.key",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.tagsentry.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "stepfunctions.statemachine.tagsentry.value",
        "UpdateRequires": "Replacement"
    },
    "stepfunctions.statemachine.tracingconfiguration.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "stepfunctions.statemachine.tracingconfiguration.enabled",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.code.handler": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Conditional",
        "SampleValue": "TODO-synthetics.canary.code.Handler",
        "Type": "String",
        "UniqueKey": "synthetics.canary.code.handler",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.code.s3bucket": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Conditional",
        "SampleValue": "TODO-synthetics.canary.code.S3Bucket",
        "Type": "String",
        "UniqueKey": "synthetics.canary.code.s3bucket",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.code.s3key": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Conditional",
        "SampleValue": "TODO-synthetics.canary.code.S3Key",
        "Type": "String",
        "UniqueKey": "synthetics.canary.code.s3key",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.code.s3objectversion": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Conditional",
        "SampleValue": "TODO-synthetics.canary.code.S3ObjectVersion",
        "Type": "String",
        "UniqueKey": "synthetics.canary.code.s3objectversion",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.code.script": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "synthetics.canary.code.script",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.runconfig.activetracing": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "synthetics.canary.runconfig.activetracing",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.runconfig.environmentvariables": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "synthetics.canary.runconfig.environmentvariables",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.runconfig.memoryinmb": {
        "Maximum": "3008",
        "Minimum": "960",
        "Pattern": "^[960,3008]}$",
        "Required": "No",
        "SampleValue": "960...3008",
        "Type": "Integer",
        "UniqueKey": "synthetics.canary.runconfig.memoryinmb",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.runconfig.timeoutinseconds": {
        "Maximum": "840",
        "Minimum": "3",
        "Pattern": "^[3,840]}$",
        "Required": "Yes",
        "SampleValue": "3...840",
        "Type": "Integer",
        "UniqueKey": "synthetics.canary.runconfig.timeoutinseconds",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.schedule.durationinseconds": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "synthetics.canary.schedule.durationinseconds",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.schedule.expression": {
        "Maximum": "1024",
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "synthetics.canary.schedule.expression",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.vpcconfig.securitygroupids": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "synthetics.canary.vpcconfig.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.vpcconfig.subnetids": {
        "Maximum": "16",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "synthetics.canary.vpcconfig.subnetids",
        "UpdateRequires": "Replacement"
    },
    "synthetics.canary.vpcconfig.vpcid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "synthetics.canary.vpcconfig.vpcid",
        "UpdateRequires": "Replacement"
    },
    "transfer.server.endpointdetails.addressallocationids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "transfer.server.endpointdetails.addressallocationids",
        "UpdateRequires": "Replacement"
    },
    "transfer.server.endpointdetails.securitygroupids": {
        "Maximum": "5",
        "Maximum number of security groups": "5",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "transfer.server.endpointdetails.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "transfer.server.endpointdetails.subnetids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "transfer.server.endpointdetails.subnetids",
        "UpdateRequires": "Replacement"
    },
    "transfer.server.endpointdetails.vpcendpointid": {
        "Maximum": "22",
        "Minimum": "22",
        "Pattern": "^vpce-[0-9a-f]{17}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "transfer.server.endpointdetails.vpcendpointid",
        "UpdateRequires": "Replacement"
    },
    "transfer.server.endpointdetails.vpcid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "transfer.server.endpointdetails.vpcid",
        "UpdateRequires": "Replacement"
    },
    "transfer.server.identityproviderdetails.invocationrole": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:.*role/.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "transfer.server.identityproviderdetails.invocationrole",
        "UpdateRequires": "Replacement"
    },
    "transfer.server.identityproviderdetails.url": {
        "Maximum": "255",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "transfer.server.identityproviderdetails.url",
        "UpdateRequires": "Replacement"
    },
    "transfer.user.homedirectorymapentry.entry": {
        "Maximum": "1024",
        "Pattern": "^/.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "transfer.user.homedirectorymapentry.entry",
        "UpdateRequires": "Replacement"
    },
    "transfer.user.homedirectorymapentry.target": {
        "Maximum": "1024",
        "Pattern": "^/.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "transfer.user.homedirectorymapentry.target",
        "UpdateRequires": "Replacement"
    },
    "transfer.user.posixprofile.gid": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "transfer.user.posixprofile.gid",
        "UpdateRequires": "Replacement"
    },
    "transfer.user.posixprofile.secondarygids": {
        "Maximum": "16",
        "Required": "No",
        "Type": "List of Double",
        "UniqueKey": "transfer.user.posixprofile.secondarygids",
        "UpdateRequires": "Replacement"
    },
    "transfer.user.posixprofile.uid": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "transfer.user.posixprofile.uid",
        "UpdateRequires": "Replacement"
    },
    "w7950ab1c27c15c15c27c19b7.default": {
        "Required": "No",
        "SampleValue": "TODO-default",
        "Type": "String",
        "UniqueKey": "w7950ab1c27c15c15c27c19b7.default"
    },
    "w7950ab1c27c15c15c27c23b7.label": {
        "Required": "No",
        "SampleValue": "TODO-Label",
        "Type": "AWS::CloudFormation::Interface Label",
        "UniqueKey": "w7950ab1c27c15c15c27c23b7.label"
    },
    "w7950ab1c27c15c15c27c23b7.parameters": {
        "Required": "No",
        "SampleValue": "TODO-Parameters",
        "Type": "List of String values",
        "UniqueKey": "w7950ab1c27c15c15c27c23b7.parameters"
    },
    "w7950ab1c27c15c15c27c27b7.parameterlogicalid": {
        "Required": "No",
        "UniqueKey": "w7950ab1c27c15c15c27c27b7.parameterlogicalid"
    },
    "w7950ab1c33c10d302c13c17.key": {
        "Required": "Yes",
        "SampleValue": "TODO-Key",
        "Type": "String",
        "UniqueKey": "w7950ab1c33c10d302c13c17.key"
    },
    "w7950ab1c33c10d302c13c17.value": {
        "Required": "Yes",
        "SampleValue": "TODO-Value",
        "Type": "String\n\n#",
        "UniqueKey": "w7950ab1c33c10d302c13c17.value"
    },
    "waf.bytematchset.bytematchtuples.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "waf.bytematchset.bytematchtuples.fieldtomatch",
        "UpdateRequires": "Replacement"
    },
    "waf.bytematchset.bytematchtuples.fieldtomatch.1.data": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "waf.bytematchset.bytematchtuples.fieldtomatch.1.data",
        "UpdateRequires": "Replacement"
    },
    "waf.bytematchset.bytematchtuples.fieldtomatch.1.type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "waf.bytematchset.bytematchtuples.fieldtomatch.1.type",
        "UpdateRequires": "Replacement"
    },
    "waf.bytematchset.bytematchtuples.fieldtomatch.data": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "waf.bytematchset.bytematchtuples.fieldtomatch.data",
        "UpdateRequires": "Replacement"
    },
    "waf.bytematchset.bytematchtuples.fieldtomatch.type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "waf.bytematchset.bytematchtuples.fieldtomatch.type",
        "UpdateRequires": "Replacement"
    },
    "waf.bytematchset.bytematchtuples.positionalconstraint": {
        "Required": "Yes",
        "SampleValue": "TODO-PositionalConstraint",
        "UniqueKey": "waf.bytematchset.bytematchtuples.positionalconstraint",
        "UpdateRequires": "Replacement"
    },
    "waf.bytematchset.bytematchtuples.targetstring": {
        "Required": "Conditional",
        "SampleValue": "TODO-TargetString",
        "UniqueKey": "waf.bytematchset.bytematchtuples.targetstring",
        "UpdateRequires": "Replacement"
    },
    "waf.bytematchset.bytematchtuples.targetstringbase64": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "waf.bytematchset.bytematchtuples.targetstringbase64",
        "UpdateRequires": "Replacement"
    },
    "waf.bytematchset.bytematchtuples.texttransformation": {
        "Required": "Yes",
        "SampleValue": "TODO-TextTransformation",
        "UniqueKey": "waf.bytematchset.bytematchtuples.texttransformation",
        "UpdateRequires": "Replacement"
    },
    "waf.ipset.ipsetdescriptors.type": {
        "Allowed values": "IPV4 | IPV6",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "waf.ipset.ipsetdescriptors.type",
        "UpdateRequires": "Replacement"
    },
    "waf.ipset.ipsetdescriptors.value": {
        "Maximum": "50",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "waf.ipset.ipsetdescriptors.value",
        "UpdateRequires": "Replacement"
    },
    "waf.rule.predicates.dataid": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "waf.rule.predicates.dataid",
        "UpdateRequires": "Replacement"
    },
    "waf.rule.predicates.negated": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "UniqueKey": "waf.rule.predicates.negated",
        "UpdateRequires": "Replacement"
    },
    "waf.rule.predicates.type": {
        "Allowed values": "ByteMatch | GeoMatch | IPMatch | RegexMatch | SizeConstraint | SqlInjectionMatch | XssMatch",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "waf.rule.predicates.type",
        "UpdateRequires": "Replacement"
    },
    "waf.sizeconstraintset.sizeconstraint.comparisonoperator": {
        "Allowed values": "EQ | GE | GT | LE | LT | NE",
        "ComparisonOperator`  <a name=\"cfn-waf-sizeconstraintset-sizeconstraint-comparisonoperator\"></a>\nThe type of comparison you want AWS WAF to perform\\. AWS WAF uses this in combination with the provided `Size` and `FieldToMatch` to build an expression in the form of \"`Size` `ComparisonOperator` size in bytes of `FieldToMatch`\"\\. If that expression is true, the `SizeConstraint` is considered to match\\.  \n **EQ*": "Used to test if the `Size` is equal to the size of the `FieldToMatch`   \n **NE*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "waf.sizeconstraintset.sizeconstraint.comparisonoperator",
        "UpdateRequires": "Replacement"
    },
    "waf.sizeconstraintset.sizeconstraint.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "waf.sizeconstraintset.sizeconstraint.fieldtomatch",
        "UpdateRequires": "Replacement"
    },
    "waf.sizeconstraintset.sizeconstraint.fieldtomatch.data": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "waf.sizeconstraintset.sizeconstraint.fieldtomatch.data",
        "UpdateRequires": "Replacement"
    },
    "waf.sizeconstraintset.sizeconstraint.fieldtomatch.type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "waf.sizeconstraintset.sizeconstraint.fieldtomatch.type",
        "UpdateRequires": "Replacement"
    },
    "waf.sizeconstraintset.sizeconstraint.size": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "waf.sizeconstraintset.sizeconstraint.size",
        "UpdateRequires": "Replacement"
    },
    "waf.sizeconstraintset.sizeconstraint.texttransformation": {
        "Required": "Yes",
        "SampleValue": "TODO-TextTransformation",
        "UniqueKey": "waf.sizeconstraintset.sizeconstraint.texttransformation",
        "UpdateRequires": "Replacement"
    },
    "waf.sqlinjectionmatchset.sqlinjectionmatchtuples.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "waf.sqlinjectionmatchset.sqlinjectionmatchtuples.fieldtomatch",
        "UpdateRequires": "Replacement"
    },
    "waf.sqlinjectionmatchset.sqlinjectionmatchtuples.texttransformation": {
        "Required": "Yes",
        "SampleValue": "TODO-TextTransformation",
        "UniqueKey": "waf.sqlinjectionmatchset.sqlinjectionmatchtuples.texttransformation",
        "UpdateRequires": "Replacement"
    },
    "waf.webacl.action.type": {
        "Allowed values": "ALLOW | BLOCK | COUNT",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "waf.webacl.action.type",
        "UpdateRequires": "Replacement"
    },
    "waf.webacl.rules.action": {
        "Required": "No",
        "Type": "WafAction",
        "UniqueKey": "waf.webacl.rules.action",
        "UpdateRequires": "Replacement"
    },
    "waf.webacl.rules.priority": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "waf.webacl.rules.priority",
        "UpdateRequires": "Replacement"
    },
    "waf.webacl.rules.ruleid": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "waf.webacl.rules.ruleid",
        "UpdateRequires": "Replacement"
    },
    "waf.xssmatchset.xssmatchtuple.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "waf.xssmatchset.xssmatchtuple.fieldtomatch",
        "UpdateRequires": "Replacement"
    },
    "waf.xssmatchset.xssmatchtuple.fieldtomatch.data": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "waf.xssmatchset.xssmatchtuple.fieldtomatch.data",
        "UpdateRequires": "Replacement"
    },
    "waf.xssmatchset.xssmatchtuple.fieldtomatch.type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "waf.xssmatchset.xssmatchtuple.fieldtomatch.type",
        "UpdateRequires": "Replacement"
    },
    "waf.xssmatchset.xssmatchtuple.texttransformation": {
        "Required": "Yes",
        "SampleValue": "TODO-TextTransformation",
        "UniqueKey": "waf.xssmatchset.xssmatchtuple.texttransformation",
        "UpdateRequires": "Replacement"
    },
    "wafregional.bytematchset.bytematchtuple.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafregional.bytematchset.bytematchtuple.fieldtomatch",
        "UpdateRequires": "Replacement"
    },
    "wafregional.bytematchset.bytematchtuple.positionalconstraint": {
        "Required": "Yes",
        "SampleValue": "TODO-PositionalConstraint",
        "UniqueKey": "wafregional.bytematchset.bytematchtuple.positionalconstraint",
        "UpdateRequires": "Replacement"
    },
    "wafregional.bytematchset.bytematchtuple.targetstring": {
        "Required": "Conditional",
        "SampleValue": "TODO-TargetString",
        "UniqueKey": "wafregional.bytematchset.bytematchtuple.targetstring",
        "UpdateRequires": "Replacement"
    },
    "wafregional.bytematchset.bytematchtuple.targetstringbase64": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "wafregional.bytematchset.bytematchtuple.targetstringbase64",
        "UpdateRequires": "Replacement"
    },
    "wafregional.bytematchset.bytematchtuple.texttransformation": {
        "Required": "Yes",
        "SampleValue": "TODO-TextTransformation",
        "UniqueKey": "wafregional.bytematchset.bytematchtuple.texttransformation",
        "UpdateRequires": "Replacement"
    },
    "wafregional.bytematchset.fieldtomatch.data": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafregional.bytematchset.fieldtomatch.data",
        "UpdateRequires": "Replacement"
    },
    "wafregional.bytematchset.fieldtomatch.type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "wafregional.bytematchset.fieldtomatch.type",
        "UpdateRequires": "Replacement"
    },
    "wafregional.geomatchset.geomatchconstraint.type": {
        "Allowed values": "Country",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.geomatchset.geomatchconstraint.type",
        "UpdateRequires": "Replacement"
    },
    "wafregional.geomatchset.geomatchconstraint.value": {
        "Allowed values": "AD | AE | AF | AG | AI | AL | AM | AO | AQ | AR | AS | AT | AU | AW | AX | AZ | BA | BB | BD | BE | BF | BG | BH | BI | BJ | BL | BM | BN | BO | BQ | BR | BS | BT | BV | BW | BY | BZ | CA | CC | CD | CF | CG | CH | CI | CK | CL | CM | CN | CO | CR | CU | CV | CW | CX | CY | CZ | DE | DJ | DK | DM | DO | DZ | EC | EE | EG | EH | ER | ES | ET | FI | FJ | FK | FM | FO | FR | GA | GB | GD | GE | GF | GG | GH | GI | GL | GM | GN | GP | GQ | GR | GS | GT | GU | GW | GY | HK | HM | HN | HR | HT | HU | ID | IE | IL | IM | IN | IO | IQ | IR | IS | IT | JE | JM | JO | JP | KE | KG | KH | KI | KM | KN | KP | KR | KW | KY | KZ | LA | LB | LC | LI | LK | LR | LS | LT | LU | LV | LY | MA | MC | MD | ME | MF | MG | MH | MK | ML | MM | MN | MO | MP | MQ | MR | MS | MT | MU | MV | MW | MX | MY | MZ | NA | NC | NE | NF | NG | NI | NL | NO | NP | NR | NU | NZ | OM | PA | PE | PF | PG | PH | PK | PL | PM | PN | PR | PS | PT | PW | PY | QA | RE | RO | RS | RU | RW | SA | SB | SC | SD | SE | SG | SH | SI | SJ | SK | SL | SM | SN | SO | SR | SS | ST | SV | SX | SY | SZ | TC | TD | TF | TG | TH | TJ | TK | TL | TM | TN | TO | TR | TT | TV | TW | TZ | UA | UG | UM | US | UY | UZ | VA | VC | VE | VG | VI | VN | VU | WF | WS | YE | YT | ZA | ZM | ZW",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.geomatchset.geomatchconstraint.value",
        "UpdateRequires": "Replacement"
    },
    "wafregional.ipset.ipsetdescriptor.type": {
        "Allowed values": "IPV4 | IPV6",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.ipset.ipsetdescriptor.type",
        "UpdateRequires": "Replacement"
    },
    "wafregional.ipset.ipsetdescriptor.value": {
        "Maximum": "50",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.ipset.ipsetdescriptor.value",
        "UpdateRequires": "Replacement"
    },
    "wafregional.ratebasedrule.predicate.dataid": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.ratebasedrule.predicate.dataid",
        "UpdateRequires": "Replacement"
    },
    "wafregional.ratebasedrule.predicate.negated": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "UniqueKey": "wafregional.ratebasedrule.predicate.negated",
        "UpdateRequires": "Replacement"
    },
    "wafregional.ratebasedrule.predicate.type": {
        "Allowed values": "ByteMatch | GeoMatch | IPMatch | RegexMatch | SizeConstraint | SqlInjectionMatch | XssMatch",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.ratebasedrule.predicate.type",
        "UpdateRequires": "Replacement"
    },
    "wafregional.rule.predicate.dataid": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.rule.predicate.dataid",
        "UpdateRequires": "Replacement"
    },
    "wafregional.rule.predicate.negated": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "UniqueKey": "wafregional.rule.predicate.negated",
        "UpdateRequires": "Replacement"
    },
    "wafregional.rule.predicate.type": {
        "Allowed values": "ByteMatch | GeoMatch | IPMatch | RegexMatch | SizeConstraint | SqlInjectionMatch | XssMatch",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.rule.predicate.type",
        "UpdateRequires": "Replacement"
    },
    "wafregional.sizeconstraintset.fieldtomatch.data": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "wafregional.sizeconstraintset.fieldtomatch.data",
        "UpdateRequires": "Replacement"
    },
    "wafregional.sizeconstraintset.fieldtomatch.type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "wafregional.sizeconstraintset.fieldtomatch.type",
        "UpdateRequires": "Replacement"
    },
    "wafregional.sizeconstraintset.sizeconstraint.comparisonoperator": {
        "Allowed values": "EQ | GE | GT | LE | LT | NE",
        "ComparisonOperator`  <a name=\"cfn-wafregional-sizeconstraintset-sizeconstraint-comparisonoperator\"></a>\nThe type of comparison you want AWS WAF to perform\\. AWS WAF uses this in combination with the provided `Size` and `FieldToMatch` to build an expression in the form of \"`Size` `ComparisonOperator` size in bytes of `FieldToMatch`\"\\. If that expression is true, the `SizeConstraint` is considered to match\\.  \n **EQ*": "Used to test if the `Size` is equal to the size of the `FieldToMatch`   \n **NE*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.sizeconstraintset.sizeconstraint.comparisonoperator",
        "UpdateRequires": "Replacement"
    },
    "wafregional.sizeconstraintset.sizeconstraint.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafregional.sizeconstraintset.sizeconstraint.fieldtomatch",
        "UpdateRequires": "Replacement"
    },
    "wafregional.sizeconstraintset.sizeconstraint.size": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafregional.sizeconstraintset.sizeconstraint.size",
        "UpdateRequires": "Replacement"
    },
    "wafregional.sizeconstraintset.sizeconstraint.texttransformation": {
        "Required": "Yes",
        "SampleValue": "TODO-TextTransformation",
        "UniqueKey": "wafregional.sizeconstraintset.sizeconstraint.texttransformation",
        "UpdateRequires": "Replacement"
    },
    "wafregional.sqlinjectionmatchset.fieldtomatch.data": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "wafregional.sqlinjectionmatchset.fieldtomatch.data",
        "UpdateRequires": "Replacement"
    },
    "wafregional.sqlinjectionmatchset.fieldtomatch.type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "wafregional.sqlinjectionmatchset.fieldtomatch.type",
        "UpdateRequires": "Replacement"
    },
    "wafregional.sqlinjectionmatchset.sqlinjectionmatchtuple.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafregional.sqlinjectionmatchset.sqlinjectionmatchtuple.fieldtomatch",
        "UpdateRequires": "Replacement"
    },
    "wafregional.sqlinjectionmatchset.sqlinjectionmatchtuple.texttransformation": {
        "Required": "Yes",
        "SampleValue": "TODO-TextTransformation",
        "UniqueKey": "wafregional.sqlinjectionmatchset.sqlinjectionmatchtuple.texttransformation",
        "UpdateRequires": "Replacement"
    },
    "wafregional.webacl.action.type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.webacl.action.type",
        "UpdateRequires": "Replacement"
    },
    "wafregional.webacl.rule.action": {
        "Required": "Yes",
        "Type": "Action",
        "UniqueKey": "wafregional.webacl.rule.action",
        "UpdateRequires": "Replacement"
    },
    "wafregional.webacl.rule.priority": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafregional.webacl.rule.priority",
        "UpdateRequires": "Replacement"
    },
    "wafregional.webacl.rule.ruleid": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.webacl.rule.ruleid",
        "UpdateRequires": "Replacement"
    },
    "wafregional.xssmatchset.fieldtomatch.data": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "wafregional.xssmatchset.fieldtomatch.data",
        "UpdateRequires": "Replacement"
    },
    "wafregional.xssmatchset.fieldtomatch.type": {
        "Required": "Yes",
        "SampleValue": "TODO-Type",
        "UniqueKey": "wafregional.xssmatchset.fieldtomatch.type",
        "UpdateRequires": "Replacement"
    },
    "wafregional.xssmatchset.xssmatchtuple.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafregional.xssmatchset.xssmatchtuple.fieldtomatch",
        "UpdateRequires": "Replacement"
    },
    "wafregional.xssmatchset.xssmatchtuple.texttransformation": {
        "Required": "Yes",
        "SampleValue": "TODO-TextTransformation",
        "UniqueKey": "wafregional.xssmatchset.xssmatchtuple.texttransformation",
        "UpdateRequires": "Replacement"
    },
    "wafv2.ipset.ipaddresses.cfnproperties": [
        "IPAddresses",
        "UniqueKey"
    ],
    "wafv2.ipset.ipaddresses.ipaddresses": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.ipset.ipaddresses.ipaddresses",
        "UpdateRequires": "Replacement"
    },
    "wafv2.ipset.taglist.cfnproperties": [
        "TagList",
        "UniqueKey"
    ],
    "wafv2.ipset.taglist.taglist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.ipset.taglist.taglist",
        "UpdateRequires": "Replacement"
    },
    "wafv2.regexpatternset.regex.cfnproperties": [
        "RegexString",
        "UniqueKey"
    ],
    "wafv2.regexpatternset.regex.regexstring": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.regexpatternset.regex.regexstring",
        "UpdateRequires": "Replacement"
    },
    "wafv2.regexpatternset.regularexpressionlist.cfnproperties": [
        "RegularExpressionList",
        "UniqueKey"
    ],
    "wafv2.regexpatternset.regularexpressionlist.regularexpressionlist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.regexpatternset.regularexpressionlist.regularexpressionlist",
        "UpdateRequires": "Replacement"
    },
    "wafv2.regexpatternset.taglist.cfnproperties": [
        "TagList",
        "UniqueKey"
    ],
    "wafv2.regexpatternset.taglist.taglist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.regexpatternset.taglist.taglist",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.andstatementone.statements": {
        "Required": "Yes",
        "Type": "List of [StatementTwo",
        "UniqueKey": "wafv2.rulegroup.andstatementone.statements",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.andstatementtwo.statements": {
        "Required": "Yes",
        "Type": "List of [StatementThree",
        "UniqueKey": "wafv2.rulegroup.andstatementtwo.statements",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.bytematchstatement.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.rulegroup.bytematchstatement.fieldtomatch",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.bytematchstatement.positionalconstraint": {
        "Required": "Yes",
        "SampleValue": "TODO-PositionalConstraint",
        "UniqueKey": "wafv2.rulegroup.bytematchstatement.positionalconstraint",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.bytematchstatement.searchstring": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.bytematchstatement.searchstring",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.bytematchstatement.searchstringbase64": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.bytematchstatement.searchstringbase64",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.bytematchstatement.texttransformations": {
        "Required": "Yes",
        "Type": "List of [TextTransformation",
        "UniqueKey": "wafv2.rulegroup.bytematchstatement.texttransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.countrycodes.cfnproperties": [
        "CountryCodes",
        "UniqueKey"
    ],
    "wafv2.rulegroup.countrycodes.countrycodes": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.rulegroup.countrycodes.countrycodes",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.fieldtomatch.allqueryarguments": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.allqueryarguments",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.fieldtomatch.body": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.body",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.fieldtomatch.method": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.method",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.fieldtomatch.querystring": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.querystring",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.fieldtomatch.singleheader": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.singleheader",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.fieldtomatch.singlequeryargument": {
        "Required": "No",
        "SampleValue": "TODO-SingleQueryArgument",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.singlequeryargument",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.fieldtomatch.uripath": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.uripath",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.forwardedipconfiguration.fallbackbehavior": {
        "Allowed values": "MATCH | NO_MATCH",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.forwardedipconfiguration.fallbackbehavior",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.forwardedipconfiguration.headername": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9-]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.forwardedipconfiguration.headername",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.geomatchstatement.countrycodes": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "wafv2.rulegroup.geomatchstatement.countrycodes",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.geomatchstatement.forwardedipconfig": {
        "Required": "No",
        "Type": "ForwardedIPConfiguration",
        "UniqueKey": "wafv2.rulegroup.geomatchstatement.forwardedipconfig",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ipsetforwardedipconfiguration.fallbackbehavior": {
        "Allowed values": "MATCH | NO_MATCH",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.ipsetforwardedipconfiguration.fallbackbehavior",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ipsetforwardedipconfiguration.headername": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9-]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.ipsetforwardedipconfiguration.headername",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ipsetforwardedipconfiguration.position": {
        "Allowed values": "ANY | FIRST | LAST",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.ipsetforwardedipconfiguration.position",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ipsetreferencestatement.arn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.ipsetreferencestatement.arn",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ipsetreferencestatement.ipsetforwardedipconfig": {
        "Required": "No",
        "Type": "IPSetForwardedIPConfiguration",
        "UniqueKey": "wafv2.rulegroup.ipsetreferencestatement.ipsetforwardedipconfig",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.notstatementone.statement": {
        "Required": "Yes",
        "Type": "StatementTwo",
        "UniqueKey": "wafv2.rulegroup.notstatementone.statement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.notstatementtwo.statement": {
        "Required": "Yes",
        "Type": "StatementThree",
        "UniqueKey": "wafv2.rulegroup.notstatementtwo.statement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.orstatementone.statements": {
        "Required": "Yes",
        "Type": "List of [StatementTwo",
        "UniqueKey": "wafv2.rulegroup.orstatementone.statements",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.orstatementtwo.statements": {
        "Required": "Yes",
        "Type": "List of [StatementThree",
        "UniqueKey": "wafv2.rulegroup.orstatementtwo.statements",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ratebasedstatementone.aggregatekeytype": {
        "Allowed values": "FORWARDED_IP | IP",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementone.aggregatekeytype",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ratebasedstatementone.forwardedipconfig": {
        "Required": "No",
        "Type": "ForwardedIPConfiguration",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementone.forwardedipconfig",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ratebasedstatementone.limit": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementone.limit",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ratebasedstatementone.scopedownstatement": {
        "Required": "No",
        "Type": "StatementTwo",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementone.scopedownstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ratebasedstatementtwo.aggregatekeytype": {
        "Allowed values": "FORWARDED_IP | IP",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementtwo.aggregatekeytype",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ratebasedstatementtwo.forwardedipconfig": {
        "Required": "No",
        "Type": "ForwardedIPConfiguration",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementtwo.forwardedipconfig",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ratebasedstatementtwo.limit": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementtwo.limit",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ratebasedstatementtwo.scopedownstatement": {
        "Required": "No",
        "Type": "StatementThree",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementtwo.scopedownstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.regexpatternsetreferencestatement.arn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.regexpatternsetreferencestatement.arn",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.regexpatternsetreferencestatement.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.rulegroup.regexpatternsetreferencestatement.fieldtomatch",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.regexpatternsetreferencestatement.texttransformations": {
        "Required": "Yes",
        "Type": "List of [TextTransformation",
        "UniqueKey": "wafv2.rulegroup.regexpatternsetreferencestatement.texttransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.rule.action": {
        "Required": "No",
        "Type": "RuleAction",
        "UniqueKey": "wafv2.rulegroup.rule.action",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.rule.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[\\w\\-]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.rule.name",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.rule.priority": {
        "Minimum": "0",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafv2.rulegroup.rule.priority",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.rule.statement": {
        "Required": "Yes",
        "Type": "StatementOne",
        "UniqueKey": "wafv2.rulegroup.rule.statement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.rule.visibilityconfig": {
        "Required": "Yes",
        "Type": "VisibilityConfig",
        "UniqueKey": "wafv2.rulegroup.rule.visibilityconfig",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ruleaction.allow": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.rulegroup.ruleaction.allow",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ruleaction.block": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.rulegroup.ruleaction.block",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.ruleaction.count": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.rulegroup.ruleaction.count",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.rules.cfnproperties": [
        "Rules",
        "UniqueKey"
    ],
    "wafv2.rulegroup.rules.rules": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.rulegroup.rules.rules",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.singleheader.cfnproperties": [
        "Name",
        "UniqueKey"
    ],
    "wafv2.rulegroup.singleheader.name": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.singleheader.name",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.singlequeryargument.cfnproperties": [
        "Name",
        "UniqueKey"
    ],
    "wafv2.rulegroup.singlequeryargument.name": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.singlequeryargument.name",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.sizeconstraintstatement.comparisonoperator": {
        "Allowed values": "EQ | GE | GT | LE | LT | NE",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.sizeconstraintstatement.comparisonoperator",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.sizeconstraintstatement.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.rulegroup.sizeconstraintstatement.fieldtomatch",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.sizeconstraintstatement.size": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafv2.rulegroup.sizeconstraintstatement.size",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.sizeconstraintstatement.texttransformations": {
        "Required": "Yes",
        "Type": "List of [TextTransformation",
        "UniqueKey": "wafv2.rulegroup.sizeconstraintstatement.texttransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.sqlimatchstatement.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.rulegroup.sqlimatchstatement.fieldtomatch",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.sqlimatchstatement.texttransformations": {
        "Required": "Yes",
        "Type": "List of [TextTransformation",
        "UniqueKey": "wafv2.rulegroup.sqlimatchstatement.texttransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.andstatement": {
        "Required": "No",
        "Type": "AndStatementOne",
        "UniqueKey": "wafv2.rulegroup.statementone.andstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.bytematchstatement": {
        "Required": "No",
        "Type": "ByteMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.bytematchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.geomatchstatement": {
        "Required": "No",
        "Type": "GeoMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.geomatchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.ipsetreferencestatement": {
        "Required": "No",
        "Type": "IPSetReferenceStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.ipsetreferencestatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.notstatement": {
        "Required": "No",
        "Type": "NotStatementOne",
        "UniqueKey": "wafv2.rulegroup.statementone.notstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.orstatement": {
        "Required": "No",
        "Type": "OrStatementOne",
        "UniqueKey": "wafv2.rulegroup.statementone.orstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.ratebasedstatement": {
        "Required": "No",
        "Type": "RateBasedStatementOne",
        "UniqueKey": "wafv2.rulegroup.statementone.ratebasedstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.regexpatternsetreferencestatement": {
        "Required": "No",
        "Type": "RegexPatternSetReferenceStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.regexpatternsetreferencestatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.sizeconstraintstatement": {
        "Required": "No",
        "Type": "SizeConstraintStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.sizeconstraintstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.sqlimatchstatement": {
        "Required": "No",
        "Type": "SqliMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.sqlimatchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementone.xssmatchstatement": {
        "Required": "No",
        "Type": "XssMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.xssmatchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementthree.bytematchstatement": {
        "Required": "No",
        "Type": "ByteMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.bytematchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementthree.geomatchstatement": {
        "Required": "No",
        "Type": "GeoMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.geomatchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementthree.ipsetreferencestatement": {
        "Required": "No",
        "Type": "IPSetReferenceStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.ipsetreferencestatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementthree.regexpatternsetreferencestatement": {
        "Required": "No",
        "Type": "RegexPatternSetReferenceStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.regexpatternsetreferencestatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementthree.sizeconstraintstatement": {
        "Required": "No",
        "Type": "SizeConstraintStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.sizeconstraintstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementthree.sqlimatchstatement": {
        "Required": "No",
        "Type": "SqliMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.sqlimatchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementthree.xssmatchstatement": {
        "Required": "No",
        "Type": "XssMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.xssmatchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementthrees.cfnproperties": [
        "StatementThrees",
        "UniqueKey"
    ],
    "wafv2.rulegroup.statementthrees.statementthrees": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.rulegroup.statementthrees.statementthrees",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.andstatement": {
        "Required": "No",
        "Type": "AndStatementTwo",
        "UniqueKey": "wafv2.rulegroup.statementtwo.andstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.bytematchstatement": {
        "Required": "No",
        "Type": "ByteMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.bytematchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.geomatchstatement": {
        "Required": "No",
        "Type": "GeoMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.geomatchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.ipsetreferencestatement": {
        "Required": "No",
        "Type": "IPSetReferenceStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.ipsetreferencestatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.notstatement": {
        "Required": "No",
        "Type": "NotStatementTwo",
        "UniqueKey": "wafv2.rulegroup.statementtwo.notstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.orstatement": {
        "Required": "No",
        "Type": "OrStatementTwo",
        "UniqueKey": "wafv2.rulegroup.statementtwo.orstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.ratebasedstatement": {
        "Required": "No",
        "Type": "RateBasedStatementTwo",
        "UniqueKey": "wafv2.rulegroup.statementtwo.ratebasedstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.regexpatternsetreferencestatement": {
        "Required": "No",
        "Type": "RegexPatternSetReferenceStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.regexpatternsetreferencestatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.sizeconstraintstatement": {
        "Required": "No",
        "Type": "SizeConstraintStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.sizeconstraintstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.sqlimatchstatement": {
        "Required": "No",
        "Type": "SqliMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.sqlimatchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwo.xssmatchstatement": {
        "Required": "No",
        "Type": "XssMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.xssmatchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.statementtwos.cfnproperties": [
        "StatementTwos",
        "UniqueKey"
    ],
    "wafv2.rulegroup.statementtwos.statementtwos": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.rulegroup.statementtwos.statementtwos",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.taglist.cfnproperties": [
        "TagList",
        "UniqueKey"
    ],
    "wafv2.rulegroup.taglist.taglist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.rulegroup.taglist.taglist",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.texttransformation.compress_white_space": {
        "Required": "Yes",
        "SampleValue": "TODO-COMPRESS_WHITE_SPACE",
        "UniqueKey": "wafv2.rulegroup.texttransformation.compress_white_space",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.texttransformation.priority": {
        "Minimum": "0",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafv2.rulegroup.texttransformation.priority",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.texttransformation.type": {
        "UniqueKey": "wafv2.rulegroup.texttransformation.type"
    },
    "wafv2.rulegroup.texttransformations.cfnproperties": [
        "TextTransformations",
        "UniqueKey"
    ],
    "wafv2.rulegroup.texttransformations.texttransformations": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.rulegroup.texttransformations.texttransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.visibilityconfig.cloudwatchmetricsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "wafv2.rulegroup.visibilityconfig.cloudwatchmetricsenabled",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.visibilityconfig.metricname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^[\\w#:\\.\\-/]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.visibilityconfig.metricname",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.visibilityconfig.sampledrequestsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "wafv2.rulegroup.visibilityconfig.sampledrequestsenabled",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.xssmatchstatement.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.rulegroup.xssmatchstatement.fieldtomatch",
        "UpdateRequires": "Replacement"
    },
    "wafv2.rulegroup.xssmatchstatement.texttransformations": {
        "Required": "Yes",
        "Type": "List of [TextTransformation",
        "UniqueKey": "wafv2.rulegroup.xssmatchstatement.texttransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.andstatementone.statements": {
        "Required": "Yes",
        "Type": "List of [StatementTwo",
        "UniqueKey": "wafv2.webacl.andstatementone.statements",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.andstatementtwo.statements": {
        "Required": "Yes",
        "Type": "List of [StatementThree",
        "UniqueKey": "wafv2.webacl.andstatementtwo.statements",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.bytematchstatement.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.webacl.bytematchstatement.fieldtomatch",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.bytematchstatement.positionalconstraint": {
        "Required": "Yes",
        "SampleValue": "TODO-PositionalConstraint",
        "UniqueKey": "wafv2.webacl.bytematchstatement.positionalconstraint",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.bytematchstatement.searchstring": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.bytematchstatement.searchstring",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.bytematchstatement.searchstringbase64": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.bytematchstatement.searchstringbase64",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.bytematchstatement.texttransformations": {
        "Required": "Yes",
        "Type": "List of [TextTransformation",
        "UniqueKey": "wafv2.webacl.bytematchstatement.texttransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.countrycodes.cfnproperties": [
        "CountryCodes",
        "UniqueKey"
    ],
    "wafv2.webacl.countrycodes.countrycodes": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.countrycodes.countrycodes",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.defaultaction.allow": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.defaultaction.allow",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.defaultaction.block": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.defaultaction.block",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.excludedrule.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[\\w\\-]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.excludedrule.name",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.excludedrules.cfnproperties": [
        "ExcludedRules",
        "UniqueKey"
    ],
    "wafv2.webacl.excludedrules.excludedrules": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.excludedrules.excludedrules",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.fieldtomatch.allqueryarguments": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.fieldtomatch.allqueryarguments",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.fieldtomatch.body": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.fieldtomatch.body",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.fieldtomatch.method": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.fieldtomatch.method",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.fieldtomatch.querystring": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.fieldtomatch.querystring",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.fieldtomatch.singleheader": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.fieldtomatch.singleheader",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.fieldtomatch.singlequeryargument": {
        "Required": "No",
        "SampleValue": "TODO-SingleQueryArgument",
        "UniqueKey": "wafv2.webacl.fieldtomatch.singlequeryargument",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.fieldtomatch.uripath": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.fieldtomatch.uripath",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.forwardedipconfiguration.fallbackbehavior": {
        "Allowed values": "MATCH | NO_MATCH",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.forwardedipconfiguration.fallbackbehavior",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.forwardedipconfiguration.headername": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9-]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.forwardedipconfiguration.headername",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.geomatchstatement.countrycodes": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "wafv2.webacl.geomatchstatement.countrycodes",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.geomatchstatement.forwardedipconfig": {
        "Required": "No",
        "Type": "ForwardedIPConfiguration",
        "UniqueKey": "wafv2.webacl.geomatchstatement.forwardedipconfig",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ipsetforwardedipconfiguration.fallbackbehavior": {
        "Allowed values": "MATCH | NO_MATCH",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.ipsetforwardedipconfiguration.fallbackbehavior",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ipsetforwardedipconfiguration.headername": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9-]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.ipsetforwardedipconfiguration.headername",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ipsetforwardedipconfiguration.position": {
        "Allowed values": "ANY | FIRST | LAST",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.ipsetforwardedipconfiguration.position",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ipsetreferencestatement.arn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.ipsetreferencestatement.arn",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ipsetreferencestatement.ipsetforwardedipconfig": {
        "Required": "No",
        "Type": "IPSetForwardedIPConfiguration",
        "UniqueKey": "wafv2.webacl.ipsetreferencestatement.ipsetforwardedipconfig",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.managedrulegroupstatement.excludedrules": {
        "Required": "No",
        "Type": "List of [ExcludedRule",
        "UniqueKey": "wafv2.webacl.managedrulegroupstatement.excludedrules",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.managedrulegroupstatement.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[\\w\\-]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.managedrulegroupstatement.name",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.managedrulegroupstatement.vendorname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.managedrulegroupstatement.vendorname",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.notstatementone.statement": {
        "Required": "Yes",
        "Type": "StatementTwo",
        "UniqueKey": "wafv2.webacl.notstatementone.statement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.notstatementtwo.statement": {
        "Required": "Yes",
        "Type": "StatementThree",
        "UniqueKey": "wafv2.webacl.notstatementtwo.statement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.orstatementone.statements": {
        "Required": "Yes",
        "Type": "List of [StatementTwo",
        "UniqueKey": "wafv2.webacl.orstatementone.statements",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.orstatementtwo.statements": {
        "Required": "Yes",
        "Type": "List of [StatementThree",
        "UniqueKey": "wafv2.webacl.orstatementtwo.statements",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.overrideaction.count": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.overrideaction.count",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.overrideaction.none": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.overrideaction.none",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ratebasedstatementone.aggregatekeytype": {
        "Allowed values": "FORWARDED_IP | IP",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.ratebasedstatementone.aggregatekeytype",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ratebasedstatementone.forwardedipconfig": {
        "Required": "No",
        "Type": "ForwardedIPConfiguration",
        "UniqueKey": "wafv2.webacl.ratebasedstatementone.forwardedipconfig",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ratebasedstatementone.limit": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafv2.webacl.ratebasedstatementone.limit",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ratebasedstatementone.scopedownstatement": {
        "Required": "No",
        "Type": "StatementTwo",
        "UniqueKey": "wafv2.webacl.ratebasedstatementone.scopedownstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ratebasedstatementtwo.aggregatekeytype": {
        "Allowed values": "FORWARDED_IP | IP",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.ratebasedstatementtwo.aggregatekeytype",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ratebasedstatementtwo.forwardedipconfig": {
        "Required": "No",
        "Type": "ForwardedIPConfiguration",
        "UniqueKey": "wafv2.webacl.ratebasedstatementtwo.forwardedipconfig",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ratebasedstatementtwo.limit": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafv2.webacl.ratebasedstatementtwo.limit",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ratebasedstatementtwo.scopedownstatement": {
        "Required": "No",
        "Type": "StatementThree",
        "UniqueKey": "wafv2.webacl.ratebasedstatementtwo.scopedownstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.regexpatternsetreferencestatement.arn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.regexpatternsetreferencestatement.arn",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.regexpatternsetreferencestatement.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.webacl.regexpatternsetreferencestatement.fieldtomatch",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.regexpatternsetreferencestatement.texttransformations": {
        "Required": "Yes",
        "Type": "List of [TextTransformation",
        "UniqueKey": "wafv2.webacl.regexpatternsetreferencestatement.texttransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.rule.action": {
        "Required": "Conditional",
        "Type": "RuleAction",
        "UniqueKey": "wafv2.webacl.rule.action",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.rule.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[\\w\\-]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.rule.name",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.rule.overrideaction": {
        "Required": "Conditional",
        "Type": "OverrideAction",
        "UniqueKey": "wafv2.webacl.rule.overrideaction",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.rule.priority": {
        "Minimum": "0",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafv2.webacl.rule.priority",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.rule.statement": {
        "Required": "Yes",
        "Type": "StatementOne",
        "UniqueKey": "wafv2.webacl.rule.statement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.rule.visibilityconfig": {
        "Required": "Yes",
        "Type": "VisibilityConfig",
        "UniqueKey": "wafv2.webacl.rule.visibilityconfig",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ruleaction.allow": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.ruleaction.allow",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ruleaction.block": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.ruleaction.block",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.ruleaction.count": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "wafv2.webacl.ruleaction.count",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.rulegroupreferencestatement.arn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.rulegroupreferencestatement.arn",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.rulegroupreferencestatement.excludedrules": {
        "Required": "No",
        "Type": "List of [ExcludedRule",
        "UniqueKey": "wafv2.webacl.rulegroupreferencestatement.excludedrules",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.rules.cfnproperties": [
        "Rules",
        "UniqueKey"
    ],
    "wafv2.webacl.rules.rules": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.rules.rules",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.singleheader.cfnproperties": [
        "Name",
        "UniqueKey"
    ],
    "wafv2.webacl.singleheader.name": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.singleheader.name",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.singlequeryargument.cfnproperties": [
        "Name",
        "UniqueKey"
    ],
    "wafv2.webacl.singlequeryargument.name": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.singlequeryargument.name",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.sizeconstraintstatement.comparisonoperator": {
        "Allowed values": "EQ | GE | GT | LE | LT | NE",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.sizeconstraintstatement.comparisonoperator",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.sizeconstraintstatement.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.webacl.sizeconstraintstatement.fieldtomatch",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.sizeconstraintstatement.size": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafv2.webacl.sizeconstraintstatement.size",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.sizeconstraintstatement.texttransformations": {
        "Required": "Yes",
        "Type": "List of [TextTransformation",
        "UniqueKey": "wafv2.webacl.sizeconstraintstatement.texttransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.sqlimatchstatement.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.webacl.sqlimatchstatement.fieldtomatch",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.sqlimatchstatement.texttransformations": {
        "Required": "Yes",
        "Type": "List of [TextTransformation",
        "UniqueKey": "wafv2.webacl.sqlimatchstatement.texttransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.andstatement": {
        "Required": "No",
        "Type": "AndStatementOne",
        "UniqueKey": "wafv2.webacl.statementone.andstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.bytematchstatement": {
        "Required": "No",
        "Type": "ByteMatchStatement",
        "UniqueKey": "wafv2.webacl.statementone.bytematchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.geomatchstatement": {
        "Required": "No",
        "Type": "GeoMatchStatement",
        "UniqueKey": "wafv2.webacl.statementone.geomatchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.ipsetreferencestatement": {
        "Required": "No",
        "Type": "IPSetReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementone.ipsetreferencestatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.managedrulegroupstatement": {
        "Required": "No",
        "Type": "ManagedRuleGroupStatement",
        "UniqueKey": "wafv2.webacl.statementone.managedrulegroupstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.notstatement": {
        "Required": "No",
        "Type": "NotStatementOne",
        "UniqueKey": "wafv2.webacl.statementone.notstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.orstatement": {
        "Required": "No",
        "Type": "OrStatementOne",
        "UniqueKey": "wafv2.webacl.statementone.orstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.ratebasedstatement": {
        "Required": "No",
        "Type": "RateBasedStatementOne",
        "UniqueKey": "wafv2.webacl.statementone.ratebasedstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.regexpatternsetreferencestatement": {
        "Required": "No",
        "Type": "RegexPatternSetReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementone.regexpatternsetreferencestatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.rulegroupreferencestatement": {
        "Required": "No",
        "Type": "RuleGroupReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementone.rulegroupreferencestatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.sizeconstraintstatement": {
        "Required": "No",
        "Type": "SizeConstraintStatement",
        "UniqueKey": "wafv2.webacl.statementone.sizeconstraintstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.sqlimatchstatement": {
        "Required": "No",
        "Type": "SqliMatchStatement",
        "UniqueKey": "wafv2.webacl.statementone.sqlimatchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementone.xssmatchstatement": {
        "Required": "No",
        "Type": "XssMatchStatement",
        "UniqueKey": "wafv2.webacl.statementone.xssmatchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementthree.bytematchstatement": {
        "Required": "No",
        "Type": "ByteMatchStatement",
        "UniqueKey": "wafv2.webacl.statementthree.bytematchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementthree.geomatchstatement": {
        "Required": "No",
        "Type": "GeoMatchStatement",
        "UniqueKey": "wafv2.webacl.statementthree.geomatchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementthree.ipsetreferencestatement": {
        "Required": "No",
        "Type": "IPSetReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementthree.ipsetreferencestatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementthree.managedrulegroupstatement": {
        "Required": "No",
        "Type": "ManagedRuleGroupStatement",
        "UniqueKey": "wafv2.webacl.statementthree.managedrulegroupstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementthree.regexpatternsetreferencestatement": {
        "Required": "No",
        "Type": "RegexPatternSetReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementthree.regexpatternsetreferencestatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementthree.rulegroupreferencestatement": {
        "Required": "No",
        "Type": "RuleGroupReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementthree.rulegroupreferencestatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementthree.sizeconstraintstatement": {
        "Required": "No",
        "Type": "SizeConstraintStatement",
        "UniqueKey": "wafv2.webacl.statementthree.sizeconstraintstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementthree.sqlimatchstatement": {
        "Required": "No",
        "Type": "SqliMatchStatement",
        "UniqueKey": "wafv2.webacl.statementthree.sqlimatchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementthree.xssmatchstatement": {
        "Required": "No",
        "Type": "XssMatchStatement",
        "UniqueKey": "wafv2.webacl.statementthree.xssmatchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementthrees.cfnproperties": [
        "StatementThrees",
        "UniqueKey"
    ],
    "wafv2.webacl.statementthrees.statementthrees": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.statementthrees.statementthrees",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.andstatement": {
        "Required": "No",
        "Type": "AndStatementTwo",
        "UniqueKey": "wafv2.webacl.statementtwo.andstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.bytematchstatement": {
        "Required": "No",
        "Type": "ByteMatchStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.bytematchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.geomatchstatement": {
        "Required": "No",
        "Type": "GeoMatchStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.geomatchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.ipsetreferencestatement": {
        "Required": "No",
        "Type": "IPSetReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.ipsetreferencestatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.managedrulegroupstatement": {
        "Required": "No",
        "Type": "ManagedRuleGroupStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.managedrulegroupstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.notstatement": {
        "Required": "No",
        "Type": "NotStatementTwo",
        "UniqueKey": "wafv2.webacl.statementtwo.notstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.orstatement": {
        "Required": "No",
        "Type": "OrStatementTwo",
        "UniqueKey": "wafv2.webacl.statementtwo.orstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.ratebasedstatement": {
        "Required": "No",
        "Type": "RateBasedStatementTwo",
        "UniqueKey": "wafv2.webacl.statementtwo.ratebasedstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.regexpatternsetreferencestatement": {
        "Required": "No",
        "Type": "RegexPatternSetReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.regexpatternsetreferencestatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.rulegroupreferencestatement": {
        "Required": "No",
        "Type": "RuleGroupReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.rulegroupreferencestatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.sizeconstraintstatement": {
        "Required": "No",
        "Type": "SizeConstraintStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.sizeconstraintstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.sqlimatchstatement": {
        "Required": "No",
        "Type": "SqliMatchStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.sqlimatchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwo.xssmatchstatement": {
        "Required": "No",
        "Type": "XssMatchStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.xssmatchstatement",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.statementtwos.cfnproperties": [
        "StatementTwos",
        "UniqueKey"
    ],
    "wafv2.webacl.statementtwos.statementtwos": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.statementtwos.statementtwos",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.taglist.cfnproperties": [
        "TagList",
        "UniqueKey"
    ],
    "wafv2.webacl.taglist.taglist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.taglist.taglist",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.texttransformation.compress_white_space": {
        "Required": "Yes",
        "SampleValue": "TODO-COMPRESS_WHITE_SPACE",
        "UniqueKey": "wafv2.webacl.texttransformation.compress_white_space",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.texttransformation.priority": {
        "Minimum": "0",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafv2.webacl.texttransformation.priority",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.texttransformation.type": {
        "UniqueKey": "wafv2.webacl.texttransformation.type"
    },
    "wafv2.webacl.texttransformations.cfnproperties": [
        "TextTransformations",
        "UniqueKey"
    ],
    "wafv2.webacl.texttransformations.texttransformations": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.texttransformations.texttransformations",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.visibilityconfig.cloudwatchmetricsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "wafv2.webacl.visibilityconfig.cloudwatchmetricsenabled",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.visibilityconfig.metricname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^[\\w#:\\.\\-/]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.visibilityconfig.metricname",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.visibilityconfig.sampledrequestsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "wafv2.webacl.visibilityconfig.sampledrequestsenabled",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.xssmatchstatement.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.webacl.xssmatchstatement.fieldtomatch",
        "UpdateRequires": "Replacement"
    },
    "wafv2.webacl.xssmatchstatement.texttransformations": {
        "Required": "Yes",
        "Type": "List of [TextTransformation",
        "UniqueKey": "wafv2.webacl.xssmatchstatement.texttransformations",
        "UpdateRequires": "Replacement"
    },
    "waitcondition.count": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "waitcondition.count",
        "UpdateRequires": "Replacement"
    },
    "waitcondition.handle": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "waitcondition.handle",
        "UpdateRequires": "Replacement"
    },
    "waitcondition.timeout": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "waitcondition.timeout",
        "UpdateRequires": "Replacement"
    },
    "workspaces.connectionalias.connectionaliasassociation.associatedaccountid": {
        "Pattern": "^\\d{12}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "workspaces.connectionalias.connectionaliasassociation.associatedaccountid",
        "UpdateRequires": "Replacement"
    },
    "workspaces.connectionalias.connectionaliasassociation.associationstatus": {
        "Allowed values": "ASSOCIATED_WITH_OWNER_ACCOUNT | ASSOCIATED_WITH_SHARED_ACCOUNT | NOT_ASSOCIATED | PENDING_ASSOCIATION | PENDING_DISASSOCIATION",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "workspaces.connectionalias.connectionaliasassociation.associationstatus",
        "UpdateRequires": "Replacement"
    },
    "workspaces.connectionalias.connectionaliasassociation.connectionidentifier": {
        "Maximum": "20",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "workspaces.connectionalias.connectionaliasassociation.connectionidentifier",
        "UpdateRequires": "Replacement"
    },
    "workspaces.connectionalias.connectionaliasassociation.resourceid": {
        "Minimum": "1",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "workspaces.connectionalias.connectionaliasassociation.resourceid",
        "UpdateRequires": "Replacement"
    },
    "workspaces.workspace.workspaceproperties.computetypename": {
        "Allowed values": "GRAPHICS | GRAPHICSPRO | PERFORMANCE | POWER | POWERPRO | STANDARD | VALUE",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "workspaces.workspace.workspaceproperties.computetypename",
        "UpdateRequires": "Replacement"
    },
    "workspaces.workspace.workspaceproperties.rootvolumesizegib": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "workspaces.workspace.workspaceproperties.rootvolumesizegib",
        "UpdateRequires": "Replacement"
    },
    "workspaces.workspace.workspaceproperties.runningmode": {
        "Allowed values": "ALWAYS_ON | AUTO_STOP",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "workspaces.workspace.workspaceproperties.runningmode",
        "UpdateRequires": "Replacement"
    },
    "workspaces.workspace.workspaceproperties.runningmodeautostoptimeoutinminutes": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "workspaces.workspace.workspaceproperties.runningmodeautostoptimeoutinminutes",
        "UpdateRequires": "Replacement"
    },
    "workspaces.workspace.workspaceproperties.uservolumesizegib": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "workspaces.workspace.workspaceproperties.uservolumesizegib",
        "UpdateRequires": "Replacement"
    }
}