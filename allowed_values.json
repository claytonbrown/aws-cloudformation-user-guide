{
    "accessanalyzer.analyzer.archiverule.cfnproperties": [
        "Filter",
        "RuleName",
        "UniqueKey",
        "SampleValue"
    ],
    "accessanalyzer.analyzer.archiverule.filter": {
        "Required": "Yes",
        "Type": "List",
        "UniqueKey": "accessanalyzer.analyzer.archiverule.filter",
        "UpdateRequires": "No interruption"
    },
    "accessanalyzer.analyzer.archiverule.rulename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "accessanalyzer.analyzer.archiverule.rulename",
        "UpdateRequires": "No interruption"
    },
    "accessanalyzer.analyzer.filter.cfnproperties": [
        "Property",
        "Contains",
        "Eq",
        "Exists",
        "Neq",
        "UniqueKey"
    ],
    "accessanalyzer.analyzer.filter.contains": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "accessanalyzer.analyzer.filter.contains",
        "UpdateRequires": "No interruption"
    },
    "accessanalyzer.analyzer.filter.eq": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "accessanalyzer.analyzer.filter.eq",
        "UpdateRequires": "No interruption"
    },
    "accessanalyzer.analyzer.filter.exists": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "accessanalyzer.analyzer.filter.exists",
        "UpdateRequires": "No interruption"
    },
    "accessanalyzer.analyzer.filter.neq": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "accessanalyzer.analyzer.filter.neq",
        "UpdateRequires": "No interruption"
    },
    "accessanalyzer.analyzer.filter.property": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "accessanalyzer.analyzer.filter.property",
        "UpdateRequires": "No interruption"
    },
    "amazonmq.broker.configurationid.cfnproperties": [
        "Id",
        "Revision",
        "UniqueKey",
        "SampleValue"
    ],
    "amazonmq.broker.configurationid.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.configurationid.id",
        "UpdateRequires": "No interruption"
    },
    "amazonmq.broker.configurationid.revision": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "amazonmq.broker.configurationid.revision",
        "UpdateRequires": "No interruption"
    },
    "amazonmq.broker.encryptionoptions.cfnproperties": [
        "KmsKeyId",
        "UseAwsOwnedKey",
        "UniqueKey",
        "SampleValue"
    ],
    "amazonmq.broker.encryptionoptions.kmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.encryptionoptions.kmskeyid",
        "UpdateRequires": "No interruption"
    },
    "amazonmq.broker.encryptionoptions.useawsownedkey": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amazonmq.broker.encryptionoptions.useawsownedkey",
        "UpdateRequires": "No interruption"
    },
    "amazonmq.broker.loglist.audit": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amazonmq.broker.loglist.audit",
        "UpdateRequires": "No interruption"
    },
    "amazonmq.broker.loglist.cfnproperties": [
        "Audit",
        "General",
        "UniqueKey",
        "SampleValue"
    ],
    "amazonmq.broker.loglist.general": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amazonmq.broker.loglist.general",
        "UpdateRequires": "No interruption"
    },
    "amazonmq.broker.maintenancewindow.cfnproperties": [
        "DayOfWeek",
        "TimeZone",
        "TimeOfDay",
        "UniqueKey"
    ],
    "amazonmq.broker.maintenancewindow.dayofweek": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.maintenancewindow.dayofweek",
        "UpdateRequires": "No interruption"
    },
    "amazonmq.broker.maintenancewindow.timeofday": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.maintenancewindow.timeofday",
        "UpdateRequires": "No interruption"
    },
    "amazonmq.broker.maintenancewindow.timezone": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.maintenancewindow.timezone",
        "UpdateRequires": "No interruption"
    },
    "amazonmq.broker.tagsentry.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "amazonmq.broker.tagsentry.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.tagsentry.key",
        "UpdateRequires": "No interruption"
    },
    "amazonmq.broker.tagsentry.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.tagsentry.value",
        "UpdateRequires": "No interruption"
    },
    "amazonmq.broker.user.cfnproperties": [
        "ConsoleAccess",
        "Username",
        "Password",
        "Groups",
        "UniqueKey"
    ],
    "amazonmq.broker.user.consoleaccess": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amazonmq.broker.user.consoleaccess",
        "UpdateRequires": "No interruption"
    },
    "amazonmq.broker.user.groups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "amazonmq.broker.user.groups",
        "UpdateRequires": "No interruption"
    },
    "amazonmq.broker.user.password": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.user.password",
        "UpdateRequires": "No interruption"
    },
    "amazonmq.broker.user.username": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.broker.user.username",
        "UpdateRequires": "No interruption"
    },
    "amazonmq.configuration.tagsentry.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "amazonmq.configuration.tagsentry.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.configuration.tagsentry.key",
        "UpdateRequires": "No interruption"
    },
    "amazonmq.configuration.tagsentry.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.configuration.tagsentry.value",
        "UpdateRequires": "No interruption"
    },
    "amazonmq.configurationassociation.configurationid.cfnproperties": [
        "Id",
        "Revision",
        "UniqueKey",
        "SampleValue"
    ],
    "amazonmq.configurationassociation.configurationid.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amazonmq.configurationassociation.configurationid.id",
        "UpdateRequires": "No interruption"
    },
    "amazonmq.configurationassociation.configurationid.revision": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "amazonmq.configurationassociation.configurationid.revision",
        "UpdateRequires": "No interruption"
    },
    "amplify.app.autobranchcreationconfig.autobranchcreationpatterns": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "amplify.app.autobranchcreationconfig.autobranchcreationpatterns",
        "UpdateRequires": "No interruption"
    },
    "amplify.app.autobranchcreationconfig.basicauthconfig": {
        "Required": "No",
        "Type": "BasicAuthConfig",
        "UniqueKey": "amplify.app.autobranchcreationconfig.basicauthconfig",
        "UpdateRequires": "No interruption"
    },
    "amplify.app.autobranchcreationconfig.buildspec": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amplify.app.autobranchcreationconfig.buildspec",
        "UpdateRequires": "No interruption"
    },
    "amplify.app.autobranchcreationconfig.cfnproperties": [
        "BuildSpec",
        "EnablePullRequestPreview",
        "EnableAutoBranchCreation",
        "EnableAutoBuild",
        "AutoBranchCreationPatterns",
        "EnvironmentVariables",
        "BasicAuthConfig",
        "PullRequestEnvironmentName",
        "Stage",
        "UniqueKey"
    ],
    "amplify.app.autobranchcreationconfig.enableautobranchcreation": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amplify.app.autobranchcreationconfig.enableautobranchcreation",
        "UpdateRequires": "No interruption"
    },
    "amplify.app.autobranchcreationconfig.enableautobuild": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amplify.app.autobranchcreationconfig.enableautobuild",
        "UpdateRequires": "No interruption"
    },
    "amplify.app.autobranchcreationconfig.enablepullrequestpreview": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "amplify.app.autobranchcreationconfig.enablepullrequestpreview",
        "UpdateRequires": "No interruption"
    },
    "amplify.app.autobranchcreationconfig.environmentvariables": {
        "Required": "No",
        "Type": "List of [EnvironmentVariable",
        "UniqueKey": "amplify.app.autobranchcreationconfig.environmentvariables",
        "UpdateRequires": "No interruption"
    },
    "amplify.app.autobranchcreationconfig.pullrequestenvironmentname": {
        "Required": "No",
        "SampleValue": "TODO-pullrequestenvironmentname",
        "UniqueKey": "amplify.app.autobranchcreationconfig.pullrequestenvironmentname",
        "UpdateRequires": "No interruption"
    },
    "amplify.app.autobranchcreationconfig.stage": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amplify.app.autobranchcreationconfig.stage",
        "UpdateRequires": "No interruption"
    },
    "amplify.app.basicauthconfig.cfnproperties": [
        "Username",
        "Password",
        "EnableBasicAuth",
        "UniqueKey"
    ],
    "amplify.app.basicauthconfig.enablebasicauth": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amplify.app.basicauthconfig.enablebasicauth",
        "UpdateRequires": "No interruption"
    },
    "amplify.app.basicauthconfig.password": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amplify.app.basicauthconfig.password",
        "UpdateRequires": "No interruption"
    },
    "amplify.app.basicauthconfig.username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amplify.app.basicauthconfig.username",
        "UpdateRequires": "No interruption"
    },
    "amplify.app.customrule.cfnproperties": [
        "Status",
        "Source",
        "Target",
        "Condition",
        "UniqueKey"
    ],
    "amplify.app.customrule.condition": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amplify.app.customrule.condition",
        "UpdateRequires": "No interruption"
    },
    "amplify.app.customrule.source": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.app.customrule.source",
        "UpdateRequires": "No interruption"
    },
    "amplify.app.customrule.status": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "amplify.app.customrule.status",
        "UpdateRequires": "No interruption"
    },
    "amplify.app.customrule.target": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.app.customrule.target",
        "UpdateRequires": "No interruption"
    },
    "amplify.app.environmentvariable.cfnproperties": [
        "Name",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "amplify.app.environmentvariable.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.app.environmentvariable.name",
        "UpdateRequires": "No interruption"
    },
    "amplify.app.environmentvariable.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.app.environmentvariable.value",
        "UpdateRequires": "No interruption"
    },
    "amplify.branch.basicauthconfig.cfnproperties": [
        "Username",
        "Password",
        "EnableBasicAuth",
        "UniqueKey"
    ],
    "amplify.branch.basicauthconfig.enablebasicauth": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "amplify.branch.basicauthconfig.enablebasicauth",
        "UpdateRequires": "No interruption"
    },
    "amplify.branch.basicauthconfig.password": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.branch.basicauthconfig.password",
        "UpdateRequires": "No interruption"
    },
    "amplify.branch.basicauthconfig.username": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.branch.basicauthconfig.username",
        "UpdateRequires": "No interruption"
    },
    "amplify.branch.environmentvariable.cfnproperties": [
        "Name",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "amplify.branch.environmentvariable.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.branch.environmentvariable.name",
        "UpdateRequires": "No interruption"
    },
    "amplify.branch.environmentvariable.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.branch.environmentvariable.value",
        "UpdateRequires": "No interruption"
    },
    "amplify.domain.subdomainsetting.branchname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.domain.subdomainsetting.branchname",
        "UpdateRequires": "No interruption"
    },
    "amplify.domain.subdomainsetting.cfnproperties": [
        "Prefix",
        "BranchName",
        "UniqueKey",
        "SampleValue"
    ],
    "amplify.domain.subdomainsetting.prefix": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "amplify.domain.subdomainsetting.prefix",
        "UpdateRequires": "No interruption"
    },
    "apigateway.apikey.stagekey.cfnproperties": [
        "RestApiId",
        "StageName",
        "UniqueKey",
        "SampleValue"
    ],
    "apigateway.apikey.stagekey.restapiid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.apikey.stagekey.restapiid",
        "UpdateRequires": "No interruption"
    },
    "apigateway.apikey.stagekey.stagename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.apikey.stagekey.stagename",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.accesslogsetting.cfnproperties": [
        "DestinationArn",
        "Format",
        "UniqueKey",
        "SampleValue"
    ],
    "apigateway.deployment.accesslogsetting.destinationarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.accesslogsetting.destinationarn",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.accesslogsetting.format": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.accesslogsetting.format",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.canarysetting.cfnproperties": [
        "PercentTraffic",
        "UseStageCache",
        "StageVariableOverrides",
        "UniqueKey"
    ],
    "apigateway.deployment.canarysetting.percenttraffic": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "apigateway.deployment.canarysetting.percenttraffic",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.canarysetting.stagevariableoverrides": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "apigateway.deployment.canarysetting.stagevariableoverrides",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.canarysetting.usestagecache": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.canarysetting.usestagecache",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.deploymentcanarysettings.cfnproperties": [
        "PercentTraffic",
        "UseStageCache",
        "StageVariableOverrides",
        "UniqueKey"
    ],
    "apigateway.deployment.deploymentcanarysettings.percenttraffic": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "apigateway.deployment.deploymentcanarysettings.percenttraffic",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.deploymentcanarysettings.stagevariableoverrides": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "apigateway.deployment.deploymentcanarysettings.stagevariableoverrides",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.deploymentcanarysettings.usestagecache": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.deploymentcanarysettings.usestagecache",
        "UpdateRequires": "Replacement"
    },
    "apigateway.deployment.stagedescription.accesslogsetting": {
        "Required": "No",
        "Type": "AccessLogSetting",
        "UniqueKey": "apigateway.deployment.stagedescription.accesslogsetting",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.cacheclusterenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.cacheclusterenabled",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.cacheclustersize": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.stagedescription.cacheclustersize",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.cachedataencrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.cachedataencrypted",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.cachettlinseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigateway.deployment.stagedescription.cachettlinseconds",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.cachingenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "apigateway.deployment.stagedescription.cachingenabled",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.canarysetting": {
        "Required": "No",
        "Type": "CanarySetting",
        "UniqueKey": "apigateway.deployment.stagedescription.canarysetting",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.cfnproperties": [
        "CanarySetting",
        "ClientCertificateId",
        "TracingEnabled",
        "Description",
        "CacheClusterSize",
        "AccessLogSetting",
        "Variables",
        "LoggingLevel",
        "CacheClusterEnabled",
        "DataTraceEnabled",
        "CacheDataEncrypted",
        "DocumentationVersion",
        "Tags",
        "CacheTtlInSeconds",
        "MetricsEnabled",
        "MethodSettings",
        "CachingEnabled",
        "ThrottlingBurstLimit",
        "ThrottlingRateLimit",
        "UniqueKey"
    ],
    "apigateway.deployment.stagedescription.clientcertificateid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.stagedescription.clientcertificateid",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.datatraceenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.datatraceenabled",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.stagedescription.description",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.documentationversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.stagedescription.documentationversion",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.logginglevel": {
        "Required": "No",
        "SampleValue": "TODO-logginglevel",
        "UniqueKey": "apigateway.deployment.stagedescription.logginglevel",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.methodsetting.cachedataencrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.cachedataencrypted",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.methodsetting.cachettlinseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.cachettlinseconds",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.methodsetting.cachingenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.cachingenabled",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.methodsetting.cfnproperties": [
        "CacheTtlInSeconds",
        "ResourcePath",
        "DataTraceEnabled",
        "HttpMethod",
        "CacheDataEncrypted",
        "LoggingLevel",
        "MetricsEnabled",
        "CachingEnabled",
        "ThrottlingBurstLimit",
        "ThrottlingRateLimit",
        "UniqueKey"
    ],
    "apigateway.deployment.stagedescription.methodsetting.datatraceenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.datatraceenabled",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.methodsetting.httpmethod": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.httpmethod",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.methodsetting.logginglevel": {
        "Required": "No",
        "SampleValue": "TODO-logginglevel",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.logginglevel",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.methodsetting.metricsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.metricsenabled",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.methodsetting.resourcepath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.resourcepath",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.methodsetting.throttlingburstlimit": {
        "Required": "No",
        "SampleValue": "TODO-throttlingburstlimit",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.throttlingburstlimit",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.methodsetting.throttlingratelimit": {
        "Required": "No",
        "SampleValue": "TODO-throttlingratelimit",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsetting.throttlingratelimit",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.methodsettings": {
        "Required": "No",
        "Type": "List of [MethodSetting",
        "UniqueKey": "apigateway.deployment.stagedescription.methodsettings",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.metricsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.deployment.stagedescription.metricsenabled",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "apigateway.deployment.stagedescription.tags",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.throttlingburstlimit": {
        "Required": "No",
        "SampleValue": "TODO-throttlingburstlimit",
        "UniqueKey": "apigateway.deployment.stagedescription.throttlingburstlimit",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.throttlingratelimit": {
        "Required": "No",
        "SampleValue": "TODO-throttlingratelimit",
        "UniqueKey": "apigateway.deployment.stagedescription.throttlingratelimit",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.tracingenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "apigateway.deployment.stagedescription.tracingenabled",
        "UpdateRequires": "No interruption"
    },
    "apigateway.deployment.stagedescription.variables": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "apigateway.deployment.stagedescription.variables",
        "UpdateRequires": "No interruption"
    },
    "apigateway.documentationpart.location.cfnproperties": [
        "Path",
        "StatusCode",
        "Type",
        "Method",
        "Name",
        "UniqueKey"
    ],
    "apigateway.documentationpart.location.method": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.documentationpart.location.method",
        "UpdateRequires": "Replacement"
    },
    "apigateway.documentationpart.location.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.documentationpart.location.name",
        "UpdateRequires": "Replacement"
    },
    "apigateway.documentationpart.location.path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.documentationpart.location.path",
        "UpdateRequires": "Replacement"
    },
    "apigateway.documentationpart.location.statuscode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.documentationpart.location.statuscode",
        "UpdateRequires": "Replacement"
    },
    "apigateway.documentationpart.location.type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.documentationpart.location.type",
        "UpdateRequires": "Replacement"
    },
    "apigateway.domainname.endpointconfiguration.cfnproperties": [
        "Types",
        "UniqueKey"
    ],
    "apigateway.domainname.endpointconfiguration.types": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigateway.domainname.endpointconfiguration.types",
        "UpdateRequires": "No interruption"
    },
    "apigateway.restapi.endpointconfiguration.cfnproperties": [
        "VpcEndpointIds",
        "Types",
        "UniqueKey",
        "SampleValue"
    ],
    "apigateway.restapi.endpointconfiguration.types": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigateway.restapi.endpointconfiguration.types",
        "UpdateRequires": "No interruption"
    },
    "apigateway.restapi.endpointconfiguration.vpcendpointids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigateway.restapi.endpointconfiguration.vpcendpointids",
        "UpdateRequires": "No interruption"
    },
    "apigateway.restapi.s3location.bucket": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.restapi.s3location.bucket",
        "UpdateRequires": "No interruption"
    },
    "apigateway.restapi.s3location.cfnproperties": [
        "ETag",
        "Bucket",
        "Version",
        "Key",
        "UniqueKey"
    ],
    "apigateway.restapi.s3location.etag": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.restapi.s3location.etag",
        "UpdateRequires": "No interruption"
    },
    "apigateway.restapi.s3location.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.restapi.s3location.key",
        "UpdateRequires": "No interruption"
    },
    "apigateway.restapi.s3location.version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.restapi.s3location.version",
        "UpdateRequires": "No interruption"
    },
    "apigateway.stage.accesslogsetting.cfnproperties": [
        "DestinationArn",
        "Format",
        "UniqueKey",
        "SampleValue"
    ],
    "apigateway.stage.accesslogsetting.destinationarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.stage.accesslogsetting.destinationarn",
        "UpdateRequires": "No interruption"
    },
    "apigateway.stage.accesslogsetting.format": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.stage.accesslogsetting.format",
        "UpdateRequires": "No interruption"
    },
    "apigateway.stage.canarysetting.cfnproperties": [
        "PercentTraffic",
        "DeploymentId",
        "UseStageCache",
        "StageVariableOverrides",
        "UniqueKey"
    ],
    "apigateway.stage.canarysetting.deploymentid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.stage.canarysetting.deploymentid",
        "UpdateRequires": "No interruption"
    },
    "apigateway.stage.canarysetting.percenttraffic": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "apigateway.stage.canarysetting.percenttraffic",
        "UpdateRequires": "No interruption"
    },
    "apigateway.stage.canarysetting.stagevariableoverrides": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "apigateway.stage.canarysetting.stagevariableoverrides",
        "UpdateRequires": "No interruption"
    },
    "apigateway.stage.canarysetting.usestagecache": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigateway.stage.canarysetting.usestagecache",
        "UpdateRequires": "No interruption"
    },
    "apigateway.usageplan.apistage.apiid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.usageplan.apistage.apiid",
        "UpdateRequires": "No interruption"
    },
    "apigateway.usageplan.apistage.cfnproperties": [
        "ApiId",
        "Throttle",
        "Stage",
        "UniqueKey"
    ],
    "apigateway.usageplan.apistage.stage": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigateway.usageplan.apistage.stage",
        "UpdateRequires": "No interruption"
    },
    "apigateway.usageplan.apistage.throttle": {
        "Required": "No",
        "Type": "Map of [ThrottleSettings",
        "UniqueKey": "apigateway.usageplan.apistage.throttle",
        "UpdateRequires": "No interruption"
    },
    "apigateway.usageplan.quotasettings.cfnproperties": [
        "Limit",
        "Period",
        "Offset",
        "UniqueKey"
    ],
    "apigateway.usageplan.quotasettings.limit": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigateway.usageplan.quotasettings.limit",
        "UpdateRequires": "No interruption"
    },
    "apigateway.usageplan.quotasettings.offset": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigateway.usageplan.quotasettings.offset",
        "UpdateRequires": "No interruption"
    },
    "apigateway.usageplan.quotasettings.period": {
        "Required": "No",
        "SampleValue": "TODO-period",
        "UniqueKey": "apigateway.usageplan.quotasettings.period",
        "UpdateRequires": "No interruption"
    },
    "apigateway.usageplan.throttlesettings.burstlimit": {
        "Required": "No",
        "SampleValue": "TODO-burstlimit",
        "UniqueKey": "apigateway.usageplan.throttlesettings.burstlimit",
        "UpdateRequires": "No interruption"
    },
    "apigateway.usageplan.throttlesettings.cfnproperties": [
        "RateLimit",
        "BurstLimit",
        "UniqueKey",
        "SampleValue"
    ],
    "apigateway.usageplan.throttlesettings.ratelimit": {
        "Required": "No",
        "SampleValue": "TODO-ratelimit",
        "UniqueKey": "apigateway.usageplan.throttlesettings.ratelimit",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.api.bodys3location.bucket": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "apigatewayv2.api.bodys3location.bucket",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.api.bodys3location.cfnproperties": [
        "Etag",
        "Bucket",
        "Version",
        "Key",
        "UniqueKey"
    ],
    "apigatewayv2.api.bodys3location.etag": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.api.bodys3location.etag",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.api.bodys3location.key": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "apigatewayv2.api.bodys3location.key",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.api.bodys3location.version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.api.bodys3location.version",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.api.cors.allowcredentials": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.api.cors.allowcredentials",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.api.cors.allowheaders": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigatewayv2.api.cors.allowheaders",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.api.cors.allowmethods": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigatewayv2.api.cors.allowmethods",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.api.cors.alloworigins": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigatewayv2.api.cors.alloworigins",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.api.cors.cfnproperties": [
        "AllowHeaders",
        "AllowOrigins",
        "MaxAge",
        "ExposeHeaders",
        "AllowMethods",
        "AllowCredentials",
        "UniqueKey"
    ],
    "apigatewayv2.api.cors.exposeheaders": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigatewayv2.api.cors.exposeheaders",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.api.cors.maxage": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigatewayv2.api.cors.maxage",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.authorizer.jwtconfiguration.audience": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apigatewayv2.authorizer.jwtconfiguration.audience",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.authorizer.jwtconfiguration.cfnproperties": [
        "Audience",
        "Issuer",
        "UniqueKey",
        "SampleValue"
    ],
    "apigatewayv2.authorizer.jwtconfiguration.issuer": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.authorizer.jwtconfiguration.issuer",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.domainname.domainnameconfiguration.certificatearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.domainname.domainnameconfiguration.certificatearn",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.domainname.domainnameconfiguration.certificatename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.domainname.domainnameconfiguration.certificatename",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.domainname.domainnameconfiguration.cfnproperties": [
        "CertificateArn",
        "CertificateName",
        "EndpointType",
        "UniqueKey"
    ],
    "apigatewayv2.domainname.domainnameconfiguration.endpointtype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.domainname.domainnameconfiguration.endpointtype",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.route.parameterconstraints.cfnproperties": [
        "Required",
        "UniqueKey"
    ],
    "apigatewayv2.route.parameterconstraints.required": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.route.parameterconstraints.required",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.routeresponse.parameterconstraints.cfnproperties": [
        "Required",
        "UniqueKey"
    ],
    "apigatewayv2.routeresponse.parameterconstraints.required": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.routeresponse.parameterconstraints.required",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.stage.accesslogsettings.cfnproperties": [
        "DestinationArn",
        "Format",
        "UniqueKey",
        "SampleValue"
    ],
    "apigatewayv2.stage.accesslogsettings.destinationarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.stage.accesslogsettings.destinationarn",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.stage.accesslogsettings.format": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.stage.accesslogsettings.format",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.stage.routesettings.cfnproperties": [
        "ThrottlingRateLimit",
        "DetailedMetricsEnabled",
        "ThrottlingBurstLimit",
        "DataTraceEnabled",
        "LoggingLevel",
        "UniqueKey"
    ],
    "apigatewayv2.stage.routesettings.datatraceenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.stage.routesettings.datatraceenabled",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.stage.routesettings.detailedmetricsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apigatewayv2.stage.routesettings.detailedmetricsenabled",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.stage.routesettings.logginglevel": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apigatewayv2.stage.routesettings.logginglevel",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.stage.routesettings.throttlingburstlimit": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apigatewayv2.stage.routesettings.throttlingburstlimit",
        "UpdateRequires": "No interruption"
    },
    "apigatewayv2.stage.routesettings.throttlingratelimit": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "apigatewayv2.stage.routesettings.throttlingratelimit",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.integration.\"application/json\": \"{\\n \\\"statuscode\\\": 200\\n}\"": {
        "Required": "No",
        "SampleValue": "TODO-\"application/json\": \"{\\n \\\"statuscode\\\": 200\\n}\"",
        "UniqueKey": "apitgateway.method.integration.\"application/json\": \"{\\n \\\"statuscode\\\": 200\\n}\"",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.integration.cachekeyparameters": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "apitgateway.method.integration.cachekeyparameters",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.integration.cachenamespace": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.cachenamespace",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.integration.cfnproperties": [
        "IntegrationResponses",
        "ContentHandling",
        "CacheKeyParameters",
        "RequestParameters",
        "IntegrationHttpMethod",
        "ConnectionId",
        "Uri",
        "ConnectionType",
        "PassthroughBehavior",
        "RequestTemplates",
        "CacheNamespace",
        "\"application/json\": \"{\\n \\\"statusCode\\\": 200\\n}\"",
        "Credentials",
        "Type",
        "TimeoutInMillis",
        "UniqueKey"
    ],
    "apitgateway.method.integration.connectionid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.connectionid",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.integration.connectiontype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.connectiontype",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.integration.contenthandling": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.contenthandling",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.integration.credentials": {
        "Required": "No",
        "SampleValue": "TODO-credentials",
        "UniqueKey": "apitgateway.method.integration.credentials",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.integration.integrationhttpmethod": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.integrationhttpmethod",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.integration.integrationresponse.cfnproperties": [
        "StatusCode",
        "SelectionPattern",
        "ContentHandling",
        "ResponseTemplates",
        "ResponseParameters",
        "UniqueKey"
    ],
    "apitgateway.method.integration.integrationresponse.contenthandling": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.integrationresponse.contenthandling",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.integration.integrationresponse.responseparameters": {
        "Required": "No",
        "SampleValue": "TODO-responseparameters",
        "UniqueKey": "apitgateway.method.integration.integrationresponse.responseparameters",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.integration.integrationresponse.responsetemplates": {
        "Required": "No",
        "SampleValue": "TODO-responsetemplates",
        "UniqueKey": "apitgateway.method.integration.integrationresponse.responsetemplates",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.integration.integrationresponse.selectionpattern": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.integrationresponse.selectionpattern",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.integration.integrationresponse.statuscode": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "apitgateway.method.integration.integrationresponse.statuscode",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.integration.integrationresponses": {
        "Required": "No",
        "Type": "List of [IntegrationResponse",
        "UniqueKey": "apitgateway.method.integration.integrationresponses",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.integration.passthroughbehavior": {
        "Required": "No",
        "SampleValue": "TODO-passthroughbehavior",
        "UniqueKey": "apitgateway.method.integration.passthroughbehavior",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.integration.requestparameters": {
        "Required": "No",
        "SampleValue": "TODO-requestparameters",
        "UniqueKey": "apitgateway.method.integration.requestparameters",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.integration.requesttemplates": {
        "UniqueKey": "apitgateway.method.integration.requesttemplates"
    },
    "apitgateway.method.integration.timeoutinmillis": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apitgateway.method.integration.timeoutinmillis",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.integration.type": {
        "Required": "No",
        "SampleValue": "TODO-type",
        "UniqueKey": "apitgateway.method.integration.type",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.integration.uri": {
        "Required": "Conditional",
        "SampleValue": "TODO-uri",
        "UniqueKey": "apitgateway.method.integration.uri",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.methodresponse.cfnproperties": [
        "ResponseModels",
        "StatusCode",
        "ResponseParameters",
        "UniqueKey"
    ],
    "apitgateway.method.methodresponse.responsemodels": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "apitgateway.method.methodresponse.responsemodels",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.methodresponse.responseparameters": {
        "Required": "No",
        "SampleValue": "TODO-responseparameters",
        "UniqueKey": "apitgateway.method.methodresponse.responseparameters",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.method.methodresponse.statuscode": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "apitgateway.method.methodresponse.statuscode",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.stage.methodsetting.cachedataencrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apitgateway.stage.methodsetting.cachedataencrypted",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.stage.methodsetting.cachettlinseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "apitgateway.stage.methodsetting.cachettlinseconds",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.stage.methodsetting.cachingenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apitgateway.stage.methodsetting.cachingenabled",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.stage.methodsetting.cfnproperties": [
        "CacheTtlInSeconds",
        "ResourcePath",
        "DataTraceEnabled",
        "HttpMethod",
        "CacheDataEncrypted",
        "LoggingLevel",
        "MetricsEnabled",
        "CachingEnabled",
        "ThrottlingBurstLimit",
        "ThrottlingRateLimit",
        "UniqueKey"
    ],
    "apitgateway.stage.methodsetting.datatraceenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apitgateway.stage.methodsetting.datatraceenabled",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.stage.methodsetting.httpmethod": {
        "Required": "No",
        "SampleValue": "TODO-httpmethod",
        "UniqueKey": "apitgateway.stage.methodsetting.httpmethod",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.stage.methodsetting.logginglevel": {
        "Required": "No",
        "SampleValue": "TODO-logginglevel",
        "UniqueKey": "apitgateway.stage.methodsetting.logginglevel",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.stage.methodsetting.metricsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "apitgateway.stage.methodsetting.metricsenabled",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.stage.methodsetting.resourcepath": {
        "Required": "No",
        "SampleValue": "TODO-resourcepath",
        "UniqueKey": "apitgateway.stage.methodsetting.resourcepath",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.stage.methodsetting.throttlingburstlimit": {
        "Required": "No",
        "SampleValue": "TODO-throttlingburstlimit",
        "UniqueKey": "apitgateway.stage.methodsetting.throttlingburstlimit",
        "UpdateRequires": "No interruption"
    },
    "apitgateway.stage.methodsetting.throttlingratelimit": {
        "Required": "No",
        "SampleValue": "TODO-throttlingratelimit",
        "UniqueKey": "apitgateway.stage.methodsetting.throttlingratelimit",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalabletarget.scalabletargetaction.cfnproperties": [
        "MinCapacity",
        "MaxCapacity",
        "UniqueKey",
        "SampleValue"
    ],
    "applicationautoscaling.scalabletarget.scalabletargetaction.maxcapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "applicationautoscaling.scalabletarget.scalabletargetaction.maxcapacity",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalabletarget.scalabletargetaction.mincapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "applicationautoscaling.scalabletarget.scalabletargetaction.mincapacity",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalabletarget.scheduledaction.cfnproperties": [
        "EndTime",
        "ScalableTargetAction",
        "ScheduledActionName",
        "StartTime",
        "Schedule",
        "UniqueKey"
    ],
    "applicationautoscaling.scalabletarget.scheduledaction.endtime": {
        "Required": "No",
        "Type": "Timestamp",
        "UniqueKey": "applicationautoscaling.scalabletarget.scheduledaction.endtime",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalabletarget.scheduledaction.scalabletargetaction": {
        "Required": "No",
        "Type": "ScalableTargetAction",
        "UniqueKey": "applicationautoscaling.scalabletarget.scheduledaction.scalabletargetaction",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalabletarget.scheduledaction.schedule": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "UniqueKey": "applicationautoscaling.scalabletarget.scheduledaction.schedule",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalabletarget.scheduledaction.scheduledactionname": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "(?!((^[ ]+.*)|(.*([\\u0000-\\u001f]|[\\u007f-\\u009f]|[:/|])+.*)|(.*[ ]+$))).+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalabletarget.scheduledaction.scheduledactionname",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalabletarget.scheduledaction.starttime": {
        "Required": "No",
        "Type": "Timestamp",
        "UniqueKey": "applicationautoscaling.scalabletarget.scheduledaction.starttime",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalabletarget.suspendedstate.cfnproperties": [
        "ScheduledScalingSuspended",
        "DynamicScalingInSuspended",
        "DynamicScalingOutSuspended",
        "UniqueKey"
    ],
    "applicationautoscaling.scalabletarget.suspendedstate.dynamicscalinginsuspended": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "applicationautoscaling.scalabletarget.suspendedstate.dynamicscalinginsuspended",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalabletarget.suspendedstate.dynamicscalingoutsuspended": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "applicationautoscaling.scalabletarget.suspendedstate.dynamicscalingoutsuspended",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalabletarget.suspendedstate.scheduledscalingsuspended": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "applicationautoscaling.scalabletarget.suspendedstate.scheduledscalingsuspended",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.customizedmetricspecification.cfnproperties": [
        "Statistic",
        "Namespace",
        "Dimensions",
        "Unit",
        "MetricName",
        "UniqueKey"
    ],
    "applicationautoscaling.scalingpolicy.customizedmetricspecification.dimensions": {
        "Required": "No",
        "Type": "List of [MetricDimension",
        "UniqueKey": "applicationautoscaling.scalingpolicy.customizedmetricspecification.dimensions",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.customizedmetricspecification.metricname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.customizedmetricspecification.metricname",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.customizedmetricspecification.namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.customizedmetricspecification.namespace",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.customizedmetricspecification.statistic": {
        "Allowed Values": "Average | Maximum | Minimum | SampleCount | Sum",
        "AllowedValues": [
            "Average",
            "Maximum",
            "Minimum",
            "SampleCount",
            "Sum"
        ],
        "Pattern": "^[Average|Maximum|Minimum|SampleCount|Sum]",
        "Required": "Yes",
        "SampleValue": "Average|Maximum|Minimum|SampleCount|Sum",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.customizedmetricspecification.statistic",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.customizedmetricspecification.unit": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.customizedmetricspecification.unit",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.metricdimension.cfnproperties": [
        "Name",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "applicationautoscaling.scalingpolicy.metricdimension.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.metricdimension.name",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.metricdimension.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.metricdimension.value",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.predefinedmetricspecification.cfnproperties": [
        "PredefinedMetricType",
        "ResourceLabel",
        "UniqueKey",
        "SampleValue"
    ],
    "applicationautoscaling.scalingpolicy.predefinedmetricspecification.predefinedmetrictype": {
        "Allowed Values": "ALBRequestCountPerTarget | AppStreamAverageCapacityUtilization | ComprehendInferenceUtilization | DynamoDBReadCapacityUtilization | DynamoDBWriteCapacityUtilization | EC2SpotFleetRequestAverageCPUUtilization | EC2SpotFleetRequestAverageNetworkIn | EC2SpotFleetRequestAverageNetworkOut | ECSServiceAverageCPUUtilization | ECSServiceAverageMemoryUtilization | LambdaProvisionedConcurrencyUtilization | RDSReaderAverageCPUUtilization | RDSReaderAverageDatabaseConnections | SageMakerVariantInvocationsPerInstance",
        "AllowedValues": [
            "ALBRequestCountPerTarget",
            "AppStreamAverageCapacityUtilization",
            "ComprehendInferenceUtilization",
            "DynamoDBReadCapacityUtilization",
            "DynamoDBWriteCapacityUtilization",
            "EC2SpotFleetRequestAverageCPUUtilization",
            "EC2SpotFleetRequestAverageNetworkIn",
            "EC2SpotFleetRequestAverageNetworkOut",
            "ECSServiceAverageCPUUtilization",
            "ECSServiceAverageMemoryUtilization",
            "LambdaProvisionedConcurrencyUtilization",
            "RDSReaderAverageCPUUtilization",
            "RDSReaderAverageDatabaseConnections",
            "SageMakerVariantInvocationsPerInstance"
        ],
        "Pattern": "^[ALBRequestCountPerTarget|AppStreamAverageCapacityUtilization|ComprehendInferenceUtilization|DynamoDBReadCapacityUtilization|DynamoDBWriteCapacityUtilization|EC2SpotFleetRequestAverageCPUUtilization|EC2SpotFleetRequestAverageNetworkIn|EC2SpotFleetRequestAverageNetworkOut|ECSServiceAverageCPUUtilization|ECSServiceAverageMemoryUtilization|LambdaProvisionedConcurrencyUtilization|RDSReaderAverageCPUUtilization|RDSReaderAverageDatabaseConnections|SageMakerVariantInvocationsPerInstance]",
        "Required": "Yes",
        "SampleValue": "ALBRequestCountPerTarget|AppStreamAverageCapacityUtilization|ComprehendInferenceUtilization|DynamoDBReadCapacityUtilization|DynamoDBWriteCapacityUtilization|EC2SpotFleetRequestAverageCPUUtilization|EC2SpotFleetRequestAverageNetworkIn|EC2SpotFleetRequestAverageNetworkOut|ECSServiceAverageCPUUtilization|ECSServiceAverageMemoryUtilization|LambdaProvisionedConcurrencyUtilization|RDSReaderAverageCPUUtilization|RDSReaderAverageDatabaseConnections|SageMakerVariantInvocationsPerInstance",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.predefinedmetricspecification.predefinedmetrictype",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.predefinedmetricspecification.resourcelabel": {
        "Maximum": "1023",
        "Minimum": "1",
        "Pattern": "^.{1,1023}$",
        "Required": "Conditional",
        "SampleValue": "TODO-applicationautoscaling.scalingpolicy.predefinedmetricspecification.resourcelabel",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.predefinedmetricspecification.resourcelabel",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.adjustmenttype": {
        "Allowed Values": "ChangeInCapacity | ExactCapacity | PercentChangeInCapacity",
        "AllowedValues": [
            "ChangeInCapacity",
            "ExactCapacity",
            "PercentChangeInCapacity"
        ],
        "Pattern": "^[ChangeInCapacity|ExactCapacity|PercentChangeInCapacity]",
        "Required": "No",
        "SampleValue": "ChangeInCapacity|ExactCapacity|PercentChangeInCapacity",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.adjustmenttype",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.cfnproperties": [
        "MinAdjustmentMagnitude",
        "MetricAggregationType",
        "Cooldown",
        "StepAdjustments",
        "AdjustmentType",
        "UniqueKey"
    ],
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.cooldown": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.cooldown",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.metricaggregationtype": {
        "Allowed Values": "Average | Maximum | Minimum",
        "AllowedValues": [
            "Average",
            "Maximum",
            "Minimum"
        ],
        "Pattern": "^[Average|Maximum|Minimum]",
        "Required": "No",
        "SampleValue": "Average|Maximum|Minimum",
        "Type": "String",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.metricaggregationtype",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.minadjustmentmagnitude": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.minadjustmentmagnitude",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.cfnproperties": [
        "ScalingAdjustment",
        "MetricIntervalLowerBound",
        "MetricIntervalUpperBound",
        "UniqueKey"
    ],
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.metricintervallowerbound": {
        "Required": "Conditional",
        "Type": "Double",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.metricintervallowerbound",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.metricintervalupperbound": {
        "Required": "Conditional",
        "Type": "Double",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.metricintervalupperbound",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.scalingadjustment": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustment.scalingadjustment",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustments": {
        "Required": "No",
        "Type": "List of [StepAdjustment",
        "UniqueKey": "applicationautoscaling.scalingpolicy.stepscalingpolicyconfiguration.stepadjustments",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.cfnproperties": [
        "ScaleOutCooldown",
        "DisableScaleIn",
        "CustomizedMetricSpecification",
        "TargetValue",
        "PredefinedMetricSpecification",
        "ScaleInCooldown",
        "UniqueKey"
    ],
    "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.customizedmetricspecification": {
        "Required": "No",
        "Type": "CustomizedMetricSpecification",
        "UniqueKey": "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.customizedmetricspecification",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.disablescalein": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.disablescalein",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.predefinedmetricspecification": {
        "Required": "No",
        "Type": "PredefinedMetricSpecification",
        "UniqueKey": "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.predefinedmetricspecification",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.scaleincooldown": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.scaleincooldown",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.scaleoutcooldown": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.scaleoutcooldown",
        "UpdateRequires": "No interruption"
    },
    "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.targetvalue": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "applicationautoscaling.scalingpolicy.targettrackingscalingpolicyconfiguration.targetvalue",
        "UpdateRequires": "No interruption"
    },
    "appmesh.mesh.egressfilter.cfnproperties": [
        "Type",
        "UniqueKey"
    ],
    "appmesh.mesh.egressfilter.type": {
        "Required": "Yes",
        "SampleValue": "TODO-type",
        "UniqueKey": "appmesh.mesh.egressfilter.type",
        "UpdateRequires": "No interruption"
    },
    "appmesh.mesh.meshspec.cfnproperties": [
        "EgressFilter",
        "UniqueKey"
    ],
    "appmesh.mesh.meshspec.egressfilter": {
        "Required": "No",
        "Type": "EgressFilter",
        "UniqueKey": "appmesh.mesh.meshspec.egressfilter",
        "UpdateRequires": "No interruption"
    },
    "appmesh.mesh.tagref.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.mesh.tagref.key",
        "UpdateRequires": "No interruption"
    },
    "appmesh.mesh.tagref.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.mesh.tagref.value",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.duration.cfnproperties": [
        "Value",
        "Unit",
        "UniqueKey",
        "SampleValue"
    ],
    "appmesh.route.duration.unit": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.route.duration.unit",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.duration.value": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.duration.value",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.grpcretrypolicy.cfnproperties": [
        "TcpRetryEvents",
        "PerRetryTimeout",
        "HttpRetryEvents",
        "MaxRetries",
        "GrpcRetryEvents",
        "UniqueKey"
    ],
    "appmesh.route.grpcretrypolicy.grpcretryevents": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appmesh.route.grpcretrypolicy.grpcretryevents",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.grpcretrypolicy.httpretryevents": {
        "Required": "No",
        "SampleValue": "TODO-httpretryevents",
        "UniqueKey": "appmesh.route.grpcretrypolicy.httpretryevents",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.grpcretrypolicy.maxretries": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.grpcretrypolicy.maxretries",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.grpcretrypolicy.perretrytimeout": {
        "Required": "Yes",
        "Type": "Duration",
        "UniqueKey": "appmesh.route.grpcretrypolicy.perretrytimeout",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.grpcretrypolicy.tcpretryevents": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appmesh.route.grpcretrypolicy.tcpretryevents",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.grpcroute.action": {
        "Required": "Yes",
        "Type": "GrpcRouteAction",
        "UniqueKey": "appmesh.route.grpcroute.action",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.grpcroute.cfnproperties": [
        "Action",
        "Match",
        "RetryPolicy",
        "UniqueKey"
    ],
    "appmesh.route.grpcroute.match": {
        "Required": "Yes",
        "Type": "GrpcRouteMatch",
        "UniqueKey": "appmesh.route.grpcroute.match",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.grpcroute.retrypolicy": {
        "Required": "No",
        "Type": "GrpcRetryPolicy",
        "UniqueKey": "appmesh.route.grpcroute.retrypolicy",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.grpcrouteaction.cfnproperties": [
        "WeightedTargets",
        "UniqueKey"
    ],
    "appmesh.route.grpcrouteaction.weightedtargets": {
        "Required": "Yes",
        "Type": "List of [WeightedTarget",
        "UniqueKey": "appmesh.route.grpcrouteaction.weightedtargets",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.grpcroutematch.cfnproperties": [
        "ServiceName",
        "MethodName",
        "Metadata",
        "UniqueKey"
    ],
    "appmesh.route.grpcroutematch.metadata": {
        "Required": "No",
        "Type": "List of [GrpcRouteMetadata",
        "UniqueKey": "appmesh.route.grpcroutematch.metadata",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.grpcroutematch.methodname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutematch.methodname",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.grpcroutematch.servicename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutematch.servicename",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.grpcroutemetadata.cfnproperties": [
        "Invert",
        "Name",
        "Match",
        "UniqueKey"
    ],
    "appmesh.route.grpcroutemetadata.invert": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appmesh.route.grpcroutemetadata.invert",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.grpcroutemetadata.match": {
        "Required": "No",
        "Type": "GrpcRouteMetadataMatchMethod",
        "UniqueKey": "appmesh.route.grpcroutemetadata.match",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.grpcroutemetadata.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutemetadata.name",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.grpcroutemetadatamatchmethod.cfnproperties": [
        "Regex",
        "Prefix",
        "Exact",
        "Range",
        "Suffix",
        "UniqueKey"
    ],
    "appmesh.route.grpcroutemetadatamatchmethod.exact": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutemetadatamatchmethod.exact",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.grpcroutemetadatamatchmethod.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutemetadatamatchmethod.prefix",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.grpcroutemetadatamatchmethod.range": {
        "Required": "No",
        "Type": "MatchRange",
        "UniqueKey": "appmesh.route.grpcroutemetadatamatchmethod.range",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.grpcroutemetadatamatchmethod.regex": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutemetadatamatchmethod.regex",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.grpcroutemetadatamatchmethod.suffix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.grpcroutemetadatamatchmethod.suffix",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.headermatchmethod.cfnproperties": [
        "Regex",
        "Prefix",
        "Exact",
        "Range",
        "Suffix",
        "UniqueKey"
    ],
    "appmesh.route.headermatchmethod.exact": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.headermatchmethod.exact",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.headermatchmethod.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.headermatchmethod.prefix",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.headermatchmethod.range": {
        "Required": "No",
        "Type": "MatchRange",
        "UniqueKey": "appmesh.route.headermatchmethod.range",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.headermatchmethod.regex": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.headermatchmethod.regex",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.headermatchmethod.suffix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.headermatchmethod.suffix",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.httpretrypolicy.cfnproperties": [
        "TcpRetryEvents",
        "PerRetryTimeout",
        "HttpRetryEvents",
        "MaxRetries",
        "UniqueKey"
    ],
    "appmesh.route.httpretrypolicy.httpretryevents": {
        "Required": "No",
        "SampleValue": "TODO-httpretryevents",
        "UniqueKey": "appmesh.route.httpretrypolicy.httpretryevents",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.httpretrypolicy.maxretries": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.httpretrypolicy.maxretries",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.httpretrypolicy.perretrytimeout": {
        "Required": "Yes",
        "Type": "Duration",
        "UniqueKey": "appmesh.route.httpretrypolicy.perretrytimeout",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.httpretrypolicy.tcpretryevents": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appmesh.route.httpretrypolicy.tcpretryevents",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.httproute.action": {
        "Required": "Yes",
        "Type": "HttpRouteAction",
        "UniqueKey": "appmesh.route.httproute.action",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.httproute.cfnproperties": [
        "Action",
        "Match",
        "RetryPolicy",
        "UniqueKey"
    ],
    "appmesh.route.httproute.match": {
        "Required": "Yes",
        "Type": "HttpRouteMatch",
        "UniqueKey": "appmesh.route.httproute.match",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.httproute.retrypolicy": {
        "Required": "No",
        "Type": "HttpRetryPolicy",
        "UniqueKey": "appmesh.route.httproute.retrypolicy",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.httprouteaction.cfnproperties": [
        "WeightedTargets",
        "UniqueKey"
    ],
    "appmesh.route.httprouteaction.weightedtargets": {
        "Required": "Yes",
        "Type": "List of [WeightedTarget",
        "UniqueKey": "appmesh.route.httprouteaction.weightedtargets",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.httprouteheader.cfnproperties": [
        "Invert",
        "Name",
        "Match",
        "UniqueKey"
    ],
    "appmesh.route.httprouteheader.invert": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appmesh.route.httprouteheader.invert",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.httprouteheader.match": {
        "Required": "No",
        "Type": "HeaderMatchMethod",
        "UniqueKey": "appmesh.route.httprouteheader.match",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.httprouteheader.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.route.httprouteheader.name",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.httproutematch.cfnproperties": [
        "Headers",
        "Prefix",
        "Scheme",
        "Method",
        "UniqueKey"
    ],
    "appmesh.route.httproutematch.headers": {
        "Required": "No",
        "Type": "List of [HttpRouteHeader",
        "UniqueKey": "appmesh.route.httproutematch.headers",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.httproutematch.method": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.httproutematch.method",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.httproutematch.prefix": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.route.httproutematch.prefix",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.httproutematch.scheme": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.httproutematch.scheme",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.matchrange.cfnproperties": [
        "Start",
        "End",
        "UniqueKey",
        "SampleValue"
    ],
    "appmesh.route.matchrange.end": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.matchrange.end",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.matchrange.start": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.matchrange.start",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.routespec.cfnproperties": [
        "Priority",
        "GrpcRoute",
        "TcpRoute",
        "HttpRoute",
        "Http2Route",
        "UniqueKey"
    ],
    "appmesh.route.routespec.grpcroute": {
        "Required": "No",
        "Type": "GrpcRoute",
        "UniqueKey": "appmesh.route.routespec.grpcroute",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.routespec.http2route": {
        "Required": "No",
        "Type": "HttpRoute",
        "UniqueKey": "appmesh.route.routespec.http2route",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.routespec.httproute": {
        "Required": "No",
        "Type": "HttpRoute",
        "UniqueKey": "appmesh.route.routespec.httproute",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.routespec.priority": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.routespec.priority",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.routespec.tcproute": {
        "Required": "No",
        "Type": "TcpRoute",
        "UniqueKey": "appmesh.route.routespec.tcproute",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.tagref.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.route.tagref.key",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.tagref.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.route.tagref.value",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.tcproute.action": {
        "Required": "Yes",
        "Type": "TcpRouteAction",
        "UniqueKey": "appmesh.route.tcproute.action",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.tcproute.cfnproperties": [
        "Action",
        "UniqueKey"
    ],
    "appmesh.route.tcprouteaction.cfnproperties": [
        "WeightedTargets",
        "UniqueKey"
    ],
    "appmesh.route.tcprouteaction.weightedtargets": {
        "Required": "Yes",
        "Type": "List of [WeightedTarget",
        "UniqueKey": "appmesh.route.tcprouteaction.weightedtargets",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.weightedtarget.cfnproperties": [
        "VirtualNode",
        "Weight",
        "UniqueKey",
        "SampleValue"
    ],
    "appmesh.route.weightedtarget.virtualnode": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.route.weightedtarget.virtualnode",
        "UpdateRequires": "No interruption"
    },
    "appmesh.route.weightedtarget.weight": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.route.weightedtarget.weight",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.accesslog.cfnproperties": [
        "File",
        "UniqueKey"
    ],
    "appmesh.virtualnode.accesslog.file": {
        "Required": "No",
        "Type": "FileAccessLog",
        "UniqueKey": "appmesh.virtualnode.accesslog.file",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.awscloudmapinstanceattribute.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "appmesh.virtualnode.awscloudmapinstanceattribute.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.awscloudmapinstanceattribute.key",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.awscloudmapinstanceattribute.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.awscloudmapinstanceattribute.value",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.awscloudmapservicediscovery.attributes": {
        "Required": "No",
        "Type": "List of [AwsCloudMapInstanceAttribute",
        "UniqueKey": "appmesh.virtualnode.awscloudmapservicediscovery.attributes",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.awscloudmapservicediscovery.cfnproperties": [
        "Attributes",
        "ServiceName",
        "NamespaceName",
        "UniqueKey"
    ],
    "appmesh.virtualnode.awscloudmapservicediscovery.namespacename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.awscloudmapservicediscovery.namespacename",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.awscloudmapservicediscovery.servicename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.awscloudmapservicediscovery.servicename",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.backend.cfnproperties": [
        "VirtualService",
        "UniqueKey"
    ],
    "appmesh.virtualnode.backend.virtualservice": {
        "Required": "No",
        "Type": "VirtualServiceBackend",
        "UniqueKey": "appmesh.virtualnode.backend.virtualservice",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.dnsservicediscovery.cfnproperties": [
        "Hostname",
        "UniqueKey"
    ],
    "appmesh.virtualnode.dnsservicediscovery.hostname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.dnsservicediscovery.hostname",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.fileaccesslog.cfnproperties": [
        "Path",
        "UniqueKey"
    ],
    "appmesh.virtualnode.fileaccesslog.path": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.fileaccesslog.path",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.healthcheck.cfnproperties": [
        "Protocol",
        "TimeoutMillis",
        "IntervalMillis",
        "HealthyThreshold",
        "Path",
        "UnhealthyThreshold",
        "Port",
        "UniqueKey"
    ],
    "appmesh.virtualnode.healthcheck.healthythreshold": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.healthcheck.healthythreshold",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.healthcheck.intervalmillis": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.healthcheck.intervalmillis",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.healthcheck.path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.healthcheck.path",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.healthcheck.port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.healthcheck.port",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.healthcheck.protocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.healthcheck.protocol",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.healthcheck.timeoutmillis": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.healthcheck.timeoutmillis",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.healthcheck.unhealthythreshold": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.healthcheck.unhealthythreshold",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.listener.cfnproperties": [
        "HealthCheck",
        "PortMapping",
        "UniqueKey",
        "SampleValue"
    ],
    "appmesh.virtualnode.listener.healthcheck": {
        "Required": "No",
        "Type": "HealthCheck",
        "UniqueKey": "appmesh.virtualnode.listener.healthcheck",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.listener.portmapping": {
        "Required": "Yes",
        "Type": "PortMapping",
        "UniqueKey": "appmesh.virtualnode.listener.portmapping",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.logging.accesslog": {
        "Required": "No",
        "Type": "AccessLog",
        "UniqueKey": "appmesh.virtualnode.logging.accesslog",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.logging.cfnproperties": [
        "AccessLog",
        "UniqueKey"
    ],
    "appmesh.virtualnode.portmapping.cfnproperties": [
        "Protocol",
        "Port",
        "UniqueKey",
        "SampleValue"
    ],
    "appmesh.virtualnode.portmapping.port": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualnode.portmapping.port",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.portmapping.protocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.portmapping.protocol",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.servicediscovery.awscloudmap": {
        "Required": "No",
        "Type": "AwsCloudMapServiceDiscovery",
        "UniqueKey": "appmesh.virtualnode.servicediscovery.awscloudmap",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.servicediscovery.cfnproperties": [
        "AWSCloudMap",
        "DNS",
        "UniqueKey",
        "SampleValue"
    ],
    "appmesh.virtualnode.servicediscovery.dns": {
        "Required": "No",
        "Type": "DnsServiceDiscovery",
        "UniqueKey": "appmesh.virtualnode.servicediscovery.dns",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.tagref.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.tagref.key",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.tagref.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.tagref.value",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.virtualnodespec.backends": {
        "Required": "No",
        "Type": "List of [Backend",
        "UniqueKey": "appmesh.virtualnode.virtualnodespec.backends",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.virtualnodespec.cfnproperties": [
        "ServiceDiscovery",
        "Listeners",
        "Backends",
        "Logging",
        "UniqueKey"
    ],
    "appmesh.virtualnode.virtualnodespec.listeners": {
        "Required": "No",
        "Type": "List of [Listener",
        "UniqueKey": "appmesh.virtualnode.virtualnodespec.listeners",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.virtualnodespec.logging": {
        "Required": "No",
        "Type": "Logging",
        "UniqueKey": "appmesh.virtualnode.virtualnodespec.logging",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.virtualnodespec.servicediscovery": {
        "Required": "No",
        "Type": "ServiceDiscovery",
        "UniqueKey": "appmesh.virtualnode.virtualnodespec.servicediscovery",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualnode.virtualservicebackend.cfnproperties": [
        "VirtualServiceName",
        "UniqueKey"
    ],
    "appmesh.virtualnode.virtualservicebackend.virtualservicename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualnode.virtualservicebackend.virtualservicename",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualrouter.portmapping.cfnproperties": [
        "Protocol",
        "Port",
        "UniqueKey",
        "SampleValue"
    ],
    "appmesh.virtualrouter.portmapping.port": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appmesh.virtualrouter.portmapping.port",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualrouter.portmapping.protocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualrouter.portmapping.protocol",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualrouter.tagref.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualrouter.tagref.key",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualrouter.tagref.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.virtualrouter.tagref.value",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualrouter.virtualrouterlistener.cfnproperties": [
        "PortMapping",
        "UniqueKey"
    ],
    "appmesh.virtualrouter.virtualrouterlistener.portmapping": {
        "Required": "Yes",
        "Type": "PortMapping",
        "UniqueKey": "appmesh.virtualrouter.virtualrouterlistener.portmapping",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualrouter.virtualrouterspec.cfnproperties": [
        "Listeners",
        "UniqueKey"
    ],
    "appmesh.virtualrouter.virtualrouterspec.listeners": {
        "Required": "Yes",
        "Type": "List of [VirtualRouterListener",
        "UniqueKey": "appmesh.virtualrouter.virtualrouterspec.listeners",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualservice.tagref.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualservice.tagref.key",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualservice.tagref.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appmesh.virtualservice.tagref.value",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualservice.virtualnodeserviceprovider.cfnproperties": [
        "VirtualNodeName",
        "UniqueKey"
    ],
    "appmesh.virtualservice.virtualnodeserviceprovider.virtualnodename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualservice.virtualnodeserviceprovider.virtualnodename",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualservice.virtualrouterserviceprovider.cfnproperties": [
        "VirtualRouterName",
        "UniqueKey"
    ],
    "appmesh.virtualservice.virtualrouterserviceprovider.virtualroutername": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appmesh.virtualservice.virtualrouterserviceprovider.virtualroutername",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualservice.virtualserviceprovider.cfnproperties": [
        "VirtualNode",
        "VirtualRouter",
        "UniqueKey",
        "SampleValue"
    ],
    "appmesh.virtualservice.virtualserviceprovider.virtualnode": {
        "Required": "No",
        "Type": "VirtualNodeServiceProvider",
        "UniqueKey": "appmesh.virtualservice.virtualserviceprovider.virtualnode",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualservice.virtualserviceprovider.virtualrouter": {
        "Required": "No",
        "Type": "VirtualRouterServiceProvider",
        "UniqueKey": "appmesh.virtualservice.virtualserviceprovider.virtualrouter",
        "UpdateRequires": "No interruption"
    },
    "appmesh.virtualservice.virtualservicespec.cfnproperties": [
        "Provider",
        "UniqueKey"
    ],
    "appmesh.virtualservice.virtualservicespec.provider": {
        "Required": "No",
        "Type": "VirtualServiceProvider",
        "UniqueKey": "appmesh.virtualservice.virtualservicespec.provider",
        "UpdateRequires": "No interruption"
    },
    "appstream.directoryconfig.serviceaccountcredentials.accountname": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appstream.directoryconfig.serviceaccountcredentials.accountname",
        "UpdateRequires": "No interruption"
    },
    "appstream.directoryconfig.serviceaccountcredentials.accountpassword": {
        "Maximum": "127",
        "Minimum": "1",
        "Pattern": "^.{1,127}$",
        "Required": "Yes",
        "SampleValue": "TODO-appstream.directoryconfig.serviceaccountcredentials.accountpassword",
        "Type": "String",
        "UniqueKey": "appstream.directoryconfig.serviceaccountcredentials.accountpassword",
        "UpdateRequires": "No interruption"
    },
    "appstream.directoryconfig.serviceaccountcredentials.cfnproperties": [
        "AccountPassword",
        "AccountName",
        "UniqueKey",
        "SampleValue"
    ],
    "appstream.fleet.computecapacity.cfnproperties": [
        "DesiredInstances",
        "UniqueKey"
    ],
    "appstream.fleet.computecapacity.desiredinstances": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "appstream.fleet.computecapacity.desiredinstances",
        "UpdateRequires": "No interruption"
    },
    "appstream.fleet.domainjoininfo.cfnproperties": [
        "DirectoryName",
        "OrganizationalUnitDistinguishedName",
        "UniqueKey",
        "SampleValue"
    ],
    "appstream.fleet.domainjoininfo.directoryname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appstream.fleet.domainjoininfo.directoryname",
        "UpdateRequires": "No interruption"
    },
    "appstream.fleet.domainjoininfo.organizationalunitdistinguishedname": {
        "Maximum": "2000",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appstream.fleet.domainjoininfo.organizationalunitdistinguishedname",
        "UpdateRequires": "No interruption"
    },
    "appstream.fleet.vpcconfig.cfnproperties": [
        "SubnetIds",
        "SecurityGroupIds",
        "UniqueKey",
        "SampleValue"
    ],
    "appstream.fleet.vpcconfig.securitygroupids": {
        "Maximum": "5",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appstream.fleet.vpcconfig.securitygroupids",
        "UpdateRequires": "No interruption"
    },
    "appstream.fleet.vpcconfig.subnetids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appstream.fleet.vpcconfig.subnetids",
        "UpdateRequires": "No interruption"
    },
    "appstream.imagebuilder.accessendpoint.cfnproperties": [
        "VpceId",
        "EndpointType",
        "UniqueKey",
        "SampleValue"
    ],
    "appstream.imagebuilder.accessendpoint.endpointtype": {
        "Allowed Values": "STREAMING",
        "AllowedValues": [
            "STREAMING"
        ],
        "Pattern": "^[STREAMING]",
        "Required": "Yes",
        "SampleValue": "STREAMING",
        "Type": "String",
        "UniqueKey": "appstream.imagebuilder.accessendpoint.endpointtype",
        "UpdateRequires": "No interruption"
    },
    "appstream.imagebuilder.accessendpoint.vpceid": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appstream.imagebuilder.accessendpoint.vpceid",
        "UpdateRequires": "No interruption"
    },
    "appstream.imagebuilder.domainjoininfo.cfnproperties": [
        "DirectoryName",
        "OrganizationalUnitDistinguishedName",
        "UniqueKey",
        "SampleValue"
    ],
    "appstream.imagebuilder.domainjoininfo.directoryname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appstream.imagebuilder.domainjoininfo.directoryname",
        "UpdateRequires": "No interruption"
    },
    "appstream.imagebuilder.domainjoininfo.organizationalunitdistinguishedname": {
        "Maximum": "2000",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appstream.imagebuilder.domainjoininfo.organizationalunitdistinguishedname",
        "UpdateRequires": "No interruption"
    },
    "appstream.imagebuilder.vpcconfig.cfnproperties": [
        "SubnetIds",
        "SecurityGroupIds",
        "UniqueKey",
        "SampleValue"
    ],
    "appstream.imagebuilder.vpcconfig.securitygroupids": {
        "Maximum": "5",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appstream.imagebuilder.vpcconfig.securitygroupids",
        "UpdateRequires": "No interruption"
    },
    "appstream.imagebuilder.vpcconfig.subnetids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appstream.imagebuilder.vpcconfig.subnetids",
        "UpdateRequires": "No interruption"
    },
    "appstream.stack.accessendpoint.cfnproperties": [
        "VpceId",
        "EndpointType",
        "UniqueKey",
        "SampleValue"
    ],
    "appstream.stack.accessendpoint.endpointtype": {
        "Allowed Values": "STREAMING",
        "AllowedValues": [
            "STREAMING"
        ],
        "Pattern": "^[STREAMING]",
        "Required": "Yes",
        "SampleValue": "STREAMING",
        "Type": "String",
        "UniqueKey": "appstream.stack.accessendpoint.endpointtype",
        "UpdateRequires": "No interruption"
    },
    "appstream.stack.accessendpoint.vpceid": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appstream.stack.accessendpoint.vpceid",
        "UpdateRequires": "No interruption"
    },
    "appstream.stack.applicationsettings.cfnproperties": [
        "SettingsGroup",
        "Enabled",
        "UniqueKey",
        "SampleValue"
    ],
    "appstream.stack.applicationsettings.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appstream.stack.applicationsettings.enabled",
        "UpdateRequires": "No interruption"
    },
    "appstream.stack.applicationsettings.settingsgroup": {
        "Maximum": "100",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appstream.stack.applicationsettings.settingsgroup",
        "UpdateRequires": "No interruption"
    },
    "appstream.stack.storageconnector.cfnproperties": [
        "Domains",
        "ConnectorType",
        "ResourceIdentifier",
        "UniqueKey"
    ],
    "appstream.stack.storageconnector.connectortype": {
        "Allowed Values": "GOOGLE_DRIVE | HOMEFOLDERS | ONE_DRIVE",
        "AllowedValues": [
            "GOOGLE_DRIVE",
            "HOMEFOLDERS",
            "ONE_DRIVE"
        ],
        "Pattern": "^[GOOGLE_DRIVE|HOMEFOLDERS|ONE_DRIVE]",
        "Required": "Yes",
        "SampleValue": "GOOGLE_DRIVE|HOMEFOLDERS|ONE_DRIVE",
        "Type": "String",
        "UniqueKey": "appstream.stack.storageconnector.connectortype",
        "UpdateRequires": "No interruption"
    },
    "appstream.stack.storageconnector.domains": {
        "Maximum": "10",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appstream.stack.storageconnector.domains",
        "UpdateRequires": "No interruption"
    },
    "appstream.stack.storageconnector.resourceidentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appstream.stack.storageconnector.resourceidentifier",
        "UpdateRequires": "No interruption"
    },
    "appstream.stack.usersetting.action": {
        "Allowed Values": "CLIPBOARD_COPY_FROM_LOCAL_DEVICE | CLIPBOARD_COPY_TO_LOCAL_DEVICE | FILE_DOWNLOAD | FILE_UPLOAD | PRINTING_TO_LOCAL_DEVICE",
        "AllowedValues": [
            "CLIPBOARD_COPY_FROM_LOCAL_DEVICE",
            "CLIPBOARD_COPY_TO_LOCAL_DEVICE",
            "FILE_DOWNLOAD",
            "FILE_UPLOAD",
            "PRINTING_TO_LOCAL_DEVICE"
        ],
        "Pattern": "^[CLIPBOARD_COPY_FROM_LOCAL_DEVICE|CLIPBOARD_COPY_TO_LOCAL_DEVICE|FILE_DOWNLOAD|FILE_UPLOAD|PRINTING_TO_LOCAL_DEVICE]",
        "Required": "Yes",
        "SampleValue": "CLIPBOARD_COPY_FROM_LOCAL_DEVICE|CLIPBOARD_COPY_TO_LOCAL_DEVICE|FILE_DOWNLOAD|FILE_UPLOAD|PRINTING_TO_LOCAL_DEVICE",
        "Type": "String",
        "UniqueKey": "appstream.stack.usersetting.action",
        "UpdateRequires": "No interruption"
    },
    "appstream.stack.usersetting.cfnproperties": [
        "Action",
        "Permission",
        "UniqueKey",
        "SampleValue"
    ],
    "appstream.stack.usersetting.permission": {
        "Allowed Values": "DISABLED | ENABLED",
        "AllowedValues": [
            "DISABLED",
            "ENABLED"
        ],
        "Pattern": "^[DISABLED|ENABLED]",
        "Required": "Yes",
        "SampleValue": "DISABLED|ENABLED",
        "Type": "String",
        "UniqueKey": "appstream.stack.usersetting.permission",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.authorizationconfig.authorizationtype": {
        "AuthorizationType`  <a name=\"cfn-appsync-datasource-authorizationconfig-authorizationtype\"></a>\nThe authorization type required by the HTTP endpoint\\.  \n+  **AWS\\_IAM*": "The authorization type is Sigv4\\.",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.authorizationconfig.authorizationtype",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.authorizationconfig.awsiamconfig": {
        "Required": "No",
        "Type": "AwsIamConfig",
        "UniqueKey": "appsync.datasource.authorizationconfig.awsiamconfig",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.authorizationconfig.cfnproperties": [
        "AuthorizationType",
        "AwsIamConfig",
        "UniqueKey",
        "SampleValue"
    ],
    "appsync.datasource.awsiamconfig.cfnproperties": [
        "SigningRegion",
        "SigningServiceName",
        "UniqueKey",
        "SampleValue"
    ],
    "appsync.datasource.awsiamconfig.signingregion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.datasource.awsiamconfig.signingregion",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.awsiamconfig.signingservicename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.datasource.awsiamconfig.signingservicename",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.deltasyncconfig.basetablettl": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.deltasyncconfig.basetablettl",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.deltasyncconfig.cfnproperties": [
        "DeltaSyncTableTTL",
        "DeltaSyncTableName",
        "BaseTableTTL",
        "UniqueKey"
    ],
    "appsync.datasource.deltasyncconfig.deltasynctablename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.deltasyncconfig.deltasynctablename",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.deltasyncconfig.deltasynctablettl": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.deltasyncconfig.deltasynctablettl",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.dynamodbconfig.awsregion": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.dynamodbconfig.awsregion",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.dynamodbconfig.cfnproperties": [
        "DeltaSyncConfig",
        "TableName",
        "UseCallerCredentials",
        "AwsRegion",
        "Versioned",
        "UniqueKey"
    ],
    "appsync.datasource.dynamodbconfig.deltasyncconfig": {
        "Required": "No",
        "Type": "DeltaSyncConfig",
        "UniqueKey": "appsync.datasource.dynamodbconfig.deltasyncconfig",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.dynamodbconfig.tablename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.dynamodbconfig.tablename",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.dynamodbconfig.usecallercredentials": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appsync.datasource.dynamodbconfig.usecallercredentials",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.dynamodbconfig.versioned": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appsync.datasource.dynamodbconfig.versioned",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.elasticsearchconfig.awsregion": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.elasticsearchconfig.awsregion",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.elasticsearchconfig.cfnproperties": [
        "Endpoint",
        "AwsRegion",
        "UniqueKey",
        "SampleValue"
    ],
    "appsync.datasource.elasticsearchconfig.endpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.elasticsearchconfig.endpoint",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.httpconfig.authorizationconfig": {
        "Required": "No",
        "Type": "AuthorizationConfig",
        "UniqueKey": "appsync.datasource.httpconfig.authorizationconfig",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.httpconfig.cfnproperties": [
        "AuthorizationConfig",
        "Endpoint",
        "UniqueKey",
        "SampleValue"
    ],
    "appsync.datasource.httpconfig.endpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.httpconfig.endpoint",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.lambdaconfig.cfnproperties": [
        "LambdaFunctionArn",
        "UniqueKey"
    ],
    "appsync.datasource.lambdaconfig.lambdafunctionarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.lambdaconfig.lambdafunctionarn",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.rdshttpendpointconfig.awsregion": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.rdshttpendpointconfig.awsregion",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.rdshttpendpointconfig.awssecretstorearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.rdshttpendpointconfig.awssecretstorearn",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.rdshttpendpointconfig.cfnproperties": [
        "DatabaseName",
        "DbClusterIdentifier",
        "AwsSecretStoreArn",
        "AwsRegion",
        "Schema",
        "UniqueKey"
    ],
    "appsync.datasource.rdshttpendpointconfig.databasename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.datasource.rdshttpendpointconfig.databasename",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.rdshttpendpointconfig.dbclusteridentifier": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.rdshttpendpointconfig.dbclusteridentifier",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.rdshttpendpointconfig.schema": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.datasource.rdshttpendpointconfig.schema",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.relationaldatabaseconfig.cfnproperties": [
        "RdsHttpEndpointConfig",
        "RelationalDatabaseSourceType",
        "UniqueKey",
        "SampleValue"
    ],
    "appsync.datasource.relationaldatabaseconfig.rdshttpendpointconfig": {
        "Required": "No",
        "Type": "RdsHttpEndpointConfig",
        "UniqueKey": "appsync.datasource.relationaldatabaseconfig.rdshttpendpointconfig",
        "UpdateRequires": "No interruption"
    },
    "appsync.datasource.relationaldatabaseconfig.relationaldatabasesourcetype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.datasource.relationaldatabaseconfig.relationaldatabasesourcetype",
        "UpdateRequires": "No interruption"
    },
    "appsync.graphqlapi.additionalauthenticationprovider.authenticationtype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.additionalauthenticationprovider.authenticationtype",
        "UpdateRequires": "No interruption"
    },
    "appsync.graphqlapi.additionalauthenticationprovider.cfnproperties": [
        "OpenIDConnectConfig",
        "AuthenticationType",
        "UserPoolConfig",
        "UniqueKey"
    ],
    "appsync.graphqlapi.additionalauthenticationprovider.openidconnectconfig": {
        "Required": "No",
        "Type": "OpenIDConnectConfig",
        "UniqueKey": "appsync.graphqlapi.additionalauthenticationprovider.openidconnectconfig",
        "UpdateRequires": "No interruption"
    },
    "appsync.graphqlapi.additionalauthenticationprovider.userpoolconfig": {
        "Required": "No",
        "Type": "CognitoUserPoolConfig",
        "UniqueKey": "appsync.graphqlapi.additionalauthenticationprovider.userpoolconfig",
        "UpdateRequires": "No interruption"
    },
    "appsync.graphqlapi.cognitouserpoolconfig.appidclientregex": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.cognitouserpoolconfig.appidclientregex",
        "UpdateRequires": "No interruption"
    },
    "appsync.graphqlapi.cognitouserpoolconfig.awsregion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.cognitouserpoolconfig.awsregion",
        "UpdateRequires": "No interruption"
    },
    "appsync.graphqlapi.cognitouserpoolconfig.cfnproperties": [
        "AppIdClientRegex",
        "UserPoolId",
        "AwsRegion",
        "UniqueKey"
    ],
    "appsync.graphqlapi.cognitouserpoolconfig.userpoolid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.cognitouserpoolconfig.userpoolid",
        "UpdateRequires": "No interruption"
    },
    "appsync.graphqlapi.logconfig.cfnproperties": [
        "FieldLogLevel",
        "ExcludeVerboseContent",
        "CloudWatchLogsRoleArn",
        "UniqueKey"
    ],
    "appsync.graphqlapi.logconfig.cloudwatchlogsrolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.logconfig.cloudwatchlogsrolearn",
        "UpdateRequires": "No interruption"
    },
    "appsync.graphqlapi.logconfig.excludeverbosecontent": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "appsync.graphqlapi.logconfig.excludeverbosecontent",
        "UpdateRequires": "No interruption"
    },
    "appsync.graphqlapi.logconfig.fieldloglevel": {
        "FieldLogLevel`  <a name=\"cfn-appsync-graphqlapi-logconfig-fieldloglevel\"></a>\nThe field logging level\\. Values can be NONE, ERROR, or ALL\\.   \n+  **NONE*": "No field\\-level logs are captured\\.\n+  **ERROR*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.logconfig.fieldloglevel",
        "UpdateRequires": "No interruption"
    },
    "appsync.graphqlapi.openidconnectconfig.authttl": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "appsync.graphqlapi.openidconnectconfig.authttl",
        "UpdateRequires": "No interruption"
    },
    "appsync.graphqlapi.openidconnectconfig.cfnproperties": [
        "IatTTL",
        "AuthTTL",
        "ClientId",
        "Issuer",
        "UniqueKey"
    ],
    "appsync.graphqlapi.openidconnectconfig.clientid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.openidconnectconfig.clientid",
        "UpdateRequires": "No interruption"
    },
    "appsync.graphqlapi.openidconnectconfig.iatttl": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "appsync.graphqlapi.openidconnectconfig.iatttl",
        "UpdateRequires": "No interruption"
    },
    "appsync.graphqlapi.openidconnectconfig.issuer": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.openidconnectconfig.issuer",
        "UpdateRequires": "No interruption"
    },
    "appsync.graphqlapi.userpoolconfig.appidclientregex": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.userpoolconfig.appidclientregex",
        "UpdateRequires": "No interruption"
    },
    "appsync.graphqlapi.userpoolconfig.awsregion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.userpoolconfig.awsregion",
        "UpdateRequires": "No interruption"
    },
    "appsync.graphqlapi.userpoolconfig.cfnproperties": [
        "AppIdClientRegex",
        "DefaultAction",
        "UserPoolId",
        "AwsRegion",
        "UniqueKey"
    ],
    "appsync.graphqlapi.userpoolconfig.defaultaction": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.userpoolconfig.defaultaction",
        "UpdateRequires": "No interruption"
    },
    "appsync.graphqlapi.userpoolconfig.userpoolid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.graphqlapi.userpoolconfig.userpoolid",
        "UpdateRequires": "No interruption"
    },
    "appsync.resolver.cachingconfig.cachingkeys": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appsync.resolver.cachingconfig.cachingkeys",
        "UpdateRequires": "No interruption"
    },
    "appsync.resolver.cachingconfig.cfnproperties": [
        "CachingKeys",
        "Ttl",
        "UniqueKey",
        "SampleValue"
    ],
    "appsync.resolver.cachingconfig.ttl": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "appsync.resolver.cachingconfig.ttl",
        "UpdateRequires": "No interruption"
    },
    "appsync.resolver.lambdaconflicthandlerconfig.cfnproperties": [
        "LambdaConflictHandlerArn",
        "UniqueKey"
    ],
    "appsync.resolver.lambdaconflicthandlerconfig.lambdaconflicthandlerarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.resolver.lambdaconflicthandlerconfig.lambdaconflicthandlerarn",
        "UpdateRequires": "No interruption"
    },
    "appsync.resolver.pipelineconfig.cfnproperties": [
        "Functions",
        "UniqueKey"
    ],
    "appsync.resolver.pipelineconfig.functions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "appsync.resolver.pipelineconfig.functions",
        "UpdateRequires": "No interruption"
    },
    "appsync.resolver.syncconfig.cfnproperties": [
        "ConflictHandler",
        "LambdaConflictHandlerConfig",
        "ConflictDetection",
        "UniqueKey"
    ],
    "appsync.resolver.syncconfig.conflictdetection": {
        "ConflictDetection`  <a name=\"cfn-appsync-resolver-syncconfig-conflictdetection\"></a>\nThe Conflict Detection strategy to use\\.  \n+  **VERSION*": "Detect conflicts based on object versions for this resolver\\.\n+  **NONE*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "appsync.resolver.syncconfig.conflictdetection",
        "UpdateRequires": "No interruption"
    },
    "appsync.resolver.syncconfig.conflicthandler": {
        "ConflictHandler`  <a name=\"cfn-appsync-resolver-syncconfig-conflicthandler\"></a>\nThe Conflict Resolution strategy to perform in the event of a conflict\\.  \n+  **OPTIMISTIC\\_CONCURRENCY*": "Resolve conflicts by rejecting mutations when versions do not match the latest version at the server\\.\n+  **AUTOMERGE*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "appsync.resolver.syncconfig.conflicthandler",
        "UpdateRequires": "No interruption"
    },
    "appsync.resolver.syncconfig.lambdaconflicthandlerconfig": {
        "Required": "No",
        "Type": "LambdaConflictHandlerConfig",
        "UniqueKey": "appsync.resolver.syncconfig.lambdaconflicthandlerconfig",
        "UpdateRequires": "No interruption"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties": [
        "PlacementGroup",
        "NotificationConfigurations",
        "LifecycleHookSpecificationList",
        "VPCZoneIdentifier",
        "LoadBalancerNames",
        "MixedInstancesPolicy",
        "Tags",
        "InstanceId",
        "MaxSize",
        "TerminationPolicies",
        "MetricsCollection",
        "TargetGroupARNs",
        "HealthCheckType",
        "LaunchTemplate",
        "ServiceLinkedRoleARN",
        "AutoScalingGroupName",
        "MinSize",
        "LaunchConfigurationName",
        "HealthCheckGracePeriod",
        "DesiredCapacity",
        "Cooldown",
        "AvailabilityZones",
        "UniqueKey"
    ],
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.autoscalinggroupname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.autoscalinggroupname",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.availabilityzones": {
        "Required": "Conditional",
        "Type": "List of String",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.availabilityzones",
        "UpdateRequires": "No interruption"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.cooldown": {
        "Required": "No",
        "SampleValue": "TODO-cooldown",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.cooldown",
        "UpdateRequires": "No interruption"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.desiredcapacity": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.desiredcapacity",
        "UpdateRequires": "No interruption"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.healthcheckgraceperiod": {
        "Required": "Conditional",
        "SampleValue": "TODO-healthcheckgraceperiod",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.healthcheckgraceperiod",
        "UpdateRequires": "No interruption"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.healthchecktype": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.healthchecktype",
        "UpdateRequires": "No interruption"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.instanceid": {
        "Required": "Conditional",
        "SampleValue": "TODO-instanceid",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.instanceid",
        "UpdateRequires": "Replacement"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.launchconfigurationname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.launchconfigurationname",
        "UpdateRequires": "No interruption"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.launchtemplate": {
        "Required": "Conditional",
        "Type": "LaunchTemplateSpecification",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.launchtemplate",
        "UpdateRequires": "No interruption"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.lifecyclehookspecificationlist": {
        "Required": "No",
        "Type": "List of [LifecycleHookSpecification",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.lifecyclehookspecificationlist",
        "UpdateRequires": "No interruption"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.loadbalancernames": {
        "Required": "No",
        "SampleValue": "TODO-loadbalancernames",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.loadbalancernames",
        "UpdateRequires": "No interruption"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.maxsize": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.maxsize",
        "UpdateRequires": "No interruption"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.metricscollection": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.metricscollection",
        "UpdateRequires": "No interruption"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.minsize": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.minsize",
        "UpdateRequires": "No interruption"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.mixedinstancespolicy": {
        "Required": "Conditional",
        "SampleValue": "TODO-mixedinstancespolicy",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.mixedinstancespolicy",
        "UpdateRequires": "No interruption"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.notificationconfigurations": {
        "Required": "No",
        "Type": "List of [NotificationConfiguration",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.notificationconfigurations",
        "UpdateRequires": "No interruption"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.placementgroup": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.placementgroup",
        "UpdateRequires": "No interruption"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.servicelinkedrolearn": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.servicelinkedrolearn",
        "UpdateRequires": "No interruption"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.tags": {
        "Required": "No",
        "Type": "List of [TagProperty",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.tags",
        "UpdateRequires": "No interruption"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.targetgrouparns": {
        "Required": "No",
        "SampleValue": "TODO-targetgrouparns",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.targetgrouparns",
        "UpdateRequires": "No interruption"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.terminationpolicies": {
        "Required": "No",
        "SampleValue": "TODO-terminationpolicies",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.terminationpolicies",
        "UpdateRequires": "No interruption"
    },
    "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.vpczoneidentifier": {
        "Maximum": "2047",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "Type": "List of String",
        "UniqueKey": "as.group..examples..Auto_Scaling_Group_with_Load_Balancer_and_Multiple_Properties.vpczoneidentifier",
        "UpdateRequires": "Replacement"
    },
    "as.group.autoscalinggroupname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.group.autoscalinggroupname",
        "UpdateRequires": "Replacement"
    },
    "as.group.autoscalinggroupname.maximum": "255",
    "as.group.autoscalinggroupname.minimum": "1",
    "as.group.autoscalinggroupname.pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
    "as.group.autoscalinggroupname.required": "No",
    "as.group.autoscalinggroupname.type": "String",
    "as.group.autoscalinggroupname.updaterequires": "[Replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement)",
    "as.group.availabilityzones": {
        "Required": "Conditional",
        "Type": "List of String",
        "UniqueKey": "as.group.availabilityzones",
        "UpdateRequires": "No interruption"
    },
    "as.group.availabilityzones.required": "Conditional",
    "as.group.availabilityzones.type": "List of String",
    "as.group.availabilityzones.updaterequires": "[No interruption](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt)",
    "as.group.cfnproperties": [
        "PlacementGroup",
        "NotificationConfigurations",
        "LifecycleHookSpecificationList",
        "VPCZoneIdentifier",
        "LoadBalancerNames",
        "MixedInstancesPolicy",
        "Tags",
        "InstanceId",
        "MaxSize",
        "TerminationPolicies",
        "MetricsCollection",
        "TargetGroupARNs",
        "HealthCheckType",
        "LaunchTemplate",
        "ServiceLinkedRoleARN",
        "AutoScalingGroupName",
        "MinSize",
        "LaunchConfigurationName",
        "HealthCheckGracePeriod",
        "DesiredCapacity",
        "Cooldown",
        "AvailabilityZones",
        "UniqueKey"
    ],
    "as.group.cooldown": {
        "Required": "No",
        "SampleValue": "TODO-cooldown",
        "UniqueKey": "as.group.cooldown",
        "UpdateRequires": "No interruption"
    },
    "as.group.cooldown.required": "No",
    "as.group.cooldown.updaterequires": "No interruption",
    "as.group.desiredcapacity": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.group.desiredcapacity",
        "UpdateRequires": "No interruption"
    },
    "as.group.desiredcapacity.required": "No",
    "as.group.desiredcapacity.type": "String",
    "as.group.desiredcapacity.updaterequires": "[No interruption](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt)",
    "as.group.healthcheckgraceperiod": {
        "Required": "Conditional",
        "SampleValue": "TODO-healthcheckgraceperiod",
        "UniqueKey": "as.group.healthcheckgraceperiod",
        "UpdateRequires": "No interruption"
    },
    "as.group.healthcheckgraceperiod.required": "Conditional",
    "as.group.healthcheckgraceperiod.updaterequires": "No interruption",
    "as.group.healthchecktype": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.group.healthchecktype",
        "UpdateRequires": "No interruption"
    },
    "as.group.healthchecktype.maximum": "32",
    "as.group.healthchecktype.minimum": "1",
    "as.group.healthchecktype.pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
    "as.group.healthchecktype.required": "No",
    "as.group.healthchecktype.updaterequires": "No interruption",
    "as.group.instanceid": {
        "Required": "Conditional",
        "SampleValue": "TODO-instanceid",
        "UniqueKey": "as.group.instanceid",
        "UpdateRequires": "Replacement"
    },
    "as.group.instanceid.required": "Conditional",
    "as.group.instanceid.updaterequires": "Replacement",
    "as.group.launchconfigurationname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "as.group.launchconfigurationname",
        "UpdateRequires": "No interruption"
    },
    "as.group.launchconfigurationname.maximum": "255",
    "as.group.launchconfigurationname.minimum": "1",
    "as.group.launchconfigurationname.pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
    "as.group.launchconfigurationname.required": "Conditional",
    "as.group.launchconfigurationname.type": "String",
    "as.group.launchconfigurationname.updaterequires": "[No interruption](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt)",
    "as.group.launchtemplate": {
        "Required": "Conditional",
        "Type": "LaunchTemplateSpecification",
        "UniqueKey": "as.group.launchtemplate",
        "UpdateRequires": "No interruption"
    },
    "as.group.launchtemplate.required": "Conditional",
    "as.group.launchtemplate.type": "LaunchTemplateSpecification",
    "as.group.launchtemplate.updaterequires": "[No interruption](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt)",
    "as.group.lifecyclehookspecificationlist": {
        "Required": "No",
        "Type": "List of [LifecycleHookSpecification",
        "UniqueKey": "as.group.lifecyclehookspecificationlist",
        "UpdateRequires": "No interruption"
    },
    "as.group.lifecyclehookspecificationlist.required": "No",
    "as.group.lifecyclehookspecificationlist.type": "List of [LifecycleHookSpecification",
    "as.group.lifecyclehookspecificationlist.updaterequires": "[No interruption](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt)",
    "as.group.loadbalancernames": {
        "Required": "No",
        "SampleValue": "TODO-loadbalancernames",
        "UniqueKey": "as.group.loadbalancernames",
        "UpdateRequires": "No interruption"
    },
    "as.group.loadbalancernames.required": "No",
    "as.group.loadbalancernames.updaterequires": "No interruption",
    "as.group.maxsize": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.group.maxsize",
        "UpdateRequires": "No interruption"
    },
    "as.group.maxsize.required": "Yes",
    "as.group.maxsize.type": "String",
    "as.group.maxsize.updaterequires": "[No interruption](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt)",
    "as.group.metricscollection": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "as.group.metricscollection",
        "UpdateRequires": "No interruption"
    },
    "as.group.metricscollection.required": "No",
    "as.group.metricscollection.type": "List",
    "as.group.metricscollection.updaterequires": "[No interruption](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt)",
    "as.group.minsize": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.group.minsize",
        "UpdateRequires": "No interruption"
    },
    "as.group.minsize.required": "Yes",
    "as.group.minsize.type": "String",
    "as.group.minsize.updaterequires": "[No interruption](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt)",
    "as.group.mixedinstancespolicy": {
        "Required": "Conditional",
        "SampleValue": "TODO-mixedinstancespolicy",
        "UniqueKey": "as.group.mixedinstancespolicy",
        "UpdateRequires": "No interruption"
    },
    "as.group.mixedinstancespolicy.required": "Conditional",
    "as.group.mixedinstancespolicy.updaterequires": "No interruption",
    "as.group.notificationconfigurations": {
        "Required": "No",
        "Type": "List of [NotificationConfiguration",
        "UniqueKey": "as.group.notificationconfigurations",
        "UpdateRequires": "No interruption"
    },
    "as.group.notificationconfigurations.required": "No",
    "as.group.notificationconfigurations.type": "List of [NotificationConfiguration",
    "as.group.notificationconfigurations.updaterequires": "[No interruption](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt)",
    "as.group.placementgroup": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.group.placementgroup",
        "UpdateRequires": "No interruption"
    },
    "as.group.placementgroup.maximum": "255",
    "as.group.placementgroup.minimum": "1",
    "as.group.placementgroup.pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
    "as.group.placementgroup.required": "No",
    "as.group.placementgroup.type": "String",
    "as.group.placementgroup.updaterequires": "[No interruption](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt)",
    "as.group.servicelinkedrolearn": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.group.servicelinkedrolearn",
        "UpdateRequires": "No interruption"
    },
    "as.group.servicelinkedrolearn.maximum": "1600",
    "as.group.servicelinkedrolearn.minimum": "1",
    "as.group.servicelinkedrolearn.pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
    "as.group.servicelinkedrolearn.required": "No",
    "as.group.servicelinkedrolearn.type": "String",
    "as.group.servicelinkedrolearn.updaterequires": "[No interruption](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt)",
    "as.group.tags": {
        "Required": "No",
        "Type": "List of [TagProperty",
        "UniqueKey": "as.group.tags",
        "UpdateRequires": "No interruption"
    },
    "as.group.tags.required": "No",
    "as.group.tags.type": "List of [TagProperty",
    "as.group.tags.updaterequires": "[No interruption](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt)",
    "as.group.targetgrouparns": {
        "Required": "No",
        "SampleValue": "TODO-targetgrouparns",
        "UniqueKey": "as.group.targetgrouparns",
        "UpdateRequires": "No interruption"
    },
    "as.group.targetgrouparns.required": "No",
    "as.group.targetgrouparns.updaterequires": "No interruption",
    "as.group.terminationpolicies": {
        "Required": "No",
        "SampleValue": "TODO-terminationpolicies",
        "UniqueKey": "as.group.terminationpolicies",
        "UpdateRequires": "No interruption"
    },
    "as.group.terminationpolicies.required": "No",
    "as.group.terminationpolicies.updaterequires": "No interruption",
    "as.group.vpczoneidentifier": {
        "Maximum": "2047",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "Type": "List of String",
        "UniqueKey": "as.group.vpczoneidentifier",
        "UpdateRequires": "Replacement"
    },
    "as.group.vpczoneidentifier.maximum": "2047",
    "as.group.vpczoneidentifier.minimum": "1",
    "as.group.vpczoneidentifier.pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
    "as.group.vpczoneidentifier.required": "Conditional",
    "as.group.vpczoneidentifier.type": "List of String",
    "as.group.vpczoneidentifier.updaterequires": "[Some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt)\n\n#",
    "as.launchconfig.associatepublicipaddress": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "as.launchconfig.associatepublicipaddress",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.blockdev.mapping.cfnproperties": [
        "VirtualName",
        "DeviceName",
        "NoDevice",
        "Ebs",
        "UniqueKey"
    ],
    "as.launchconfig.blockdev.mapping.devicename": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "UniqueKey": "as.launchconfig.blockdev.mapping.devicename",
        "UpdateRequires": "No interruption"
    },
    "as.launchconfig.blockdev.mapping.ebs": {
        "Required": "No",
        "Type": "BlockDevice",
        "UniqueKey": "as.launchconfig.blockdev.mapping.ebs",
        "UpdateRequires": "No interruption"
    },
    "as.launchconfig.blockdev.mapping.nodevice": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "as.launchconfig.blockdev.mapping.nodevice",
        "UpdateRequires": "No interruption"
    },
    "as.launchconfig.blockdev.mapping.virtualname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.launchconfig.blockdev.mapping.virtualname",
        "UpdateRequires": "No interruption"
    },
    "as.launchconfig.blockdev.template.cfnproperties": [
        "VolumeSize",
        "Encrypted",
        "VolumeType",
        "DeleteOnTermination",
        "SnapshotId",
        "Iops",
        "UniqueKey"
    ],
    "as.launchconfig.blockdev.template.deleteontermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "as.launchconfig.blockdev.template.deleteontermination",
        "UpdateRequires": "No interruption"
    },
    "as.launchconfig.blockdev.template.encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "as.launchconfig.blockdev.template.encrypted",
        "UpdateRequires": "No interruption"
    },
    "as.launchconfig.blockdev.template.iops": {
        "Maximum": "20000",
        "Minimum": "100",
        "Required": "Conditional",
        "UniqueKey": "as.launchconfig.blockdev.template.iops",
        "UpdateRequires": "No interruption"
    },
    "as.launchconfig.blockdev.template.snapshotid": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "as.launchconfig.blockdev.template.snapshotid",
        "UpdateRequires": "No interruption"
    },
    "as.launchconfig.blockdev.template.volumesize": {
        "Maximum": "16384",
        "Minimum": "1",
        "Pattern": "^[1,16384]}$",
        "Required": "Conditional",
        "SampleValue": "1...16384",
        "Type": "Integer",
        "UniqueKey": "as.launchconfig.blockdev.template.volumesize",
        "UpdateRequires": "No interruption"
    },
    "as.launchconfig.blockdev.template.volumetype": {
        "Maximum": "255",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "as.launchconfig.blockdev.template.volumetype",
        "UpdateRequires": "No interruption"
    },
    "as.launchconfig.blockdevicemappings": {
        "Required": "No",
        "Type": "List of [BlockDeviceMapping",
        "UniqueKey": "as.launchconfig.blockdevicemappings",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.cfnproperties": [
        "UserData",
        "ClassicLinkVPCId",
        "InstanceId",
        "PlacementTenancy",
        "InstanceMonitoring",
        "ClassicLinkVPCSecurityGroups",
        "ImageId",
        "BlockDeviceMappings",
        "EbsOptimized",
        "SecurityGroups",
        "SpotPrice",
        "LaunchConfigurationName",
        "KernelId",
        "RamDiskId",
        "KeyName",
        "IamInstanceProfile",
        "InstanceType",
        "AssociatePublicIpAddress",
        "UniqueKey"
    ],
    "as.launchconfig.classiclinkvpcid": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.launchconfig.classiclinkvpcid",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.classiclinkvpcsecuritygroups": {
        "Required": "Conditional",
        "Type": "List of String",
        "UniqueKey": "as.launchconfig.classiclinkvpcsecuritygroups",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.ebsoptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "as.launchconfig.ebsoptimized",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.iaminstanceprofile": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.launchconfig.iaminstanceprofile",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.imageid": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "UniqueKey": "as.launchconfig.imageid",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.instanceid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.launchconfig.instanceid",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.instancemonitoring": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "as.launchconfig.instancemonitoring",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.instancetype": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "UniqueKey": "as.launchconfig.instancetype",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.kernelid": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.launchconfig.kernelid",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.keyname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.launchconfig.keyname",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.launchconfigurationname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.launchconfig.launchconfigurationname",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.placementtenancy": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.launchconfig.placementtenancy",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.ramdiskid": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.launchconfig.ramdiskid",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.securitygroups": {
        "Required": "No",
        "SampleValue": "TODO-securitygroups",
        "UniqueKey": "as.launchconfig.securitygroups",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.spotprice": {
        "Maximum": "255",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "as.launchconfig.spotprice",
        "UpdateRequires": "Replacement"
    },
    "as.launchconfig.userdata": {
        "Maximum": "21847",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.launchconfig.userdata",
        "UpdateRequires": "Replacement"
    },
    "as.metricscollection.cfnproperties": [
        "Metrics",
        "Granularity",
        "UniqueKey",
        "SampleValue"
    ],
    "as.metricscollection.granularity": {
        "Allowed Values": "1Minute",
        "AllowedValues": [
            "1Minute"
        ],
        "Pattern": "^[1Minute]",
        "Required": "Yes",
        "SampleValue": "1Minute",
        "Type": "String",
        "UniqueKey": "as.metricscollection.granularity",
        "UpdateRequires": "No interruption"
    },
    "as.metricscollection.metrics": {
        "Allowed Values": "+ `GroupMinSize`\n+ `GroupMaxSize`\n+ `GroupDesiredCapacity`\n+ `GroupInServiceInstances`\n+ `GroupPendingInstances`\n+ `GroupStandbyInstances`\n+ `GroupTerminatingInstances`\n+ `GroupTotalInstances",
        "AllowedValues": [
            "+ `GroupMinSize`\n+ `GroupMaxSize`\n+ `GroupDesiredCapacity`\n+ `GroupInServiceInstances`\n+ `GroupPendingInstances`\n+ `GroupStandbyInstances`\n+ `GroupTerminatingInstances`\n+ `GroupTotalInstances"
        ],
        "Pattern": "^[+ `GroupMinSize`\n+ `GroupMaxSize`\n+ `GroupDesiredCapacity`\n+ `GroupInServiceInstances`\n+ `GroupPendingInstances`\n+ `GroupStandbyInstances`\n+ `GroupTerminatingInstances`\n+ `GroupTotalInstances]",
        "Required": "No",
        "SampleValue": "+ `GroupMinSize`\n+ `GroupMaxSize`\n+ `GroupDesiredCapacity`\n+ `GroupInServiceInstances`\n+ `GroupPendingInstances`\n+ `GroupStandbyInstances`\n+ `GroupTerminatingInstances`\n+ `GroupTotalInstances",
        "Type": "List of String",
        "UniqueKey": "as.metricscollection.metrics",
        "UpdateRequires": "No interruption"
    },
    "as.notificationconfigurations.cfnproperties": [
        "NotificationTypes",
        "TopicARN",
        "UniqueKey",
        "SampleValue"
    ],
    "as.notificationconfigurations.notificationtypes": {
        "Allowed Values": "+ `autoscaling:EC2_INSTANCE_LAUNCH`\n+ `autoscaling:EC2_INSTANCE_LAUNCH_ERROR`\n+ `autoscaling:EC2_INSTANCE_TERMINATE`\n+ `autoscaling:EC2_INSTANCE_TERMINATE_ERROR`\n+ `autoscaling:TEST_NOTIFICATION",
        "AllowedValues": [
            "+ `autoscaling:EC2_INSTANCE_LAUNCH`\n+ `autoscaling:EC2_INSTANCE_LAUNCH_ERROR`\n+ `autoscaling:EC2_INSTANCE_TERMINATE`\n+ `autoscaling:EC2_INSTANCE_TERMINATE_ERROR`\n+ `autoscaling:TEST_NOTIFICATION"
        ],
        "Pattern": "^[+ `autoscaling:EC2_INSTANCE_LAUNCH`\n+ `autoscaling:EC2_INSTANCE_LAUNCH_ERROR`\n+ `autoscaling:EC2_INSTANCE_TERMINATE`\n+ `autoscaling:EC2_INSTANCE_TERMINATE_ERROR`\n+ `autoscaling:TEST_NOTIFICATION]",
        "Required": "No",
        "SampleValue": "+ `autoscaling:EC2_INSTANCE_LAUNCH`\n+ `autoscaling:EC2_INSTANCE_LAUNCH_ERROR`\n+ `autoscaling:EC2_INSTANCE_TERMINATE`\n+ `autoscaling:EC2_INSTANCE_TERMINATE_ERROR`\n+ `autoscaling:TEST_NOTIFICATION",
        "Type": "List of String",
        "UniqueKey": "as.notificationconfigurations.notificationtypes",
        "UpdateRequires": "No interruption"
    },
    "as.notificationconfigurations.topicarn": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.notificationconfigurations.topicarn",
        "UpdateRequires": "No interruption"
    },
    "as.policy.adjustmenttype": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "as.policy.adjustmenttype",
        "UpdateRequires": "No interruption"
    },
    "as.policy.autoscalinggroupname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.policy.autoscalinggroupname",
        "UpdateRequires": "No interruption"
    },
    "as.policy.cfnproperties": [
        "EstimatedInstanceWarmup",
        "MinAdjustmentMagnitude",
        "AdjustmentType",
        "AutoScalingGroupName",
        "Cooldown",
        "PolicyType",
        "StepAdjustments",
        "MetricAggregationType",
        "ScalingAdjustment",
        "TargetTrackingConfiguration",
        "UniqueKey"
    ],
    "as.policy.cooldown": {
        "Required": "No",
        "SampleValue": "TODO-cooldown",
        "UniqueKey": "as.policy.cooldown",
        "UpdateRequires": "No interruption"
    },
    "as.policy.estimatedinstancewarmup": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "as.policy.estimatedinstancewarmup",
        "UpdateRequires": "No interruption"
    },
    "as.policy.metricaggregationtype": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "as.policy.metricaggregationtype",
        "UpdateRequires": "No interruption"
    },
    "as.policy.minadjustmentmagnitude": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "as.policy.minadjustmentmagnitude",
        "UpdateRequires": "No interruption"
    },
    "as.policy.policytype": {
        "Allowed Values": "SimpleScaling`, `StepScaling`, or `TargetTrackingScaling",
        "AllowedValues": [
            "SimpleScaling`, `StepScaling`, or `TargetTrackingScaling"
        ],
        "Pattern": "^[SimpleScaling`, `StepScaling`, or `TargetTrackingScaling]",
        "Required": "No",
        "SampleValue": "SimpleScaling`, `StepScaling`, or `TargetTrackingScaling",
        "Type": "String",
        "UniqueKey": "as.policy.policytype",
        "UpdateRequires": "No interruption"
    },
    "as.policy.scalingadjustment": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "as.policy.scalingadjustment",
        "UpdateRequires": "No interruption"
    },
    "as.policy.stepadjustments": {
        "Required": "Conditional",
        "Type": "List of [StepAdjustment",
        "UniqueKey": "as.policy.stepadjustments",
        "UpdateRequires": "No interruption"
    },
    "as.policy.targettrackingconfiguration": {
        "Required": "Conditional",
        "Type": "TargetTrackingConfiguration",
        "UniqueKey": "as.policy.targettrackingconfiguration",
        "UpdateRequires": "No interruption"
    },
    "as.tags.cfnproperties": [
        "Value",
        "PropagateAtLaunch",
        "Key",
        "UniqueKey"
    ],
    "as.tags.key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.tags.key",
        "UpdateRequires": "No interruption"
    },
    "as.tags.propagateatlaunch": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "as.tags.propagateatlaunch",
        "UpdateRequires": "No interruption"
    },
    "as.tags.value": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "as.tags.value",
        "UpdateRequires": "No interruption"
    },
    "ask.skill.authenticationconfiguration.cfnproperties": [
        "ClientSecret",
        "RefreshToken",
        "ClientId",
        "UniqueKey"
    ],
    "ask.skill.authenticationconfiguration.clientid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ask.skill.authenticationconfiguration.clientid",
        "UpdateRequires": "No interruption"
    },
    "ask.skill.authenticationconfiguration.clientsecret": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ask.skill.authenticationconfiguration.clientsecret",
        "UpdateRequires": "No interruption"
    },
    "ask.skill.authenticationconfiguration.refreshtoken": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ask.skill.authenticationconfiguration.refreshtoken",
        "UpdateRequires": "No interruption"
    },
    "ask.skill.overrides.cfnproperties": [
        "Manifest",
        "UniqueKey"
    ],
    "ask.skill.overrides.manifest": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "ask.skill.overrides.manifest",
        "UpdateRequires": "No interruption"
    },
    "ask.skill.skillpackage.cfnproperties": [
        "S3Bucket",
        "Overrides",
        "S3BucketRole",
        "S3Key",
        "S3ObjectVersion",
        "UniqueKey"
    ],
    "ask.skill.skillpackage.overrides": {
        "Required": "No",
        "Type": "Overrides",
        "UniqueKey": "ask.skill.skillpackage.overrides",
        "UpdateRequires": "No interruption"
    },
    "ask.skill.skillpackage.s3bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ask.skill.skillpackage.s3bucket",
        "UpdateRequires": "No interruption"
    },
    "ask.skill.skillpackage.s3bucketrole": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ask.skill.skillpackage.s3bucketrole",
        "UpdateRequires": "No interruption"
    },
    "ask.skill.skillpackage.s3key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ask.skill.skillpackage.s3key",
        "UpdateRequires": "No interruption"
    },
    "ask.skill.skillpackage.s3objectversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ask.skill.skillpackage.s3objectversion",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.autoscalinggroup.instancesdistribution.cfnproperties": [
        "OnDemandBaseCapacity",
        "SpotInstancePools",
        "OnDemandPercentageAboveBaseCapacity",
        "SpotMaxPrice",
        "SpotAllocationStrategy",
        "OnDemandAllocationStrategy",
        "UniqueKey"
    ],
    "autoscaling.autoscalinggroup.instancesdistribution.ondemandallocationstrategy": {
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.instancesdistribution.ondemandallocationstrategy",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.autoscalinggroup.instancesdistribution.ondemandbasecapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscaling.autoscalinggroup.instancesdistribution.ondemandbasecapacity",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.instancesdistribution.ondemandpercentageabovebasecapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscaling.autoscalinggroup.instancesdistribution.ondemandpercentageabovebasecapacity",
        "UpdateRequires": "Replacement"
    },
    "autoscaling.autoscalinggroup.instancesdistribution.spotallocationstrategy": {
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.instancesdistribution.spotallocationstrategy",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.autoscalinggroup.instancesdistribution.spotinstancepools": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscaling.autoscalinggroup.instancesdistribution.spotinstancepools",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.autoscalinggroup.instancesdistribution.spotmaxprice": {
        "Maximum": "255",
        "Minimum": "0",
        "Pattern": "^.{0,255}$",
        "Required": "No",
        "SampleValue": "TODO-autoscaling.autoscalinggroup.instancesdistribution.spotmaxprice",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.instancesdistribution.spotmaxprice",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.autoscalinggroup.launchtemplate.cfnproperties": [
        "LaunchTemplateSpecification",
        "Overrides",
        "UniqueKey",
        "SampleValue"
    ],
    "autoscaling.autoscalinggroup.launchtemplate.launchtemplatespecification": {
        "Required": "Yes",
        "Type": "LaunchTemplateSpecification",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplate.launchtemplatespecification",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.autoscalinggroup.launchtemplate.overrides": {
        "Required": "No",
        "Type": "List of [LaunchTemplateOverrides",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplate.overrides",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.autoscalinggroup.launchtemplateoverrides.cfnproperties": [
        "InstanceType",
        "WeightedCapacity",
        "UniqueKey",
        "SampleValue"
    ],
    "autoscaling.autoscalinggroup.launchtemplateoverrides.instancetype": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplateoverrides.instancetype",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.autoscalinggroup.launchtemplateoverrides.weightedcapacity": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplateoverrides.weightedcapacity",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.autoscalinggroup.launchtemplatespecification.cfnproperties": [
        "LaunchTemplateName",
        "Version",
        "LaunchTemplateId",
        "UniqueKey"
    ],
    "autoscaling.autoscalinggroup.launchtemplatespecification.launchtemplateid": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplatespecification.launchtemplateid",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.autoscalinggroup.launchtemplatespecification.launchtemplatename": {
        "Maximum": "128",
        "Minimum": "3",
        "Pattern": "[a-zA-Z0-9\\(\\)\\.-/_]+",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplatespecification.launchtemplatename",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.autoscalinggroup.launchtemplatespecification.version": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.launchtemplatespecification.version",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.cfnproperties": [
        "HeartbeatTimeout",
        "RoleARN",
        "LifecycleHookName",
        "NotificationMetadata",
        "DefaultResult",
        "NotificationTargetARN",
        "LifecycleTransition",
        "UniqueKey"
    ],
    "autoscaling.autoscalinggroup.lifecyclehookspecification.defaultresult": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.defaultresult",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.heartbeattimeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.heartbeattimeout",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.lifecyclehookname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[A-Za-z0-9\\-_\\/]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.lifecyclehookname",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.lifecycletransition": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.lifecycletransition",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.notificationmetadata": {
        "Maximum": "1023",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.notificationmetadata",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.notificationtargetarn": {
        "Maximum": "1600",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.notificationtargetarn",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.autoscalinggroup.lifecyclehookspecification.rolearn": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "UniqueKey": "autoscaling.autoscalinggroup.lifecyclehookspecification.rolearn",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.autoscalinggroup.mixedinstancespolicy.cfnproperties": [
        "InstancesDistribution",
        "LaunchTemplate",
        "UniqueKey",
        "SampleValue"
    ],
    "autoscaling.autoscalinggroup.mixedinstancespolicy.instancesdistribution": {
        "Required": "No",
        "Type": "InstancesDistribution",
        "UniqueKey": "autoscaling.autoscalinggroup.mixedinstancespolicy.instancesdistribution",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.autoscalinggroup.mixedinstancespolicy.launchtemplate": {
        "Required": "Yes",
        "Type": "LaunchTemplate",
        "UniqueKey": "autoscaling.autoscalinggroup.mixedinstancespolicy.launchtemplate",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.scalingpolicy.customizedmetricspecification.cfnproperties": [
        "Statistic",
        "Namespace",
        "Dimensions",
        "Unit",
        "MetricName",
        "UniqueKey"
    ],
    "autoscaling.scalingpolicy.customizedmetricspecification.dimensions": {
        "Required": "No",
        "Type": "List of [MetricDimension",
        "UniqueKey": "autoscaling.scalingpolicy.customizedmetricspecification.dimensions",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.scalingpolicy.customizedmetricspecification.metricname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.customizedmetricspecification.metricname",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.scalingpolicy.customizedmetricspecification.namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.customizedmetricspecification.namespace",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.scalingpolicy.customizedmetricspecification.statistic": {
        "Allowed Values": "Average | Maximum | Minimum | SampleCount | Sum",
        "AllowedValues": [
            "Average",
            "Maximum",
            "Minimum",
            "SampleCount",
            "Sum"
        ],
        "Pattern": "^[Average|Maximum|Minimum|SampleCount|Sum]",
        "Required": "Yes",
        "SampleValue": "Average|Maximum|Minimum|SampleCount|Sum",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.customizedmetricspecification.statistic",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.scalingpolicy.customizedmetricspecification.unit": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.customizedmetricspecification.unit",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.scalingpolicy.metricdimension.cfnproperties": [
        "Name",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "autoscaling.scalingpolicy.metricdimension.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.metricdimension.name",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.scalingpolicy.metricdimension.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.metricdimension.value",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.scalingpolicy.predefinedmetricspecification.cfnproperties": [
        "PredefinedMetricType",
        "ResourceLabel",
        "UniqueKey",
        "SampleValue"
    ],
    "autoscaling.scalingpolicy.predefinedmetricspecification.predefinedmetrictype": {
        "Allowed Values": "ALBRequestCountPerTarget | ASGAverageCPUUtilization | ASGAverageNetworkIn | ASGAverageNetworkOut",
        "AllowedValues": [
            "ALBRequestCountPerTarget",
            "ASGAverageCPUUtilization",
            "ASGAverageNetworkIn",
            "ASGAverageNetworkOut"
        ],
        "Pattern": "^[ALBRequestCountPerTarget|ASGAverageCPUUtilization|ASGAverageNetworkIn|ASGAverageNetworkOut]",
        "Required": "Yes",
        "SampleValue": "ALBRequestCountPerTarget|ASGAverageCPUUtilization|ASGAverageNetworkIn|ASGAverageNetworkOut",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.predefinedmetricspecification.predefinedmetrictype",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.scalingpolicy.predefinedmetricspecification.resourcelabel": {
        "Maximum": "1023",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "autoscaling.scalingpolicy.predefinedmetricspecification.resourcelabel",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.scalingpolicy.stepadjustments.cfnproperties": [
        "ScalingAdjustment",
        "MetricIntervalLowerBound",
        "MetricIntervalUpperBound",
        "UniqueKey"
    ],
    "autoscaling.scalingpolicy.stepadjustments.metricintervallowerbound": {
        "Required": "Conditional",
        "Type": "Double",
        "UniqueKey": "autoscaling.scalingpolicy.stepadjustments.metricintervallowerbound",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.scalingpolicy.stepadjustments.metricintervalupperbound": {
        "Required": "Conditional",
        "Type": "Double",
        "UniqueKey": "autoscaling.scalingpolicy.stepadjustments.metricintervalupperbound",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.scalingpolicy.stepadjustments.scalingadjustment": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "autoscaling.scalingpolicy.stepadjustments.scalingadjustment",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.scalingpolicy.targettrackingconfiguration.cfnproperties": [
        "TargetValue",
        "PredefinedMetricSpecification",
        "DisableScaleIn",
        "CustomizedMetricSpecification",
        "UniqueKey"
    ],
    "autoscaling.scalingpolicy.targettrackingconfiguration.customizedmetricspecification": {
        "Required": "Conditional",
        "Type": "CustomizedMetricSpecification",
        "UniqueKey": "autoscaling.scalingpolicy.targettrackingconfiguration.customizedmetricspecification",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.scalingpolicy.targettrackingconfiguration.disablescalein": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "autoscaling.scalingpolicy.targettrackingconfiguration.disablescalein",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.scalingpolicy.targettrackingconfiguration.predefinedmetricspecification": {
        "Required": "Conditional",
        "Type": "PredefinedMetricSpecification",
        "UniqueKey": "autoscaling.scalingpolicy.targettrackingconfiguration.predefinedmetricspecification",
        "UpdateRequires": "No interruption"
    },
    "autoscaling.scalingpolicy.targettrackingconfiguration.targetvalue": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "autoscaling.scalingpolicy.targettrackingconfiguration.targetvalue",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.applicationsource.cfnproperties": [
        "CloudFormationStackARN",
        "TagFilters",
        "UniqueKey",
        "SampleValue"
    ],
    "autoscalingplans.scalingplan.applicationsource.cloudformationstackarn": {
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.applicationsource.cloudformationstackarn",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.applicationsource.tagfilters": {
        "Required": "No",
        "Type": "List of [TagFilter",
        "UniqueKey": "autoscalingplans.scalingplan.applicationsource.tagfilters",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.customizedloadmetricspecification.cfnproperties": [
        "Statistic",
        "Namespace",
        "Dimensions",
        "Unit",
        "MetricName",
        "UniqueKey"
    ],
    "autoscalingplans.scalingplan.customizedloadmetricspecification.dimensions": {
        "Required": "No",
        "Type": "List of [MetricDimension",
        "UniqueKey": "autoscalingplans.scalingplan.customizedloadmetricspecification.dimensions",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.customizedloadmetricspecification.metricname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedloadmetricspecification.metricname",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.customizedloadmetricspecification.namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedloadmetricspecification.namespace",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.customizedloadmetricspecification.statistic": {
        "Allowed Values": "Sum",
        "AllowedValues": [
            "Sum"
        ],
        "Pattern": "^[Sum]",
        "Required": "Yes",
        "SampleValue": "Sum",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedloadmetricspecification.statistic",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.customizedloadmetricspecification.unit": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedloadmetricspecification.unit",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.customizedscalingmetricspecification.cfnproperties": [
        "Statistic",
        "Namespace",
        "Dimensions",
        "Unit",
        "MetricName",
        "UniqueKey"
    ],
    "autoscalingplans.scalingplan.customizedscalingmetricspecification.dimensions": {
        "Required": "No",
        "Type": "List of [MetricDimension",
        "UniqueKey": "autoscalingplans.scalingplan.customizedscalingmetricspecification.dimensions",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.customizedscalingmetricspecification.metricname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedscalingmetricspecification.metricname",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.customizedscalingmetricspecification.namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedscalingmetricspecification.namespace",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.customizedscalingmetricspecification.statistic": {
        "Allowed Values": "Average | Maximum | Minimum | SampleCount | Sum",
        "AllowedValues": [
            "Average",
            "Maximum",
            "Minimum",
            "SampleCount",
            "Sum"
        ],
        "Pattern": "^[Average|Maximum|Minimum|SampleCount|Sum]",
        "Required": "Yes",
        "SampleValue": "Average|Maximum|Minimum|SampleCount|Sum",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedscalingmetricspecification.statistic",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.customizedscalingmetricspecification.unit": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.customizedscalingmetricspecification.unit",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.metricdimension.cfnproperties": [
        "Name",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "autoscalingplans.scalingplan.metricdimension.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.metricdimension.name",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.metricdimension.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.metricdimension.value",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.predefinedloadmetricspecification.cfnproperties": [
        "ResourceLabel",
        "PredefinedLoadMetricType",
        "UniqueKey",
        "SampleValue"
    ],
    "autoscalingplans.scalingplan.predefinedloadmetricspecification.predefinedloadmetrictype": {
        "Allowed Values": "ALBTargetGroupRequestCount | ASGTotalCPUUtilization | ASGTotalNetworkIn | ASGTotalNetworkOut",
        "AllowedValues": [
            "ALBTargetGroupRequestCount",
            "ASGTotalCPUUtilization",
            "ASGTotalNetworkIn",
            "ASGTotalNetworkOut"
        ],
        "Pattern": "^[ALBTargetGroupRequestCount|ASGTotalCPUUtilization|ASGTotalNetworkIn|ASGTotalNetworkOut]",
        "Required": "Yes",
        "SampleValue": "ALBTargetGroupRequestCount|ASGTotalCPUUtilization|ASGTotalNetworkIn|ASGTotalNetworkOut",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.predefinedloadmetricspecification.predefinedloadmetrictype",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.predefinedloadmetricspecification.resourcelabel": {
        "Maximum": "1023",
        "Minimum": "1",
        "Pattern": "^.{1,1023}$",
        "Required": "Conditional",
        "SampleValue": "TODO-autoscalingplans.scalingplan.predefinedloadmetricspecification.resourcelabel",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.predefinedloadmetricspecification.resourcelabel",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.predefinedscalingmetricspecification.cfnproperties": [
        "PredefinedScalingMetricType",
        "ResourceLabel",
        "UniqueKey",
        "SampleValue"
    ],
    "autoscalingplans.scalingplan.predefinedscalingmetricspecification.predefinedscalingmetrictype": {
        "Allowed Values": "ALBRequestCountPerTarget | ASGAverageCPUUtilization | ASGAverageNetworkIn | ASGAverageNetworkOut | DynamoDBReadCapacityUtilization | DynamoDBWriteCapacityUtilization | EC2SpotFleetRequestAverageCPUUtilization | EC2SpotFleetRequestAverageNetworkIn | EC2SpotFleetRequestAverageNetworkOut | ECSServiceAverageCPUUtilization | ECSServiceAverageMemoryUtilization | RDSReaderAverageCPUUtilization | RDSReaderAverageDatabaseConnections",
        "AllowedValues": [
            "ALBRequestCountPerTarget",
            "ASGAverageCPUUtilization",
            "ASGAverageNetworkIn",
            "ASGAverageNetworkOut",
            "DynamoDBReadCapacityUtilization",
            "DynamoDBWriteCapacityUtilization",
            "EC2SpotFleetRequestAverageCPUUtilization",
            "EC2SpotFleetRequestAverageNetworkIn",
            "EC2SpotFleetRequestAverageNetworkOut",
            "ECSServiceAverageCPUUtilization",
            "ECSServiceAverageMemoryUtilization",
            "RDSReaderAverageCPUUtilization",
            "RDSReaderAverageDatabaseConnections"
        ],
        "Pattern": "^[ALBRequestCountPerTarget|ASGAverageCPUUtilization|ASGAverageNetworkIn|ASGAverageNetworkOut|DynamoDBReadCapacityUtilization|DynamoDBWriteCapacityUtilization|EC2SpotFleetRequestAverageCPUUtilization|EC2SpotFleetRequestAverageNetworkIn|EC2SpotFleetRequestAverageNetworkOut|ECSServiceAverageCPUUtilization|ECSServiceAverageMemoryUtilization|RDSReaderAverageCPUUtilization|RDSReaderAverageDatabaseConnections]",
        "Required": "Yes",
        "SampleValue": "ALBRequestCountPerTarget|ASGAverageCPUUtilization|ASGAverageNetworkIn|ASGAverageNetworkOut|DynamoDBReadCapacityUtilization|DynamoDBWriteCapacityUtilization|EC2SpotFleetRequestAverageCPUUtilization|EC2SpotFleetRequestAverageNetworkIn|EC2SpotFleetRequestAverageNetworkOut|ECSServiceAverageCPUUtilization|ECSServiceAverageMemoryUtilization|RDSReaderAverageCPUUtilization|RDSReaderAverageDatabaseConnections",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.predefinedscalingmetricspecification.predefinedscalingmetrictype",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.predefinedscalingmetricspecification.resourcelabel": {
        "Maximum": "1023",
        "Minimum": "1",
        "Pattern": "^.{1,1023}$",
        "Required": "Conditional",
        "SampleValue": "TODO-autoscalingplans.scalingplan.predefinedscalingmetricspecification.resourcelabel",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.predefinedscalingmetricspecification.resourcelabel",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.scalinginstruction.cfnproperties": [
        "ScalingPolicyUpdateBehavior",
        "PredictiveScalingMode",
        "ScheduledActionBufferTime",
        "TargetTrackingConfigurations",
        "PredictiveScalingMaxCapacityBehavior",
        "PredictiveScalingMaxCapacityBuffer",
        "ResourceId",
        "DisableDynamicScaling",
        "ScalableDimension",
        "CustomizedLoadMetricSpecification",
        "PredefinedLoadMetricSpecification",
        "MinCapacity",
        "ServiceNamespace",
        "MaxCapacity",
        "UniqueKey"
    ],
    "autoscalingplans.scalingplan.scalinginstruction.customizedloadmetricspecification": {
        "Required": "Conditional",
        "SampleValue": "TODO-customizedloadmetricspecification",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.customizedloadmetricspecification",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.scalinginstruction.disabledynamicscaling": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.disabledynamicscaling",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.scalinginstruction.maxcapacity": {
        "Required": "Yes",
        "SampleValue": "TODO-maxcapacity",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.maxcapacity",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.scalinginstruction.mincapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.mincapacity",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.scalinginstruction.predefinedloadmetricspecification": {
        "Required": "Conditional",
        "SampleValue": "TODO-predefinedloadmetricspecification",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.predefinedloadmetricspecification",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.scalinginstruction.predictivescalingmaxcapacitybehavior": {
        "Allowed Values": "SetForecastCapacityToMaxCapacity | SetMaxCapacityAboveForecastCapacity | SetMaxCapacityToForecastCapacity",
        "AllowedValues": [
            "SetForecastCapacityToMaxCapacity",
            "SetMaxCapacityAboveForecastCapacity",
            "SetMaxCapacityToForecastCapacity"
        ],
        "Pattern": "^[SetForecastCapacityToMaxCapacity|SetMaxCapacityAboveForecastCapacity|SetMaxCapacityToForecastCapacity]",
        "Required": "No",
        "SampleValue": "SetForecastCapacityToMaxCapacity|SetMaxCapacityAboveForecastCapacity|SetMaxCapacityToForecastCapacity",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.predictivescalingmaxcapacitybehavior",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.scalinginstruction.predictivescalingmaxcapacitybuffer": {
        "Required": "Conditional",
        "SampleValue": "TODO-predictivescalingmaxcapacitybuffer",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.predictivescalingmaxcapacitybuffer",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.scalinginstruction.predictivescalingmode": {
        "Allowed Values": "ForecastAndScale | ForecastOnly",
        "AllowedValues": [
            "ForecastAndScale",
            "ForecastOnly"
        ],
        "Pattern": "^[ForecastAndScale|ForecastOnly]",
        "Required": "No",
        "SampleValue": "ForecastAndScale|ForecastOnly",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.predictivescalingmode",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.scalinginstruction.resourceid": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.resourceid",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.scalinginstruction.scalabledimension": {
        "Allowed Values": "autoscaling:autoScalingGroup:DesiredCapacity | dynamodb:index:ReadCapacityUnits | dynamodb:index:WriteCapacityUnits | dynamodb:table:ReadCapacityUnits | dynamodb:table:WriteCapacityUnits | ec2:spot-fleet-request:TargetCapacity | ecs:service:DesiredCount | rds:cluster:ReadReplicaCount",
        "AllowedValues": [
            "autoscaling:autoScalingGroup:DesiredCapacity",
            "dynamodb:index:ReadCapacityUnits",
            "dynamodb:index:WriteCapacityUnits",
            "dynamodb:table:ReadCapacityUnits",
            "dynamodb:table:WriteCapacityUnits",
            "ec2:spot-fleet-request:TargetCapacity",
            "ecs:service:DesiredCount",
            "rds:cluster:ReadReplicaCount"
        ],
        "Pattern": "^[autoscaling:autoScalingGroup:DesiredCapacity|dynamodb:index:ReadCapacityUnits|dynamodb:index:WriteCapacityUnits|dynamodb:table:ReadCapacityUnits|dynamodb:table:WriteCapacityUnits|ec2:spot-fleet-request:TargetCapacity|ecs:service:DesiredCount|rds:cluster:ReadReplicaCount]",
        "Required": "Yes",
        "SampleValue": "autoscaling:autoScalingGroup:DesiredCapacity|dynamodb:index:ReadCapacityUnits|dynamodb:index:WriteCapacityUnits|dynamodb:table:ReadCapacityUnits|dynamodb:table:WriteCapacityUnits|ec2:spot-fleet-request:TargetCapacity|ecs:service:DesiredCount|rds:cluster:ReadReplicaCount",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.scalabledimension",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.scalinginstruction.scalingpolicyupdatebehavior": {
        "Allowed Values": "KeepExternalPolicies | ReplaceExternalPolicies",
        "AllowedValues": [
            "KeepExternalPolicies",
            "ReplaceExternalPolicies"
        ],
        "Pattern": "^[KeepExternalPolicies|ReplaceExternalPolicies]",
        "Required": "No",
        "SampleValue": "KeepExternalPolicies|ReplaceExternalPolicies",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.scalingpolicyupdatebehavior",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.scalinginstruction.scheduledactionbuffertime": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.scheduledactionbuffertime",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.scalinginstruction.servicenamespace": {
        "Allowed Values": "autoscaling | dynamodb | ec2 | ecs | rds",
        "AllowedValues": [
            "autoscaling",
            "dynamodb",
            "ec2",
            "ecs",
            "rds"
        ],
        "Pattern": "^[autoscaling|dynamodb|ec2|ecs|rds]",
        "Required": "Yes",
        "SampleValue": "autoscaling|dynamodb|ec2|ecs|rds",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.servicenamespace",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.scalinginstruction.targettrackingconfigurations": {
        "Required": "Yes",
        "Type": "List of [TargetTrackingConfiguration",
        "UniqueKey": "autoscalingplans.scalingplan.scalinginstruction.targettrackingconfigurations",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.tagfilter.cfnproperties": [
        "Values",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "autoscalingplans.scalingplan.tagfilter.key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "autoscalingplans.scalingplan.tagfilter.key",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.tagfilter.values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "autoscalingplans.scalingplan.tagfilter.values",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.cfnproperties": [
        "CustomizedScalingMetricSpecification",
        "EstimatedInstanceWarmup",
        "ScaleOutCooldown",
        "DisableScaleIn",
        "PredefinedScalingMetricSpecification",
        "TargetValue",
        "ScaleInCooldown",
        "UniqueKey"
    ],
    "autoscalingplans.scalingplan.targettrackingconfiguration.customizedscalingmetricspecification": {
        "Required": "No",
        "Type": "CustomizedScalingMetricSpecification",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.customizedscalingmetricspecification",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.disablescalein": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.disablescalein",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.estimatedinstancewarmup": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.estimatedinstancewarmup",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.predefinedscalingmetricspecification": {
        "Required": "No",
        "Type": "PredefinedScalingMetricSpecification",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.predefinedscalingmetricspecification",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.scaleincooldown": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.scaleincooldown",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.scaleoutcooldown": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.scaleoutcooldown",
        "UpdateRequires": "No interruption"
    },
    "autoscalingplans.scalingplan.targettrackingconfiguration.targetvalue": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "autoscalingplans.scalingplan.targettrackingconfiguration.targetvalue",
        "UpdateRequires": "No interruption"
    },
    "backup.backupplan.backupplanresourcetype.backupplanname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupplan.backupplanresourcetype.backupplanname",
        "UpdateRequires": "No interruption"
    },
    "backup.backupplan.backupplanresourcetype.backupplanrule": {
        "Required": "Yes",
        "Type": "List of [BackupRuleResourceType",
        "UniqueKey": "backup.backupplan.backupplanresourcetype.backupplanrule",
        "UpdateRequires": "No interruption"
    },
    "backup.backupplan.backupplanresourcetype.cfnproperties": [
        "BackupPlanName",
        "BackupPlanRule",
        "UniqueKey",
        "SampleValue"
    ],
    "backup.backupplan.backupruleresourcetype.cfnproperties": [
        "CompletionWindowMinutes",
        "ScheduleExpression",
        "StartWindowMinutes",
        "RecoveryPointTags",
        "TargetBackupVault",
        "RuleName",
        "Lifecycle",
        "UniqueKey"
    ],
    "backup.backupplan.backupruleresourcetype.completionwindowminutes": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.completionwindowminutes",
        "UpdateRequires": "No interruption"
    },
    "backup.backupplan.backupruleresourcetype.lifecycle": {
        "Required": "No",
        "Type": "LifecycleResourceType",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.lifecycle",
        "UpdateRequires": "No interruption"
    },
    "backup.backupplan.backupruleresourcetype.recoverypointtags": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.recoverypointtags",
        "UpdateRequires": "No interruption"
    },
    "backup.backupplan.backupruleresourcetype.rulename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.rulename",
        "UpdateRequires": "No interruption"
    },
    "backup.backupplan.backupruleresourcetype.scheduleexpression": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.scheduleexpression",
        "UpdateRequires": "No interruption"
    },
    "backup.backupplan.backupruleresourcetype.startwindowminutes": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.startwindowminutes",
        "UpdateRequires": "No interruption"
    },
    "backup.backupplan.backupruleresourcetype.targetbackupvault": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupplan.backupruleresourcetype.targetbackupvault",
        "UpdateRequires": "No interruption"
    },
    "backup.backupplan.lifecycleresourcetype.cfnproperties": [
        "DeleteAfterDays",
        "MoveToColdStorageAfterDays",
        "UniqueKey",
        "SampleValue"
    ],
    "backup.backupplan.lifecycleresourcetype.deleteafterdays": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "backup.backupplan.lifecycleresourcetype.deleteafterdays",
        "UpdateRequires": "No interruption"
    },
    "backup.backupplan.lifecycleresourcetype.movetocoldstorageafterdays": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "backup.backupplan.lifecycleresourcetype.movetocoldstorageafterdays",
        "UpdateRequires": "No interruption"
    },
    "backup.backupselection.backupselectionresourcetype.cfnproperties": [
        "SelectionName",
        "Resources",
        "ListOfTags",
        "IamRoleArn",
        "UniqueKey"
    ],
    "backup.backupselection.backupselectionresourcetype.iamrolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupselection.backupselectionresourcetype.iamrolearn",
        "UpdateRequires": "No interruption"
    },
    "backup.backupselection.backupselectionresourcetype.listoftags": {
        "Required": "No",
        "Type": "List of [ConditionResourceType",
        "UniqueKey": "backup.backupselection.backupselectionresourcetype.listoftags",
        "UpdateRequires": "No interruption"
    },
    "backup.backupselection.backupselectionresourcetype.resources": {
        "Required": "No",
        "SampleValue": "TODO-resources",
        "UniqueKey": "backup.backupselection.backupselectionresourcetype.resources",
        "UpdateRequires": "No interruption"
    },
    "backup.backupselection.backupselectionresourcetype.selectionname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupselection.backupselectionresourcetype.selectionname",
        "UpdateRequires": "No interruption"
    },
    "backup.backupselection.conditionresourcetype.cfnproperties": [
        "ConditionKey",
        "ConditionValue",
        "ConditionType",
        "UniqueKey"
    ],
    "backup.backupselection.conditionresourcetype.conditionkey": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupselection.conditionresourcetype.conditionkey",
        "UpdateRequires": "No interruption"
    },
    "backup.backupselection.conditionresourcetype.conditiontype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupselection.conditionresourcetype.conditiontype",
        "UpdateRequires": "No interruption"
    },
    "backup.backupselection.conditionresourcetype.conditionvalue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupselection.conditionresourcetype.conditionvalue",
        "UpdateRequires": "No interruption"
    },
    "backup.backupvault.notificationobjecttype.backupvaultevents": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "backup.backupvault.notificationobjecttype.backupvaultevents",
        "UpdateRequires": "No interruption"
    },
    "backup.backupvault.notificationobjecttype.cfnproperties": [
        "BackupVaultEvents",
        "SNSTopicArn",
        "UniqueKey",
        "SampleValue"
    ],
    "backup.backupvault.notificationobjecttype.snstopicarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "backup.backupvault.notificationobjecttype.snstopicarn",
        "UpdateRequires": "No interruption"
    },
    "batch.computeenvironment.computeresources.allocationstrategy": {
        "AllowedValues": [
            "BEST_FIT",
            "BEST_FIT_PROGRESSIVE",
            "SPOT_CAPACITY_OPTIMIZED"
        ],
        "Pattern": "^[BEST_FIT|BEST_FIT_PROGRESSIVE|SPOT_CAPACITY_OPTIMIZED]",
        "Required": "No",
        "SampleValue": "BEST_FIT|BEST_FIT_PROGRESSIVE|SPOT_CAPACITY_OPTIMIZED",
        "UniqueKey": "batch.computeenvironment.computeresources.allocationstrategy",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.bidpercentage": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "batch.computeenvironment.computeresources.bidpercentage",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.cfnproperties": [
        "Subnets",
        "Type",
        "PlacementGroup",
        "LaunchTemplate",
        "Tags",
        "DesiredvCpus",
        "MinvCpus",
        "InstanceTypes",
        "ImageId",
        "SpotIamFleetRole",
        "InstanceRole",
        "MaxvCpus",
        "SecurityGroupIds",
        "BidPercentage",
        "Ec2KeyPair",
        "AllocationStrategy",
        "UniqueKey"
    ],
    "batch.computeenvironment.computeresources.desiredvcpus": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "batch.computeenvironment.computeresources.desiredvcpus",
        "UpdateRequires": "No interruption"
    },
    "batch.computeenvironment.computeresources.ec2keypair": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.computeenvironment.computeresources.ec2keypair",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.imageid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.computeenvironment.computeresources.imageid",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.instancerole": {
        "Required": "Yes",
        "SampleValue": "TODO-instancerole",
        "UniqueKey": "batch.computeenvironment.computeresources.instancerole",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.instancetypes": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "batch.computeenvironment.computeresources.instancetypes",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.launchtemplate": {
        "Required": "No",
        "SampleValue": "TODO-launchtemplate",
        "UniqueKey": "batch.computeenvironment.computeresources.launchtemplate",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.maxvcpus": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.computeenvironment.computeresources.maxvcpus",
        "UpdateRequires": "No interruption"
    },
    "batch.computeenvironment.computeresources.minvcpus": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.computeenvironment.computeresources.minvcpus",
        "UpdateRequires": "No interruption"
    },
    "batch.computeenvironment.computeresources.placementgroup": {
        "Required": "No",
        "SampleValue": "TODO-placementgroup",
        "UniqueKey": "batch.computeenvironment.computeresources.placementgroup",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.securitygroupids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "batch.computeenvironment.computeresources.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.spotiamfleetrole": {
        "Required": "No",
        "SampleValue": "TODO-spotiamfleetrole",
        "UniqueKey": "batch.computeenvironment.computeresources.spotiamfleetrole",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.subnets": {
        "Required": "Yes",
        "SampleValue": "TODO-subnets",
        "UniqueKey": "batch.computeenvironment.computeresources.subnets",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.tags": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "batch.computeenvironment.computeresources.tags",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.computeresources.type": {
        "Allowed Values": "EC2 | SPOT",
        "AllowedValues": [
            "EC2",
            "SPOT"
        ],
        "Pattern": "^[EC2|SPOT]",
        "Required": "Yes",
        "SampleValue": "EC2|SPOT",
        "Type": "String",
        "UniqueKey": "batch.computeenvironment.computeresources.type",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.launchtemplatespecification.cfnproperties": [
        "LaunchTemplateName",
        "Version",
        "LaunchTemplateId",
        "UniqueKey"
    ],
    "batch.computeenvironment.launchtemplatespecification.launchtemplateid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.computeenvironment.launchtemplatespecification.launchtemplateid",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.launchtemplatespecification.launchtemplatename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.computeenvironment.launchtemplatespecification.launchtemplatename",
        "UpdateRequires": "Replacement"
    },
    "batch.computeenvironment.launchtemplatespecification.version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.computeenvironment.launchtemplatespecification.version",
        "UpdateRequires": "Replacement"
    },
    "batch.jobdefinition.containerproperties": [
        "MountPoints",
        "Privileged",
        "ReadonlyRootFilesystem",
        "Image",
        "LinuxParameters",
        "Environment",
        "Vcpus",
        "JobRoleArn",
        "User",
        "Volumes",
        "Memory",
        "ResourceRequirements",
        "Command",
        "InstanceType",
        "Ulimits",
        "UniqueKey"
    ],
    "batch.jobdefinition.containerproperties.cfnproperties": [
        "MountPoints",
        "Privileged",
        "ReadonlyRootFilesystem",
        "Image",
        "LinuxParameters",
        "Environment",
        "Vcpus",
        "JobRoleArn",
        "User",
        "Volumes",
        "Memory",
        "ResourceRequirements",
        "Command",
        "InstanceType",
        "Ulimits",
        "UniqueKey"
    ],
    "batch.jobdefinition.containerproperties.command": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "batch.jobdefinition.containerproperties.command",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.containerproperties.environment": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "batch.jobdefinition.containerproperties.environment",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.containerproperties.image": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.containerproperties.image",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.containerproperties.instancetype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.containerproperties.instancetype",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.containerproperties.jobrolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.containerproperties.jobrolearn",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.containerproperties.linuxparameters": {
        "Required": "No",
        "Type": "LinuxParameters",
        "UniqueKey": "batch.jobdefinition.containerproperties.linuxparameters",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.containerproperties.linuxparameters.cfnproperties": [
        "Devices",
        "UniqueKey"
    ],
    "batch.jobdefinition.containerproperties.linuxparameters.devices": {
        "Required": "No",
        "Type": "List of [Device",
        "UniqueKey": "batch.jobdefinition.containerproperties.linuxparameters.devices",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.containerproperties.memory": {
        "Required": "Yes",
        "SampleValue": "TODO-memory",
        "UniqueKey": "batch.jobdefinition.containerproperties.memory",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.containerproperties.mountpoints": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "batch.jobdefinition.containerproperties.mountpoints",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.containerproperties.privileged": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "batch.jobdefinition.containerproperties.privileged",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.containerproperties.readonlyrootfilesystem": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "batch.jobdefinition.containerproperties.readonlyrootfilesystem",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.containerproperties.resourcerequirements": {
        "Required": "No",
        "Type": "List of [ResourceRequirement",
        "UniqueKey": "batch.jobdefinition.containerproperties.resourcerequirements",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.containerproperties.ulimits": {
        "Required": "No",
        "Type": "List of [Ulimit",
        "UniqueKey": "batch.jobdefinition.containerproperties.ulimits",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.containerproperties.user": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.containerproperties.user",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.containerproperties.vcpus": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.containerproperties.vcpus",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.containerproperties.volumes": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "batch.jobdefinition.containerproperties.volumes",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.device.cfnproperties": [
        "HostPath",
        "ContainerPath",
        "Permissions",
        "UniqueKey"
    ],
    "batch.jobdefinition.device.containerpath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.device.containerpath",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.device.hostpath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.device.hostpath",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.device.permissions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "batch.jobdefinition.device.permissions",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.environment.cfnproperties": [
        "Name",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "batch.jobdefinition.environment.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.environment.name",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.environment.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.environment.value",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.mountpoints.cfnproperties": [
        "SourceVolume",
        "ReadOnly",
        "ContainerPath",
        "UniqueKey"
    ],
    "batch.jobdefinition.mountpoints.containerpath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.mountpoints.containerpath",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.mountpoints.readonly": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "batch.jobdefinition.mountpoints.readonly",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.mountpoints.sourcevolume": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.mountpoints.sourcevolume",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.nodeproperties": [
        "NumNodes",
        "NodeRangeProperties",
        "MainNode",
        "UniqueKey"
    ],
    "batch.jobdefinition.nodeproperties.cfnproperties": [
        "NumNodes",
        "NodeRangeProperties",
        "MainNode",
        "UniqueKey"
    ],
    "batch.jobdefinition.nodeproperties.mainnode": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.nodeproperties.mainnode",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.nodeproperties.noderangeproperties": {
        "Required": "Yes",
        "Type": "List of [NodeRangeProperty",
        "UniqueKey": "batch.jobdefinition.nodeproperties.noderangeproperties",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.nodeproperties.numnodes": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.nodeproperties.numnodes",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.noderangeproperty.cfnproperties": [
        "TargetNodes",
        "Container",
        "UniqueKey",
        "SampleValue"
    ],
    "batch.jobdefinition.noderangeproperty.container": {
        "Required": "No",
        "Type": "ContainerProperties",
        "UniqueKey": "batch.jobdefinition.noderangeproperty.container",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.noderangeproperty.targetnodes": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.noderangeproperty.targetnodes",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.resourcerequirement.cfnproperties": [
        "Type",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "batch.jobdefinition.resourcerequirement.type": {
        "Allowed Values": "GPU",
        "AllowedValues": [
            "GPU"
        ],
        "Pattern": "^[GPU]",
        "Required": "No",
        "SampleValue": "GPU",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.resourcerequirement.type",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.resourcerequirement.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.resourcerequirement.value",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.retrystrategy.attempts": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.retrystrategy.attempts",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.retrystrategy.cfnproperties": [
        "Attempts",
        "UniqueKey"
    ],
    "batch.jobdefinition.timeout.attemptdurationseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.timeout.attemptdurationseconds",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.timeout.cfnproperties": [
        "AttemptDurationSeconds",
        "UniqueKey"
    ],
    "batch.jobdefinition.ulimit.cfnproperties": [
        "SoftLimit",
        "HardLimit",
        "Name",
        "UniqueKey"
    ],
    "batch.jobdefinition.ulimit.hardlimit": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.ulimit.hardlimit",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.ulimit.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.ulimit.name",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.ulimit.softlimit": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.jobdefinition.ulimit.softlimit",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.volumes.cfnproperties": [
        "Host",
        "Name",
        "UniqueKey",
        "SampleValue"
    ],
    "batch.jobdefinition.volumes.host": {
        "Required": "No",
        "Type": "VolumesHost",
        "UniqueKey": "batch.jobdefinition.volumes.host",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.volumes.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.volumes.name",
        "UpdateRequires": "No interruption"
    },
    "batch.jobdefinition.volumeshost.cfnproperties": [
        "SourcePath",
        "UniqueKey"
    ],
    "batch.jobdefinition.volumeshost.sourcepath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "batch.jobdefinition.volumeshost.sourcepath",
        "UpdateRequires": "No interruption"
    },
    "batch.jobqueue.computeenvironmentorder.cfnproperties": [
        "ComputeEnvironment",
        "Order",
        "UniqueKey",
        "SampleValue"
    ],
    "batch.jobqueue.computeenvironmentorder.computeenvironment": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "batch.jobqueue.computeenvironmentorder.computeenvironment",
        "UpdateRequires": "No interruption"
    },
    "batch.jobqueue.computeenvironmentorder.order": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "batch.jobqueue.computeenvironmentorder.order",
        "UpdateRequires": "No interruption"
    },
    "beanstalk.applicationname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "No",
        "SampleValue": "TODO-beanstalk.applicationname",
        "Type": "String",
        "UniqueKey": "beanstalk.applicationname",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.cfnproperties": [
        "ApplicationName",
        "Description",
        "ResourceLifecycleConfig",
        "UniqueKey"
    ],
    "beanstalk.description": {
        "Maximum": "200",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "beanstalk.description",
        "UpdateRequires": "No interruption"
    },
    "beanstalk.environment.applicationname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "Yes",
        "SampleValue": "TODO-beanstalk.environment.applicationname",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.applicationname",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.cfnproperties": [
        "ApplicationName",
        "PlatformArn",
        "VersionLabel",
        "Description",
        "EnvironmentName",
        "CNAMEPrefix",
        "Tags",
        "SolutionStackName",
        "OptionSettings",
        "Tier",
        "TemplateName",
        "UniqueKey"
    ],
    "beanstalk.environment.cnameprefix": {
        "Maximum": "63",
        "Minimum": "4",
        "Pattern": "^.{4,63}$",
        "Required": "No",
        "SampleValue": "TODO-beanstalk.environment.cnameprefix",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.cnameprefix",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.description": {
        "Maximum": "200",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.description",
        "UpdateRequires": "No interruption"
    },
    "beanstalk.environment.environmentname": {
        "Maximum": "40",
        "Minimum": "4",
        "Pattern": "^.{4,40}$",
        "Required": "No",
        "SampleValue": "TODO-beanstalk.environment.environmentname",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.environmentname",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.optionsettings": {
        "Required": "No",
        "Type": "List of [OptionSetting",
        "UniqueKey": "beanstalk.environment.optionsettings",
        "UpdateRequires": "No interruption"
    },
    "beanstalk.environment.platformarn": {
        "Required": "No",
        "SampleValue": "TODO-platformarn",
        "UniqueKey": "beanstalk.environment.platformarn",
        "UpdateRequires": "No interruption"
    },
    "beanstalk.environment.solutionstackname": {
        "Required": "No",
        "SampleValue": "TODO-solutionstackname",
        "UniqueKey": "beanstalk.environment.solutionstackname",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "beanstalk.environment.tags",
        "UpdateRequires": "No interruption"
    },
    "beanstalk.environment.templatename": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "No",
        "SampleValue": "TODO-beanstalk.environment.templatename",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.templatename",
        "UpdateRequires": "No interruption"
    },
    "beanstalk.environment.tier": {
        "Required": "No",
        "Type": "Tier",
        "UniqueKey": "beanstalk.environment.tier",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.tier.cfnproperties": [
        "Version",
        "Type",
        "Name",
        "UniqueKey"
    ],
    "beanstalk.environment.tier.name": {
        "Required": "No",
        "SampleValue": "TODO-name",
        "UniqueKey": "beanstalk.environment.tier.name",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.tier.type": {
        "Required": "No",
        "SampleValue": "TODO-type",
        "UniqueKey": "beanstalk.environment.tier.type",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.environment.tier.version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.tier.version",
        "UpdateRequires": "No interruption"
    },
    "beanstalk.environment.versionlabel": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "No",
        "SampleValue": "TODO-beanstalk.environment.versionlabel",
        "Type": "String",
        "UniqueKey": "beanstalk.environment.versionlabel",
        "UpdateRequires": "No interruption"
    },
    "beanstalk.option.settings.cfnproperties": [
        "OptionName",
        "Namespace",
        "Value",
        "ResourceName",
        "UniqueKey"
    ],
    "beanstalk.option.settings.namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "beanstalk.option.settings.namespace",
        "UpdateRequires": "No interruption"
    },
    "beanstalk.option.settings.optionname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "beanstalk.option.settings.optionname",
        "UpdateRequires": "No interruption"
    },
    "beanstalk.option.settings.resourcename": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-beanstalk.option.settings.resourcename",
        "Type": "String",
        "UniqueKey": "beanstalk.option.settings.resourcename",
        "UpdateRequires": "No interruption"
    },
    "beanstalk.option.settings.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "beanstalk.option.settings.value",
        "UpdateRequires": "No interruption"
    },
    "beanstalk.resourcelifecycleconfig": {
        "Required": "No",
        "Type": "ApplicationResourceLifecycleConfig",
        "UniqueKey": "beanstalk.resourcelifecycleconfig",
        "UpdateRequires": "No interruption"
    },
    "beanstalk.sourcebundle.cfnproperties": [
        "S3Bucket",
        "S3Key",
        "UniqueKey",
        "SampleValue"
    ],
    "beanstalk.sourcebundle.s3bucket": {
        "Maximum": "255",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "beanstalk.sourcebundle.s3bucket",
        "UpdateRequires": "No interruption"
    },
    "beanstalk.sourcebundle.s3key": {
        "Maximum": "1024",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "beanstalk.sourcebundle.s3key",
        "UpdateRequires": "No interruption"
    },
    "beanstalk.version.applicationname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "Yes",
        "SampleValue": "TODO-beanstalk.version.applicationname",
        "Type": "String",
        "UniqueKey": "beanstalk.version.applicationname",
        "UpdateRequires": "Replacement"
    },
    "beanstalk.version.cfnproperties": [
        "ApplicationName",
        "SourceBundle",
        "Description",
        "UniqueKey"
    ],
    "beanstalk.version.description": {
        "Maximum": "200",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "beanstalk.version.description",
        "UpdateRequires": "No interruption"
    },
    "beanstalk.version.sourcebundle": {
        "Required": "Yes",
        "Type": "SourceBundle",
        "UniqueKey": "beanstalk.version.sourcebundle",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.budgetdata.budgetlimit": {
        "Required": "No",
        "Type": "Spend",
        "UniqueKey": "budgets.budget.budgetdata.budgetlimit",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.budgetdata.budgetname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "budgets.budget.budgetdata.budgetname",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.budgetdata.budgettype": {
        "Allowed Values": "COST | RI_COVERAGE | RI_UTILIZATION | SAVINGS_PLANS_COVERAGE | SAVINGS_PLANS_UTILIZATION | USAGE",
        "AllowedValues": [
            "COST",
            "RI_COVERAGE",
            "RI_UTILIZATION",
            "SAVINGS_PLANS_COVERAGE",
            "SAVINGS_PLANS_UTILIZATION",
            "USAGE"
        ],
        "Pattern": "^[COST|RI_COVERAGE|RI_UTILIZATION|SAVINGS_PLANS_COVERAGE|SAVINGS_PLANS_UTILIZATION|USAGE]",
        "Required": "Yes",
        "SampleValue": "COST|RI_COVERAGE|RI_UTILIZATION|SAVINGS_PLANS_COVERAGE|SAVINGS_PLANS_UTILIZATION|USAGE",
        "Type": "String",
        "UniqueKey": "budgets.budget.budgetdata.budgettype",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.budgetdata.cfnproperties": [
        "BudgetType",
        "PlannedBudgetLimits",
        "BudgetLimit",
        "BudgetName",
        "CostTypes",
        "TimeUnit",
        "TimePeriod",
        "CostFilters",
        "UniqueKey"
    ],
    "budgets.budget.budgetdata.costfilters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "budgets.budget.budgetdata.costfilters",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.budgetdata.costtypes": {
        "Required": "No",
        "Type": "CostTypes",
        "UniqueKey": "budgets.budget.budgetdata.costtypes",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.budgetdata.plannedbudgetlimits": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "budgets.budget.budgetdata.plannedbudgetlimits",
        "UpdateRequires": "Replacement"
    },
    "budgets.budget.budgetdata.timeperiod": {
        "Required": "No",
        "Type": "TimePeriod",
        "UniqueKey": "budgets.budget.budgetdata.timeperiod",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.budgetdata.timeunit": {
        "Allowed Values": "ANNUALLY | DAILY | MONTHLY | QUARTERLY",
        "AllowedValues": [
            "ANNUALLY",
            "DAILY",
            "MONTHLY",
            "QUARTERLY"
        ],
        "Pattern": "^[ANNUALLY|DAILY|MONTHLY|QUARTERLY]",
        "Required": "Yes",
        "SampleValue": "ANNUALLY|DAILY|MONTHLY|QUARTERLY",
        "Type": "String",
        "UniqueKey": "budgets.budget.budgetdata.timeunit",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.costtypes.cfnproperties": [
        "IncludeOtherSubscription",
        "IncludeDiscount",
        "UseBlended",
        "IncludeRefund",
        "IncludeSupport",
        "IncludeUpfront",
        "UseAmortized",
        "IncludeTax",
        "IncludeCredit",
        "IncludeRecurring",
        "IncludeSubscription",
        "UniqueKey"
    ],
    "budgets.budget.costtypes.includecredit": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.includecredit",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.costtypes.includediscount": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.includediscount",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.costtypes.includeothersubscription": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.includeothersubscription",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.costtypes.includerecurring": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.includerecurring",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.costtypes.includerefund": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.includerefund",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.costtypes.includesubscription": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.includesubscription",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.costtypes.includesupport": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.includesupport",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.costtypes.includetax": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.includetax",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.costtypes.includeupfront": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.includeupfront",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.costtypes.useamortized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.useamortized",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.costtypes.useblended": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "budgets.budget.costtypes.useblended",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.notification.cfnproperties": [
        "Threshold",
        "ComparisonOperator",
        "ThresholdType",
        "NotificationType",
        "UniqueKey"
    ],
    "budgets.budget.notification.comparisonoperator": {
        "Allowed Values": "EQUAL_TO | GREATER_THAN | LESS_THAN",
        "AllowedValues": [
            "EQUAL_TO",
            "GREATER_THAN",
            "LESS_THAN"
        ],
        "Pattern": "^[EQUAL_TO|GREATER_THAN|LESS_THAN]",
        "Required": "Yes",
        "SampleValue": "EQUAL_TO|GREATER_THAN|LESS_THAN",
        "Type": "String",
        "UniqueKey": "budgets.budget.notification.comparisonoperator",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.notification.notificationtype": {
        "Allowed Values": "ACTUAL | FORECASTED",
        "AllowedValues": [
            "ACTUAL",
            "FORECASTED"
        ],
        "Pattern": "^[ACTUAL|FORECASTED]",
        "Required": "Yes",
        "SampleValue": "ACTUAL|FORECASTED",
        "Type": "String",
        "UniqueKey": "budgets.budget.notification.notificationtype",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.notification.threshold": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "budgets.budget.notification.threshold",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.notification.thresholdtype": {
        "Allowed Values": "ABSOLUTE_VALUE | PERCENTAGE",
        "AllowedValues": [
            "ABSOLUTE_VALUE",
            "PERCENTAGE"
        ],
        "Pattern": "^[ABSOLUTE_VALUE|PERCENTAGE]",
        "Required": "No",
        "SampleValue": "ABSOLUTE_VALUE|PERCENTAGE",
        "Type": "String",
        "UniqueKey": "budgets.budget.notification.thresholdtype",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.notificationwithsubscribers.cfnproperties": [
        "Notification",
        "Subscribers",
        "UniqueKey",
        "SampleValue"
    ],
    "budgets.budget.notificationwithsubscribers.notification": {
        "Required": "Yes",
        "Type": "Notification",
        "UniqueKey": "budgets.budget.notificationwithsubscribers.notification",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.notificationwithsubscribers.subscribers": {
        "Maximum": "11",
        "Required": "Yes",
        "Type": "List of [Subscriber",
        "UniqueKey": "budgets.budget.notificationwithsubscribers.subscribers",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.spend.amount": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "budgets.budget.spend.amount",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.spend.cfnproperties": [
        "Amount",
        "Unit",
        "UniqueKey",
        "SampleValue"
    ],
    "budgets.budget.spend.unit": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "budgets.budget.spend.unit",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.subscriber.address": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "budgets.budget.subscriber.address",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.subscriber.cfnproperties": [
        "SubscriptionType",
        "Address",
        "UniqueKey",
        "SampleValue"
    ],
    "budgets.budget.subscriber.subscriptiontype": {
        "Allowed Values": "EMAIL | SNS",
        "AllowedValues": [
            "EMAIL",
            "SNS"
        ],
        "Pattern": "^[EMAIL|SNS]",
        "Required": "Yes",
        "SampleValue": "EMAIL|SNS",
        "Type": "String",
        "UniqueKey": "budgets.budget.subscriber.subscriptiontype",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.timeperiod.cfnproperties": [
        "Start",
        "End",
        "UniqueKey",
        "SampleValue"
    ],
    "budgets.budget.timeperiod.end": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "budgets.budget.timeperiod.end",
        "UpdateRequires": "No interruption"
    },
    "budgets.budget.timeperiod.start": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "budgets.budget.timeperiod.start",
        "UpdateRequires": "No interruption"
    },
    "certificatemanager.certificate.domainvalidationoption.cfnproperties": [
        "ValidationDomain",
        "DomainName",
        "UniqueKey",
        "SampleValue"
    ],
    "certificatemanager.certificate.domainvalidationoption.domainname": {
        "Maximum": "253",
        "Minimum": "1",
        "Pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "certificatemanager.certificate.domainvalidationoption.domainname",
        "UpdateRequires": "No interruption"
    },
    "certificatemanager.certificate.domainvalidationoption.validationdomain": {
        "Maximum": "253",
        "Minimum": "1",
        "Pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "certificatemanager.certificate.domainvalidationoption.validationdomain",
        "UpdateRequires": "No interruption"
    },
    "cloud9.environmentec2.repository.cfnproperties": [
        "RepositoryUrl",
        "PathComponent",
        "UniqueKey",
        "SampleValue"
    ],
    "cloud9.environmentec2.repository.pathcomponent": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloud9.environmentec2.repository.pathcomponent",
        "UpdateRequires": "No interruption"
    },
    "cloud9.environmentec2.repository.repositoryurl": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloud9.environmentec2.repository.repositoryurl",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.cloudfrontoriginaccessidentity.cloudfrontoriginaccessidentityconfig.cfnproperties": [
        "Comment",
        "UniqueKey"
    ],
    "cloudfront.cloudfrontoriginaccessidentity.cloudfrontoriginaccessidentityconfig.comment": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.cloudfrontoriginaccessidentity.cloudfrontoriginaccessidentityconfig.comment",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.cachebehavior.allowedmethods": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.distribution.cachebehavior.allowedmethods",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.cachebehavior.cachedmethods": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.distribution.cachebehavior.cachedmethods",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.cachebehavior.cfnproperties": [
        "ViewerProtocolPolicy",
        "TrustedSigners",
        "SmoothStreaming",
        "TargetOriginId",
        "Compress",
        "FieldLevelEncryptionId",
        "ForwardedValues",
        "MaxTTL",
        "PathPattern",
        "LambdaFunctionAssociations",
        "CachedMethods",
        "DefaultTTL",
        "AllowedMethods",
        "MinTTL",
        "UniqueKey"
    ],
    "cloudfront.distribution.cachebehavior.compress": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "cloudfront.distribution.cachebehavior.compress",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.cachebehavior.defaultttl": {
        "Required": "No",
        "SampleValue": "TODO-defaultttl",
        "UniqueKey": "cloudfront.distribution.cachebehavior.defaultttl",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.cachebehavior.fieldlevelencryptionid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.cachebehavior.fieldlevelencryptionid",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.cachebehavior.forwardedvalues": {
        "Required": "Yes",
        "Type": "ForwardedValues",
        "UniqueKey": "cloudfront.distribution.cachebehavior.forwardedvalues",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.cachebehavior.lambdafunctionassociations": {
        "Required": "No",
        "Type": "List of [LambdaFunctionAssociation",
        "UniqueKey": "cloudfront.distribution.cachebehavior.lambdafunctionassociations",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.cachebehavior.maxttl": {
        "Required": "No",
        "SampleValue": "TODO-maxttl",
        "UniqueKey": "cloudfront.distribution.cachebehavior.maxttl",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.cachebehavior.minttl": {
        "Required": "No",
        "SampleValue": "TODO-minttl",
        "UniqueKey": "cloudfront.distribution.cachebehavior.minttl",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.cachebehavior.pathpattern": {
        "Required": "Yes",
        "SampleValue": "TODO-pathpattern",
        "UniqueKey": "cloudfront.distribution.cachebehavior.pathpattern",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.cachebehavior.smoothstreaming": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.distribution.cachebehavior.smoothstreaming",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.cachebehavior.targetoriginid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.cachebehavior.targetoriginid",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.cachebehavior.trustedsigners": {
        "Required": "No",
        "SampleValue": "TODO-trustedsigners",
        "UniqueKey": "cloudfront.distribution.cachebehavior.trustedsigners",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.cachebehavior.viewerprotocolpolicy": {
        "AllowedValues": [
            "allow-all",
            "https-only",
            "redirect-to-https"
        ],
        "Pattern": "^[allow-all|https-only|redirect-to-https]",
        "Required": "Yes",
        "SampleValue": "allow-all|https-only|redirect-to-https",
        "UniqueKey": "cloudfront.distribution.cachebehavior.viewerprotocolpolicy",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.cookies.cfnproperties": [
        "Forward",
        "WhitelistedNames",
        "UniqueKey",
        "SampleValue"
    ],
    "cloudfront.distribution.cookies.forward": {
        "Allowed Values": "all | none | whitelist",
        "AllowedValues": [
            "all",
            "none",
            "whitelist"
        ],
        "Pattern": "^[all|none|whitelist]",
        "Required": "Yes",
        "SampleValue": "all|none|whitelist",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.cookies.forward",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.cookies.whitelistednames": {
        "Required": "Conditional",
        "SampleValue": "TODO-whitelistednames",
        "UniqueKey": "cloudfront.distribution.cookies.whitelistednames",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.customerrorresponse.cfnproperties": [
        "ErrorCode",
        "ResponsePagePath",
        "ResponseCode",
        "ErrorCachingMinTTL",
        "UniqueKey"
    ],
    "cloudfront.distribution.customerrorresponse.errorcachingminttl": {
        "Required": "No",
        "SampleValue": "TODO-errorcachingminttl",
        "UniqueKey": "cloudfront.distribution.customerrorresponse.errorcachingminttl",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.customerrorresponse.errorcode": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "cloudfront.distribution.customerrorresponse.errorcode",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.customerrorresponse.responsecode": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "cloudfront.distribution.customerrorresponse.responsecode",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.customerrorresponse.responsepagepath": {
        "Required": "Conditional",
        "SampleValue": "TODO-responsepagepath",
        "UniqueKey": "cloudfront.distribution.customerrorresponse.responsepagepath",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.customoriginconfig.cfnproperties": [
        "OriginSSLProtocols",
        "OriginProtocolPolicy",
        "OriginReadTimeout",
        "HTTPPort",
        "HTTPSPort",
        "OriginKeepaliveTimeout",
        "UniqueKey"
    ],
    "cloudfront.distribution.customoriginconfig.httpport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "cloudfront.distribution.customoriginconfig.httpport",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.customoriginconfig.httpsport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "cloudfront.distribution.customoriginconfig.httpsport",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.customoriginconfig.originkeepalivetimeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "cloudfront.distribution.customoriginconfig.originkeepalivetimeout",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.customoriginconfig.originprotocolpolicy": {
        "Allowed Values": "http-only | https-only | match-viewer",
        "AllowedValues": [
            "http-only",
            "https-only",
            "match-viewer"
        ],
        "Pattern": "^[http-only|https-only|match-viewer]",
        "Required": "Yes",
        "SampleValue": "http-only|https-only|match-viewer",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.customoriginconfig.originprotocolpolicy",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.customoriginconfig.originreadtimeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "cloudfront.distribution.customoriginconfig.originreadtimeout",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.customoriginconfig.originsslprotocols": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.distribution.customoriginconfig.originsslprotocols",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.defaultcachebehavior.allowedmethods": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.allowedmethods",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.defaultcachebehavior.cachedmethods": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.cachedmethods",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.defaultcachebehavior.cfnproperties": [
        "ViewerProtocolPolicy",
        "TrustedSigners",
        "SmoothStreaming",
        "TargetOriginId",
        "Compress",
        "FieldLevelEncryptionId",
        "ForwardedValues",
        "MaxTTL",
        "LambdaFunctionAssociations",
        "CachedMethods",
        "DefaultTTL",
        "AllowedMethods",
        "MinTTL",
        "UniqueKey"
    ],
    "cloudfront.distribution.defaultcachebehavior.compress": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.compress",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.defaultcachebehavior.defaultttl": {
        "Required": "No",
        "SampleValue": "TODO-defaultttl",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.defaultttl",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.defaultcachebehavior.fieldlevelencryptionid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.fieldlevelencryptionid",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.defaultcachebehavior.forwardedvalues": {
        "Required": "Yes",
        "Type": "ForwardedValues",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.forwardedvalues",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.defaultcachebehavior.lambdafunctionassociations": {
        "Required": "No",
        "Type": "List of [LambdaFunctionAssociation",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.lambdafunctionassociations",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.defaultcachebehavior.maxttl": {
        "Required": "No",
        "SampleValue": "TODO-maxttl",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.maxttl",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.defaultcachebehavior.minttl": {
        "Required": "No",
        "SampleValue": "TODO-minttl",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.minttl",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.defaultcachebehavior.smoothstreaming": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.smoothstreaming",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.defaultcachebehavior.targetoriginid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.targetoriginid",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.defaultcachebehavior.trustedsigners": {
        "Required": "No",
        "SampleValue": "TODO-trustedsigners",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.trustedsigners",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.defaultcachebehavior.viewerprotocolpolicy": {
        "AllowedValues": [
            "allow-all",
            "https-only",
            "redirect-to-https"
        ],
        "Pattern": "^[allow-all|https-only|redirect-to-https]",
        "Required": "Yes",
        "SampleValue": "allow-all|https-only|redirect-to-https",
        "UniqueKey": "cloudfront.distribution.defaultcachebehavior.viewerprotocolpolicy",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.distributionconfig.aliases": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.distribution.distributionconfig.aliases",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.distributionconfig.cachebehaviors": {
        "Required": "No",
        "Type": "List of [CacheBehavior",
        "UniqueKey": "cloudfront.distribution.distributionconfig.cachebehaviors",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.distributionconfig.cfnproperties": [
        "Comment",
        "CacheBehaviors",
        "Logging",
        "WebACLId",
        "Origins",
        "DefaultRootObject",
        "PriceClass",
        "Enabled",
        "DefaultCacheBehavior",
        "ViewerCertificate",
        "CustomErrorResponses",
        "HttpVersion",
        "IPV6Enabled",
        "Restrictions",
        "Aliases",
        "UniqueKey"
    ],
    "cloudfront.distribution.distributionconfig.comment": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.distributionconfig.comment",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.distributionconfig.customerrorresponses": {
        "Required": "No",
        "SampleValue": "TODO-customerrorresponses",
        "UniqueKey": "cloudfront.distribution.distributionconfig.customerrorresponses",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.distributionconfig.defaultcachebehavior": {
        "Required": "No",
        "Type": "DefaultCacheBehavior",
        "UniqueKey": "cloudfront.distribution.distributionconfig.defaultcachebehavior",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.distributionconfig.defaultrootobject": {
        "Required": "No",
        "SampleValue": "TODO-defaultrootobject",
        "UniqueKey": "cloudfront.distribution.distributionconfig.defaultrootobject",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.distributionconfig.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.distribution.distributionconfig.enabled",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.distributionconfig.httpversion": {
        "Allowed Values": "http1.1 | http2",
        "AllowedValues": [
            "http1.1",
            "http2"
        ],
        "Pattern": "^[http1.1|http2]",
        "Required": "No",
        "SampleValue": "http1.1|http2",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.distributionconfig.httpversion",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.distributionconfig.ipv6enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "cloudfront.distribution.distributionconfig.ipv6enabled",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.distributionconfig.logging": {
        "Required": "No",
        "SampleValue": "TODO-logging",
        "UniqueKey": "cloudfront.distribution.distributionconfig.logging",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.distributionconfig.origins": {
        "Required": "No",
        "Type": "List of [Origin",
        "UniqueKey": "cloudfront.distribution.distributionconfig.origins",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.distributionconfig.priceclass": {
        "AllowedValues": [
            "PriceClass_100",
            "PriceClass_200",
            "PriceClass_All"
        ],
        "Pattern": "^[PriceClass_100|PriceClass_200|PriceClass_All]",
        "Required": "No",
        "SampleValue": "PriceClass_100|PriceClass_200|PriceClass_All",
        "UniqueKey": "cloudfront.distribution.distributionconfig.priceclass",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.distributionconfig.restrictions": {
        "Required": "No",
        "Type": "Restrictions",
        "UniqueKey": "cloudfront.distribution.distributionconfig.restrictions",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.distributionconfig.viewercertificate": {
        "Required": "No",
        "Type": "ViewerCertificate",
        "UniqueKey": "cloudfront.distribution.distributionconfig.viewercertificate",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.distributionconfig.webaclid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.distributionconfig.webaclid",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.forwardedvalues.cfnproperties": [
        "Headers",
        "Cookies",
        "QueryStringCacheKeys",
        "QueryString",
        "UniqueKey"
    ],
    "cloudfront.distribution.forwardedvalues.cookies": {
        "Required": "No",
        "SampleValue": "TODO-cookies",
        "UniqueKey": "cloudfront.distribution.forwardedvalues.cookies",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.forwardedvalues.headers": {
        "Required": "No",
        "SampleValue": "TODO-headers",
        "UniqueKey": "cloudfront.distribution.forwardedvalues.headers",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.forwardedvalues.querystring": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "UniqueKey": "cloudfront.distribution.forwardedvalues.querystring",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.forwardedvalues.querystringcachekeys": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.distribution.forwardedvalues.querystringcachekeys",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.georestriction.cfnproperties": [
        "Locations",
        "RestrictionType",
        "UniqueKey",
        "SampleValue"
    ],
    "cloudfront.distribution.georestriction.locations": {
        "Required": "Conditional",
        "SampleValue": "TODO-locations",
        "UniqueKey": "cloudfront.distribution.georestriction.locations",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.georestriction.restrictiontype": {
        "Allowed Values": "blacklist | none | whitelist",
        "AllowedValues": [
            "blacklist",
            "none",
            "whitelist"
        ],
        "Pattern": "^[blacklist|none|whitelist]",
        "Required": "Yes",
        "SampleValue": "blacklist|none|whitelist",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.georestriction.restrictiontype",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.lambdafunctionassociation.cfnproperties": [
        "EventType",
        "LambdaFunctionARN",
        "UniqueKey",
        "SampleValue"
    ],
    "cloudfront.distribution.lambdafunctionassociation.eventtype": {
        "Allowed Values": "origin-request | origin-response | viewer-request | viewer-response",
        "AllowedValues": [
            "origin-request",
            "origin-response",
            "viewer-request",
            "viewer-response"
        ],
        "Pattern": "^[origin-request|origin-response|viewer-request|viewer-response]",
        "Required": "No",
        "SampleValue": "origin-request|origin-response|viewer-request|viewer-response",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.lambdafunctionassociation.eventtype",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.lambdafunctionassociation.lambdafunctionarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.lambdafunctionassociation.lambdafunctionarn",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.logging.bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.logging.bucket",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.logging.cfnproperties": [
        "Prefix",
        "Bucket",
        "IncludeCookies",
        "UniqueKey"
    ],
    "cloudfront.distribution.logging.includecookies": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.distribution.logging.includecookies",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.logging.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.logging.prefix",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.origin.cfnproperties": [
        "OriginPath",
        "DomainName",
        "OriginCustomHeaders",
        "CustomOriginConfig",
        "S3OriginConfig",
        "Id",
        "UniqueKey"
    ],
    "cloudfront.distribution.origin.customoriginconfig": {
        "Required": "Conditional",
        "Type": "CustomOriginConfig",
        "UniqueKey": "cloudfront.distribution.origin.customoriginconfig",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.origin.domainname": {
        "DomainName`  <a name=\"cfn-cloudfront-distribution-origin-domainname\"></a>\n **Amazon S3 origins*": "The DNS name of the Amazon S3 bucket from which you want CloudFront to get objects for this origin, for example, `myawsbucket.s3.amazonaws.com`\\. If you set up your bucket to be configured as a website endpoint, enter the Amazon S3 static website hosting endpoint for the bucket\\.  \nFor more information about specifying this value for different types of origins, see [Origin Domain Name](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName) in the *Amazon CloudFront Developer Guide*\\.  \nConstraints for Amazon S3 origins:   \n+ If you configured Amazon S3 Transfer Acceleration for your bucket, don't specify the `s3-accelerate` endpoint for `DomainName`\\.\n+ The bucket name must be between 3 and 63 characters long \\(inclusive\\)\\.\n+ The bucket name must contain only lowercase characters, numbers, periods, underscores, and dashes\\.\n+ The bucket name must not contain adjacent periods\\.\n **Custom Origins*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.origin.domainname",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.origin.id": {
        "Required": "Yes",
        "SampleValue": "TODO-id",
        "UniqueKey": "cloudfront.distribution.origin.id",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.origin.origincustomheaders": {
        "Required": "No",
        "Type": "List of [OriginCustomHeader",
        "UniqueKey": "cloudfront.distribution.origin.origincustomheaders",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.origin.originpath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.origin.originpath",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.origin.s3originconfig": {
        "Required": "Conditional",
        "Type": "S3OriginConfig",
        "UniqueKey": "cloudfront.distribution.origin.s3originconfig",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.origincustomheader.cfnproperties": [
        "HeaderName",
        "HeaderValue",
        "UniqueKey",
        "SampleValue"
    ],
    "cloudfront.distribution.origincustomheader.headername": {
        "Required": "Yes",
        "SampleValue": "TODO-headername",
        "UniqueKey": "cloudfront.distribution.origincustomheader.headername",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.origincustomheader.headervalue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.origincustomheader.headervalue",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.restrictions.cfnproperties": [
        "GeoRestriction",
        "UniqueKey"
    ],
    "cloudfront.distribution.restrictions.georestriction": {
        "Required": "Yes",
        "Type": "GeoRestriction",
        "UniqueKey": "cloudfront.distribution.restrictions.georestriction",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.s3originconfig.cfnproperties": [
        "OriginAccessIdentity",
        "UniqueKey"
    ],
    "cloudfront.distribution.s3originconfig.originaccessidentity": {
        "Required": "No",
        "SampleValue": "TODO-originaccessidentity",
        "UniqueKey": "cloudfront.distribution.s3originconfig.originaccessidentity",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.viewercertificate.acmcertificatearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.viewercertificate.acmcertificatearn",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.viewercertificate.cfnproperties": [
        "CloudFrontDefaultCertificate",
        "SslSupportMethod",
        "AcmCertificateArn",
        "IamCertificateId",
        "MinimumProtocolVersion",
        "UniqueKey"
    ],
    "cloudfront.distribution.viewercertificate.cloudfrontdefaultcertificate": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Conditional",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.distribution.viewercertificate.cloudfrontdefaultcertificate",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.viewercertificate.iamcertificateid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudfront.distribution.viewercertificate.iamcertificateid",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.viewercertificate.minimumprotocolversion": {
        "AllowedValues": [
            "SSLv3",
            "TLSv1",
            "TLSv1.1_2016",
            "TLSv1.2_2018",
            "TLSv1_2016"
        ],
        "Pattern": "^[SSLv3|TLSv1|TLSv1.1_2016|TLSv1.2_2018|TLSv1_2016]",
        "Required": "Conditional",
        "SampleValue": "SSLv3|TLSv1|TLSv1.1_2016|TLSv1.2_2018|TLSv1_2016",
        "UniqueKey": "cloudfront.distribution.viewercertificate.minimumprotocolversion",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.distribution.viewercertificate.sslsupportmethod": {
        "AllowedValues": [
            "sni-only",
            "vip"
        ],
        "Pattern": "^[sni-only|vip]",
        "Required": "Conditional",
        "SampleValue": "sni-only|vip",
        "UniqueKey": "cloudfront.distribution.viewercertificate.sslsupportmethod",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.streamingdistribution.logging.bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.streamingdistribution.logging.bucket",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.streamingdistribution.logging.cfnproperties": [
        "Enabled",
        "Prefix",
        "Bucket",
        "UniqueKey"
    ],
    "cloudfront.streamingdistribution.logging.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.streamingdistribution.logging.enabled",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.streamingdistribution.logging.prefix": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.streamingdistribution.logging.prefix",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.streamingdistribution.s3origin.cfnproperties": [
        "OriginAccessIdentity",
        "DomainName",
        "UniqueKey",
        "SampleValue"
    ],
    "cloudfront.streamingdistribution.s3origin.domainname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.streamingdistribution.s3origin.domainname",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.streamingdistribution.s3origin.originaccessidentity": {
        "Required": "Yes",
        "SampleValue": "TODO-originaccessidentity",
        "UniqueKey": "cloudfront.streamingdistribution.s3origin.originaccessidentity",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.aliases": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.aliases",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.cfnproperties": [
        "Comment",
        "S3Origin",
        "Logging",
        "PriceClass",
        "TrustedSigners",
        "Enabled",
        "Aliases",
        "UniqueKey"
    ],
    "cloudfront.streamingdistribution.streamingdistributionconfig.comment": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.comment",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.enabled",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.logging": {
        "Required": "No",
        "Type": "Logging",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.logging",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.priceclass": {
        "Allowed Values": "PriceClass_100 | PriceClass_200 | PriceClass_All",
        "AllowedValues": [
            "PriceClass_100",
            "PriceClass_200",
            "PriceClass_All"
        ],
        "Pattern": "^[PriceClass_100|PriceClass_200|PriceClass_All]",
        "Required": "No",
        "SampleValue": "PriceClass_100|PriceClass_200|PriceClass_All",
        "Type": "String",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.priceclass",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.s3origin": {
        "Required": "Yes",
        "Type": "S3Origin",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.s3origin",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.streamingdistribution.streamingdistributionconfig.trustedsigners": {
        "Required": "Yes",
        "SampleValue": "TODO-trustedsigners",
        "UniqueKey": "cloudfront.streamingdistribution.streamingdistributionconfig.trustedsigners",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.streamingdistribution.trustedsigners.awsaccountnumbers": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cloudfront.streamingdistribution.trustedsigners.awsaccountnumbers",
        "UpdateRequires": "No interruption"
    },
    "cloudfront.streamingdistribution.trustedsigners.cfnproperties": [
        "Enabled",
        "AwsAccountNumbers",
        "UniqueKey",
        "SampleValue"
    ],
    "cloudfront.streamingdistribution.trustedsigners.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudfront.streamingdistribution.trustedsigners.enabled",
        "UpdateRequires": "No interruption"
    },
    "cloudtrail.trail.dataresource.cfnproperties": [
        "Values",
        "Type",
        "UniqueKey",
        "SampleValue"
    ],
    "cloudtrail.trail.dataresource.type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudtrail.trail.dataresource.type",
        "UpdateRequires": "No interruption"
    },
    "cloudtrail.trail.dataresource.values": {
        "Required": "No",
        "SampleValue": "TODO-values",
        "UniqueKey": "cloudtrail.trail.dataresource.values",
        "UpdateRequires": "No interruption"
    },
    "cloudtrail.trail.eventselector.cfnproperties": [
        "IncludeManagementEvents",
        "DataResources",
        "ReadWriteType",
        "UniqueKey"
    ],
    "cloudtrail.trail.eventselector.dataresources": {
        "Required": "No",
        "SampleValue": "TODO-dataresources",
        "UniqueKey": "cloudtrail.trail.eventselector.dataresources",
        "UpdateRequires": "No interruption"
    },
    "cloudtrail.trail.eventselector.includemanagementevents": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "cloudtrail.trail.eventselector.includemanagementevents",
        "UpdateRequires": "No interruption"
    },
    "cloudtrail.trail.eventselector.readwritetype": {
        "Allowed Values": "All | ReadOnly | WriteOnly",
        "AllowedValues": [
            "All",
            "ReadOnly",
            "WriteOnly"
        ],
        "Pattern": "^[All|ReadOnly|WriteOnly]",
        "Required": "No",
        "SampleValue": "All|ReadOnly|WriteOnly",
        "Type": "String",
        "UniqueKey": "cloudtrail.trail.eventselector.readwritetype",
        "UpdateRequires": "No interruption"
    },
    "cloudwatch.alarm.metric.cfnproperties": [
        "Namespace",
        "Dimensions",
        "MetricName",
        "UniqueKey"
    ],
    "cloudwatch.alarm.metric.dimensions": {
        "Maximum": "10",
        "Required": "No",
        "Type": "List of [Dimension",
        "UniqueKey": "cloudwatch.alarm.metric.dimensions",
        "UpdateRequires": "No interruption"
    },
    "cloudwatch.alarm.metric.metricname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "No",
        "SampleValue": "TODO-cloudwatch.alarm.metric.metricname",
        "Type": "String",
        "UniqueKey": "cloudwatch.alarm.metric.metricname",
        "UpdateRequires": "No interruption"
    },
    "cloudwatch.alarm.metric.namespace": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[^:].*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudwatch.alarm.metric.namespace",
        "UpdateRequires": "No interruption"
    },
    "cloudwatch.alarm.metricdataquery.cfnproperties": [
        "MetricStat",
        "ReturnData",
        "Expression",
        "Id",
        "Label",
        "UniqueKey"
    ],
    "cloudwatch.alarm.metricdataquery.expression": {
        "Maximum": "1024",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "cloudwatch.alarm.metricdataquery.expression",
        "UpdateRequires": "No interruption"
    },
    "cloudwatch.alarm.metricdataquery.id": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-cloudwatch.alarm.metricdataquery.id",
        "Type": "String",
        "UniqueKey": "cloudwatch.alarm.metricdataquery.id",
        "UpdateRequires": "No interruption"
    },
    "cloudwatch.alarm.metricdataquery.label": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudwatch.alarm.metricdataquery.label",
        "UpdateRequires": "No interruption"
    },
    "cloudwatch.alarm.metricdataquery.metricstat": {
        "Required": "No",
        "Type": "MetricStat",
        "UniqueKey": "cloudwatch.alarm.metricdataquery.metricstat",
        "UpdateRequires": "No interruption"
    },
    "cloudwatch.alarm.metricdataquery.returndata": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cloudwatch.alarm.metricdataquery.returndata",
        "UpdateRequires": "No interruption"
    },
    "cloudwatch.alarm.metricstat.cfnproperties": [
        "Metric",
        "Stat",
        "Period",
        "Unit",
        "UniqueKey"
    ],
    "cloudwatch.alarm.metricstat.metric": {
        "Required": "Yes",
        "Type": "Metric",
        "UniqueKey": "cloudwatch.alarm.metricstat.metric",
        "UpdateRequires": "No interruption"
    },
    "cloudwatch.alarm.metricstat.period": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "cloudwatch.alarm.metricstat.period",
        "UpdateRequires": "No interruption"
    },
    "cloudwatch.alarm.metricstat.stat": {
        "Required": "Yes",
        "SampleValue": "TODO-stat",
        "UniqueKey": "cloudwatch.alarm.metricstat.stat",
        "UpdateRequires": "No interruption"
    },
    "cloudwatch.alarm.metricstat.unit": {
        "Allowed Values": "Bits | Bits/Second | Bytes | Bytes/Second | Count | Count/Second | Gigabits | Gigabits/Second | Gigabytes | Gigabytes/Second | Kilobits | Kilobits/Second | Kilobytes | Kilobytes/Second | Megabits | Megabits/Second | Megabytes | Megabytes/Second | Microseconds | Milliseconds | None | Percent | Seconds | Terabits | Terabits/Second | Terabytes | Terabytes/Second",
        "AllowedValues": [
            "Bits",
            "Bits/Second",
            "Bytes",
            "Bytes/Second",
            "Count",
            "Count/Second",
            "Gigabits",
            "Gigabits/Second",
            "Gigabytes",
            "Gigabytes/Second",
            "Kilobits",
            "Kilobits/Second",
            "Kilobytes",
            "Kilobytes/Second",
            "Megabits",
            "Megabits/Second",
            "Megabytes",
            "Megabytes/Second",
            "Microseconds",
            "Milliseconds",
            "None",
            "Percent",
            "Seconds",
            "Terabits",
            "Terabits/Second",
            "Terabytes",
            "Terabytes/Second"
        ],
        "Pattern": "^[Bits|Bits/Second|Bytes|Bytes/Second|Count|Count/Second|Gigabits|Gigabits/Second|Gigabytes|Gigabytes/Second|Kilobits|Kilobits/Second|Kilobytes|Kilobytes/Second|Megabits|Megabits/Second|Megabytes|Megabytes/Second|Microseconds|Milliseconds|None|Percent|Seconds|Terabits|Terabits/Second|Terabytes|Terabytes/Second]",
        "Required": "No",
        "SampleValue": "Bits|Bits/Second|Bytes|Bytes/Second|Count|Count/Second|Gigabits|Gigabits/Second|Gigabytes|Gigabytes/Second|Kilobits|Kilobits/Second|Kilobytes|Kilobytes/Second|Megabits|Megabits/Second|Megabytes|Megabytes/Second|Microseconds|Milliseconds|None|Percent|Seconds|Terabits|Terabits/Second|Terabytes|Terabytes/Second",
        "Type": "String",
        "UniqueKey": "cloudwatch.alarm.metricstat.unit",
        "UpdateRequires": "No interruption"
    },
    "cloudwatch.anomalydetector.configuration.cfnproperties": [
        "ExcludedTimeRanges",
        "MetricTimeZone",
        "UniqueKey",
        "SampleValue"
    ],
    "cloudwatch.anomalydetector.configuration.excludedtimeranges": {
        "Required": "No",
        "Type": "List of [Range",
        "UniqueKey": "cloudwatch.anomalydetector.configuration.excludedtimeranges",
        "UpdateRequires": "No interruption"
    },
    "cloudwatch.anomalydetector.configuration.metrictimezone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cloudwatch.anomalydetector.configuration.metrictimezone",
        "UpdateRequires": "No interruption"
    },
    "cloudwatch.anomalydetector.dimension.cfnproperties": [
        "Name",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "cloudwatch.anomalydetector.dimension.name": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-cloudwatch.anomalydetector.dimension.name",
        "Type": "String",
        "UniqueKey": "cloudwatch.anomalydetector.dimension.name",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.anomalydetector.dimension.value": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-cloudwatch.anomalydetector.dimension.value",
        "Type": "String",
        "UniqueKey": "cloudwatch.anomalydetector.dimension.value",
        "UpdateRequires": "Replacement"
    },
    "cloudwatch.anomalydetector.range.cfnproperties": [
        "EndTime",
        "StartTime",
        "UniqueKey",
        "SampleValue"
    ],
    "cloudwatch.anomalydetector.range.endtime": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudwatch.anomalydetector.range.endtime",
        "UpdateRequires": "No interruption"
    },
    "cloudwatch.anomalydetector.range.starttime": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cloudwatch.anomalydetector.range.starttime",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.artifacts.artifactidentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.artifacts.artifactidentifier",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.artifacts.cfnproperties": [
        "Packaging",
        "Name",
        "ArtifactIdentifier",
        "NamespaceType",
        "EncryptionDisabled",
        "Location",
        "OverrideArtifactName",
        "Path",
        "Type",
        "UniqueKey"
    ],
    "codebuild.project.artifacts.encryptiondisabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.artifacts.encryptiondisabled",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.artifacts.location": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "codebuild.project.artifacts.location",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.artifacts.name": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "codebuild.project.artifacts.name",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.artifacts.namespacetype": {
        "Allowed Values": "BUILD_ID | NONE",
        "AllowedValues": [
            "BUILD_ID",
            "NONE"
        ],
        "Pattern": "^[BUILD_ID|NONE]",
        "Required": "No",
        "SampleValue": "BUILD_ID|NONE",
        "Type": "String",
        "UniqueKey": "codebuild.project.artifacts.namespacetype",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.artifacts.overrideartifactname": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.artifacts.overrideartifactname",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.artifacts.packaging": {
        "Allowed Values": "NONE | ZIP",
        "AllowedValues": [
            "NONE",
            "ZIP"
        ],
        "Pattern": "^[NONE|ZIP]",
        "Required": "No",
        "SampleValue": "NONE|ZIP",
        "Type": "String",
        "UniqueKey": "codebuild.project.artifacts.packaging",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.artifacts.path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.artifacts.path",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.artifacts.type": {
        "AllowedValues": [
            "CODEPIPELINE",
            "NO_ARTIFACTS",
            "S3"
        ],
        "Pattern": "^[CODEPIPELINE|NO_ARTIFACTS|S3]",
        "Required": "Yes",
        "SampleValue": "CODEPIPELINE|NO_ARTIFACTS|S3",
        "UniqueKey": "codebuild.project.artifacts.type",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.cloudwatchlogsconfig.cfnproperties": [
        "Status",
        "GroupName",
        "StreamName",
        "UniqueKey"
    ],
    "codebuild.project.cloudwatchlogsconfig.groupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.cloudwatchlogsconfig.groupname",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.cloudwatchlogsconfig.status": {
        "Allowed Values": "DISABLED | ENABLED",
        "AllowedValues": [
            "DISABLED",
            "ENABLED"
        ],
        "Pattern": "^[DISABLED|ENABLED]",
        "Required": "Yes",
        "SampleValue": "DISABLED|ENABLED",
        "Type": "String",
        "UniqueKey": "codebuild.project.cloudwatchlogsconfig.status",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.cloudwatchlogsconfig.streamname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.cloudwatchlogsconfig.streamname",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.environment.- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&": {
        "UniqueKey": "codebuild.project.environment.- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&"
    },
    "codebuild.project.environment.- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.environment.- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.environment.- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"": {
        "UniqueKey": "codebuild.project.environment.- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\""
    },
    "codebuild.project.environment.certificate": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.environment.certificate",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.environment.cfnproperties": [
        "ComputeType",
        "ImagePullCredentialsType",
        "Certificate",
        "PrivilegedMode",
        "Image",
        "EnvironmentVariables",
        "- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"",
        "RegistryCredential",
        "- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&",
        "Type",
        "- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"",
        "UniqueKey"
    ],
    "codebuild.project.environment.computetype": {
        "Required": "Yes",
        "SampleValue": "TODO-computetype",
        "UniqueKey": "codebuild.project.environment.computetype",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.environment.environmentvariables": {
        "Required": "No",
        "Type": "List of [EnvironmentVariable",
        "UniqueKey": "codebuild.project.environment.environmentvariables",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.environment.image": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.environment.image",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.environment.imagepullcredentialstype": {
        "Allowed Values": "CODEBUILD | SERVICE_ROLE",
        "AllowedValues": [
            "CODEBUILD",
            "SERVICE_ROLE"
        ],
        "Pattern": "^[CODEBUILD|SERVICE_ROLE]",
        "Required": "No",
        "SampleValue": "CODEBUILD|SERVICE_ROLE",
        "Type": "String",
        "UniqueKey": "codebuild.project.environment.imagepullcredentialstype",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.environment.privilegedmode": {
        "UniqueKey": "codebuild.project.environment.privilegedmode"
    },
    "codebuild.project.environment.registrycredential": {
        "Required": "No",
        "Type": "RegistryCredential",
        "UniqueKey": "codebuild.project.environment.registrycredential",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.environment.type": {
        "Allowed Values": "ARM_CONTAINER | LINUX_CONTAINER | LINUX_GPU_CONTAINER | WINDOWS_CONTAINER",
        "AllowedValues": [
            "ARM_CONTAINER",
            "LINUX_CONTAINER",
            "LINUX_GPU_CONTAINER",
            "WINDOWS_CONTAINER"
        ],
        "Pattern": "^[ARM_CONTAINER|LINUX_CONTAINER|LINUX_GPU_CONTAINER|WINDOWS_CONTAINER]",
        "Required": "Yes",
        "SampleValue": "ARM_CONTAINER|LINUX_CONTAINER|LINUX_GPU_CONTAINER|WINDOWS_CONTAINER",
        "Type": "String",
        "UniqueKey": "codebuild.project.environment.type",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.environmentvariable.cfnproperties": [
        "Type",
        "Name",
        "Value",
        "UniqueKey"
    ],
    "codebuild.project.environmentvariable.name": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.environmentvariable.name",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.environmentvariable.type": {
        "Allowed Values": "PARAMETER_STORE | PLAINTEXT | SECRETS_MANAGER",
        "AllowedValues": [
            "PARAMETER_STORE",
            "PLAINTEXT",
            "SECRETS_MANAGER"
        ],
        "Pattern": "^[PARAMETER_STORE|PLAINTEXT|SECRETS_MANAGER]",
        "Required": "No",
        "SampleValue": "PARAMETER_STORE|PLAINTEXT|SECRETS_MANAGER",
        "Type": "String",
        "UniqueKey": "codebuild.project.environmentvariable.type",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.environmentvariable.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.environmentvariable.value",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.gitsubmodulesconfig.cfnproperties": [
        "FetchSubmodules",
        "UniqueKey"
    ],
    "codebuild.project.gitsubmodulesconfig.fetchsubmodules": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.gitsubmodulesconfig.fetchsubmodules",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.logsconfig.cfnproperties": [
        "S3Logs",
        "CloudWatchLogs",
        "UniqueKey",
        "SampleValue"
    ],
    "codebuild.project.logsconfig.cloudwatchlogs": {
        "Required": "No",
        "Type": "CloudWatchLogsConfig",
        "UniqueKey": "codebuild.project.logsconfig.cloudwatchlogs",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.logsconfig.s3logs": {
        "Required": "No",
        "Type": "S3LogsConfig",
        "UniqueKey": "codebuild.project.logsconfig.s3logs",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.projectcache.cfnproperties": [
        "Type",
        "Location",
        "Modes",
        "UniqueKey"
    ],
    "codebuild.project.projectcache.location": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectcache.location",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.projectcache.modes": {
        "Required": "No",
        "SampleValue": "TODO-modes",
        "UniqueKey": "codebuild.project.projectcache.modes",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.projectcache.type": {
        "Allowed Values": "LOCAL | NO_CACHE | S3",
        "AllowedValues": [
            "LOCAL",
            "NO_CACHE",
            "S3"
        ],
        "Pattern": "^[LOCAL|NO_CACHE|S3]",
        "Required": "Yes",
        "SampleValue": "LOCAL|NO_CACHE|S3",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectcache.type",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.projectsourceversion.cfnproperties": [
        "SourceVersion",
        "SourceIdentifier",
        "UniqueKey",
        "SampleValue"
    ],
    "codebuild.project.projectsourceversion.sourceidentifier": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.projectsourceversion.sourceidentifier",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.projectsourceversion.sourceversion": {
        "Required": "No",
        "SampleValue": "TODO-sourceversion",
        "UniqueKey": "codebuild.project.projectsourceversion.sourceversion",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.projecttriggers.cfnproperties": [
        "FilterGroups",
        "Webhook",
        "UniqueKey",
        "SampleValue"
    ],
    "codebuild.project.projecttriggers.filtergroups": {
        "Required": "No",
        "Type": "List of [FilterGroup",
        "UniqueKey": "codebuild.project.projecttriggers.filtergroups",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.projecttriggers.webhook": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.projecttriggers.webhook",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.registrycredential.cfnproperties": [
        "Credential",
        "CredentialProvider",
        "UniqueKey",
        "SampleValue"
    ],
    "codebuild.project.registrycredential.credential": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.registrycredential.credential",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.registrycredential.credentialprovider": {
        "Allowed Values": "SECRETS_MANAGER",
        "AllowedValues": [
            "SECRETS_MANAGER"
        ],
        "Pattern": "^[SECRETS_MANAGER]",
        "Required": "Yes",
        "SampleValue": "SECRETS_MANAGER",
        "Type": "String",
        "UniqueKey": "codebuild.project.registrycredential.credentialprovider",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.s3logsconfig.cfnproperties": [
        "Status",
        "EncryptionDisabled",
        "Location",
        "UniqueKey"
    ],
    "codebuild.project.s3logsconfig.encryptiondisabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.s3logsconfig.encryptiondisabled",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.s3logsconfig.location": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.s3logsconfig.location",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.s3logsconfig.status": {
        "Allowed Values": "DISABLED | ENABLED",
        "AllowedValues": [
            "DISABLED",
            "ENABLED"
        ],
        "Pattern": "^[DISABLED|ENABLED]",
        "Required": "Yes",
        "SampleValue": "DISABLED|ENABLED",
        "Type": "String",
        "UniqueKey": "codebuild.project.s3logsconfig.status",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.source.auth": {
        "Required": "No",
        "Type": "SourceAuth",
        "UniqueKey": "codebuild.project.source.auth",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.source.buildspec": {
        "Required": "No",
        "SampleValue": "TODO-buildspec",
        "UniqueKey": "codebuild.project.source.buildspec",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.source.cfnproperties": [
        "BuildSpec",
        "InsecureSsl",
        "GitSubmodulesConfig",
        "Auth",
        "Location",
        "SourceIdentifier",
        "GitCloneDepth",
        "Type",
        "ReportBuildStatus",
        "UniqueKey"
    ],
    "codebuild.project.source.gitclonedepth": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "codebuild.project.source.gitclonedepth",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.source.gitsubmodulesconfig": {
        "Required": "No",
        "Type": "GitSubmodulesConfig",
        "UniqueKey": "codebuild.project.source.gitsubmodulesconfig",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.source.insecuressl": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.source.insecuressl",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.source.location": {
        "Required": "No",
        "SampleValue": "TODO-location",
        "UniqueKey": "codebuild.project.source.location",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.source.reportbuildstatus": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.source.reportbuildstatus",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.source.sourceidentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.source.sourceidentifier",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.source.type": {
        "Allowed Values": "BITBUCKET | CODECOMMIT | CODEPIPELINE | GITHUB | GITHUB_ENTERPRISE | NO_SOURCE | S3",
        "AllowedValues": [
            "BITBUCKET",
            "CODECOMMIT",
            "CODEPIPELINE",
            "GITHUB",
            "GITHUB_ENTERPRISE",
            "NO_SOURCE",
            "S3"
        ],
        "Pattern": "^[BITBUCKET|CODECOMMIT|CODEPIPELINE|GITHUB|GITHUB_ENTERPRISE|NO_SOURCE|S3]",
        "Required": "Yes",
        "SampleValue": "BITBUCKET|CODECOMMIT|CODEPIPELINE|GITHUB|GITHUB_ENTERPRISE|NO_SOURCE|S3",
        "Type": "String",
        "UniqueKey": "codebuild.project.source.type",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.sourceauth.cfnproperties": [
        "Type",
        "Resource",
        "UniqueKey",
        "SampleValue"
    ],
    "codebuild.project.sourceauth.resource": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.sourceauth.resource",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.sourceauth.type": {
        "Allowed Values": "OAUTH",
        "AllowedValues": [
            "OAUTH"
        ],
        "Pattern": "^[OAUTH]",
        "Required": "Yes",
        "SampleValue": "OAUTH",
        "Type": "String",
        "UniqueKey": "codebuild.project.sourceauth.type",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.vpcconfig.cfnproperties": [
        "Subnets",
        "VpcId",
        "SecurityGroupIds",
        "UniqueKey"
    ],
    "codebuild.project.vpcconfig.securitygroupids": {
        "Maximum": "5",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "codebuild.project.vpcconfig.securitygroupids",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.vpcconfig.subnets": {
        "Maximum": "16",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "codebuild.project.vpcconfig.subnets",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.vpcconfig.vpcid": {
        "Minimum": "1",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.project.vpcconfig.vpcid",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.webhookfilter.cfnproperties": [
        "Pattern",
        "Type",
        "ExcludeMatchedPattern",
        "UniqueKey"
    ],
    "codebuild.project.webhookfilter.excludematchedpattern": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.project.webhookfilter.excludematchedpattern",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.webhookfilter.pattern": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.project.webhookfilter.pattern",
        "UpdateRequires": "No interruption"
    },
    "codebuild.project.webhookfilter.type": {
        "Allowed Values": "ACTOR_ACCOUNT_ID | BASE_REF | EVENT | FILE_PATH | HEAD_REF",
        "AllowedValues": [
            "ACTOR_ACCOUNT_ID",
            "BASE_REF",
            "EVENT",
            "FILE_PATH",
            "HEAD_REF"
        ],
        "Pattern": "^[ACTOR_ACCOUNT_ID|BASE_REF|EVENT|FILE_PATH|HEAD_REF]",
        "Required": "Yes",
        "SampleValue": "ACTOR_ACCOUNT_ID|BASE_REF|EVENT|FILE_PATH|HEAD_REF",
        "Type": "String",
        "UniqueKey": "codebuild.project.webhookfilter.type",
        "UpdateRequires": "No interruption"
    },
    "codebuild.reportgroup.reportexportconfig.cfnproperties": [
        "ExportConfigType",
        "S3Destination",
        "UniqueKey",
        "SampleValue"
    ],
    "codebuild.reportgroup.reportexportconfig.exportconfigtype": {
        "Allowed Values": "NO_EXPORT | S3",
        "AllowedValues": [
            "NO_EXPORT",
            "S3"
        ],
        "Pattern": "^[NO_EXPORT|S3]",
        "Required": "Yes",
        "SampleValue": "NO_EXPORT|S3",
        "Type": "String",
        "UniqueKey": "codebuild.reportgroup.reportexportconfig.exportconfigtype",
        "UpdateRequires": "No interruption"
    },
    "codebuild.reportgroup.reportexportconfig.s3destination": {
        "Required": "No",
        "Type": "S3ReportExportConfig",
        "UniqueKey": "codebuild.reportgroup.reportexportconfig.s3destination",
        "UpdateRequires": "No interruption"
    },
    "codebuild.reportgroup.s3reportexportconfig.bucket": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codebuild.reportgroup.s3reportexportconfig.bucket",
        "UpdateRequires": "No interruption"
    },
    "codebuild.reportgroup.s3reportexportconfig.cfnproperties": [
        "Packaging",
        "EncryptionDisabled",
        "Bucket",
        "EncryptionKey",
        "Path",
        "UniqueKey"
    ],
    "codebuild.reportgroup.s3reportexportconfig.encryptiondisabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codebuild.reportgroup.s3reportexportconfig.encryptiondisabled",
        "UpdateRequires": "No interruption"
    },
    "codebuild.reportgroup.s3reportexportconfig.encryptionkey": {
        "Minimum": "1",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.reportgroup.s3reportexportconfig.encryptionkey",
        "UpdateRequires": "No interruption"
    },
    "codebuild.reportgroup.s3reportexportconfig.packaging": {
        "Allowed Values": "NONE | ZIP",
        "AllowedValues": [
            "NONE",
            "ZIP"
        ],
        "Pattern": "^[NONE|ZIP]",
        "Required": "No",
        "SampleValue": "NONE|ZIP",
        "Type": "String",
        "UniqueKey": "codebuild.reportgroup.s3reportexportconfig.packaging",
        "UpdateRequires": "No interruption"
    },
    "codebuild.reportgroup.s3reportexportconfig.path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codebuild.reportgroup.s3reportexportconfig.path",
        "UpdateRequires": "No interruption"
    },
    "codecommit.repository.code.cfnproperties": [
        "S3",
        "UniqueKey"
    ],
    "codecommit.repository.code.s3": {
        "Required": "Yes",
        "Type": "S3",
        "UniqueKey": "codecommit.repository.code.s3",
        "UpdateRequires": "No interruption"
    },
    "codecommit.repository.repositorytrigger.branches": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "codecommit.repository.repositorytrigger.branches",
        "UpdateRequires": "No interruption"
    },
    "codecommit.repository.repositorytrigger.cfnproperties": [
        "Name",
        "CustomData",
        "Branches",
        "Events",
        "DestinationArn",
        "UniqueKey"
    ],
    "codecommit.repository.repositorytrigger.customdata": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codecommit.repository.repositorytrigger.customdata",
        "UpdateRequires": "No interruption"
    },
    "codecommit.repository.repositorytrigger.destinationarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codecommit.repository.repositorytrigger.destinationarn",
        "UpdateRequires": "No interruption"
    },
    "codecommit.repository.repositorytrigger.events": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "codecommit.repository.repositorytrigger.events",
        "UpdateRequires": "No interruption"
    },
    "codecommit.repository.repositorytrigger.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codecommit.repository.repositorytrigger.name",
        "UpdateRequires": "No interruption"
    },
    "codecommit.repository.s3.bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codecommit.repository.s3.bucket",
        "UpdateRequires": "No interruption"
    },
    "codecommit.repository.s3.cfnproperties": [
        "Bucket",
        "ObjectVersion",
        "Key",
        "UniqueKey"
    ],
    "codecommit.repository.s3.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codecommit.repository.s3.key",
        "UpdateRequires": "No interruption"
    },
    "codecommit.repository.s3.objectversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codecommit.repository.s3.objectversion",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentconfig.minimumhealthyhosts.cfnproperties": [
        "Type",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "codedeploy.deploymentconfig.minimumhealthyhosts.type": {
        "AllowedValues": [
            "FLEET_PERCENT",
            "HOST_COUNT"
        ],
        "Pattern": "^[FLEET_PERCENT|HOST_COUNT]",
        "Required": "Yes",
        "SampleValue": "FLEET_PERCENT|HOST_COUNT",
        "UniqueKey": "codedeploy.deploymentconfig.minimumhealthyhosts.type",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentconfig.minimumhealthyhosts.value": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "codedeploy.deploymentconfig.minimumhealthyhosts.value",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.alarm.cfnproperties": [
        "Name",
        "UniqueKey"
    ],
    "codedeploy.deploymentgroup.alarm.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.alarm.name",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.alarmconfiguration.alarms": {
        "Required": "No",
        "Type": "List of [Alarm",
        "UniqueKey": "codedeploy.deploymentgroup.alarmconfiguration.alarms",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.alarmconfiguration.cfnproperties": [
        "Alarms",
        "IgnorePollAlarmFailure",
        "Enabled",
        "UniqueKey"
    ],
    "codedeploy.deploymentgroup.alarmconfiguration.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codedeploy.deploymentgroup.alarmconfiguration.enabled",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.alarmconfiguration.ignorepollalarmfailure": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codedeploy.deploymentgroup.alarmconfiguration.ignorepollalarmfailure",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.autorollbackconfiguration.cfnproperties": [
        "Enabled",
        "Events",
        "UniqueKey",
        "SampleValue"
    ],
    "codedeploy.deploymentgroup.autorollbackconfiguration.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codedeploy.deploymentgroup.autorollbackconfiguration.enabled",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.autorollbackconfiguration.events": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "codedeploy.deploymentgroup.autorollbackconfiguration.events",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.deployment.cfnproperties": [
        "IgnoreApplicationStopFailures",
        "Description",
        "Revision",
        "UniqueKey"
    ],
    "codedeploy.deploymentgroup.deployment.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.description",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.deployment.ignoreapplicationstopfailures": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.ignoreapplicationstopfailures",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.deployment.revision": {
        "Required": "Yes",
        "Type": "RevisionLocation",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.deployment.revision.cfnproperties": [
        "RevisionType",
        "S3Location",
        "GitHubLocation",
        "UniqueKey"
    ],
    "codedeploy.deploymentgroup.deployment.revision.githublocation": {
        "Required": "No",
        "Type": "GitHubLocation",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.githublocation",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.deployment.revision.githublocation.cfnproperties": [
        "CommitId",
        "Repository",
        "UniqueKey",
        "SampleValue"
    ],
    "codedeploy.deploymentgroup.deployment.revision.githublocation.commitid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.githublocation.commitid",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.deployment.revision.githublocation.repository": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.githublocation.repository",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.deployment.revision.revisiontype": {
        "Allowed Values": "AppSpecContent | GitHub | S3 | String",
        "AllowedValues": [
            "AppSpecContent",
            "GitHub",
            "S3",
            "String"
        ],
        "Pattern": "^[AppSpecContent|GitHub|S3|String]",
        "Required": "No",
        "SampleValue": "AppSpecContent|GitHub|S3|String",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.revisiontype",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.deployment.revision.s3location": {
        "Required": "No",
        "Type": "S3Location",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.s3location",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.deployment.revision.s3location.bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.s3location.bucket",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.deployment.revision.s3location.bundletype": {
        "Allowed Values": "JSON | tar | tgz | YAML | zip",
        "AllowedValues": [
            "JSON",
            "tar",
            "tgz",
            "YAML",
            "zip"
        ],
        "Pattern": "^[JSON|tar|tgz|YAML|zip]",
        "Required": "No",
        "SampleValue": "JSON|tar|tgz|YAML|zip",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.s3location.bundletype",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.deployment.revision.s3location.cfnproperties": [
        "BundleType",
        "ETag",
        "Bucket",
        "Version",
        "Key",
        "UniqueKey"
    ],
    "codedeploy.deploymentgroup.deployment.revision.s3location.etag": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.s3location.etag",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.deployment.revision.s3location.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.s3location.key",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.deployment.revision.s3location.version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deployment.revision.s3location.version",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.deploymentstyle.cfnproperties": [
        "DeploymentType",
        "DeploymentOption",
        "UniqueKey",
        "SampleValue"
    ],
    "codedeploy.deploymentgroup.deploymentstyle.deploymentoption": {
        "Allowed Values": "WITH_TRAFFIC_CONTROL | WITHOUT_TRAFFIC_CONTROL",
        "AllowedValues": [
            "WITH_TRAFFIC_CONTROL",
            "WITHOUT_TRAFFIC_CONTROL"
        ],
        "Pattern": "^[WITH_TRAFFIC_CONTROL|WITHOUT_TRAFFIC_CONTROL]",
        "Required": "No",
        "SampleValue": "WITH_TRAFFIC_CONTROL|WITHOUT_TRAFFIC_CONTROL",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.deploymentstyle.deploymentoption",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.deploymentstyle.deploymenttype": {
        "AllowedValues": [
            "BLUE_GREEN",
            "IN_PLACE"
        ],
        "Pattern": "^[BLUE_GREEN|IN_PLACE]",
        "Required": "No",
        "SampleValue": "BLUE_GREEN|IN_PLACE",
        "UniqueKey": "codedeploy.deploymentgroup.deploymentstyle.deploymenttype",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.ec2tagfilter.cfnproperties": [
        "Type",
        "Value",
        "Key",
        "UniqueKey"
    ],
    "codedeploy.deploymentgroup.ec2tagfilter.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.ec2tagfilter.key",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.ec2tagfilter.type": {
        "Allowed Values": "KEY_AND_VALUE | KEY_ONLY | VALUE_ONLY",
        "AllowedValues": [
            "KEY_AND_VALUE",
            "KEY_ONLY",
            "VALUE_ONLY"
        ],
        "Pattern": "^[KEY_AND_VALUE|KEY_ONLY|VALUE_ONLY]",
        "Required": "No",
        "SampleValue": "KEY_AND_VALUE|KEY_ONLY|VALUE_ONLY",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.ec2tagfilter.type",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.ec2tagfilter.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.ec2tagfilter.value",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.ec2tagset.cfnproperties": [
        "Ec2TagSetList",
        "UniqueKey"
    ],
    "codedeploy.deploymentgroup.ec2tagset.ec2tagsetlist": {
        "Required": "No",
        "Type": "List of [EC2TagSetListObject",
        "UniqueKey": "codedeploy.deploymentgroup.ec2tagset.ec2tagsetlist",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.ec2tagsetlistobject.cfnproperties": [
        "Ec2TagGroup",
        "UniqueKey"
    ],
    "codedeploy.deploymentgroup.ec2tagsetlistobject.ec2taggroup": {
        "Required": "No",
        "Type": "List of [EC2TagFilter",
        "UniqueKey": "codedeploy.deploymentgroup.ec2tagsetlistobject.ec2taggroup",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.elbinfo.cfnproperties": [
        "Name",
        "UniqueKey"
    ],
    "codedeploy.deploymentgroup.elbinfo.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.elbinfo.name",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.loadbalancerinfo.cfnproperties": [
        "ElbInfoList",
        "TargetGroupInfoList",
        "UniqueKey",
        "SampleValue"
    ],
    "codedeploy.deploymentgroup.loadbalancerinfo.elbinfolist": {
        "Required": "No",
        "Type": "List of [ELBInfo",
        "UniqueKey": "codedeploy.deploymentgroup.loadbalancerinfo.elbinfolist",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.loadbalancerinfo.targetgroupinfolist": {
        "Required": "Conditional",
        "Type": "List of [TargetGroupInfo",
        "UniqueKey": "codedeploy.deploymentgroup.loadbalancerinfo.targetgroupinfolist",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.onpremisestagset.cfnproperties": [
        "OnPremisesTagSetList",
        "UniqueKey"
    ],
    "codedeploy.deploymentgroup.onpremisestagset.onpremisestagsetlist": {
        "Required": "No",
        "Type": "List of [OnPremisesTagSetListObject",
        "UniqueKey": "codedeploy.deploymentgroup.onpremisestagset.onpremisestagsetlist",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.onpremisestagsetlistobject.cfnproperties": [
        "OnPremisesTagGroup",
        "UniqueKey"
    ],
    "codedeploy.deploymentgroup.onpremisestagsetlistobject.onpremisestaggroup": {
        "Required": "No",
        "Type": "List of [TagFilter",
        "UniqueKey": "codedeploy.deploymentgroup.onpremisestagsetlistobject.onpremisestaggroup",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.tagfilter.cfnproperties": [
        "Type",
        "Value",
        "Key",
        "UniqueKey"
    ],
    "codedeploy.deploymentgroup.tagfilter.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.tagfilter.key",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.tagfilter.type": {
        "Allowed Values": "KEY_AND_VALUE | KEY_ONLY | VALUE_ONLY",
        "AllowedValues": [
            "KEY_AND_VALUE",
            "KEY_ONLY",
            "VALUE_ONLY"
        ],
        "Pattern": "^[KEY_AND_VALUE|KEY_ONLY|VALUE_ONLY]",
        "Required": "No",
        "SampleValue": "KEY_AND_VALUE|KEY_ONLY|VALUE_ONLY",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.tagfilter.type",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.tagfilter.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.tagfilter.value",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.targetgroupinfo.cfnproperties": [
        "Name",
        "UniqueKey"
    ],
    "codedeploy.deploymentgroup.targetgroupinfo.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.targetgroupinfo.name",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.triggerconfig.cfnproperties": [
        "TriggerEvents",
        "TriggerTargetArn",
        "TriggerName",
        "UniqueKey"
    ],
    "codedeploy.deploymentgroup.triggerconfig.triggerevents": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "codedeploy.deploymentgroup.triggerconfig.triggerevents",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.triggerconfig.triggername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.triggerconfig.triggername",
        "UpdateRequires": "No interruption"
    },
    "codedeploy.deploymentgroup.triggerconfig.triggertargetarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codedeploy.deploymentgroup.triggerconfig.triggertargetarn",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.customactiontype.artifactdetails.cfnproperties": [
        "MaximumCount",
        "MinimumCount",
        "UniqueKey",
        "SampleValue"
    ],
    "codepipeline.customactiontype.artifactdetails.maximumcount": {
        "Maximum": "5",
        "Minimum": "0",
        "Pattern": "^[0,5]}$",
        "Required": "Yes",
        "SampleValue": "0...5",
        "Type": "Integer",
        "UniqueKey": "codepipeline.customactiontype.artifactdetails.maximumcount",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.customactiontype.artifactdetails.minimumcount": {
        "Maximum": "5",
        "Minimum": "0",
        "Pattern": "^[0,5]}$",
        "Required": "Yes",
        "SampleValue": "0...5",
        "Type": "Integer",
        "UniqueKey": "codepipeline.customactiontype.artifactdetails.minimumcount",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.customactiontype.configurationproperties": [
        "Description",
        "Required",
        "Secret",
        "Key",
        "Type",
        "Queryable",
        "Name",
        "UniqueKey"
    ],
    "codepipeline.customactiontype.configurationproperties.cfnproperties": [
        "Description",
        "Required",
        "Secret",
        "Key",
        "Type",
        "Queryable",
        "Name",
        "UniqueKey"
    ],
    "codepipeline.customactiontype.configurationproperties.description": {
        "Maximum": "160",
        "Minimum": "1",
        "Pattern": "^.{1,160}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.customactiontype.configurationproperties.description",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.description",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.customactiontype.configurationproperties.key": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.key",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.customactiontype.configurationproperties.name": {
        "Maximum": "50",
        "Minimum": "1",
        "Pattern": "^.{1,50}$",
        "Required": "Yes",
        "SampleValue": "TODO-codepipeline.customactiontype.configurationproperties.name",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.name",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.customactiontype.configurationproperties.queryable": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.queryable",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.customactiontype.configurationproperties.required": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.required",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.customactiontype.configurationproperties.secret": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.secret",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.customactiontype.configurationproperties.type": {
        "Allowed Values": "Boolean | Number | String",
        "AllowedValues": [
            "Boolean",
            "Number",
            "String"
        ],
        "Pattern": "^[Boolean|Number|String]",
        "Required": "No",
        "SampleValue": "Boolean|Number|String",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.configurationproperties.type",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.customactiontype.settings.cfnproperties": [
        "ExecutionUrlTemplate",
        "EntityUrlTemplate",
        "RevisionUrlTemplate",
        "ThirdPartyConfigurationUrl",
        "UniqueKey"
    ],
    "codepipeline.customactiontype.settings.entityurltemplate": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.customactiontype.settings.entityurltemplate",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.settings.entityurltemplate",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.customactiontype.settings.executionurltemplate": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.customactiontype.settings.executionurltemplate",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.settings.executionurltemplate",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.customactiontype.settings.revisionurltemplate": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.customactiontype.settings.revisionurltemplate",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.settings.revisionurltemplate",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.customactiontype.settings.thirdpartyconfigurationurl": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.customactiontype.settings.thirdpartyconfigurationurl",
        "Type": "String",
        "UniqueKey": "codepipeline.customactiontype.settings.thirdpartyconfigurationurl",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.artifactstore.cfnproperties": [
        "Type",
        "EncryptionKey",
        "Location",
        "UniqueKey"
    ],
    "codepipeline.pipeline.artifactstore.encryptionkey": {
        "Required": "No",
        "Type": "EncryptionKey",
        "UniqueKey": "codepipeline.pipeline.artifactstore.encryptionkey",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.artifactstore.encryptionkey.cfnproperties": [
        "Type",
        "Id",
        "UniqueKey",
        "SampleValue"
    ],
    "codepipeline.pipeline.artifactstore.encryptionkey.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.artifactstore.encryptionkey.id",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.artifactstore.encryptionkey.type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.artifactstore.encryptionkey.type",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.artifactstore.location": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "[a-zA-Z0-9\\-\\.]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.artifactstore.location",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.artifactstore.type": {
        "Allowed Values": "S3",
        "AllowedValues": [
            "S3"
        ],
        "Pattern": "^[S3]",
        "Required": "Yes",
        "SampleValue": "S3",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.artifactstore.type",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.artifactstoremap.artifactstore": {
        "Required": "Conditional",
        "Type": "ArtifactStore",
        "UniqueKey": "codepipeline.pipeline.artifactstoremap.artifactstore",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.artifactstoremap.cfnproperties": [
        "Region",
        "ArtifactStore",
        "UniqueKey",
        "SampleValue"
    ],
    "codepipeline.pipeline.artifactstoremap.region": {
        "Maximum": "30",
        "Minimum": "4",
        "Pattern": "^.{4,30}$",
        "Required": "Yes",
        "SampleValue": "TODO-codepipeline.pipeline.artifactstoremap.region",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.artifactstoremap.region",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.disableinboundstagetransitions.cfnproperties": [
        "Reason",
        "StageName",
        "UniqueKey",
        "SampleValue"
    ],
    "codepipeline.pipeline.disableinboundstagetransitions.reason": {
        "Maximum": "300",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9!@ \\(\\)\\.\\*\\?\\-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.disableinboundstagetransitions.reason",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.disableinboundstagetransitions.stagename": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "[A-Za-z0-9.@\\-_]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.disableinboundstagetransitions.stagename",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.stages.actions": {
        "Required": "Yes",
        "Type": "List of [ActionDeclaration",
        "UniqueKey": "codepipeline.pipeline.stages.actions",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.stages.actions.actiontypeid": {
        "Required": "Yes",
        "Type": "ActionTypeId",
        "UniqueKey": "codepipeline.pipeline.stages.actions.actiontypeid",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.stages.actions.actiontypeid.category": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.actiontypeid.category",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.stages.actions.actiontypeid.cfnproperties": [
        "Category",
        "Owner",
        "Version",
        "Provider",
        "UniqueKey"
    ],
    "codepipeline.pipeline.stages.actions.actiontypeid.owner": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.actiontypeid.owner",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.stages.actions.actiontypeid.provider": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.actiontypeid.provider",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.stages.actions.actiontypeid.version": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.actiontypeid.version",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.stages.actions.cfnproperties": [
        "InputArtifacts",
        "Name",
        "Region",
        "Namespace",
        "ActionTypeId",
        "OutputArtifacts",
        "Configuration",
        "RoleArn",
        "RunOrder",
        "UniqueKey"
    ],
    "codepipeline.pipeline.stages.actions.configuration": {
        "Required": "No",
        "SampleValue": "TODO-configuration",
        "UniqueKey": "codepipeline.pipeline.stages.actions.configuration",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.stages.actions.inputartifacts": {
        "Required": "No",
        "Type": "List of [InputArtifact",
        "UniqueKey": "codepipeline.pipeline.stages.actions.inputartifacts",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.stages.actions.inputartifacts.cfnproperties": [
        "Name",
        "UniqueKey"
    ],
    "codepipeline.pipeline.stages.actions.inputartifacts.name": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9_\\-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.inputartifacts.name",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.stages.actions.name": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "[A-Za-z0-9.@\\-_]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.name",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.stages.actions.namespace": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "[A-Za-z0-9@\\-_]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.namespace",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.stages.actions.outputartifacts": {
        "Required": "No",
        "Type": "List of [OutputArtifact",
        "UniqueKey": "codepipeline.pipeline.stages.actions.outputartifacts",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.stages.actions.outputartifacts.cfnproperties": [
        "Name",
        "UniqueKey"
    ],
    "codepipeline.pipeline.stages.actions.outputartifacts.name": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9_\\-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.outputartifacts.name",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.stages.actions.region": {
        "Maximum": "30",
        "Minimum": "4",
        "Pattern": "^.{4,30}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.pipeline.stages.actions.region",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.region",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.stages.actions.rolearn": {
        "Maximum": "1024",
        "Pattern": "arn:aws(-[\\w]+)*:iam::[0-9]{12}:role/.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.actions.rolearn",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.stages.actions.runorder": {
        "Maximum": "999",
        "Minimum": "1",
        "Pattern": "^[1,999]}$",
        "Required": "No",
        "SampleValue": "1...999",
        "Type": "Integer",
        "UniqueKey": "codepipeline.pipeline.stages.actions.runorder",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.stages.blockers": {
        "Required": "No",
        "Type": "List of [BlockerDeclaration",
        "UniqueKey": "codepipeline.pipeline.stages.blockers",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.stages.blockers.cfnproperties": [
        "Type",
        "Name",
        "UniqueKey",
        "SampleValue"
    ],
    "codepipeline.pipeline.stages.blockers.name": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "Yes",
        "SampleValue": "TODO-codepipeline.pipeline.stages.blockers.name",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.blockers.name",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.stages.blockers.type": {
        "Allowed Values": "Schedule",
        "AllowedValues": [
            "Schedule"
        ],
        "Pattern": "^[Schedule]",
        "Required": "Yes",
        "SampleValue": "Schedule",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.blockers.type",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.pipeline.stages.cfnproperties": [
        "Blockers",
        "Name",
        "Actions",
        "UniqueKey"
    ],
    "codepipeline.pipeline.stages.name": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "[A-Za-z0-9.@\\-_]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codepipeline.pipeline.stages.name",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.webhook.webhookauthconfiguration.allowediprange": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.webhook.webhookauthconfiguration.allowediprange",
        "Type": "String",
        "UniqueKey": "codepipeline.webhook.webhookauthconfiguration.allowediprange",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.webhook.webhookauthconfiguration.cfnproperties": [
        "SecretToken",
        "AllowedIPRange",
        "UniqueKey",
        "SampleValue"
    ],
    "codepipeline.webhook.webhookauthconfiguration.secrettoken": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.webhook.webhookauthconfiguration.secrettoken",
        "Type": "String",
        "UniqueKey": "codepipeline.webhook.webhookauthconfiguration.secrettoken",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.webhook.webhookfilterrule.cfnproperties": [
        "MatchEquals",
        "JsonPath",
        "UniqueKey",
        "SampleValue"
    ],
    "codepipeline.webhook.webhookfilterrule.jsonpath": {
        "Maximum": "150",
        "Minimum": "1",
        "Pattern": "^.{1,150}$",
        "Required": "Yes",
        "SampleValue": "TODO-codepipeline.webhook.webhookfilterrule.jsonpath",
        "Type": "String",
        "UniqueKey": "codepipeline.webhook.webhookfilterrule.jsonpath",
        "UpdateRequires": "No interruption"
    },
    "codepipeline.webhook.webhookfilterrule.matchequals": {
        "Maximum": "150",
        "Minimum": "1",
        "Pattern": "^.{1,150}$",
        "Required": "No",
        "SampleValue": "TODO-codepipeline.webhook.webhookfilterrule.matchequals",
        "Type": "String",
        "UniqueKey": "codepipeline.webhook.webhookfilterrule.matchequals",
        "UpdateRequires": "No interruption"
    },
    "codestar.githubrepository.code.cfnproperties": [
        "S3",
        "UniqueKey"
    ],
    "codestar.githubrepository.code.s3": {
        "Required": "Yes",
        "Type": "S3",
        "UniqueKey": "codestar.githubrepository.code.s3",
        "UpdateRequires": "Replacement"
    },
    "codestar.githubrepository.s3.bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codestar.githubrepository.s3.bucket",
        "UpdateRequires": "Replacement"
    },
    "codestar.githubrepository.s3.cfnproperties": [
        "Bucket",
        "ObjectVersion",
        "Key",
        "UniqueKey"
    ],
    "codestar.githubrepository.s3.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "codestar.githubrepository.s3.key",
        "UpdateRequires": "Replacement"
    },
    "codestar.githubrepository.s3.objectversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codestar.githubrepository.s3.objectversion",
        "UpdateRequires": "Replacement"
    },
    "codestarnotifications.notificationrule.target.cfnproperties": [
        "TargetAddress",
        "TargetType",
        "UniqueKey",
        "SampleValue"
    ],
    "codestarnotifications.notificationrule.target.targetaddress": {
        "Maximum": "320",
        "Minimum": "1",
        "Pattern": "^.{1,320}$",
        "Required": "No",
        "SampleValue": "TODO-codestarnotifications.notificationrule.target.targetaddress",
        "Type": "String",
        "UniqueKey": "codestarnotifications.notificationrule.target.targetaddress",
        "UpdateRequires": "No interruption"
    },
    "codestarnotifications.notificationrule.target.targettype": {
        "Pattern": "^[A-Za-z]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "codestarnotifications.notificationrule.target.targettype",
        "UpdateRequires": "No interruption"
    },
    "cognito.identitypool.cognitoidentityprovider.cfnproperties": [
        "ServerSideTokenCheck",
        "ProviderName",
        "ClientId",
        "UniqueKey"
    ],
    "cognito.identitypool.cognitoidentityprovider.clientid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypool.cognitoidentityprovider.clientid",
        "UpdateRequires": "No interruption"
    },
    "cognito.identitypool.cognitoidentityprovider.providername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypool.cognitoidentityprovider.providername",
        "UpdateRequires": "No interruption"
    },
    "cognito.identitypool.cognitoidentityprovider.serversidetokencheck": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.identitypool.cognitoidentityprovider.serversidetokencheck",
        "UpdateRequires": "No interruption"
    },
    "cognito.identitypool.cognitostreams.cfnproperties": [
        "StreamingStatus",
        "RoleArn",
        "StreamName",
        "UniqueKey"
    ],
    "cognito.identitypool.cognitostreams.rolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypool.cognitostreams.rolearn",
        "UpdateRequires": "No interruption"
    },
    "cognito.identitypool.cognitostreams.streamingstatus": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypool.cognitostreams.streamingstatus",
        "UpdateRequires": "No interruption"
    },
    "cognito.identitypool.cognitostreams.streamname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypool.cognitostreams.streamname",
        "UpdateRequires": "No interruption"
    },
    "cognito.identitypool.pushsync.applicationarns": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cognito.identitypool.pushsync.applicationarns",
        "UpdateRequires": "No interruption"
    },
    "cognito.identitypool.pushsync.cfnproperties": [
        "RoleArn",
        "ApplicationArns",
        "UniqueKey",
        "SampleValue"
    ],
    "cognito.identitypool.pushsync.rolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypool.pushsync.rolearn",
        "UpdateRequires": "No interruption"
    },
    "cognito.identitypoolroleattachment.mappingrule.cfnproperties": [
        "Claim",
        "MatchType",
        "RoleARN",
        "Value",
        "UniqueKey"
    ],
    "cognito.identitypoolroleattachment.mappingrule.claim": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.mappingrule.claim",
        "UpdateRequires": "No interruption"
    },
    "cognito.identitypoolroleattachment.mappingrule.matchtype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.mappingrule.matchtype",
        "UpdateRequires": "No interruption"
    },
    "cognito.identitypoolroleattachment.mappingrule.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.mappingrule.rolearn",
        "UpdateRequires": "No interruption"
    },
    "cognito.identitypoolroleattachment.mappingrule.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.mappingrule.value",
        "UpdateRequires": "No interruption"
    },
    "cognito.identitypoolroleattachment.rolemapping.ambiguousroleresolution": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.rolemapping.ambiguousroleresolution",
        "UpdateRequires": "No interruption"
    },
    "cognito.identitypoolroleattachment.rolemapping.cfnproperties": [
        "AmbiguousRoleResolution",
        "Type",
        "IdentityProvider",
        "RulesConfiguration",
        "UniqueKey"
    ],
    "cognito.identitypoolroleattachment.rolemapping.identityprovider": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.rolemapping.identityprovider",
        "UpdateRequires": "No interruption"
    },
    "cognito.identitypoolroleattachment.rolemapping.rulesconfiguration": {
        "Required": "No",
        "Type": "RulesConfigurationType",
        "UniqueKey": "cognito.identitypoolroleattachment.rolemapping.rulesconfiguration",
        "UpdateRequires": "No interruption"
    },
    "cognito.identitypoolroleattachment.rolemapping.type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.identitypoolroleattachment.rolemapping.type",
        "UpdateRequires": "No interruption"
    },
    "cognito.identitypoolroleattachment.rulesconfigurationtype.cfnproperties": [
        "Rules",
        "UniqueKey"
    ],
    "cognito.identitypoolroleattachment.rulesconfigurationtype.rules": {
        "Required": "Yes",
        "Type": "List of [MappingRule",
        "UniqueKey": "cognito.identitypoolroleattachment.rulesconfigurationtype.rules",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.admincreateuserconfig.allowadmincreateuseronly": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.admincreateuserconfig.allowadmincreateuseronly",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.admincreateuserconfig.cfnproperties": [
        "InviteMessageTemplate",
        "UnusedAccountValidityDays",
        "AllowAdminCreateUserOnly",
        "UniqueKey"
    ],
    "cognito.userpool.admincreateuserconfig.invitemessagetemplate": {
        "Required": "No",
        "Type": "InviteMessageTemplate",
        "UniqueKey": "cognito.userpool.admincreateuserconfig.invitemessagetemplate",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.admincreateuserconfig.unusedaccountvaliditydays": {
        "Maximum": "365",
        "Minimum": "0",
        "Pattern": "^[0,365]}$",
        "Required": "No",
        "SampleValue": "0...365",
        "Type": "Integer",
        "UniqueKey": "cognito.userpool.admincreateuserconfig.unusedaccountvaliditydays",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.deviceconfiguration.cfnproperties": [
        "ChallengeRequiredOnNewDevice",
        "DeviceOnlyRememberedOnUserPrompt",
        "UniqueKey",
        "SampleValue"
    ],
    "cognito.userpool.deviceconfiguration.challengerequiredonnewdevice": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.deviceconfiguration.challengerequiredonnewdevice",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.deviceconfiguration.deviceonlyrememberedonuserprompt": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.deviceconfiguration.deviceonlyrememberedonuserprompt",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.emailconfiguration.cfnproperties": [
        "From",
        "EmailSendingAccount",
        "SourceArn",
        "ConfigurationSet",
        "ReplyToEmailAddress",
        "UniqueKey"
    ],
    "cognito.userpool.emailconfiguration.configurationset": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_-]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.emailconfiguration.configurationset",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.emailconfiguration.emailsendingaccount": {
        "AllowedValues": [
            "COGNITO_DEFAULT",
            "DEVELOPER"
        ],
        "Pattern": "^[COGNITO_DEFAULT|DEVELOPER]",
        "Required": "No",
        "SampleValue": "COGNITO_DEFAULT|DEVELOPER",
        "UniqueKey": "cognito.userpool.emailconfiguration.emailsendingaccount",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.emailconfiguration.from": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.emailconfiguration.from",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.emailconfiguration.replytoemailaddress": {
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+@[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.emailconfiguration.replytoemailaddress",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.emailconfiguration.sourcearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.emailconfiguration.sourcearn",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.invitemessagetemplate.cfnproperties": [
        "EmailMessage",
        "EmailSubject",
        "SMSMessage",
        "UniqueKey"
    ],
    "cognito.userpool.invitemessagetemplate.emailmessage": {
        "Maximum": "20000",
        "Minimum": "6",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{####\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.invitemessagetemplate.emailmessage",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.invitemessagetemplate.emailsubject": {
        "Maximum": "140",
        "Minimum": "1",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.invitemessagetemplate.emailsubject",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.invitemessagetemplate.smsmessage": {
        "Maximum": "140",
        "Minimum": "6",
        "Pattern": ".*\\{####\\}.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.invitemessagetemplate.smsmessage",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.lambdaconfig.cfnproperties": [
        "PostConfirmation",
        "CreateAuthChallenge",
        "VerifyAuthChallengeResponse",
        "PreAuthentication",
        "PostAuthentication",
        "CustomMessage",
        "PreSignUp",
        "PreTokenGeneration",
        "DefineAuthChallenge",
        "UserMigration",
        "UniqueKey"
    ],
    "cognito.userpool.lambdaconfig.createauthchallenge": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.createauthchallenge",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.lambdaconfig.custommessage": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.custommessage",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.lambdaconfig.defineauthchallenge": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.defineauthchallenge",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.lambdaconfig.postauthentication": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.postauthentication",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.lambdaconfig.postconfirmation": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.postconfirmation",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.lambdaconfig.preauthentication": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.preauthentication",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.lambdaconfig.presignup": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.presignup",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.lambdaconfig.pretokengeneration": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.pretokengeneration",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.lambdaconfig.usermigration": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.usermigration",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.lambdaconfig.verifyauthchallengeresponse": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.lambdaconfig.verifyauthchallengeresponse",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.numberattributeconstraints.cfnproperties": [
        "MaxValue",
        "MinValue",
        "UniqueKey",
        "SampleValue"
    ],
    "cognito.userpool.numberattributeconstraints.maxvalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.numberattributeconstraints.maxvalue",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.numberattributeconstraints.minvalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.numberattributeconstraints.minvalue",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.passwordpolicy.cfnproperties": [
        "RequireNumbers",
        "RequireLowercase",
        "RequireSymbols",
        "RequireUppercase",
        "TemporaryPasswordValidityDays",
        "MinimumLength",
        "UniqueKey"
    ],
    "cognito.userpool.passwordpolicy.minimumlength": {
        "Maximum": "99",
        "Minimum": "6",
        "Pattern": "^[6,99]}$",
        "Required": "No",
        "SampleValue": "6...99",
        "Type": "Integer",
        "UniqueKey": "cognito.userpool.passwordpolicy.minimumlength",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.passwordpolicy.requirelowercase": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.passwordpolicy.requirelowercase",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.passwordpolicy.requirenumbers": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.passwordpolicy.requirenumbers",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.passwordpolicy.requiresymbols": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.passwordpolicy.requiresymbols",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.passwordpolicy.requireuppercase": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.passwordpolicy.requireuppercase",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.passwordpolicy.temporarypasswordvaliditydays": {
        "Maximum": "365",
        "Minimum": "0",
        "Pattern": "^[0,365]}$",
        "Required": "No",
        "SampleValue": "0...365",
        "Type": "Integer",
        "UniqueKey": "cognito.userpool.passwordpolicy.temporarypasswordvaliditydays",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.policies.cfnproperties": [
        "PasswordPolicy",
        "UniqueKey"
    ],
    "cognito.userpool.policies.passwordpolicy": {
        "Required": "No",
        "Type": "PasswordPolicy",
        "UniqueKey": "cognito.userpool.policies.passwordpolicy",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.schemaattribute.attributedatatype": {
        "Allowed Values": "Boolean | DateTime | Number | String",
        "AllowedValues": [
            "Boolean",
            "DateTime",
            "Number",
            "String"
        ],
        "Pattern": "^[Boolean|DateTime|Number|String]",
        "Required": "No",
        "SampleValue": "Boolean|DateTime|Number|String",
        "Type": "String",
        "UniqueKey": "cognito.userpool.schemaattribute.attributedatatype",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.schemaattribute.cfnproperties": [
        "Name",
        "NumberAttributeConstraints",
        "StringAttributeConstraints",
        "DeveloperOnlyAttribute",
        "Required",
        "AttributeDataType",
        "Mutable",
        "UniqueKey"
    ],
    "cognito.userpool.schemaattribute.developeronlyattribute": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.schemaattribute.developeronlyattribute",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.schemaattribute.mutable": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.schemaattribute.mutable",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.schemaattribute.name": {
        "Maximum": "20",
        "Minimum": "1",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.schemaattribute.name",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.schemaattribute.numberattributeconstraints": {
        "Required": "No",
        "Type": "NumberAttributeConstraints",
        "UniqueKey": "cognito.userpool.schemaattribute.numberattributeconstraints",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.schemaattribute.required": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpool.schemaattribute.required",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.schemaattribute.stringattributeconstraints": {
        "Required": "No",
        "Type": "StringAttributeConstraints",
        "UniqueKey": "cognito.userpool.schemaattribute.stringattributeconstraints",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.smsconfiguration.cfnproperties": [
        "SnsCallerArn",
        "ExternalId",
        "UniqueKey",
        "SampleValue"
    ],
    "cognito.userpool.smsconfiguration.externalid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.smsconfiguration.externalid",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.smsconfiguration.snscallerarn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.smsconfiguration.snscallerarn",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.stringattributeconstraints.cfnproperties": [
        "MinLength",
        "MaxLength",
        "UniqueKey",
        "SampleValue"
    ],
    "cognito.userpool.stringattributeconstraints.maxlength": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.stringattributeconstraints.maxlength",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.stringattributeconstraints.minlength": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.stringattributeconstraints.minlength",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.userpooladdons.advancedsecuritymode": {
        "Allowed Values": "AUDIT | ENFORCED | OFF",
        "AllowedValues": [
            "AUDIT",
            "ENFORCED",
            "OFF"
        ],
        "Pattern": "^[AUDIT|ENFORCED|OFF]",
        "Required": "No",
        "SampleValue": "AUDIT|ENFORCED|OFF",
        "Type": "String",
        "UniqueKey": "cognito.userpool.userpooladdons.advancedsecuritymode",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.userpooladdons.cfnproperties": [
        "AdvancedSecurityMode",
        "UniqueKey"
    ],
    "cognito.userpool.verificationmessagetemplate.cfnproperties": [
        "EmailMessageByLink",
        "EmailSubjectByLink",
        "DefaultEmailOption",
        "EmailMessage",
        "EmailSubject",
        "SmsMessage",
        "UniqueKey"
    ],
    "cognito.userpool.verificationmessagetemplate.defaultemailoption": {
        "Allowed Values": "CONFIRM_WITH_CODE | CONFIRM_WITH_LINK",
        "AllowedValues": [
            "CONFIRM_WITH_CODE",
            "CONFIRM_WITH_LINK"
        ],
        "Pattern": "^[CONFIRM_WITH_CODE|CONFIRM_WITH_LINK]",
        "Required": "No",
        "SampleValue": "CONFIRM_WITH_CODE|CONFIRM_WITH_LINK",
        "Type": "String",
        "UniqueKey": "cognito.userpool.verificationmessagetemplate.defaultemailoption",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.verificationmessagetemplate.emailmessage": {
        "Maximum": "20000",
        "Minimum": "6",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{####\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.verificationmessagetemplate.emailmessage",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.verificationmessagetemplate.emailmessagebylink": {
        "Maximum": "20000",
        "Minimum": "6",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{##[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*##\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.verificationmessagetemplate.emailmessagebylink",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.verificationmessagetemplate.emailsubject": {
        "Maximum": "140",
        "Minimum": "1",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.verificationmessagetemplate.emailsubject",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.verificationmessagetemplate.emailsubjectbylink": {
        "Maximum": "140",
        "Minimum": "1",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.verificationmessagetemplate.emailsubjectbylink",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpool.verificationmessagetemplate.smsmessage": {
        "Maximum": "140",
        "Minimum": "6",
        "Pattern": ".*\\{####\\}.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpool.verificationmessagetemplate.smsmessage",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolclient.analyticsconfiguration.applicationid": {
        "Pattern": "^[0-9a-fA-F]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolclient.analyticsconfiguration.applicationid",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolclient.analyticsconfiguration.cfnproperties": [
        "UserDataShared",
        "ExternalId",
        "RoleArn",
        "ApplicationId",
        "UniqueKey"
    ],
    "cognito.userpoolclient.analyticsconfiguration.externalid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolclient.analyticsconfiguration.externalid",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolclient.analyticsconfiguration.rolearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolclient.analyticsconfiguration.rolearn",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolclient.analyticsconfiguration.userdatashared": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpoolclient.analyticsconfiguration.userdatashared",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpooldomain.customdomainconfigtype.certificatearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpooldomain.customdomainconfigtype.certificatearn",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpooldomain.customdomainconfigtype.cfnproperties": [
        "CertificateArn",
        "UniqueKey"
    ],
    "cognito.userpoolresourceserver.resourceserverscopetype.cfnproperties": [
        "ScopeDescription",
        "ScopeName",
        "UniqueKey",
        "SampleValue"
    ],
    "cognito.userpoolresourceserver.resourceserverscopetype.scopedescription": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "Yes",
        "SampleValue": "TODO-cognito.userpoolresourceserver.resourceserverscopetype.scopedescription",
        "Type": "String",
        "UniqueKey": "cognito.userpoolresourceserver.resourceserverscopetype.scopedescription",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolresourceserver.resourceserverscopetype.scopename": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\x21\\x23-\\x2E\\x30-\\x5B\\x5D-\\x7E]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.userpoolresourceserver.resourceserverscopetype.scopename",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.cfnproperties": [
        "HighAction",
        "LowAction",
        "MediumAction",
        "UniqueKey"
    ],
    "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.highaction": {
        "Required": "No",
        "Type": "AccountTakeoverActionType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.highaction",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.lowaction": {
        "Required": "No",
        "Type": "AccountTakeoverActionType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.lowaction",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.mediumaction": {
        "Required": "No",
        "Type": "AccountTakeoverActionType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoveractionstype.mediumaction",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoveractiontype.cfnproperties": [
        "EventAction",
        "Notify",
        "UniqueKey",
        "SampleValue"
    ],
    "cognito.userpoolriskconfigurationattachment.accounttakeoveractiontype.eventaction": {
        "Allowed Values": "BLOCK | MFA_IF_CONFIGURED | MFA_REQUIRED | NO_ACTION",
        "AllowedValues": [
            "BLOCK",
            "MFA_IF_CONFIGURED",
            "MFA_REQUIRED",
            "NO_ACTION"
        ],
        "Pattern": "^[BLOCK|MFA_IF_CONFIGURED|MFA_REQUIRED|NO_ACTION]",
        "Required": "Yes",
        "SampleValue": "BLOCK|MFA_IF_CONFIGURED|MFA_REQUIRED|NO_ACTION",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoveractiontype.eventaction",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoveractiontype.notify": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoveractiontype.notify",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoverriskconfigurationtype.actions": {
        "Required": "Yes",
        "Type": "AccountTakeoverActionsType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoverriskconfigurationtype.actions",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.accounttakeoverriskconfigurationtype.cfnproperties": [
        "NotifyConfiguration",
        "Actions",
        "UniqueKey",
        "SampleValue"
    ],
    "cognito.userpoolriskconfigurationattachment.accounttakeoverriskconfigurationtype.notifyconfiguration": {
        "Required": "No",
        "Type": "NotifyConfigurationType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.accounttakeoverriskconfigurationtype.notifyconfiguration",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.compromisedcredentialsactionstype.cfnproperties": [
        "EventAction",
        "UniqueKey"
    ],
    "cognito.userpoolriskconfigurationattachment.compromisedcredentialsactionstype.eventaction": {
        "Allowed Values": "BLOCK | NO_ACTION",
        "AllowedValues": [
            "BLOCK",
            "NO_ACTION"
        ],
        "Pattern": "^[BLOCK|NO_ACTION]",
        "Required": "Yes",
        "SampleValue": "BLOCK|NO_ACTION",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.compromisedcredentialsactionstype.eventaction",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.compromisedcredentialsriskconfigurationtype.actions": {
        "Required": "Yes",
        "Type": "CompromisedCredentialsActionsType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.compromisedcredentialsriskconfigurationtype.actions",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.compromisedcredentialsriskconfigurationtype.cfnproperties": [
        "EventFilter",
        "Actions",
        "UniqueKey",
        "SampleValue"
    ],
    "cognito.userpoolriskconfigurationattachment.compromisedcredentialsriskconfigurationtype.eventfilter": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.compromisedcredentialsriskconfigurationtype.eventfilter",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.blockemail": {
        "Required": "No",
        "Type": "NotifyEmailType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.blockemail",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.cfnproperties": [
        "NoActionEmail",
        "From",
        "ReplyTo",
        "MfaEmail",
        "BlockEmail",
        "SourceArn",
        "UniqueKey"
    ],
    "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.from": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.from",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.mfaemail": {
        "Required": "No",
        "Type": "NotifyEmailType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.mfaemail",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.noactionemail": {
        "Required": "No",
        "Type": "NotifyEmailType",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.noactionemail",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.replyto": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.replyto",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.sourcearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyconfigurationtype.sourcearn",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.notifyemailtype.cfnproperties": [
        "Subject",
        "TextBody",
        "HtmlBody",
        "UniqueKey"
    ],
    "cognito.userpoolriskconfigurationattachment.notifyemailtype.htmlbody": {
        "Maximum": "20000",
        "Minimum": "6",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyemailtype.htmlbody",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.notifyemailtype.subject": {
        "Maximum": "140",
        "Minimum": "1",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyemailtype.subject",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.notifyemailtype.textbody": {
        "Maximum": "20000",
        "Minimum": "6",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.notifyemailtype.textbody",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.riskexceptionconfigurationtype.blockediprangelist": {
        "Maximum": "20",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.riskexceptionconfigurationtype.blockediprangelist",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpoolriskconfigurationattachment.riskexceptionconfigurationtype.cfnproperties": [
        "SkippedIPRangeList",
        "BlockedIPRangeList",
        "UniqueKey",
        "SampleValue"
    ],
    "cognito.userpoolriskconfigurationattachment.riskexceptionconfigurationtype.skippediprangelist": {
        "Maximum": "20",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cognito.userpoolriskconfigurationattachment.riskexceptionconfigurationtype.skippediprangelist",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpooluser.attributetype.cfnproperties": [
        "Name",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "cognito.userpooluser.attributetype.name": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpooluser.attributetype.name",
        "UpdateRequires": "No interruption"
    },
    "cognito.userpooluser.attributetype.value": {
        "Maximum": "2048",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cognito.userpooluser.attributetype.value",
        "UpdateRequires": "No interruption"
    },
    "config.configrule.scope.cfnproperties": [
        "TagKey",
        "ComplianceResourceId",
        "ComplianceResourceTypes",
        "TagValue",
        "UniqueKey"
    ],
    "config.configrule.scope.complianceresourceid": {
        "Maximum": "768",
        "Minimum": "1",
        "Pattern": "^.{1,768}$",
        "Required": "No",
        "SampleValue": "TODO-config.configrule.scope.complianceresourceid",
        "Type": "String",
        "UniqueKey": "config.configrule.scope.complianceresourceid",
        "UpdateRequires": "No interruption"
    },
    "config.configrule.scope.complianceresourcetypes": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "config.configrule.scope.complianceresourcetypes",
        "UpdateRequires": "No interruption"
    },
    "config.configrule.scope.tagkey": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-config.configrule.scope.tagkey",
        "Type": "String",
        "UniqueKey": "config.configrule.scope.tagkey",
        "UpdateRequires": "No interruption"
    },
    "config.configrule.scope.tagvalue": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-config.configrule.scope.tagvalue",
        "Type": "String",
        "UniqueKey": "config.configrule.scope.tagvalue",
        "UpdateRequires": "No interruption"
    },
    "config.configrule.source.cfnproperties": [
        "Owner",
        "SourceDetails",
        "SourceIdentifier",
        "UniqueKey"
    ],
    "config.configrule.source.owner": {
        "Allowed Values": "AWS | CUSTOM_LAMBDA",
        "AllowedValues": [
            "AWS",
            "CUSTOM_LAMBDA"
        ],
        "Pattern": "^[AWS|CUSTOM_LAMBDA]",
        "Required": "Yes",
        "SampleValue": "AWS|CUSTOM_LAMBDA",
        "Type": "String",
        "UniqueKey": "config.configrule.source.owner",
        "UpdateRequires": "No interruption"
    },
    "config.configrule.source.sourcedetails": {
        "Maximum": "25",
        "Required": "No",
        "Type": "List of [SourceDetail",
        "UniqueKey": "config.configrule.source.sourcedetails",
        "UpdateRequires": "No interruption"
    },
    "config.configrule.source.sourcedetails.cfnproperties": [
        "EventSource",
        "MessageType",
        "MaximumExecutionFrequency",
        "UniqueKey"
    ],
    "config.configrule.source.sourcedetails.eventsource": {
        "Allowed Values": "aws.config",
        "AllowedValues": [
            "aws.config"
        ],
        "Pattern": "^[aws.config]",
        "Required": "Yes",
        "SampleValue": "aws.config",
        "Type": "String",
        "UniqueKey": "config.configrule.source.sourcedetails.eventsource",
        "UpdateRequires": "No interruption"
    },
    "config.configrule.source.sourcedetails.maximumexecutionfrequency": {
        "Allowed Values": "One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours",
        "AllowedValues": [
            "One_Hour",
            "Six_Hours",
            "Three_Hours",
            "Twelve_Hours",
            "TwentyFour_Hours"
        ],
        "Pattern": "^[One_Hour|Six_Hours|Three_Hours|Twelve_Hours|TwentyFour_Hours]",
        "Required": "No",
        "SampleValue": "One_Hour|Six_Hours|Three_Hours|Twelve_Hours|TwentyFour_Hours",
        "Type": "String",
        "UniqueKey": "config.configrule.source.sourcedetails.maximumexecutionfrequency",
        "UpdateRequires": "No interruption"
    },
    "config.configrule.source.sourcedetails.messagetype": {
        "Allowed Values": "ConfigurationItemChangeNotification | ConfigurationSnapshotDeliveryCompleted | OversizedConfigurationItemChangeNotification | ScheduledNotification",
        "AllowedValues": [
            "ConfigurationItemChangeNotification",
            "ConfigurationSnapshotDeliveryCompleted",
            "OversizedConfigurationItemChangeNotification",
            "ScheduledNotification"
        ],
        "Pattern": "^[ConfigurationItemChangeNotification|ConfigurationSnapshotDeliveryCompleted|OversizedConfigurationItemChangeNotification|ScheduledNotification]",
        "Required": "Yes",
        "SampleValue": "ConfigurationItemChangeNotification|ConfigurationSnapshotDeliveryCompleted|OversizedConfigurationItemChangeNotification|ScheduledNotification",
        "Type": "String",
        "UniqueKey": "config.configrule.source.sourcedetails.messagetype",
        "UpdateRequires": "No interruption"
    },
    "config.configrule.source.sourceidentifier": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "Yes",
        "SampleValue": "TODO-config.configrule.source.sourceidentifier",
        "Type": "String",
        "UniqueKey": "config.configrule.source.sourceidentifier",
        "UpdateRequires": "No interruption"
    },
    "config.configurationaggregator.accountaggregationsource.accountids": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "config.configurationaggregator.accountaggregationsource.accountids",
        "UpdateRequires": "No interruption"
    },
    "config.configurationaggregator.accountaggregationsource.allawsregions": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "config.configurationaggregator.accountaggregationsource.allawsregions",
        "UpdateRequires": "No interruption"
    },
    "config.configurationaggregator.accountaggregationsource.awsregions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "config.configurationaggregator.accountaggregationsource.awsregions",
        "UpdateRequires": "No interruption"
    },
    "config.configurationaggregator.accountaggregationsource.cfnproperties": [
        "AllAwsRegions",
        "AccountIds",
        "AwsRegions",
        "UniqueKey"
    ],
    "config.configurationaggregator.organizationaggregationsource.allawsregions": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "config.configurationaggregator.organizationaggregationsource.allawsregions",
        "UpdateRequires": "No interruption"
    },
    "config.configurationaggregator.organizationaggregationsource.awsregions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "config.configurationaggregator.organizationaggregationsource.awsregions",
        "UpdateRequires": "No interruption"
    },
    "config.configurationaggregator.organizationaggregationsource.cfnproperties": [
        "AllAwsRegions",
        "AwsRegions",
        "RoleArn",
        "UniqueKey"
    ],
    "config.configurationaggregator.organizationaggregationsource.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "config.configurationaggregator.organizationaggregationsource.rolearn",
        "UpdateRequires": "No interruption"
    },
    "config.configurationrecorder.recordinggroup.allsupported": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "config.configurationrecorder.recordinggroup.allsupported",
        "UpdateRequires": "No interruption"
    },
    "config.configurationrecorder.recordinggroup.cfnproperties": [
        "AllSupported",
        "ResourceTypes",
        "IncludeGlobalResourceTypes",
        "UniqueKey"
    ],
    "config.configurationrecorder.recordinggroup.includeglobalresourcetypes": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "config.configurationrecorder.recordinggroup.includeglobalresourcetypes",
        "UpdateRequires": "No interruption"
    },
    "config.configurationrecorder.recordinggroup.resourcetypes": {
        "Required": "No",
        "SampleValue": "TODO-resourcetypes",
        "UniqueKey": "config.configurationrecorder.recordinggroup.resourcetypes",
        "UpdateRequires": "No interruption"
    },
    "config.deliverychannel.configsnapshotdeliveryproperties": [
        "DeliveryFrequency",
        "UniqueKey"
    ],
    "config.deliverychannel.configsnapshotdeliveryproperties.cfnproperties": [
        "DeliveryFrequency",
        "UniqueKey"
    ],
    "config.deliverychannel.configsnapshotdeliveryproperties.deliveryfrequency": {
        "Allowed Values": "One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours",
        "AllowedValues": [
            "One_Hour",
            "Six_Hours",
            "Three_Hours",
            "Twelve_Hours",
            "TwentyFour_Hours"
        ],
        "Pattern": "^[One_Hour|Six_Hours|Three_Hours|Twelve_Hours|TwentyFour_Hours]",
        "Required": "No",
        "SampleValue": "One_Hour|Six_Hours|Three_Hours|Twelve_Hours|TwentyFour_Hours",
        "Type": "String",
        "UniqueKey": "config.deliverychannel.configsnapshotdeliveryproperties.deliveryfrequency",
        "UpdateRequires": "No interruption"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.cfnproperties": [
        "TagKeyScope",
        "Description",
        "LambdaFunctionArn",
        "MaximumExecutionFrequency",
        "ResourceIdScope",
        "ResourceTypesScope",
        "InputParameters",
        "TagValueScope",
        "OrganizationConfigRuleTriggerTypes",
        "UniqueKey"
    ],
    "config.organizationconfigrule.organizationcustomrulemetadata.description": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "^.{0,256}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationcustomrulemetadata.description",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.description",
        "UpdateRequires": "No interruption"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.inputparameters": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationcustomrulemetadata.inputparameters",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.inputparameters",
        "UpdateRequires": "No interruption"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.lambdafunctionarn": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "Yes",
        "SampleValue": "TODO-config.organizationconfigrule.organizationcustomrulemetadata.lambdafunctionarn",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.lambdafunctionarn",
        "UpdateRequires": "No interruption"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.maximumexecutionfrequency": {
        "Allowed Values": "One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours",
        "AllowedValues": [
            "One_Hour",
            "Six_Hours",
            "Three_Hours",
            "Twelve_Hours",
            "TwentyFour_Hours"
        ],
        "Pattern": "^[One_Hour|Six_Hours|Three_Hours|Twelve_Hours|TwentyFour_Hours]",
        "Required": "No",
        "SampleValue": "One_Hour|Six_Hours|Three_Hours|Twelve_Hours|TwentyFour_Hours",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.maximumexecutionfrequency",
        "UpdateRequires": "No interruption"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.organizationconfigruletriggertypes": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.organizationconfigruletriggertypes",
        "UpdateRequires": "No interruption"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.resourceidscope": {
        "Maximum": "768",
        "Minimum": "1",
        "Pattern": "^.{1,768}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationcustomrulemetadata.resourceidscope",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.resourceidscope",
        "UpdateRequires": "No interruption"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.resourcetypesscope": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.resourcetypesscope",
        "UpdateRequires": "No interruption"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.tagkeyscope": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationcustomrulemetadata.tagkeyscope",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.tagkeyscope",
        "UpdateRequires": "No interruption"
    },
    "config.organizationconfigrule.organizationcustomrulemetadata.tagvaluescope": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationcustomrulemetadata.tagvaluescope",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationcustomrulemetadata.tagvaluescope",
        "UpdateRequires": "No interruption"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.cfnproperties": [
        "RuleIdentifier",
        "TagKeyScope",
        "Description",
        "MaximumExecutionFrequency",
        "ResourceIdScope",
        "ResourceTypesScope",
        "InputParameters",
        "TagValueScope",
        "UniqueKey"
    ],
    "config.organizationconfigrule.organizationmanagedrulemetadata.description": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "^.{0,256}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationmanagedrulemetadata.description",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.description",
        "UpdateRequires": "No interruption"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.inputparameters": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationmanagedrulemetadata.inputparameters",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.inputparameters",
        "UpdateRequires": "No interruption"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.maximumexecutionfrequency": {
        "Allowed Values": "One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours",
        "AllowedValues": [
            "One_Hour",
            "Six_Hours",
            "Three_Hours",
            "Twelve_Hours",
            "TwentyFour_Hours"
        ],
        "Pattern": "^[One_Hour|Six_Hours|Three_Hours|Twelve_Hours|TwentyFour_Hours]",
        "Required": "No",
        "SampleValue": "One_Hour|Six_Hours|Three_Hours|Twelve_Hours|TwentyFour_Hours",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.maximumexecutionfrequency",
        "UpdateRequires": "No interruption"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.resourceidscope": {
        "Maximum": "768",
        "Minimum": "1",
        "Pattern": "^.{1,768}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationmanagedrulemetadata.resourceidscope",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.resourceidscope",
        "UpdateRequires": "No interruption"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.resourcetypesscope": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.resourcetypesscope",
        "UpdateRequires": "No interruption"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.ruleidentifier": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "Yes",
        "SampleValue": "TODO-config.organizationconfigrule.organizationmanagedrulemetadata.ruleidentifier",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.ruleidentifier",
        "UpdateRequires": "No interruption"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.tagkeyscope": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationmanagedrulemetadata.tagkeyscope",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.tagkeyscope",
        "UpdateRequires": "No interruption"
    },
    "config.organizationconfigrule.organizationmanagedrulemetadata.tagvaluescope": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-config.organizationconfigrule.organizationmanagedrulemetadata.tagvaluescope",
        "Type": "String",
        "UniqueKey": "config.organizationconfigrule.organizationmanagedrulemetadata.tagvaluescope",
        "UpdateRequires": "No interruption"
    },
    "config.remediationconfiguration.executioncontrols.cfnproperties": [
        "SsmControls",
        "UniqueKey"
    ],
    "config.remediationconfiguration.executioncontrols.ssmcontrols": {
        "Required": "No",
        "Type": "SsmControls",
        "UniqueKey": "config.remediationconfiguration.executioncontrols.ssmcontrols",
        "UpdateRequires": "No interruption"
    },
    "config.remediationconfiguration.remediationparametervalue.cfnproperties": [
        "ResourceValue",
        "StaticValue",
        "UniqueKey",
        "SampleValue"
    ],
    "config.remediationconfiguration.remediationparametervalue.resourcevalue": {
        "Required": "No",
        "Type": "ResourceValue",
        "UniqueKey": "config.remediationconfiguration.remediationparametervalue.resourcevalue",
        "UpdateRequires": "No interruption"
    },
    "config.remediationconfiguration.remediationparametervalue.staticvalue": {
        "Required": "No",
        "Type": "StaticValue",
        "UniqueKey": "config.remediationconfiguration.remediationparametervalue.staticvalue",
        "UpdateRequires": "No interruption"
    },
    "config.remediationconfiguration.resourcevalue.cfnproperties": [
        "Value",
        "UniqueKey"
    ],
    "config.remediationconfiguration.resourcevalue.value": {
        "Allowed Values": "RESOURCE_ID",
        "AllowedValues": [
            "RESOURCE_ID"
        ],
        "Pattern": "^[RESOURCE_ID]",
        "Required": "No",
        "SampleValue": "RESOURCE_ID",
        "Type": "String",
        "UniqueKey": "config.remediationconfiguration.resourcevalue.value",
        "UpdateRequires": "No interruption"
    },
    "config.remediationconfiguration.ssmcontrols.cfnproperties": [
        "ConcurrentExecutionRatePercentage",
        "ErrorPercentage",
        "UniqueKey",
        "SampleValue"
    ],
    "config.remediationconfiguration.ssmcontrols.concurrentexecutionratepercentage": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[1,100]}$",
        "Required": "No",
        "SampleValue": "1...100",
        "Type": "Integer",
        "UniqueKey": "config.remediationconfiguration.ssmcontrols.concurrentexecutionratepercentage",
        "UpdateRequires": "No interruption"
    },
    "config.remediationconfiguration.ssmcontrols.errorpercentage": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[1,100]}$",
        "Required": "No",
        "SampleValue": "1...100",
        "Type": "Integer",
        "UniqueKey": "config.remediationconfiguration.ssmcontrols.errorpercentage",
        "UpdateRequires": "No interruption"
    },
    "config.remediationconfiguration.staticvalue.cfnproperties": [
        "Values",
        "UniqueKey"
    ],
    "config.remediationconfiguration.staticvalue.values": {
        "Maximum": "25",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "config.remediationconfiguration.staticvalue.values",
        "UpdateRequires": "No interruption"
    },
    "cw.alarm.actionsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "cw.alarm.actionsenabled",
        "UpdateRequires": "No interruption"
    },
    "cw.alarm.alarmactions": {
        "Maximum": "5",
        "Required": "No",
        "UniqueKey": "cw.alarm.alarmactions",
        "UpdateRequires": "No interruption"
    },
    "cw.alarm.alarmdescription": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": "^.{0,1024}$",
        "Required": "No",
        "SampleValue": "TODO-cw.alarm.alarmdescription",
        "Type": "String",
        "UniqueKey": "cw.alarm.alarmdescription",
        "UpdateRequires": "No interruption"
    },
    "cw.alarm.alarmname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "No",
        "SampleValue": "TODO-cw.alarm.alarmname",
        "Type": "String",
        "UniqueKey": "cw.alarm.alarmname",
        "UpdateRequires": "Replacement"
    },
    "cw.alarm.cfnproperties": [
        "EvaluationPeriods",
        "ExtendedStatistic",
        "TreatMissingData",
        "DatapointsToAlarm",
        "Dimensions",
        "AlarmActions",
        "AlarmDescription",
        "Namespace",
        "Period",
        "Metrics",
        "ComparisonOperator",
        "Unit",
        "AlarmName",
        "Statistic",
        "InsufficientDataActions",
        "Threshold",
        "EvaluateLowSampleCountPercentile",
        "OKActions",
        "ThresholdMetricId",
        "ActionsEnabled",
        "MetricName",
        "UniqueKey"
    ],
    "cw.alarm.comparisonoperator": {
        "Allowed Values": "GreaterThanOrEqualToThreshold | GreaterThanThreshold | GreaterThanUpperThreshold | LessThanLowerOrGreaterThanUpperThreshold | LessThanLowerThreshold | LessThanOrEqualToThreshold | LessThanThreshold",
        "AllowedValues": [
            "GreaterThanOrEqualToThreshold",
            "GreaterThanThreshold",
            "GreaterThanUpperThreshold",
            "LessThanLowerOrGreaterThanUpperThreshold",
            "LessThanLowerThreshold",
            "LessThanOrEqualToThreshold",
            "LessThanThreshold"
        ],
        "Pattern": "^[GreaterThanOrEqualToThreshold|GreaterThanThreshold|GreaterThanUpperThreshold|LessThanLowerOrGreaterThanUpperThreshold|LessThanLowerThreshold|LessThanOrEqualToThreshold|LessThanThreshold]",
        "Required": "Yes",
        "SampleValue": "GreaterThanOrEqualToThreshold|GreaterThanThreshold|GreaterThanUpperThreshold|LessThanLowerOrGreaterThanUpperThreshold|LessThanLowerThreshold|LessThanOrEqualToThreshold|LessThanThreshold",
        "Type": "String",
        "UniqueKey": "cw.alarm.comparisonoperator",
        "UpdateRequires": "No interruption"
    },
    "cw.alarm.datapointstoalarm": {
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "cw.alarm.datapointstoalarm",
        "UpdateRequires": "No interruption"
    },
    "cw.alarm.dimensions": {
        "Maximum": "10",
        "Required": "No",
        "Type": "List of [Dimension",
        "UniqueKey": "cw.alarm.dimensions",
        "UpdateRequires": "No interruption"
    },
    "cw.alarm.evaluatelowsamplecountpercentile": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "No",
        "SampleValue": "TODO-cw.alarm.evaluatelowsamplecountpercentile",
        "Type": "String",
        "UniqueKey": "cw.alarm.evaluatelowsamplecountpercentile",
        "UpdateRequires": "No interruption"
    },
    "cw.alarm.evaluationperiods": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "cw.alarm.evaluationperiods",
        "UpdateRequires": "No interruption"
    },
    "cw.alarm.extendedstatistic": {
        "Pattern": "p(\\d{1,2}(\\.\\d{0,2})?|100)",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cw.alarm.extendedstatistic",
        "UpdateRequires": "No interruption"
    },
    "cw.alarm.insufficientdataactions": {
        "Maximum": "5",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cw.alarm.insufficientdataactions",
        "UpdateRequires": "No interruption"
    },
    "cw.alarm.metricname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "No",
        "SampleValue": "TODO-cw.alarm.metricname",
        "Type": "String",
        "UniqueKey": "cw.alarm.metricname",
        "UpdateRequires": "No interruption"
    },
    "cw.alarm.metrics": {
        "Required": "No",
        "Type": "List of [MetricDataQuery",
        "UniqueKey": "cw.alarm.metrics",
        "UpdateRequires": "No interruption"
    },
    "cw.alarm.namespace": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "[^:].*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "cw.alarm.namespace",
        "UpdateRequires": "No interruption"
    },
    "cw.alarm.okactions": {
        "Maximum": "5",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "cw.alarm.okactions",
        "UpdateRequires": "No interruption"
    },
    "cw.alarm.period": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "cw.alarm.period",
        "UpdateRequires": "No interruption"
    },
    "cw.alarm.statistic": {
        "Allowed Values": "Average | Maximum | Minimum | SampleCount | Sum",
        "AllowedValues": [
            "Average",
            "Maximum",
            "Minimum",
            "SampleCount",
            "Sum"
        ],
        "Pattern": "^[Average|Maximum|Minimum|SampleCount|Sum]",
        "Required": "No",
        "SampleValue": "Average|Maximum|Minimum|SampleCount|Sum",
        "Type": "String",
        "UniqueKey": "cw.alarm.statistic",
        "UpdateRequires": "No interruption"
    },
    "cw.alarm.threshold": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "cw.alarm.threshold",
        "UpdateRequires": "No interruption"
    },
    "cw.alarm.thresholdmetricid": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "No",
        "SampleValue": "TODO-cw.alarm.thresholdmetricid",
        "Type": "String",
        "UniqueKey": "cw.alarm.thresholdmetricid",
        "UpdateRequires": "No interruption"
    },
    "cw.alarm.treatmissingdata": {
        "Maximum": "255",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "cw.alarm.treatmissingdata",
        "UpdateRequires": "No interruption"
    },
    "cw.alarm.unit": {
        "Allowed Values": "Bits | Bits/Second | Bytes | Bytes/Second | Count | Count/Second | Gigabits | Gigabits/Second | Gigabytes | Gigabytes/Second | Kilobits | Kilobits/Second | Kilobytes | Kilobytes/Second | Megabits | Megabits/Second | Megabytes | Megabytes/Second | Microseconds | Milliseconds | None | Percent | Seconds | Terabits | Terabits/Second | Terabytes | Terabytes/Second",
        "AllowedValues": [
            "Bits",
            "Bits/Second",
            "Bytes",
            "Bytes/Second",
            "Count",
            "Count/Second",
            "Gigabits",
            "Gigabits/Second",
            "Gigabytes",
            "Gigabytes/Second",
            "Kilobits",
            "Kilobits/Second",
            "Kilobytes",
            "Kilobytes/Second",
            "Megabits",
            "Megabits/Second",
            "Megabytes",
            "Megabytes/Second",
            "Microseconds",
            "Milliseconds",
            "None",
            "Percent",
            "Seconds",
            "Terabits",
            "Terabits/Second",
            "Terabytes",
            "Terabytes/Second"
        ],
        "Pattern": "^[Bits|Bits/Second|Bytes|Bytes/Second|Count|Count/Second|Gigabits|Gigabits/Second|Gigabytes|Gigabytes/Second|Kilobits|Kilobits/Second|Kilobytes|Kilobytes/Second|Megabits|Megabits/Second|Megabytes|Megabytes/Second|Microseconds|Milliseconds|None|Percent|Seconds|Terabits|Terabits/Second|Terabytes|Terabytes/Second]",
        "Required": "No",
        "SampleValue": "Bits|Bits/Second|Bytes|Bytes/Second|Count|Count/Second|Gigabits|Gigabits/Second|Gigabytes|Gigabytes/Second|Kilobits|Kilobits/Second|Kilobytes|Kilobytes/Second|Megabits|Megabits/Second|Megabytes|Megabytes/Second|Microseconds|Milliseconds|None|Percent|Seconds|Terabits|Terabits/Second|Terabytes|Terabytes/Second",
        "Type": "String",
        "UniqueKey": "cw.alarm.unit",
        "UpdateRequires": "No interruption"
    },
    "cw.dimension.cfnproperties": [
        "Name",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "cw.dimension.name": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-cw.dimension.name",
        "Type": "String",
        "UniqueKey": "cw.dimension.name",
        "UpdateRequires": "No interruption"
    },
    "cw.dimension.value": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-cw.dimension.value",
        "Type": "String",
        "UniqueKey": "cw.dimension.value",
        "UpdateRequires": "No interruption"
    },
    "datapipeline.pipeline.parameterobjects.attributes": {
        "Required": "Yes",
        "Type": "List of [ParameterAttribute",
        "UniqueKey": "datapipeline.pipeline.parameterobjects.attributes",
        "UpdateRequires": "No interruption"
    },
    "datapipeline.pipeline.parameterobjects.attributes.cfnproperties": [
        "StringValue",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "datapipeline.pipeline.parameterobjects.attributes.key": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.parameterobjects.attributes.key",
        "UpdateRequires": "No interruption"
    },
    "datapipeline.pipeline.parameterobjects.attributes.stringvalue": {
        "Maximum": "10240",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.parameterobjects.attributes.stringvalue",
        "UpdateRequires": "No interruption"
    },
    "datapipeline.pipeline.parameterobjects.cfnproperties": [
        "Attributes",
        "Id",
        "UniqueKey",
        "SampleValue"
    ],
    "datapipeline.pipeline.parameterobjects.id": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.parameterobjects.id",
        "UpdateRequires": "No interruption"
    },
    "datapipeline.pipeline.parametervalues.cfnproperties": [
        "StringValue",
        "Id",
        "UniqueKey",
        "SampleValue"
    ],
    "datapipeline.pipeline.parametervalues.id": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.parametervalues.id",
        "UpdateRequires": "No interruption"
    },
    "datapipeline.pipeline.parametervalues.stringvalue": {
        "Maximum": "10240",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.parametervalues.stringvalue",
        "UpdateRequires": "No interruption"
    },
    "datapipeline.pipeline.pipelineobjects.cfnproperties": [
        "Fields",
        "Id",
        "Name",
        "UniqueKey"
    ],
    "datapipeline.pipeline.pipelineobjects.fields": {
        "Required": "Yes",
        "Type": "List of [Field",
        "UniqueKey": "datapipeline.pipeline.pipelineobjects.fields",
        "UpdateRequires": "No interruption"
    },
    "datapipeline.pipeline.pipelineobjects.fields.cfnproperties": [
        "StringValue",
        "RefValue",
        "Key",
        "UniqueKey"
    ],
    "datapipeline.pipeline.pipelineobjects.fields.key": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "UniqueKey": "datapipeline.pipeline.pipelineobjects.fields.key",
        "UpdateRequires": "No interruption"
    },
    "datapipeline.pipeline.pipelineobjects.fields.refvalue": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.pipelineobjects.fields.refvalue",
        "UpdateRequires": "No interruption"
    },
    "datapipeline.pipeline.pipelineobjects.fields.stringvalue": {
        "Maximum": "10240",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Conditional",
        "UniqueKey": "datapipeline.pipeline.pipelineobjects.fields.stringvalue",
        "UpdateRequires": "No interruption"
    },
    "datapipeline.pipeline.pipelineobjects.id": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.pipelineobjects.id",
        "UpdateRequires": "No interruption"
    },
    "datapipeline.pipeline.pipelineobjects.name": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.pipelineobjects.name",
        "UpdateRequires": "No interruption"
    },
    "datapipeline.pipeline.pipelinetags.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "datapipeline.pipeline.pipelinetags.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.pipelinetags.key",
        "UpdateRequires": "No interruption"
    },
    "datapipeline.pipeline.pipelinetags.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "datapipeline.pipeline.pipelinetags.value",
        "UpdateRequires": "No interruption"
    },
    "dax.cluster.ssespecification.cfnproperties": [
        "SSEEnabled",
        "UniqueKey"
    ],
    "dax.cluster.ssespecification.sseenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dax.cluster.ssespecification.sseenabled",
        "UpdateRequires": "No interruption"
    },
    "directoryservice.microsoftad.vpcsettings.cfnproperties": [
        "SubnetIds",
        "VpcId",
        "UniqueKey",
        "SampleValue"
    ],
    "directoryservice.microsoftad.vpcsettings.subnetids": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "directoryservice.microsoftad.vpcsettings.subnetids",
        "UpdateRequires": "No interruption"
    },
    "directoryservice.microsoftad.vpcsettings.vpcid": {
        "Pattern": "^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "directoryservice.microsoftad.vpcsettings.vpcid",
        "UpdateRequires": "No interruption"
    },
    "directoryservice.simplead.vpcsettings.cfnproperties": [
        "SubnetIds",
        "VpcId",
        "UniqueKey",
        "SampleValue"
    ],
    "directoryservice.simplead.vpcsettings.subnetids": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "directoryservice.simplead.vpcsettings.subnetids",
        "UpdateRequires": "No interruption"
    },
    "directoryservice.simplead.vpcsettings.vpcid": {
        "Pattern": "^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "directoryservice.simplead.vpcsettings.vpcid",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.createrule.cfnproperties": [
        "Interval",
        "IntervalUnit",
        "Times",
        "UniqueKey"
    ],
    "dlm.lifecyclepolicy.createrule.interval": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "dlm.lifecyclepolicy.createrule.interval",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.createrule.intervalunit": {
        "Allowed Values": "HOURS",
        "AllowedValues": [
            "HOURS"
        ],
        "Pattern": "^[HOURS]",
        "Required": "Yes",
        "SampleValue": "HOURS",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.createrule.intervalunit",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.createrule.times": {
        "Maximum": "1",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "dlm.lifecyclepolicy.createrule.times",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.crossregioncopyretainrule.cfnproperties": [
        "Interval",
        "IntervalUnit",
        "UniqueKey",
        "SampleValue"
    ],
    "dlm.lifecyclepolicy.crossregioncopyretainrule.interval": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyretainrule.interval",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.crossregioncopyretainrule.intervalunit": {
        "Allowed Values": "DAYS | MONTHS | WEEKS | YEARS",
        "AllowedValues": [
            "DAYS",
            "MONTHS",
            "WEEKS",
            "YEARS"
        ],
        "Pattern": "^[DAYS|MONTHS|WEEKS|YEARS]",
        "Required": "No",
        "SampleValue": "DAYS|MONTHS|WEEKS|YEARS",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyretainrule.intervalunit",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.crossregioncopyrule.cfnproperties": [
        "CopyTags",
        "Encrypted",
        "CmkArn",
        "RetainRule",
        "TargetRegion",
        "UniqueKey"
    ],
    "dlm.lifecyclepolicy.crossregioncopyrule.cmkarn": {
        "Maximum": "2048",
        "Minimum": "0",
        "Pattern": "arn:aws(-[a-z]{1,3}){0,2}:kms:([a-z]+-){2,3}\\d:\\d+:key/.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyrule.cmkarn",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.crossregioncopyrule.copytags": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyrule.copytags",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.crossregioncopyrule.encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyrule.encrypted",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.crossregioncopyrule.retainrule": {
        "Required": "No",
        "Type": "CrossRegionCopyRetainRule",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyrule.retainrule",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.crossregioncopyrule.targetregion": {
        "Maximum": "16",
        "Minimum": "0",
        "Pattern": "([a-z]+-){2,3}\\d",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.crossregioncopyrule.targetregion",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.fastrestorerule.availabilityzones": {
        "Maximum": "10",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "dlm.lifecyclepolicy.fastrestorerule.availabilityzones",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.fastrestorerule.cfnproperties": [
        "Count",
        "Interval",
        "AvailabilityZones",
        "IntervalUnit",
        "UniqueKey"
    ],
    "dlm.lifecyclepolicy.fastrestorerule.count": {
        "Maximum": "1000",
        "Minimum": "1",
        "Pattern": "^[1,1000]}$",
        "Required": "No",
        "SampleValue": "1...1000",
        "Type": "Integer",
        "UniqueKey": "dlm.lifecyclepolicy.fastrestorerule.count",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.fastrestorerule.interval": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dlm.lifecyclepolicy.fastrestorerule.interval",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.fastrestorerule.intervalunit": {
        "Allowed Values": "DAYS | MONTHS | WEEKS | YEARS",
        "AllowedValues": [
            "DAYS",
            "MONTHS",
            "WEEKS",
            "YEARS"
        ],
        "Pattern": "^[DAYS|MONTHS|WEEKS|YEARS]",
        "Required": "No",
        "SampleValue": "DAYS|MONTHS|WEEKS|YEARS",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.fastrestorerule.intervalunit",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.parameters.cfnproperties": [
        "ExcludeBootVolume",
        "UniqueKey"
    ],
    "dlm.lifecyclepolicy.parameters.excludebootvolume": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dlm.lifecyclepolicy.parameters.excludebootvolume",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.policydetails.cfnproperties": [
        "ResourceTypes",
        "PolicyType",
        "TargetTags",
        "Parameters",
        "Schedules",
        "UniqueKey"
    ],
    "dlm.lifecyclepolicy.policydetails.parameters": {
        "Required": "No",
        "Type": "Parameters",
        "UniqueKey": "dlm.lifecyclepolicy.policydetails.parameters",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.policydetails.policytype": {
        "Allowed Values": "EBS_SNAPSHOT_MANAGEMENT",
        "AllowedValues": [
            "EBS_SNAPSHOT_MANAGEMENT"
        ],
        "Pattern": "^[EBS_SNAPSHOT_MANAGEMENT]",
        "Required": "No",
        "SampleValue": "EBS_SNAPSHOT_MANAGEMENT",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.policydetails.policytype",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.policydetails.resourcetypes": {
        "Maximum": "1",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "dlm.lifecyclepolicy.policydetails.resourcetypes",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.policydetails.schedules": {
        "Maximum": "1",
        "Required": "Yes",
        "Type": "List of [Schedule",
        "UniqueKey": "dlm.lifecyclepolicy.policydetails.schedules",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.policydetails.targettags": {
        "Maximum": "50",
        "Required": "Yes",
        "Type": "List of [Tag",
        "UniqueKey": "dlm.lifecyclepolicy.policydetails.targettags",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.retainrule.cfnproperties": [
        "Count",
        "Interval",
        "IntervalUnit",
        "UniqueKey"
    ],
    "dlm.lifecyclepolicy.retainrule.count": {
        "Maximum": "1000",
        "Minimum": "1",
        "Pattern": "^[1,1000]}$",
        "Required": "No",
        "SampleValue": "1...1000",
        "Type": "Integer",
        "UniqueKey": "dlm.lifecyclepolicy.retainrule.count",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.retainrule.interval": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dlm.lifecyclepolicy.retainrule.interval",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.retainrule.intervalunit": {
        "Allowed Values": "DAYS | MONTHS | WEEKS | YEARS",
        "AllowedValues": [
            "DAYS",
            "MONTHS",
            "WEEKS",
            "YEARS"
        ],
        "Pattern": "^[DAYS|MONTHS|WEEKS|YEARS]",
        "Required": "No",
        "SampleValue": "DAYS|MONTHS|WEEKS|YEARS",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.retainrule.intervalunit",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.schedule.cfnproperties": [
        "CopyTags",
        "CrossRegionCopyRules",
        "RetainRule",
        "Name",
        "TagsToAdd",
        "CreateRule",
        "FastRestoreRule",
        "VariableTags",
        "UniqueKey"
    ],
    "dlm.lifecyclepolicy.schedule.copytags": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.copytags",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.schedule.createrule": {
        "Required": "No",
        "Type": "CreateRule",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.createrule",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.schedule.crossregioncopyrules": {
        "Maximum": "3",
        "Required": "No",
        "Type": "List of [CrossRegionCopyRule",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.crossregioncopyrules",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.schedule.fastrestorerule": {
        "Required": "No",
        "Type": "FastRestoreRule",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.fastrestorerule",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.schedule.name": {
        "Maximum": "500",
        "Minimum": "0",
        "Pattern": "[\\p{all}]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.name",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.schedule.retainrule": {
        "Required": "No",
        "Type": "RetainRule",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.retainrule",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.schedule.tagstoadd": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.tagstoadd",
        "UpdateRequires": "No interruption"
    },
    "dlm.lifecyclepolicy.schedule.variabletags": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "dlm.lifecyclepolicy.schedule.variabletags",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.dynamodbsettings.cfnproperties": [
        "ServiceAccessRoleArn",
        "UniqueKey"
    ],
    "dms.endpoint.dynamodbsettings.serviceaccessrolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.dynamodbsettings.serviceaccessrolearn",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.elasticsearchsettings.cfnproperties": [
        "EndpointUri",
        "FullLoadErrorPercentage",
        "ServiceAccessRoleArn",
        "ErrorRetryDuration",
        "UniqueKey"
    ],
    "dms.endpoint.elasticsearchsettings.endpointuri": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.elasticsearchsettings.endpointuri",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.elasticsearchsettings.errorretryduration": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dms.endpoint.elasticsearchsettings.errorretryduration",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.elasticsearchsettings.fullloaderrorpercentage": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dms.endpoint.elasticsearchsettings.fullloaderrorpercentage",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.elasticsearchsettings.serviceaccessrolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.elasticsearchsettings.serviceaccessrolearn",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.kinesissettings.cfnproperties": [
        "ServiceAccessRoleArn",
        "StreamArn",
        "MessageFormat",
        "UniqueKey"
    ],
    "dms.endpoint.kinesissettings.messageformat": {
        "Allowed Values": "json",
        "AllowedValues": [
            "json"
        ],
        "Pattern": "^[json]",
        "Required": "No",
        "SampleValue": "json",
        "Type": "String",
        "UniqueKey": "dms.endpoint.kinesissettings.messageformat",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.kinesissettings.serviceaccessrolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.kinesissettings.serviceaccessrolearn",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.kinesissettings.streamarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.kinesissettings.streamarn",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.mongodbsettings.authmechanism": {
        "Allowed Values": "default | mongodb_cr | scram_sha_1",
        "AllowedValues": [
            "default",
            "mongodb_cr",
            "scram_sha_1"
        ],
        "Pattern": "^[default|mongodb_cr|scram_sha_1]",
        "Required": "No",
        "SampleValue": "default|mongodb_cr|scram_sha_1",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.authmechanism",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.mongodbsettings.authsource": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.authsource",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.mongodbsettings.authtype": {
        "Allowed Values": "no | password",
        "AllowedValues": [
            "no",
            "password"
        ],
        "Pattern": "^[no|password]",
        "Required": "No",
        "SampleValue": "no|password",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.authtype",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.mongodbsettings.cfnproperties": [
        "NestingLevel",
        "Username",
        "AuthType",
        "Password",
        "ServerName",
        "AuthMechanism",
        "DocsToInvestigate",
        "DatabaseName",
        "ExtractDocId",
        "AuthSource",
        "Port",
        "UniqueKey"
    ],
    "dms.endpoint.mongodbsettings.databasename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.databasename",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.mongodbsettings.docstoinvestigate": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.docstoinvestigate",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.mongodbsettings.extractdocid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.extractdocid",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.mongodbsettings.nestinglevel": {
        "Allowed Values": "none | one",
        "AllowedValues": [
            "none",
            "one"
        ],
        "Pattern": "^[none|one]",
        "Required": "No",
        "SampleValue": "none|one",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.nestinglevel",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.mongodbsettings.password": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.password",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.mongodbsettings.port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "dms.endpoint.mongodbsettings.port",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.mongodbsettings.servername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.servername",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.mongodbsettings.username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.mongodbsettings.username",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.s3settings.bucketfolder": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.bucketfolder",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.s3settings.bucketname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.bucketname",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.s3settings.cfnproperties": [
        "CompressionType",
        "BucketFolder",
        "CsvRowDelimiter",
        "CsvDelimiter",
        "ServiceAccessRoleArn",
        "ExternalTableDefinition",
        "BucketName",
        "UniqueKey"
    ],
    "dms.endpoint.s3settings.compressiontype": {
        "Allowed Values": "gzip | none",
        "AllowedValues": [
            "gzip",
            "none"
        ],
        "Pattern": "^[gzip|none]",
        "Required": "No",
        "SampleValue": "gzip|none",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.compressiontype",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.s3settings.csvdelimiter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.csvdelimiter",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.s3settings.csvrowdelimiter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.csvrowdelimiter",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.s3settings.externaltabledefinition": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.externaltabledefinition",
        "UpdateRequires": "No interruption"
    },
    "dms.endpoint.s3settings.serviceaccessrolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dms.endpoint.s3settings.serviceaccessrolearn",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.attributedef.attributename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dynamodb.attributedef.attributename",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.attributedef.attributetype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dynamodb.attributedef.attributetype",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.attributedef.cfnproperties": [
        "AttributeName",
        "AttributeType",
        "UniqueKey",
        "SampleValue"
    ],
    "dynamodb.gsi.cfnproperties": [
        "KeySchema",
        "IndexName",
        "Projection",
        "ProvisionedThroughput",
        "UniqueKey"
    ],
    "dynamodb.gsi.indexname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dynamodb.gsi.indexname",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.gsi.keyschema": {
        "Required": "Yes",
        "SampleValue": "TODO-keyschema",
        "UniqueKey": "dynamodb.gsi.keyschema",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.gsi.projection": {
        "Required": "Yes",
        "Type": "Projection",
        "UniqueKey": "dynamodb.gsi.projection",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.gsi.provisionedthroughput": {
        "Required": "No",
        "SampleValue": "TODO-provisionedthroughput",
        "UniqueKey": "dynamodb.gsi.provisionedthroughput",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.keyschema.attributename": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "Yes",
        "SampleValue": "TODO-dynamodb.keyschema.attributename",
        "Type": "String",
        "UniqueKey": "dynamodb.keyschema.attributename",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.keyschema.cfnproperties": [
        "KeyType",
        "AttributeName",
        "UniqueKey",
        "SampleValue"
    ],
    "dynamodb.keyschema.keytype": {
        "Required": "Yes",
        "SampleValue": "TODO-keytype",
        "UniqueKey": "dynamodb.keyschema.keytype",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.lsi.cfnproperties": [
        "KeySchema",
        "IndexName",
        "Projection",
        "UniqueKey"
    ],
    "dynamodb.lsi.indexname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dynamodb.lsi.indexname",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.lsi.keyschema": {
        "Required": "Yes",
        "SampleValue": "TODO-keyschema",
        "UniqueKey": "dynamodb.lsi.keyschema",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.lsi.projection": {
        "Required": "Yes",
        "Type": "Projection",
        "UniqueKey": "dynamodb.lsi.projection",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.projectionobject.cfnproperties": [
        "ProjectionType",
        "NonKeyAttributes",
        "UniqueKey",
        "SampleValue"
    ],
    "dynamodb.projectionobject.nonkeyattributes": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "dynamodb.projectionobject.nonkeyattributes",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.projectionobject.projectiontype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dynamodb.projectionobject.projectiontype",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.provisionedthroughput.cfnproperties": [
        "WriteCapacityUnits",
        "ReadCapacityUnits",
        "UniqueKey",
        "SampleValue"
    ],
    "dynamodb.provisionedthroughput.readcapacityunits": {
        "Required": "Yes",
        "SampleValue": "TODO-readcapacityunits",
        "UniqueKey": "dynamodb.provisionedthroughput.readcapacityunits",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.provisionedthroughput.writecapacityunits": {
        "Required": "Yes",
        "SampleValue": "TODO-writecapacityunits",
        "UniqueKey": "dynamodb.provisionedthroughput.writecapacityunits",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.streamspecification.cfnproperties": [
        "StreamViewType",
        "UniqueKey"
    ],
    "dynamodb.streamspecification.streamviewtype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dynamodb.streamspecification.streamviewtype",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.table.pointintimerecoveryspecification.cfnproperties": [
        "PointInTimeRecoveryEnabled",
        "UniqueKey"
    ],
    "dynamodb.table.pointintimerecoveryspecification.pointintimerecoveryenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dynamodb.table.pointintimerecoveryspecification.pointintimerecoveryenabled",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.table.ssespecification.cfnproperties": [
        "SSEType",
        "KMSMasterKeyId",
        "SSEEnabled",
        "UniqueKey"
    ],
    "dynamodb.table.ssespecification.kmsmasterkeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dynamodb.table.ssespecification.kmsmasterkeyid",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.table.ssespecification.sseenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dynamodb.table.ssespecification.sseenabled",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.table.ssespecification.ssetype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "dynamodb.table.ssespecification.ssetype",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.timetolivespecification.attributename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "dynamodb.timetolivespecification.attributename",
        "UpdateRequires": "No interruption"
    },
    "dynamodb.timetolivespecification.cfnproperties": [
        "Enabled",
        "AttributeName",
        "UniqueKey",
        "SampleValue"
    ],
    "dynamodb.timetolivespecification.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "dynamodb.timetolivespecification.enabled",
        "UpdateRequires": "No interruption"
    },
    "ec2.blockdev.mapping.cfnproperties": [
        "VirtualName",
        "DeviceName",
        "NoDevice",
        "Ebs",
        "UniqueKey"
    ],
    "ec2.blockdev.mapping.devicename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.blockdev.mapping.devicename",
        "UpdateRequires": "No interruption"
    },
    "ec2.blockdev.mapping.ebs": {
        "Required": "Conditional",
        "Type": "Ebs",
        "UniqueKey": "ec2.blockdev.mapping.ebs",
        "UpdateRequires": "No interruption"
    },
    "ec2.blockdev.mapping.nodevice": {
        "Required": "No",
        "Type": "NoDevice",
        "UniqueKey": "ec2.blockdev.mapping.nodevice",
        "UpdateRequires": "No interruption"
    },
    "ec2.blockdev.mapping.virtualname": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.blockdev.mapping.virtualname",
        "UpdateRequires": "No interruption",
        "VirtualName`  <a name=\"cfn-ec2-blockdev-mapping-virtualname\"></a>\nThe virtual device name \\(`ephemeral`N\\)\\. The name must be in the form `ephemeral`*X* where *X* is a number starting from zero \\(0\\)\\. For example, an instance type with 2 available instance store volumes can specify mappings for `ephemeral0` and `ephemeral1`\\. The number of available instance store volumes depends on the instance type\\. After you connect to the instance, you must mount the volume\\.  \nNVMe instance store volumes are automatically enumerated and assigned a device name\\. Including them in your block device mapping has no effect\\.  \nYou can specify either `VirtualName` or `Ebs`, but not both\\.  \n *Constraints": "For M3 instances, you must specify instance store volumes in the block device mapping for the instance\\. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI\\."
    },
    "ec2.blockdev.template.cfnproperties": [
        "VolumeSize",
        "Encrypted",
        "VolumeType",
        "KmsKeyId",
        "DeleteOnTermination",
        "SnapshotId",
        "Iops",
        "UniqueKey"
    ],
    "ec2.blockdev.template.deleteontermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.blockdev.template.deleteontermination",
        "UpdateRequires": "No interruption"
    },
    "ec2.blockdev.template.encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ec2.blockdev.template.encrypted",
        "UpdateRequires": "No interruption"
    },
    "ec2.blockdev.template.iops": {
        "Required": "Conditional",
        "SampleValue": "TODO-iops",
        "UniqueKey": "ec2.blockdev.template.iops",
        "UpdateRequires": "No interruption"
    },
    "ec2.blockdev.template.kmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.blockdev.template.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "ec2.blockdev.template.snapshotid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.blockdev.template.snapshotid",
        "UpdateRequires": "No interruption"
    },
    "ec2.blockdev.template.volumesize": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "ec2.blockdev.template.volumesize",
        "UpdateRequires": "No interruption"
    },
    "ec2.blockdev.template.volumetype": {
        "AllowedValues": [
            "gp2",
            "io1",
            "sc1",
            "st1",
            "standard"
        ],
        "Pattern": "^[gp2|io1|sc1|st1|standard]",
        "Required": "No",
        "SampleValue": "gp2|io1|sc1|st1|standard",
        "UniqueKey": "ec2.blockdev.template.volumetype",
        "UpdateRequires": "No interruption"
    },
    "ec2.capacityreservation.tag.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.capacityreservation.tag.key",
        "UpdateRequires": "No interruption"
    },
    "ec2.capacityreservation.tag.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.capacityreservation.tag.value",
        "UpdateRequires": "No interruption"
    },
    "ec2.capacityreservation.tagspecification.cfnproperties": [
        "ResourceType",
        "Tags",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.capacityreservation.tagspecification.resourcetype": {
        "Allowed Values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | elastic-ip | fleet | fpga-image | host-reservation | image | instance | internet-gateway | key-pair | launch-template | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-peering-connection | vpn-connection | vpn-gateway",
        "AllowedValues": [
            "client-vpn-endpoint",
            "customer-gateway",
            "dedicated-host",
            "dhcp-options",
            "elastic-ip",
            "fleet",
            "fpga-image",
            "host-reservation",
            "image",
            "instance",
            "internet-gateway",
            "key-pair",
            "launch-template",
            "natgateway",
            "network-acl",
            "network-interface",
            "placement-group",
            "reserved-instances",
            "route-table",
            "security-group",
            "snapshot",
            "spot-fleet-request",
            "spot-instances-request",
            "subnet",
            "traffic-mirror-filter",
            "traffic-mirror-session",
            "traffic-mirror-target",
            "transit-gateway",
            "transit-gateway-attachment",
            "transit-gateway-multicast-domain",
            "transit-gateway-route-table",
            "volume",
            "vpc",
            "vpc-peering-connection",
            "vpn-connection",
            "vpn-gateway"
        ],
        "Pattern": "^[client-vpn-endpoint|customer-gateway|dedicated-host|dhcp-options|elastic-ip|fleet|fpga-image|host-reservation|image|instance|internet-gateway|key-pair|launch-template|natgateway|network-acl|network-interface|placement-group|reserved-instances|route-table|security-group|snapshot|spot-fleet-request|spot-instances-request|subnet|traffic-mirror-filter|traffic-mirror-session|traffic-mirror-target|transit-gateway|transit-gateway-attachment|transit-gateway-multicast-domain|transit-gateway-route-table|volume|vpc|vpc-peering-connection|vpn-connection|vpn-gateway]",
        "Required": "No",
        "SampleValue": "client-vpn-endpoint|customer-gateway|dedicated-host|dhcp-options|elastic-ip|fleet|fpga-image|host-reservation|image|instance|internet-gateway|key-pair|launch-template|natgateway|network-acl|network-interface|placement-group|reserved-instances|route-table|security-group|snapshot|spot-fleet-request|spot-instances-request|subnet|traffic-mirror-filter|traffic-mirror-session|traffic-mirror-target|transit-gateway|transit-gateway-attachment|transit-gateway-multicast-domain|transit-gateway-route-table|volume|vpc|vpc-peering-connection|vpn-connection|vpn-gateway",
        "Type": "String",
        "UniqueKey": "ec2.capacityreservation.tagspecification.resourcetype",
        "UpdateRequires": "No interruption"
    },
    "ec2.capacityreservation.tagspecification.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.capacityreservation.tagspecification.tags",
        "UpdateRequires": "No interruption"
    },
    "ec2.clientvpnendpoint.certificateauthenticationrequest.cfnproperties": [
        "ClientRootCertificateChainArn",
        "UniqueKey"
    ],
    "ec2.clientvpnendpoint.certificateauthenticationrequest.clientrootcertificatechainarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.certificateauthenticationrequest.clientrootcertificatechainarn",
        "UpdateRequires": "No interruption"
    },
    "ec2.clientvpnendpoint.clientauthenticationrequest.activedirectory": {
        "Required": "No",
        "SampleValue": "TODO-activedirectory",
        "UniqueKey": "ec2.clientvpnendpoint.clientauthenticationrequest.activedirectory",
        "UpdateRequires": "No interruption"
    },
    "ec2.clientvpnendpoint.clientauthenticationrequest.cfnproperties": [
        "MutualAuthentication",
        "Type",
        "ActiveDirectory",
        "UniqueKey"
    ],
    "ec2.clientvpnendpoint.clientauthenticationrequest.mutualauthentication": {
        "Required": "No",
        "SampleValue": "TODO-mutualauthentication",
        "UniqueKey": "ec2.clientvpnendpoint.clientauthenticationrequest.mutualauthentication",
        "UpdateRequires": "No interruption"
    },
    "ec2.clientvpnendpoint.clientauthenticationrequest.type": {
        "Allowed Values": "certificate-authentication | directory-service-authentication",
        "AllowedValues": [
            "certificate-authentication",
            "directory-service-authentication"
        ],
        "Pattern": "^[certificate-authentication|directory-service-authentication]",
        "Required": "Yes",
        "SampleValue": "certificate-authentication|directory-service-authentication",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.clientauthenticationrequest.type",
        "UpdateRequires": "No interruption"
    },
    "ec2.clientvpnendpoint.connectionlogoptions.cfnproperties": [
        "CloudwatchLogGroup",
        "Enabled",
        "CloudwatchLogStream",
        "UniqueKey"
    ],
    "ec2.clientvpnendpoint.connectionlogoptions.cloudwatchloggroup": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.connectionlogoptions.cloudwatchloggroup",
        "UpdateRequires": "No interruption"
    },
    "ec2.clientvpnendpoint.connectionlogoptions.cloudwatchlogstream": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.connectionlogoptions.cloudwatchlogstream",
        "UpdateRequires": "No interruption"
    },
    "ec2.clientvpnendpoint.connectionlogoptions.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.clientvpnendpoint.connectionlogoptions.enabled",
        "UpdateRequires": "No interruption"
    },
    "ec2.clientvpnendpoint.directoryserviceauthenticationrequest.cfnproperties": [
        "DirectoryId",
        "UniqueKey"
    ],
    "ec2.clientvpnendpoint.directoryserviceauthenticationrequest.directoryid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.directoryserviceauthenticationrequest.directoryid",
        "UpdateRequires": "No interruption"
    },
    "ec2.clientvpnendpoint.tagspecification.cfnproperties": [
        "ResourceType",
        "Tags",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.clientvpnendpoint.tagspecification.resourcetype": {
        "Allowed Values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | elastic-ip | fleet | fpga-image | host-reservation | image | instance | internet-gateway | key-pair | launch-template | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-peering-connection | vpn-connection | vpn-gateway",
        "AllowedValues": [
            "client-vpn-endpoint",
            "customer-gateway",
            "dedicated-host",
            "dhcp-options",
            "elastic-ip",
            "fleet",
            "fpga-image",
            "host-reservation",
            "image",
            "instance",
            "internet-gateway",
            "key-pair",
            "launch-template",
            "natgateway",
            "network-acl",
            "network-interface",
            "placement-group",
            "reserved-instances",
            "route-table",
            "security-group",
            "snapshot",
            "spot-fleet-request",
            "spot-instances-request",
            "subnet",
            "traffic-mirror-filter",
            "traffic-mirror-session",
            "traffic-mirror-target",
            "transit-gateway",
            "transit-gateway-attachment",
            "transit-gateway-multicast-domain",
            "transit-gateway-route-table",
            "volume",
            "vpc",
            "vpc-peering-connection",
            "vpn-connection",
            "vpn-gateway"
        ],
        "Pattern": "^[client-vpn-endpoint|customer-gateway|dedicated-host|dhcp-options|elastic-ip|fleet|fpga-image|host-reservation|image|instance|internet-gateway|key-pair|launch-template|natgateway|network-acl|network-interface|placement-group|reserved-instances|route-table|security-group|snapshot|spot-fleet-request|spot-instances-request|subnet|traffic-mirror-filter|traffic-mirror-session|traffic-mirror-target|transit-gateway|transit-gateway-attachment|transit-gateway-multicast-domain|transit-gateway-route-table|volume|vpc|vpc-peering-connection|vpn-connection|vpn-gateway]",
        "Required": "Yes",
        "SampleValue": "client-vpn-endpoint|customer-gateway|dedicated-host|dhcp-options|elastic-ip|fleet|fpga-image|host-reservation|image|instance|internet-gateway|key-pair|launch-template|natgateway|network-acl|network-interface|placement-group|reserved-instances|route-table|security-group|snapshot|spot-fleet-request|spot-instances-request|subnet|traffic-mirror-filter|traffic-mirror-session|traffic-mirror-target|transit-gateway|transit-gateway-attachment|transit-gateway-multicast-domain|transit-gateway-route-table|volume|vpc|vpc-peering-connection|vpn-connection|vpn-gateway",
        "Type": "String",
        "UniqueKey": "ec2.clientvpnendpoint.tagspecification.resourcetype",
        "UpdateRequires": "No interruption"
    },
    "ec2.clientvpnendpoint.tagspecification.tags": {
        "Required": "Yes",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.clientvpnendpoint.tagspecification.tags",
        "UpdateRequires": "No interruption"
    },
    "ec2.ebs.volume.autoenableio": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.ebs.volume.autoenableio",
        "UpdateRequires": "No interruption"
    },
    "ec2.ebs.volume.availabilityzone": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.ebs.volume.availabilityzone",
        "UpdateRequires": "No interruption"
    },
    "ec2.ebs.volume.cfnproperties": [
        "AvailabilityZone",
        "Tags",
        "Encrypted",
        "VolumeType",
        "KmsKeyId",
        "AutoEnableIO",
        "SnapshotId",
        "Iops",
        "Size",
        "UniqueKey"
    ],
    "ec2.ebs.volume.encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ec2.ebs.volume.encrypted",
        "UpdateRequires": "No interruption"
    },
    "ec2.ebs.volume.iops": {
        "Required": "No",
        "SampleValue": "TODO-iops",
        "UniqueKey": "ec2.ebs.volume.iops",
        "UpdateRequires": "No interruption"
    },
    "ec2.ebs.volume.kmskeyid": {
        "Required": "No",
        "SampleValue": "TODO-kmskeyid",
        "UniqueKey": "ec2.ebs.volume.kmskeyid",
        "UpdateRequires": "No interruption"
    },
    "ec2.ebs.volume.size": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.ebs.volume.size",
        "UpdateRequires": "No interruption"
    },
    "ec2.ebs.volume.snapshotid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ebs.volume.snapshotid",
        "UpdateRequires": "No interruption"
    },
    "ec2.ebs.volume.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.ebs.volume.tags",
        "UpdateRequires": "No interruption"
    },
    "ec2.ebs.volume.volumetype": {
        "Allowed Values": "gp2 | io1 | sc1 | st1 | standard",
        "AllowedValues": [
            "gp2",
            "io1",
            "sc1",
            "st1",
            "standard"
        ],
        "Pattern": "^[gp2|io1|sc1|st1|standard]",
        "Required": "No",
        "SampleValue": "gp2|io1|sc1|st1|standard",
        "Type": "String",
        "UniqueKey": "ec2.ebs.volume.volumetype",
        "UpdateRequires": "No interruption"
    },
    "ec2.ebs.volumeattachment.cfnproperties": [
        "Device",
        "InstanceId",
        "VolumeId",
        "UniqueKey"
    ],
    "ec2.ebs.volumeattachment.device": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.ebs.volumeattachment.device",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volumeattachment.instanceid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.ebs.volumeattachment.instanceid",
        "UpdateRequires": "Replacement"
    },
    "ec2.ebs.volumeattachment.volumeid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.ebs.volumeattachment.volumeid",
        "UpdateRequires": "Replacement"
    },
    "ec2.ec2fleet.fleetlaunchtemplateconfigrequest.cfnproperties": [
        "LaunchTemplateSpecification",
        "Overrides",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.ec2fleet.fleetlaunchtemplateconfigrequest.launchtemplatespecification": {
        "Required": "No",
        "Type": "FleetLaunchTemplateSpecificationRequest",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateconfigrequest.launchtemplatespecification",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.fleetlaunchtemplateconfigrequest.overrides": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of [FleetLaunchTemplateOverridesRequest",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateconfigrequest.overrides",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.availabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.availabilityzone",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.cfnproperties": [
        "AvailabilityZone",
        "MaxPrice",
        "WeightedCapacity",
        "Priority",
        "SubnetId",
        "InstanceType",
        "UniqueKey"
    ],
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.instancetype": {
        "Allowed Values": "a1.2xlarge | a1.4xlarge | a1.large | a1.medium | a1.metal | a1.xlarge | c1.medium | c1.xlarge | c3.2xlarge | c3.4xlarge | c3.8xlarge | c3.large | c3.xlarge | c4.2xlarge | c4.4xlarge | c4.8xlarge | c4.large | c4.xlarge | c5.12xlarge | c5.18xlarge | c5.24xlarge | c5.2xlarge | c5.4xlarge | c5.9xlarge | c5.large | c5.metal | c5.xlarge | c5d.12xlarge | c5d.18xlarge | c5d.24xlarge | c5d.2xlarge | c5d.4xlarge | c5d.9xlarge | c5d.large | c5d.metal | c5d.xlarge | c5n.18xlarge | c5n.2xlarge | c5n.4xlarge | c5n.9xlarge | c5n.large | c5n.xlarge | cc1.4xlarge | cc2.8xlarge | cg1.4xlarge | cr1.8xlarge | d2.2xlarge | d2.4xlarge | d2.8xlarge | d2.xlarge | f1.16xlarge | f1.2xlarge | f1.4xlarge | g2.2xlarge | g2.8xlarge | g3.16xlarge | g3.4xlarge | g3.8xlarge | g3s.xlarge | g4dn.12xlarge | g4dn.16xlarge | g4dn.2xlarge | g4dn.4xlarge | g4dn.8xlarge | g4dn.xlarge | h1.16xlarge | h1.2xlarge | h1.4xlarge | h1.8xlarge | hi1.4xlarge | hs1.8xlarge | i2.2xlarge | i2.4xlarge | i2.8xlarge | i2.xlarge | i3.16xlarge | i3.2xlarge | i3.4xlarge | i3.8xlarge | i3.large | i3.metal | i3.xlarge | i3en.12xlarge | i3en.24xlarge | i3en.2xlarge | i3en.3xlarge | i3en.6xlarge | i3en.large | i3en.metal | i3en.xlarge | inf1.24xlarge | inf1.2xlarge | inf1.6xlarge | inf1.xlarge | m1.large | m1.medium | m1.small | m1.xlarge | m2.2xlarge | m2.4xlarge | m2.xlarge | m3.2xlarge | m3.large | m3.medium | m3.xlarge | m4.10xlarge | m4.16xlarge | m4.2xlarge | m4.4xlarge | m4.large | m4.xlarge | m5.12xlarge | m5.16xlarge | m5.24xlarge | m5.2xlarge | m5.4xlarge | m5.8xlarge | m5.large | m5.metal | m5.xlarge | m5a.12xlarge | m5a.16xlarge | m5a.24xlarge | m5a.2xlarge | m5a.4xlarge | m5a.8xlarge | m5a.large | m5a.xlarge | m5ad.12xlarge | m5ad.16xlarge | m5ad.24xlarge | m5ad.2xlarge | m5ad.4xlarge | m5ad.8xlarge | m5ad.large | m5ad.xlarge | m5d.12xlarge | m5d.16xlarge | m5d.24xlarge | m5d.2xlarge | m5d.4xlarge | m5d.8xlarge | m5d.large | m5d.metal | m5d.xlarge | m5dn.12xlarge | m5dn.16xlarge | m5dn.24xlarge | m5dn.2xlarge | m5dn.4xlarge | m5dn.8xlarge | m5dn.large | m5dn.xlarge | m5n.12xlarge | m5n.16xlarge | m5n.24xlarge | m5n.2xlarge | m5n.4xlarge | m5n.8xlarge | m5n.large | m5n.xlarge | p2.16xlarge | p2.8xlarge | p2.xlarge | p3.16xlarge | p3.2xlarge | p3.8xlarge | p3dn.24xlarge | r3.2xlarge | r3.4xlarge | r3.8xlarge | r3.large | r3.xlarge | r4.16xlarge | r4.2xlarge | r4.4xlarge | r4.8xlarge | r4.large | r4.xlarge | r5.12xlarge | r5.16xlarge | r5.24xlarge | r5.2xlarge | r5.4xlarge | r5.8xlarge | r5.large | r5.metal | r5.xlarge | r5a.12xlarge | r5a.16xlarge | r5a.24xlarge | r5a.2xlarge | r5a.4xlarge | r5a.8xlarge | r5a.large | r5a.xlarge | r5ad.12xlarge | r5ad.16xlarge | r5ad.24xlarge | r5ad.2xlarge | r5ad.4xlarge | r5ad.8xlarge | r5ad.large | r5ad.xlarge | r5d.12xlarge | r5d.16xlarge | r5d.24xlarge | r5d.2xlarge | r5d.4xlarge | r5d.8xlarge | r5d.large | r5d.metal | r5d.xlarge | r5dn.12xlarge | r5dn.16xlarge | r5dn.24xlarge | r5dn.2xlarge | r5dn.4xlarge | r5dn.8xlarge | r5dn.large | r5dn.xlarge | r5n.12xlarge | r5n.16xlarge | r5n.24xlarge | r5n.2xlarge | r5n.4xlarge | r5n.8xlarge | r5n.large | r5n.xlarge | t1.micro | t2.2xlarge | t2.large | t2.medium | t2.micro | t2.nano | t2.small | t2.xlarge | t3.2xlarge | t3.large | t3.medium | t3.micro | t3.nano | t3.small | t3.xlarge | t3a.2xlarge | t3a.large | t3a.medium | t3a.micro | t3a.nano | t3a.small | t3a.xlarge | u-12tb1.metal | u-18tb1.metal | u-24tb1.metal | u-6tb1.metal | u-9tb1.metal | x1.16xlarge | x1.32xlarge | x1e.16xlarge | x1e.2xlarge | x1e.32xlarge | x1e.4xlarge | x1e.8xlarge | x1e.xlarge | z1d.12xlarge | z1d.2xlarge | z1d.3xlarge | z1d.6xlarge | z1d.large | z1d.metal | z1d.xlarge",
        "AllowedValues": [
            "a1.2xlarge",
            "a1.4xlarge",
            "a1.large",
            "a1.medium",
            "a1.metal",
            "a1.xlarge",
            "c1.medium",
            "c1.xlarge",
            "c3.2xlarge",
            "c3.4xlarge",
            "c3.8xlarge",
            "c3.large",
            "c3.xlarge",
            "c4.2xlarge",
            "c4.4xlarge",
            "c4.8xlarge",
            "c4.large",
            "c4.xlarge",
            "c5.12xlarge",
            "c5.18xlarge",
            "c5.24xlarge",
            "c5.2xlarge",
            "c5.4xlarge",
            "c5.9xlarge",
            "c5.large",
            "c5.metal",
            "c5.xlarge",
            "c5d.12xlarge",
            "c5d.18xlarge",
            "c5d.24xlarge",
            "c5d.2xlarge",
            "c5d.4xlarge",
            "c5d.9xlarge",
            "c5d.large",
            "c5d.metal",
            "c5d.xlarge",
            "c5n.18xlarge",
            "c5n.2xlarge",
            "c5n.4xlarge",
            "c5n.9xlarge",
            "c5n.large",
            "c5n.xlarge",
            "cc1.4xlarge",
            "cc2.8xlarge",
            "cg1.4xlarge",
            "cr1.8xlarge",
            "d2.2xlarge",
            "d2.4xlarge",
            "d2.8xlarge",
            "d2.xlarge",
            "f1.16xlarge",
            "f1.2xlarge",
            "f1.4xlarge",
            "g2.2xlarge",
            "g2.8xlarge",
            "g3.16xlarge",
            "g3.4xlarge",
            "g3.8xlarge",
            "g3s.xlarge",
            "g4dn.12xlarge",
            "g4dn.16xlarge",
            "g4dn.2xlarge",
            "g4dn.4xlarge",
            "g4dn.8xlarge",
            "g4dn.xlarge",
            "h1.16xlarge",
            "h1.2xlarge",
            "h1.4xlarge",
            "h1.8xlarge",
            "hi1.4xlarge",
            "hs1.8xlarge",
            "i2.2xlarge",
            "i2.4xlarge",
            "i2.8xlarge",
            "i2.xlarge",
            "i3.16xlarge",
            "i3.2xlarge",
            "i3.4xlarge",
            "i3.8xlarge",
            "i3.large",
            "i3.metal",
            "i3.xlarge",
            "i3en.12xlarge",
            "i3en.24xlarge",
            "i3en.2xlarge",
            "i3en.3xlarge",
            "i3en.6xlarge",
            "i3en.large",
            "i3en.metal",
            "i3en.xlarge",
            "inf1.24xlarge",
            "inf1.2xlarge",
            "inf1.6xlarge",
            "inf1.xlarge",
            "m1.large",
            "m1.medium",
            "m1.small",
            "m1.xlarge",
            "m2.2xlarge",
            "m2.4xlarge",
            "m2.xlarge",
            "m3.2xlarge",
            "m3.large",
            "m3.medium",
            "m3.xlarge",
            "m4.10xlarge",
            "m4.16xlarge",
            "m4.2xlarge",
            "m4.4xlarge",
            "m4.large",
            "m4.xlarge",
            "m5.12xlarge",
            "m5.16xlarge",
            "m5.24xlarge",
            "m5.2xlarge",
            "m5.4xlarge",
            "m5.8xlarge",
            "m5.large",
            "m5.metal",
            "m5.xlarge",
            "m5a.12xlarge",
            "m5a.16xlarge",
            "m5a.24xlarge",
            "m5a.2xlarge",
            "m5a.4xlarge",
            "m5a.8xlarge",
            "m5a.large",
            "m5a.xlarge",
            "m5ad.12xlarge",
            "m5ad.16xlarge",
            "m5ad.24xlarge",
            "m5ad.2xlarge",
            "m5ad.4xlarge",
            "m5ad.8xlarge",
            "m5ad.large",
            "m5ad.xlarge",
            "m5d.12xlarge",
            "m5d.16xlarge",
            "m5d.24xlarge",
            "m5d.2xlarge",
            "m5d.4xlarge",
            "m5d.8xlarge",
            "m5d.large",
            "m5d.metal",
            "m5d.xlarge",
            "m5dn.12xlarge",
            "m5dn.16xlarge",
            "m5dn.24xlarge",
            "m5dn.2xlarge",
            "m5dn.4xlarge",
            "m5dn.8xlarge",
            "m5dn.large",
            "m5dn.xlarge",
            "m5n.12xlarge",
            "m5n.16xlarge",
            "m5n.24xlarge",
            "m5n.2xlarge",
            "m5n.4xlarge",
            "m5n.8xlarge",
            "m5n.large",
            "m5n.xlarge",
            "p2.16xlarge",
            "p2.8xlarge",
            "p2.xlarge",
            "p3.16xlarge",
            "p3.2xlarge",
            "p3.8xlarge",
            "p3dn.24xlarge",
            "r3.2xlarge",
            "r3.4xlarge",
            "r3.8xlarge",
            "r3.large",
            "r3.xlarge",
            "r4.16xlarge",
            "r4.2xlarge",
            "r4.4xlarge",
            "r4.8xlarge",
            "r4.large",
            "r4.xlarge",
            "r5.12xlarge",
            "r5.16xlarge",
            "r5.24xlarge",
            "r5.2xlarge",
            "r5.4xlarge",
            "r5.8xlarge",
            "r5.large",
            "r5.metal",
            "r5.xlarge",
            "r5a.12xlarge",
            "r5a.16xlarge",
            "r5a.24xlarge",
            "r5a.2xlarge",
            "r5a.4xlarge",
            "r5a.8xlarge",
            "r5a.large",
            "r5a.xlarge",
            "r5ad.12xlarge",
            "r5ad.16xlarge",
            "r5ad.24xlarge",
            "r5ad.2xlarge",
            "r5ad.4xlarge",
            "r5ad.8xlarge",
            "r5ad.large",
            "r5ad.xlarge",
            "r5d.12xlarge",
            "r5d.16xlarge",
            "r5d.24xlarge",
            "r5d.2xlarge",
            "r5d.4xlarge",
            "r5d.8xlarge",
            "r5d.large",
            "r5d.metal",
            "r5d.xlarge",
            "r5dn.12xlarge",
            "r5dn.16xlarge",
            "r5dn.24xlarge",
            "r5dn.2xlarge",
            "r5dn.4xlarge",
            "r5dn.8xlarge",
            "r5dn.large",
            "r5dn.xlarge",
            "r5n.12xlarge",
            "r5n.16xlarge",
            "r5n.24xlarge",
            "r5n.2xlarge",
            "r5n.4xlarge",
            "r5n.8xlarge",
            "r5n.large",
            "r5n.xlarge",
            "t1.micro",
            "t2.2xlarge",
            "t2.large",
            "t2.medium",
            "t2.micro",
            "t2.nano",
            "t2.small",
            "t2.xlarge",
            "t3.2xlarge",
            "t3.large",
            "t3.medium",
            "t3.micro",
            "t3.nano",
            "t3.small",
            "t3.xlarge",
            "t3a.2xlarge",
            "t3a.large",
            "t3a.medium",
            "t3a.micro",
            "t3a.nano",
            "t3a.small",
            "t3a.xlarge",
            "u-12tb1.metal",
            "u-18tb1.metal",
            "u-24tb1.metal",
            "u-6tb1.metal",
            "u-9tb1.metal",
            "x1.16xlarge",
            "x1.32xlarge",
            "x1e.16xlarge",
            "x1e.2xlarge",
            "x1e.32xlarge",
            "x1e.4xlarge",
            "x1e.8xlarge",
            "x1e.xlarge",
            "z1d.12xlarge",
            "z1d.2xlarge",
            "z1d.3xlarge",
            "z1d.6xlarge",
            "z1d.large",
            "z1d.metal",
            "z1d.xlarge"
        ],
        "Pattern": "^[a1.2xlarge|a1.4xlarge|a1.large|a1.medium|a1.metal|a1.xlarge|c1.medium|c1.xlarge|c3.2xlarge|c3.4xlarge|c3.8xlarge|c3.large|c3.xlarge|c4.2xlarge|c4.4xlarge|c4.8xlarge|c4.large|c4.xlarge|c5.12xlarge|c5.18xlarge|c5.24xlarge|c5.2xlarge|c5.4xlarge|c5.9xlarge|c5.large|c5.metal|c5.xlarge|c5d.12xlarge|c5d.18xlarge|c5d.24xlarge|c5d.2xlarge|c5d.4xlarge|c5d.9xlarge|c5d.large|c5d.metal|c5d.xlarge|c5n.18xlarge|c5n.2xlarge|c5n.4xlarge|c5n.9xlarge|c5n.large|c5n.xlarge|cc1.4xlarge|cc2.8xlarge|cg1.4xlarge|cr1.8xlarge|d2.2xlarge|d2.4xlarge|d2.8xlarge|d2.xlarge|f1.16xlarge|f1.2xlarge|f1.4xlarge|g2.2xlarge|g2.8xlarge|g3.16xlarge|g3.4xlarge|g3.8xlarge|g3s.xlarge|g4dn.12xlarge|g4dn.16xlarge|g4dn.2xlarge|g4dn.4xlarge|g4dn.8xlarge|g4dn.xlarge|h1.16xlarge|h1.2xlarge|h1.4xlarge|h1.8xlarge|hi1.4xlarge|hs1.8xlarge|i2.2xlarge|i2.4xlarge|i2.8xlarge|i2.xlarge|i3.16xlarge|i3.2xlarge|i3.4xlarge|i3.8xlarge|i3.large|i3.metal|i3.xlarge|i3en.12xlarge|i3en.24xlarge|i3en.2xlarge|i3en.3xlarge|i3en.6xlarge|i3en.large|i3en.metal|i3en.xlarge|inf1.24xlarge|inf1.2xlarge|inf1.6xlarge|inf1.xlarge|m1.large|m1.medium|m1.small|m1.xlarge|m2.2xlarge|m2.4xlarge|m2.xlarge|m3.2xlarge|m3.large|m3.medium|m3.xlarge|m4.10xlarge|m4.16xlarge|m4.2xlarge|m4.4xlarge|m4.large|m4.xlarge|m5.12xlarge|m5.16xlarge|m5.24xlarge|m5.2xlarge|m5.4xlarge|m5.8xlarge|m5.large|m5.metal|m5.xlarge|m5a.12xlarge|m5a.16xlarge|m5a.24xlarge|m5a.2xlarge|m5a.4xlarge|m5a.8xlarge|m5a.large|m5a.xlarge|m5ad.12xlarge|m5ad.16xlarge|m5ad.24xlarge|m5ad.2xlarge|m5ad.4xlarge|m5ad.8xlarge|m5ad.large|m5ad.xlarge|m5d.12xlarge|m5d.16xlarge|m5d.24xlarge|m5d.2xlarge|m5d.4xlarge|m5d.8xlarge|m5d.large|m5d.metal|m5d.xlarge|m5dn.12xlarge|m5dn.16xlarge|m5dn.24xlarge|m5dn.2xlarge|m5dn.4xlarge|m5dn.8xlarge|m5dn.large|m5dn.xlarge|m5n.12xlarge|m5n.16xlarge|m5n.24xlarge|m5n.2xlarge|m5n.4xlarge|m5n.8xlarge|m5n.large|m5n.xlarge|p2.16xlarge|p2.8xlarge|p2.xlarge|p3.16xlarge|p3.2xlarge|p3.8xlarge|p3dn.24xlarge|r3.2xlarge|r3.4xlarge|r3.8xlarge|r3.large|r3.xlarge|r4.16xlarge|r4.2xlarge|r4.4xlarge|r4.8xlarge|r4.large|r4.xlarge|r5.12xlarge|r5.16xlarge|r5.24xlarge|r5.2xlarge|r5.4xlarge|r5.8xlarge|r5.large|r5.metal|r5.xlarge|r5a.12xlarge|r5a.16xlarge|r5a.24xlarge|r5a.2xlarge|r5a.4xlarge|r5a.8xlarge|r5a.large|r5a.xlarge|r5ad.12xlarge|r5ad.16xlarge|r5ad.24xlarge|r5ad.2xlarge|r5ad.4xlarge|r5ad.8xlarge|r5ad.large|r5ad.xlarge|r5d.12xlarge|r5d.16xlarge|r5d.24xlarge|r5d.2xlarge|r5d.4xlarge|r5d.8xlarge|r5d.large|r5d.metal|r5d.xlarge|r5dn.12xlarge|r5dn.16xlarge|r5dn.24xlarge|r5dn.2xlarge|r5dn.4xlarge|r5dn.8xlarge|r5dn.large|r5dn.xlarge|r5n.12xlarge|r5n.16xlarge|r5n.24xlarge|r5n.2xlarge|r5n.4xlarge|r5n.8xlarge|r5n.large|r5n.xlarge|t1.micro|t2.2xlarge|t2.large|t2.medium|t2.micro|t2.nano|t2.small|t2.xlarge|t3.2xlarge|t3.large|t3.medium|t3.micro|t3.nano|t3.small|t3.xlarge|t3a.2xlarge|t3a.large|t3a.medium|t3a.micro|t3a.nano|t3a.small|t3a.xlarge|u-12tb1.metal|u-18tb1.metal|u-24tb1.metal|u-6tb1.metal|u-9tb1.metal|x1.16xlarge|x1.32xlarge|x1e.16xlarge|x1e.2xlarge|x1e.32xlarge|x1e.4xlarge|x1e.8xlarge|x1e.xlarge|z1d.12xlarge|z1d.2xlarge|z1d.3xlarge|z1d.6xlarge|z1d.large|z1d.metal|z1d.xlarge]",
        "Required": "No",
        "SampleValue": "a1.2xlarge|a1.4xlarge|a1.large|a1.medium|a1.metal|a1.xlarge|c1.medium|c1.xlarge|c3.2xlarge|c3.4xlarge|c3.8xlarge|c3.large|c3.xlarge|c4.2xlarge|c4.4xlarge|c4.8xlarge|c4.large|c4.xlarge|c5.12xlarge|c5.18xlarge|c5.24xlarge|c5.2xlarge|c5.4xlarge|c5.9xlarge|c5.large|c5.metal|c5.xlarge|c5d.12xlarge|c5d.18xlarge|c5d.24xlarge|c5d.2xlarge|c5d.4xlarge|c5d.9xlarge|c5d.large|c5d.metal|c5d.xlarge|c5n.18xlarge|c5n.2xlarge|c5n.4xlarge|c5n.9xlarge|c5n.large|c5n.xlarge|cc1.4xlarge|cc2.8xlarge|cg1.4xlarge|cr1.8xlarge|d2.2xlarge|d2.4xlarge|d2.8xlarge|d2.xlarge|f1.16xlarge|f1.2xlarge|f1.4xlarge|g2.2xlarge|g2.8xlarge|g3.16xlarge|g3.4xlarge|g3.8xlarge|g3s.xlarge|g4dn.12xlarge|g4dn.16xlarge|g4dn.2xlarge|g4dn.4xlarge|g4dn.8xlarge|g4dn.xlarge|h1.16xlarge|h1.2xlarge|h1.4xlarge|h1.8xlarge|hi1.4xlarge|hs1.8xlarge|i2.2xlarge|i2.4xlarge|i2.8xlarge|i2.xlarge|i3.16xlarge|i3.2xlarge|i3.4xlarge|i3.8xlarge|i3.large|i3.metal|i3.xlarge|i3en.12xlarge|i3en.24xlarge|i3en.2xlarge|i3en.3xlarge|i3en.6xlarge|i3en.large|i3en.metal|i3en.xlarge|inf1.24xlarge|inf1.2xlarge|inf1.6xlarge|inf1.xlarge|m1.large|m1.medium|m1.small|m1.xlarge|m2.2xlarge|m2.4xlarge|m2.xlarge|m3.2xlarge|m3.large|m3.medium|m3.xlarge|m4.10xlarge|m4.16xlarge|m4.2xlarge|m4.4xlarge|m4.large|m4.xlarge|m5.12xlarge|m5.16xlarge|m5.24xlarge|m5.2xlarge|m5.4xlarge|m5.8xlarge|m5.large|m5.metal|m5.xlarge|m5a.12xlarge|m5a.16xlarge|m5a.24xlarge|m5a.2xlarge|m5a.4xlarge|m5a.8xlarge|m5a.large|m5a.xlarge|m5ad.12xlarge|m5ad.16xlarge|m5ad.24xlarge|m5ad.2xlarge|m5ad.4xlarge|m5ad.8xlarge|m5ad.large|m5ad.xlarge|m5d.12xlarge|m5d.16xlarge|m5d.24xlarge|m5d.2xlarge|m5d.4xlarge|m5d.8xlarge|m5d.large|m5d.metal|m5d.xlarge|m5dn.12xlarge|m5dn.16xlarge|m5dn.24xlarge|m5dn.2xlarge|m5dn.4xlarge|m5dn.8xlarge|m5dn.large|m5dn.xlarge|m5n.12xlarge|m5n.16xlarge|m5n.24xlarge|m5n.2xlarge|m5n.4xlarge|m5n.8xlarge|m5n.large|m5n.xlarge|p2.16xlarge|p2.8xlarge|p2.xlarge|p3.16xlarge|p3.2xlarge|p3.8xlarge|p3dn.24xlarge|r3.2xlarge|r3.4xlarge|r3.8xlarge|r3.large|r3.xlarge|r4.16xlarge|r4.2xlarge|r4.4xlarge|r4.8xlarge|r4.large|r4.xlarge|r5.12xlarge|r5.16xlarge|r5.24xlarge|r5.2xlarge|r5.4xlarge|r5.8xlarge|r5.large|r5.metal|r5.xlarge|r5a.12xlarge|r5a.16xlarge|r5a.24xlarge|r5a.2xlarge|r5a.4xlarge|r5a.8xlarge|r5a.large|r5a.xlarge|r5ad.12xlarge|r5ad.16xlarge|r5ad.24xlarge|r5ad.2xlarge|r5ad.4xlarge|r5ad.8xlarge|r5ad.large|r5ad.xlarge|r5d.12xlarge|r5d.16xlarge|r5d.24xlarge|r5d.2xlarge|r5d.4xlarge|r5d.8xlarge|r5d.large|r5d.metal|r5d.xlarge|r5dn.12xlarge|r5dn.16xlarge|r5dn.24xlarge|r5dn.2xlarge|r5dn.4xlarge|r5dn.8xlarge|r5dn.large|r5dn.xlarge|r5n.12xlarge|r5n.16xlarge|r5n.24xlarge|r5n.2xlarge|r5n.4xlarge|r5n.8xlarge|r5n.large|r5n.xlarge|t1.micro|t2.2xlarge|t2.large|t2.medium|t2.micro|t2.nano|t2.small|t2.xlarge|t3.2xlarge|t3.large|t3.medium|t3.micro|t3.nano|t3.small|t3.xlarge|t3a.2xlarge|t3a.large|t3a.medium|t3a.micro|t3a.nano|t3a.small|t3a.xlarge|u-12tb1.metal|u-18tb1.metal|u-24tb1.metal|u-6tb1.metal|u-9tb1.metal|x1.16xlarge|x1.32xlarge|x1e.16xlarge|x1e.2xlarge|x1e.32xlarge|x1e.4xlarge|x1e.8xlarge|x1e.xlarge|z1d.12xlarge|z1d.2xlarge|z1d.3xlarge|z1d.6xlarge|z1d.large|z1d.metal|z1d.xlarge",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.instancetype",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.maxprice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.maxprice",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.priority": {
        "Required": "No",
        "SampleValue": "TODO-priority",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.priority",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.subnetid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.subnetid",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.weightedcapacity": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplateoverridesrequest.weightedcapacity",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.cfnproperties": [
        "LaunchTemplateName",
        "Version",
        "LaunchTemplateId",
        "UniqueKey"
    ],
    "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.launchtemplateid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.launchtemplateid",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.launchtemplatename": {
        "Maximum": "128",
        "Minimum": "3",
        "Pattern": "[a-zA-Z0-9\\(\\)\\.\\-/_]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.launchtemplatename",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.fleetlaunchtemplatespecificationrequest.version",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.ondemandoptionsrequest.allocationstrategy": {
        "Allowed Values": "lowest-price | prioritized",
        "AllowedValues": [
            "lowest-price",
            "prioritized"
        ],
        "Pattern": "^[lowest-price|prioritized]",
        "Required": "No",
        "SampleValue": "lowest-price|prioritized",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.ondemandoptionsrequest.allocationstrategy",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.ondemandoptionsrequest.cfnproperties": [
        "AllocationStrategy",
        "UniqueKey"
    ],
    "ec2.ec2fleet.spotoptionsrequest.allocationstrategy": {
        "Allowed Values": "lowestPrice` \\| `diversified` \\| `capacityOptimized",
        "AllowedValues": [
            "lowestPrice` \\| `diversified` \\| `capacityOptimized"
        ],
        "Pattern": "^[lowestPrice` \\| `diversified` \\| `capacityOptimized]",
        "Required": "No",
        "SampleValue": "lowestPrice` \\| `diversified` \\| `capacityOptimized",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.spotoptionsrequest.allocationstrategy",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.spotoptionsrequest.cfnproperties": [
        "InstanceInterruptionBehavior",
        "InstancePoolsToUseCount",
        "AllocationStrategy",
        "UniqueKey"
    ],
    "ec2.ec2fleet.spotoptionsrequest.instanceinterruptionbehavior": {
        "Allowed Values": "hibernate | stop | terminate",
        "AllowedValues": [
            "hibernate",
            "stop",
            "terminate"
        ],
        "Pattern": "^[hibernate|stop|terminate]",
        "Required": "No",
        "SampleValue": "hibernate|stop|terminate",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.spotoptionsrequest.instanceinterruptionbehavior",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.spotoptionsrequest.instancepoolstousecount": {
        "Required": "No",
        "SampleValue": "TODO-instancepoolstousecount",
        "UniqueKey": "ec2.ec2fleet.spotoptionsrequest.instancepoolstousecount",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.tagrequest.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.ec2fleet.tagrequest.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.tagrequest.key",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.tagrequest.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.tagrequest.value",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.tagspecification.cfnproperties": [
        "ResourceType",
        "Tags",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.ec2fleet.tagspecification.resourcetype": {
        "Allowed Values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | elastic-ip | fleet | fpga-image | host-reservation | image | instance | internet-gateway | key-pair | launch-template | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-peering-connection | vpn-connection | vpn-gateway",
        "AllowedValues": [
            "client-vpn-endpoint",
            "customer-gateway",
            "dedicated-host",
            "dhcp-options",
            "elastic-ip",
            "fleet",
            "fpga-image",
            "host-reservation",
            "image",
            "instance",
            "internet-gateway",
            "key-pair",
            "launch-template",
            "natgateway",
            "network-acl",
            "network-interface",
            "placement-group",
            "reserved-instances",
            "route-table",
            "security-group",
            "snapshot",
            "spot-fleet-request",
            "spot-instances-request",
            "subnet",
            "traffic-mirror-filter",
            "traffic-mirror-session",
            "traffic-mirror-target",
            "transit-gateway",
            "transit-gateway-attachment",
            "transit-gateway-multicast-domain",
            "transit-gateway-route-table",
            "volume",
            "vpc",
            "vpc-peering-connection",
            "vpn-connection",
            "vpn-gateway"
        ],
        "Pattern": "^[client-vpn-endpoint|customer-gateway|dedicated-host|dhcp-options|elastic-ip|fleet|fpga-image|host-reservation|image|instance|internet-gateway|key-pair|launch-template|natgateway|network-acl|network-interface|placement-group|reserved-instances|route-table|security-group|snapshot|spot-fleet-request|spot-instances-request|subnet|traffic-mirror-filter|traffic-mirror-session|traffic-mirror-target|transit-gateway|transit-gateway-attachment|transit-gateway-multicast-domain|transit-gateway-route-table|volume|vpc|vpc-peering-connection|vpn-connection|vpn-gateway]",
        "Required": "No",
        "SampleValue": "client-vpn-endpoint|customer-gateway|dedicated-host|dhcp-options|elastic-ip|fleet|fpga-image|host-reservation|image|instance|internet-gateway|key-pair|launch-template|natgateway|network-acl|network-interface|placement-group|reserved-instances|route-table|security-group|snapshot|spot-fleet-request|spot-instances-request|subnet|traffic-mirror-filter|traffic-mirror-session|traffic-mirror-target|transit-gateway|transit-gateway-attachment|transit-gateway-multicast-domain|transit-gateway-route-table|volume|vpc|vpc-peering-connection|vpn-connection|vpn-gateway",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.tagspecification.resourcetype",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.tagspecification.tags": {
        "Required": "No",
        "Type": "List of [TagRequest",
        "UniqueKey": "ec2.ec2fleet.tagspecification.tags",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.targetcapacityspecificationrequest.cfnproperties": [
        "OnDemandTargetCapacity",
        "DefaultTargetCapacityType",
        "TotalTargetCapacity",
        "SpotTargetCapacity",
        "UniqueKey"
    ],
    "ec2.ec2fleet.targetcapacityspecificationrequest.defaulttargetcapacitytype": {
        "Allowed Values": "on-demand | spot",
        "AllowedValues": [
            "on-demand",
            "spot"
        ],
        "Pattern": "^[on-demand|spot]",
        "Required": "No",
        "SampleValue": "on-demand|spot",
        "Type": "String",
        "UniqueKey": "ec2.ec2fleet.targetcapacityspecificationrequest.defaulttargetcapacitytype",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.targetcapacityspecificationrequest.ondemandtargetcapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.ec2fleet.targetcapacityspecificationrequest.ondemandtargetcapacity",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.targetcapacityspecificationrequest.spottargetcapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.ec2fleet.targetcapacityspecificationrequest.spottargetcapacity",
        "UpdateRequires": "No interruption"
    },
    "ec2.ec2fleet.targetcapacityspecificationrequest.totaltargetcapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ec2.ec2fleet.targetcapacityspecificationrequest.totaltargetcapacity",
        "UpdateRequires": "No interruption"
    },
    "ec2.eip.association.allocationid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.eip.association.allocationid",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.association.cfnproperties": [
        "InstanceId",
        "EIP",
        "NetworkInterfaceId",
        "AllocationId",
        "PrivateIpAddress",
        "UniqueKey"
    ],
    "ec2.eip.association.eip": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.eip.association.eip",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.association.instanceid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.eip.association.instanceid",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.association.networkinterfaceid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.eip.association.networkinterfaceid",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.association.privateipaddress": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.eip.association.privateipaddress",
        "UpdateRequires": "No interruption"
    },
    "ec2.eip.cfnproperties": [
        "InstanceId",
        "Domain",
        "PublicIpv4Pool",
        "Tags",
        "UniqueKey"
    ],
    "ec2.eip.domain": {
        "Allowed Values": "standard | vpc",
        "AllowedValues": [
            "standard",
            "vpc"
        ],
        "Pattern": "^[standard|vpc]",
        "Required": "Conditional",
        "SampleValue": "standard|vpc",
        "Type": "String",
        "UniqueKey": "ec2.eip.domain",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.instanceid": {
        "Required": "No",
        "SampleValue": "TODO-instanceid",
        "UniqueKey": "ec2.eip.instanceid",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.publicipv4pool": {
        "Required": "No",
        "SampleValue": "TODO-publicipv4pool",
        "UniqueKey": "ec2.eip.publicipv4pool",
        "UpdateRequires": "Replacement"
    },
    "ec2.eip.tags": {
        "Required": "No",
        "SampleValue": "TODO-tags",
        "UniqueKey": "ec2.eip.tags",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.AppCookieStickinessPolicy.cfnproperties": [
        "PolicyName",
        "CookieName",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.elb.AppCookieStickinessPolicy.cookiename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.AppCookieStickinessPolicy.cookiename",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.AppCookieStickinessPolicy.policyname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.AppCookieStickinessPolicy.policyname",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.LBCookieStickinessPolicy.cfnproperties": [
        "PolicyName",
        "CookieExpirationPeriod",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.elb.LBCookieStickinessPolicy.cookieexpirationperiod": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.LBCookieStickinessPolicy.cookieexpirationperiod",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.LBCookieStickinessPolicy.policyname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.LBCookieStickinessPolicy.policyname",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.accessloggingpolicy": {
        "Required": "No",
        "Type": "AccessLoggingPolicy",
        "UniqueKey": "ec2.elb.accessloggingpolicy",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.accessloggingpolicy.cfnproperties": [
        "S3BucketPrefix",
        "EmitInterval",
        "Enabled",
        "S3BucketName",
        "UniqueKey"
    ],
    "ec2.elb.accessloggingpolicy.emitinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.elb.accessloggingpolicy.emitinterval",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.accessloggingpolicy.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.elb.accessloggingpolicy.enabled",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.accessloggingpolicy.s3bucketname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.accessloggingpolicy.s3bucketname",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.accessloggingpolicy.s3bucketprefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.accessloggingpolicy.s3bucketprefix",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.appcookiestickinesspolicy": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "ec2.elb.appcookiestickinesspolicy",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.availabilityzones": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.availabilityzones",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.cfnproperties": [
        "AppCookieStickinessPolicy",
        "ConnectionDrainingPolicy",
        "Scheme",
        "AccessLoggingPolicy",
        "Subnets",
        "HealthCheck",
        "LBCookieStickinessPolicy",
        "Tags",
        "Instances",
        "Listeners",
        "CrossZone",
        "SecurityGroups",
        "ConnectionSettings",
        "Policies",
        "LoadBalancerName",
        "AvailabilityZones",
        "UniqueKey"
    ],
    "ec2.elb.connectiondrainingpolicy": {
        "Required": "No",
        "SampleValue": "TODO-connectiondrainingpolicy",
        "UniqueKey": "ec2.elb.connectiondrainingpolicy",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.connectiondrainingpolicy.cfnproperties": [
        "Enabled",
        "Timeout",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.elb.connectiondrainingpolicy.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.elb.connectiondrainingpolicy.enabled",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.connectiondrainingpolicy.timeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.elb.connectiondrainingpolicy.timeout",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.connectionsettings": {
        "Required": "No",
        "SampleValue": "TODO-connectionsettings",
        "UniqueKey": "ec2.elb.connectionsettings",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.connectionsettings.cfnproperties": [
        "IdleTimeout",
        "UniqueKey"
    ],
    "ec2.elb.connectionsettings.idletimeout": {
        "Maximum": "3600",
        "Minimum": "1",
        "Pattern": "^[1,3600]}$",
        "Required": "Yes",
        "SampleValue": "1...3600",
        "Type": "Integer",
        "UniqueKey": "ec2.elb.connectionsettings.idletimeout",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.crosszone": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ec2.elb.crosszone",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.health.check.cfnproperties": [
        "HealthyThreshold",
        "Interval",
        "Target",
        "Timeout",
        "UnhealthyThreshold",
        "UniqueKey"
    ],
    "ec2.elb.health.check.healthythreshold": {
        "Maximum": "10",
        "Minimum": "2",
        "Pattern": "^.{2,10}$",
        "Required": "Yes",
        "SampleValue": "TODO-ec2.elb.health.check.healthythreshold",
        "Type": "String",
        "UniqueKey": "ec2.elb.health.check.healthythreshold",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.health.check.interval": {
        "Maximum": "300",
        "Minimum": "5",
        "Pattern": "^.{5,300}$",
        "Required": "Yes",
        "SampleValue": "TODO-ec2.elb.health.check.interval",
        "Type": "String",
        "UniqueKey": "ec2.elb.health.check.interval",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.health.check.target": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.health.check.target",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.health.check.timeout": {
        "Maximum": "60",
        "Minimum": "2",
        "Pattern": "^.{2,60}$",
        "Required": "Yes",
        "SampleValue": "TODO-ec2.elb.health.check.timeout",
        "Type": "String",
        "UniqueKey": "ec2.elb.health.check.timeout",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.health.check.unhealthythreshold": {
        "Maximum": "10",
        "Minimum": "2",
        "Pattern": "^.{2,10}$",
        "Required": "Yes",
        "SampleValue": "TODO-ec2.elb.health.check.unhealthythreshold",
        "Type": "String",
        "UniqueKey": "ec2.elb.health.check.unhealthythreshold",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.healthcheck": {
        "Required": "No",
        "Type": "HealthCheck",
        "UniqueKey": "ec2.elb.healthcheck",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.instances": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.instances",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.lbcookiestickinesspolicy": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "ec2.elb.lbcookiestickinesspolicy",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.listener.cfnproperties": [
        "InstancePort",
        "Protocol",
        "InstanceProtocol",
        "LoadBalancerPort",
        "PolicyNames",
        "SSLCertificateId",
        "UniqueKey"
    ],
    "ec2.elb.listener.instanceport": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^.{1,65535}$",
        "Required": "Yes",
        "SampleValue": "TODO-ec2.elb.listener.instanceport",
        "Type": "String",
        "UniqueKey": "ec2.elb.listener.instanceport",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.listener.instanceprotocol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.listener.instanceprotocol",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.listener.loadbalancerport": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.listener.loadbalancerport",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.listener.policynames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.listener.policynames",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.listener.protocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.listener.protocol",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.listener.sslcertificateid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.listener.sslcertificateid",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.listeners": {
        "Required": "Yes",
        "Type": "List",
        "UniqueKey": "ec2.elb.listeners",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.loadbalancername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.loadbalancername",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.policies": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "ec2.elb.policies",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.policy.attributes": {
        "Required": "Yes",
        "Type": "List of Json",
        "UniqueKey": "ec2.elb.policy.attributes",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.policy.cfnproperties": [
        "Attributes",
        "InstancePorts",
        "LoadBalancerPorts",
        "PolicyType",
        "PolicyName",
        "UniqueKey"
    ],
    "ec2.elb.policy.instanceports": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.policy.instanceports",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.policy.loadbalancerports": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.policy.loadbalancerports",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.policy.policyname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.policy.policyname",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.policy.policytype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.elb.policy.policytype",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.scheme": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.elb.scheme",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.securitygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.securitygroups",
        "UpdateRequires": "No interruption"
    },
    "ec2.elb.subnets": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.elb.subnets",
        "UpdateRequires": "Replacement"
    },
    "ec2.elb.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.elb.tags",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.additionalinfo": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.additionalinfo",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.affinity": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.affinity",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.availabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.availabilityzone",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.blockdevicemappings": {
        "Required": "No",
        "Type": "List of [BlockDeviceMapping",
        "UniqueKey": "ec2.instance.blockdevicemappings",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.cfnproperties": [
        "Monitoring",
        "LicenseSpecifications",
        "EbsOptimized",
        "Affinity",
        "RamdiskId",
        "PrivateIpAddress",
        "CpuOptions",
        "Tags",
        "PlacementGroupName",
        "ImageId",
        "KeyName",
        "SecurityGroups",
        "CreditSpecification",
        "HostResourceGroupArn",
        "SsmAssociations",
        "InstanceType",
        "NetworkInterfaces",
        "AdditionalInfo",
        "SourceDestCheck",
        "LaunchTemplate",
        "ElasticGpuSpecifications",
        "InstanceInitiatedShutdownBehavior",
        "SecurityGroupIds",
        "SubnetId",
        "HostId",
        "Volumes",
        "KernelId",
        "IamInstanceProfile",
        "UserData",
        "AvailabilityZone",
        "Tenancy",
        "Ipv6AddressCount",
        "ElasticInferenceAccelerators",
        "BlockDeviceMappings",
        "HibernationOptions",
        "Ipv6Addresses",
        "DisableApiTermination",
        "UniqueKey"
    ],
    "ec2.instance.cpuoptions": {
        "Required": "No",
        "Type": "CpuOptions",
        "UniqueKey": "ec2.instance.cpuoptions",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.cpuoptions.cfnproperties": [
        "CoreCount",
        "ThreadsPerCore",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.instance.cpuoptions.corecount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.instance.cpuoptions.corecount",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.cpuoptions.threadspercore": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.instance.cpuoptions.threadspercore",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.creditspecification": {
        "Required": "No",
        "SampleValue": "TODO-creditspecification",
        "UniqueKey": "ec2.instance.creditspecification",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.creditspecification.cfnproperties": [
        "CPUCredits",
        "UniqueKey"
    ],
    "ec2.instance.creditspecification.cpucredits": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.creditspecification.cpucredits",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.disableapitermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.instance.disableapitermination",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.ebsoptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.instance.ebsoptimized",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.elasticgpuspecification.cfnproperties": [
        "Type",
        "UniqueKey"
    ],
    "ec2.instance.elasticgpuspecification.type": {
        "Required": "Yes",
        "SampleValue": "TODO-type",
        "UniqueKey": "ec2.instance.elasticgpuspecification.type",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.elasticgpuspecifications": {
        "Required": "No",
        "SampleValue": "TODO-elasticgpuspecifications",
        "UniqueKey": "ec2.instance.elasticgpuspecifications",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.elasticinferenceaccelerator.cfnproperties": [
        "Count",
        "Type",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.instance.elasticinferenceaccelerator.count": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.instance.elasticinferenceaccelerator.count",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.elasticinferenceaccelerator.type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.instance.elasticinferenceaccelerator.type",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.elasticinferenceaccelerators": {
        "Required": "No",
        "Type": "List of [ElasticInferenceAccelerator",
        "UniqueKey": "ec2.instance.elasticinferenceaccelerators",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.hibernationoptions": {
        "Required": "No",
        "Type": "HibernationOptions",
        "UniqueKey": "ec2.instance.hibernationoptions",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.hibernationoptions.cfnproperties": [
        "Configured",
        "UniqueKey"
    ],
    "ec2.instance.hibernationoptions.configured": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.instance.hibernationoptions.configured",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.hostid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.hostid",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.hostresourcegrouparn": {
        "Required": "No",
        "SampleValue": "TODO-hostresourcegrouparn",
        "UniqueKey": "ec2.instance.hostresourcegrouparn",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.iaminstanceprofile": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.iaminstanceprofile",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.imageid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.instance.imageid",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.instanceinitiatedshutdownbehavior": {
        "Allowed Values": "stop | terminate",
        "AllowedValues": [
            "stop",
            "terminate"
        ],
        "Pattern": "^[stop|terminate]",
        "Required": "No",
        "SampleValue": "stop|terminate",
        "Type": "String",
        "UniqueKey": "ec2.instance.instanceinitiatedshutdownbehavior",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.instanceipv6address.cfnproperties": [
        "Ipv6Address",
        "UniqueKey"
    ],
    "ec2.instance.instanceipv6address.ipv6address": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.instance.instanceipv6address.ipv6address",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.instancetype": {
        "AllowedValues": [
            "a1.2xlarge",
            "a1.4xlarge",
            "a1.large",
            "a1.medium",
            "a1.metal",
            "a1.xlarge",
            "c1.medium",
            "c1.xlarge",
            "c3.2xlarge",
            "c3.4xlarge",
            "c3.8xlarge",
            "c3.large",
            "c3.xlarge",
            "c4.2xlarge",
            "c4.4xlarge",
            "c4.8xlarge",
            "c4.large",
            "c4.xlarge",
            "c5.12xlarge",
            "c5.18xlarge",
            "c5.24xlarge",
            "c5.2xlarge",
            "c5.4xlarge",
            "c5.9xlarge",
            "c5.large",
            "c5.metal",
            "c5.xlarge",
            "c5d.12xlarge",
            "c5d.18xlarge",
            "c5d.24xlarge",
            "c5d.2xlarge",
            "c5d.4xlarge",
            "c5d.9xlarge",
            "c5d.large",
            "c5d.metal",
            "c5d.xlarge",
            "c5n.18xlarge",
            "c5n.2xlarge",
            "c5n.4xlarge",
            "c5n.9xlarge",
            "c5n.large",
            "c5n.xlarge",
            "cc1.4xlarge",
            "cc2.8xlarge",
            "cg1.4xlarge",
            "cr1.8xlarge",
            "d2.2xlarge",
            "d2.4xlarge",
            "d2.8xlarge",
            "d2.xlarge",
            "f1.16xlarge",
            "f1.2xlarge",
            "f1.4xlarge",
            "g2.2xlarge",
            "g2.8xlarge",
            "g3.16xlarge",
            "g3.4xlarge",
            "g3.8xlarge",
            "g3s.xlarge",
            "g4dn.12xlarge",
            "g4dn.16xlarge",
            "g4dn.2xlarge",
            "g4dn.4xlarge",
            "g4dn.8xlarge",
            "g4dn.xlarge",
            "h1.16xlarge",
            "h1.2xlarge",
            "h1.4xlarge",
            "h1.8xlarge",
            "hi1.4xlarge",
            "hs1.8xlarge",
            "i2.2xlarge",
            "i2.4xlarge",
            "i2.8xlarge",
            "i2.xlarge",
            "i3.16xlarge",
            "i3.2xlarge",
            "i3.4xlarge",
            "i3.8xlarge",
            "i3.large",
            "i3.metal",
            "i3.xlarge",
            "i3en.12xlarge",
            "i3en.24xlarge",
            "i3en.2xlarge",
            "i3en.3xlarge",
            "i3en.6xlarge",
            "i3en.large",
            "i3en.metal",
            "i3en.xlarge",
            "inf1.24xlarge",
            "inf1.2xlarge",
            "inf1.6xlarge",
            "inf1.xlarge",
            "m1.large",
            "m1.medium",
            "m1.small",
            "m1.xlarge",
            "m2.2xlarge",
            "m2.4xlarge",
            "m2.xlarge",
            "m3.2xlarge",
            "m3.large",
            "m3.medium",
            "m3.xlarge",
            "m4.10xlarge",
            "m4.16xlarge",
            "m4.2xlarge",
            "m4.4xlarge",
            "m4.large",
            "m4.xlarge",
            "m5.12xlarge",
            "m5.16xlarge",
            "m5.24xlarge",
            "m5.2xlarge",
            "m5.4xlarge",
            "m5.8xlarge",
            "m5.large",
            "m5.metal",
            "m5.xlarge",
            "m5a.12xlarge",
            "m5a.16xlarge",
            "m5a.24xlarge",
            "m5a.2xlarge",
            "m5a.4xlarge",
            "m5a.8xlarge",
            "m5a.large",
            "m5a.xlarge",
            "m5ad.12xlarge",
            "m5ad.16xlarge",
            "m5ad.24xlarge",
            "m5ad.2xlarge",
            "m5ad.4xlarge",
            "m5ad.8xlarge",
            "m5ad.large",
            "m5ad.xlarge",
            "m5d.12xlarge",
            "m5d.16xlarge",
            "m5d.24xlarge",
            "m5d.2xlarge",
            "m5d.4xlarge",
            "m5d.8xlarge",
            "m5d.large",
            "m5d.metal",
            "m5d.xlarge",
            "m5dn.12xlarge",
            "m5dn.16xlarge",
            "m5dn.24xlarge",
            "m5dn.2xlarge",
            "m5dn.4xlarge",
            "m5dn.8xlarge",
            "m5dn.large",
            "m5dn.xlarge",
            "m5n.12xlarge",
            "m5n.16xlarge",
            "m5n.24xlarge",
            "m5n.2xlarge",
            "m5n.4xlarge",
            "m5n.8xlarge",
            "m5n.large",
            "m5n.xlarge",
            "p2.16xlarge",
            "p2.8xlarge",
            "p2.xlarge",
            "p3.16xlarge",
            "p3.2xlarge",
            "p3.8xlarge",
            "p3dn.24xlarge",
            "r3.2xlarge",
            "r3.4xlarge",
            "r3.8xlarge",
            "r3.large",
            "r3.xlarge",
            "r4.16xlarge",
            "r4.2xlarge",
            "r4.4xlarge",
            "r4.8xlarge",
            "r4.large",
            "r4.xlarge",
            "r5.12xlarge",
            "r5.16xlarge",
            "r5.24xlarge",
            "r5.2xlarge",
            "r5.4xlarge",
            "r5.8xlarge",
            "r5.large",
            "r5.metal",
            "r5.xlarge",
            "r5a.12xlarge",
            "r5a.16xlarge",
            "r5a.24xlarge",
            "r5a.2xlarge",
            "r5a.4xlarge",
            "r5a.8xlarge",
            "r5a.large",
            "r5a.xlarge",
            "r5ad.12xlarge",
            "r5ad.16xlarge",
            "r5ad.24xlarge",
            "r5ad.2xlarge",
            "r5ad.4xlarge",
            "r5ad.8xlarge",
            "r5ad.large",
            "r5ad.xlarge",
            "r5d.12xlarge",
            "r5d.16xlarge",
            "r5d.24xlarge",
            "r5d.2xlarge",
            "r5d.4xlarge",
            "r5d.8xlarge",
            "r5d.large",
            "r5d.metal",
            "r5d.xlarge",
            "r5dn.12xlarge",
            "r5dn.16xlarge",
            "r5dn.24xlarge",
            "r5dn.2xlarge",
            "r5dn.4xlarge",
            "r5dn.8xlarge",
            "r5dn.large",
            "r5dn.xlarge",
            "r5n.12xlarge",
            "r5n.16xlarge",
            "r5n.24xlarge",
            "r5n.2xlarge",
            "r5n.4xlarge",
            "r5n.8xlarge",
            "r5n.large",
            "r5n.xlarge",
            "t1.micro",
            "t2.2xlarge",
            "t2.large",
            "t2.medium",
            "t2.micro",
            "t2.nano",
            "t2.small",
            "t2.xlarge",
            "t3.2xlarge",
            "t3.large",
            "t3.medium",
            "t3.micro",
            "t3.nano",
            "t3.small",
            "t3.xlarge",
            "t3a.2xlarge",
            "t3a.large",
            "t3a.medium",
            "t3a.micro",
            "t3a.nano",
            "t3a.small",
            "t3a.xlarge",
            "u-12tb1.metal",
            "u-18tb1.metal",
            "u-24tb1.metal",
            "u-6tb1.metal",
            "u-9tb1.metal",
            "x1.16xlarge",
            "x1.32xlarge",
            "x1e.16xlarge",
            "x1e.2xlarge",
            "x1e.32xlarge",
            "x1e.4xlarge",
            "x1e.8xlarge",
            "x1e.xlarge",
            "z1d.12xlarge",
            "z1d.2xlarge",
            "z1d.3xlarge",
            "z1d.6xlarge",
            "z1d.large",
            "z1d.metal",
            "z1d.xlarge"
        ],
        "Pattern": "^[a1.2xlarge|a1.4xlarge|a1.large|a1.medium|a1.metal|a1.xlarge|c1.medium|c1.xlarge|c3.2xlarge|c3.4xlarge|c3.8xlarge|c3.large|c3.xlarge|c4.2xlarge|c4.4xlarge|c4.8xlarge|c4.large|c4.xlarge|c5.12xlarge|c5.18xlarge|c5.24xlarge|c5.2xlarge|c5.4xlarge|c5.9xlarge|c5.large|c5.metal|c5.xlarge|c5d.12xlarge|c5d.18xlarge|c5d.24xlarge|c5d.2xlarge|c5d.4xlarge|c5d.9xlarge|c5d.large|c5d.metal|c5d.xlarge|c5n.18xlarge|c5n.2xlarge|c5n.4xlarge|c5n.9xlarge|c5n.large|c5n.xlarge|cc1.4xlarge|cc2.8xlarge|cg1.4xlarge|cr1.8xlarge|d2.2xlarge|d2.4xlarge|d2.8xlarge|d2.xlarge|f1.16xlarge|f1.2xlarge|f1.4xlarge|g2.2xlarge|g2.8xlarge|g3.16xlarge|g3.4xlarge|g3.8xlarge|g3s.xlarge|g4dn.12xlarge|g4dn.16xlarge|g4dn.2xlarge|g4dn.4xlarge|g4dn.8xlarge|g4dn.xlarge|h1.16xlarge|h1.2xlarge|h1.4xlarge|h1.8xlarge|hi1.4xlarge|hs1.8xlarge|i2.2xlarge|i2.4xlarge|i2.8xlarge|i2.xlarge|i3.16xlarge|i3.2xlarge|i3.4xlarge|i3.8xlarge|i3.large|i3.metal|i3.xlarge|i3en.12xlarge|i3en.24xlarge|i3en.2xlarge|i3en.3xlarge|i3en.6xlarge|i3en.large|i3en.metal|i3en.xlarge|inf1.24xlarge|inf1.2xlarge|inf1.6xlarge|inf1.xlarge|m1.large|m1.medium|m1.small|m1.xlarge|m2.2xlarge|m2.4xlarge|m2.xlarge|m3.2xlarge|m3.large|m3.medium|m3.xlarge|m4.10xlarge|m4.16xlarge|m4.2xlarge|m4.4xlarge|m4.large|m4.xlarge|m5.12xlarge|m5.16xlarge|m5.24xlarge|m5.2xlarge|m5.4xlarge|m5.8xlarge|m5.large|m5.metal|m5.xlarge|m5a.12xlarge|m5a.16xlarge|m5a.24xlarge|m5a.2xlarge|m5a.4xlarge|m5a.8xlarge|m5a.large|m5a.xlarge|m5ad.12xlarge|m5ad.16xlarge|m5ad.24xlarge|m5ad.2xlarge|m5ad.4xlarge|m5ad.8xlarge|m5ad.large|m5ad.xlarge|m5d.12xlarge|m5d.16xlarge|m5d.24xlarge|m5d.2xlarge|m5d.4xlarge|m5d.8xlarge|m5d.large|m5d.metal|m5d.xlarge|m5dn.12xlarge|m5dn.16xlarge|m5dn.24xlarge|m5dn.2xlarge|m5dn.4xlarge|m5dn.8xlarge|m5dn.large|m5dn.xlarge|m5n.12xlarge|m5n.16xlarge|m5n.24xlarge|m5n.2xlarge|m5n.4xlarge|m5n.8xlarge|m5n.large|m5n.xlarge|p2.16xlarge|p2.8xlarge|p2.xlarge|p3.16xlarge|p3.2xlarge|p3.8xlarge|p3dn.24xlarge|r3.2xlarge|r3.4xlarge|r3.8xlarge|r3.large|r3.xlarge|r4.16xlarge|r4.2xlarge|r4.4xlarge|r4.8xlarge|r4.large|r4.xlarge|r5.12xlarge|r5.16xlarge|r5.24xlarge|r5.2xlarge|r5.4xlarge|r5.8xlarge|r5.large|r5.metal|r5.xlarge|r5a.12xlarge|r5a.16xlarge|r5a.24xlarge|r5a.2xlarge|r5a.4xlarge|r5a.8xlarge|r5a.large|r5a.xlarge|r5ad.12xlarge|r5ad.16xlarge|r5ad.24xlarge|r5ad.2xlarge|r5ad.4xlarge|r5ad.8xlarge|r5ad.large|r5ad.xlarge|r5d.12xlarge|r5d.16xlarge|r5d.24xlarge|r5d.2xlarge|r5d.4xlarge|r5d.8xlarge|r5d.large|r5d.metal|r5d.xlarge|r5dn.12xlarge|r5dn.16xlarge|r5dn.24xlarge|r5dn.2xlarge|r5dn.4xlarge|r5dn.8xlarge|r5dn.large|r5dn.xlarge|r5n.12xlarge|r5n.16xlarge|r5n.24xlarge|r5n.2xlarge|r5n.4xlarge|r5n.8xlarge|r5n.large|r5n.xlarge|t1.micro|t2.2xlarge|t2.large|t2.medium|t2.micro|t2.nano|t2.small|t2.xlarge|t3.2xlarge|t3.large|t3.medium|t3.micro|t3.nano|t3.small|t3.xlarge|t3a.2xlarge|t3a.large|t3a.medium|t3a.micro|t3a.nano|t3a.small|t3a.xlarge|u-12tb1.metal|u-18tb1.metal|u-24tb1.metal|u-6tb1.metal|u-9tb1.metal|x1.16xlarge|x1.32xlarge|x1e.16xlarge|x1e.2xlarge|x1e.32xlarge|x1e.4xlarge|x1e.8xlarge|x1e.xlarge|z1d.12xlarge|z1d.2xlarge|z1d.3xlarge|z1d.6xlarge|z1d.large|z1d.metal|z1d.xlarge]",
        "Required": "No",
        "SampleValue": "a1.2xlarge|a1.4xlarge|a1.large|a1.medium|a1.metal|a1.xlarge|c1.medium|c1.xlarge|c3.2xlarge|c3.4xlarge|c3.8xlarge|c3.large|c3.xlarge|c4.2xlarge|c4.4xlarge|c4.8xlarge|c4.large|c4.xlarge|c5.12xlarge|c5.18xlarge|c5.24xlarge|c5.2xlarge|c5.4xlarge|c5.9xlarge|c5.large|c5.metal|c5.xlarge|c5d.12xlarge|c5d.18xlarge|c5d.24xlarge|c5d.2xlarge|c5d.4xlarge|c5d.9xlarge|c5d.large|c5d.metal|c5d.xlarge|c5n.18xlarge|c5n.2xlarge|c5n.4xlarge|c5n.9xlarge|c5n.large|c5n.xlarge|cc1.4xlarge|cc2.8xlarge|cg1.4xlarge|cr1.8xlarge|d2.2xlarge|d2.4xlarge|d2.8xlarge|d2.xlarge|f1.16xlarge|f1.2xlarge|f1.4xlarge|g2.2xlarge|g2.8xlarge|g3.16xlarge|g3.4xlarge|g3.8xlarge|g3s.xlarge|g4dn.12xlarge|g4dn.16xlarge|g4dn.2xlarge|g4dn.4xlarge|g4dn.8xlarge|g4dn.xlarge|h1.16xlarge|h1.2xlarge|h1.4xlarge|h1.8xlarge|hi1.4xlarge|hs1.8xlarge|i2.2xlarge|i2.4xlarge|i2.8xlarge|i2.xlarge|i3.16xlarge|i3.2xlarge|i3.4xlarge|i3.8xlarge|i3.large|i3.metal|i3.xlarge|i3en.12xlarge|i3en.24xlarge|i3en.2xlarge|i3en.3xlarge|i3en.6xlarge|i3en.large|i3en.metal|i3en.xlarge|inf1.24xlarge|inf1.2xlarge|inf1.6xlarge|inf1.xlarge|m1.large|m1.medium|m1.small|m1.xlarge|m2.2xlarge|m2.4xlarge|m2.xlarge|m3.2xlarge|m3.large|m3.medium|m3.xlarge|m4.10xlarge|m4.16xlarge|m4.2xlarge|m4.4xlarge|m4.large|m4.xlarge|m5.12xlarge|m5.16xlarge|m5.24xlarge|m5.2xlarge|m5.4xlarge|m5.8xlarge|m5.large|m5.metal|m5.xlarge|m5a.12xlarge|m5a.16xlarge|m5a.24xlarge|m5a.2xlarge|m5a.4xlarge|m5a.8xlarge|m5a.large|m5a.xlarge|m5ad.12xlarge|m5ad.16xlarge|m5ad.24xlarge|m5ad.2xlarge|m5ad.4xlarge|m5ad.8xlarge|m5ad.large|m5ad.xlarge|m5d.12xlarge|m5d.16xlarge|m5d.24xlarge|m5d.2xlarge|m5d.4xlarge|m5d.8xlarge|m5d.large|m5d.metal|m5d.xlarge|m5dn.12xlarge|m5dn.16xlarge|m5dn.24xlarge|m5dn.2xlarge|m5dn.4xlarge|m5dn.8xlarge|m5dn.large|m5dn.xlarge|m5n.12xlarge|m5n.16xlarge|m5n.24xlarge|m5n.2xlarge|m5n.4xlarge|m5n.8xlarge|m5n.large|m5n.xlarge|p2.16xlarge|p2.8xlarge|p2.xlarge|p3.16xlarge|p3.2xlarge|p3.8xlarge|p3dn.24xlarge|r3.2xlarge|r3.4xlarge|r3.8xlarge|r3.large|r3.xlarge|r4.16xlarge|r4.2xlarge|r4.4xlarge|r4.8xlarge|r4.large|r4.xlarge|r5.12xlarge|r5.16xlarge|r5.24xlarge|r5.2xlarge|r5.4xlarge|r5.8xlarge|r5.large|r5.metal|r5.xlarge|r5a.12xlarge|r5a.16xlarge|r5a.24xlarge|r5a.2xlarge|r5a.4xlarge|r5a.8xlarge|r5a.large|r5a.xlarge|r5ad.12xlarge|r5ad.16xlarge|r5ad.24xlarge|r5ad.2xlarge|r5ad.4xlarge|r5ad.8xlarge|r5ad.large|r5ad.xlarge|r5d.12xlarge|r5d.16xlarge|r5d.24xlarge|r5d.2xlarge|r5d.4xlarge|r5d.8xlarge|r5d.large|r5d.metal|r5d.xlarge|r5dn.12xlarge|r5dn.16xlarge|r5dn.24xlarge|r5dn.2xlarge|r5dn.4xlarge|r5dn.8xlarge|r5dn.large|r5dn.xlarge|r5n.12xlarge|r5n.16xlarge|r5n.24xlarge|r5n.2xlarge|r5n.4xlarge|r5n.8xlarge|r5n.large|r5n.xlarge|t1.micro|t2.2xlarge|t2.large|t2.medium|t2.micro|t2.nano|t2.small|t2.xlarge|t3.2xlarge|t3.large|t3.medium|t3.micro|t3.nano|t3.small|t3.xlarge|t3a.2xlarge|t3a.large|t3a.medium|t3a.micro|t3a.nano|t3a.small|t3a.xlarge|u-12tb1.metal|u-18tb1.metal|u-24tb1.metal|u-6tb1.metal|u-9tb1.metal|x1.16xlarge|x1.32xlarge|x1e.16xlarge|x1e.2xlarge|x1e.32xlarge|x1e.4xlarge|x1e.8xlarge|x1e.xlarge|z1d.12xlarge|z1d.2xlarge|z1d.3xlarge|z1d.6xlarge|z1d.large|z1d.metal|z1d.xlarge",
        "UniqueKey": "ec2.instance.instancetype",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.ipv6addresscount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.instance.ipv6addresscount",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.ipv6addresses": {
        "Required": "No",
        "Type": "List of [InstanceIpv6Address",
        "UniqueKey": "ec2.instance.ipv6addresses",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.kernelid": {
        "Required": "No",
        "SampleValue": "TODO-kernelid",
        "UniqueKey": "ec2.instance.kernelid",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.keyname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.keyname",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.launchtemplate": {
        "Required": "No",
        "Type": "LaunchTemplateSpecification",
        "UniqueKey": "ec2.instance.launchtemplate",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.launchtemplatespecification.cfnproperties": [
        "LaunchTemplateName",
        "Version",
        "LaunchTemplateId",
        "UniqueKey"
    ],
    "ec2.instance.launchtemplatespecification.launchtemplateid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.instance.launchtemplatespecification.launchtemplateid",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.launchtemplatespecification.launchtemplatename": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.instance.launchtemplatespecification.launchtemplatename",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.launchtemplatespecification.version": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.instance.launchtemplatespecification.version",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.licensespecification.cfnproperties": [
        "LicenseConfigurationArn",
        "UniqueKey"
    ],
    "ec2.instance.licensespecification.licenseconfigurationarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.instance.licensespecification.licenseconfigurationarn",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.licensespecifications": {
        "Required": "No",
        "Type": "List of [LicenseSpecification",
        "UniqueKey": "ec2.instance.licensespecifications",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.monitoring": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.instance.monitoring",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.networkinterfaces": {
        "Required": "No",
        "Type": "List of [NetworkInterface",
        "UniqueKey": "ec2.instance.networkinterfaces",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.placementgroupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.placementgroupname",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.privateipaddress": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.privateipaddress",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.ramdiskid": {
        "Required": "No",
        "SampleValue": "TODO-ramdiskid",
        "UniqueKey": "ec2.instance.ramdiskid",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.securitygroupids": {
        "Required": "Conditional",
        "Type": "List of String",
        "UniqueKey": "ec2.instance.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.securitygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.instance.securitygroups",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.sourcedestcheck": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ec2.instance.sourcedestcheck",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.ssmassociations": {
        "Required": "No",
        "SampleValue": "TODO-ssmassociations",
        "UniqueKey": "ec2.instance.ssmassociations",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.ssmassociations.associationparameters": {
        "Required": "No",
        "Type": "List of [AssociationParameter",
        "UniqueKey": "ec2.instance.ssmassociations.associationparameters",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.ssmassociations.associationparameters.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.instance.ssmassociations.associationparameters.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.instance.ssmassociations.associationparameters.key",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.ssmassociations.associationparameters.value": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "ec2.instance.ssmassociations.associationparameters.value",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.ssmassociations.cfnproperties": [
        "AssociationParameters",
        "DocumentName",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.instance.ssmassociations.documentname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.instance.ssmassociations.documentname",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.subnetid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.subnetid",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.instance.tags",
        "UpdateRequires": "No interruption"
    },
    "ec2.instance.tenancy": {
        "Allowed Values": "dedicated | default | host",
        "AllowedValues": [
            "dedicated",
            "default",
            "host"
        ],
        "Pattern": "^[dedicated|default|host]",
        "Required": "No",
        "SampleValue": "dedicated|default|host",
        "Type": "String",
        "UniqueKey": "ec2.instance.tenancy",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.userdata": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.instance.userdata",
        "UpdateRequires": "Replacement"
    },
    "ec2.instance.volumes": {
        "Required": "No",
        "Type": "List of [Volume",
        "UniqueKey": "ec2.instance.volumes",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.blockdevicemapping.cfnproperties": [
        "VirtualName",
        "DeviceName",
        "NoDevice",
        "Ebs",
        "UniqueKey"
    ],
    "ec2.launchtemplate.blockdevicemapping.devicename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.devicename",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs": {
        "Required": "No",
        "Type": "Ebs",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.cfnproperties": [
        "VolumeSize",
        "Encrypted",
        "VolumeType",
        "KmsKeyId",
        "DeleteOnTermination",
        "SnapshotId",
        "Iops",
        "UniqueKey"
    ],
    "ec2.launchtemplate.blockdevicemapping.ebs.deleteontermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.deleteontermination",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.encrypted",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.iops": {
        "Required": "No",
        "SampleValue": "TODO-iops",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.iops",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.kmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.kmskeyid",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.snapshotid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.snapshotid",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.volumesize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.volumesize",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.blockdevicemapping.ebs.volumetype": {
        "Allowed Values": "gp2 | io1 | sc1 | st1 | standard",
        "AllowedValues": [
            "gp2",
            "io1",
            "sc1",
            "st1",
            "standard"
        ],
        "Pattern": "^[gp2|io1|sc1|st1|standard]",
        "Required": "No",
        "SampleValue": "gp2|io1|sc1|st1|standard",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.ebs.volumetype",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.blockdevicemapping.nodevice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.nodevice",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.blockdevicemapping.virtualname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.blockdevicemapping.virtualname",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.capacityreservationtarget.capacityreservationid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.capacityreservationtarget.capacityreservationid",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.capacityreservationtarget.cfnproperties": [
        "CapacityReservationId",
        "UniqueKey"
    ],
    "ec2.launchtemplate.elasticgpuspecification.cfnproperties": [
        "Type",
        "UniqueKey"
    ],
    "ec2.launchtemplate.elasticgpuspecification.type": {
        "Required": "No",
        "SampleValue": "TODO-type",
        "UniqueKey": "ec2.launchtemplate.elasticgpuspecification.type",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.ipv6add.cfnproperties": [
        "Ipv6Address",
        "UniqueKey"
    ],
    "ec2.launchtemplate.ipv6add.ipv6address": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.ipv6add.ipv6address",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.blockdevicemappings": {
        "Required": "No",
        "Type": "List of [BlockDeviceMapping",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.blockdevicemappings",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification": {
        "Required": "No",
        "Type": "CapacityReservationSpecification",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification.capacityreservationpreference": {
        "Allowed Values": "none | open",
        "AllowedValues": [
            "none",
            "open"
        ],
        "Pattern": "^[none|open]",
        "Required": "No",
        "SampleValue": "none|open",
        "Type": "CapacityReservationPreference",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification.capacityreservationpreference",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification.capacityreservationtarget": {
        "Required": "No",
        "Type": "CapacityReservationTarget",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification.capacityreservationtarget",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.capacityreservationspecification.cfnproperties": [
        "CapacityReservationTarget",
        "CapacityReservationPreference",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.launchtemplate.launchtemplatedata.cfnproperties": [
        "Monitoring",
        "TagSpecifications",
        "LicenseSpecifications",
        "EbsOptimized",
        "CpuOptions",
        "ImageId",
        "KeyName",
        "SecurityGroups",
        "CreditSpecification",
        "InstanceType",
        "NetworkInterfaces",
        "Placement",
        "ElasticGpuSpecifications",
        "CapacityReservationSpecification",
        "InstanceInitiatedShutdownBehavior",
        "SecurityGroupIds",
        "BlockDeviceMappings",
        "KernelId",
        "IamInstanceProfile",
        "UserData",
        "InstanceMarketOptions",
        "ElasticInferenceAccelerators",
        "HibernationOptions",
        "RamDiskId",
        "DisableApiTermination",
        "UniqueKey"
    ],
    "ec2.launchtemplate.launchtemplatedata.cpuoptions": {
        "Required": "No",
        "SampleValue": "TODO-cpuoptions",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.cpuoptions",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.cpuoptions.cfnproperties": [
        "CoreCount",
        "ThreadsPerCore",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.launchtemplate.launchtemplatedata.cpuoptions.corecount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.cpuoptions.corecount",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.cpuoptions.threadspercore": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.cpuoptions.threadspercore",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.creditspecification": {
        "Required": "No",
        "Type": "CreditSpecification",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.creditspecification",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.creditspecification.cfnproperties": [
        "CpuCredits",
        "UniqueKey"
    ],
    "ec2.launchtemplate.launchtemplatedata.creditspecification.cpucredits": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.creditspecification.cpucredits",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.disableapitermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.disableapitermination",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.ebsoptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.ebsoptimized",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.elasticgpuspecifications": {
        "Required": "No",
        "Type": "List of [ElasticGpuSpecification",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.elasticgpuspecifications",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.elasticinferenceaccelerators": {
        "Required": "No",
        "Type": "List of [LaunchTemplateElasticInferenceAccelerator",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.elasticinferenceaccelerators",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.hibernationoptions": {
        "Required": "No",
        "SampleValue": "TODO-hibernationoptions",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.hibernationoptions",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.hibernationoptions.cfnproperties": [
        "Configured",
        "UniqueKey"
    ],
    "ec2.launchtemplate.launchtemplatedata.hibernationoptions.configured": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.hibernationoptions.configured",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile": {
        "Required": "No",
        "Type": "IamInstanceProfile",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile.arn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile.arn",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile.cfnproperties": [
        "Name",
        "Arn",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.iaminstanceprofile.name",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.imageid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.imageid",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.instanceinitiatedshutdownbehavior": {
        "Allowed Values": "stop | terminate",
        "AllowedValues": [
            "stop",
            "terminate"
        ],
        "Pattern": "^[stop|terminate]",
        "Required": "No",
        "SampleValue": "stop|terminate",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instanceinitiatedshutdownbehavior",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions": {
        "Required": "No",
        "Type": "InstanceMarketOptions",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.cfnproperties": [
        "SpotOptions",
        "MarketType",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.markettype": {
        "Allowed Values": "spot",
        "AllowedValues": [
            "spot"
        ],
        "Pattern": "^[spot]",
        "Required": "Conditional",
        "SampleValue": "spot",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.markettype",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions": {
        "Required": "No",
        "Type": "SpotOptions",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.blockdurationminutes": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.blockdurationminutes",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.cfnproperties": [
        "SpotInstanceType",
        "BlockDurationMinutes",
        "ValidUntil",
        "InstanceInterruptionBehavior",
        "MaxPrice",
        "UniqueKey"
    ],
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.instanceinterruptionbehavior": {
        "Allowed Values": "hibernate | stop | terminate",
        "AllowedValues": [
            "hibernate",
            "stop",
            "terminate"
        ],
        "Pattern": "^[hibernate|stop|terminate]",
        "Required": "No",
        "SampleValue": "hibernate|stop|terminate",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.instanceinterruptionbehavior",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.maxprice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.maxprice",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.spotinstancetype": {
        "Allowed Values": "one-time | persistent",
        "AllowedValues": [
            "one-time",
            "persistent"
        ],
        "Pattern": "^[one-time|persistent]",
        "Required": "No",
        "SampleValue": "one-time|persistent",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.spotinstancetype",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.validuntil": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancemarketoptions.spotoptions.validuntil",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.instancetype": {
        "AllowedValues": [
            "a1.2xlarge",
            "a1.4xlarge",
            "a1.large",
            "a1.medium",
            "a1.metal",
            "a1.xlarge",
            "c1.medium",
            "c1.xlarge",
            "c3.2xlarge",
            "c3.4xlarge",
            "c3.8xlarge",
            "c3.large",
            "c3.xlarge",
            "c4.2xlarge",
            "c4.4xlarge",
            "c4.8xlarge",
            "c4.large",
            "c4.xlarge",
            "c5.12xlarge",
            "c5.18xlarge",
            "c5.24xlarge",
            "c5.2xlarge",
            "c5.4xlarge",
            "c5.9xlarge",
            "c5.large",
            "c5.metal",
            "c5.xlarge",
            "c5d.12xlarge",
            "c5d.18xlarge",
            "c5d.24xlarge",
            "c5d.2xlarge",
            "c5d.4xlarge",
            "c5d.9xlarge",
            "c5d.large",
            "c5d.metal",
            "c5d.xlarge",
            "c5n.18xlarge",
            "c5n.2xlarge",
            "c5n.4xlarge",
            "c5n.9xlarge",
            "c5n.large",
            "c5n.xlarge",
            "cc1.4xlarge",
            "cc2.8xlarge",
            "cg1.4xlarge",
            "cr1.8xlarge",
            "d2.2xlarge",
            "d2.4xlarge",
            "d2.8xlarge",
            "d2.xlarge",
            "f1.16xlarge",
            "f1.2xlarge",
            "f1.4xlarge",
            "g2.2xlarge",
            "g2.8xlarge",
            "g3.16xlarge",
            "g3.4xlarge",
            "g3.8xlarge",
            "g3s.xlarge",
            "g4dn.12xlarge",
            "g4dn.16xlarge",
            "g4dn.2xlarge",
            "g4dn.4xlarge",
            "g4dn.8xlarge",
            "g4dn.xlarge",
            "h1.16xlarge",
            "h1.2xlarge",
            "h1.4xlarge",
            "h1.8xlarge",
            "hi1.4xlarge",
            "hs1.8xlarge",
            "i2.2xlarge",
            "i2.4xlarge",
            "i2.8xlarge",
            "i2.xlarge",
            "i3.16xlarge",
            "i3.2xlarge",
            "i3.4xlarge",
            "i3.8xlarge",
            "i3.large",
            "i3.metal",
            "i3.xlarge",
            "i3en.12xlarge",
            "i3en.24xlarge",
            "i3en.2xlarge",
            "i3en.3xlarge",
            "i3en.6xlarge",
            "i3en.large",
            "i3en.metal",
            "i3en.xlarge",
            "inf1.24xlarge",
            "inf1.2xlarge",
            "inf1.6xlarge",
            "inf1.xlarge",
            "m1.large",
            "m1.medium",
            "m1.small",
            "m1.xlarge",
            "m2.2xlarge",
            "m2.4xlarge",
            "m2.xlarge",
            "m3.2xlarge",
            "m3.large",
            "m3.medium",
            "m3.xlarge",
            "m4.10xlarge",
            "m4.16xlarge",
            "m4.2xlarge",
            "m4.4xlarge",
            "m4.large",
            "m4.xlarge",
            "m5.12xlarge",
            "m5.16xlarge",
            "m5.24xlarge",
            "m5.2xlarge",
            "m5.4xlarge",
            "m5.8xlarge",
            "m5.large",
            "m5.metal",
            "m5.xlarge",
            "m5a.12xlarge",
            "m5a.16xlarge",
            "m5a.24xlarge",
            "m5a.2xlarge",
            "m5a.4xlarge",
            "m5a.8xlarge",
            "m5a.large",
            "m5a.xlarge",
            "m5ad.12xlarge",
            "m5ad.16xlarge",
            "m5ad.24xlarge",
            "m5ad.2xlarge",
            "m5ad.4xlarge",
            "m5ad.8xlarge",
            "m5ad.large",
            "m5ad.xlarge",
            "m5d.12xlarge",
            "m5d.16xlarge",
            "m5d.24xlarge",
            "m5d.2xlarge",
            "m5d.4xlarge",
            "m5d.8xlarge",
            "m5d.large",
            "m5d.metal",
            "m5d.xlarge",
            "m5dn.12xlarge",
            "m5dn.16xlarge",
            "m5dn.24xlarge",
            "m5dn.2xlarge",
            "m5dn.4xlarge",
            "m5dn.8xlarge",
            "m5dn.large",
            "m5dn.xlarge",
            "m5n.12xlarge",
            "m5n.16xlarge",
            "m5n.24xlarge",
            "m5n.2xlarge",
            "m5n.4xlarge",
            "m5n.8xlarge",
            "m5n.large",
            "m5n.xlarge",
            "p2.16xlarge",
            "p2.8xlarge",
            "p2.xlarge",
            "p3.16xlarge",
            "p3.2xlarge",
            "p3.8xlarge",
            "p3dn.24xlarge",
            "r3.2xlarge",
            "r3.4xlarge",
            "r3.8xlarge",
            "r3.large",
            "r3.xlarge",
            "r4.16xlarge",
            "r4.2xlarge",
            "r4.4xlarge",
            "r4.8xlarge",
            "r4.large",
            "r4.xlarge",
            "r5.12xlarge",
            "r5.16xlarge",
            "r5.24xlarge",
            "r5.2xlarge",
            "r5.4xlarge",
            "r5.8xlarge",
            "r5.large",
            "r5.metal",
            "r5.xlarge",
            "r5a.12xlarge",
            "r5a.16xlarge",
            "r5a.24xlarge",
            "r5a.2xlarge",
            "r5a.4xlarge",
            "r5a.8xlarge",
            "r5a.large",
            "r5a.xlarge",
            "r5ad.12xlarge",
            "r5ad.16xlarge",
            "r5ad.24xlarge",
            "r5ad.2xlarge",
            "r5ad.4xlarge",
            "r5ad.8xlarge",
            "r5ad.large",
            "r5ad.xlarge",
            "r5d.12xlarge",
            "r5d.16xlarge",
            "r5d.24xlarge",
            "r5d.2xlarge",
            "r5d.4xlarge",
            "r5d.8xlarge",
            "r5d.large",
            "r5d.metal",
            "r5d.xlarge",
            "r5dn.12xlarge",
            "r5dn.16xlarge",
            "r5dn.24xlarge",
            "r5dn.2xlarge",
            "r5dn.4xlarge",
            "r5dn.8xlarge",
            "r5dn.large",
            "r5dn.xlarge",
            "r5n.12xlarge",
            "r5n.16xlarge",
            "r5n.24xlarge",
            "r5n.2xlarge",
            "r5n.4xlarge",
            "r5n.8xlarge",
            "r5n.large",
            "r5n.xlarge",
            "t1.micro",
            "t2.2xlarge",
            "t2.large",
            "t2.medium",
            "t2.micro",
            "t2.nano",
            "t2.small",
            "t2.xlarge",
            "t3.2xlarge",
            "t3.large",
            "t3.medium",
            "t3.micro",
            "t3.nano",
            "t3.small",
            "t3.xlarge",
            "t3a.2xlarge",
            "t3a.large",
            "t3a.medium",
            "t3a.micro",
            "t3a.nano",
            "t3a.small",
            "t3a.xlarge",
            "u-12tb1.metal",
            "u-18tb1.metal",
            "u-24tb1.metal",
            "u-6tb1.metal",
            "u-9tb1.metal",
            "x1.16xlarge",
            "x1.32xlarge",
            "x1e.16xlarge",
            "x1e.2xlarge",
            "x1e.32xlarge",
            "x1e.4xlarge",
            "x1e.8xlarge",
            "x1e.xlarge",
            "z1d.12xlarge",
            "z1d.2xlarge",
            "z1d.3xlarge",
            "z1d.6xlarge",
            "z1d.large",
            "z1d.metal",
            "z1d.xlarge"
        ],
        "Pattern": "^[a1.2xlarge|a1.4xlarge|a1.large|a1.medium|a1.metal|a1.xlarge|c1.medium|c1.xlarge|c3.2xlarge|c3.4xlarge|c3.8xlarge|c3.large|c3.xlarge|c4.2xlarge|c4.4xlarge|c4.8xlarge|c4.large|c4.xlarge|c5.12xlarge|c5.18xlarge|c5.24xlarge|c5.2xlarge|c5.4xlarge|c5.9xlarge|c5.large|c5.metal|c5.xlarge|c5d.12xlarge|c5d.18xlarge|c5d.24xlarge|c5d.2xlarge|c5d.4xlarge|c5d.9xlarge|c5d.large|c5d.metal|c5d.xlarge|c5n.18xlarge|c5n.2xlarge|c5n.4xlarge|c5n.9xlarge|c5n.large|c5n.xlarge|cc1.4xlarge|cc2.8xlarge|cg1.4xlarge|cr1.8xlarge|d2.2xlarge|d2.4xlarge|d2.8xlarge|d2.xlarge|f1.16xlarge|f1.2xlarge|f1.4xlarge|g2.2xlarge|g2.8xlarge|g3.16xlarge|g3.4xlarge|g3.8xlarge|g3s.xlarge|g4dn.12xlarge|g4dn.16xlarge|g4dn.2xlarge|g4dn.4xlarge|g4dn.8xlarge|g4dn.xlarge|h1.16xlarge|h1.2xlarge|h1.4xlarge|h1.8xlarge|hi1.4xlarge|hs1.8xlarge|i2.2xlarge|i2.4xlarge|i2.8xlarge|i2.xlarge|i3.16xlarge|i3.2xlarge|i3.4xlarge|i3.8xlarge|i3.large|i3.metal|i3.xlarge|i3en.12xlarge|i3en.24xlarge|i3en.2xlarge|i3en.3xlarge|i3en.6xlarge|i3en.large|i3en.metal|i3en.xlarge|inf1.24xlarge|inf1.2xlarge|inf1.6xlarge|inf1.xlarge|m1.large|m1.medium|m1.small|m1.xlarge|m2.2xlarge|m2.4xlarge|m2.xlarge|m3.2xlarge|m3.large|m3.medium|m3.xlarge|m4.10xlarge|m4.16xlarge|m4.2xlarge|m4.4xlarge|m4.large|m4.xlarge|m5.12xlarge|m5.16xlarge|m5.24xlarge|m5.2xlarge|m5.4xlarge|m5.8xlarge|m5.large|m5.metal|m5.xlarge|m5a.12xlarge|m5a.16xlarge|m5a.24xlarge|m5a.2xlarge|m5a.4xlarge|m5a.8xlarge|m5a.large|m5a.xlarge|m5ad.12xlarge|m5ad.16xlarge|m5ad.24xlarge|m5ad.2xlarge|m5ad.4xlarge|m5ad.8xlarge|m5ad.large|m5ad.xlarge|m5d.12xlarge|m5d.16xlarge|m5d.24xlarge|m5d.2xlarge|m5d.4xlarge|m5d.8xlarge|m5d.large|m5d.metal|m5d.xlarge|m5dn.12xlarge|m5dn.16xlarge|m5dn.24xlarge|m5dn.2xlarge|m5dn.4xlarge|m5dn.8xlarge|m5dn.large|m5dn.xlarge|m5n.12xlarge|m5n.16xlarge|m5n.24xlarge|m5n.2xlarge|m5n.4xlarge|m5n.8xlarge|m5n.large|m5n.xlarge|p2.16xlarge|p2.8xlarge|p2.xlarge|p3.16xlarge|p3.2xlarge|p3.8xlarge|p3dn.24xlarge|r3.2xlarge|r3.4xlarge|r3.8xlarge|r3.large|r3.xlarge|r4.16xlarge|r4.2xlarge|r4.4xlarge|r4.8xlarge|r4.large|r4.xlarge|r5.12xlarge|r5.16xlarge|r5.24xlarge|r5.2xlarge|r5.4xlarge|r5.8xlarge|r5.large|r5.metal|r5.xlarge|r5a.12xlarge|r5a.16xlarge|r5a.24xlarge|r5a.2xlarge|r5a.4xlarge|r5a.8xlarge|r5a.large|r5a.xlarge|r5ad.12xlarge|r5ad.16xlarge|r5ad.24xlarge|r5ad.2xlarge|r5ad.4xlarge|r5ad.8xlarge|r5ad.large|r5ad.xlarge|r5d.12xlarge|r5d.16xlarge|r5d.24xlarge|r5d.2xlarge|r5d.4xlarge|r5d.8xlarge|r5d.large|r5d.metal|r5d.xlarge|r5dn.12xlarge|r5dn.16xlarge|r5dn.24xlarge|r5dn.2xlarge|r5dn.4xlarge|r5dn.8xlarge|r5dn.large|r5dn.xlarge|r5n.12xlarge|r5n.16xlarge|r5n.24xlarge|r5n.2xlarge|r5n.4xlarge|r5n.8xlarge|r5n.large|r5n.xlarge|t1.micro|t2.2xlarge|t2.large|t2.medium|t2.micro|t2.nano|t2.small|t2.xlarge|t3.2xlarge|t3.large|t3.medium|t3.micro|t3.nano|t3.small|t3.xlarge|t3a.2xlarge|t3a.large|t3a.medium|t3a.micro|t3a.nano|t3a.small|t3a.xlarge|u-12tb1.metal|u-18tb1.metal|u-24tb1.metal|u-6tb1.metal|u-9tb1.metal|x1.16xlarge|x1.32xlarge|x1e.16xlarge|x1e.2xlarge|x1e.32xlarge|x1e.4xlarge|x1e.8xlarge|x1e.xlarge|z1d.12xlarge|z1d.2xlarge|z1d.3xlarge|z1d.6xlarge|z1d.large|z1d.metal|z1d.xlarge]",
        "Required": "No",
        "SampleValue": "a1.2xlarge|a1.4xlarge|a1.large|a1.medium|a1.metal|a1.xlarge|c1.medium|c1.xlarge|c3.2xlarge|c3.4xlarge|c3.8xlarge|c3.large|c3.xlarge|c4.2xlarge|c4.4xlarge|c4.8xlarge|c4.large|c4.xlarge|c5.12xlarge|c5.18xlarge|c5.24xlarge|c5.2xlarge|c5.4xlarge|c5.9xlarge|c5.large|c5.metal|c5.xlarge|c5d.12xlarge|c5d.18xlarge|c5d.24xlarge|c5d.2xlarge|c5d.4xlarge|c5d.9xlarge|c5d.large|c5d.metal|c5d.xlarge|c5n.18xlarge|c5n.2xlarge|c5n.4xlarge|c5n.9xlarge|c5n.large|c5n.xlarge|cc1.4xlarge|cc2.8xlarge|cg1.4xlarge|cr1.8xlarge|d2.2xlarge|d2.4xlarge|d2.8xlarge|d2.xlarge|f1.16xlarge|f1.2xlarge|f1.4xlarge|g2.2xlarge|g2.8xlarge|g3.16xlarge|g3.4xlarge|g3.8xlarge|g3s.xlarge|g4dn.12xlarge|g4dn.16xlarge|g4dn.2xlarge|g4dn.4xlarge|g4dn.8xlarge|g4dn.xlarge|h1.16xlarge|h1.2xlarge|h1.4xlarge|h1.8xlarge|hi1.4xlarge|hs1.8xlarge|i2.2xlarge|i2.4xlarge|i2.8xlarge|i2.xlarge|i3.16xlarge|i3.2xlarge|i3.4xlarge|i3.8xlarge|i3.large|i3.metal|i3.xlarge|i3en.12xlarge|i3en.24xlarge|i3en.2xlarge|i3en.3xlarge|i3en.6xlarge|i3en.large|i3en.metal|i3en.xlarge|inf1.24xlarge|inf1.2xlarge|inf1.6xlarge|inf1.xlarge|m1.large|m1.medium|m1.small|m1.xlarge|m2.2xlarge|m2.4xlarge|m2.xlarge|m3.2xlarge|m3.large|m3.medium|m3.xlarge|m4.10xlarge|m4.16xlarge|m4.2xlarge|m4.4xlarge|m4.large|m4.xlarge|m5.12xlarge|m5.16xlarge|m5.24xlarge|m5.2xlarge|m5.4xlarge|m5.8xlarge|m5.large|m5.metal|m5.xlarge|m5a.12xlarge|m5a.16xlarge|m5a.24xlarge|m5a.2xlarge|m5a.4xlarge|m5a.8xlarge|m5a.large|m5a.xlarge|m5ad.12xlarge|m5ad.16xlarge|m5ad.24xlarge|m5ad.2xlarge|m5ad.4xlarge|m5ad.8xlarge|m5ad.large|m5ad.xlarge|m5d.12xlarge|m5d.16xlarge|m5d.24xlarge|m5d.2xlarge|m5d.4xlarge|m5d.8xlarge|m5d.large|m5d.metal|m5d.xlarge|m5dn.12xlarge|m5dn.16xlarge|m5dn.24xlarge|m5dn.2xlarge|m5dn.4xlarge|m5dn.8xlarge|m5dn.large|m5dn.xlarge|m5n.12xlarge|m5n.16xlarge|m5n.24xlarge|m5n.2xlarge|m5n.4xlarge|m5n.8xlarge|m5n.large|m5n.xlarge|p2.16xlarge|p2.8xlarge|p2.xlarge|p3.16xlarge|p3.2xlarge|p3.8xlarge|p3dn.24xlarge|r3.2xlarge|r3.4xlarge|r3.8xlarge|r3.large|r3.xlarge|r4.16xlarge|r4.2xlarge|r4.4xlarge|r4.8xlarge|r4.large|r4.xlarge|r5.12xlarge|r5.16xlarge|r5.24xlarge|r5.2xlarge|r5.4xlarge|r5.8xlarge|r5.large|r5.metal|r5.xlarge|r5a.12xlarge|r5a.16xlarge|r5a.24xlarge|r5a.2xlarge|r5a.4xlarge|r5a.8xlarge|r5a.large|r5a.xlarge|r5ad.12xlarge|r5ad.16xlarge|r5ad.24xlarge|r5ad.2xlarge|r5ad.4xlarge|r5ad.8xlarge|r5ad.large|r5ad.xlarge|r5d.12xlarge|r5d.16xlarge|r5d.24xlarge|r5d.2xlarge|r5d.4xlarge|r5d.8xlarge|r5d.large|r5d.metal|r5d.xlarge|r5dn.12xlarge|r5dn.16xlarge|r5dn.24xlarge|r5dn.2xlarge|r5dn.4xlarge|r5dn.8xlarge|r5dn.large|r5dn.xlarge|r5n.12xlarge|r5n.16xlarge|r5n.24xlarge|r5n.2xlarge|r5n.4xlarge|r5n.8xlarge|r5n.large|r5n.xlarge|t1.micro|t2.2xlarge|t2.large|t2.medium|t2.micro|t2.nano|t2.small|t2.xlarge|t3.2xlarge|t3.large|t3.medium|t3.micro|t3.nano|t3.small|t3.xlarge|t3a.2xlarge|t3a.large|t3a.medium|t3a.micro|t3a.nano|t3a.small|t3a.xlarge|u-12tb1.metal|u-18tb1.metal|u-24tb1.metal|u-6tb1.metal|u-9tb1.metal|x1.16xlarge|x1.32xlarge|x1e.16xlarge|x1e.2xlarge|x1e.32xlarge|x1e.4xlarge|x1e.8xlarge|x1e.xlarge|z1d.12xlarge|z1d.2xlarge|z1d.3xlarge|z1d.6xlarge|z1d.large|z1d.metal|z1d.xlarge",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.instancetype",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.kernelid": {
        "Required": "No",
        "SampleValue": "TODO-kernelid",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.kernelid",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.keyname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.keyname",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.licensespecifications": {
        "Required": "No",
        "Type": "List of [LicenseSpecification",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.licensespecifications",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.monitoring": {
        "Required": "No",
        "Type": "Monitoring",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.monitoring",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.monitoring.cfnproperties": [
        "Enabled",
        "UniqueKey"
    ],
    "ec2.launchtemplate.launchtemplatedata.monitoring.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.monitoring.enabled",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.networkinterfaces": {
        "Required": "No",
        "Type": "List of [NetworkInterface",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.networkinterfaces",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.placement": {
        "Required": "No",
        "Type": "Placement",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.affinity": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.affinity",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.availabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.availabilityzone",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.cfnproperties": [
        "HostId",
        "GroupName",
        "Tenancy",
        "AvailabilityZone",
        "Affinity",
        "UniqueKey"
    ],
    "ec2.launchtemplate.launchtemplatedata.placement.groupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.groupname",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.hostid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.hostid",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.placement.tenancy": {
        "Allowed Values": "dedicated | default | host",
        "AllowedValues": [
            "dedicated",
            "default",
            "host"
        ],
        "Pattern": "^[dedicated|default|host]",
        "Required": "No",
        "SampleValue": "dedicated|default|host",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.placement.tenancy",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.ramdiskid": {
        "Required": "No",
        "SampleValue": "TODO-ramdiskid",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.ramdiskid",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.securitygroupids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.securitygroupids",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.securitygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.securitygroups",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.tagspecifications": {
        "Required": "No",
        "Type": "List of [TagSpecification",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.tagspecifications",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplatedata.userdata": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplatedata.userdata",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.launchtemplateelasticinferenceaccelerator.cfnproperties": [
        "Type",
        "UniqueKey"
    ],
    "ec2.launchtemplate.launchtemplateelasticinferenceaccelerator.type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.launchtemplateelasticinferenceaccelerator.type",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.licensespecification.cfnproperties": [
        "LicenseConfigurationArn",
        "UniqueKey"
    ],
    "ec2.launchtemplate.licensespecification.licenseconfigurationarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.licensespecification.licenseconfigurationarn",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.networkinterface.associatepublicipaddress": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.networkinterface.associatepublicipaddress",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.networkinterface.cfnproperties": [
        "DeviceIndex",
        "Description",
        "Ipv6AddressCount",
        "PrivateIpAddresses",
        "SubnetId",
        "DeleteOnTermination",
        "InterfaceType",
        "PrivateIpAddress",
        "Groups",
        "Ipv6Addresses",
        "NetworkInterfaceId",
        "AssociatePublicIpAddress",
        "SecondaryPrivateIpAddressCount",
        "UniqueKey"
    ],
    "ec2.launchtemplate.networkinterface.deleteontermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.networkinterface.deleteontermination",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.networkinterface.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.networkinterface.description",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.networkinterface.deviceindex": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.networkinterface.deviceindex",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.networkinterface.groups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.launchtemplate.networkinterface.groups",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.networkinterface.interfacetype": {
        "Required": "No",
        "SampleValue": "TODO-interfacetype",
        "UniqueKey": "ec2.launchtemplate.networkinterface.interfacetype",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.networkinterface.ipv6addresscount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.networkinterface.ipv6addresscount",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.networkinterface.ipv6addresses": {
        "Required": "No",
        "Type": "List of [Ipv6Add",
        "UniqueKey": "ec2.launchtemplate.networkinterface.ipv6addresses",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.networkinterface.networkinterfaceid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.networkinterface.networkinterfaceid",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.networkinterface.privateipaddress": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.networkinterface.privateipaddress",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.networkinterface.privateipaddresses": {
        "Required": "No",
        "Type": "List of [PrivateIpAdd",
        "UniqueKey": "ec2.launchtemplate.networkinterface.privateipaddresses",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.networkinterface.secondaryprivateipaddresscount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.launchtemplate.networkinterface.secondaryprivateipaddresscount",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.networkinterface.subnetid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.networkinterface.subnetid",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.privateipadd.cfnproperties": [
        "Primary",
        "PrivateIpAddress",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.launchtemplate.privateipadd.primary": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.launchtemplate.privateipadd.primary",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.privateipadd.privateipaddress": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.privateipadd.privateipaddress",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.tagspecification.cfnproperties": [
        "ResourceType",
        "Tags",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.launchtemplate.tagspecification.resourcetype": {
        "Allowed Values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | elastic-ip | fleet | fpga-image | host-reservation | image | instance | internet-gateway | key-pair | launch-template | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-peering-connection | vpn-connection | vpn-gateway",
        "AllowedValues": [
            "client-vpn-endpoint",
            "customer-gateway",
            "dedicated-host",
            "dhcp-options",
            "elastic-ip",
            "fleet",
            "fpga-image",
            "host-reservation",
            "image",
            "instance",
            "internet-gateway",
            "key-pair",
            "launch-template",
            "natgateway",
            "network-acl",
            "network-interface",
            "placement-group",
            "reserved-instances",
            "route-table",
            "security-group",
            "snapshot",
            "spot-fleet-request",
            "spot-instances-request",
            "subnet",
            "traffic-mirror-filter",
            "traffic-mirror-session",
            "traffic-mirror-target",
            "transit-gateway",
            "transit-gateway-attachment",
            "transit-gateway-multicast-domain",
            "transit-gateway-route-table",
            "volume",
            "vpc",
            "vpc-peering-connection",
            "vpn-connection",
            "vpn-gateway"
        ],
        "Pattern": "^[client-vpn-endpoint|customer-gateway|dedicated-host|dhcp-options|elastic-ip|fleet|fpga-image|host-reservation|image|instance|internet-gateway|key-pair|launch-template|natgateway|network-acl|network-interface|placement-group|reserved-instances|route-table|security-group|snapshot|spot-fleet-request|spot-instances-request|subnet|traffic-mirror-filter|traffic-mirror-session|traffic-mirror-target|transit-gateway|transit-gateway-attachment|transit-gateway-multicast-domain|transit-gateway-route-table|volume|vpc|vpc-peering-connection|vpn-connection|vpn-gateway]",
        "Required": "No",
        "SampleValue": "client-vpn-endpoint|customer-gateway|dedicated-host|dhcp-options|elastic-ip|fleet|fpga-image|host-reservation|image|instance|internet-gateway|key-pair|launch-template|natgateway|network-acl|network-interface|placement-group|reserved-instances|route-table|security-group|snapshot|spot-fleet-request|spot-instances-request|subnet|traffic-mirror-filter|traffic-mirror-session|traffic-mirror-target|transit-gateway|transit-gateway-attachment|transit-gateway-multicast-domain|transit-gateway-route-table|volume|vpc|vpc-peering-connection|vpn-connection|vpn-gateway",
        "Type": "String",
        "UniqueKey": "ec2.launchtemplate.tagspecification.resourcetype",
        "UpdateRequires": "No interruption"
    },
    "ec2.launchtemplate.tagspecification.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.launchtemplate.tagspecification.tags",
        "UpdateRequires": "No interruption"
    },
    "ec2.mount.point.cfnproperties": [
        "Device",
        "VolumeId",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.mount.point.device": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.mount.point.device",
        "UpdateRequires": "No interruption"
    },
    "ec2.mount.point.volumeid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.mount.point.volumeid",
        "UpdateRequires": "No interruption"
    },
    "ec2.network.iface.embedded.associatepublicipaddress": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.network.iface.embedded.associatepublicipaddress",
        "UpdateRequires": "No interruption"
    },
    "ec2.network.iface.embedded.cfnproperties": [
        "DeviceIndex",
        "GroupSet",
        "Description",
        "Ipv6AddressCount",
        "PrivateIpAddresses",
        "SubnetId",
        "DeleteOnTermination",
        "PrivateIpAddress",
        "Ipv6Addresses",
        "NetworkInterfaceId",
        "AssociatePublicIpAddress",
        "SecondaryPrivateIpAddressCount",
        "UniqueKey"
    ],
    "ec2.network.iface.embedded.deleteontermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.network.iface.embedded.deleteontermination",
        "UpdateRequires": "No interruption"
    },
    "ec2.network.iface.embedded.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.network.iface.embedded.description",
        "UpdateRequires": "No interruption"
    },
    "ec2.network.iface.embedded.deviceindex": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.network.iface.embedded.deviceindex",
        "UpdateRequires": "No interruption"
    },
    "ec2.network.iface.embedded.groupset": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.network.iface.embedded.groupset",
        "UpdateRequires": "No interruption"
    },
    "ec2.network.iface.embedded.ipv6addresscount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.network.iface.embedded.ipv6addresscount",
        "UpdateRequires": "No interruption"
    },
    "ec2.network.iface.embedded.ipv6addresses": {
        "Required": "No",
        "Type": "List of [InstanceIpv6Address",
        "UniqueKey": "ec2.network.iface.embedded.ipv6addresses",
        "UpdateRequires": "No interruption"
    },
    "ec2.network.iface.embedded.networkinterfaceid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.network.iface.embedded.networkinterfaceid",
        "UpdateRequires": "No interruption"
    },
    "ec2.network.iface.embedded.privateipaddress": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.network.iface.embedded.privateipaddress",
        "UpdateRequires": "No interruption"
    },
    "ec2.network.iface.embedded.privateipaddresses": {
        "Required": "No",
        "Type": "List of [PrivateIpAddressSpecification",
        "UniqueKey": "ec2.network.iface.embedded.privateipaddresses",
        "UpdateRequires": "No interruption"
    },
    "ec2.network.iface.embedded.secondaryprivateipaddresscount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.network.iface.embedded.secondaryprivateipaddresscount",
        "UpdateRequires": "No interruption"
    },
    "ec2.network.iface.embedded.subnetid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.network.iface.embedded.subnetid",
        "UpdateRequires": "No interruption"
    },
    "ec2.network.interface.privateipspec.1.cfnproperties": [
        "Primary",
        "PrivateIpAddress",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.network.interface.privateipspec.1.primary": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.network.interface.privateipspec.1.primary",
        "UpdateRequires": "No interruption"
    },
    "ec2.network.interface.privateipspec.1.privateipaddress": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.network.interface.privateipspec.1.privateipaddress",
        "UpdateRequires": "No interruption"
    },
    "ec2.network.interface.privateipspec.cfnproperties": [
        "Primary",
        "PrivateIpAddress",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.network.interface.privateipspec.primary": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.network.interface.privateipspec.primary",
        "UpdateRequires": "No interruption"
    },
    "ec2.network.interface.privateipspec.privateipaddress": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.network.interface.privateipspec.privateipaddress",
        "UpdateRequires": "No interruption"
    },
    "ec2.networkaclentry.icmp.cfnproperties": [
        "Code",
        "Type",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.networkaclentry.icmp.code": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.networkaclentry.icmp.code",
        "UpdateRequires": "No interruption"
    },
    "ec2.networkaclentry.icmp.type": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.networkaclentry.icmp.type",
        "UpdateRequires": "No interruption"
    },
    "ec2.networkaclentry.portrange.cfnproperties": [
        "To",
        "From",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.networkaclentry.portrange.from": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.networkaclentry.portrange.from",
        "UpdateRequires": "No interruption"
    },
    "ec2.networkaclentry.portrange.to": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.networkaclentry.portrange.to",
        "UpdateRequires": "No interruption"
    },
    "ec2.networkinterface.instanceipv6address.cfnproperties": [
        "Ipv6Address",
        "UniqueKey"
    ],
    "ec2.networkinterface.instanceipv6address.ipv6address": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.networkinterface.instanceipv6address.ipv6address",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.cfnproperties": [
        "VpcId",
        "Tags",
        "SecurityGroupEgress",
        "SecurityGroupIngress",
        "GroupName",
        "GroupDescription",
        "UniqueKey"
    ],
    "ec2.security.group.groupdescription": {
        "Required": "Yes",
        "SampleValue": "TODO-groupdescription",
        "UniqueKey": "ec2.security.group.groupdescription",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.groupname": {
        "Required": "No",
        "SampleValue": "TODO-groupname",
        "UniqueKey": "ec2.security.group.groupname",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.cfnproperties": [
        "Description",
        "FromPort",
        "SourceSecurityGroupOwnerId",
        "CidrIp",
        "SourceSecurityGroupId",
        "GroupName",
        "SourcePrefixListId",
        "SourceSecurityGroupName",
        "IpProtocol",
        "ToPort",
        "CidrIpv6",
        "GroupId",
        "UniqueKey"
    ],
    "ec2.security.group.ingress.cidrip": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.cidrip",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.cidripv6": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.cidripv6",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.description",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.ingress.fromport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.security.group.ingress.fromport",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.groupid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.groupid",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.groupname": {
        "Required": "No",
        "SampleValue": "TODO-groupname",
        "UniqueKey": "ec2.security.group.ingress.groupname",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.ipprotocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.ipprotocol",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.sourceprefixlistid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.sourceprefixlistid",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.sourcesecuritygroupid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.sourcesecuritygroupid",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.sourcesecuritygroupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.sourcesecuritygroupname",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.sourcesecuritygroupownerid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.security.group.ingress.sourcesecuritygroupownerid",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.ingress.toport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.security.group.ingress.toport",
        "UpdateRequires": "Replacement"
    },
    "ec2.security.group.rule.1.cfnproperties": [
        "Description",
        "SourceSecurityGroupOwnerId",
        "CidrIp",
        "SourceSecurityGroupId",
        "FromPort",
        "SourcePrefixListId",
        "SourceSecurityGroupName",
        "IpProtocol",
        "ToPort",
        "CidrIpv6",
        "UniqueKey"
    ],
    "ec2.security.group.rule.1.cidrip": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.cidrip",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.rule.1.cidripv6": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.cidripv6",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.rule.1.description": {
        "Required": "No",
        "SampleValue": "TODO-description",
        "UniqueKey": "ec2.security.group.rule.1.description",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.rule.1.fromport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.security.group.rule.1.fromport",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.rule.1.ipprotocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.ipprotocol",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.rule.1.sourceprefixlistid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.sourceprefixlistid",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.rule.1.sourcesecuritygroupid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.sourcesecuritygroupid",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.rule.1.sourcesecuritygroupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.sourcesecuritygroupname",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.rule.1.sourcesecuritygroupownerid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.1.sourcesecuritygroupownerid",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.rule.1.toport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.security.group.rule.1.toport",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.rule.cfnproperties": [
        "DestinationPrefixListId",
        "Description",
        "CidrIp",
        "FromPort",
        "IpProtocol",
        "ToPort",
        "CidrIpv6",
        "DestinationSecurityGroupId",
        "UniqueKey"
    ],
    "ec2.security.group.rule.cidrip": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.cidrip",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.rule.cidripv6": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.cidripv6",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.rule.description": {
        "Required": "No",
        "SampleValue": "TODO-description",
        "UniqueKey": "ec2.security.group.rule.description",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.rule.destinationprefixlistid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.destinationprefixlistid",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.rule.destinationsecuritygroupid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.destinationsecuritygroupid",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.rule.fromport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.security.group.rule.fromport",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.rule.ipprotocol": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.security.group.rule.ipprotocol",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.rule.toport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.security.group.rule.toport",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.securitygroupegress": {
        "Required": "No",
        "Type": "List of [Egress",
        "UniqueKey": "ec2.security.group.securitygroupegress",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.securitygroupingress": {
        "Required": "No",
        "Type": "List of [Ingress",
        "UniqueKey": "ec2.security.group.securitygroupingress",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.security.group.tags",
        "UpdateRequires": "No interruption"
    },
    "ec2.security.group.vpcid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.security.group.vpcid",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.classicloadbalancer.cfnproperties": [
        "Name",
        "UniqueKey"
    ],
    "ec2.spotfleet.classicloadbalancer.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.classicloadbalancer.name",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.classicloadbalancersconfig.cfnproperties": [
        "ClassicLoadBalancers",
        "UniqueKey"
    ],
    "ec2.spotfleet.classicloadbalancersconfig.classicloadbalancers": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of [ClassicLoadBalancer",
        "UniqueKey": "ec2.spotfleet.classicloadbalancersconfig.classicloadbalancers",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.fleetlaunchtemplatespecification.cfnproperties": [
        "LaunchTemplateName",
        "Version",
        "LaunchTemplateId",
        "UniqueKey"
    ],
    "ec2.spotfleet.fleetlaunchtemplatespecification.launchtemplateid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.fleetlaunchtemplatespecification.launchtemplateid",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.fleetlaunchtemplatespecification.launchtemplatename": {
        "Maximum": "128",
        "Minimum": "3",
        "Pattern": "[a-zA-Z0-9\\(\\)\\.\\-/_]+",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.fleetlaunchtemplatespecification.launchtemplatename",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.fleetlaunchtemplatespecification.version": {
        "Required": "Yes",
        "SampleValue": "TODO-version",
        "UniqueKey": "ec2.spotfleet.fleetlaunchtemplatespecification.version",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.instanceipv6address.cfnproperties": [
        "Ipv6Address",
        "UniqueKey"
    ],
    "ec2.spotfleet.instanceipv6address.ipv6address": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.instanceipv6address.ipv6address",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.launchtemplateconfig.cfnproperties": [
        "LaunchTemplateSpecification",
        "Overrides",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.spotfleet.launchtemplateconfig.launchtemplatespecification": {
        "Required": "No",
        "Type": "FleetLaunchTemplateSpecification",
        "UniqueKey": "ec2.spotfleet.launchtemplateconfig.launchtemplatespecification",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.launchtemplateconfig.overrides": {
        "Required": "No",
        "Type": "List of [LaunchTemplateOverrides",
        "UniqueKey": "ec2.spotfleet.launchtemplateconfig.overrides",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.launchtemplateoverrides.availabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.launchtemplateoverrides.availabilityzone",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.launchtemplateoverrides.cfnproperties": [
        "SubnetId",
        "AvailabilityZone",
        "InstanceType",
        "SpotPrice",
        "WeightedCapacity",
        "UniqueKey"
    ],
    "ec2.spotfleet.launchtemplateoverrides.instancetype": {
        "Allowed Values": "a1.2xlarge | a1.4xlarge | a1.large | a1.medium | a1.metal | a1.xlarge | c1.medium | c1.xlarge | c3.2xlarge | c3.4xlarge | c3.8xlarge | c3.large | c3.xlarge | c4.2xlarge | c4.4xlarge | c4.8xlarge | c4.large | c4.xlarge | c5.12xlarge | c5.18xlarge | c5.24xlarge | c5.2xlarge | c5.4xlarge | c5.9xlarge | c5.large | c5.metal | c5.xlarge | c5d.12xlarge | c5d.18xlarge | c5d.24xlarge | c5d.2xlarge | c5d.4xlarge | c5d.9xlarge | c5d.large | c5d.metal | c5d.xlarge | c5n.18xlarge | c5n.2xlarge | c5n.4xlarge | c5n.9xlarge | c5n.large | c5n.xlarge | cc1.4xlarge | cc2.8xlarge | cg1.4xlarge | cr1.8xlarge | d2.2xlarge | d2.4xlarge | d2.8xlarge | d2.xlarge | f1.16xlarge | f1.2xlarge | f1.4xlarge | g2.2xlarge | g2.8xlarge | g3.16xlarge | g3.4xlarge | g3.8xlarge | g3s.xlarge | g4dn.12xlarge | g4dn.16xlarge | g4dn.2xlarge | g4dn.4xlarge | g4dn.8xlarge | g4dn.xlarge | h1.16xlarge | h1.2xlarge | h1.4xlarge | h1.8xlarge | hi1.4xlarge | hs1.8xlarge | i2.2xlarge | i2.4xlarge | i2.8xlarge | i2.xlarge | i3.16xlarge | i3.2xlarge | i3.4xlarge | i3.8xlarge | i3.large | i3.metal | i3.xlarge | i3en.12xlarge | i3en.24xlarge | i3en.2xlarge | i3en.3xlarge | i3en.6xlarge | i3en.large | i3en.metal | i3en.xlarge | inf1.24xlarge | inf1.2xlarge | inf1.6xlarge | inf1.xlarge | m1.large | m1.medium | m1.small | m1.xlarge | m2.2xlarge | m2.4xlarge | m2.xlarge | m3.2xlarge | m3.large | m3.medium | m3.xlarge | m4.10xlarge | m4.16xlarge | m4.2xlarge | m4.4xlarge | m4.large | m4.xlarge | m5.12xlarge | m5.16xlarge | m5.24xlarge | m5.2xlarge | m5.4xlarge | m5.8xlarge | m5.large | m5.metal | m5.xlarge | m5a.12xlarge | m5a.16xlarge | m5a.24xlarge | m5a.2xlarge | m5a.4xlarge | m5a.8xlarge | m5a.large | m5a.xlarge | m5ad.12xlarge | m5ad.16xlarge | m5ad.24xlarge | m5ad.2xlarge | m5ad.4xlarge | m5ad.8xlarge | m5ad.large | m5ad.xlarge | m5d.12xlarge | m5d.16xlarge | m5d.24xlarge | m5d.2xlarge | m5d.4xlarge | m5d.8xlarge | m5d.large | m5d.metal | m5d.xlarge | m5dn.12xlarge | m5dn.16xlarge | m5dn.24xlarge | m5dn.2xlarge | m5dn.4xlarge | m5dn.8xlarge | m5dn.large | m5dn.xlarge | m5n.12xlarge | m5n.16xlarge | m5n.24xlarge | m5n.2xlarge | m5n.4xlarge | m5n.8xlarge | m5n.large | m5n.xlarge | p2.16xlarge | p2.8xlarge | p2.xlarge | p3.16xlarge | p3.2xlarge | p3.8xlarge | p3dn.24xlarge | r3.2xlarge | r3.4xlarge | r3.8xlarge | r3.large | r3.xlarge | r4.16xlarge | r4.2xlarge | r4.4xlarge | r4.8xlarge | r4.large | r4.xlarge | r5.12xlarge | r5.16xlarge | r5.24xlarge | r5.2xlarge | r5.4xlarge | r5.8xlarge | r5.large | r5.metal | r5.xlarge | r5a.12xlarge | r5a.16xlarge | r5a.24xlarge | r5a.2xlarge | r5a.4xlarge | r5a.8xlarge | r5a.large | r5a.xlarge | r5ad.12xlarge | r5ad.16xlarge | r5ad.24xlarge | r5ad.2xlarge | r5ad.4xlarge | r5ad.8xlarge | r5ad.large | r5ad.xlarge | r5d.12xlarge | r5d.16xlarge | r5d.24xlarge | r5d.2xlarge | r5d.4xlarge | r5d.8xlarge | r5d.large | r5d.metal | r5d.xlarge | r5dn.12xlarge | r5dn.16xlarge | r5dn.24xlarge | r5dn.2xlarge | r5dn.4xlarge | r5dn.8xlarge | r5dn.large | r5dn.xlarge | r5n.12xlarge | r5n.16xlarge | r5n.24xlarge | r5n.2xlarge | r5n.4xlarge | r5n.8xlarge | r5n.large | r5n.xlarge | t1.micro | t2.2xlarge | t2.large | t2.medium | t2.micro | t2.nano | t2.small | t2.xlarge | t3.2xlarge | t3.large | t3.medium | t3.micro | t3.nano | t3.small | t3.xlarge | t3a.2xlarge | t3a.large | t3a.medium | t3a.micro | t3a.nano | t3a.small | t3a.xlarge | u-12tb1.metal | u-18tb1.metal | u-24tb1.metal | u-6tb1.metal | u-9tb1.metal | x1.16xlarge | x1.32xlarge | x1e.16xlarge | x1e.2xlarge | x1e.32xlarge | x1e.4xlarge | x1e.8xlarge | x1e.xlarge | z1d.12xlarge | z1d.2xlarge | z1d.3xlarge | z1d.6xlarge | z1d.large | z1d.metal | z1d.xlarge",
        "AllowedValues": [
            "a1.2xlarge",
            "a1.4xlarge",
            "a1.large",
            "a1.medium",
            "a1.metal",
            "a1.xlarge",
            "c1.medium",
            "c1.xlarge",
            "c3.2xlarge",
            "c3.4xlarge",
            "c3.8xlarge",
            "c3.large",
            "c3.xlarge",
            "c4.2xlarge",
            "c4.4xlarge",
            "c4.8xlarge",
            "c4.large",
            "c4.xlarge",
            "c5.12xlarge",
            "c5.18xlarge",
            "c5.24xlarge",
            "c5.2xlarge",
            "c5.4xlarge",
            "c5.9xlarge",
            "c5.large",
            "c5.metal",
            "c5.xlarge",
            "c5d.12xlarge",
            "c5d.18xlarge",
            "c5d.24xlarge",
            "c5d.2xlarge",
            "c5d.4xlarge",
            "c5d.9xlarge",
            "c5d.large",
            "c5d.metal",
            "c5d.xlarge",
            "c5n.18xlarge",
            "c5n.2xlarge",
            "c5n.4xlarge",
            "c5n.9xlarge",
            "c5n.large",
            "c5n.xlarge",
            "cc1.4xlarge",
            "cc2.8xlarge",
            "cg1.4xlarge",
            "cr1.8xlarge",
            "d2.2xlarge",
            "d2.4xlarge",
            "d2.8xlarge",
            "d2.xlarge",
            "f1.16xlarge",
            "f1.2xlarge",
            "f1.4xlarge",
            "g2.2xlarge",
            "g2.8xlarge",
            "g3.16xlarge",
            "g3.4xlarge",
            "g3.8xlarge",
            "g3s.xlarge",
            "g4dn.12xlarge",
            "g4dn.16xlarge",
            "g4dn.2xlarge",
            "g4dn.4xlarge",
            "g4dn.8xlarge",
            "g4dn.xlarge",
            "h1.16xlarge",
            "h1.2xlarge",
            "h1.4xlarge",
            "h1.8xlarge",
            "hi1.4xlarge",
            "hs1.8xlarge",
            "i2.2xlarge",
            "i2.4xlarge",
            "i2.8xlarge",
            "i2.xlarge",
            "i3.16xlarge",
            "i3.2xlarge",
            "i3.4xlarge",
            "i3.8xlarge",
            "i3.large",
            "i3.metal",
            "i3.xlarge",
            "i3en.12xlarge",
            "i3en.24xlarge",
            "i3en.2xlarge",
            "i3en.3xlarge",
            "i3en.6xlarge",
            "i3en.large",
            "i3en.metal",
            "i3en.xlarge",
            "inf1.24xlarge",
            "inf1.2xlarge",
            "inf1.6xlarge",
            "inf1.xlarge",
            "m1.large",
            "m1.medium",
            "m1.small",
            "m1.xlarge",
            "m2.2xlarge",
            "m2.4xlarge",
            "m2.xlarge",
            "m3.2xlarge",
            "m3.large",
            "m3.medium",
            "m3.xlarge",
            "m4.10xlarge",
            "m4.16xlarge",
            "m4.2xlarge",
            "m4.4xlarge",
            "m4.large",
            "m4.xlarge",
            "m5.12xlarge",
            "m5.16xlarge",
            "m5.24xlarge",
            "m5.2xlarge",
            "m5.4xlarge",
            "m5.8xlarge",
            "m5.large",
            "m5.metal",
            "m5.xlarge",
            "m5a.12xlarge",
            "m5a.16xlarge",
            "m5a.24xlarge",
            "m5a.2xlarge",
            "m5a.4xlarge",
            "m5a.8xlarge",
            "m5a.large",
            "m5a.xlarge",
            "m5ad.12xlarge",
            "m5ad.16xlarge",
            "m5ad.24xlarge",
            "m5ad.2xlarge",
            "m5ad.4xlarge",
            "m5ad.8xlarge",
            "m5ad.large",
            "m5ad.xlarge",
            "m5d.12xlarge",
            "m5d.16xlarge",
            "m5d.24xlarge",
            "m5d.2xlarge",
            "m5d.4xlarge",
            "m5d.8xlarge",
            "m5d.large",
            "m5d.metal",
            "m5d.xlarge",
            "m5dn.12xlarge",
            "m5dn.16xlarge",
            "m5dn.24xlarge",
            "m5dn.2xlarge",
            "m5dn.4xlarge",
            "m5dn.8xlarge",
            "m5dn.large",
            "m5dn.xlarge",
            "m5n.12xlarge",
            "m5n.16xlarge",
            "m5n.24xlarge",
            "m5n.2xlarge",
            "m5n.4xlarge",
            "m5n.8xlarge",
            "m5n.large",
            "m5n.xlarge",
            "p2.16xlarge",
            "p2.8xlarge",
            "p2.xlarge",
            "p3.16xlarge",
            "p3.2xlarge",
            "p3.8xlarge",
            "p3dn.24xlarge",
            "r3.2xlarge",
            "r3.4xlarge",
            "r3.8xlarge",
            "r3.large",
            "r3.xlarge",
            "r4.16xlarge",
            "r4.2xlarge",
            "r4.4xlarge",
            "r4.8xlarge",
            "r4.large",
            "r4.xlarge",
            "r5.12xlarge",
            "r5.16xlarge",
            "r5.24xlarge",
            "r5.2xlarge",
            "r5.4xlarge",
            "r5.8xlarge",
            "r5.large",
            "r5.metal",
            "r5.xlarge",
            "r5a.12xlarge",
            "r5a.16xlarge",
            "r5a.24xlarge",
            "r5a.2xlarge",
            "r5a.4xlarge",
            "r5a.8xlarge",
            "r5a.large",
            "r5a.xlarge",
            "r5ad.12xlarge",
            "r5ad.16xlarge",
            "r5ad.24xlarge",
            "r5ad.2xlarge",
            "r5ad.4xlarge",
            "r5ad.8xlarge",
            "r5ad.large",
            "r5ad.xlarge",
            "r5d.12xlarge",
            "r5d.16xlarge",
            "r5d.24xlarge",
            "r5d.2xlarge",
            "r5d.4xlarge",
            "r5d.8xlarge",
            "r5d.large",
            "r5d.metal",
            "r5d.xlarge",
            "r5dn.12xlarge",
            "r5dn.16xlarge",
            "r5dn.24xlarge",
            "r5dn.2xlarge",
            "r5dn.4xlarge",
            "r5dn.8xlarge",
            "r5dn.large",
            "r5dn.xlarge",
            "r5n.12xlarge",
            "r5n.16xlarge",
            "r5n.24xlarge",
            "r5n.2xlarge",
            "r5n.4xlarge",
            "r5n.8xlarge",
            "r5n.large",
            "r5n.xlarge",
            "t1.micro",
            "t2.2xlarge",
            "t2.large",
            "t2.medium",
            "t2.micro",
            "t2.nano",
            "t2.small",
            "t2.xlarge",
            "t3.2xlarge",
            "t3.large",
            "t3.medium",
            "t3.micro",
            "t3.nano",
            "t3.small",
            "t3.xlarge",
            "t3a.2xlarge",
            "t3a.large",
            "t3a.medium",
            "t3a.micro",
            "t3a.nano",
            "t3a.small",
            "t3a.xlarge",
            "u-12tb1.metal",
            "u-18tb1.metal",
            "u-24tb1.metal",
            "u-6tb1.metal",
            "u-9tb1.metal",
            "x1.16xlarge",
            "x1.32xlarge",
            "x1e.16xlarge",
            "x1e.2xlarge",
            "x1e.32xlarge",
            "x1e.4xlarge",
            "x1e.8xlarge",
            "x1e.xlarge",
            "z1d.12xlarge",
            "z1d.2xlarge",
            "z1d.3xlarge",
            "z1d.6xlarge",
            "z1d.large",
            "z1d.metal",
            "z1d.xlarge"
        ],
        "Pattern": "^[a1.2xlarge|a1.4xlarge|a1.large|a1.medium|a1.metal|a1.xlarge|c1.medium|c1.xlarge|c3.2xlarge|c3.4xlarge|c3.8xlarge|c3.large|c3.xlarge|c4.2xlarge|c4.4xlarge|c4.8xlarge|c4.large|c4.xlarge|c5.12xlarge|c5.18xlarge|c5.24xlarge|c5.2xlarge|c5.4xlarge|c5.9xlarge|c5.large|c5.metal|c5.xlarge|c5d.12xlarge|c5d.18xlarge|c5d.24xlarge|c5d.2xlarge|c5d.4xlarge|c5d.9xlarge|c5d.large|c5d.metal|c5d.xlarge|c5n.18xlarge|c5n.2xlarge|c5n.4xlarge|c5n.9xlarge|c5n.large|c5n.xlarge|cc1.4xlarge|cc2.8xlarge|cg1.4xlarge|cr1.8xlarge|d2.2xlarge|d2.4xlarge|d2.8xlarge|d2.xlarge|f1.16xlarge|f1.2xlarge|f1.4xlarge|g2.2xlarge|g2.8xlarge|g3.16xlarge|g3.4xlarge|g3.8xlarge|g3s.xlarge|g4dn.12xlarge|g4dn.16xlarge|g4dn.2xlarge|g4dn.4xlarge|g4dn.8xlarge|g4dn.xlarge|h1.16xlarge|h1.2xlarge|h1.4xlarge|h1.8xlarge|hi1.4xlarge|hs1.8xlarge|i2.2xlarge|i2.4xlarge|i2.8xlarge|i2.xlarge|i3.16xlarge|i3.2xlarge|i3.4xlarge|i3.8xlarge|i3.large|i3.metal|i3.xlarge|i3en.12xlarge|i3en.24xlarge|i3en.2xlarge|i3en.3xlarge|i3en.6xlarge|i3en.large|i3en.metal|i3en.xlarge|inf1.24xlarge|inf1.2xlarge|inf1.6xlarge|inf1.xlarge|m1.large|m1.medium|m1.small|m1.xlarge|m2.2xlarge|m2.4xlarge|m2.xlarge|m3.2xlarge|m3.large|m3.medium|m3.xlarge|m4.10xlarge|m4.16xlarge|m4.2xlarge|m4.4xlarge|m4.large|m4.xlarge|m5.12xlarge|m5.16xlarge|m5.24xlarge|m5.2xlarge|m5.4xlarge|m5.8xlarge|m5.large|m5.metal|m5.xlarge|m5a.12xlarge|m5a.16xlarge|m5a.24xlarge|m5a.2xlarge|m5a.4xlarge|m5a.8xlarge|m5a.large|m5a.xlarge|m5ad.12xlarge|m5ad.16xlarge|m5ad.24xlarge|m5ad.2xlarge|m5ad.4xlarge|m5ad.8xlarge|m5ad.large|m5ad.xlarge|m5d.12xlarge|m5d.16xlarge|m5d.24xlarge|m5d.2xlarge|m5d.4xlarge|m5d.8xlarge|m5d.large|m5d.metal|m5d.xlarge|m5dn.12xlarge|m5dn.16xlarge|m5dn.24xlarge|m5dn.2xlarge|m5dn.4xlarge|m5dn.8xlarge|m5dn.large|m5dn.xlarge|m5n.12xlarge|m5n.16xlarge|m5n.24xlarge|m5n.2xlarge|m5n.4xlarge|m5n.8xlarge|m5n.large|m5n.xlarge|p2.16xlarge|p2.8xlarge|p2.xlarge|p3.16xlarge|p3.2xlarge|p3.8xlarge|p3dn.24xlarge|r3.2xlarge|r3.4xlarge|r3.8xlarge|r3.large|r3.xlarge|r4.16xlarge|r4.2xlarge|r4.4xlarge|r4.8xlarge|r4.large|r4.xlarge|r5.12xlarge|r5.16xlarge|r5.24xlarge|r5.2xlarge|r5.4xlarge|r5.8xlarge|r5.large|r5.metal|r5.xlarge|r5a.12xlarge|r5a.16xlarge|r5a.24xlarge|r5a.2xlarge|r5a.4xlarge|r5a.8xlarge|r5a.large|r5a.xlarge|r5ad.12xlarge|r5ad.16xlarge|r5ad.24xlarge|r5ad.2xlarge|r5ad.4xlarge|r5ad.8xlarge|r5ad.large|r5ad.xlarge|r5d.12xlarge|r5d.16xlarge|r5d.24xlarge|r5d.2xlarge|r5d.4xlarge|r5d.8xlarge|r5d.large|r5d.metal|r5d.xlarge|r5dn.12xlarge|r5dn.16xlarge|r5dn.24xlarge|r5dn.2xlarge|r5dn.4xlarge|r5dn.8xlarge|r5dn.large|r5dn.xlarge|r5n.12xlarge|r5n.16xlarge|r5n.24xlarge|r5n.2xlarge|r5n.4xlarge|r5n.8xlarge|r5n.large|r5n.xlarge|t1.micro|t2.2xlarge|t2.large|t2.medium|t2.micro|t2.nano|t2.small|t2.xlarge|t3.2xlarge|t3.large|t3.medium|t3.micro|t3.nano|t3.small|t3.xlarge|t3a.2xlarge|t3a.large|t3a.medium|t3a.micro|t3a.nano|t3a.small|t3a.xlarge|u-12tb1.metal|u-18tb1.metal|u-24tb1.metal|u-6tb1.metal|u-9tb1.metal|x1.16xlarge|x1.32xlarge|x1e.16xlarge|x1e.2xlarge|x1e.32xlarge|x1e.4xlarge|x1e.8xlarge|x1e.xlarge|z1d.12xlarge|z1d.2xlarge|z1d.3xlarge|z1d.6xlarge|z1d.large|z1d.metal|z1d.xlarge]",
        "Required": "No",
        "SampleValue": "a1.2xlarge|a1.4xlarge|a1.large|a1.medium|a1.metal|a1.xlarge|c1.medium|c1.xlarge|c3.2xlarge|c3.4xlarge|c3.8xlarge|c3.large|c3.xlarge|c4.2xlarge|c4.4xlarge|c4.8xlarge|c4.large|c4.xlarge|c5.12xlarge|c5.18xlarge|c5.24xlarge|c5.2xlarge|c5.4xlarge|c5.9xlarge|c5.large|c5.metal|c5.xlarge|c5d.12xlarge|c5d.18xlarge|c5d.24xlarge|c5d.2xlarge|c5d.4xlarge|c5d.9xlarge|c5d.large|c5d.metal|c5d.xlarge|c5n.18xlarge|c5n.2xlarge|c5n.4xlarge|c5n.9xlarge|c5n.large|c5n.xlarge|cc1.4xlarge|cc2.8xlarge|cg1.4xlarge|cr1.8xlarge|d2.2xlarge|d2.4xlarge|d2.8xlarge|d2.xlarge|f1.16xlarge|f1.2xlarge|f1.4xlarge|g2.2xlarge|g2.8xlarge|g3.16xlarge|g3.4xlarge|g3.8xlarge|g3s.xlarge|g4dn.12xlarge|g4dn.16xlarge|g4dn.2xlarge|g4dn.4xlarge|g4dn.8xlarge|g4dn.xlarge|h1.16xlarge|h1.2xlarge|h1.4xlarge|h1.8xlarge|hi1.4xlarge|hs1.8xlarge|i2.2xlarge|i2.4xlarge|i2.8xlarge|i2.xlarge|i3.16xlarge|i3.2xlarge|i3.4xlarge|i3.8xlarge|i3.large|i3.metal|i3.xlarge|i3en.12xlarge|i3en.24xlarge|i3en.2xlarge|i3en.3xlarge|i3en.6xlarge|i3en.large|i3en.metal|i3en.xlarge|inf1.24xlarge|inf1.2xlarge|inf1.6xlarge|inf1.xlarge|m1.large|m1.medium|m1.small|m1.xlarge|m2.2xlarge|m2.4xlarge|m2.xlarge|m3.2xlarge|m3.large|m3.medium|m3.xlarge|m4.10xlarge|m4.16xlarge|m4.2xlarge|m4.4xlarge|m4.large|m4.xlarge|m5.12xlarge|m5.16xlarge|m5.24xlarge|m5.2xlarge|m5.4xlarge|m5.8xlarge|m5.large|m5.metal|m5.xlarge|m5a.12xlarge|m5a.16xlarge|m5a.24xlarge|m5a.2xlarge|m5a.4xlarge|m5a.8xlarge|m5a.large|m5a.xlarge|m5ad.12xlarge|m5ad.16xlarge|m5ad.24xlarge|m5ad.2xlarge|m5ad.4xlarge|m5ad.8xlarge|m5ad.large|m5ad.xlarge|m5d.12xlarge|m5d.16xlarge|m5d.24xlarge|m5d.2xlarge|m5d.4xlarge|m5d.8xlarge|m5d.large|m5d.metal|m5d.xlarge|m5dn.12xlarge|m5dn.16xlarge|m5dn.24xlarge|m5dn.2xlarge|m5dn.4xlarge|m5dn.8xlarge|m5dn.large|m5dn.xlarge|m5n.12xlarge|m5n.16xlarge|m5n.24xlarge|m5n.2xlarge|m5n.4xlarge|m5n.8xlarge|m5n.large|m5n.xlarge|p2.16xlarge|p2.8xlarge|p2.xlarge|p3.16xlarge|p3.2xlarge|p3.8xlarge|p3dn.24xlarge|r3.2xlarge|r3.4xlarge|r3.8xlarge|r3.large|r3.xlarge|r4.16xlarge|r4.2xlarge|r4.4xlarge|r4.8xlarge|r4.large|r4.xlarge|r5.12xlarge|r5.16xlarge|r5.24xlarge|r5.2xlarge|r5.4xlarge|r5.8xlarge|r5.large|r5.metal|r5.xlarge|r5a.12xlarge|r5a.16xlarge|r5a.24xlarge|r5a.2xlarge|r5a.4xlarge|r5a.8xlarge|r5a.large|r5a.xlarge|r5ad.12xlarge|r5ad.16xlarge|r5ad.24xlarge|r5ad.2xlarge|r5ad.4xlarge|r5ad.8xlarge|r5ad.large|r5ad.xlarge|r5d.12xlarge|r5d.16xlarge|r5d.24xlarge|r5d.2xlarge|r5d.4xlarge|r5d.8xlarge|r5d.large|r5d.metal|r5d.xlarge|r5dn.12xlarge|r5dn.16xlarge|r5dn.24xlarge|r5dn.2xlarge|r5dn.4xlarge|r5dn.8xlarge|r5dn.large|r5dn.xlarge|r5n.12xlarge|r5n.16xlarge|r5n.24xlarge|r5n.2xlarge|r5n.4xlarge|r5n.8xlarge|r5n.large|r5n.xlarge|t1.micro|t2.2xlarge|t2.large|t2.medium|t2.micro|t2.nano|t2.small|t2.xlarge|t3.2xlarge|t3.large|t3.medium|t3.micro|t3.nano|t3.small|t3.xlarge|t3a.2xlarge|t3a.large|t3a.medium|t3a.micro|t3a.nano|t3a.small|t3a.xlarge|u-12tb1.metal|u-18tb1.metal|u-24tb1.metal|u-6tb1.metal|u-9tb1.metal|x1.16xlarge|x1.32xlarge|x1e.16xlarge|x1e.2xlarge|x1e.32xlarge|x1e.4xlarge|x1e.8xlarge|x1e.xlarge|z1d.12xlarge|z1d.2xlarge|z1d.3xlarge|z1d.6xlarge|z1d.large|z1d.metal|z1d.xlarge",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.launchtemplateoverrides.instancetype",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.launchtemplateoverrides.spotprice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.launchtemplateoverrides.spotprice",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.launchtemplateoverrides.subnetid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.launchtemplateoverrides.subnetid",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.launchtemplateoverrides.weightedcapacity": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "ec2.spotfleet.launchtemplateoverrides.weightedcapacity",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.loadbalancersconfig.cfnproperties": [
        "TargetGroupsConfig",
        "ClassicLoadBalancersConfig",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.spotfleet.loadbalancersconfig.classicloadbalancersconfig": {
        "Required": "No",
        "Type": "ClassicLoadBalancersConfig",
        "UniqueKey": "ec2.spotfleet.loadbalancersconfig.classicloadbalancersconfig",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.loadbalancersconfig.targetgroupsconfig": {
        "Required": "No",
        "Type": "TargetGroupsConfig",
        "UniqueKey": "ec2.spotfleet.loadbalancersconfig.targetgroupsconfig",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.allocationstrategy": {
        "Allowed Values": "capacityOptimized | diversified | lowestPrice",
        "AllowedValues": [
            "capacityOptimized",
            "diversified",
            "lowestPrice"
        ],
        "Pattern": "^[capacityOptimized|diversified|lowestPrice]",
        "Required": "No",
        "SampleValue": "capacityOptimized|diversified|lowestPrice",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.allocationstrategy",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.cfnproperties": [
        "Type",
        "ValidUntil",
        "LaunchTemplateConfigs",
        "TerminateInstancesWithExpiration",
        "InstanceInterruptionBehavior",
        "LaunchSpecifications",
        "LoadBalancersConfig",
        "IamFleetRole",
        "TargetCapacity",
        "ValidFrom",
        "ExcessCapacityTerminationPolicy",
        "ReplaceUnhealthyInstances",
        "SpotPrice",
        "AllocationStrategy",
        "UniqueKey"
    ],
    "ec2.spotfleet.spotfleetrequestconfigdata.excesscapacityterminationpolicy": {
        "Allowed Values": "default | noTermination",
        "AllowedValues": [
            "default",
            "noTermination"
        ],
        "Pattern": "^[default|noTermination]",
        "Required": "No",
        "SampleValue": "default|noTermination",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.excesscapacityterminationpolicy",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.iamfleetrole": {
        "Required": "Yes",
        "SampleValue": "TODO-iamfleetrole",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.iamfleetrole",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.instanceinterruptionbehavior": {
        "Allowed Values": "hibernate | stop | terminate",
        "AllowedValues": [
            "hibernate",
            "stop",
            "terminate"
        ],
        "Pattern": "^[hibernate|stop|terminate]",
        "Required": "No",
        "SampleValue": "hibernate|stop|terminate",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.instanceinterruptionbehavior",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications": {
        "Required": "Conditional",
        "Type": "List of [SpotFleetLaunchSpecification",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings": {
        "Required": "No",
        "Type": "List of [BlockDeviceMapping",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.cfnproperties": [
        "VirtualName",
        "DeviceName",
        "NoDevice",
        "Ebs",
        "UniqueKey"
    ],
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.devicename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.devicename",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs": {
        "Required": "Conditional",
        "Type": "EbsBlockDevice",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.cfnproperties": [
        "VolumeSize",
        "Encrypted",
        "VolumeType",
        "DeleteOnTermination",
        "SnapshotId",
        "Iops",
        "UniqueKey"
    ],
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.deleteontermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.deleteontermination",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.encrypted",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.iops": {
        "Required": "No",
        "SampleValue": "TODO-iops",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.iops",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.snapshotid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.snapshotid",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.volumesize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.volumesize",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.volumetype": {
        "AllowedValues": [
            "gp2",
            "io1",
            "sc1",
            "st1",
            "standard"
        ],
        "Pattern": "^[gp2|io1|sc1|st1|standard]",
        "Required": "No",
        "SampleValue": "gp2|io1|sc1|st1|standard",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.ebs.volumetype",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.nodevice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.nodevice",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.virtualname": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.blockdevicemappings.virtualname",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.cfnproperties": [
        "WeightedCapacity",
        "UserData",
        "SubnetId",
        "Monitoring",
        "TagSpecifications",
        "ImageId",
        "KeyName",
        "BlockDeviceMappings",
        "EbsOptimized",
        "SecurityGroups",
        "RamdiskId",
        "KernelId",
        "Placement",
        "IamInstanceProfile",
        "InstanceType",
        "SpotPrice",
        "NetworkInterfaces",
        "UniqueKey"
    ],
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.ebsoptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.ebsoptimized",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.iaminstanceprofile": {
        "Required": "No",
        "Type": "IamInstanceProfileSpecification",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.iaminstanceprofile",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.iaminstanceprofile.arn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.iaminstanceprofile.arn",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.iaminstanceprofile.cfnproperties": [
        "Arn",
        "UniqueKey"
    ],
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.imageid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.imageid",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.instancetype": {
        "Allowed Values": "a1.2xlarge | a1.4xlarge | a1.large | a1.medium | a1.metal | a1.xlarge | c1.medium | c1.xlarge | c3.2xlarge | c3.4xlarge | c3.8xlarge | c3.large | c3.xlarge | c4.2xlarge | c4.4xlarge | c4.8xlarge | c4.large | c4.xlarge | c5.12xlarge | c5.18xlarge | c5.24xlarge | c5.2xlarge | c5.4xlarge | c5.9xlarge | c5.large | c5.metal | c5.xlarge | c5d.12xlarge | c5d.18xlarge | c5d.24xlarge | c5d.2xlarge | c5d.4xlarge | c5d.9xlarge | c5d.large | c5d.metal | c5d.xlarge | c5n.18xlarge | c5n.2xlarge | c5n.4xlarge | c5n.9xlarge | c5n.large | c5n.xlarge | cc1.4xlarge | cc2.8xlarge | cg1.4xlarge | cr1.8xlarge | d2.2xlarge | d2.4xlarge | d2.8xlarge | d2.xlarge | f1.16xlarge | f1.2xlarge | f1.4xlarge | g2.2xlarge | g2.8xlarge | g3.16xlarge | g3.4xlarge | g3.8xlarge | g3s.xlarge | g4dn.12xlarge | g4dn.16xlarge | g4dn.2xlarge | g4dn.4xlarge | g4dn.8xlarge | g4dn.xlarge | h1.16xlarge | h1.2xlarge | h1.4xlarge | h1.8xlarge | hi1.4xlarge | hs1.8xlarge | i2.2xlarge | i2.4xlarge | i2.8xlarge | i2.xlarge | i3.16xlarge | i3.2xlarge | i3.4xlarge | i3.8xlarge | i3.large | i3.metal | i3.xlarge | i3en.12xlarge | i3en.24xlarge | i3en.2xlarge | i3en.3xlarge | i3en.6xlarge | i3en.large | i3en.metal | i3en.xlarge | inf1.24xlarge | inf1.2xlarge | inf1.6xlarge | inf1.xlarge | m1.large | m1.medium | m1.small | m1.xlarge | m2.2xlarge | m2.4xlarge | m2.xlarge | m3.2xlarge | m3.large | m3.medium | m3.xlarge | m4.10xlarge | m4.16xlarge | m4.2xlarge | m4.4xlarge | m4.large | m4.xlarge | m5.12xlarge | m5.16xlarge | m5.24xlarge | m5.2xlarge | m5.4xlarge | m5.8xlarge | m5.large | m5.metal | m5.xlarge | m5a.12xlarge | m5a.16xlarge | m5a.24xlarge | m5a.2xlarge | m5a.4xlarge | m5a.8xlarge | m5a.large | m5a.xlarge | m5ad.12xlarge | m5ad.16xlarge | m5ad.24xlarge | m5ad.2xlarge | m5ad.4xlarge | m5ad.8xlarge | m5ad.large | m5ad.xlarge | m5d.12xlarge | m5d.16xlarge | m5d.24xlarge | m5d.2xlarge | m5d.4xlarge | m5d.8xlarge | m5d.large | m5d.metal | m5d.xlarge | m5dn.12xlarge | m5dn.16xlarge | m5dn.24xlarge | m5dn.2xlarge | m5dn.4xlarge | m5dn.8xlarge | m5dn.large | m5dn.xlarge | m5n.12xlarge | m5n.16xlarge | m5n.24xlarge | m5n.2xlarge | m5n.4xlarge | m5n.8xlarge | m5n.large | m5n.xlarge | p2.16xlarge | p2.8xlarge | p2.xlarge | p3.16xlarge | p3.2xlarge | p3.8xlarge | p3dn.24xlarge | r3.2xlarge | r3.4xlarge | r3.8xlarge | r3.large | r3.xlarge | r4.16xlarge | r4.2xlarge | r4.4xlarge | r4.8xlarge | r4.large | r4.xlarge | r5.12xlarge | r5.16xlarge | r5.24xlarge | r5.2xlarge | r5.4xlarge | r5.8xlarge | r5.large | r5.metal | r5.xlarge | r5a.12xlarge | r5a.16xlarge | r5a.24xlarge | r5a.2xlarge | r5a.4xlarge | r5a.8xlarge | r5a.large | r5a.xlarge | r5ad.12xlarge | r5ad.16xlarge | r5ad.24xlarge | r5ad.2xlarge | r5ad.4xlarge | r5ad.8xlarge | r5ad.large | r5ad.xlarge | r5d.12xlarge | r5d.16xlarge | r5d.24xlarge | r5d.2xlarge | r5d.4xlarge | r5d.8xlarge | r5d.large | r5d.metal | r5d.xlarge | r5dn.12xlarge | r5dn.16xlarge | r5dn.24xlarge | r5dn.2xlarge | r5dn.4xlarge | r5dn.8xlarge | r5dn.large | r5dn.xlarge | r5n.12xlarge | r5n.16xlarge | r5n.24xlarge | r5n.2xlarge | r5n.4xlarge | r5n.8xlarge | r5n.large | r5n.xlarge | t1.micro | t2.2xlarge | t2.large | t2.medium | t2.micro | t2.nano | t2.small | t2.xlarge | t3.2xlarge | t3.large | t3.medium | t3.micro | t3.nano | t3.small | t3.xlarge | t3a.2xlarge | t3a.large | t3a.medium | t3a.micro | t3a.nano | t3a.small | t3a.xlarge | u-12tb1.metal | u-18tb1.metal | u-24tb1.metal | u-6tb1.metal | u-9tb1.metal | x1.16xlarge | x1.32xlarge | x1e.16xlarge | x1e.2xlarge | x1e.32xlarge | x1e.4xlarge | x1e.8xlarge | x1e.xlarge | z1d.12xlarge | z1d.2xlarge | z1d.3xlarge | z1d.6xlarge | z1d.large | z1d.metal | z1d.xlarge",
        "AllowedValues": [
            "a1.2xlarge",
            "a1.4xlarge",
            "a1.large",
            "a1.medium",
            "a1.metal",
            "a1.xlarge",
            "c1.medium",
            "c1.xlarge",
            "c3.2xlarge",
            "c3.4xlarge",
            "c3.8xlarge",
            "c3.large",
            "c3.xlarge",
            "c4.2xlarge",
            "c4.4xlarge",
            "c4.8xlarge",
            "c4.large",
            "c4.xlarge",
            "c5.12xlarge",
            "c5.18xlarge",
            "c5.24xlarge",
            "c5.2xlarge",
            "c5.4xlarge",
            "c5.9xlarge",
            "c5.large",
            "c5.metal",
            "c5.xlarge",
            "c5d.12xlarge",
            "c5d.18xlarge",
            "c5d.24xlarge",
            "c5d.2xlarge",
            "c5d.4xlarge",
            "c5d.9xlarge",
            "c5d.large",
            "c5d.metal",
            "c5d.xlarge",
            "c5n.18xlarge",
            "c5n.2xlarge",
            "c5n.4xlarge",
            "c5n.9xlarge",
            "c5n.large",
            "c5n.xlarge",
            "cc1.4xlarge",
            "cc2.8xlarge",
            "cg1.4xlarge",
            "cr1.8xlarge",
            "d2.2xlarge",
            "d2.4xlarge",
            "d2.8xlarge",
            "d2.xlarge",
            "f1.16xlarge",
            "f1.2xlarge",
            "f1.4xlarge",
            "g2.2xlarge",
            "g2.8xlarge",
            "g3.16xlarge",
            "g3.4xlarge",
            "g3.8xlarge",
            "g3s.xlarge",
            "g4dn.12xlarge",
            "g4dn.16xlarge",
            "g4dn.2xlarge",
            "g4dn.4xlarge",
            "g4dn.8xlarge",
            "g4dn.xlarge",
            "h1.16xlarge",
            "h1.2xlarge",
            "h1.4xlarge",
            "h1.8xlarge",
            "hi1.4xlarge",
            "hs1.8xlarge",
            "i2.2xlarge",
            "i2.4xlarge",
            "i2.8xlarge",
            "i2.xlarge",
            "i3.16xlarge",
            "i3.2xlarge",
            "i3.4xlarge",
            "i3.8xlarge",
            "i3.large",
            "i3.metal",
            "i3.xlarge",
            "i3en.12xlarge",
            "i3en.24xlarge",
            "i3en.2xlarge",
            "i3en.3xlarge",
            "i3en.6xlarge",
            "i3en.large",
            "i3en.metal",
            "i3en.xlarge",
            "inf1.24xlarge",
            "inf1.2xlarge",
            "inf1.6xlarge",
            "inf1.xlarge",
            "m1.large",
            "m1.medium",
            "m1.small",
            "m1.xlarge",
            "m2.2xlarge",
            "m2.4xlarge",
            "m2.xlarge",
            "m3.2xlarge",
            "m3.large",
            "m3.medium",
            "m3.xlarge",
            "m4.10xlarge",
            "m4.16xlarge",
            "m4.2xlarge",
            "m4.4xlarge",
            "m4.large",
            "m4.xlarge",
            "m5.12xlarge",
            "m5.16xlarge",
            "m5.24xlarge",
            "m5.2xlarge",
            "m5.4xlarge",
            "m5.8xlarge",
            "m5.large",
            "m5.metal",
            "m5.xlarge",
            "m5a.12xlarge",
            "m5a.16xlarge",
            "m5a.24xlarge",
            "m5a.2xlarge",
            "m5a.4xlarge",
            "m5a.8xlarge",
            "m5a.large",
            "m5a.xlarge",
            "m5ad.12xlarge",
            "m5ad.16xlarge",
            "m5ad.24xlarge",
            "m5ad.2xlarge",
            "m5ad.4xlarge",
            "m5ad.8xlarge",
            "m5ad.large",
            "m5ad.xlarge",
            "m5d.12xlarge",
            "m5d.16xlarge",
            "m5d.24xlarge",
            "m5d.2xlarge",
            "m5d.4xlarge",
            "m5d.8xlarge",
            "m5d.large",
            "m5d.metal",
            "m5d.xlarge",
            "m5dn.12xlarge",
            "m5dn.16xlarge",
            "m5dn.24xlarge",
            "m5dn.2xlarge",
            "m5dn.4xlarge",
            "m5dn.8xlarge",
            "m5dn.large",
            "m5dn.xlarge",
            "m5n.12xlarge",
            "m5n.16xlarge",
            "m5n.24xlarge",
            "m5n.2xlarge",
            "m5n.4xlarge",
            "m5n.8xlarge",
            "m5n.large",
            "m5n.xlarge",
            "p2.16xlarge",
            "p2.8xlarge",
            "p2.xlarge",
            "p3.16xlarge",
            "p3.2xlarge",
            "p3.8xlarge",
            "p3dn.24xlarge",
            "r3.2xlarge",
            "r3.4xlarge",
            "r3.8xlarge",
            "r3.large",
            "r3.xlarge",
            "r4.16xlarge",
            "r4.2xlarge",
            "r4.4xlarge",
            "r4.8xlarge",
            "r4.large",
            "r4.xlarge",
            "r5.12xlarge",
            "r5.16xlarge",
            "r5.24xlarge",
            "r5.2xlarge",
            "r5.4xlarge",
            "r5.8xlarge",
            "r5.large",
            "r5.metal",
            "r5.xlarge",
            "r5a.12xlarge",
            "r5a.16xlarge",
            "r5a.24xlarge",
            "r5a.2xlarge",
            "r5a.4xlarge",
            "r5a.8xlarge",
            "r5a.large",
            "r5a.xlarge",
            "r5ad.12xlarge",
            "r5ad.16xlarge",
            "r5ad.24xlarge",
            "r5ad.2xlarge",
            "r5ad.4xlarge",
            "r5ad.8xlarge",
            "r5ad.large",
            "r5ad.xlarge",
            "r5d.12xlarge",
            "r5d.16xlarge",
            "r5d.24xlarge",
            "r5d.2xlarge",
            "r5d.4xlarge",
            "r5d.8xlarge",
            "r5d.large",
            "r5d.metal",
            "r5d.xlarge",
            "r5dn.12xlarge",
            "r5dn.16xlarge",
            "r5dn.24xlarge",
            "r5dn.2xlarge",
            "r5dn.4xlarge",
            "r5dn.8xlarge",
            "r5dn.large",
            "r5dn.xlarge",
            "r5n.12xlarge",
            "r5n.16xlarge",
            "r5n.24xlarge",
            "r5n.2xlarge",
            "r5n.4xlarge",
            "r5n.8xlarge",
            "r5n.large",
            "r5n.xlarge",
            "t1.micro",
            "t2.2xlarge",
            "t2.large",
            "t2.medium",
            "t2.micro",
            "t2.nano",
            "t2.small",
            "t2.xlarge",
            "t3.2xlarge",
            "t3.large",
            "t3.medium",
            "t3.micro",
            "t3.nano",
            "t3.small",
            "t3.xlarge",
            "t3a.2xlarge",
            "t3a.large",
            "t3a.medium",
            "t3a.micro",
            "t3a.nano",
            "t3a.small",
            "t3a.xlarge",
            "u-12tb1.metal",
            "u-18tb1.metal",
            "u-24tb1.metal",
            "u-6tb1.metal",
            "u-9tb1.metal",
            "x1.16xlarge",
            "x1.32xlarge",
            "x1e.16xlarge",
            "x1e.2xlarge",
            "x1e.32xlarge",
            "x1e.4xlarge",
            "x1e.8xlarge",
            "x1e.xlarge",
            "z1d.12xlarge",
            "z1d.2xlarge",
            "z1d.3xlarge",
            "z1d.6xlarge",
            "z1d.large",
            "z1d.metal",
            "z1d.xlarge"
        ],
        "Pattern": "^[a1.2xlarge|a1.4xlarge|a1.large|a1.medium|a1.metal|a1.xlarge|c1.medium|c1.xlarge|c3.2xlarge|c3.4xlarge|c3.8xlarge|c3.large|c3.xlarge|c4.2xlarge|c4.4xlarge|c4.8xlarge|c4.large|c4.xlarge|c5.12xlarge|c5.18xlarge|c5.24xlarge|c5.2xlarge|c5.4xlarge|c5.9xlarge|c5.large|c5.metal|c5.xlarge|c5d.12xlarge|c5d.18xlarge|c5d.24xlarge|c5d.2xlarge|c5d.4xlarge|c5d.9xlarge|c5d.large|c5d.metal|c5d.xlarge|c5n.18xlarge|c5n.2xlarge|c5n.4xlarge|c5n.9xlarge|c5n.large|c5n.xlarge|cc1.4xlarge|cc2.8xlarge|cg1.4xlarge|cr1.8xlarge|d2.2xlarge|d2.4xlarge|d2.8xlarge|d2.xlarge|f1.16xlarge|f1.2xlarge|f1.4xlarge|g2.2xlarge|g2.8xlarge|g3.16xlarge|g3.4xlarge|g3.8xlarge|g3s.xlarge|g4dn.12xlarge|g4dn.16xlarge|g4dn.2xlarge|g4dn.4xlarge|g4dn.8xlarge|g4dn.xlarge|h1.16xlarge|h1.2xlarge|h1.4xlarge|h1.8xlarge|hi1.4xlarge|hs1.8xlarge|i2.2xlarge|i2.4xlarge|i2.8xlarge|i2.xlarge|i3.16xlarge|i3.2xlarge|i3.4xlarge|i3.8xlarge|i3.large|i3.metal|i3.xlarge|i3en.12xlarge|i3en.24xlarge|i3en.2xlarge|i3en.3xlarge|i3en.6xlarge|i3en.large|i3en.metal|i3en.xlarge|inf1.24xlarge|inf1.2xlarge|inf1.6xlarge|inf1.xlarge|m1.large|m1.medium|m1.small|m1.xlarge|m2.2xlarge|m2.4xlarge|m2.xlarge|m3.2xlarge|m3.large|m3.medium|m3.xlarge|m4.10xlarge|m4.16xlarge|m4.2xlarge|m4.4xlarge|m4.large|m4.xlarge|m5.12xlarge|m5.16xlarge|m5.24xlarge|m5.2xlarge|m5.4xlarge|m5.8xlarge|m5.large|m5.metal|m5.xlarge|m5a.12xlarge|m5a.16xlarge|m5a.24xlarge|m5a.2xlarge|m5a.4xlarge|m5a.8xlarge|m5a.large|m5a.xlarge|m5ad.12xlarge|m5ad.16xlarge|m5ad.24xlarge|m5ad.2xlarge|m5ad.4xlarge|m5ad.8xlarge|m5ad.large|m5ad.xlarge|m5d.12xlarge|m5d.16xlarge|m5d.24xlarge|m5d.2xlarge|m5d.4xlarge|m5d.8xlarge|m5d.large|m5d.metal|m5d.xlarge|m5dn.12xlarge|m5dn.16xlarge|m5dn.24xlarge|m5dn.2xlarge|m5dn.4xlarge|m5dn.8xlarge|m5dn.large|m5dn.xlarge|m5n.12xlarge|m5n.16xlarge|m5n.24xlarge|m5n.2xlarge|m5n.4xlarge|m5n.8xlarge|m5n.large|m5n.xlarge|p2.16xlarge|p2.8xlarge|p2.xlarge|p3.16xlarge|p3.2xlarge|p3.8xlarge|p3dn.24xlarge|r3.2xlarge|r3.4xlarge|r3.8xlarge|r3.large|r3.xlarge|r4.16xlarge|r4.2xlarge|r4.4xlarge|r4.8xlarge|r4.large|r4.xlarge|r5.12xlarge|r5.16xlarge|r5.24xlarge|r5.2xlarge|r5.4xlarge|r5.8xlarge|r5.large|r5.metal|r5.xlarge|r5a.12xlarge|r5a.16xlarge|r5a.24xlarge|r5a.2xlarge|r5a.4xlarge|r5a.8xlarge|r5a.large|r5a.xlarge|r5ad.12xlarge|r5ad.16xlarge|r5ad.24xlarge|r5ad.2xlarge|r5ad.4xlarge|r5ad.8xlarge|r5ad.large|r5ad.xlarge|r5d.12xlarge|r5d.16xlarge|r5d.24xlarge|r5d.2xlarge|r5d.4xlarge|r5d.8xlarge|r5d.large|r5d.metal|r5d.xlarge|r5dn.12xlarge|r5dn.16xlarge|r5dn.24xlarge|r5dn.2xlarge|r5dn.4xlarge|r5dn.8xlarge|r5dn.large|r5dn.xlarge|r5n.12xlarge|r5n.16xlarge|r5n.24xlarge|r5n.2xlarge|r5n.4xlarge|r5n.8xlarge|r5n.large|r5n.xlarge|t1.micro|t2.2xlarge|t2.large|t2.medium|t2.micro|t2.nano|t2.small|t2.xlarge|t3.2xlarge|t3.large|t3.medium|t3.micro|t3.nano|t3.small|t3.xlarge|t3a.2xlarge|t3a.large|t3a.medium|t3a.micro|t3a.nano|t3a.small|t3a.xlarge|u-12tb1.metal|u-18tb1.metal|u-24tb1.metal|u-6tb1.metal|u-9tb1.metal|x1.16xlarge|x1.32xlarge|x1e.16xlarge|x1e.2xlarge|x1e.32xlarge|x1e.4xlarge|x1e.8xlarge|x1e.xlarge|z1d.12xlarge|z1d.2xlarge|z1d.3xlarge|z1d.6xlarge|z1d.large|z1d.metal|z1d.xlarge]",
        "Required": "Yes",
        "SampleValue": "a1.2xlarge|a1.4xlarge|a1.large|a1.medium|a1.metal|a1.xlarge|c1.medium|c1.xlarge|c3.2xlarge|c3.4xlarge|c3.8xlarge|c3.large|c3.xlarge|c4.2xlarge|c4.4xlarge|c4.8xlarge|c4.large|c4.xlarge|c5.12xlarge|c5.18xlarge|c5.24xlarge|c5.2xlarge|c5.4xlarge|c5.9xlarge|c5.large|c5.metal|c5.xlarge|c5d.12xlarge|c5d.18xlarge|c5d.24xlarge|c5d.2xlarge|c5d.4xlarge|c5d.9xlarge|c5d.large|c5d.metal|c5d.xlarge|c5n.18xlarge|c5n.2xlarge|c5n.4xlarge|c5n.9xlarge|c5n.large|c5n.xlarge|cc1.4xlarge|cc2.8xlarge|cg1.4xlarge|cr1.8xlarge|d2.2xlarge|d2.4xlarge|d2.8xlarge|d2.xlarge|f1.16xlarge|f1.2xlarge|f1.4xlarge|g2.2xlarge|g2.8xlarge|g3.16xlarge|g3.4xlarge|g3.8xlarge|g3s.xlarge|g4dn.12xlarge|g4dn.16xlarge|g4dn.2xlarge|g4dn.4xlarge|g4dn.8xlarge|g4dn.xlarge|h1.16xlarge|h1.2xlarge|h1.4xlarge|h1.8xlarge|hi1.4xlarge|hs1.8xlarge|i2.2xlarge|i2.4xlarge|i2.8xlarge|i2.xlarge|i3.16xlarge|i3.2xlarge|i3.4xlarge|i3.8xlarge|i3.large|i3.metal|i3.xlarge|i3en.12xlarge|i3en.24xlarge|i3en.2xlarge|i3en.3xlarge|i3en.6xlarge|i3en.large|i3en.metal|i3en.xlarge|inf1.24xlarge|inf1.2xlarge|inf1.6xlarge|inf1.xlarge|m1.large|m1.medium|m1.small|m1.xlarge|m2.2xlarge|m2.4xlarge|m2.xlarge|m3.2xlarge|m3.large|m3.medium|m3.xlarge|m4.10xlarge|m4.16xlarge|m4.2xlarge|m4.4xlarge|m4.large|m4.xlarge|m5.12xlarge|m5.16xlarge|m5.24xlarge|m5.2xlarge|m5.4xlarge|m5.8xlarge|m5.large|m5.metal|m5.xlarge|m5a.12xlarge|m5a.16xlarge|m5a.24xlarge|m5a.2xlarge|m5a.4xlarge|m5a.8xlarge|m5a.large|m5a.xlarge|m5ad.12xlarge|m5ad.16xlarge|m5ad.24xlarge|m5ad.2xlarge|m5ad.4xlarge|m5ad.8xlarge|m5ad.large|m5ad.xlarge|m5d.12xlarge|m5d.16xlarge|m5d.24xlarge|m5d.2xlarge|m5d.4xlarge|m5d.8xlarge|m5d.large|m5d.metal|m5d.xlarge|m5dn.12xlarge|m5dn.16xlarge|m5dn.24xlarge|m5dn.2xlarge|m5dn.4xlarge|m5dn.8xlarge|m5dn.large|m5dn.xlarge|m5n.12xlarge|m5n.16xlarge|m5n.24xlarge|m5n.2xlarge|m5n.4xlarge|m5n.8xlarge|m5n.large|m5n.xlarge|p2.16xlarge|p2.8xlarge|p2.xlarge|p3.16xlarge|p3.2xlarge|p3.8xlarge|p3dn.24xlarge|r3.2xlarge|r3.4xlarge|r3.8xlarge|r3.large|r3.xlarge|r4.16xlarge|r4.2xlarge|r4.4xlarge|r4.8xlarge|r4.large|r4.xlarge|r5.12xlarge|r5.16xlarge|r5.24xlarge|r5.2xlarge|r5.4xlarge|r5.8xlarge|r5.large|r5.metal|r5.xlarge|r5a.12xlarge|r5a.16xlarge|r5a.24xlarge|r5a.2xlarge|r5a.4xlarge|r5a.8xlarge|r5a.large|r5a.xlarge|r5ad.12xlarge|r5ad.16xlarge|r5ad.24xlarge|r5ad.2xlarge|r5ad.4xlarge|r5ad.8xlarge|r5ad.large|r5ad.xlarge|r5d.12xlarge|r5d.16xlarge|r5d.24xlarge|r5d.2xlarge|r5d.4xlarge|r5d.8xlarge|r5d.large|r5d.metal|r5d.xlarge|r5dn.12xlarge|r5dn.16xlarge|r5dn.24xlarge|r5dn.2xlarge|r5dn.4xlarge|r5dn.8xlarge|r5dn.large|r5dn.xlarge|r5n.12xlarge|r5n.16xlarge|r5n.24xlarge|r5n.2xlarge|r5n.4xlarge|r5n.8xlarge|r5n.large|r5n.xlarge|t1.micro|t2.2xlarge|t2.large|t2.medium|t2.micro|t2.nano|t2.small|t2.xlarge|t3.2xlarge|t3.large|t3.medium|t3.micro|t3.nano|t3.small|t3.xlarge|t3a.2xlarge|t3a.large|t3a.medium|t3a.micro|t3a.nano|t3a.small|t3a.xlarge|u-12tb1.metal|u-18tb1.metal|u-24tb1.metal|u-6tb1.metal|u-9tb1.metal|x1.16xlarge|x1.32xlarge|x1e.16xlarge|x1e.2xlarge|x1e.32xlarge|x1e.4xlarge|x1e.8xlarge|x1e.xlarge|z1d.12xlarge|z1d.2xlarge|z1d.3xlarge|z1d.6xlarge|z1d.large|z1d.metal|z1d.xlarge",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.instancetype",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.kernelid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.kernelid",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.keyname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.keyname",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.monitoring": {
        "Required": "No",
        "Type": "SpotFleetMonitoring",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.monitoring",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.monitoring.cfnproperties": [
        "Enabled",
        "UniqueKey"
    ],
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.monitoring.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.monitoring.enabled",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces": {
        "Required": "No",
        "Type": "List of [InstanceNetworkInterfaceSpecification",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.associatepublicipaddress": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.associatepublicipaddress",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.cfnproperties": [
        "DeviceIndex",
        "Description",
        "Ipv6AddressCount",
        "PrivateIpAddresses",
        "SubnetId",
        "DeleteOnTermination",
        "Groups",
        "Ipv6Addresses",
        "NetworkInterfaceId",
        "AssociatePublicIpAddress",
        "SecondaryPrivateIpAddressCount",
        "UniqueKey"
    ],
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.deleteontermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.deleteontermination",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.description",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.deviceindex": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.deviceindex",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.groups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.groups",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.ipv6addresscount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.ipv6addresscount",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.ipv6addresses": {
        "Required": "No",
        "Type": "List of [InstanceIpv6Address",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.ipv6addresses",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.networkinterfaceid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.networkinterfaceid",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses": {
        "Required": "No",
        "Type": "List of [PrivateIpAddressSpecification",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses.cfnproperties": [
        "Primary",
        "PrivateIpAddress",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses.primary": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses.primary",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses.privateipaddress": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.privateipaddresses.privateipaddress",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.secondaryprivateipaddresscount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.secondaryprivateipaddresscount",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.subnetid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.networkinterfaces.subnetid",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement": {
        "Required": "No",
        "Type": "SpotPlacement",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.availabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.availabilityzone",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.cfnproperties": [
        "Tenancy",
        "GroupName",
        "AvailabilityZone",
        "UniqueKey"
    ],
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.groupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.groupname",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.tenancy": {
        "Allowed Values": "dedicated | default | host",
        "AllowedValues": [
            "dedicated",
            "default",
            "host"
        ],
        "Pattern": "^[dedicated|default|host]",
        "Required": "No",
        "SampleValue": "dedicated|default|host",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.placement.tenancy",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.ramdiskid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.ramdiskid",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.securitygroups": {
        "Required": "No",
        "Type": "List of [GroupIdentifier",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.securitygroups",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.securitygroups.cfnproperties": [
        "GroupId",
        "UniqueKey"
    ],
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.securitygroups.groupid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.securitygroups.groupid",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.spotprice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.spotprice",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.subnetid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.subnetid",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications": {
        "Required": "No",
        "Type": "List of [SpotFleetTagSpecification",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications.cfnproperties": [
        "ResourceType",
        "Tags",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications.resourcetype": {
        "Allowed Values": "client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | elastic-ip | fleet | fpga-image | host-reservation | image | instance | internet-gateway | key-pair | launch-template | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-peering-connection | vpn-connection | vpn-gateway",
        "AllowedValues": [
            "client-vpn-endpoint",
            "customer-gateway",
            "dedicated-host",
            "dhcp-options",
            "elastic-ip",
            "fleet",
            "fpga-image",
            "host-reservation",
            "image",
            "instance",
            "internet-gateway",
            "key-pair",
            "launch-template",
            "natgateway",
            "network-acl",
            "network-interface",
            "placement-group",
            "reserved-instances",
            "route-table",
            "security-group",
            "snapshot",
            "spot-fleet-request",
            "spot-instances-request",
            "subnet",
            "traffic-mirror-filter",
            "traffic-mirror-session",
            "traffic-mirror-target",
            "transit-gateway",
            "transit-gateway-attachment",
            "transit-gateway-multicast-domain",
            "transit-gateway-route-table",
            "volume",
            "vpc",
            "vpc-peering-connection",
            "vpn-connection",
            "vpn-gateway"
        ],
        "Pattern": "^[client-vpn-endpoint|customer-gateway|dedicated-host|dhcp-options|elastic-ip|fleet|fpga-image|host-reservation|image|instance|internet-gateway|key-pair|launch-template|natgateway|network-acl|network-interface|placement-group|reserved-instances|route-table|security-group|snapshot|spot-fleet-request|spot-instances-request|subnet|traffic-mirror-filter|traffic-mirror-session|traffic-mirror-target|transit-gateway|transit-gateway-attachment|transit-gateway-multicast-domain|transit-gateway-route-table|volume|vpc|vpc-peering-connection|vpn-connection|vpn-gateway]",
        "Required": "No",
        "SampleValue": "client-vpn-endpoint|customer-gateway|dedicated-host|dhcp-options|elastic-ip|fleet|fpga-image|host-reservation|image|instance|internet-gateway|key-pair|launch-template|natgateway|network-acl|network-interface|placement-group|reserved-instances|route-table|security-group|snapshot|spot-fleet-request|spot-instances-request|subnet|traffic-mirror-filter|traffic-mirror-session|traffic-mirror-target|transit-gateway|transit-gateway-attachment|transit-gateway-multicast-domain|transit-gateway-route-table|volume|vpc|vpc-peering-connection|vpn-connection|vpn-gateway",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications.resourcetype",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.tagspecifications.tags",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.userdata": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.userdata",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.weightedcapacity": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchspecifications.weightedcapacity",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.launchtemplateconfigs": {
        "Required": "Conditional",
        "Type": "List of [LaunchTemplateConfig",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.launchtemplateconfigs",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.loadbalancersconfig": {
        "Required": "No",
        "Type": "LoadBalancersConfig",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.loadbalancersconfig",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.replaceunhealthyinstances": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.replaceunhealthyinstances",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.spotprice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.spotprice",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.targetcapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.targetcapacity",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.terminateinstanceswithexpiration": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.terminateinstanceswithexpiration",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.type": {
        "Allowed Values": "instant | maintain | request",
        "AllowedValues": [
            "instant",
            "maintain",
            "request"
        ],
        "Pattern": "^[instant|maintain|request]",
        "Required": "No",
        "SampleValue": "instant|maintain|request",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.type",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.validfrom": {
        "Required": "No",
        "SampleValue": "TODO-validfrom",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.validfrom",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.spotfleetrequestconfigdata.validuntil": {
        "Required": "No",
        "SampleValue": "TODO-validuntil",
        "UniqueKey": "ec2.spotfleet.spotfleetrequestconfigdata.validuntil",
        "UpdateRequires": "Replacement"
    },
    "ec2.spotfleet.targetgroup.arn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ec2.spotfleet.targetgroup.arn",
        "UpdateRequires": "No interruption"
    },
    "ec2.spotfleet.targetgroup.cfnproperties": [
        "Arn",
        "UniqueKey"
    ],
    "ec2.spotfleet.targetgroupsconfig.cfnproperties": [
        "TargetGroups",
        "UniqueKey"
    ],
    "ec2.spotfleet.targetgroupsconfig.targetgroups": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of [TargetGroup",
        "UniqueKey": "ec2.spotfleet.targetgroupsconfig.targetgroups",
        "UpdateRequires": "No interruption"
    },
    "ec2.trafficmirrorfilterrule.trafficmirrorportrange.cfnproperties": [
        "ToPort",
        "FromPort",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.trafficmirrorfilterrule.trafficmirrorportrange.fromport": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ec2.trafficmirrorfilterrule.trafficmirrorportrange.fromport",
        "UpdateRequires": "No interruption"
    },
    "ec2.trafficmirrorfilterrule.trafficmirrorportrange.toport": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ec2.trafficmirrorfilterrule.trafficmirrorportrange.toport",
        "UpdateRequires": "No interruption"
    },
    "ec2.vpnconnection.vpntunneloptionsspecification.cfnproperties": [
        "TunnelInsideCidr",
        "PreSharedKey",
        "UniqueKey",
        "SampleValue"
    ],
    "ec2.vpnconnection.vpntunneloptionsspecification.presharedkey": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.vpnconnection.vpntunneloptionsspecification.presharedkey",
        "UpdateRequires": "Replacement"
    },
    "ec2.vpnconnection.vpntunneloptionsspecification.tunnelinsidecidr": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ec2.vpnconnection.vpntunneloptionsspecification.tunnelinsidecidr",
        "UpdateRequires": "Replacement"
    },
    "ecr.repository.lifecyclepolicy.cfnproperties": [
        "RegistryId",
        "LifecyclePolicyText",
        "UniqueKey",
        "SampleValue"
    ],
    "ecr.repository.lifecyclepolicy.lifecyclepolicytext": {
        "Maximum": "30720",
        "Minimum": "100",
        "Pattern": "^.{100,30720}$",
        "Required": "No",
        "SampleValue": "TODO-ecr.repository.lifecyclepolicy.lifecyclepolicytext",
        "Type": "String",
        "UniqueKey": "ecr.repository.lifecyclepolicy.lifecyclepolicytext",
        "UpdateRequires": "No interruption"
    },
    "ecr.repository.lifecyclepolicy.registryid": {
        "Pattern": "[0-9]{12}",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecr.repository.lifecyclepolicy.registryid",
        "UpdateRequires": "No interruption"
    },
    "ecs.cluster.clustersetting.cfnproperties": [
        "Name",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "ecs.cluster.clustersetting.name": {
        "Allowed Values": "containerInsights",
        "AllowedValues": [
            "containerInsights"
        ],
        "Pattern": "^[containerInsights]",
        "Required": "Yes",
        "SampleValue": "containerInsights",
        "Type": "String",
        "UniqueKey": "ecs.cluster.clustersetting.name",
        "UpdateRequires": "No interruption"
    },
    "ecs.cluster.clustersetting.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.cluster.clustersetting.value",
        "UpdateRequires": "No interruption"
    },
    "ecs.service.awsvpcconfiguration.assignpublicip": {
        "Allowed Values": "DISABLED | ENABLED",
        "AllowedValues": [
            "DISABLED",
            "ENABLED"
        ],
        "Pattern": "^[DISABLED|ENABLED]",
        "Required": "No",
        "SampleValue": "DISABLED|ENABLED",
        "Type": "String",
        "UniqueKey": "ecs.service.awsvpcconfiguration.assignpublicip",
        "UpdateRequires": "No interruption"
    },
    "ecs.service.awsvpcconfiguration.cfnproperties": [
        "AssignPublicIp",
        "SecurityGroups",
        "Subnets",
        "UniqueKey"
    ],
    "ecs.service.awsvpcconfiguration.securitygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.service.awsvpcconfiguration.securitygroups",
        "UpdateRequires": "No interruption"
    },
    "ecs.service.awsvpcconfiguration.subnets": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "ecs.service.awsvpcconfiguration.subnets",
        "UpdateRequires": "No interruption"
    },
    "ecs.service.deploymentconfiguration.cfnproperties": [
        "MaximumPercent",
        "MinimumHealthyPercent",
        "UniqueKey",
        "SampleValue"
    ],
    "ecs.service.deploymentconfiguration.maximumpercent": {
        "Required": "No",
        "SampleValue": "TODO-maximumpercent",
        "UniqueKey": "ecs.service.deploymentconfiguration.maximumpercent",
        "UpdateRequires": "No interruption"
    },
    "ecs.service.deploymentconfiguration.minimumhealthypercent": {
        "Required": "No",
        "SampleValue": "TODO-minimumhealthypercent",
        "UniqueKey": "ecs.service.deploymentconfiguration.minimumhealthypercent",
        "UpdateRequires": "No interruption"
    },
    "ecs.service.deploymentcontroller.cfnproperties": [
        "Type",
        "UniqueKey"
    ],
    "ecs.service.deploymentcontroller.type": {
        "Allowed Values": "CODE_DEPLOY | ECS | EXTERNAL",
        "AllowedValues": [
            "CODE_DEPLOY",
            "ECS",
            "EXTERNAL"
        ],
        "Pattern": "^[CODE_DEPLOY|ECS|EXTERNAL]",
        "Required": "No",
        "SampleValue": "CODE_DEPLOY|ECS|EXTERNAL",
        "Type": "String",
        "UniqueKey": "ecs.service.deploymentcontroller.type",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.loadbalancers.cfnproperties": [
        "ContainerName",
        "TargetGroupArn",
        "ContainerPort",
        "LoadBalancerName",
        "UniqueKey"
    ],
    "ecs.service.loadbalancers.containername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.service.loadbalancers.containername",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.loadbalancers.containerport": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ecs.service.loadbalancers.containerport",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.loadbalancers.loadbalancername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.service.loadbalancers.loadbalancername",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.loadbalancers.targetgrouparn": {
        "Required": "No",
        "SampleValue": "TODO-targetgrouparn",
        "UniqueKey": "ecs.service.loadbalancers.targetgrouparn",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.networkconfiguration.awsvpcconfiguration": {
        "Required": "No",
        "Type": "AwsVpcConfiguration",
        "UniqueKey": "ecs.service.networkconfiguration.awsvpcconfiguration",
        "UpdateRequires": "No interruption"
    },
    "ecs.service.networkconfiguration.cfnproperties": [
        "AwsvpcConfiguration",
        "UniqueKey"
    ],
    "ecs.service.placementconstraint.cfnproperties": [
        "Type",
        "Expression",
        "UniqueKey",
        "SampleValue"
    ],
    "ecs.service.placementconstraint.expression": {
        "Required": "No",
        "SampleValue": "TODO-expression",
        "UniqueKey": "ecs.service.placementconstraint.expression",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.placementconstraint.type": {
        "Allowed Values": "distinctInstance | memberOf",
        "AllowedValues": [
            "distinctInstance",
            "memberOf"
        ],
        "Pattern": "^[distinctInstance|memberOf]",
        "Required": "Yes",
        "SampleValue": "distinctInstance|memberOf",
        "Type": "String",
        "UniqueKey": "ecs.service.placementconstraint.type",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.placementstrategy.cfnproperties": [
        "Field",
        "Type",
        "UniqueKey",
        "SampleValue"
    ],
    "ecs.service.placementstrategy.field": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.service.placementstrategy.field",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.placementstrategy.type": {
        "Allowed Values": "binpack | random | spread",
        "AllowedValues": [
            "binpack",
            "random",
            "spread"
        ],
        "Pattern": "^[binpack|random|spread]",
        "Required": "Yes",
        "SampleValue": "binpack|random|spread",
        "Type": "String",
        "UniqueKey": "ecs.service.placementstrategy.type",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.serviceregistry.cfnproperties": [
        "ContainerName",
        "RegistryArn",
        "ContainerPort",
        "Port",
        "UniqueKey"
    ],
    "ecs.service.serviceregistry.containername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.service.serviceregistry.containername",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.serviceregistry.containerport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.service.serviceregistry.containerport",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.serviceregistry.port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.service.serviceregistry.port",
        "UpdateRequires": "Replacement"
    },
    "ecs.service.serviceregistry.registryarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.service.serviceregistry.registryarn",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.cfnproperties": [
        "MountPoints",
        "RepositoryCredentials",
        "Hostname",
        "DockerLabels",
        "Environment",
        "Memory",
        "SystemControls",
        "Privileged",
        "DnsSearchDomains",
        "StartTimeout",
        "FirelensConfiguration",
        "Essential",
        "DockerSecurityOptions",
        "User",
        "MemoryReservation",
        "ReadonlyRootFilesystem",
        "Name",
        "WorkingDirectory",
        "Secrets",
        "HealthCheck",
        "DisableNetworking",
        "VolumesFrom",
        "StopTimeout",
        "Command",
        "ExtraHosts",
        "DnsServers",
        "Ulimits",
        "Interactive",
        "DependsOn",
        "PortMappings",
        "PseudoTerminal",
        "Links",
        "Image",
        "LogConfiguration",
        "Cpu",
        "EntryPoint",
        "ResourceRequirements",
        "LinuxParameters",
        "UniqueKey"
    ],
    "ecs.taskdefinition.containerdefinitions.command": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.command",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.cpu": {
        "Required": "No",
        "SampleValue": "TODO-cpu",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.cpu",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.dependson": {
        "Required": "No",
        "SampleValue": "TODO-dependson",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.dependson",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.disablenetworking": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.disablenetworking",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.dnssearchdomains": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.dnssearchdomains",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.dnsservers": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.dnsservers",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.dockerlabels": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.dockerlabels",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.dockersecurityoptions": {
        "Required": "No",
        "SampleValue": "TODO-dockersecurityoptions",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.dockersecurityoptions",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.entrypoint": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.entrypoint",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.environment": {
        "Required": "No",
        "Type": "List of [KeyValuePair",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.environment",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.environment.cfnproperties": [
        "Name",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "ecs.taskdefinition.containerdefinitions.environment.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.environment.name",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.environment.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.environment.value",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.essential": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.essential",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.extrahosts": {
        "Required": "No",
        "Type": "List of [HostEntry",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.extrahosts",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.firelensconfiguration": {
        "Required": "No",
        "SampleValue": "TODO-firelensconfiguration",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.firelensconfiguration",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.healthcheck": {
        "Required": "No",
        "Type": "HealthCheck",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.healthcheck",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.hostentry.cfnproperties": [
        "Hostname",
        "IpAddress",
        "UniqueKey",
        "SampleValue"
    ],
    "ecs.taskdefinition.containerdefinitions.hostentry.hostname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.hostentry.hostname",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.hostentry.ipaddress": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.hostentry.ipaddress",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.hostname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.hostname",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.image": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.image",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.interactive": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.interactive",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.links": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.links",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.linuxparameters": {
        "Required": "No",
        "Type": "LinuxParameters",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.linuxparameters",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.logconfiguration": {
        "Required": "No",
        "SampleValue": "TODO-logconfiguration",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.logconfiguration",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.logconfiguration.cfnproperties": [
        "SecretOptions",
        "LogDriver",
        "Options",
        "UniqueKey"
    ],
    "ecs.taskdefinition.containerdefinitions.logconfiguration.logdriver": {
        "AllowedValues": [
            "awsfirelens",
            "awslogs",
            "fluentd",
            "gelf",
            "journald",
            "json-file",
            "splunk",
            "syslog"
        ],
        "Pattern": "^[awsfirelens|awslogs|fluentd|gelf|journald|json-file|splunk|syslog]",
        "Required": "Yes",
        "SampleValue": "awsfirelens|awslogs|fluentd|gelf|journald|json-file|splunk|syslog",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.logconfiguration.logdriver",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.logconfiguration.options": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.logconfiguration.options",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.logconfiguration.secretoptions": {
        "Required": "No",
        "SampleValue": "TODO-secretoptions",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.logconfiguration.secretoptions",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.memory": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.memory",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.memoryreservation": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.memoryreservation",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.mountpoints": {
        "Required": "No",
        "Type": "List of [MountPoint",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.mountpoints",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.mountpoints.cfnproperties": [
        "SourceVolume",
        "ReadOnly",
        "ContainerPath",
        "UniqueKey"
    ],
    "ecs.taskdefinition.containerdefinitions.mountpoints.containerpath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.mountpoints.containerpath",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.mountpoints.readonly": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.mountpoints.readonly",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.mountpoints.sourcevolume": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.mountpoints.sourcevolume",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.name",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.portmappings": {
        "Required": "No",
        "SampleValue": "TODO-portmappings",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.portmappings",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.portmappings.cfnproperties": [
        "Protocol",
        "ContainerPort",
        "HostPort",
        "UniqueKey"
    ],
    "ecs.taskdefinition.containerdefinitions.portmappings.containerport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.portmappings.containerport",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.portmappings.hostport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.portmappings.hostport",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.portmappings.protocol": {
        "Allowed Values": "tcp | udp",
        "AllowedValues": [
            "tcp",
            "udp"
        ],
        "Pattern": "^[tcp|udp]",
        "Required": "No",
        "SampleValue": "tcp|udp",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.portmappings.protocol",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.privileged": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.privileged",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.pseudoterminal": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.pseudoterminal",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.readonlyrootfilesystem": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.readonlyrootfilesystem",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.repositorycredentials": {
        "Required": "No",
        "Type": "RepositoryCredentials",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.repositorycredentials",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.resourcerequirements": {
        "Required": "No",
        "Type": "List of [ResourceRequirement",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.resourcerequirements",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.secrets": {
        "Required": "No",
        "SampleValue": "TODO-secrets",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.secrets",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.starttimeout": {
        "Required": "No",
        "SampleValue": "TODO-starttimeout",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.starttimeout",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.stoptimeout": {
        "Required": "No",
        "SampleValue": "TODO-stoptimeout",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.stoptimeout",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.systemcontrols": {
        "Required": "No",
        "Type": "List of [SystemControl",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.systemcontrols",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.ulimit.cfnproperties": [
        "SoftLimit",
        "HardLimit",
        "Name",
        "UniqueKey"
    ],
    "ecs.taskdefinition.containerdefinitions.ulimit.hardlimit": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.ulimit.hardlimit",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.ulimit.name": {
        "Allowed Values": "core | cpu | data | fsize | locks | memlock | msgqueue | nice | nofile | nproc | rss | rtprio | rttime | sigpending | stack",
        "AllowedValues": [
            "core",
            "cpu",
            "data",
            "fsize",
            "locks",
            "memlock",
            "msgqueue",
            "nice",
            "nofile",
            "nproc",
            "rss",
            "rtprio",
            "rttime",
            "sigpending",
            "stack"
        ],
        "Pattern": "^[core|cpu|data|fsize|locks|memlock|msgqueue|nice|nofile|nproc|rss|rtprio|rttime|sigpending|stack]",
        "Required": "Yes",
        "SampleValue": "core|cpu|data|fsize|locks|memlock|msgqueue|nice|nofile|nproc|rss|rtprio|rttime|sigpending|stack",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.ulimit.name",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.ulimit.softlimit": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.ulimit.softlimit",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.ulimits": {
        "Required": "No",
        "Type": "List of [Ulimit",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.ulimits",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.user": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.user",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.volumesfrom": {
        "Required": "No",
        "Type": "List of [VolumeFrom",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.volumesfrom",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.volumesfrom.cfnproperties": [
        "ReadOnly",
        "SourceContainer",
        "UniqueKey",
        "SampleValue"
    ],
    "ecs.taskdefinition.containerdefinitions.volumesfrom.readonly": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.volumesfrom.readonly",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.volumesfrom.sourcecontainer": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.volumesfrom.sourcecontainer",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdefinitions.workingdirectory": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdefinitions.workingdirectory",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdependency.cfnproperties": [
        "ContainerName",
        "Condition",
        "UniqueKey",
        "SampleValue"
    ],
    "ecs.taskdefinition.containerdependency.condition": {
        "Allowed Values": "COMPLETE | HEALTHY | START | SUCCESS",
        "AllowedValues": [
            "COMPLETE",
            "HEALTHY",
            "START",
            "SUCCESS"
        ],
        "Pattern": "^[COMPLETE|HEALTHY|START|SUCCESS]",
        "Required": "Yes",
        "SampleValue": "COMPLETE|HEALTHY|START|SUCCESS",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdependency.condition",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.containerdependency.containername": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.containerdependency.containername",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.device.cfnproperties": [
        "HostPath",
        "ContainerPath",
        "Permissions",
        "UniqueKey"
    ],
    "ecs.taskdefinition.device.containerpath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.device.containerpath",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.device.hostpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.device.hostpath",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.device.permissions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.device.permissions",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.dockervolumeconfiguration.autoprovision": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.dockervolumeconfiguration.autoprovision",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.dockervolumeconfiguration.cfnproperties": [
        "Scope",
        "Labels",
        "Driver",
        "DriverOpts",
        "Autoprovision",
        "UniqueKey"
    ],
    "ecs.taskdefinition.dockervolumeconfiguration.driver": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.dockervolumeconfiguration.driver",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.dockervolumeconfiguration.driveropts": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "ecs.taskdefinition.dockervolumeconfiguration.driveropts",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.dockervolumeconfiguration.labels": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "ecs.taskdefinition.dockervolumeconfiguration.labels",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.dockervolumeconfiguration.scope": {
        "Allowed Values": "shared | task",
        "AllowedValues": [
            "shared",
            "task"
        ],
        "Pattern": "^[shared|task]",
        "Required": "No",
        "SampleValue": "shared|task",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.dockervolumeconfiguration.scope",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.firelensconfiguration.cfnproperties": [
        "Type",
        "Options",
        "UniqueKey",
        "SampleValue"
    ],
    "ecs.taskdefinition.firelensconfiguration.options": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "ecs.taskdefinition.firelensconfiguration.options",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.firelensconfiguration.type": {
        "Allowed Values": "fluentbit | fluentd",
        "AllowedValues": [
            "fluentbit",
            "fluentd"
        ],
        "Pattern": "^[fluentbit|fluentd]",
        "Required": "Yes",
        "SampleValue": "fluentbit|fluentd",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.firelensconfiguration.type",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.healthcheck.cfnproperties": [
        "Retries",
        "Interval",
        "Command",
        "Timeout",
        "StartPeriod",
        "UniqueKey"
    ],
    "ecs.taskdefinition.healthcheck.command": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.healthcheck.command",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.healthcheck.interval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.healthcheck.interval",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.healthcheck.retries": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.healthcheck.retries",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.healthcheck.startperiod": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.healthcheck.startperiod",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.healthcheck.timeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.healthcheck.timeout",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.inferenceaccelerator.cfnproperties": [
        "DeviceName",
        "DeviceType",
        "UniqueKey",
        "SampleValue"
    ],
    "ecs.taskdefinition.inferenceaccelerator.devicename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.inferenceaccelerator.devicename",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.inferenceaccelerator.devicetype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.inferenceaccelerator.devicetype",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.kernelcapabilities.add": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.kernelcapabilities.add",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.kernelcapabilities.cfnproperties": [
        "Add",
        "Drop",
        "UniqueKey",
        "SampleValue"
    ],
    "ecs.taskdefinition.kernelcapabilities.drop": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.kernelcapabilities.drop",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.capabilities": {
        "Required": "No",
        "Type": "KernelCapabilities",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.capabilities",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.cfnproperties": [
        "Swappiness",
        "MaxSwap",
        "Capabilities",
        "SharedMemorySize",
        "InitProcessEnabled",
        "Devices",
        "Tmpfs",
        "UniqueKey"
    ],
    "ecs.taskdefinition.linuxparameters.devices": {
        "Required": "No",
        "Type": "List of [Device",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.devices",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.initprocessenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.initprocessenabled",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.maxswap": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.maxswap",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.sharedmemorysize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.sharedmemorysize",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.swappiness": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.swappiness",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.linuxparameters.tmpfs": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "ecs.taskdefinition.linuxparameters.tmpfs",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.proxyconfiguration.cfnproperties": [
        "ContainerName",
        "Type",
        "ProxyConfigurationProperties",
        "UniqueKey"
    ],
    "ecs.taskdefinition.proxyconfiguration.containername": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.proxyconfiguration.containername",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.proxyconfiguration.proxyconfigurationproperties": {
        "Required": "No",
        "Type": "List of [KeyValuePair",
        "UniqueKey": "ecs.taskdefinition.proxyconfiguration.proxyconfigurationproperties",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.proxyconfiguration.type": {
        "Allowed Values": "APPMESH",
        "AllowedValues": [
            "APPMESH"
        ],
        "Pattern": "^[APPMESH]",
        "Required": "No",
        "SampleValue": "APPMESH",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.proxyconfiguration.type",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.repositorycredentials.cfnproperties": [
        "CredentialsParameter",
        "UniqueKey"
    ],
    "ecs.taskdefinition.repositorycredentials.credentialsparameter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.repositorycredentials.credentialsparameter",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.resourcerequirement.cfnproperties": [
        "Type",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "ecs.taskdefinition.resourcerequirement.type": {
        "Allowed Values": "GPU | InferenceAccelerator",
        "AllowedValues": [
            "GPU",
            "InferenceAccelerator"
        ],
        "Pattern": "^[GPU|InferenceAccelerator]",
        "Required": "Yes",
        "SampleValue": "GPU|InferenceAccelerator",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.resourcerequirement.type",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.resourcerequirement.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.resourcerequirement.value",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.secret.cfnproperties": [
        "ValueFrom",
        "Name",
        "UniqueKey",
        "SampleValue"
    ],
    "ecs.taskdefinition.secret.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.secret.name",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.secret.valuefrom": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.secret.valuefrom",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.systemcontrol.cfnproperties": [
        "Namespace",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "ecs.taskdefinition.systemcontrol.namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.systemcontrol.namespace",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.systemcontrol.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.systemcontrol.value",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.taskdefinitionplacementconstraint.cfnproperties": [
        "Type",
        "Expression",
        "UniqueKey",
        "SampleValue"
    ],
    "ecs.taskdefinition.taskdefinitionplacementconstraint.expression": {
        "Required": "No",
        "SampleValue": "TODO-expression",
        "UniqueKey": "ecs.taskdefinition.taskdefinitionplacementconstraint.expression",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.taskdefinitionplacementconstraint.type": {
        "Allowed Values": "memberOf",
        "AllowedValues": [
            "memberOf"
        ],
        "Pattern": "^[memberOf]",
        "Required": "Yes",
        "SampleValue": "memberOf",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.taskdefinitionplacementconstraint.type",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.tmpfs.cfnproperties": [
        "MountOptions",
        "ContainerPath",
        "Size",
        "UniqueKey"
    ],
    "ecs.taskdefinition.tmpfs.containerpath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.tmpfs.containerpath",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.tmpfs.mountoptions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskdefinition.tmpfs.mountoptions",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.tmpfs.size": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "ecs.taskdefinition.tmpfs.size",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.volumes.cfnproperties": [
        "Host",
        "DockerVolumeConfiguration",
        "Name",
        "UniqueKey"
    ],
    "ecs.taskdefinition.volumes.dockervolumeconfiguration": {
        "Required": "No",
        "Type": "DockerVolumeConfiguration",
        "UniqueKey": "ecs.taskdefinition.volumes.dockervolumeconfiguration",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.volumes.host": {
        "Required": "No",
        "Type": "HostVolumeProperties",
        "UniqueKey": "ecs.taskdefinition.volumes.host",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.volumes.host.cfnproperties": [
        "SourcePath",
        "UniqueKey"
    ],
    "ecs.taskdefinition.volumes.host.sourcepath": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.volumes.host.sourcepath",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskdefinition.volumes.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskdefinition.volumes.name",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.awsvpcconfiguration.assignpublicip": {
        "Allowed Values": "DISABLED | ENABLED",
        "AllowedValues": [
            "DISABLED",
            "ENABLED"
        ],
        "Pattern": "^[DISABLED|ENABLED]",
        "Required": "No",
        "SampleValue": "DISABLED|ENABLED",
        "Type": "String",
        "UniqueKey": "ecs.taskset.awsvpcconfiguration.assignpublicip",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.awsvpcconfiguration.cfnproperties": [
        "AssignPublicIp",
        "SecurityGroups",
        "Subnets",
        "UniqueKey"
    ],
    "ecs.taskset.awsvpcconfiguration.securitygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ecs.taskset.awsvpcconfiguration.securitygroups",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.awsvpcconfiguration.subnets": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "ecs.taskset.awsvpcconfiguration.subnets",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.loadbalancer.cfnproperties": [
        "ContainerName",
        "TargetGroupArn",
        "ContainerPort",
        "LoadBalancerName",
        "UniqueKey"
    ],
    "ecs.taskset.loadbalancer.containername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskset.loadbalancer.containername",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.loadbalancer.containerport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskset.loadbalancer.containerport",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.loadbalancer.loadbalancername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskset.loadbalancer.loadbalancername",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.loadbalancer.targetgrouparn": {
        "Required": "No",
        "SampleValue": "TODO-targetgrouparn",
        "UniqueKey": "ecs.taskset.loadbalancer.targetgrouparn",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.networkconfiguration.awsvpcconfiguration": {
        "Required": "No",
        "Type": "AwsVpcConfiguration",
        "UniqueKey": "ecs.taskset.networkconfiguration.awsvpcconfiguration",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.networkconfiguration.cfnproperties": [
        "AwsVpcConfiguration",
        "UniqueKey"
    ],
    "ecs.taskset.scale.cfnproperties": [
        "Value",
        "Unit",
        "UniqueKey",
        "SampleValue"
    ],
    "ecs.taskset.scale.unit": {
        "Allowed Values": "PERCENT",
        "AllowedValues": [
            "PERCENT"
        ],
        "Pattern": "^[PERCENT]",
        "Required": "No",
        "SampleValue": "PERCENT",
        "Type": "String",
        "UniqueKey": "ecs.taskset.scale.unit",
        "UpdateRequires": "No interruption"
    },
    "ecs.taskset.scale.value": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "ecs.taskset.scale.value",
        "UpdateRequires": "No interruption"
    },
    "ecs.taskset.serviceregistry.cfnproperties": [
        "ContainerName",
        "RegistryArn",
        "ContainerPort",
        "Port",
        "UniqueKey"
    ],
    "ecs.taskset.serviceregistry.containername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskset.serviceregistry.containername",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.serviceregistry.containerport": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskset.serviceregistry.containerport",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.serviceregistry.port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "ecs.taskset.serviceregistry.port",
        "UpdateRequires": "Replacement"
    },
    "ecs.taskset.serviceregistry.registryarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ecs.taskset.serviceregistry.registryarn",
        "UpdateRequires": "Replacement"
    },
    "efs.filesystem.filesystemtags.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "efs.filesystem.filesystemtags.key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "Yes",
        "SampleValue": "TODO-efs.filesystem.filesystemtags.key",
        "Type": "String",
        "UniqueKey": "efs.filesystem.filesystemtags.key",
        "UpdateRequires": "No interruption"
    },
    "efs.filesystem.filesystemtags.value": {
        "Maximum": "256",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "efs.filesystem.filesystemtags.value",
        "UpdateRequires": "No interruption"
    },
    "eks.cluster.resourcesvpcconfig.cfnproperties": [
        "SubnetIds",
        "SecurityGroupIds",
        "UniqueKey",
        "SampleValue"
    ],
    "eks.cluster.resourcesvpcconfig.securitygroupids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "eks.cluster.resourcesvpcconfig.securitygroupids",
        "UpdateRequires": "No interruption"
    },
    "eks.cluster.resourcesvpcconfig.subnetids": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "eks.cluster.resourcesvpcconfig.subnetids",
        "UpdateRequires": "No interruption"
    },
    "eks.nodegroup.remoteaccess.cfnproperties": [
        "Ec2SshKey",
        "SourceSecurityGroups",
        "UniqueKey",
        "SampleValue"
    ],
    "eks.nodegroup.remoteaccess.ec2sshkey": {
        "Required": "Yes",
        "SampleValue": "TODO-ec2sshkey",
        "UniqueKey": "eks.nodegroup.remoteaccess.ec2sshkey",
        "UpdateRequires": "Replacement"
    },
    "eks.nodegroup.remoteaccess.sourcesecuritygroups": {
        "Required": "No",
        "SampleValue": "TODO-sourcesecuritygroups",
        "UniqueKey": "eks.nodegroup.remoteaccess.sourcesecuritygroups",
        "UpdateRequires": "Replacement"
    },
    "eks.nodegroup.scalingconfig.cfnproperties": [
        "MinSize",
        "DesiredSize",
        "MaxSize",
        "UniqueKey"
    ],
    "eks.nodegroup.scalingconfig.desiredsize": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "eks.nodegroup.scalingconfig.desiredsize",
        "UpdateRequires": "No interruption"
    },
    "eks.nodegroup.scalingconfig.maxsize": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "eks.nodegroup.scalingconfig.maxsize",
        "UpdateRequires": "No interruption"
    },
    "eks.nodegroup.scalingconfig.minsize": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "eks.nodegroup.scalingconfig.minsize",
        "UpdateRequires": "No interruption"
    },
    "elasticache.cache.cluster.autominorversionupgrade": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticache.cache.cluster.autominorversionupgrade",
        "UpdateRequires": "No interruption"
    },
    "elasticache.cache.cluster.azmode": {
        "Allowed Values": "cross-az | single-az",
        "AllowedValues": [
            "cross-az",
            "single-az"
        ],
        "Pattern": "^[cross-az|single-az]",
        "Required": "No",
        "SampleValue": "cross-az|single-az",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.azmode",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.cachenodetype": {
        "Required": "Yes",
        "SampleValue": "TODO-cachenodetype",
        "UniqueKey": "elasticache.cache.cluster.cachenodetype",
        "UpdateRequires": "No interruption"
    },
    "elasticache.cache.cluster.cacheparametergroupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.cacheparametergroupname",
        "UpdateRequires": "No interruption"
    },
    "elasticache.cache.cluster.cachesecuritygroupnames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticache.cache.cluster.cachesecuritygroupnames",
        "UpdateRequires": "No interruption"
    },
    "elasticache.cache.cluster.cachesubnetgroupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.cachesubnetgroupname",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.cfnproperties": [
        "CacheSecurityGroupNames",
        "Engine",
        "CacheParameterGroupName",
        "NotificationTopicArn",
        "SnapshotArns",
        "SnapshotWindow",
        "PreferredAvailabilityZone",
        "ClusterName",
        "SnapshotName",
        "SnapshotRetentionLimit",
        "Tags",
        "VpcSecurityGroupIds",
        "AutoMinorVersionUpgrade",
        "NumCacheNodes",
        "PreferredAvailabilityZones",
        "EngineVersion",
        "AZMode",
        "CacheSubnetGroupName",
        "Port",
        "PreferredMaintenanceWindow",
        "CacheNodeType",
        "UniqueKey"
    ],
    "elasticache.cache.cluster.clustername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.clustername",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.engine": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.engine",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.engineversion": {
        "Required": "No",
        "SampleValue": "TODO-engineversion",
        "UniqueKey": "elasticache.cache.cluster.engineversion",
        "UpdateRequires": "No interruption"
    },
    "elasticache.cache.cluster.notificationtopicarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.notificationtopicarn",
        "UpdateRequires": "No interruption"
    },
    "elasticache.cache.cluster.numcachenodes": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticache.cache.cluster.numcachenodes",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticache.cache.cluster.port",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.preferredavailabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.preferredavailabilityzone",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.preferredavailabilityzones": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticache.cache.cluster.preferredavailabilityzones",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.preferredmaintenancewindow": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.preferredmaintenancewindow",
        "UpdateRequires": "No interruption"
    },
    "elasticache.cache.cluster.snapshotarns": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticache.cache.cluster.snapshotarns",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.snapshotname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.snapshotname",
        "UpdateRequires": "Replacement"
    },
    "elasticache.cache.cluster.snapshotretentionlimit": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticache.cache.cluster.snapshotretentionlimit",
        "UpdateRequires": "No interruption"
    },
    "elasticache.cache.cluster.snapshotwindow": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.cache.cluster.snapshotwindow",
        "UpdateRequires": "No interruption"
    },
    "elasticache.cache.cluster.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "elasticache.cache.cluster.tags",
        "UpdateRequires": "No interruption"
    },
    "elasticache.cache.cluster.vpcsecuritygroupids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticache.cache.cluster.vpcsecuritygroupids",
        "UpdateRequires": "No interruption"
    },
    "elasticache.parameter.group.": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticache.parameter.group.",
        "UpdateRequires": "No interruption"
    },
    "elasticache.parameter.group.cacheparametergroupfamily": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.parameter.group.cacheparametergroupfamily",
        "UpdateRequires": "No interruption"
    },
    "elasticache.parameter.group.cfnproperties": [
        "Properties",
        "",
        "CacheParameterGroupFamily",
        "Description",
        "UniqueKey"
    ],
    "elasticache.parameter.group.description": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.parameter.group.description",
        "UpdateRequires": "No interruption"
    },
    "elasticache.parameter.group.properties": {
        "UniqueKey": "elasticache.parameter.group.properties"
    },
    "elasticache.replicationgroup.nodegroupconfiguration.cfnproperties": [
        "ReplicaCount",
        "Slots",
        "NodeGroupId",
        "PrimaryAvailabilityZone",
        "ReplicaAvailabilityZones",
        "UniqueKey"
    ],
    "elasticache.replicationgroup.nodegroupconfiguration.nodegroupid": {
        "Maximum": "4",
        "Minimum": "1",
        "Pattern": "\\d+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.replicationgroup.nodegroupconfiguration.nodegroupid",
        "UpdateRequires": "Replacement"
    },
    "elasticache.replicationgroup.nodegroupconfiguration.primaryavailabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.replicationgroup.nodegroupconfiguration.primaryavailabilityzone",
        "UpdateRequires": "Replacement"
    },
    "elasticache.replicationgroup.nodegroupconfiguration.replicaavailabilityzones": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticache.replicationgroup.nodegroupconfiguration.replicaavailabilityzones",
        "UpdateRequires": "Replacement"
    },
    "elasticache.replicationgroup.nodegroupconfiguration.replicacount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticache.replicationgroup.nodegroupconfiguration.replicacount",
        "UpdateRequires": "Replacement"
    },
    "elasticache.replicationgroup.nodegroupconfiguration.slots": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.replicationgroup.nodegroupconfiguration.slots",
        "UpdateRequires": "Replacement"
    },
    "elasticache.security.group.cfnproperties": [
        "Description",
        "UniqueKey"
    ],
    "elasticache.security.group.description": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.security.group.description",
        "UpdateRequires": "No interruption"
    },
    "elasticache.security.group.ingress.cachesecuritygroupname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.security.group.ingress.cachesecuritygroupname",
        "UpdateRequires": "No interruption"
    },
    "elasticache.security.group.ingress.cfnproperties": [
        "EC2SecurityGroupName",
        "CacheSecurityGroupName",
        "EC2SecurityGroupOwnerId",
        "UniqueKey"
    ],
    "elasticache.security.group.ingress.ec2securitygroupname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.security.group.ingress.ec2securitygroupname",
        "UpdateRequires": "No interruption"
    },
    "elasticache.security.group.ingress.ec2securitygroupownerid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.security.group.ingress.ec2securitygroupownerid",
        "UpdateRequires": "No interruption"
    },
    "elasticache.subnetgroup.cachesubnetgroupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticache.subnetgroup.cachesubnetgroupname",
        "UpdateRequires": "Replacement"
    },
    "elasticache.subnetgroup.cfnproperties": [
        "SubnetIds",
        "Description",
        "CacheSubnetGroupName",
        "UniqueKey"
    ],
    "elasticache.subnetgroup.description": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticache.subnetgroup.description",
        "UpdateRequires": "No interruption"
    },
    "elasticache.subnetgroup.subnetids": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "elasticache.subnetgroup.subnetids",
        "UpdateRequires": "No interruption"
    },
    "elasticbeanstalk.application.applicationresourcelifecycleconfig.cfnproperties": [
        "VersionLifecycleConfig",
        "ServiceRole",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticbeanstalk.application.applicationresourcelifecycleconfig.servicerole": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.application.applicationresourcelifecycleconfig.servicerole",
        "UpdateRequires": "No interruption"
    },
    "elasticbeanstalk.application.applicationresourcelifecycleconfig.versionlifecycleconfig": {
        "Required": "No",
        "Type": "ApplicationVersionLifecycleConfig",
        "UniqueKey": "elasticbeanstalk.application.applicationresourcelifecycleconfig.versionlifecycleconfig",
        "UpdateRequires": "No interruption"
    },
    "elasticbeanstalk.application.applicationversionlifecycleconfig.cfnproperties": [
        "MaxCountRule",
        "MaxAgeRule",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticbeanstalk.application.applicationversionlifecycleconfig.maxagerule": {
        "Required": "No",
        "Type": "MaxAgeRule",
        "UniqueKey": "elasticbeanstalk.application.applicationversionlifecycleconfig.maxagerule",
        "UpdateRequires": "No interruption"
    },
    "elasticbeanstalk.application.applicationversionlifecycleconfig.maxcountrule": {
        "Required": "No",
        "Type": "MaxCountRule",
        "UniqueKey": "elasticbeanstalk.application.applicationversionlifecycleconfig.maxcountrule",
        "UpdateRequires": "No interruption"
    },
    "elasticbeanstalk.application.maxagerule.cfnproperties": [
        "DeleteSourceFromS3",
        "Enabled",
        "MaxAgeInDays",
        "UniqueKey"
    ],
    "elasticbeanstalk.application.maxagerule.deletesourcefroms3": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticbeanstalk.application.maxagerule.deletesourcefroms3",
        "UpdateRequires": "No interruption"
    },
    "elasticbeanstalk.application.maxagerule.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticbeanstalk.application.maxagerule.enabled",
        "UpdateRequires": "No interruption"
    },
    "elasticbeanstalk.application.maxagerule.maxageindays": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticbeanstalk.application.maxagerule.maxageindays",
        "UpdateRequires": "No interruption"
    },
    "elasticbeanstalk.application.maxcountrule.cfnproperties": [
        "DeleteSourceFromS3",
        "Enabled",
        "MaxCount",
        "UniqueKey"
    ],
    "elasticbeanstalk.application.maxcountrule.deletesourcefroms3": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticbeanstalk.application.maxcountrule.deletesourcefroms3",
        "UpdateRequires": "No interruption"
    },
    "elasticbeanstalk.application.maxcountrule.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticbeanstalk.application.maxcountrule.enabled",
        "UpdateRequires": "No interruption"
    },
    "elasticbeanstalk.application.maxcountrule.maxcount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticbeanstalk.application.maxcountrule.maxcount",
        "UpdateRequires": "No interruption"
    },
    "elasticbeanstalk.configurationtemplate.configurationoptionsetting.cfnproperties": [
        "OptionName",
        "Namespace",
        "Value",
        "ResourceName",
        "UniqueKey"
    ],
    "elasticbeanstalk.configurationtemplate.configurationoptionsetting.namespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.configurationtemplate.configurationoptionsetting.namespace",
        "UpdateRequires": "No interruption"
    },
    "elasticbeanstalk.configurationtemplate.configurationoptionsetting.optionname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.configurationtemplate.configurationoptionsetting.optionname",
        "UpdateRequires": "No interruption"
    },
    "elasticbeanstalk.configurationtemplate.configurationoptionsetting.resourcename": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-elasticbeanstalk.configurationtemplate.configurationoptionsetting.resourcename",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.configurationtemplate.configurationoptionsetting.resourcename",
        "UpdateRequires": "No interruption"
    },
    "elasticbeanstalk.configurationtemplate.configurationoptionsetting.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.configurationtemplate.configurationoptionsetting.value",
        "UpdateRequires": "No interruption"
    },
    "elasticbeanstalk.configurationtemplate.sourceconfiguration.applicationname": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "Yes",
        "SampleValue": "TODO-elasticbeanstalk.configurationtemplate.sourceconfiguration.applicationname",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.configurationtemplate.sourceconfiguration.applicationname",
        "UpdateRequires": "No interruption"
    },
    "elasticbeanstalk.configurationtemplate.sourceconfiguration.cfnproperties": [
        "ApplicationName",
        "TemplateName",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticbeanstalk.configurationtemplate.sourceconfiguration.templatename": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^.{1,100}$",
        "Required": "Yes",
        "SampleValue": "TODO-elasticbeanstalk.configurationtemplate.sourceconfiguration.templatename",
        "Type": "String",
        "UniqueKey": "elasticbeanstalk.configurationtemplate.sourceconfiguration.templatename",
        "UpdateRequires": "No interruption"
    },
    "elasticfilesystem.filesystem.lifecyclepolicy.cfnproperties": [
        "TransitionToIA",
        "UniqueKey"
    ],
    "elasticfilesystem.filesystem.lifecyclepolicy.transitiontoia": {
        "Allowed Values": "AFTER_14_DAYS | AFTER_30_DAYS | AFTER_60_DAYS | AFTER_7_DAYS | AFTER_90_DAYS",
        "AllowedValues": [
            "AFTER_14_DAYS",
            "AFTER_30_DAYS",
            "AFTER_60_DAYS",
            "AFTER_7_DAYS",
            "AFTER_90_DAYS"
        ],
        "Pattern": "^[AFTER_14_DAYS|AFTER_30_DAYS|AFTER_60_DAYS|AFTER_7_DAYS|AFTER_90_DAYS]",
        "Required": "Yes",
        "SampleValue": "AFTER_14_DAYS|AFTER_30_DAYS|AFTER_60_DAYS|AFTER_7_DAYS|AFTER_90_DAYS",
        "Type": "String",
        "UniqueKey": "elasticfilesystem.filesystem.lifecyclepolicy.transitiontoia",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.authenticationrequestextraparams": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.authenticationrequestextraparams",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.cfnproperties": [
        "UserPoolDomain",
        "UserPoolArn",
        "AuthenticationRequestExtraParams",
        "SessionTimeout",
        "Scope",
        "SessionCookieName",
        "UserPoolClientId",
        "OnUnauthenticatedRequest",
        "UniqueKey"
    ],
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.onunauthenticatedrequest": {
        "Allowed Values": "allow | authenticate | deny",
        "AllowedValues": [
            "allow",
            "authenticate",
            "deny"
        ],
        "Pattern": "^[allow|authenticate|deny]",
        "Required": "No",
        "SampleValue": "allow|authenticate|deny",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.onunauthenticatedrequest",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.scope": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.scope",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.sessioncookiename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.sessioncookiename",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.sessiontimeout": {
        "Required": "No",
        "Type": "Long",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.sessiontimeout",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.userpoolarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.userpoolarn",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.userpoolclientid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.userpoolclientid",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.authenticatecognitoconfig.userpooldomain": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticatecognitoconfig.userpooldomain",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.authenticationrequestextraparams": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.authenticationrequestextraparams",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.authorizationendpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.authorizationendpoint",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.cfnproperties": [
        "ClientSecret",
        "TokenEndpoint",
        "AuthenticationRequestExtraParams",
        "ClientId",
        "SessionTimeout",
        "AuthorizationEndpoint",
        "Scope",
        "SessionCookieName",
        "UserInfoEndpoint",
        "OnUnauthenticatedRequest",
        "Issuer",
        "UniqueKey"
    ],
    "elasticloadbalancingv2.listener.authenticateoidcconfig.clientid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.clientid",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.clientsecret": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.clientsecret",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.issuer": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.issuer",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.onunauthenticatedrequest": {
        "Allowed Values": "allow | authenticate | deny",
        "AllowedValues": [
            "allow",
            "authenticate",
            "deny"
        ],
        "Pattern": "^[allow|authenticate|deny]",
        "Required": "No",
        "SampleValue": "allow|authenticate|deny",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.onunauthenticatedrequest",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.scope": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.scope",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.sessioncookiename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.sessioncookiename",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.sessiontimeout": {
        "Required": "No",
        "Type": "Long",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.sessiontimeout",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.tokenendpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.tokenendpoint",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.authenticateoidcconfig.userinfoendpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.authenticateoidcconfig.userinfoendpoint",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.certificates.1.certificatearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.certificates.1.certificatearn",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.certificates.1.cfnproperties": [
        "CertificateArn",
        "UniqueKey"
    ],
    "elasticloadbalancingv2.listener.certificates.certificatearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.certificates.certificatearn",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.certificates.cfnproperties": [
        "CertificateArn",
        "UniqueKey"
    ],
    "elasticloadbalancingv2.listener.defaultactions.authenticatecognitoconfig": {
        "Required": "No",
        "Type": "AuthenticateCognitoConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.authenticatecognitoconfig",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.defaultactions.authenticateoidcconfig": {
        "Required": "No",
        "Type": "AuthenticateOidcConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.authenticateoidcconfig",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.defaultactions.cfnproperties": [
        "TargetGroupArn",
        "FixedResponseConfig",
        "Type",
        "AuthenticateCognitoConfig",
        "AuthenticateOidcConfig",
        "RedirectConfig",
        "Order",
        "UniqueKey"
    ],
    "elasticloadbalancingv2.listener.defaultactions.fixedresponseconfig": {
        "Required": "No",
        "Type": "FixedResponseConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.fixedresponseconfig",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.defaultactions.order": {
        "Maximum": "50000",
        "Minimum": "1",
        "Pattern": "^[1,50000]}$",
        "Required": "No",
        "SampleValue": "1...50000",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.order",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.defaultactions.redirectconfig": {
        "Required": "No",
        "Type": "RedirectConfig",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.redirectconfig",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.defaultactions.targetgrouparn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.targetgrouparn",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.defaultactions.type": {
        "Allowed Values": "authenticate-cognito | authenticate-oidc | fixed-response | forward | redirect",
        "AllowedValues": [
            "authenticate-cognito",
            "authenticate-oidc",
            "fixed-response",
            "forward",
            "redirect"
        ],
        "Pattern": "^[authenticate-cognito|authenticate-oidc|fixed-response|forward|redirect]",
        "Required": "Yes",
        "SampleValue": "authenticate-cognito|authenticate-oidc|fixed-response|forward|redirect",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.defaultactions.type",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.fixedresponseconfig.cfnproperties": [
        "ContentType",
        "MessageBody",
        "StatusCode",
        "UniqueKey"
    ],
    "elasticloadbalancingv2.listener.fixedresponseconfig.contenttype": {
        "Maximum": "32",
        "Minimum": "0",
        "Pattern": "^.{0,32}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listener.fixedresponseconfig.contenttype",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.fixedresponseconfig.contenttype",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.fixedresponseconfig.messagebody": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": "^.{0,1024}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listener.fixedresponseconfig.messagebody",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.fixedresponseconfig.messagebody",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.fixedresponseconfig.statuscode": {
        "Pattern": "^(2|4|5)\\d\\d$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.fixedresponseconfig.statuscode",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.redirectconfig.cfnproperties": [
        "Protocol",
        "Host",
        "Query",
        "Path",
        "Port",
        "StatusCode",
        "UniqueKey"
    ],
    "elasticloadbalancingv2.listener.redirectconfig.host": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listener.redirectconfig.host",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.redirectconfig.host",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.redirectconfig.path": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listener.redirectconfig.path",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.redirectconfig.path",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.redirectconfig.port": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.redirectconfig.port",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.redirectconfig.protocol": {
        "Pattern": "^(HTTPS?|#\\{protocol\\})$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.redirectconfig.protocol",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.redirectconfig.query": {
        "Maximum": "128",
        "Minimum": "0",
        "Pattern": "^.{0,128}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listener.redirectconfig.query",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.redirectconfig.query",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listener.redirectconfig.statuscode": {
        "Allowed Values": "HTTP_301 | HTTP_302",
        "AllowedValues": [
            "HTTP_301",
            "HTTP_302"
        ],
        "Pattern": "^[HTTP_301|HTTP_302]",
        "Required": "Yes",
        "SampleValue": "HTTP_301|HTTP_302",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listener.redirectconfig.statuscode",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.actions.authenticatecognitoconfig": {
        "Required": "No",
        "Type": "AuthenticateCognitoConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.authenticatecognitoconfig",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.actions.authenticateoidcconfig": {
        "Required": "No",
        "Type": "AuthenticateOidcConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.authenticateoidcconfig",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.actions.cfnproperties": [
        "TargetGroupArn",
        "FixedResponseConfig",
        "Type",
        "AuthenticateCognitoConfig",
        "AuthenticateOidcConfig",
        "RedirectConfig",
        "Order",
        "UniqueKey"
    ],
    "elasticloadbalancingv2.listenerrule.actions.fixedresponseconfig": {
        "Required": "No",
        "Type": "FixedResponseConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.fixedresponseconfig",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.actions.order": {
        "Maximum": "50000",
        "Minimum": "1",
        "Pattern": "^[1,50000]}$",
        "Required": "No",
        "SampleValue": "1...50000",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.order",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.actions.redirectconfig": {
        "Required": "No",
        "Type": "RedirectConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.redirectconfig",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.actions.targetgrouparn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.targetgrouparn",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.actions.type": {
        "Allowed Values": "authenticate-cognito | authenticate-oidc | fixed-response | forward | redirect",
        "AllowedValues": [
            "authenticate-cognito",
            "authenticate-oidc",
            "fixed-response",
            "forward",
            "redirect"
        ],
        "Pattern": "^[authenticate-cognito|authenticate-oidc|fixed-response|forward|redirect]",
        "Required": "Yes",
        "SampleValue": "authenticate-cognito|authenticate-oidc|fixed-response|forward|redirect",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.actions.type",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.authenticationrequestextraparams": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.authenticationrequestextraparams",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.cfnproperties": [
        "UserPoolDomain",
        "UserPoolArn",
        "AuthenticationRequestExtraParams",
        "SessionTimeout",
        "Scope",
        "SessionCookieName",
        "UserPoolClientId",
        "OnUnauthenticatedRequest",
        "UniqueKey"
    ],
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.onunauthenticatedrequest": {
        "Allowed Values": "allow | authenticate | deny",
        "AllowedValues": [
            "allow",
            "authenticate",
            "deny"
        ],
        "Pattern": "^[allow|authenticate|deny]",
        "Required": "No",
        "SampleValue": "allow|authenticate|deny",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.onunauthenticatedrequest",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.scope": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.scope",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.sessioncookiename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.sessioncookiename",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.sessiontimeout": {
        "Required": "No",
        "Type": "Long",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.sessiontimeout",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.userpoolarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.userpoolarn",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.userpoolclientid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.userpoolclientid",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.userpooldomain": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticatecognitoconfig.userpooldomain",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.authenticationrequestextraparams": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.authenticationrequestextraparams",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.authorizationendpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.authorizationendpoint",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.cfnproperties": [
        "ClientSecret",
        "TokenEndpoint",
        "AuthenticationRequestExtraParams",
        "ClientId",
        "SessionTimeout",
        "AuthorizationEndpoint",
        "Scope",
        "SessionCookieName",
        "UserInfoEndpoint",
        "OnUnauthenticatedRequest",
        "Issuer",
        "UniqueKey"
    ],
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.clientid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.clientid",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.clientsecret": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.clientsecret",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.issuer": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.issuer",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.onunauthenticatedrequest": {
        "Allowed Values": "allow | authenticate | deny",
        "AllowedValues": [
            "allow",
            "authenticate",
            "deny"
        ],
        "Pattern": "^[allow|authenticate|deny]",
        "Required": "No",
        "SampleValue": "allow|authenticate|deny",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.onunauthenticatedrequest",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.scope": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.scope",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.sessioncookiename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.sessioncookiename",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.sessiontimeout": {
        "Required": "No",
        "Type": "Long",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.sessiontimeout",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.tokenendpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.tokenendpoint",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.userinfoendpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.authenticateoidcconfig.userinfoendpoint",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.conditions.cfnproperties": [
        "SourceIpConfig",
        "HostHeaderConfig",
        "HttpRequestMethodConfig",
        "QueryStringConfig",
        "Field",
        "Values",
        "PathPatternConfig",
        "HttpHeaderConfig",
        "UniqueKey"
    ],
    "elasticloadbalancingv2.listenerrule.conditions.field": {
        "Maximum": "64",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.field",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.conditions.hostheaderconfig": {
        "Required": "No",
        "Type": "HostHeaderConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.hostheaderconfig",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.conditions.httpheaderconfig": {
        "Required": "No",
        "Type": "HttpHeaderConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.httpheaderconfig",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.conditions.httprequestmethodconfig": {
        "Required": "No",
        "Type": "HttpRequestMethodConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.httprequestmethodconfig",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.conditions.pathpatternconfig": {
        "Required": "No",
        "Type": "PathPatternConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.pathpatternconfig",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.conditions.querystringconfig": {
        "Required": "No",
        "Type": "QueryStringConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.querystringconfig",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.conditions.sourceipconfig": {
        "Required": "No",
        "Type": "SourceIpConfig",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.sourceipconfig",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.conditions.values": {
        "Required": "No",
        "SampleValue": "TODO-values",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.conditions.values",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.fixedresponseconfig.cfnproperties": [
        "ContentType",
        "MessageBody",
        "StatusCode",
        "UniqueKey"
    ],
    "elasticloadbalancingv2.listenerrule.fixedresponseconfig.contenttype": {
        "Maximum": "32",
        "Minimum": "0",
        "Pattern": "^.{0,32}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listenerrule.fixedresponseconfig.contenttype",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.fixedresponseconfig.contenttype",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.fixedresponseconfig.messagebody": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": "^.{0,1024}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listenerrule.fixedresponseconfig.messagebody",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.fixedresponseconfig.messagebody",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.fixedresponseconfig.statuscode": {
        "Pattern": "^(2|4|5)\\d\\d$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.fixedresponseconfig.statuscode",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.hostheaderconfig.cfnproperties": [
        "Values",
        "UniqueKey"
    ],
    "elasticloadbalancingv2.listenerrule.hostheaderconfig.values": {
        "Required": "No",
        "SampleValue": "TODO-values",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.hostheaderconfig.values",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.httpheaderconfig.cfnproperties": [
        "Values",
        "HttpHeaderName",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticloadbalancingv2.listenerrule.httpheaderconfig.httpheadername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.httpheaderconfig.httpheadername",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.httpheaderconfig.values": {
        "Required": "No",
        "SampleValue": "TODO-values",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.httpheaderconfig.values",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.httprequestmethodconfig.cfnproperties": [
        "Values",
        "UniqueKey"
    ],
    "elasticloadbalancingv2.listenerrule.httprequestmethodconfig.values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.httprequestmethodconfig.values",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.pathpatternconfig.cfnproperties": [
        "Values",
        "UniqueKey"
    ],
    "elasticloadbalancingv2.listenerrule.pathpatternconfig.values": {
        "Required": "No",
        "SampleValue": "TODO-values",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.pathpatternconfig.values",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.querystringconfig.cfnproperties": [
        "Values",
        "UniqueKey"
    ],
    "elasticloadbalancingv2.listenerrule.querystringconfig.values": {
        "Required": "No",
        "SampleValue": "TODO-values",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.querystringconfig.values",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.querystringkeyvalue.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticloadbalancingv2.listenerrule.querystringkeyvalue.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.querystringkeyvalue.key",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.querystringkeyvalue.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.querystringkeyvalue.value",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.redirectconfig.cfnproperties": [
        "Protocol",
        "Host",
        "Query",
        "Path",
        "Port",
        "StatusCode",
        "UniqueKey"
    ],
    "elasticloadbalancingv2.listenerrule.redirectconfig.host": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listenerrule.redirectconfig.host",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.redirectconfig.host",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.redirectconfig.path": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listenerrule.redirectconfig.path",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.redirectconfig.path",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.redirectconfig.port": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.redirectconfig.port",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.redirectconfig.protocol": {
        "Pattern": "^(HTTPS?|#\\{protocol\\})$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.redirectconfig.protocol",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.redirectconfig.query": {
        "Maximum": "128",
        "Minimum": "0",
        "Pattern": "^.{0,128}$",
        "Required": "No",
        "SampleValue": "TODO-elasticloadbalancingv2.listenerrule.redirectconfig.query",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.redirectconfig.query",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.redirectconfig.statuscode": {
        "Allowed Values": "HTTP_301 | HTTP_302",
        "AllowedValues": [
            "HTTP_301",
            "HTTP_302"
        ],
        "Pattern": "^[HTTP_301|HTTP_302]",
        "Required": "Yes",
        "SampleValue": "HTTP_301|HTTP_302",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.redirectconfig.statuscode",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.listenerrule.sourceipconfig.cfnproperties": [
        "Values",
        "UniqueKey"
    ],
    "elasticloadbalancingv2.listenerrule.sourceipconfig.values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticloadbalancingv2.listenerrule.sourceipconfig.values",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.loadbalancer.loadbalancerattributes.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticloadbalancingv2.loadbalancer.loadbalancerattributes.key": {
        "Maximum": "256",
        "Pattern": "^[a-zA-Z0-9._]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.loadbalancer.loadbalancerattributes.key",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.loadbalancer.loadbalancerattributes.value": {
        "Maximum": "1024",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.loadbalancer.loadbalancerattributes.value",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.loadbalancer.subnetmapping.allocationid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.loadbalancer.subnetmapping.allocationid",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.loadbalancer.subnetmapping.cfnproperties": [
        "SubnetId",
        "AllocationId",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticloadbalancingv2.loadbalancer.subnetmapping.subnetid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.loadbalancer.subnetmapping.subnetid",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.targetgroup.matcher.cfnproperties": [
        "HttpCode",
        "UniqueKey"
    ],
    "elasticloadbalancingv2.targetgroup.matcher.httpcode": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.targetgroup.matcher.httpcode",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.targetgroup.targetdescription.availabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.targetgroup.targetdescription.availabilityzone",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.targetgroup.targetdescription.cfnproperties": [
        "AvailabilityZone",
        "Id",
        "Port",
        "UniqueKey"
    ],
    "elasticloadbalancingv2.targetgroup.targetdescription.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.targetgroup.targetdescription.id",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.targetgroup.targetdescription.port": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "No",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "elasticloadbalancingv2.targetgroup.targetdescription.port",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.targetgroup.targetgroupattribute.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticloadbalancingv2.targetgroup.targetgroupattribute.key": {
        "Maximum": "256",
        "Pattern": "^[a-zA-Z0-9._]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.targetgroup.targetgroupattribute.key",
        "UpdateRequires": "No interruption"
    },
    "elasticloadbalancingv2.targetgroup.targetgroupattribute.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticloadbalancingv2.targetgroup.targetgroupattribute.value",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.application.additionalinfo": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticmapreduce.cluster.application.additionalinfo",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.application.args": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.cluster.application.args",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.application.cfnproperties": [
        "AdditionalInfo",
        "Args",
        "Version",
        "Name",
        "UniqueKey"
    ],
    "elasticmapreduce.cluster.application.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.application.name",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.application.version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.application.version",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.autoscalingpolicy.cfnproperties": [
        "Rules",
        "Constraints",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticmapreduce.cluster.autoscalingpolicy.constraints": {
        "Required": "Yes",
        "Type": "ScalingConstraints",
        "UniqueKey": "elasticmapreduce.cluster.autoscalingpolicy.constraints",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.autoscalingpolicy.rules": {
        "Required": "Yes",
        "Type": "List of [ScalingRule",
        "UniqueKey": "elasticmapreduce.cluster.autoscalingpolicy.rules",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.bootstrapactionconfig.cfnproperties": [
        "ScriptBootstrapAction",
        "Name",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticmapreduce.cluster.bootstrapactionconfig.name": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.bootstrapactionconfig.name",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.bootstrapactionconfig.scriptbootstrapaction": {
        "Required": "Yes",
        "Type": "ScriptBootstrapActionConfig",
        "UniqueKey": "elasticmapreduce.cluster.bootstrapactionconfig.scriptbootstrapaction",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.cfnproperties": [
        "EvaluationPeriods",
        "Dimensions",
        "Namespace",
        "Period",
        "ComparisonOperator",
        "Statistic",
        "Threshold",
        "Unit",
        "MetricName",
        "UniqueKey"
    ],
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.comparisonoperator": {
        "Allowed Values": "GREATER_THAN | GREATER_THAN_OR_EQUAL | LESS_THAN | LESS_THAN_OR_EQUAL",
        "AllowedValues": [
            "GREATER_THAN",
            "GREATER_THAN_OR_EQUAL",
            "LESS_THAN",
            "LESS_THAN_OR_EQUAL"
        ],
        "Pattern": "^[GREATER_THAN|GREATER_THAN_OR_EQUAL|LESS_THAN|LESS_THAN_OR_EQUAL]",
        "Required": "Yes",
        "SampleValue": "GREATER_THAN|GREATER_THAN_OR_EQUAL|LESS_THAN|LESS_THAN_OR_EQUAL",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.comparisonoperator",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.dimensions": {
        "Required": "No",
        "Type": "List of [MetricDimension",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.dimensions",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.evaluationperiods": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.evaluationperiods",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.metricname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.metricname",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.namespace": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.namespace",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.period": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.period",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.statistic": {
        "Allowed Values": "AVERAGE | MAXIMUM | MINIMUM | SAMPLE_COUNT | SUM",
        "AllowedValues": [
            "AVERAGE",
            "MAXIMUM",
            "MINIMUM",
            "SAMPLE_COUNT",
            "SUM"
        ],
        "Pattern": "^[AVERAGE|MAXIMUM|MINIMUM|SAMPLE_COUNT|SUM]",
        "Required": "No",
        "SampleValue": "AVERAGE|MAXIMUM|MINIMUM|SAMPLE_COUNT|SUM",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.statistic",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.threshold": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.threshold",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.cloudwatchalarmdefinition.unit": {
        "Allowed Values": "BITS | BITS_PER_SECOND | BYTES | BYTES_PER_SECOND | COUNT | COUNT_PER_SECOND | GIGA_BITS | GIGA_BITS_PER_SECOND | GIGA_BYTES | GIGA_BYTES_PER_SECOND | KILO_BITS | KILO_BITS_PER_SECOND | KILO_BYTES | KILO_BYTES_PER_SECOND | MEGA_BITS | MEGA_BITS_PER_SECOND | MEGA_BYTES | MEGA_BYTES_PER_SECOND | MICRO_SECONDS | MILLI_SECONDS | NONE | PERCENT | SECONDS | TERA_BITS | TERA_BITS_PER_SECOND | TERA_BYTES | TERA_BYTES_PER_SECOND",
        "AllowedValues": [
            "BITS",
            "BITS_PER_SECOND",
            "BYTES",
            "BYTES_PER_SECOND",
            "COUNT",
            "COUNT_PER_SECOND",
            "GIGA_BITS",
            "GIGA_BITS_PER_SECOND",
            "GIGA_BYTES",
            "GIGA_BYTES_PER_SECOND",
            "KILO_BITS",
            "KILO_BITS_PER_SECOND",
            "KILO_BYTES",
            "KILO_BYTES_PER_SECOND",
            "MEGA_BITS",
            "MEGA_BITS_PER_SECOND",
            "MEGA_BYTES",
            "MEGA_BYTES_PER_SECOND",
            "MICRO_SECONDS",
            "MILLI_SECONDS",
            "NONE",
            "PERCENT",
            "SECONDS",
            "TERA_BITS",
            "TERA_BITS_PER_SECOND",
            "TERA_BYTES",
            "TERA_BYTES_PER_SECOND"
        ],
        "Pattern": "^[BITS|BITS_PER_SECOND|BYTES|BYTES_PER_SECOND|COUNT|COUNT_PER_SECOND|GIGA_BITS|GIGA_BITS_PER_SECOND|GIGA_BYTES|GIGA_BYTES_PER_SECOND|KILO_BITS|KILO_BITS_PER_SECOND|KILO_BYTES|KILO_BYTES_PER_SECOND|MEGA_BITS|MEGA_BITS_PER_SECOND|MEGA_BYTES|MEGA_BYTES_PER_SECOND|MICRO_SECONDS|MILLI_SECONDS|NONE|PERCENT|SECONDS|TERA_BITS|TERA_BITS_PER_SECOND|TERA_BYTES|TERA_BYTES_PER_SECOND]",
        "Required": "No",
        "SampleValue": "BITS|BITS_PER_SECOND|BYTES|BYTES_PER_SECOND|COUNT|COUNT_PER_SECOND|GIGA_BITS|GIGA_BITS_PER_SECOND|GIGA_BYTES|GIGA_BYTES_PER_SECOND|KILO_BITS|KILO_BITS_PER_SECOND|KILO_BYTES|KILO_BYTES_PER_SECOND|MEGA_BITS|MEGA_BITS_PER_SECOND|MEGA_BYTES|MEGA_BYTES_PER_SECOND|MICRO_SECONDS|MILLI_SECONDS|NONE|PERCENT|SECONDS|TERA_BITS|TERA_BITS_PER_SECOND|TERA_BYTES|TERA_BYTES_PER_SECOND",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.cloudwatchalarmdefinition.unit",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.configuration.cfnproperties": [
        "ConfigurationProperties",
        "Classification",
        "Configurations",
        "UniqueKey"
    ],
    "elasticmapreduce.cluster.configuration.classification": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.configuration.classification",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.configuration.configurationproperties": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticmapreduce.cluster.configuration.configurationproperties",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.configuration.configurations": {
        "Required": "No",
        "Type": "List of [Configuration",
        "UniqueKey": "elasticmapreduce.cluster.configuration.configurations",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.ebsblockdeviceconfig.cfnproperties": [
        "VolumeSpecification",
        "VolumesPerInstance",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticmapreduce.cluster.ebsblockdeviceconfig.volumespecification": {
        "Required": "Yes",
        "Type": "VolumeSpecification",
        "UniqueKey": "elasticmapreduce.cluster.ebsblockdeviceconfig.volumespecification",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.ebsblockdeviceconfig.volumesperinstance": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.ebsblockdeviceconfig.volumesperinstance",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.ebsconfiguration.cfnproperties": [
        "EbsOptimized",
        "EbsBlockDeviceConfigs",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticmapreduce.cluster.ebsconfiguration.ebsblockdeviceconfigs": {
        "Required": "No",
        "Type": "List of [EbsBlockDeviceConfig",
        "UniqueKey": "elasticmapreduce.cluster.ebsconfiguration.ebsblockdeviceconfigs",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.ebsconfiguration.ebsoptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticmapreduce.cluster.ebsconfiguration.ebsoptimized",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.hadoopjarstepconfig.args": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.cluster.hadoopjarstepconfig.args",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.hadoopjarstepconfig.cfnproperties": [
        "MainClass",
        "Args",
        "Jar",
        "StepProperties",
        "UniqueKey"
    ],
    "elasticmapreduce.cluster.hadoopjarstepconfig.jar": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.hadoopjarstepconfig.jar",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.hadoopjarstepconfig.mainclass": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.hadoopjarstepconfig.mainclass",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.hadoopjarstepconfig.stepproperties": {
        "Required": "No",
        "Type": "List of [KeyValue",
        "UniqueKey": "elasticmapreduce.cluster.hadoopjarstepconfig.stepproperties",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.instancefleetconfig.cfnproperties": [
        "InstanceTypeConfigs",
        "TargetSpotCapacity",
        "LaunchSpecifications",
        "Name",
        "TargetOnDemandCapacity",
        "UniqueKey"
    ],
    "elasticmapreduce.cluster.instancefleetconfig.instancetypeconfigs": {
        "Required": "No",
        "Type": "List of [InstanceTypeConfig",
        "UniqueKey": "elasticmapreduce.cluster.instancefleetconfig.instancetypeconfigs",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancefleetconfig.launchspecifications": {
        "Required": "No",
        "Type": "InstanceFleetProvisioningSpecifications",
        "UniqueKey": "elasticmapreduce.cluster.instancefleetconfig.launchspecifications",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancefleetconfig.name": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancefleetconfig.name",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancefleetconfig.targetondemandcapacity": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.instancefleetconfig.targetondemandcapacity",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.instancefleetconfig.targetspotcapacity": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.instancefleetconfig.targetspotcapacity",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.instancefleetprovisioningspecifications.cfnproperties": [
        "SpotSpecification",
        "UniqueKey"
    ],
    "elasticmapreduce.cluster.instancefleetprovisioningspecifications.spotspecification": {
        "Required": "Yes",
        "Type": "SpotProvisioningSpecification",
        "UniqueKey": "elasticmapreduce.cluster.instancefleetprovisioningspecifications.spotspecification",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.instancegroupconfig.autoscalingpolicy": {
        "Required": "No",
        "Type": "AutoScalingPolicy",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.autoscalingpolicy",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.instancegroupconfig.bidprice": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.bidprice",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.cfnproperties": [
        "InstanceCount",
        "Name",
        "AutoScalingPolicy",
        "EbsConfiguration",
        "BidPrice",
        "InstanceType",
        "Market",
        "Configurations",
        "UniqueKey"
    ],
    "elasticmapreduce.cluster.instancegroupconfig.configurations": {
        "Required": "No",
        "Type": "List of [Configuration",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.configurations",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.ebsconfiguration": {
        "Required": "No",
        "Type": "EbsConfiguration",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.ebsconfiguration",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.instancecount": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.instancecount",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.instancegroupconfig.instancetype": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.instancetype",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.market": {
        "Allowed Values": "ON_DEMAND | SPOT",
        "AllowedValues": [
            "ON_DEMAND",
            "SPOT"
        ],
        "Pattern": "^[ON_DEMAND|SPOT]",
        "Required": "No",
        "SampleValue": "ON_DEMAND|SPOT",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.market",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancegroupconfig.name": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancegroupconfig.name",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancetypeconfig.bidprice": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancetypeconfig.bidprice",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancetypeconfig.bidpriceaspercentageofondemandprice": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "elasticmapreduce.cluster.instancetypeconfig.bidpriceaspercentageofondemandprice",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancetypeconfig.cfnproperties": [
        "WeightedCapacity",
        "EbsConfiguration",
        "BidPrice",
        "BidPriceAsPercentageOfOnDemandPrice",
        "InstanceType",
        "Configurations",
        "UniqueKey"
    ],
    "elasticmapreduce.cluster.instancetypeconfig.configurations": {
        "Required": "No",
        "Type": "List of [Configuration",
        "UniqueKey": "elasticmapreduce.cluster.instancetypeconfig.configurations",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancetypeconfig.ebsconfiguration": {
        "Required": "No",
        "Type": "EbsConfiguration",
        "UniqueKey": "elasticmapreduce.cluster.instancetypeconfig.ebsconfiguration",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancetypeconfig.instancetype": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.instancetypeconfig.instancetype",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.instancetypeconfig.weightedcapacity": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.instancetypeconfig.weightedcapacity",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.additionalmastersecuritygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.additionalmastersecuritygroups",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.additionalslavesecuritygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.additionalslavesecuritygroups",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.cfnproperties": [
        "ServiceAccessSecurityGroup",
        "CoreInstanceFleet",
        "EmrManagedSlaveSecurityGroup",
        "Placement",
        "TerminationProtected",
        "Ec2SubnetIds",
        "MasterInstanceFleet",
        "MasterInstanceGroup",
        "CoreInstanceGroup",
        "Ec2SubnetId",
        "KeepJobFlowAliveWhenNoSteps",
        "AdditionalMasterSecurityGroups",
        "EmrManagedMasterSecurityGroup",
        "Ec2KeyName",
        "HadoopVersion",
        "AdditionalSlaveSecurityGroups",
        "UniqueKey"
    ],
    "elasticmapreduce.cluster.jobflowinstancesconfig.coreinstancefleet": {
        "Required": "No",
        "Type": "InstanceFleetConfig",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.coreinstancefleet",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.coreinstancegroup": {
        "Required": "No",
        "Type": "InstanceGroupConfig",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.coreinstancegroup",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.ec2keyname": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.ec2keyname",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.ec2subnetid": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.ec2subnetid",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.ec2subnetids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.ec2subnetids",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.emrmanagedmastersecuritygroup": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.emrmanagedmastersecuritygroup",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.emrmanagedslavesecuritygroup": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.emrmanagedslavesecuritygroup",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.hadoopversion": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.hadoopversion",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.keepjobflowalivewhennosteps": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.keepjobflowalivewhennosteps",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.masterinstancefleet": {
        "Required": "No",
        "Type": "InstanceFleetConfig",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.masterinstancefleet",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.masterinstancegroup": {
        "Required": "No",
        "Type": "InstanceGroupConfig",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.masterinstancegroup",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.placement": {
        "Required": "No",
        "Type": "PlacementType",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.placement",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.serviceaccesssecuritygroup": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.serviceaccesssecuritygroup",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.jobflowinstancesconfig.terminationprotected": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticmapreduce.cluster.jobflowinstancesconfig.terminationprotected",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.kerberosattributes.addomainjoinpassword": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.kerberosattributes.addomainjoinpassword",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.kerberosattributes.addomainjoinuser": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.kerberosattributes.addomainjoinuser",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.kerberosattributes.cfnproperties": [
        "Realm",
        "KdcAdminPassword",
        "ADDomainJoinPassword",
        "CrossRealmTrustPrincipalPassword",
        "ADDomainJoinUser",
        "UniqueKey"
    ],
    "elasticmapreduce.cluster.kerberosattributes.crossrealmtrustprincipalpassword": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.kerberosattributes.crossrealmtrustprincipalpassword",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.kerberosattributes.kdcadminpassword": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.kerberosattributes.kdcadminpassword",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.kerberosattributes.realm": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.kerberosattributes.realm",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.keyvalue.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticmapreduce.cluster.keyvalue.key": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.keyvalue.key",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.keyvalue.value": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.keyvalue.value",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.metricdimension.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticmapreduce.cluster.metricdimension.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.metricdimension.key",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.metricdimension.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.metricdimension.value",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.placementtype.availabilityzone": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.placementtype.availabilityzone",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.cluster.placementtype.cfnproperties": [
        "AvailabilityZone",
        "UniqueKey"
    ],
    "elasticmapreduce.cluster.scalingaction.cfnproperties": [
        "SimpleScalingPolicyConfiguration",
        "Market",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticmapreduce.cluster.scalingaction.market": {
        "Allowed Values": "ON_DEMAND | SPOT",
        "AllowedValues": [
            "ON_DEMAND",
            "SPOT"
        ],
        "Pattern": "^[ON_DEMAND|SPOT]",
        "Required": "No",
        "SampleValue": "ON_DEMAND|SPOT",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.scalingaction.market",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.scalingaction.simplescalingpolicyconfiguration": {
        "Required": "Yes",
        "Type": "SimpleScalingPolicyConfiguration",
        "UniqueKey": "elasticmapreduce.cluster.scalingaction.simplescalingpolicyconfiguration",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.scalingconstraints.cfnproperties": [
        "MinCapacity",
        "MaxCapacity",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticmapreduce.cluster.scalingconstraints.maxcapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.scalingconstraints.maxcapacity",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.scalingconstraints.mincapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.scalingconstraints.mincapacity",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.scalingrule.action": {
        "Required": "Yes",
        "Type": "ScalingAction",
        "UniqueKey": "elasticmapreduce.cluster.scalingrule.action",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.scalingrule.cfnproperties": [
        "Action",
        "Trigger",
        "Description",
        "Name",
        "UniqueKey"
    ],
    "elasticmapreduce.cluster.scalingrule.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.scalingrule.description",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.scalingrule.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.scalingrule.name",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.scalingrule.trigger": {
        "Required": "Yes",
        "Type": "ScalingTrigger",
        "UniqueKey": "elasticmapreduce.cluster.scalingrule.trigger",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.scalingtrigger.cfnproperties": [
        "CloudWatchAlarmDefinition",
        "UniqueKey"
    ],
    "elasticmapreduce.cluster.scalingtrigger.cloudwatchalarmdefinition": {
        "Required": "Yes",
        "Type": "CloudWatchAlarmDefinition",
        "UniqueKey": "elasticmapreduce.cluster.scalingtrigger.cloudwatchalarmdefinition",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.scriptbootstrapactionconfig.args": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.cluster.scriptbootstrapactionconfig.args",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.scriptbootstrapactionconfig.cfnproperties": [
        "Path",
        "Args",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticmapreduce.cluster.scriptbootstrapactionconfig.path": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.scriptbootstrapactionconfig.path",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.simplescalingpolicyconfiguration.adjustmenttype": {
        "Allowed Values": "CHANGE_IN_CAPACITY | EXACT_CAPACITY | PERCENT_CHANGE_IN_CAPACITY",
        "AllowedValues": [
            "CHANGE_IN_CAPACITY",
            "EXACT_CAPACITY",
            "PERCENT_CHANGE_IN_CAPACITY"
        ],
        "Pattern": "^[CHANGE_IN_CAPACITY|EXACT_CAPACITY|PERCENT_CHANGE_IN_CAPACITY]",
        "Required": "No",
        "SampleValue": "CHANGE_IN_CAPACITY|EXACT_CAPACITY|PERCENT_CHANGE_IN_CAPACITY",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.simplescalingpolicyconfiguration.adjustmenttype",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.simplescalingpolicyconfiguration.cfnproperties": [
        "ScalingAdjustment",
        "CoolDown",
        "AdjustmentType",
        "UniqueKey"
    ],
    "elasticmapreduce.cluster.simplescalingpolicyconfiguration.cooldown": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.simplescalingpolicyconfiguration.cooldown",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.simplescalingpolicyconfiguration.scalingadjustment": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.simplescalingpolicyconfiguration.scalingadjustment",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.spotprovisioningspecification.blockdurationminutes": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.spotprovisioningspecification.blockdurationminutes",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.spotprovisioningspecification.cfnproperties": [
        "BlockDurationMinutes",
        "TimeoutDurationMinutes",
        "TimeoutAction",
        "UniqueKey"
    ],
    "elasticmapreduce.cluster.spotprovisioningspecification.timeoutaction": {
        "Allowed Values": "SWITCH_TO_ON_DEMAND | TERMINATE_CLUSTER",
        "AllowedValues": [
            "SWITCH_TO_ON_DEMAND",
            "TERMINATE_CLUSTER"
        ],
        "Pattern": "^[SWITCH_TO_ON_DEMAND|TERMINATE_CLUSTER]",
        "Required": "Yes",
        "SampleValue": "SWITCH_TO_ON_DEMAND|TERMINATE_CLUSTER",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.spotprovisioningspecification.timeoutaction",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.spotprovisioningspecification.timeoutdurationminutes": {
        "Minimum": "0",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.spotprovisioningspecification.timeoutdurationminutes",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.stepconfig.actiononfailure": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.stepconfig.actiononfailure",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.stepconfig.cfnproperties": [
        "HadoopJarStep",
        "Name",
        "ActionOnFailure",
        "UniqueKey"
    ],
    "elasticmapreduce.cluster.stepconfig.hadoopjarstep": {
        "Required": "Yes",
        "Type": "HadoopJarStepConfig",
        "UniqueKey": "elasticmapreduce.cluster.stepconfig.hadoopjarstep",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.stepconfig.name": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.stepconfig.name",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.volumespecification.cfnproperties": [
        "Iops",
        "VolumeType",
        "SizeInGB",
        "UniqueKey"
    ],
    "elasticmapreduce.cluster.volumespecification.iops": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.volumespecification.iops",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.volumespecification.sizeingb": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.cluster.volumespecification.sizeingb",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.cluster.volumespecification.volumetype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.cluster.volumespecification.volumetype",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancefleetconfig.configuration.cfnproperties": [
        "ConfigurationProperties",
        "Classification",
        "Configurations",
        "UniqueKey"
    ],
    "elasticmapreduce.instancefleetconfig.configuration.classification": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.configuration.classification",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.configuration.configurationproperties": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.configuration.configurationproperties",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.configuration.configurations": {
        "Required": "No",
        "Type": "List of [Configuration",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.configuration.configurations",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.ebsblockdeviceconfig.cfnproperties": [
        "VolumeSpecification",
        "VolumesPerInstance",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticmapreduce.instancefleetconfig.ebsblockdeviceconfig.volumespecification": {
        "Required": "Yes",
        "Type": "VolumeSpecification",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.ebsblockdeviceconfig.volumespecification",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.ebsblockdeviceconfig.volumesperinstance": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.ebsblockdeviceconfig.volumesperinstance",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.ebsconfiguration.cfnproperties": [
        "EbsOptimized",
        "EbsBlockDeviceConfigs",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticmapreduce.instancefleetconfig.ebsconfiguration.ebsblockdeviceconfigs": {
        "Required": "No",
        "Type": "List of [EbsBlockDeviceConfig",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.ebsconfiguration.ebsblockdeviceconfigs",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.ebsconfiguration.ebsoptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.ebsconfiguration.ebsoptimized",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancefleetprovisioningspecifications.cfnproperties": [
        "SpotSpecification",
        "UniqueKey"
    ],
    "elasticmapreduce.instancefleetconfig.instancefleetprovisioningspecifications.spotspecification": {
        "Required": "Yes",
        "Type": "SpotProvisioningSpecification",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancefleetprovisioningspecifications.spotspecification",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancefleetconfig.instancetypeconfig.bidprice": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancetypeconfig.bidprice",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancetypeconfig.bidpriceaspercentageofondemandprice": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancetypeconfig.bidpriceaspercentageofondemandprice",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancetypeconfig.cfnproperties": [
        "WeightedCapacity",
        "EbsConfiguration",
        "BidPrice",
        "BidPriceAsPercentageOfOnDemandPrice",
        "InstanceType",
        "Configurations",
        "UniqueKey"
    ],
    "elasticmapreduce.instancefleetconfig.instancetypeconfig.configurations": {
        "Required": "No",
        "Type": "List of [Configuration",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancetypeconfig.configurations",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancetypeconfig.ebsconfiguration": {
        "Required": "No",
        "Type": "EbsConfiguration",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancetypeconfig.ebsconfiguration",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancetypeconfig.instancetype": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancetypeconfig.instancetype",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.instancetypeconfig.weightedcapacity": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.instancetypeconfig.weightedcapacity",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.blockdurationminutes": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.blockdurationminutes",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.cfnproperties": [
        "BlockDurationMinutes",
        "TimeoutDurationMinutes",
        "TimeoutAction",
        "UniqueKey"
    ],
    "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.timeoutaction": {
        "Allowed Values": "SWITCH_TO_ON_DEMAND | TERMINATE_CLUSTER",
        "AllowedValues": [
            "SWITCH_TO_ON_DEMAND",
            "TERMINATE_CLUSTER"
        ],
        "Pattern": "^[SWITCH_TO_ON_DEMAND|TERMINATE_CLUSTER]",
        "Required": "Yes",
        "SampleValue": "SWITCH_TO_ON_DEMAND|TERMINATE_CLUSTER",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.timeoutaction",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.timeoutdurationminutes": {
        "Minimum": "0",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.spotprovisioningspecification.timeoutdurationminutes",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancefleetconfig.volumespecification.cfnproperties": [
        "Iops",
        "VolumeType",
        "SizeInGB",
        "UniqueKey"
    ],
    "elasticmapreduce.instancefleetconfig.volumespecification.iops": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.volumespecification.iops",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.volumespecification.sizeingb": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.volumespecification.sizeingb",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancefleetconfig.volumespecification.volumetype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancefleetconfig.volumespecification.volumetype",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.instancegroupconfig.autoscalingpolicy.cfnproperties": [
        "Rules",
        "Constraints",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticmapreduce.instancegroupconfig.autoscalingpolicy.constraints": {
        "Required": "Yes",
        "Type": "ScalingConstraints",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.autoscalingpolicy.constraints",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.autoscalingpolicy.rules": {
        "Required": "Yes",
        "Type": "List of [ScalingRule",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.autoscalingpolicy.rules",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.cfnproperties": [
        "EvaluationPeriods",
        "Dimensions",
        "Namespace",
        "Period",
        "ComparisonOperator",
        "Statistic",
        "Threshold",
        "Unit",
        "MetricName",
        "UniqueKey"
    ],
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.comparisonoperator": {
        "Allowed Values": "GREATER_THAN | GREATER_THAN_OR_EQUAL | LESS_THAN | LESS_THAN_OR_EQUAL",
        "AllowedValues": [
            "GREATER_THAN",
            "GREATER_THAN_OR_EQUAL",
            "LESS_THAN",
            "LESS_THAN_OR_EQUAL"
        ],
        "Pattern": "^[GREATER_THAN|GREATER_THAN_OR_EQUAL|LESS_THAN|LESS_THAN_OR_EQUAL]",
        "Required": "Yes",
        "SampleValue": "GREATER_THAN|GREATER_THAN_OR_EQUAL|LESS_THAN|LESS_THAN_OR_EQUAL",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.comparisonoperator",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.dimensions": {
        "Required": "No",
        "Type": "List of [MetricDimension",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.dimensions",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.evaluationperiods": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.evaluationperiods",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.metricname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.metricname",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.namespace": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.namespace",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.period": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.period",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.statistic": {
        "Allowed Values": "AVERAGE | MAXIMUM | MINIMUM | SAMPLE_COUNT | SUM",
        "AllowedValues": [
            "AVERAGE",
            "MAXIMUM",
            "MINIMUM",
            "SAMPLE_COUNT",
            "SUM"
        ],
        "Pattern": "^[AVERAGE|MAXIMUM|MINIMUM|SAMPLE_COUNT|SUM]",
        "Required": "No",
        "SampleValue": "AVERAGE|MAXIMUM|MINIMUM|SAMPLE_COUNT|SUM",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.statistic",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.threshold": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.threshold",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.unit": {
        "Allowed Values": "BITS | BITS_PER_SECOND | BYTES | BYTES_PER_SECOND | COUNT | COUNT_PER_SECOND | GIGA_BITS | GIGA_BITS_PER_SECOND | GIGA_BYTES | GIGA_BYTES_PER_SECOND | KILO_BITS | KILO_BITS_PER_SECOND | KILO_BYTES | KILO_BYTES_PER_SECOND | MEGA_BITS | MEGA_BITS_PER_SECOND | MEGA_BYTES | MEGA_BYTES_PER_SECOND | MICRO_SECONDS | MILLI_SECONDS | NONE | PERCENT | SECONDS | TERA_BITS | TERA_BITS_PER_SECOND | TERA_BYTES | TERA_BYTES_PER_SECOND",
        "AllowedValues": [
            "BITS",
            "BITS_PER_SECOND",
            "BYTES",
            "BYTES_PER_SECOND",
            "COUNT",
            "COUNT_PER_SECOND",
            "GIGA_BITS",
            "GIGA_BITS_PER_SECOND",
            "GIGA_BYTES",
            "GIGA_BYTES_PER_SECOND",
            "KILO_BITS",
            "KILO_BITS_PER_SECOND",
            "KILO_BYTES",
            "KILO_BYTES_PER_SECOND",
            "MEGA_BITS",
            "MEGA_BITS_PER_SECOND",
            "MEGA_BYTES",
            "MEGA_BYTES_PER_SECOND",
            "MICRO_SECONDS",
            "MILLI_SECONDS",
            "NONE",
            "PERCENT",
            "SECONDS",
            "TERA_BITS",
            "TERA_BITS_PER_SECOND",
            "TERA_BYTES",
            "TERA_BYTES_PER_SECOND"
        ],
        "Pattern": "^[BITS|BITS_PER_SECOND|BYTES|BYTES_PER_SECOND|COUNT|COUNT_PER_SECOND|GIGA_BITS|GIGA_BITS_PER_SECOND|GIGA_BYTES|GIGA_BYTES_PER_SECOND|KILO_BITS|KILO_BITS_PER_SECOND|KILO_BYTES|KILO_BYTES_PER_SECOND|MEGA_BITS|MEGA_BITS_PER_SECOND|MEGA_BYTES|MEGA_BYTES_PER_SECOND|MICRO_SECONDS|MILLI_SECONDS|NONE|PERCENT|SECONDS|TERA_BITS|TERA_BITS_PER_SECOND|TERA_BYTES|TERA_BYTES_PER_SECOND]",
        "Required": "No",
        "SampleValue": "BITS|BITS_PER_SECOND|BYTES|BYTES_PER_SECOND|COUNT|COUNT_PER_SECOND|GIGA_BITS|GIGA_BITS_PER_SECOND|GIGA_BYTES|GIGA_BYTES_PER_SECOND|KILO_BITS|KILO_BITS_PER_SECOND|KILO_BYTES|KILO_BYTES_PER_SECOND|MEGA_BITS|MEGA_BITS_PER_SECOND|MEGA_BYTES|MEGA_BYTES_PER_SECOND|MICRO_SECONDS|MILLI_SECONDS|NONE|PERCENT|SECONDS|TERA_BITS|TERA_BITS_PER_SECOND|TERA_BYTES|TERA_BYTES_PER_SECOND",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.cloudwatchalarmdefinition.unit",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.metricdimension.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticmapreduce.instancegroupconfig.metricdimension.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.metricdimension.key",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.metricdimension.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.metricdimension.value",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.scalingaction.cfnproperties": [
        "SimpleScalingPolicyConfiguration",
        "Market",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticmapreduce.instancegroupconfig.scalingaction.market": {
        "Allowed Values": "ON_DEMAND | SPOT",
        "AllowedValues": [
            "ON_DEMAND",
            "SPOT"
        ],
        "Pattern": "^[ON_DEMAND|SPOT]",
        "Required": "No",
        "SampleValue": "ON_DEMAND|SPOT",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingaction.market",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.scalingaction.simplescalingpolicyconfiguration": {
        "Required": "Yes",
        "Type": "SimpleScalingPolicyConfiguration",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingaction.simplescalingpolicyconfiguration",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.scalingconstraints.cfnproperties": [
        "MinCapacity",
        "MaxCapacity",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticmapreduce.instancegroupconfig.scalingconstraints.maxcapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingconstraints.maxcapacity",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.scalingconstraints.mincapacity": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingconstraints.mincapacity",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.scalingrule.action": {
        "Required": "Yes",
        "Type": "ScalingAction",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingrule.action",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.scalingrule.cfnproperties": [
        "Action",
        "Trigger",
        "Description",
        "Name",
        "UniqueKey"
    ],
    "elasticmapreduce.instancegroupconfig.scalingrule.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingrule.description",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.scalingrule.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingrule.name",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.scalingrule.trigger": {
        "Required": "Yes",
        "Type": "ScalingTrigger",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingrule.trigger",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.scalingtrigger.cfnproperties": [
        "CloudWatchAlarmDefinition",
        "UniqueKey"
    ],
    "elasticmapreduce.instancegroupconfig.scalingtrigger.cloudwatchalarmdefinition": {
        "Required": "Yes",
        "Type": "CloudWatchAlarmDefinition",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.scalingtrigger.cloudwatchalarmdefinition",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.adjustmenttype": {
        "Allowed Values": "CHANGE_IN_CAPACITY | EXACT_CAPACITY | PERCENT_CHANGE_IN_CAPACITY",
        "AllowedValues": [
            "CHANGE_IN_CAPACITY",
            "EXACT_CAPACITY",
            "PERCENT_CHANGE_IN_CAPACITY"
        ],
        "Pattern": "^[CHANGE_IN_CAPACITY|EXACT_CAPACITY|PERCENT_CHANGE_IN_CAPACITY]",
        "Required": "No",
        "SampleValue": "CHANGE_IN_CAPACITY|EXACT_CAPACITY|PERCENT_CHANGE_IN_CAPACITY",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.adjustmenttype",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.cfnproperties": [
        "ScalingAdjustment",
        "CoolDown",
        "AdjustmentType",
        "UniqueKey"
    ],
    "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.cooldown": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.cooldown",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.scalingadjustment": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "elasticmapreduce.instancegroupconfig.simplescalingpolicyconfiguration.scalingadjustment",
        "UpdateRequires": "No interruption"
    },
    "elasticmapreduce.step.hadoopjarstepconfig.args": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "elasticmapreduce.step.hadoopjarstepconfig.args",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.step.hadoopjarstepconfig.cfnproperties": [
        "MainClass",
        "Args",
        "Jar",
        "StepProperties",
        "UniqueKey"
    ],
    "elasticmapreduce.step.hadoopjarstepconfig.jar": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.step.hadoopjarstepconfig.jar",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.step.hadoopjarstepconfig.mainclass": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.step.hadoopjarstepconfig.mainclass",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.step.hadoopjarstepconfig.stepproperties": {
        "Required": "No",
        "Type": "List of [KeyValue",
        "UniqueKey": "elasticmapreduce.step.hadoopjarstepconfig.stepproperties",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.step.keyvalue.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticmapreduce.step.keyvalue.key": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.step.keyvalue.key",
        "UpdateRequires": "Replacement"
    },
    "elasticmapreduce.step.keyvalue.value": {
        "Maximum": "10280",
        "Minimum": "0",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticmapreduce.step.keyvalue.value",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.cognitooptions.cfnproperties": [
        "IdentityPoolId",
        "RoleArn",
        "Enabled",
        "UserPoolId",
        "UniqueKey"
    ],
    "elasticsearch.domain.cognitooptions.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.cognitooptions.enabled",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.cognitooptions.identitypoolid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.cognitooptions.identitypoolid",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.cognitooptions.rolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.cognitooptions.rolearn",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.cognitooptions.userpoolid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.cognitooptions.userpoolid",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.ebsoptions.cfnproperties": [
        "Iops",
        "VolumeType",
        "EBSEnabled",
        "VolumeSize",
        "UniqueKey"
    ],
    "elasticsearch.domain.ebsoptions.ebsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.ebsoptions.ebsenabled",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.ebsoptions.iops": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticsearch.domain.ebsoptions.iops",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.ebsoptions.volumesize": {
        "Required": "No",
        "SampleValue": "TODO-volumesize",
        "UniqueKey": "elasticsearch.domain.ebsoptions.volumesize",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.ebsoptions.volumetype": {
        "Required": "No",
        "SampleValue": "TODO-volumetype",
        "UniqueKey": "elasticsearch.domain.ebsoptions.volumetype",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.cfnproperties": [
        "ZoneAwarenessConfig",
        "DedicatedMasterEnabled",
        "InstanceCount",
        "ZoneAwarenessEnabled",
        "DedicatedMasterType",
        "InstanceType",
        "DedicatedMasterCount",
        "UniqueKey"
    ],
    "elasticsearch.domain.elasticsearchclusterconfig.dedicatedmastercount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.dedicatedmastercount",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.dedicatedmasterenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.dedicatedmasterenabled",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.dedicatedmastertype": {
        "Required": "No",
        "SampleValue": "TODO-dedicatedmastertype",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.dedicatedmastertype",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.instancecount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.instancecount",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.instancetype": {
        "Required": "No",
        "SampleValue": "TODO-instancetype",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.instancetype",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.zoneawarenessconfig": {
        "Required": "No",
        "Type": "ZoneAwarenessConfig",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.zoneawarenessconfig",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.elasticsearchclusterconfig.zoneawarenessenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "elasticsearch.domain.elasticsearchclusterconfig.zoneawarenessenabled",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.encryptionatrestoptions.cfnproperties": [
        "KmsKeyId",
        "Enabled",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticsearch.domain.encryptionatrestoptions.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.encryptionatrestoptions.enabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.encryptionatrestoptions.kmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.encryptionatrestoptions.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.logpublishingoption.cfnproperties": [
        "CloudWatchLogsLogGroupArn",
        "Enabled",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticsearch.domain.logpublishingoption.cloudwatchlogsloggrouparn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "elasticsearch.domain.logpublishingoption.cloudwatchlogsloggrouparn",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.logpublishingoption.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.logpublishingoption.enabled",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.nodetonodeencryptionoptions.cfnproperties": [
        "Enabled",
        "UniqueKey"
    ],
    "elasticsearch.domain.nodetonodeencryptionoptions.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "elasticsearch.domain.nodetonodeencryptionoptions.enabled",
        "UpdateRequires": "Replacement"
    },
    "elasticsearch.domain.snapshotoptions.automatedsnapshotstarthour": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticsearch.domain.snapshotoptions.automatedsnapshotstarthour",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.snapshotoptions.cfnproperties": [
        "AutomatedSnapshotStartHour",
        "UniqueKey"
    ],
    "elasticsearch.domain.vpcoptions.cfnproperties": [
        "SubnetIds",
        "SecurityGroupIds",
        "UniqueKey",
        "SampleValue"
    ],
    "elasticsearch.domain.vpcoptions.securitygroupids": {
        "Required": "No",
        "SampleValue": "TODO-securitygroupids",
        "UniqueKey": "elasticsearch.domain.vpcoptions.securitygroupids",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.vpcoptions.subnetids": {
        "Required": "No",
        "SampleValue": "TODO-subnetids",
        "UniqueKey": "elasticsearch.domain.vpcoptions.subnetids",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.zoneawarenessconfig.availabilityzonecount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "elasticsearch.domain.zoneawarenessconfig.availabilityzonecount",
        "UpdateRequires": "No interruption"
    },
    "elasticsearch.domain.zoneawarenessconfig.cfnproperties": [
        "AvailabilityZoneCount",
        "UniqueKey"
    ],
    "emr.cluster.configuration.cfnproperties": [
        "ConfigurationProperties",
        "Classification",
        "Configurations",
        "UniqueKey"
    ],
    "emr.cluster.configuration.classification": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "emr.cluster.configuration.classification",
        "UpdateRequires": "Replacement"
    },
    "emr.cluster.configuration.configurationproperties": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "emr.cluster.configuration.configurationproperties",
        "UpdateRequires": "Replacement"
    },
    "emr.cluster.configuration.configurations": {
        "Required": "No",
        "Type": "List of [Configuration",
        "UniqueKey": "emr.cluster.configuration.configurations",
        "UpdateRequires": "Replacement"
    },
    "emr.ebsconfiguration.cfnproperties": [
        "EbsOptimized",
        "EbsBlockDeviceConfigs",
        "UniqueKey",
        "SampleValue"
    ],
    "emr.ebsconfiguration.ebsblockdeviceconfig.cfnproperties": [
        "VolumeSpecification",
        "VolumesPerInstance",
        "UniqueKey",
        "SampleValue"
    ],
    "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification": {
        "Required": "Yes",
        "Type": "VolumeSpecification",
        "UniqueKey": "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification",
        "UpdateRequires": "No interruption"
    },
    "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.cfnproperties": [
        "Iops",
        "VolumeType",
        "SizeInGB",
        "UniqueKey"
    ],
    "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.iops": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.iops",
        "UpdateRequires": "No interruption"
    },
    "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.sizeingb": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.sizeingb",
        "UpdateRequires": "No interruption"
    },
    "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.volumetype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "emr.ebsconfiguration.ebsblockdeviceconfig.volumespecification.volumetype",
        "UpdateRequires": "No interruption"
    },
    "emr.ebsconfiguration.ebsblockdeviceconfig.volumesperinstance": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "emr.ebsconfiguration.ebsblockdeviceconfig.volumesperinstance",
        "UpdateRequires": "No interruption"
    },
    "emr.ebsconfiguration.ebsblockdeviceconfigs": {
        "Required": "No",
        "Type": "List of [EbsBlockDeviceConfig",
        "UniqueKey": "emr.ebsconfiguration.ebsblockdeviceconfigs",
        "UpdateRequires": "No interruption"
    },
    "emr.ebsconfiguration.ebsoptimized": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "emr.ebsconfiguration.ebsoptimized",
        "UpdateRequires": "No interruption"
    },
    "events.eventbuspolicy.condition.cfnproperties": [
        "Type",
        "Value",
        "Key",
        "UniqueKey"
    ],
    "events.eventbuspolicy.condition.key": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.eventbuspolicy.condition.key",
        "UpdateRequires": "No interruption"
    },
    "events.eventbuspolicy.condition.type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.eventbuspolicy.condition.type",
        "UpdateRequires": "No interruption"
    },
    "events.eventbuspolicy.condition.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.eventbuspolicy.condition.value",
        "UpdateRequires": "No interruption"
    },
    "events.rule.awsvpcconfiguration.assignpublicip": {
        "Allowed Values": "DISABLED | ENABLED",
        "AllowedValues": [
            "DISABLED",
            "ENABLED"
        ],
        "Pattern": "^[DISABLED|ENABLED]",
        "Required": "No",
        "SampleValue": "DISABLED|ENABLED",
        "Type": "String",
        "UniqueKey": "events.rule.awsvpcconfiguration.assignpublicip",
        "UpdateRequires": "No interruption"
    },
    "events.rule.awsvpcconfiguration.cfnproperties": [
        "AssignPublicIp",
        "SecurityGroups",
        "Subnets",
        "UniqueKey"
    ],
    "events.rule.awsvpcconfiguration.securitygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "events.rule.awsvpcconfiguration.securitygroups",
        "UpdateRequires": "No interruption"
    },
    "events.rule.awsvpcconfiguration.subnets": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "events.rule.awsvpcconfiguration.subnets",
        "UpdateRequires": "No interruption"
    },
    "events.rule.batcharrayproperties": [
        "Size",
        "UniqueKey"
    ],
    "events.rule.batcharrayproperties.cfnproperties": [
        "Size",
        "UniqueKey"
    ],
    "events.rule.batcharrayproperties.size": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "events.rule.batcharrayproperties.size",
        "UpdateRequires": "No interruption"
    },
    "events.rule.batchparameters.arrayproperties": {
        "Required": "No",
        "Type": "BatchArrayProperties",
        "UniqueKey": "events.rule.batchparameters.arrayproperties",
        "UpdateRequires": "No interruption"
    },
    "events.rule.batchparameters.cfnproperties": [
        "RetryStrategy",
        "ArrayProperties",
        "JobName",
        "JobDefinition",
        "UniqueKey"
    ],
    "events.rule.batchparameters.jobdefinition": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "events.rule.batchparameters.jobdefinition",
        "UpdateRequires": "No interruption"
    },
    "events.rule.batchparameters.jobname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "events.rule.batchparameters.jobname",
        "UpdateRequires": "No interruption"
    },
    "events.rule.batchparameters.retrystrategy": {
        "Required": "No",
        "Type": "BatchRetryStrategy",
        "UniqueKey": "events.rule.batchparameters.retrystrategy",
        "UpdateRequires": "No interruption"
    },
    "events.rule.batchretrystrategy.attempts": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "events.rule.batchretrystrategy.attempts",
        "UpdateRequires": "No interruption"
    },
    "events.rule.batchretrystrategy.cfnproperties": [
        "Attempts",
        "UniqueKey"
    ],
    "events.rule.ecsparameters.cfnproperties": [
        "NetworkConfiguration",
        "LaunchType",
        "Group",
        "TaskCount",
        "PlatformVersion",
        "TaskDefinitionArn",
        "UniqueKey"
    ],
    "events.rule.ecsparameters.group": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.rule.ecsparameters.group",
        "UpdateRequires": "No interruption"
    },
    "events.rule.ecsparameters.launchtype": {
        "AllowedValues": [
            "EC2",
            "FARGATE"
        ],
        "Pattern": "^[EC2|FARGATE]",
        "Required": "No",
        "SampleValue": "EC2|FARGATE",
        "UniqueKey": "events.rule.ecsparameters.launchtype",
        "UpdateRequires": "No interruption"
    },
    "events.rule.ecsparameters.networkconfiguration": {
        "Required": "No",
        "Type": "NetworkConfiguration",
        "UniqueKey": "events.rule.ecsparameters.networkconfiguration",
        "UpdateRequires": "No interruption"
    },
    "events.rule.ecsparameters.platformversion": {
        "Required": "No",
        "SampleValue": "TODO-platformversion",
        "UniqueKey": "events.rule.ecsparameters.platformversion",
        "UpdateRequires": "No interruption"
    },
    "events.rule.ecsparameters.taskcount": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "events.rule.ecsparameters.taskcount",
        "UpdateRequires": "No interruption"
    },
    "events.rule.ecsparameters.taskdefinitionarn": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "^.{1,1600}$",
        "Required": "Yes",
        "SampleValue": "TODO-events.rule.ecsparameters.taskdefinitionarn",
        "Type": "String",
        "UniqueKey": "events.rule.ecsparameters.taskdefinitionarn",
        "UpdateRequires": "No interruption"
    },
    "events.rule.inputtransformer.cfnproperties": [
        "InputTemplate",
        "InputPathsMap",
        "UniqueKey",
        "SampleValue"
    ],
    "events.rule.inputtransformer.inputpathsmap": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "events.rule.inputtransformer.inputpathsmap",
        "UpdateRequires": "No interruption"
    },
    "events.rule.inputtransformer.inputtemplate": {
        "Maximum": "8192",
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "events.rule.inputtransformer.inputtemplate",
        "UpdateRequires": "No interruption"
    },
    "events.rule.kinesisparameters.cfnproperties": [
        "PartitionKeyPath",
        "UniqueKey"
    ],
    "events.rule.kinesisparameters.partitionkeypath": {
        "Maximum": "256",
        "Required": "Yes",
        "UniqueKey": "events.rule.kinesisparameters.partitionkeypath",
        "UpdateRequires": "No interruption"
    },
    "events.rule.networkconfiguration.awsvpcconfiguration": {
        "Required": "No",
        "Type": "AwsVpcConfiguration",
        "UniqueKey": "events.rule.networkconfiguration.awsvpcconfiguration",
        "UpdateRequires": "No interruption"
    },
    "events.rule.networkconfiguration.cfnproperties": [
        "AwsVpcConfiguration",
        "UniqueKey"
    ],
    "events.rule.runcommandparameters.cfnproperties": [
        "RunCommandTargets",
        "UniqueKey"
    ],
    "events.rule.runcommandparameters.runcommandtargets": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of [RunCommandTarget",
        "UniqueKey": "events.rule.runcommandparameters.runcommandtargets",
        "UpdateRequires": "No interruption"
    },
    "events.rule.runcommandtarget.cfnproperties": [
        "Values",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "events.rule.runcommandtarget.key": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*$",
        "Required": "Yes",
        "UniqueKey": "events.rule.runcommandtarget.key",
        "UpdateRequires": "No interruption"
    },
    "events.rule.runcommandtarget.values": {
        "Maximum": "50",
        "Required": "Yes",
        "UniqueKey": "events.rule.runcommandtarget.values",
        "UpdateRequires": "No interruption"
    },
    "events.rule.sqsparameters.cfnproperties": [
        "MessageGroupId",
        "UniqueKey"
    ],
    "events.rule.sqsparameters.messagegroupid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "events.rule.sqsparameters.messagegroupid",
        "UpdateRequires": "No interruption"
    },
    "events.rule.target.arn": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "^.{1,1600}$",
        "Required": "Yes",
        "SampleValue": "TODO-events.rule.target.arn",
        "Type": "String",
        "UniqueKey": "events.rule.target.arn",
        "UpdateRequires": "No interruption"
    },
    "events.rule.target.batchparameters": {
        "Required": "No",
        "SampleValue": "TODO-batchparameters",
        "UniqueKey": "events.rule.target.batchparameters",
        "UpdateRequires": "No interruption"
    },
    "events.rule.target.cfnproperties": [
        "RunCommandParameters",
        "RoleArn",
        "BatchParameters",
        "InputTransformer",
        "EcsParameters",
        "KinesisParameters",
        "InputPath",
        "Input",
        "SqsParameters",
        "Id",
        "Arn",
        "UniqueKey"
    ],
    "events.rule.target.ecsparameters": {
        "Required": "No",
        "SampleValue": "TODO-ecsparameters",
        "UniqueKey": "events.rule.target.ecsparameters",
        "UpdateRequires": "No interruption"
    },
    "events.rule.target.id": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "[\\.\\-_A-Za-z0-9]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "events.rule.target.id",
        "UpdateRequires": "No interruption"
    },
    "events.rule.target.input": {
        "Maximum": "8192",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.rule.target.input",
        "UpdateRequires": "No interruption"
    },
    "events.rule.target.inputpath": {
        "Maximum": "256",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "events.rule.target.inputpath",
        "UpdateRequires": "No interruption"
    },
    "events.rule.target.inputtransformer": {
        "Required": "No",
        "Type": "InputTransformer",
        "UniqueKey": "events.rule.target.inputtransformer",
        "UpdateRequires": "No interruption"
    },
    "events.rule.target.kinesisparameters": {
        "Required": "No",
        "Type": "KinesisParameters",
        "UniqueKey": "events.rule.target.kinesisparameters",
        "UpdateRequires": "No interruption"
    },
    "events.rule.target.rolearn": {
        "Maximum": "1600",
        "Minimum": "1",
        "Pattern": "^.{1,1600}$",
        "Required": "No",
        "SampleValue": "TODO-events.rule.target.rolearn",
        "Type": "String",
        "UniqueKey": "events.rule.target.rolearn",
        "UpdateRequires": "No interruption"
    },
    "events.rule.target.runcommandparameters": {
        "Required": "No",
        "Type": "RunCommandParameters",
        "UniqueKey": "events.rule.target.runcommandparameters",
        "UpdateRequires": "No interruption"
    },
    "events.rule.target.sqsparameters": {
        "Required": "No",
        "Type": "SqsParameters",
        "UniqueKey": "events.rule.target.sqsparameters",
        "UpdateRequires": "No interruption"
    },
    "eventschemas.discoverer.tagsentry.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "eventschemas.discoverer.tagsentry.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eventschemas.discoverer.tagsentry.key",
        "UpdateRequires": "No interruption"
    },
    "eventschemas.discoverer.tagsentry.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eventschemas.discoverer.tagsentry.value",
        "UpdateRequires": "No interruption"
    },
    "eventschemas.registry.tagsentry.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "eventschemas.registry.tagsentry.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eventschemas.registry.tagsentry.key",
        "UpdateRequires": "No interruption"
    },
    "eventschemas.registry.tagsentry.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eventschemas.registry.tagsentry.value",
        "UpdateRequires": "No interruption"
    },
    "eventschemas.schema.tagsentry.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "eventschemas.schema.tagsentry.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eventschemas.schema.tagsentry.key",
        "UpdateRequires": "No interruption"
    },
    "eventschemas.schema.tagsentry.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "eventschemas.schema.tagsentry.value",
        "UpdateRequires": "No interruption"
    },
    "fsx.filesystem.lustreconfiguration.cfnproperties": [
        "ImportPath",
        "WeeklyMaintenanceStartTime",
        "ExportPath",
        "ImportedFileChunkSize",
        "UniqueKey"
    ],
    "fsx.filesystem.lustreconfiguration.exportpath": {
        "Maximum": "900",
        "Minimum": "3",
        "Pattern": "^.{3,900}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.exportpath",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.importedfilechunksize": {
        "Maximum": "512000",
        "Minimum": "1",
        "Pattern": "^[1,512000]}$",
        "Required": "No",
        "SampleValue": "1...512000",
        "Type": "Integer",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.importedfilechunksize",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.importpath": {
        "Maximum": "900",
        "Minimum": "3",
        "Pattern": "^.{3,900}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.importpath",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.lustreconfiguration.weeklymaintenancestarttime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.lustreconfiguration.weeklymaintenancestarttime",
        "UpdateRequires": "No interruption"
    },
    "fsx.filesystem.windowsconfiguration.activedirectoryid": {
        "Maximum": "12",
        "Minimum": "12",
        "Pattern": "^d-[0-9a-f]{10}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.activedirectoryid",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.automaticbackupretentiondays": {
        "Maximum": "35",
        "Minimum": "0",
        "Pattern": "^[0,35]}$",
        "Required": "No",
        "SampleValue": "0...35",
        "Type": "Integer",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.automaticbackupretentiondays",
        "UpdateRequires": "No interruption"
    },
    "fsx.filesystem.windowsconfiguration.cfnproperties": [
        "ThroughputCapacity",
        "CopyTagsToBackups",
        "WeeklyMaintenanceStartTime",
        "AutomaticBackupRetentionDays",
        "DeploymentType",
        "SelfManagedActiveDirectoryConfiguration",
        "DailyAutomaticBackupStartTime",
        "ActiveDirectoryId",
        "PreferredSubnetId",
        "UniqueKey"
    ],
    "fsx.filesystem.windowsconfiguration.copytagstobackups": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.copytagstobackups",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.dailyautomaticbackupstarttime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.dailyautomaticbackupstarttime",
        "UpdateRequires": "No interruption"
    },
    "fsx.filesystem.windowsconfiguration.deploymenttype": {
        "Allowed Values": "MULTI_AZ_1 | SINGLE_AZ_1",
        "AllowedValues": [
            "MULTI_AZ_1",
            "SINGLE_AZ_1"
        ],
        "Pattern": "^[MULTI_AZ_1|SINGLE_AZ_1]",
        "Required": "No",
        "SampleValue": "MULTI_AZ_1|SINGLE_AZ_1",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.deploymenttype",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.preferredsubnetid": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.preferredsubnetid",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration": {
        "Required": "No",
        "Type": "SelfManagedActiveDirectoryConfiguration",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration",
        "UpdateRequires": "No interruption"
    },
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.cfnproperties": [
        "UserName",
        "FileSystemAdministratorsGroup",
        "DnsIps",
        "OrganizationalUnitDistinguishedName",
        "DomainName",
        "Password",
        "UniqueKey"
    ],
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.dnsips": {
        "Maximum": "2",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.dnsips",
        "UpdateRequires": "No interruption"
    },
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.domainname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^.{1,255}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.domainname",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.filesystemadministratorsgroup": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.filesystemadministratorsgroup",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.organizationalunitdistinguishedname": {
        "Maximum": "2000",
        "Minimum": "1",
        "Pattern": "^.{1,2000}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.organizationalunitdistinguishedname",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.password": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.password",
        "UpdateRequires": "No interruption"
    },
    "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.username": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.selfmanagedactivedirectoryconfiguration.username",
        "UpdateRequires": "No interruption"
    },
    "fsx.filesystem.windowsconfiguration.throughputcapacity": {
        "Maximum": "2048",
        "Minimum": "8",
        "Required": "No",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.throughputcapacity",
        "UpdateRequires": "Replacement"
    },
    "fsx.filesystem.windowsconfiguration.weeklymaintenancestarttime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "fsx.filesystem.windowsconfiguration.weeklymaintenancestarttime",
        "UpdateRequires": "No interruption"
    },
    "gamelift.alias.routingstrategy.cfnproperties": [
        "Type",
        "Message",
        "FleetId",
        "UniqueKey"
    ],
    "gamelift.alias.routingstrategy.fleetid": {
        "Pattern": "^fleet-\\S+|^arn:.*:fleet\\/fleet-\\S+",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "gamelift.alias.routingstrategy.fleetid",
        "UpdateRequires": "No interruption"
    },
    "gamelift.alias.routingstrategy.message": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "gamelift.alias.routingstrategy.message",
        "UpdateRequires": "No interruption"
    },
    "gamelift.alias.routingstrategy.type": {
        "AllowedValues": [
            "SIMPLE",
            "TERMINAL"
        ],
        "Pattern": "^[SIMPLE|TERMINAL]",
        "Required": "Yes",
        "SampleValue": "SIMPLE|TERMINAL",
        "UniqueKey": "gamelift.alias.routingstrategy.type",
        "UpdateRequires": "No interruption"
    },
    "gamelift.build.storagelocation.bucket": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.build.storagelocation.bucket",
        "UpdateRequires": "Replacement"
    },
    "gamelift.build.storagelocation.cfnproperties": [
        "RoleArn",
        "Bucket",
        "ObjectVersion",
        "Key",
        "UniqueKey"
    ],
    "gamelift.build.storagelocation.key": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.build.storagelocation.key",
        "UpdateRequires": "Replacement"
    },
    "gamelift.build.storagelocation.objectversion": {
        "Minimum": "1",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "gamelift.build.storagelocation.objectversion",
        "UpdateRequires": "Replacement"
    },
    "gamelift.build.storagelocation.rolearn": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.build.storagelocation.rolearn",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.certificateconfiguration.certificatetype": {
        "Allowed Values": "DISABLED | GENERATED",
        "AllowedValues": [
            "DISABLED",
            "GENERATED"
        ],
        "Pattern": "^[DISABLED|GENERATED]",
        "Required": "Yes",
        "SampleValue": "DISABLED|GENERATED",
        "Type": "String",
        "UniqueKey": "gamelift.fleet.certificateconfiguration.certificatetype",
        "UpdateRequires": "Replacement"
    },
    "gamelift.fleet.certificateconfiguration.cfnproperties": [
        "CertificateType",
        "UniqueKey"
    ],
    "gamelift.fleet.ec2inboundpermission.cfnproperties": [
        "ToPort",
        "FromPort",
        "Protocol",
        "IpRange",
        "UniqueKey"
    ],
    "gamelift.fleet.ec2inboundpermission.fromport": {
        "Maximum": "60000",
        "Minimum": "1",
        "Pattern": "^[1,60000]}$",
        "Required": "Yes",
        "SampleValue": "1...60000",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.ec2inboundpermission.fromport",
        "UpdateRequires": "No interruption"
    },
    "gamelift.fleet.ec2inboundpermission.iprange": {
        "Pattern": "[^\\s]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.fleet.ec2inboundpermission.iprange",
        "UpdateRequires": "No interruption"
    },
    "gamelift.fleet.ec2inboundpermission.protocol": {
        "Allowed Values": "TCP | UDP",
        "AllowedValues": [
            "TCP",
            "UDP"
        ],
        "Pattern": "^[TCP|UDP]",
        "Required": "Yes",
        "SampleValue": "TCP|UDP",
        "Type": "String",
        "UniqueKey": "gamelift.fleet.ec2inboundpermission.protocol",
        "UpdateRequires": "No interruption"
    },
    "gamelift.fleet.ec2inboundpermission.toport": {
        "Maximum": "60000",
        "Minimum": "1",
        "Pattern": "^[1,60000]}$",
        "Required": "Yes",
        "SampleValue": "1...60000",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.ec2inboundpermission.toport",
        "UpdateRequires": "No interruption"
    },
    "gamelift.fleet.resourcecreationlimitpolicy.cfnproperties": [
        "NewGameSessionsPerCreator",
        "PolicyPeriodInMinutes",
        "UniqueKey",
        "SampleValue"
    ],
    "gamelift.fleet.resourcecreationlimitpolicy.newgamesessionspercreator": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.resourcecreationlimitpolicy.newgamesessionspercreator",
        "UpdateRequires": "No interruption"
    },
    "gamelift.fleet.resourcecreationlimitpolicy.policyperiodinminutes": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.resourcecreationlimitpolicy.policyperiodinminutes",
        "UpdateRequires": "No interruption"
    },
    "gamelift.fleet.runtimeconfiguration.cfnproperties": [
        "GameSessionActivationTimeoutSeconds",
        "MaxConcurrentGameSessionActivations",
        "ServerProcesses",
        "UniqueKey"
    ],
    "gamelift.fleet.runtimeconfiguration.gamesessionactivationtimeoutseconds": {
        "Maximum": "600",
        "Minimum": "1",
        "Pattern": "^[1,600]}$",
        "Required": "No",
        "SampleValue": "1...600",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.runtimeconfiguration.gamesessionactivationtimeoutseconds",
        "UpdateRequires": "No interruption"
    },
    "gamelift.fleet.runtimeconfiguration.maxconcurrentgamesessionactivations": {
        "Maximum": "2147483647",
        "Minimum": "1",
        "Pattern": "^[1,2147483647]}$",
        "Required": "No",
        "SampleValue": "1...2147483647",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.runtimeconfiguration.maxconcurrentgamesessionactivations",
        "UpdateRequires": "No interruption"
    },
    "gamelift.fleet.runtimeconfiguration.serverprocesses": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of [ServerProcess",
        "UniqueKey": "gamelift.fleet.runtimeconfiguration.serverprocesses",
        "UpdateRequires": "No interruption"
    },
    "gamelift.fleet.serverprocess.cfnproperties": [
        "Parameters",
        "LaunchPath",
        "ConcurrentExecutions",
        "UniqueKey"
    ],
    "gamelift.fleet.serverprocess.concurrentexecutions": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "gamelift.fleet.serverprocess.concurrentexecutions",
        "UpdateRequires": "No interruption"
    },
    "gamelift.fleet.serverprocess.launchpath": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-gamelift.fleet.serverprocess.launchpath",
        "Type": "String",
        "UniqueKey": "gamelift.fleet.serverprocess.launchpath",
        "UpdateRequires": "No interruption"
    },
    "gamelift.fleet.serverprocess.parameters": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-gamelift.fleet.serverprocess.parameters",
        "Type": "String",
        "UniqueKey": "gamelift.fleet.serverprocess.parameters",
        "UpdateRequires": "No interruption"
    },
    "gamelift.gamesessionqueue.destination.cfnproperties": [
        "DestinationArn",
        "UniqueKey"
    ],
    "gamelift.gamesessionqueue.destination.destinationarn": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9:/-]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "gamelift.gamesessionqueue.destination.destinationarn",
        "UpdateRequires": "No interruption"
    },
    "gamelift.gamesessionqueue.playerlatencypolicy.cfnproperties": [
        "MaximumIndividualPlayerLatencyMilliseconds",
        "PolicyDurationSeconds",
        "UniqueKey",
        "SampleValue"
    ],
    "gamelift.gamesessionqueue.playerlatencypolicy.maximumindividualplayerlatencymilliseconds": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "gamelift.gamesessionqueue.playerlatencypolicy.maximumindividualplayerlatencymilliseconds",
        "UpdateRequires": "No interruption"
    },
    "gamelift.gamesessionqueue.playerlatencypolicy.policydurationseconds": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "gamelift.gamesessionqueue.playerlatencypolicy.policydurationseconds",
        "UpdateRequires": "No interruption"
    },
    "gamelift.matchmakingconfiguration.gameproperty.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "gamelift.matchmakingconfiguration.gameproperty.key": {
        "Maximum": "32",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.matchmakingconfiguration.gameproperty.key",
        "UpdateRequires": "No interruption"
    },
    "gamelift.matchmakingconfiguration.gameproperty.value": {
        "Maximum": "96",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.matchmakingconfiguration.gameproperty.value",
        "UpdateRequires": "No interruption"
    },
    "gamelift.script.s3location.bucket": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.script.s3location.bucket",
        "UpdateRequires": "No interruption"
    },
    "gamelift.script.s3location.cfnproperties": [
        "RoleArn",
        "Bucket",
        "ObjectVersion",
        "Key",
        "UniqueKey"
    ],
    "gamelift.script.s3location.key": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.script.s3location.key",
        "UpdateRequires": "No interruption"
    },
    "gamelift.script.s3location.objectversion": {
        "Minimum": "1",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "gamelift.script.s3location.objectversion",
        "UpdateRequires": "No interruption"
    },
    "gamelift.script.s3location.rolearn": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "gamelift.script.s3location.rolearn",
        "UpdateRequires": "No interruption"
    },
    "glue.classifier.csvclassifier.allowsinglecolumn": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.classifier.csvclassifier.allowsinglecolumn",
        "UpdateRequires": "No interruption"
    },
    "glue.classifier.csvclassifier.cfnproperties": [
        "DisableValueTrimming",
        "AllowSingleColumn",
        "Name",
        "ContainsHeader",
        "Header",
        "Delimiter",
        "QuoteSymbol",
        "UniqueKey"
    ],
    "glue.classifier.csvclassifier.containsheader": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.csvclassifier.containsheader",
        "UpdateRequires": "No interruption"
    },
    "glue.classifier.csvclassifier.delimiter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.csvclassifier.delimiter",
        "UpdateRequires": "No interruption"
    },
    "glue.classifier.csvclassifier.disablevaluetrimming": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.classifier.csvclassifier.disablevaluetrimming",
        "UpdateRequires": "No interruption"
    },
    "glue.classifier.csvclassifier.header": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.classifier.csvclassifier.header",
        "UpdateRequires": "No interruption"
    },
    "glue.classifier.csvclassifier.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.csvclassifier.name",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.csvclassifier.quotesymbol": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.csvclassifier.quotesymbol",
        "UpdateRequires": "No interruption"
    },
    "glue.classifier.grokclassifier.cfnproperties": [
        "GrokPattern",
        "CustomPatterns",
        "Classification",
        "Name",
        "UniqueKey"
    ],
    "glue.classifier.grokclassifier.classification": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.classifier.grokclassifier.classification",
        "UpdateRequires": "No interruption"
    },
    "glue.classifier.grokclassifier.custompatterns": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.grokclassifier.custompatterns",
        "UpdateRequires": "No interruption"
    },
    "glue.classifier.grokclassifier.grokpattern": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.classifier.grokclassifier.grokpattern",
        "UpdateRequires": "No interruption"
    },
    "glue.classifier.grokclassifier.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.grokclassifier.name",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.jsonclassifier.cfnproperties": [
        "JsonPath",
        "Name",
        "UniqueKey",
        "SampleValue"
    ],
    "glue.classifier.jsonclassifier.jsonpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.classifier.jsonclassifier.jsonpath",
        "UpdateRequires": "No interruption"
    },
    "glue.classifier.jsonclassifier.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.jsonclassifier.name",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.xmlclassifier.cfnproperties": [
        "RowTag",
        "Name",
        "Classification",
        "UniqueKey"
    ],
    "glue.classifier.xmlclassifier.classification": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.classifier.xmlclassifier.classification",
        "UpdateRequires": "No interruption"
    },
    "glue.classifier.xmlclassifier.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.classifier.xmlclassifier.name",
        "UpdateRequires": "Replacement"
    },
    "glue.classifier.xmlclassifier.rowtag": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.classifier.xmlclassifier.rowtag",
        "UpdateRequires": "No interruption"
    },
    "glue.connection.connectioninput.cfnproperties": [
        "Name",
        "MatchCriteria",
        "ConnectionType",
        "PhysicalConnectionRequirements",
        "ConnectionProperties",
        "Description",
        "UniqueKey"
    ],
    "glue.connection.connectioninput.connectionproperties": {
        "Required": "Yes",
        "Type": "Json",
        "UniqueKey": "glue.connection.connectioninput.connectionproperties",
        "UpdateRequires": "No interruption"
    },
    "glue.connection.connectioninput.connectiontype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.connection.connectioninput.connectiontype",
        "UpdateRequires": "No interruption"
    },
    "glue.connection.connectioninput.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.connection.connectioninput.description",
        "UpdateRequires": "No interruption"
    },
    "glue.connection.connectioninput.matchcriteria": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.connection.connectioninput.matchcriteria",
        "UpdateRequires": "No interruption"
    },
    "glue.connection.connectioninput.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.connection.connectioninput.name",
        "UpdateRequires": "Replacement"
    },
    "glue.connection.connectioninput.physicalconnectionrequirements": {
        "Required": "No",
        "Type": "PhysicalConnectionRequirements",
        "UniqueKey": "glue.connection.connectioninput.physicalconnectionrequirements",
        "UpdateRequires": "No interruption"
    },
    "glue.connection.physicalconnectionrequirements.availabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.connection.physicalconnectionrequirements.availabilityzone",
        "UpdateRequires": "No interruption"
    },
    "glue.connection.physicalconnectionrequirements.cfnproperties": [
        "SubnetId",
        "AvailabilityZone",
        "SecurityGroupIdList",
        "UniqueKey"
    ],
    "glue.connection.physicalconnectionrequirements.securitygroupidlist": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.connection.physicalconnectionrequirements.securitygroupidlist",
        "UpdateRequires": "No interruption"
    },
    "glue.connection.physicalconnectionrequirements.subnetid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.connection.physicalconnectionrequirements.subnetid",
        "UpdateRequires": "No interruption"
    },
    "glue.crawler.catalogtarget.cfnproperties": [
        "Tables",
        "DatabaseName",
        "UniqueKey",
        "SampleValue"
    ],
    "glue.crawler.catalogtarget.databasename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.catalogtarget.databasename",
        "UpdateRequires": "No interruption"
    },
    "glue.crawler.catalogtarget.tables": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.crawler.catalogtarget.tables",
        "UpdateRequires": "No interruption"
    },
    "glue.crawler.dynamodbtarget.cfnproperties": [
        "Path",
        "UniqueKey"
    ],
    "glue.crawler.dynamodbtarget.path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.dynamodbtarget.path",
        "UpdateRequires": "No interruption"
    },
    "glue.crawler.jdbctarget.cfnproperties": [
        "Path",
        "Exclusions",
        "ConnectionName",
        "UniqueKey"
    ],
    "glue.crawler.jdbctarget.connectionname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.jdbctarget.connectionname",
        "UpdateRequires": "No interruption"
    },
    "glue.crawler.jdbctarget.exclusions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.crawler.jdbctarget.exclusions",
        "UpdateRequires": "No interruption"
    },
    "glue.crawler.jdbctarget.path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.jdbctarget.path",
        "UpdateRequires": "No interruption"
    },
    "glue.crawler.s3target.cfnproperties": [
        "Path",
        "Exclusions",
        "UniqueKey",
        "SampleValue"
    ],
    "glue.crawler.s3target.exclusions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.crawler.s3target.exclusions",
        "UpdateRequires": "No interruption"
    },
    "glue.crawler.s3target.path": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.s3target.path",
        "UpdateRequires": "No interruption"
    },
    "glue.crawler.schedule.cfnproperties": [
        "ScheduleExpression",
        "UniqueKey"
    ],
    "glue.crawler.schedule.scheduleexpression": {
        "Required": "No",
        "SampleValue": "TODO-scheduleexpression",
        "UniqueKey": "glue.crawler.schedule.scheduleexpression",
        "UpdateRequires": "No interruption"
    },
    "glue.crawler.schemachangepolicy.cfnproperties": [
        "DeleteBehavior",
        "UpdateBehavior",
        "UniqueKey",
        "SampleValue"
    ],
    "glue.crawler.schemachangepolicy.deletebehavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.schemachangepolicy.deletebehavior",
        "UpdateRequires": "No interruption"
    },
    "glue.crawler.schemachangepolicy.updatebehavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.crawler.schemachangepolicy.updatebehavior",
        "UpdateRequires": "No interruption"
    },
    "glue.crawler.targets.catalogtargets": {
        "Required": "No",
        "Type": "List of [CatalogTarget",
        "UniqueKey": "glue.crawler.targets.catalogtargets",
        "UpdateRequires": "No interruption"
    },
    "glue.crawler.targets.cfnproperties": [
        "JdbcTargets",
        "S3Targets",
        "DynamoDBTargets",
        "CatalogTargets",
        "UniqueKey"
    ],
    "glue.crawler.targets.dynamodbtargets": {
        "Required": "No",
        "Type": "List of [DynamoDBTarget",
        "UniqueKey": "glue.crawler.targets.dynamodbtargets",
        "UpdateRequires": "No interruption"
    },
    "glue.crawler.targets.jdbctargets": {
        "Required": "No",
        "Type": "List of [JdbcTarget",
        "UniqueKey": "glue.crawler.targets.jdbctargets",
        "UpdateRequires": "No interruption"
    },
    "glue.crawler.targets.s3targets": {
        "Required": "No",
        "Type": "List of [S3Target",
        "UniqueKey": "glue.crawler.targets.s3targets",
        "UpdateRequires": "No interruption"
    },
    "glue.database.databaseinput.cfnproperties": [
        "Parameters",
        "Description",
        "LocationUri",
        "Name",
        "UniqueKey"
    ],
    "glue.database.databaseinput.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.database.databaseinput.description",
        "UpdateRequires": "No interruption"
    },
    "glue.database.databaseinput.locationuri": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.database.databaseinput.locationuri",
        "UpdateRequires": "No interruption"
    },
    "glue.database.databaseinput.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.database.databaseinput.name",
        "UpdateRequires": "Replacement"
    },
    "glue.database.databaseinput.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.database.databaseinput.parameters",
        "UpdateRequires": "No interruption"
    },
    "glue.datacatalogencryptionsettings.connectionpasswordencryption.cfnproperties": [
        "KmsKeyId",
        "ReturnConnectionPasswordEncrypted",
        "UniqueKey",
        "SampleValue"
    ],
    "glue.datacatalogencryptionsettings.connectionpasswordencryption.kmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.datacatalogencryptionsettings.connectionpasswordencryption.kmskeyid",
        "UpdateRequires": "No interruption"
    },
    "glue.datacatalogencryptionsettings.connectionpasswordencryption.returnconnectionpasswordencrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.datacatalogencryptionsettings.connectionpasswordencryption.returnconnectionpasswordencrypted",
        "UpdateRequires": "No interruption"
    },
    "glue.datacatalogencryptionsettings.datacatalogencryptionsettings.cfnproperties": [
        "ConnectionPasswordEncryption",
        "EncryptionAtRest",
        "UniqueKey",
        "SampleValue"
    ],
    "glue.datacatalogencryptionsettings.datacatalogencryptionsettings.connectionpasswordencryption": {
        "Required": "No",
        "Type": "ConnectionPasswordEncryption",
        "UniqueKey": "glue.datacatalogencryptionsettings.datacatalogencryptionsettings.connectionpasswordencryption",
        "UpdateRequires": "No interruption"
    },
    "glue.datacatalogencryptionsettings.datacatalogencryptionsettings.encryptionatrest": {
        "Required": "No",
        "Type": "EncryptionAtRest",
        "UniqueKey": "glue.datacatalogencryptionsettings.datacatalogencryptionsettings.encryptionatrest",
        "UpdateRequires": "No interruption"
    },
    "glue.datacatalogencryptionsettings.encryptionatrest.catalogencryptionmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.datacatalogencryptionsettings.encryptionatrest.catalogencryptionmode",
        "UpdateRequires": "No interruption"
    },
    "glue.datacatalogencryptionsettings.encryptionatrest.cfnproperties": [
        "SseAwsKmsKeyId",
        "CatalogEncryptionMode",
        "UniqueKey",
        "SampleValue"
    ],
    "glue.datacatalogencryptionsettings.encryptionatrest.sseawskmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.datacatalogencryptionsettings.encryptionatrest.sseawskmskeyid",
        "UpdateRequires": "No interruption"
    },
    "glue.job.connectionslist.cfnproperties": [
        "Connections",
        "UniqueKey"
    ],
    "glue.job.connectionslist.connections": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.job.connectionslist.connections",
        "UpdateRequires": "No interruption"
    },
    "glue.job.executionproperty.cfnproperties": [
        "MaxConcurrentRuns",
        "UniqueKey"
    ],
    "glue.job.executionproperty.maxconcurrentruns": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "glue.job.executionproperty.maxconcurrentruns",
        "UpdateRequires": "No interruption"
    },
    "glue.job.jobcommand.cfnproperties": [
        "ScriptLocation",
        "Name",
        "PythonVersion",
        "UniqueKey"
    ],
    "glue.job.jobcommand.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.job.jobcommand.name",
        "UpdateRequires": "No interruption"
    },
    "glue.job.jobcommand.pythonversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.job.jobcommand.pythonversion",
        "UpdateRequires": "No interruption"
    },
    "glue.job.jobcommand.scriptlocation": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.job.jobcommand.scriptlocation",
        "UpdateRequires": "No interruption"
    },
    "glue.job.notificationproperty.cfnproperties": [
        "NotifyDelayAfter",
        "UniqueKey"
    ],
    "glue.job.notificationproperty.notifydelayafter": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.job.notificationproperty.notifydelayafter",
        "UpdateRequires": "No interruption"
    },
    "glue.mltransform.inputrecordtables.cfnproperties": [
        "GlueTables",
        "UniqueKey"
    ],
    "glue.mltransform.inputrecordtables.gluetables": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "glue.mltransform.inputrecordtables.gluetables",
        "UpdateRequires": "No interruption"
    },
    "glue.mltransform.inputrecordtables.gluetables.catalogid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.mltransform.inputrecordtables.gluetables.catalogid",
        "UpdateRequires": "No interruption"
    },
    "glue.mltransform.inputrecordtables.gluetables.cfnproperties": [
        "ConnectionName",
        "TableName",
        "DatabaseName",
        "CatalogId",
        "UniqueKey"
    ],
    "glue.mltransform.inputrecordtables.gluetables.connectionname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.mltransform.inputrecordtables.gluetables.connectionname",
        "UpdateRequires": "No interruption"
    },
    "glue.mltransform.inputrecordtables.gluetables.databasename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.mltransform.inputrecordtables.gluetables.databasename",
        "UpdateRequires": "No interruption"
    },
    "glue.mltransform.inputrecordtables.gluetables.tablename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.mltransform.inputrecordtables.gluetables.tablename",
        "UpdateRequires": "No interruption"
    },
    "glue.mltransform.transformparameters.cfnproperties": [
        "FindMatchesParameters",
        "TransformType",
        "UniqueKey",
        "SampleValue"
    ],
    "glue.mltransform.transformparameters.findmatchesparameters": {
        "Required": "No",
        "Type": "FindMatchesParameters",
        "UniqueKey": "glue.mltransform.transformparameters.findmatchesparameters",
        "UpdateRequires": "No interruption"
    },
    "glue.mltransform.transformparameters.findmatchesparameters.accuracycosttradeoff": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "glue.mltransform.transformparameters.findmatchesparameters.accuracycosttradeoff",
        "UpdateRequires": "No interruption"
    },
    "glue.mltransform.transformparameters.findmatchesparameters.cfnproperties": [
        "PrimaryKeyColumnName",
        "PrecisionRecallTradeoff",
        "EnforceProvidedLabels",
        "AccuracyCostTradeoff",
        "UniqueKey"
    ],
    "glue.mltransform.transformparameters.findmatchesparameters.enforceprovidedlabels": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.mltransform.transformparameters.findmatchesparameters.enforceprovidedlabels",
        "UpdateRequires": "No interruption"
    },
    "glue.mltransform.transformparameters.findmatchesparameters.precisionrecalltradeoff": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "glue.mltransform.transformparameters.findmatchesparameters.precisionrecalltradeoff",
        "UpdateRequires": "No interruption"
    },
    "glue.mltransform.transformparameters.findmatchesparameters.primarykeycolumnname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.mltransform.transformparameters.findmatchesparameters.primarykeycolumnname",
        "UpdateRequires": "Replacement"
    },
    "glue.mltransform.transformparameters.transformtype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.mltransform.transformparameters.transformtype",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.column.cfnproperties": [
        "Comment",
        "Type",
        "Name",
        "UniqueKey"
    ],
    "glue.partition.column.comment": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.column.comment",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.column.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.partition.column.name",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.column.type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.column.type",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.order.cfnproperties": [
        "Column",
        "SortOrder",
        "UniqueKey",
        "SampleValue"
    ],
    "glue.partition.order.column": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.partition.order.column",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.order.sortorder": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.partition.order.sortorder",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.partitioninput.cfnproperties": [
        "Values",
        "StorageDescriptor",
        "Parameters",
        "UniqueKey"
    ],
    "glue.partition.partitioninput.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.partition.partitioninput.parameters",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.partitioninput.storagedescriptor": {
        "Required": "No",
        "Type": "StorageDescriptor",
        "UniqueKey": "glue.partition.partitioninput.storagedescriptor",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.partitioninput.values": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "glue.partition.partitioninput.values",
        "UpdateRequires": "Replacement"
    },
    "glue.partition.serdeinfo.cfnproperties": [
        "SerializationLibrary",
        "Name",
        "Parameters",
        "UniqueKey"
    ],
    "glue.partition.serdeinfo.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.serdeinfo.name",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.serdeinfo.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.partition.serdeinfo.parameters",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.serdeinfo.serializationlibrary": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.serdeinfo.serializationlibrary",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.skewedinfo.cfnproperties": [
        "SkewedColumnNames",
        "SkewedColumnValues",
        "SkewedColumnValueLocationMaps",
        "UniqueKey"
    ],
    "glue.partition.skewedinfo.skewedcolumnnames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.partition.skewedinfo.skewedcolumnnames",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.skewedinfo.skewedcolumnvaluelocationmaps": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.partition.skewedinfo.skewedcolumnvaluelocationmaps",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.skewedinfo.skewedcolumnvalues": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.partition.skewedinfo.skewedcolumnvalues",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.storagedescriptor.bucketcolumns": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.partition.storagedescriptor.bucketcolumns",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.storagedescriptor.cfnproperties": [
        "OutputFormat",
        "Parameters",
        "InputFormat",
        "SerdeInfo",
        "BucketColumns",
        "SkewedInfo",
        "Compressed",
        "NumberOfBuckets",
        "SortColumns",
        "StoredAsSubDirectories",
        "Columns",
        "Location",
        "UniqueKey"
    ],
    "glue.partition.storagedescriptor.columns": {
        "Required": "No",
        "Type": "List of [Column",
        "UniqueKey": "glue.partition.storagedescriptor.columns",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.storagedescriptor.compressed": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.partition.storagedescriptor.compressed",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.storagedescriptor.inputformat": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.storagedescriptor.inputformat",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.storagedescriptor.location": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.storagedescriptor.location",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.storagedescriptor.numberofbuckets": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "glue.partition.storagedescriptor.numberofbuckets",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.storagedescriptor.outputformat": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.partition.storagedescriptor.outputformat",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.storagedescriptor.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.partition.storagedescriptor.parameters",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.storagedescriptor.serdeinfo": {
        "Required": "No",
        "Type": "SerdeInfo",
        "UniqueKey": "glue.partition.storagedescriptor.serdeinfo",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.storagedescriptor.skewedinfo": {
        "Required": "No",
        "Type": "SkewedInfo",
        "UniqueKey": "glue.partition.storagedescriptor.skewedinfo",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.storagedescriptor.sortcolumns": {
        "Required": "No",
        "Type": "List of [Order",
        "UniqueKey": "glue.partition.storagedescriptor.sortcolumns",
        "UpdateRequires": "No interruption"
    },
    "glue.partition.storagedescriptor.storedassubdirectories": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.partition.storagedescriptor.storedassubdirectories",
        "UpdateRequires": "No interruption"
    },
    "glue.securityconfiguration.cloudwatchencryption.cfnproperties": [
        "KmsKeyArn",
        "CloudWatchEncryptionMode",
        "UniqueKey",
        "SampleValue"
    ],
    "glue.securityconfiguration.cloudwatchencryption.cloudwatchencryptionmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.securityconfiguration.cloudwatchencryption.cloudwatchencryptionmode",
        "UpdateRequires": "No interruption"
    },
    "glue.securityconfiguration.cloudwatchencryption.kmskeyarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.securityconfiguration.cloudwatchencryption.kmskeyarn",
        "UpdateRequires": "No interruption"
    },
    "glue.securityconfiguration.encryptionconfiguration.cfnproperties": [
        "JobBookmarksEncryption",
        "CloudWatchEncryption",
        "S3Encryptions",
        "UniqueKey"
    ],
    "glue.securityconfiguration.encryptionconfiguration.cloudwatchencryption": {
        "Required": "No",
        "Type": "CloudWatchEncryption",
        "UniqueKey": "glue.securityconfiguration.encryptionconfiguration.cloudwatchencryption",
        "UpdateRequires": "No interruption"
    },
    "glue.securityconfiguration.encryptionconfiguration.jobbookmarksencryption": {
        "Required": "No",
        "Type": "JobBookmarksEncryption",
        "UniqueKey": "glue.securityconfiguration.encryptionconfiguration.jobbookmarksencryption",
        "UpdateRequires": "No interruption"
    },
    "glue.securityconfiguration.encryptionconfiguration.s3encryptions": {
        "Required": "No",
        "Type": "S3Encryptions",
        "UniqueKey": "glue.securityconfiguration.encryptionconfiguration.s3encryptions",
        "UpdateRequires": "No interruption"
    },
    "glue.securityconfiguration.jobbookmarksencryption.cfnproperties": [
        "KmsKeyArn",
        "JobBookmarksEncryptionMode",
        "UniqueKey",
        "SampleValue"
    ],
    "glue.securityconfiguration.jobbookmarksencryption.jobbookmarksencryptionmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.securityconfiguration.jobbookmarksencryption.jobbookmarksencryptionmode",
        "UpdateRequires": "No interruption"
    },
    "glue.securityconfiguration.jobbookmarksencryption.kmskeyarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.securityconfiguration.jobbookmarksencryption.kmskeyarn",
        "UpdateRequires": "No interruption"
    },
    "glue.securityconfiguration.s3encryption.cfnproperties": [
        "KmsKeyArn",
        "S3EncryptionMode",
        "UniqueKey",
        "SampleValue"
    ],
    "glue.securityconfiguration.s3encryption.kmskeyarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.securityconfiguration.s3encryption.kmskeyarn",
        "UpdateRequires": "No interruption"
    },
    "glue.securityconfiguration.s3encryption.s3encryptionmode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.securityconfiguration.s3encryption.s3encryptionmode",
        "UpdateRequires": "No interruption"
    },
    "glue.table.column.cfnproperties": [
        "Comment",
        "Type",
        "Name",
        "UniqueKey"
    ],
    "glue.table.column.comment": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.column.comment",
        "UpdateRequires": "No interruption"
    },
    "glue.table.column.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.table.column.name",
        "UpdateRequires": "No interruption"
    },
    "glue.table.column.type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.column.type",
        "UpdateRequires": "No interruption"
    },
    "glue.table.order.cfnproperties": [
        "Column",
        "SortOrder",
        "UniqueKey",
        "SampleValue"
    ],
    "glue.table.order.column": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "glue.table.order.column",
        "UpdateRequires": "No interruption"
    },
    "glue.table.order.sortorder": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "glue.table.order.sortorder",
        "UpdateRequires": "No interruption"
    },
    "glue.table.serdeinfo.cfnproperties": [
        "SerializationLibrary",
        "Name",
        "Parameters",
        "UniqueKey"
    ],
    "glue.table.serdeinfo.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.serdeinfo.name",
        "UpdateRequires": "No interruption"
    },
    "glue.table.serdeinfo.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.table.serdeinfo.parameters",
        "UpdateRequires": "No interruption"
    },
    "glue.table.serdeinfo.serializationlibrary": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.serdeinfo.serializationlibrary",
        "UpdateRequires": "No interruption"
    },
    "glue.table.skewedinfo.cfnproperties": [
        "SkewedColumnNames",
        "SkewedColumnValues",
        "SkewedColumnValueLocationMaps",
        "UniqueKey"
    ],
    "glue.table.skewedinfo.skewedcolumnnames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.table.skewedinfo.skewedcolumnnames",
        "UpdateRequires": "No interruption"
    },
    "glue.table.skewedinfo.skewedcolumnvaluelocationmaps": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.table.skewedinfo.skewedcolumnvaluelocationmaps",
        "UpdateRequires": "No interruption"
    },
    "glue.table.skewedinfo.skewedcolumnvalues": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.table.skewedinfo.skewedcolumnvalues",
        "UpdateRequires": "No interruption"
    },
    "glue.table.storagedescriptor.bucketcolumns": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "glue.table.storagedescriptor.bucketcolumns",
        "UpdateRequires": "No interruption"
    },
    "glue.table.storagedescriptor.cfnproperties": [
        "OutputFormat",
        "Parameters",
        "InputFormat",
        "SerdeInfo",
        "BucketColumns",
        "SkewedInfo",
        "Compressed",
        "NumberOfBuckets",
        "SortColumns",
        "StoredAsSubDirectories",
        "Columns",
        "Location",
        "UniqueKey"
    ],
    "glue.table.storagedescriptor.columns": {
        "Required": "No",
        "Type": "List of [Column",
        "UniqueKey": "glue.table.storagedescriptor.columns",
        "UpdateRequires": "No interruption"
    },
    "glue.table.storagedescriptor.compressed": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.table.storagedescriptor.compressed",
        "UpdateRequires": "No interruption"
    },
    "glue.table.storagedescriptor.inputformat": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.storagedescriptor.inputformat",
        "UpdateRequires": "No interruption"
    },
    "glue.table.storagedescriptor.location": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.storagedescriptor.location",
        "UpdateRequires": "No interruption"
    },
    "glue.table.storagedescriptor.numberofbuckets": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.table.storagedescriptor.numberofbuckets",
        "UpdateRequires": "No interruption"
    },
    "glue.table.storagedescriptor.outputformat": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.storagedescriptor.outputformat",
        "UpdateRequires": "No interruption"
    },
    "glue.table.storagedescriptor.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.table.storagedescriptor.parameters",
        "UpdateRequires": "No interruption"
    },
    "glue.table.storagedescriptor.serdeinfo": {
        "Required": "No",
        "Type": "SerdeInfo",
        "UniqueKey": "glue.table.storagedescriptor.serdeinfo",
        "UpdateRequires": "No interruption"
    },
    "glue.table.storagedescriptor.skewedinfo": {
        "Required": "No",
        "Type": "SkewedInfo",
        "UniqueKey": "glue.table.storagedescriptor.skewedinfo",
        "UpdateRequires": "No interruption"
    },
    "glue.table.storagedescriptor.sortcolumns": {
        "Required": "No",
        "Type": "List of [Order",
        "UniqueKey": "glue.table.storagedescriptor.sortcolumns",
        "UpdateRequires": "No interruption"
    },
    "glue.table.storagedescriptor.storedassubdirectories": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "glue.table.storagedescriptor.storedassubdirectories",
        "UpdateRequires": "No interruption"
    },
    "glue.table.tableinput.cfnproperties": [
        "StorageDescriptor",
        "PartitionKeys",
        "Description",
        "Parameters",
        "ViewOriginalText",
        "Owner",
        "ViewExpandedText",
        "Name",
        "TableType",
        "Retention",
        "UniqueKey"
    ],
    "glue.table.tableinput.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableinput.description",
        "UpdateRequires": "No interruption"
    },
    "glue.table.tableinput.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableinput.name",
        "UpdateRequires": "Replacement"
    },
    "glue.table.tableinput.owner": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableinput.owner",
        "UpdateRequires": "No interruption"
    },
    "glue.table.tableinput.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "glue.table.tableinput.parameters",
        "UpdateRequires": "No interruption"
    },
    "glue.table.tableinput.partitionkeys": {
        "Required": "No",
        "Type": "List of [Column",
        "UniqueKey": "glue.table.tableinput.partitionkeys",
        "UpdateRequires": "No interruption"
    },
    "glue.table.tableinput.retention": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.table.tableinput.retention",
        "UpdateRequires": "No interruption"
    },
    "glue.table.tableinput.storagedescriptor": {
        "Required": "No",
        "Type": "StorageDescriptor",
        "UniqueKey": "glue.table.tableinput.storagedescriptor",
        "UpdateRequires": "No interruption"
    },
    "glue.table.tableinput.tabletype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableinput.tabletype",
        "UpdateRequires": "No interruption"
    },
    "glue.table.tableinput.viewexpandedtext": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableinput.viewexpandedtext",
        "UpdateRequires": "No interruption"
    },
    "glue.table.tableinput.vieworiginaltext": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.table.tableinput.vieworiginaltext",
        "UpdateRequires": "No interruption"
    },
    "glue.trigger.action.arguments": {
        "Required": "No",
        "SampleValue": "TODO-arguments",
        "UniqueKey": "glue.trigger.action.arguments",
        "UpdateRequires": "No interruption"
    },
    "glue.trigger.action.cfnproperties": [
        "NotificationProperty",
        "JobName",
        "SecurityConfiguration",
        "CrawlerName",
        "Arguments",
        "Timeout",
        "UniqueKey"
    ],
    "glue.trigger.action.crawlername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.action.crawlername",
        "UpdateRequires": "No interruption"
    },
    "glue.trigger.action.jobname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.action.jobname",
        "UpdateRequires": "No interruption"
    },
    "glue.trigger.action.notificationproperty": {
        "Required": "No",
        "Type": "NotificationProperty",
        "UniqueKey": "glue.trigger.action.notificationproperty",
        "UpdateRequires": "No interruption"
    },
    "glue.trigger.action.securityconfiguration": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.action.securityconfiguration",
        "UpdateRequires": "No interruption"
    },
    "glue.trigger.action.timeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.trigger.action.timeout",
        "UpdateRequires": "No interruption"
    },
    "glue.trigger.condition.cfnproperties": [
        "CrawlerName",
        "State",
        "LogicalOperator",
        "CrawlState",
        "JobName",
        "UniqueKey"
    ],
    "glue.trigger.condition.crawlername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.condition.crawlername",
        "UpdateRequires": "No interruption"
    },
    "glue.trigger.condition.crawlstate": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.condition.crawlstate",
        "UpdateRequires": "No interruption"
    },
    "glue.trigger.condition.jobname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.condition.jobname",
        "UpdateRequires": "No interruption"
    },
    "glue.trigger.condition.logicaloperator": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.condition.logicaloperator",
        "UpdateRequires": "No interruption"
    },
    "glue.trigger.condition.state": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.condition.state",
        "UpdateRequires": "No interruption"
    },
    "glue.trigger.notificationproperty.cfnproperties": [
        "NotifyDelayAfter",
        "UniqueKey"
    ],
    "glue.trigger.notificationproperty.notifydelayafter": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "glue.trigger.notificationproperty.notifydelayafter",
        "UpdateRequires": "No interruption"
    },
    "glue.trigger.predicate.cfnproperties": [
        "Conditions",
        "Logical",
        "UniqueKey",
        "SampleValue"
    ],
    "glue.trigger.predicate.conditions": {
        "Required": "No",
        "Type": "List of [Condition",
        "UniqueKey": "glue.trigger.predicate.conditions",
        "UpdateRequires": "No interruption"
    },
    "glue.trigger.predicate.logical": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "glue.trigger.predicate.logical",
        "UpdateRequires": "No interruption"
    },
    "greengrass.connectordefinition.connector.cfnproperties": [
        "Parameters",
        "Id",
        "ConnectorArn",
        "UniqueKey"
    ],
    "greengrass.connectordefinition.connector.connectorarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.connectordefinition.connector.connectorarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.connectordefinition.connector.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.connectordefinition.connector.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.connectordefinition.connector.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "greengrass.connectordefinition.connector.parameters",
        "UpdateRequires": "Replacement"
    },
    "greengrass.connectordefinition.connectordefinitionversion.cfnproperties": [
        "Connectors",
        "UniqueKey"
    ],
    "greengrass.connectordefinition.connectordefinitionversion.connectors": {
        "Required": "Yes",
        "Type": "List of [Connector",
        "UniqueKey": "greengrass.connectordefinition.connectordefinitionversion.connectors",
        "UpdateRequires": "Replacement"
    },
    "greengrass.connectordefinitionversion.connector.cfnproperties": [
        "Parameters",
        "Id",
        "ConnectorArn",
        "UniqueKey"
    ],
    "greengrass.connectordefinitionversion.connector.connectorarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.connectordefinitionversion.connector.connectorarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.connectordefinitionversion.connector.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.connectordefinitionversion.connector.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.connectordefinitionversion.connector.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "greengrass.connectordefinitionversion.connector.parameters",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinition.core.certificatearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.coredefinition.core.certificatearn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinition.core.cfnproperties": [
        "CertificateArn",
        "ThingArn",
        "SyncShadow",
        "Id",
        "UniqueKey"
    ],
    "greengrass.coredefinition.core.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.coredefinition.core.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinition.core.syncshadow": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.coredefinition.core.syncshadow",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinition.core.thingarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.coredefinition.core.thingarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinition.coredefinitionversion.cfnproperties": [
        "Cores",
        "UniqueKey"
    ],
    "greengrass.coredefinition.coredefinitionversion.cores": {
        "Required": "Yes",
        "Type": "List of [Core",
        "UniqueKey": "greengrass.coredefinition.coredefinitionversion.cores",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinitionversion.core.certificatearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.coredefinitionversion.core.certificatearn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinitionversion.core.cfnproperties": [
        "CertificateArn",
        "ThingArn",
        "SyncShadow",
        "Id",
        "UniqueKey"
    ],
    "greengrass.coredefinitionversion.core.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.coredefinitionversion.core.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinitionversion.core.syncshadow": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.coredefinitionversion.core.syncshadow",
        "UpdateRequires": "Replacement"
    },
    "greengrass.coredefinitionversion.core.thingarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.coredefinitionversion.core.thingarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinition.device.certificatearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.devicedefinition.device.certificatearn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinition.device.cfnproperties": [
        "CertificateArn",
        "ThingArn",
        "SyncShadow",
        "Id",
        "UniqueKey"
    ],
    "greengrass.devicedefinition.device.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.devicedefinition.device.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinition.device.syncshadow": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.devicedefinition.device.syncshadow",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinition.device.thingarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.devicedefinition.device.thingarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinition.devicedefinitionversion.cfnproperties": [
        "Devices",
        "UniqueKey"
    ],
    "greengrass.devicedefinition.devicedefinitionversion.devices": {
        "Required": "Yes",
        "Type": "List of [Device",
        "UniqueKey": "greengrass.devicedefinition.devicedefinitionversion.devices",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinitionversion.device.certificatearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.devicedefinitionversion.device.certificatearn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinitionversion.device.cfnproperties": [
        "CertificateArn",
        "ThingArn",
        "SyncShadow",
        "Id",
        "UniqueKey"
    ],
    "greengrass.devicedefinitionversion.device.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.devicedefinitionversion.device.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinitionversion.device.syncshadow": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.devicedefinitionversion.device.syncshadow",
        "UpdateRequires": "Replacement"
    },
    "greengrass.devicedefinitionversion.device.thingarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.devicedefinitionversion.device.thingarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.defaultconfig.cfnproperties": [
        "Execution",
        "UniqueKey"
    ],
    "greengrass.functiondefinition.defaultconfig.execution": {
        "Required": "Yes",
        "Type": "Execution",
        "UniqueKey": "greengrass.functiondefinition.defaultconfig.execution",
        "UpdateRequires": "No interruption"
    },
    "greengrass.functiondefinition.environment.accesssysfs": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.functiondefinition.environment.accesssysfs",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.environment.cfnproperties": [
        "Execution",
        "ResourceAccessPolicies",
        "AccessSysfs",
        "Variables",
        "UniqueKey"
    ],
    "greengrass.functiondefinition.environment.execution": {
        "Required": "No",
        "Type": "Execution",
        "UniqueKey": "greengrass.functiondefinition.environment.execution",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.environment.resourceaccesspolicies": {
        "Required": "No",
        "Type": "List of [ResourceAccessPolicy",
        "UniqueKey": "greengrass.functiondefinition.environment.resourceaccesspolicies",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.environment.variables": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "greengrass.functiondefinition.environment.variables",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.execution.cfnproperties": [
        "RunAs",
        "IsolationMode",
        "UniqueKey",
        "SampleValue"
    ],
    "greengrass.functiondefinition.execution.isolationmode": {
        "Required": "No",
        "SampleValue": "TODO-isolationmode",
        "UniqueKey": "greengrass.functiondefinition.execution.isolationmode",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.execution.runas": {
        "Required": "No",
        "SampleValue": "TODO-runas",
        "UniqueKey": "greengrass.functiondefinition.execution.runas",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.function.cfnproperties": [
        "FunctionConfiguration",
        "Id",
        "FunctionArn",
        "UniqueKey"
    ],
    "greengrass.functiondefinition.function.functionarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.function.functionarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.function.functionconfiguration": {
        "Required": "Yes",
        "Type": "FunctionConfiguration",
        "UniqueKey": "greengrass.functiondefinition.function.functionconfiguration",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.function.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.function.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functionconfiguration.cfnproperties": [
        "ExecArgs",
        "Executable",
        "MemorySize",
        "Environment",
        "Pinned",
        "Timeout",
        "EncodingType",
        "UniqueKey"
    ],
    "greengrass.functiondefinition.functionconfiguration.encodingtype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.encodingtype",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functionconfiguration.environment": {
        "Required": "No",
        "Type": "Environment",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.environment",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functionconfiguration.execargs": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.execargs",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functionconfiguration.executable": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.executable",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functionconfiguration.memorysize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.memorysize",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functionconfiguration.pinned": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.pinned",
        "UpdateRequires": "No interruption"
    },
    "greengrass.functiondefinition.functionconfiguration.timeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinition.functionconfiguration.timeout",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functiondefinitionversion.cfnproperties": [
        "DefaultConfig",
        "Functions",
        "UniqueKey",
        "SampleValue"
    ],
    "greengrass.functiondefinition.functiondefinitionversion.defaultconfig": {
        "Required": "No",
        "Type": "DefaultConfig",
        "UniqueKey": "greengrass.functiondefinition.functiondefinitionversion.defaultconfig",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.functiondefinitionversion.functions": {
        "Required": "Yes",
        "Type": "List of [Function",
        "UniqueKey": "greengrass.functiondefinition.functiondefinitionversion.functions",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.resourceaccesspolicy.cfnproperties": [
        "ResourceId",
        "Permission",
        "UniqueKey",
        "SampleValue"
    ],
    "greengrass.functiondefinition.resourceaccesspolicy.permission": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.resourceaccesspolicy.permission",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.resourceaccesspolicy.resourceid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinition.resourceaccesspolicy.resourceid",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.runas.cfnproperties": [
        "Gid",
        "Uid",
        "UniqueKey",
        "SampleValue"
    ],
    "greengrass.functiondefinition.runas.gid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinition.runas.gid",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinition.runas.uid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinition.runas.uid",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.defaultconfig.cfnproperties": [
        "Execution",
        "UniqueKey"
    ],
    "greengrass.functiondefinitionversion.defaultconfig.execution": {
        "Required": "Yes",
        "Type": "Execution",
        "UniqueKey": "greengrass.functiondefinitionversion.defaultconfig.execution",
        "UpdateRequires": "No interruption"
    },
    "greengrass.functiondefinitionversion.environment.accesssysfs": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.functiondefinitionversion.environment.accesssysfs",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.environment.cfnproperties": [
        "Execution",
        "ResourceAccessPolicies",
        "AccessSysfs",
        "Variables",
        "UniqueKey"
    ],
    "greengrass.functiondefinitionversion.environment.execution": {
        "Required": "No",
        "Type": "Execution",
        "UniqueKey": "greengrass.functiondefinitionversion.environment.execution",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.environment.resourceaccesspolicies": {
        "Required": "No",
        "Type": "List of [ResourceAccessPolicy",
        "UniqueKey": "greengrass.functiondefinitionversion.environment.resourceaccesspolicies",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.environment.variables": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "greengrass.functiondefinitionversion.environment.variables",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.execution.cfnproperties": [
        "RunAs",
        "IsolationMode",
        "UniqueKey",
        "SampleValue"
    ],
    "greengrass.functiondefinitionversion.execution.isolationmode": {
        "Required": "No",
        "SampleValue": "TODO-isolationmode",
        "UniqueKey": "greengrass.functiondefinitionversion.execution.isolationmode",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.execution.runas": {
        "Required": "No",
        "SampleValue": "TODO-runas",
        "UniqueKey": "greengrass.functiondefinitionversion.execution.runas",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.function.cfnproperties": [
        "FunctionConfiguration",
        "Id",
        "FunctionArn",
        "UniqueKey"
    ],
    "greengrass.functiondefinitionversion.function.functionarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.function.functionarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.function.functionconfiguration": {
        "Required": "Yes",
        "Type": "FunctionConfiguration",
        "UniqueKey": "greengrass.functiondefinitionversion.function.functionconfiguration",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.function.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.function.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.cfnproperties": [
        "ExecArgs",
        "Executable",
        "MemorySize",
        "Environment",
        "Pinned",
        "Timeout",
        "EncodingType",
        "UniqueKey"
    ],
    "greengrass.functiondefinitionversion.functionconfiguration.encodingtype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.encodingtype",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.environment": {
        "Required": "No",
        "Type": "Environment",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.environment",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.execargs": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.execargs",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.executable": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.executable",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.memorysize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.memorysize",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.pinned": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.pinned",
        "UpdateRequires": "No interruption"
    },
    "greengrass.functiondefinitionversion.functionconfiguration.timeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinitionversion.functionconfiguration.timeout",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.resourceaccesspolicy.cfnproperties": [
        "ResourceId",
        "Permission",
        "UniqueKey",
        "SampleValue"
    ],
    "greengrass.functiondefinitionversion.resourceaccesspolicy.permission": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.resourceaccesspolicy.permission",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.resourceaccesspolicy.resourceid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.functiondefinitionversion.resourceaccesspolicy.resourceid",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.runas.cfnproperties": [
        "Gid",
        "Uid",
        "UniqueKey",
        "SampleValue"
    ],
    "greengrass.functiondefinitionversion.runas.gid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinitionversion.runas.gid",
        "UpdateRequires": "Replacement"
    },
    "greengrass.functiondefinitionversion.runas.uid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.functiondefinitionversion.runas.uid",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.cfnproperties": [
        "ResourceDefinitionVersionArn",
        "FunctionDefinitionVersionArn",
        "DeviceDefinitionVersionArn",
        "ConnectorDefinitionVersionArn",
        "CoreDefinitionVersionArn",
        "LoggerDefinitionVersionArn",
        "SubscriptionDefinitionVersionArn",
        "UniqueKey"
    ],
    "greengrass.group.groupversion.connectordefinitionversionarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.connectordefinitionversionarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.coredefinitionversionarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.coredefinitionversionarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.devicedefinitionversionarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.devicedefinitionversionarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.functiondefinitionversionarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.functiondefinitionversionarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.loggerdefinitionversionarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.loggerdefinitionversionarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.resourcedefinitionversionarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.resourcedefinitionversionarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.group.groupversion.subscriptiondefinitionversionarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.group.groupversion.subscriptiondefinitionversionarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinition.logger.cfnproperties": [
        "Type",
        "Space",
        "Component",
        "Id",
        "Level",
        "UniqueKey"
    ],
    "greengrass.loggerdefinition.logger.component": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinition.logger.component",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinition.logger.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinition.logger.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinition.logger.level": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinition.logger.level",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinition.logger.space": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.loggerdefinition.logger.space",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinition.logger.type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinition.logger.type",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinition.loggerdefinitionversion.cfnproperties": [
        "Loggers",
        "UniqueKey"
    ],
    "greengrass.loggerdefinition.loggerdefinitionversion.loggers": {
        "Required": "Yes",
        "Type": "List of [Logger",
        "UniqueKey": "greengrass.loggerdefinition.loggerdefinitionversion.loggers",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinitionversion.logger.cfnproperties": [
        "Type",
        "Space",
        "Component",
        "Id",
        "Level",
        "UniqueKey"
    ],
    "greengrass.loggerdefinitionversion.logger.component": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinitionversion.logger.component",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinitionversion.logger.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinitionversion.logger.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinitionversion.logger.level": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinitionversion.logger.level",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinitionversion.logger.space": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "greengrass.loggerdefinitionversion.logger.space",
        "UpdateRequires": "Replacement"
    },
    "greengrass.loggerdefinitionversion.logger.type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.loggerdefinitionversion.logger.type",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.groupownersetting.autoaddgroupowner": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.resourcedefinition.groupownersetting.autoaddgroupowner",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.groupownersetting.cfnproperties": [
        "GroupOwner",
        "AutoAddGroupOwner",
        "UniqueKey",
        "SampleValue"
    ],
    "greengrass.resourcedefinition.groupownersetting.groupowner": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.groupownersetting.groupowner",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.localdeviceresourcedata.cfnproperties": [
        "SourcePath",
        "GroupOwnerSetting",
        "UniqueKey",
        "SampleValue"
    ],
    "greengrass.resourcedefinition.localdeviceresourcedata.groupownersetting": {
        "Required": "No",
        "Type": "GroupOwnerSetting",
        "UniqueKey": "greengrass.resourcedefinition.localdeviceresourcedata.groupownersetting",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.localdeviceresourcedata.sourcepath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.localdeviceresourcedata.sourcepath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.localvolumeresourcedata.cfnproperties": [
        "SourcePath",
        "DestinationPath",
        "GroupOwnerSetting",
        "UniqueKey"
    ],
    "greengrass.resourcedefinition.localvolumeresourcedata.destinationpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.localvolumeresourcedata.destinationpath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.localvolumeresourcedata.groupownersetting": {
        "Required": "No",
        "Type": "GroupOwnerSetting",
        "UniqueKey": "greengrass.resourcedefinition.localvolumeresourcedata.groupownersetting",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.localvolumeresourcedata.sourcepath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.localvolumeresourcedata.sourcepath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedatacontainer.cfnproperties": [
        "LocalVolumeResourceData",
        "S3MachineLearningModelResourceData",
        "SecretsManagerSecretResourceData",
        "LocalDeviceResourceData",
        "SageMakerMachineLearningModelResourceData",
        "UniqueKey"
    ],
    "greengrass.resourcedefinition.resourcedatacontainer.localdeviceresourcedata": {
        "Required": "No",
        "Type": "LocalDeviceResourceData",
        "UniqueKey": "greengrass.resourcedefinition.resourcedatacontainer.localdeviceresourcedata",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedatacontainer.localvolumeresourcedata": {
        "Required": "No",
        "Type": "LocalVolumeResourceData",
        "UniqueKey": "greengrass.resourcedefinition.resourcedatacontainer.localvolumeresourcedata",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedatacontainer.s3machinelearningmodelresourcedata": {
        "Required": "No",
        "Type": "S3MachineLearningModelResourceData",
        "UniqueKey": "greengrass.resourcedefinition.resourcedatacontainer.s3machinelearningmodelresourcedata",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedatacontainer.sagemakermachinelearningmodelresourcedata": {
        "Required": "No",
        "Type": "SageMakerMachineLearningModelResourceData",
        "UniqueKey": "greengrass.resourcedefinition.resourcedatacontainer.sagemakermachinelearningmodelresourcedata",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedatacontainer.secretsmanagersecretresourcedata": {
        "Required": "No",
        "Type": "SecretsManagerSecretResourceData",
        "UniqueKey": "greengrass.resourcedefinition.resourcedatacontainer.secretsmanagersecretresourcedata",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourcedefinitionversion.cfnproperties": [
        "Resources",
        "UniqueKey"
    ],
    "greengrass.resourcedefinition.resourcedefinitionversion.resources": {
        "Required": "Yes",
        "Type": "List of [ResourceInstance",
        "UniqueKey": "greengrass.resourcedefinition.resourcedefinitionversion.resources",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourceinstance.cfnproperties": [
        "ResourceDataContainer",
        "Id",
        "Name",
        "UniqueKey"
    ],
    "greengrass.resourcedefinition.resourceinstance.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.resourceinstance.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourceinstance.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.resourceinstance.name",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.resourceinstance.resourcedatacontainer": {
        "Required": "Yes",
        "Type": "ResourceDataContainer",
        "UniqueKey": "greengrass.resourcedefinition.resourceinstance.resourcedatacontainer",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.cfnproperties": [
        "DestinationPath",
        "S3Uri",
        "UniqueKey",
        "SampleValue"
    ],
    "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.destinationpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.destinationpath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.s3uri": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.s3machinelearningmodelresourcedata.s3uri",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.cfnproperties": [
        "DestinationPath",
        "SageMakerJobArn",
        "UniqueKey",
        "SampleValue"
    ],
    "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.destinationpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.destinationpath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.sagemakerjobarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.sagemakermachinelearningmodelresourcedata.sagemakerjobarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.secretsmanagersecretresourcedata.additionalstaginglabelstodownload": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "greengrass.resourcedefinition.secretsmanagersecretresourcedata.additionalstaginglabelstodownload",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.secretsmanagersecretresourcedata.arn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinition.secretsmanagersecretresourcedata.arn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinition.secretsmanagersecretresourcedata.cfnproperties": [
        "AdditionalStagingLabelsToDownload",
        "ARN",
        "UniqueKey",
        "SampleValue"
    ],
    "greengrass.resourcedefinitionversion.groupownersetting.autoaddgroupowner": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "greengrass.resourcedefinitionversion.groupownersetting.autoaddgroupowner",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.groupownersetting.cfnproperties": [
        "GroupOwner",
        "AutoAddGroupOwner",
        "UniqueKey",
        "SampleValue"
    ],
    "greengrass.resourcedefinitionversion.groupownersetting.groupowner": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.groupownersetting.groupowner",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.localdeviceresourcedata.cfnproperties": [
        "SourcePath",
        "GroupOwnerSetting",
        "UniqueKey",
        "SampleValue"
    ],
    "greengrass.resourcedefinitionversion.localdeviceresourcedata.groupownersetting": {
        "Required": "No",
        "Type": "GroupOwnerSetting",
        "UniqueKey": "greengrass.resourcedefinitionversion.localdeviceresourcedata.groupownersetting",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.localdeviceresourcedata.sourcepath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.localdeviceresourcedata.sourcepath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.localvolumeresourcedata.cfnproperties": [
        "SourcePath",
        "DestinationPath",
        "GroupOwnerSetting",
        "UniqueKey"
    ],
    "greengrass.resourcedefinitionversion.localvolumeresourcedata.destinationpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.localvolumeresourcedata.destinationpath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.localvolumeresourcedata.groupownersetting": {
        "Required": "No",
        "Type": "GroupOwnerSetting",
        "UniqueKey": "greengrass.resourcedefinitionversion.localvolumeresourcedata.groupownersetting",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.localvolumeresourcedata.sourcepath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.localvolumeresourcedata.sourcepath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourcedatacontainer.cfnproperties": [
        "LocalVolumeResourceData",
        "S3MachineLearningModelResourceData",
        "SecretsManagerSecretResourceData",
        "LocalDeviceResourceData",
        "SageMakerMachineLearningModelResourceData",
        "UniqueKey"
    ],
    "greengrass.resourcedefinitionversion.resourcedatacontainer.localdeviceresourcedata": {
        "Required": "No",
        "Type": "LocalDeviceResourceData",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourcedatacontainer.localdeviceresourcedata",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourcedatacontainer.localvolumeresourcedata": {
        "Required": "No",
        "Type": "LocalVolumeResourceData",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourcedatacontainer.localvolumeresourcedata",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourcedatacontainer.s3machinelearningmodelresourcedata": {
        "Required": "No",
        "Type": "S3MachineLearningModelResourceData",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourcedatacontainer.s3machinelearningmodelresourcedata",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourcedatacontainer.sagemakermachinelearningmodelresourcedata": {
        "Required": "No",
        "Type": "SageMakerMachineLearningModelResourceData",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourcedatacontainer.sagemakermachinelearningmodelresourcedata",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourcedatacontainer.secretsmanagersecretresourcedata": {
        "Required": "No",
        "Type": "SecretsManagerSecretResourceData",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourcedatacontainer.secretsmanagersecretresourcedata",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourceinstance.cfnproperties": [
        "ResourceDataContainer",
        "Id",
        "Name",
        "UniqueKey"
    ],
    "greengrass.resourcedefinitionversion.resourceinstance.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourceinstance.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourceinstance.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourceinstance.name",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.resourceinstance.resourcedatacontainer": {
        "Required": "Yes",
        "Type": "ResourceDataContainer",
        "UniqueKey": "greengrass.resourcedefinitionversion.resourceinstance.resourcedatacontainer",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.cfnproperties": [
        "DestinationPath",
        "S3Uri",
        "UniqueKey",
        "SampleValue"
    ],
    "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.destinationpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.destinationpath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.s3uri": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.s3machinelearningmodelresourcedata.s3uri",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.cfnproperties": [
        "DestinationPath",
        "SageMakerJobArn",
        "UniqueKey",
        "SampleValue"
    ],
    "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.destinationpath": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.destinationpath",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.sagemakerjobarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.sagemakermachinelearningmodelresourcedata.sagemakerjobarn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.secretsmanagersecretresourcedata.additionalstaginglabelstodownload": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "greengrass.resourcedefinitionversion.secretsmanagersecretresourcedata.additionalstaginglabelstodownload",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.secretsmanagersecretresourcedata.arn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.resourcedefinitionversion.secretsmanagersecretresourcedata.arn",
        "UpdateRequires": "Replacement"
    },
    "greengrass.resourcedefinitionversion.secretsmanagersecretresourcedata.cfnproperties": [
        "AdditionalStagingLabelsToDownload",
        "ARN",
        "UniqueKey",
        "SampleValue"
    ],
    "greengrass.subscriptiondefinition.subscription.cfnproperties": [
        "Source",
        "Target",
        "Id",
        "Subject",
        "UniqueKey"
    ],
    "greengrass.subscriptiondefinition.subscription.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinition.subscription.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinition.subscription.source": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinition.subscription.source",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinition.subscription.subject": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinition.subscription.subject",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinition.subscription.target": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinition.subscription.target",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinition.subscriptiondefinitionversion.cfnproperties": [
        "Subscriptions",
        "UniqueKey"
    ],
    "greengrass.subscriptiondefinition.subscriptiondefinitionversion.subscriptions": {
        "Required": "Yes",
        "Type": "List of [Subscription",
        "UniqueKey": "greengrass.subscriptiondefinition.subscriptiondefinitionversion.subscriptions",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinitionversion.subscription.cfnproperties": [
        "Source",
        "Target",
        "Id",
        "Subject",
        "UniqueKey"
    ],
    "greengrass.subscriptiondefinitionversion.subscription.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinitionversion.subscription.id",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinitionversion.subscription.source": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinitionversion.subscription.source",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinitionversion.subscription.subject": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinitionversion.subscription.subject",
        "UpdateRequires": "Replacement"
    },
    "greengrass.subscriptiondefinitionversion.subscription.target": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "greengrass.subscriptiondefinitionversion.subscription.target",
        "UpdateRequires": "Replacement"
    },
    "guardduty.filter.condition.cfnproperties": [
        "Lt",
        "Eq",
        "Gte",
        "Lte",
        "Neq",
        "UniqueKey"
    ],
    "guardduty.filter.condition.eq": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "guardduty.filter.condition.eq",
        "UpdateRequires": "No interruption"
    },
    "guardduty.filter.condition.gte": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "guardduty.filter.condition.gte",
        "UpdateRequires": "No interruption"
    },
    "guardduty.filter.condition.lt": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "guardduty.filter.condition.lt",
        "UpdateRequires": "No interruption"
    },
    "guardduty.filter.condition.lte": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "guardduty.filter.condition.lte",
        "UpdateRequires": "No interruption"
    },
    "guardduty.filter.condition.neq": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "guardduty.filter.condition.neq",
        "UpdateRequires": "No interruption"
    },
    "guardduty.filter.findingcriteria.cfnproperties": [
        "Criterion",
        "ItemType",
        "UniqueKey",
        "SampleValue"
    ],
    "guardduty.filter.findingcriteria.criterion": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "guardduty.filter.findingcriteria.criterion",
        "UpdateRequires": "No interruption"
    },
    "guardduty.filter.findingcriteria.itemtype": {
        "Required": "No",
        "Type": "Condition",
        "UniqueKey": "guardduty.filter.findingcriteria.itemtype",
        "UpdateRequires": "No interruption"
    },
    "iam.accesskey.cfnproperties": [
        "Status",
        "UserName",
        "Serial",
        "UniqueKey"
    ],
    "iam.accesskey.serial": {
        "Required": "No",
        "SampleValue": "TODO-serial",
        "UniqueKey": "iam.accesskey.serial",
        "UpdateRequires": "Replacement"
    },
    "iam.accesskey.status": {
        "Allowed Values": "Active | Inactive",
        "AllowedValues": [
            "Active",
            "Inactive"
        ],
        "Pattern": "^[Active|Inactive]",
        "Required": "No",
        "SampleValue": "Active|Inactive",
        "Type": "String",
        "UniqueKey": "iam.accesskey.status",
        "UpdateRequires": "No interruption"
    },
    "iam.accesskey.username": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\w+=,.@-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iam.accesskey.username",
        "UpdateRequires": "Replacement"
    },
    "iam.addusertogroup.cfnproperties": [
        "GroupName",
        "Users",
        "UniqueKey",
        "SampleValue"
    ],
    "iam.addusertogroup.groupname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\w+=,.@-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iam.addusertogroup.groupname",
        "UpdateRequires": "No interruption"
    },
    "iam.addusertogroup.users": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "iam.addusertogroup.users",
        "UpdateRequires": "No interruption"
    },
    "iam.group.cfnproperties": [
        "GroupName",
        "ManagedPolicyArns",
        "Policies",
        "Path",
        "UniqueKey"
    ],
    "iam.group.groupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iam.group.groupname",
        "UpdateRequires": "Replacement"
    },
    "iam.group.managedpolicyarns": {
        "Required": "No",
        "SampleValue": "TODO-managedpolicyarns",
        "UniqueKey": "iam.group.managedpolicyarns",
        "UpdateRequires": "No interruption"
    },
    "iam.group.path": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)",
        "Required": "No",
        "UniqueKey": "iam.group.path",
        "UpdateRequires": "No interruption"
    },
    "iam.group.policies": {
        "Required": "No",
        "SampleValue": "TODO-policies",
        "UniqueKey": "iam.group.policies",
        "UpdateRequires": "No interruption"
    },
    "iam.policy.1.cfnproperties": [
        "PolicyName",
        "PolicyDocument",
        "UniqueKey",
        "SampleValue"
    ],
    "iam.policy.1.policydocument": {
        "Maximum": "131072",
        "Minimum": "1",
        "Pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
        "Required": "Yes",
        "Type": "Json",
        "UniqueKey": "iam.policy.1.policydocument",
        "UpdateRequires": "No interruption"
    },
    "iam.policy.1.policyname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\w+=,.@-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iam.policy.1.policyname",
        "UpdateRequires": "No interruption"
    },
    "iam.policy.2.cfnproperties": [
        "PolicyName",
        "PolicyDocument",
        "UniqueKey",
        "SampleValue"
    ],
    "iam.policy.2.policydocument": {
        "Maximum": "131072",
        "Minimum": "1",
        "Pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
        "Required": "Yes",
        "Type": "Json",
        "UniqueKey": "iam.policy.2.policydocument",
        "UpdateRequires": "No interruption"
    },
    "iam.policy.2.policyname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\w+=,.@-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iam.policy.2.policyname",
        "UpdateRequires": "No interruption"
    },
    "iam.policy.cfnproperties": [
        "PolicyName",
        "PolicyDocument",
        "UniqueKey",
        "SampleValue"
    ],
    "iam.policy.policydocument": {
        "Maximum": "131072",
        "Minimum": "1",
        "Pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
        "Required": "Yes",
        "Type": "Json",
        "UniqueKey": "iam.policy.policydocument",
        "UpdateRequires": "No interruption"
    },
    "iam.policy.policyname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\w+=,.@-]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iam.policy.policyname",
        "UpdateRequires": "No interruption"
    },
    "iam.user.cfnproperties": [
        "UserName",
        "ManagedPolicyArns",
        "Groups",
        "Tags",
        "LoginProfile",
        "Policies",
        "Path",
        "PermissionsBoundary",
        "UniqueKey"
    ],
    "iam.user.groups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "iam.user.groups",
        "UpdateRequires": "No interruption"
    },
    "iam.user.loginprofile": {
        "Required": "No",
        "SampleValue": "TODO-loginprofile",
        "UniqueKey": "iam.user.loginprofile",
        "UpdateRequires": "No interruption"
    },
    "iam.user.loginprofile.cfnproperties": [
        "PasswordResetRequired",
        "Password",
        "UniqueKey",
        "SampleValue"
    ],
    "iam.user.loginprofile.password": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iam.user.loginprofile.password",
        "UpdateRequires": "No interruption"
    },
    "iam.user.loginprofile.passwordresetrequired": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iam.user.loginprofile.passwordresetrequired",
        "UpdateRequires": "No interruption"
    },
    "iam.user.managedpolicyarns": {
        "Required": "No",
        "SampleValue": "TODO-managedpolicyarns",
        "UniqueKey": "iam.user.managedpolicyarns",
        "UpdateRequires": "No interruption"
    },
    "iam.user.path": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)",
        "Required": "No",
        "UniqueKey": "iam.user.path",
        "UpdateRequires": "No interruption"
    },
    "iam.user.permissionsboundary": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iam.user.permissionsboundary",
        "UpdateRequires": "No interruption"
    },
    "iam.user.policies": {
        "Required": "No",
        "SampleValue": "TODO-policies",
        "UniqueKey": "iam.user.policies",
        "UpdateRequires": "No interruption"
    },
    "iam.user.tags": {
        "Maximum": "50",
        "Required": "No",
        "UniqueKey": "iam.user.tags",
        "UpdateRequires": "No interruption"
    },
    "iam.user.username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iam.user.username",
        "UpdateRequires": "Replacement"
    },
    "iot.thing.attributepayload.attributes": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "iot.thing.attributepayload.attributes",
        "UpdateRequires": "No interruption"
    },
    "iot.thing.attributepayload.cfnproperties": [
        "Attributes",
        "UniqueKey"
    ],
    "iot.topicrule.action.cfnproperties": [
        "DynamoDBv2",
        "Sqs",
        "Kinesis",
        "CloudwatchMetric",
        "DynamoDB",
        "S3",
        "CloudwatchAlarm",
        "Sns",
        "Republish",
        "StepFunctions",
        "Elasticsearch",
        "Firehose",
        "IotAnalytics",
        "Lambda",
        "UniqueKey"
    ],
    "iot.topicrule.action.cloudwatchalarm": {
        "Required": "No",
        "Type": "CloudwatchAlarmAction",
        "UniqueKey": "iot.topicrule.action.cloudwatchalarm",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.action.cloudwatchmetric": {
        "Required": "No",
        "Type": "CloudwatchMetricAction",
        "UniqueKey": "iot.topicrule.action.cloudwatchmetric",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.action.dynamodb": {
        "Required": "No",
        "Type": "DynamoDBAction",
        "UniqueKey": "iot.topicrule.action.dynamodb",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.action.dynamodbv2": {
        "Required": "No",
        "Type": "DynamoDBv2Action",
        "UniqueKey": "iot.topicrule.action.dynamodbv2",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.action.elasticsearch": {
        "Required": "No",
        "Type": "ElasticsearchAction",
        "UniqueKey": "iot.topicrule.action.elasticsearch",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.action.firehose": {
        "Required": "No",
        "Type": "FirehoseAction",
        "UniqueKey": "iot.topicrule.action.firehose",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.action.iotanalytics": {
        "Required": "No",
        "Type": "IotAnalyticsAction",
        "UniqueKey": "iot.topicrule.action.iotanalytics",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.action.kinesis": {
        "Required": "No",
        "Type": "KinesisAction",
        "UniqueKey": "iot.topicrule.action.kinesis",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.action.lambda": {
        "Required": "No",
        "Type": "LambdaAction",
        "UniqueKey": "iot.topicrule.action.lambda",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.action.republish": {
        "Required": "No",
        "Type": "RepublishAction",
        "UniqueKey": "iot.topicrule.action.republish",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.action.s3": {
        "Required": "No",
        "Type": "S3Action",
        "UniqueKey": "iot.topicrule.action.s3",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.action.sns": {
        "Required": "No",
        "Type": "SnsAction",
        "UniqueKey": "iot.topicrule.action.sns",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.action.sqs": {
        "Required": "No",
        "Type": "SqsAction",
        "UniqueKey": "iot.topicrule.action.sqs",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.action.stepfunctions": {
        "Required": "No",
        "Type": "StepFunctionsAction",
        "UniqueKey": "iot.topicrule.action.stepfunctions",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.cloudwatchalarmaction.alarmname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchalarmaction.alarmname",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.cloudwatchalarmaction.cfnproperties": [
        "StateReason",
        "RoleArn",
        "AlarmName",
        "StateValue",
        "UniqueKey"
    ],
    "iot.topicrule.cloudwatchalarmaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchalarmaction.rolearn",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.cloudwatchalarmaction.statereason": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchalarmaction.statereason",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.cloudwatchalarmaction.statevalue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchalarmaction.statevalue",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.cloudwatchmetricaction.cfnproperties": [
        "MetricValue",
        "RoleArn",
        "MetricTimestamp",
        "MetricNamespace",
        "MetricUnit",
        "MetricName",
        "UniqueKey"
    ],
    "iot.topicrule.cloudwatchmetricaction.metricname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchmetricaction.metricname",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.cloudwatchmetricaction.metricnamespace": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchmetricaction.metricnamespace",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.cloudwatchmetricaction.metrictimestamp": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchmetricaction.metrictimestamp",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.cloudwatchmetricaction.metricunit": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchmetricaction.metricunit",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.cloudwatchmetricaction.metricvalue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchmetricaction.metricvalue",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.cloudwatchmetricaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.cloudwatchmetricaction.rolearn",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.dynamodbaction.cfnproperties": [
        "RangeKeyType",
        "PayloadField",
        "HashKeyType",
        "HashKeyField",
        "RoleArn",
        "TableName",
        "HashKeyValue",
        "RangeKeyValue",
        "RangeKeyField",
        "UniqueKey"
    ],
    "iot.topicrule.dynamodbaction.hashkeyfield": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.hashkeyfield",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.dynamodbaction.hashkeytype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.hashkeytype",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.dynamodbaction.hashkeyvalue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.hashkeyvalue",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.dynamodbaction.payloadfield": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.payloadfield",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.dynamodbaction.rangekeyfield": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.rangekeyfield",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.dynamodbaction.rangekeytype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.rangekeytype",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.dynamodbaction.rangekeyvalue": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.rangekeyvalue",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.dynamodbaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.rolearn",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.dynamodbaction.tablename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbaction.tablename",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.dynamodbv2action.cfnproperties": [
        "PutItem",
        "RoleArn",
        "UniqueKey",
        "SampleValue"
    ],
    "iot.topicrule.dynamodbv2action.putitem": {
        "Required": "No",
        "Type": "PutItemInput",
        "UniqueKey": "iot.topicrule.dynamodbv2action.putitem",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.dynamodbv2action.rolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.dynamodbv2action.rolearn",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.elasticsearchaction.cfnproperties": [
        "Index",
        "RoleArn",
        "Endpoint",
        "Type",
        "Id",
        "UniqueKey"
    ],
    "iot.topicrule.elasticsearchaction.endpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.elasticsearchaction.endpoint",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.elasticsearchaction.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.elasticsearchaction.id",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.elasticsearchaction.index": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.elasticsearchaction.index",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.elasticsearchaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.elasticsearchaction.rolearn",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.elasticsearchaction.type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.elasticsearchaction.type",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.firehoseaction.cfnproperties": [
        "RoleArn",
        "DeliveryStreamName",
        "Separator",
        "UniqueKey"
    ],
    "iot.topicrule.firehoseaction.deliverystreamname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.firehoseaction.deliverystreamname",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.firehoseaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.firehoseaction.rolearn",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.firehoseaction.separator": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.firehoseaction.separator",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.iotanalyticsaction.cfnproperties": [
        "RoleArn",
        "ChannelName",
        "UniqueKey",
        "SampleValue"
    ],
    "iot.topicrule.iotanalyticsaction.channelname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.iotanalyticsaction.channelname",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.iotanalyticsaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.iotanalyticsaction.rolearn",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.kinesisaction.cfnproperties": [
        "RoleArn",
        "PartitionKey",
        "StreamName",
        "UniqueKey"
    ],
    "iot.topicrule.kinesisaction.partitionkey": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.kinesisaction.partitionkey",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.kinesisaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.kinesisaction.rolearn",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.kinesisaction.streamname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.kinesisaction.streamname",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.lambdaaction.cfnproperties": [
        "FunctionArn",
        "UniqueKey"
    ],
    "iot.topicrule.lambdaaction.functionarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.lambdaaction.functionarn",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.putiteminput.cfnproperties": [
        "TableName",
        "UniqueKey"
    ],
    "iot.topicrule.putiteminput.tablename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.putiteminput.tablename",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.republishaction.cfnproperties": [
        "Topic",
        "RoleArn",
        "UniqueKey",
        "SampleValue"
    ],
    "iot.topicrule.republishaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.republishaction.rolearn",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.republishaction.topic": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.republishaction.topic",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.s3action.bucketname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.s3action.bucketname",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.s3action.cfnproperties": [
        "RoleArn",
        "BucketName",
        "Key",
        "UniqueKey"
    ],
    "iot.topicrule.s3action.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.s3action.key",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.s3action.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.s3action.rolearn",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.snsaction.cfnproperties": [
        "TargetArn",
        "RoleArn",
        "MessageFormat",
        "UniqueKey"
    ],
    "iot.topicrule.snsaction.messageformat": {
        "Required": "No",
        "SampleValue": "TODO-messageformat",
        "UniqueKey": "iot.topicrule.snsaction.messageformat",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.snsaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.snsaction.rolearn",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.snsaction.targetarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.snsaction.targetarn",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.sqsaction.cfnproperties": [
        "QueueUrl",
        "RoleArn",
        "UseBase64",
        "UniqueKey"
    ],
    "iot.topicrule.sqsaction.queueurl": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.sqsaction.queueurl",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.sqsaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.sqsaction.rolearn",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.sqsaction.usebase64": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iot.topicrule.sqsaction.usebase64",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.stepfunctionsaction.cfnproperties": [
        "ExecutionNamePrefix",
        "RoleArn",
        "StateMachineName",
        "UniqueKey"
    ],
    "iot.topicrule.stepfunctionsaction.executionnameprefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.stepfunctionsaction.executionnameprefix",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.stepfunctionsaction.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.stepfunctionsaction.rolearn",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.stepfunctionsaction.statemachinename": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iot.topicrule.stepfunctionsaction.statemachinename",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.topicrulepayload.actions": {
        "Required": "Yes",
        "Type": "List of [Action",
        "UniqueKey": "iot.topicrule.topicrulepayload.actions",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.topicrulepayload.awsiotsqlversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.topicrulepayload.awsiotsqlversion",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.topicrulepayload.cfnproperties": [
        "Description",
        "Actions",
        "Sql",
        "AwsIotSqlVersion",
        "RuleDisabled",
        "ErrorAction",
        "UniqueKey"
    ],
    "iot.topicrule.topicrulepayload.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot.topicrule.topicrulepayload.description",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.topicrulepayload.erroraction": {
        "Required": "No",
        "Type": "Action",
        "UniqueKey": "iot.topicrule.topicrulepayload.erroraction",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.topicrulepayload.ruledisabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iot.topicrule.topicrulepayload.ruledisabled",
        "UpdateRequires": "No interruption"
    },
    "iot.topicrule.topicrulepayload.sql": {
        "Required": "Yes",
        "SampleValue": "TODO-sql",
        "UniqueKey": "iot.topicrule.topicrulepayload.sql",
        "UpdateRequires": "No interruption"
    },
    "iot1click.project.devicetemplate.callbackoverrides": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "iot1click.project.devicetemplate.callbackoverrides",
        "UpdateRequires": "No interruption"
    },
    "iot1click.project.devicetemplate.cfnproperties": [
        "CallbackOverrides",
        "DeviceType",
        "UniqueKey",
        "SampleValue"
    ],
    "iot1click.project.devicetemplate.devicetype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iot1click.project.devicetemplate.devicetype",
        "UpdateRequires": "No interruption"
    },
    "iot1click.project.placementtemplate.cfnproperties": [
        "DeviceTemplates",
        "DefaultAttributes",
        "UniqueKey",
        "SampleValue"
    ],
    "iot1click.project.placementtemplate.defaultattributes": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "iot1click.project.placementtemplate.defaultattributes",
        "UpdateRequires": "No interruption"
    },
    "iot1click.project.placementtemplate.devicetemplates": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "iot1click.project.placementtemplate.devicetemplates",
        "UpdateRequires": "Replacement"
    },
    "iotanalytics.channel.channelstorage.cfnproperties": [
        "ServiceManagedS3",
        "CustomerManagedS3",
        "UniqueKey",
        "SampleValue"
    ],
    "iotanalytics.channel.channelstorage.customermanageds3": {
        "Required": "No",
        "Type": "CustomerManagedS3",
        "UniqueKey": "iotanalytics.channel.channelstorage.customermanageds3",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.channel.channelstorage.servicemanageds3": {
        "Required": "No",
        "Type": "ServiceManagedS3",
        "UniqueKey": "iotanalytics.channel.channelstorage.servicemanageds3",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.channel.customermanageds3.bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.channel.customermanageds3.bucket",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.channel.customermanageds3.cfnproperties": [
        "KeyPrefix",
        "RoleArn",
        "Bucket",
        "UniqueKey"
    ],
    "iotanalytics.channel.customermanageds3.keyprefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.channel.customermanageds3.keyprefix",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.channel.customermanageds3.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.channel.customermanageds3.rolearn",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.channel.retentionperiod.cfnproperties": [
        "NumberOfDays",
        "Unlimited",
        "UniqueKey",
        "SampleValue"
    ],
    "iotanalytics.channel.retentionperiod.numberofdays": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.channel.retentionperiod.numberofdays",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.channel.retentionperiod.unlimited": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotanalytics.channel.retentionperiod.unlimited",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.action.actionname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.action.actionname",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.action.cfnproperties": [
        "ContainerAction",
        "ActionName",
        "QueryAction",
        "UniqueKey"
    ],
    "iotanalytics.dataset.action.containeraction": {
        "Required": "No",
        "Type": "ContainerAction",
        "UniqueKey": "iotanalytics.dataset.action.containeraction",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.action.queryaction": {
        "Required": "No",
        "Type": "QueryAction",
        "UniqueKey": "iotanalytics.dataset.action.queryaction",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.containeraction.cfnproperties": [
        "Image",
        "ExecutionRoleArn",
        "Variables",
        "ResourceConfiguration",
        "UniqueKey"
    ],
    "iotanalytics.dataset.containeraction.executionrolearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^.{20,2048}$",
        "Required": "Yes",
        "SampleValue": "TODO-iotanalytics.dataset.containeraction.executionrolearn",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.containeraction.executionrolearn",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.containeraction.image": {
        "Maximum": "255",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.containeraction.image",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.containeraction.resourceconfiguration": {
        "Required": "Yes",
        "Type": "ResourceConfiguration",
        "UniqueKey": "iotanalytics.dataset.containeraction.resourceconfiguration",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.containeraction.variables": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of [Variable",
        "UniqueKey": "iotanalytics.dataset.containeraction.variables",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.datasetcontentdeliveryrule.cfnproperties": [
        "Destination",
        "EntryName",
        "UniqueKey",
        "SampleValue"
    ],
    "iotanalytics.dataset.datasetcontentdeliveryrule.destination": {
        "Required": "Yes",
        "Type": "DatasetContentDeliveryRuleDestination",
        "UniqueKey": "iotanalytics.dataset.datasetcontentdeliveryrule.destination",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.datasetcontentdeliveryrule.entryname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.datasetcontentdeliveryrule.entryname",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.datasetcontentdeliveryruledestination.cfnproperties": [
        "IotEventsDestinationConfiguration",
        "S3DestinationConfiguration",
        "UniqueKey",
        "SampleValue"
    ],
    "iotanalytics.dataset.datasetcontentdeliveryruledestination.ioteventsdestinationconfiguration": {
        "Required": "No",
        "Type": "IotEventsDestinationConfiguration",
        "UniqueKey": "iotanalytics.dataset.datasetcontentdeliveryruledestination.ioteventsdestinationconfiguration",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.datasetcontentdeliveryruledestination.s3destinationconfiguration": {
        "Required": "No",
        "Type": "S3DestinationConfiguration",
        "UniqueKey": "iotanalytics.dataset.datasetcontentdeliveryruledestination.s3destinationconfiguration",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.deltatime.cfnproperties": [
        "TimeExpression",
        "OffsetSeconds",
        "UniqueKey",
        "SampleValue"
    ],
    "iotanalytics.dataset.deltatime.offsetseconds": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.dataset.deltatime.offsetseconds",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.deltatime.timeexpression": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.deltatime.timeexpression",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.filter.cfnproperties": [
        "DeltaTime",
        "UniqueKey"
    ],
    "iotanalytics.dataset.filter.deltatime": {
        "Required": "No",
        "Type": "DeltaTime",
        "UniqueKey": "iotanalytics.dataset.filter.deltatime",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.glueconfiguration.cfnproperties": [
        "TableName",
        "DatabaseName",
        "UniqueKey",
        "SampleValue"
    ],
    "iotanalytics.dataset.glueconfiguration.databasename": {
        "Maximum": "150",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.glueconfiguration.databasename",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.glueconfiguration.tablename": {
        "Maximum": "150",
        "Minimum": "1",
        "Pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.glueconfiguration.tablename",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.ioteventsdestinationconfiguration.cfnproperties": [
        "RoleArn",
        "InputName",
        "UniqueKey",
        "SampleValue"
    ],
    "iotanalytics.dataset.ioteventsdestinationconfiguration.inputname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.ioteventsdestinationconfiguration.inputname",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.ioteventsdestinationconfiguration.rolearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^.{20,2048}$",
        "Required": "Yes",
        "SampleValue": "TODO-iotanalytics.dataset.ioteventsdestinationconfiguration.rolearn",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.ioteventsdestinationconfiguration.rolearn",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.queryaction.cfnproperties": [
        "SqlQuery",
        "Filters",
        "UniqueKey",
        "SampleValue"
    ],
    "iotanalytics.dataset.queryaction.filters": {
        "Maximum": "1",
        "Required": "No",
        "Type": "List of [Filter",
        "UniqueKey": "iotanalytics.dataset.queryaction.filters",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.queryaction.sqlquery": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.queryaction.sqlquery",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.resourceconfiguration.cfnproperties": [
        "ComputeType",
        "VolumeSizeInGB",
        "UniqueKey",
        "SampleValue"
    ],
    "iotanalytics.dataset.resourceconfiguration.computetype": {
        "Allowed Values": "ACU_1 | ACU_2",
        "AllowedValues": [
            "ACU_1",
            "ACU_2"
        ],
        "Pattern": "^[ACU_1|ACU_2]",
        "Required": "Yes",
        "SampleValue": "ACU_1|ACU_2",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.resourceconfiguration.computetype",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.resourceconfiguration.volumesizeingb": {
        "Maximum": "50",
        "Minimum": "1",
        "Pattern": "^[1,50]}$",
        "Required": "Yes",
        "SampleValue": "1...50",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.dataset.resourceconfiguration.volumesizeingb",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.retentionperiod.cfnproperties": [
        "NumberOfDays",
        "Unlimited",
        "UniqueKey",
        "SampleValue"
    ],
    "iotanalytics.dataset.retentionperiod.numberofdays": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.dataset.retentionperiod.numberofdays",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.retentionperiod.unlimited": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotanalytics.dataset.retentionperiod.unlimited",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.s3destinationconfiguration.bucket": {
        "Maximum": "255",
        "Minimum": "3",
        "Pattern": "^[a-zA-Z0-9.\\-_]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.s3destinationconfiguration.bucket",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.s3destinationconfiguration.cfnproperties": [
        "GlueConfiguration",
        "Bucket",
        "RoleArn",
        "Key",
        "UniqueKey"
    ],
    "iotanalytics.dataset.s3destinationconfiguration.glueconfiguration": {
        "Required": "No",
        "Type": "GlueConfiguration",
        "UniqueKey": "iotanalytics.dataset.s3destinationconfiguration.glueconfiguration",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.s3destinationconfiguration.key": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9!_.*'()/{}:-]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.s3destinationconfiguration.key",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.s3destinationconfiguration.rolearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^.{20,2048}$",
        "Required": "Yes",
        "SampleValue": "TODO-iotanalytics.dataset.s3destinationconfiguration.rolearn",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.s3destinationconfiguration.rolearn",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.trigger.cfnproperties": [
        "TriggeringDataset",
        "Schedule",
        "UniqueKey",
        "SampleValue"
    ],
    "iotanalytics.dataset.trigger.schedule": {
        "Required": "No",
        "Type": "Schedule",
        "UniqueKey": "iotanalytics.dataset.trigger.schedule",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.trigger.schedule.cfnproperties": [
        "ScheduleExpression",
        "UniqueKey"
    ],
    "iotanalytics.dataset.trigger.schedule.scheduleexpression": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.trigger.schedule.scheduleexpression",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.trigger.triggeringdataset": {
        "Required": "No",
        "Type": "TriggeringDataset",
        "UniqueKey": "iotanalytics.dataset.trigger.triggeringdataset",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.triggeringdataset.cfnproperties": [
        "DatasetName",
        "UniqueKey"
    ],
    "iotanalytics.dataset.triggeringdataset.datasetname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_]+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.triggeringdataset.datasetname",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.variable.cfnproperties": [
        "StringValue",
        "OutputFileUriValue",
        "DoubleValue",
        "DatasetContentVersionValue",
        "VariableName",
        "UniqueKey"
    ],
    "iotanalytics.dataset.variable.datasetcontentversionvalue": {
        "Required": "No",
        "Type": "DatasetContentVersionValue",
        "UniqueKey": "iotanalytics.dataset.variable.datasetcontentversionvalue",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.variable.datasetcontentversionvalue.cfnproperties": [
        "DatasetName",
        "UniqueKey"
    ],
    "iotanalytics.dataset.variable.datasetcontentversionvalue.datasetname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.variable.datasetcontentversionvalue.datasetname",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.variable.doublevalue": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "iotanalytics.dataset.variable.doublevalue",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.variable.outputfileurivalue": {
        "Required": "No",
        "Type": "OutputFileUriValue",
        "UniqueKey": "iotanalytics.dataset.variable.outputfileurivalue",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.variable.outputfileurivalue.cfnproperties": [
        "FileName",
        "UniqueKey"
    ],
    "iotanalytics.dataset.variable.outputfileurivalue.filename": {
        "Pattern": "[\\w\\.-]{1,255}",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.variable.outputfileurivalue.filename",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.variable.stringvalue": {
        "Maximum": "1024",
        "Minimum": "0",
        "Pattern": "^.{0,1024}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.dataset.variable.stringvalue",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.variable.stringvalue",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.variable.variablename": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "Yes",
        "SampleValue": "TODO-iotanalytics.dataset.variable.variablename",
        "Type": "String",
        "UniqueKey": "iotanalytics.dataset.variable.variablename",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.versioningconfiguration.cfnproperties": [
        "MaxVersions",
        "Unlimited",
        "UniqueKey",
        "SampleValue"
    ],
    "iotanalytics.dataset.versioningconfiguration.maxversions": {
        "Maximum": "1000",
        "Minimum": "1",
        "Pattern": "^[1,1000]}$",
        "Required": "No",
        "SampleValue": "1...1000",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.dataset.versioningconfiguration.maxversions",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.dataset.versioningconfiguration.unlimited": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotanalytics.dataset.versioningconfiguration.unlimited",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.datastore.customermanageds3.bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.datastore.customermanageds3.bucket",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.datastore.customermanageds3.cfnproperties": [
        "KeyPrefix",
        "RoleArn",
        "Bucket",
        "UniqueKey"
    ],
    "iotanalytics.datastore.customermanageds3.keyprefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.datastore.customermanageds3.keyprefix",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.datastore.customermanageds3.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotanalytics.datastore.customermanageds3.rolearn",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.datastore.datastorestorage.cfnproperties": [
        "ServiceManagedS3",
        "CustomerManagedS3",
        "UniqueKey",
        "SampleValue"
    ],
    "iotanalytics.datastore.datastorestorage.customermanageds3": {
        "Required": "No",
        "Type": "CustomerManagedS3",
        "UniqueKey": "iotanalytics.datastore.datastorestorage.customermanageds3",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.datastore.datastorestorage.servicemanageds3": {
        "Required": "No",
        "Type": "ServiceManagedS3",
        "UniqueKey": "iotanalytics.datastore.datastorestorage.servicemanageds3",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.datastore.retentionperiod.cfnproperties": [
        "NumberOfDays",
        "Unlimited",
        "UniqueKey",
        "SampleValue"
    ],
    "iotanalytics.datastore.retentionperiod.numberofdays": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.datastore.retentionperiod.numberofdays",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.datastore.retentionperiod.unlimited": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotanalytics.datastore.retentionperiod.unlimited",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.activity.addattributes": {
        "Required": "No",
        "Type": "AddAttributes",
        "UniqueKey": "iotanalytics.pipeline.activity.addattributes",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.activity.cfnproperties": [
        "DeviceRegistryEnrich",
        "SelectAttributes",
        "Filter",
        "DeviceShadowEnrich",
        "Math",
        "AddAttributes",
        "Datastore",
        "RemoveAttributes",
        "Channel",
        "Lambda",
        "UniqueKey"
    ],
    "iotanalytics.pipeline.activity.channel": {
        "Required": "No",
        "Type": "Channel",
        "UniqueKey": "iotanalytics.pipeline.activity.channel",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.activity.datastore": {
        "Required": "No",
        "Type": "Datastore",
        "UniqueKey": "iotanalytics.pipeline.activity.datastore",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.activity.deviceregistryenrich": {
        "Required": "No",
        "Type": "DeviceRegistryEnrich",
        "UniqueKey": "iotanalytics.pipeline.activity.deviceregistryenrich",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.activity.deviceshadowenrich": {
        "Required": "No",
        "Type": "DeviceShadowEnrich",
        "UniqueKey": "iotanalytics.pipeline.activity.deviceshadowenrich",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.activity.filter": {
        "Required": "No",
        "Type": "Filter",
        "UniqueKey": "iotanalytics.pipeline.activity.filter",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.activity.lambda": {
        "Required": "No",
        "Type": "Lambda",
        "UniqueKey": "iotanalytics.pipeline.activity.lambda",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.activity.math": {
        "Required": "No",
        "Type": "Math",
        "UniqueKey": "iotanalytics.pipeline.activity.math",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.activity.removeattributes": {
        "Required": "No",
        "Type": "RemoveAttributes",
        "UniqueKey": "iotanalytics.pipeline.activity.removeattributes",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.activity.selectattributes": {
        "Required": "No",
        "Type": "SelectAttributes",
        "UniqueKey": "iotanalytics.pipeline.activity.selectattributes",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.addattributes.attributes": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "iotanalytics.pipeline.addattributes.attributes",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.addattributes.cfnproperties": [
        "Attributes",
        "Name",
        "Next",
        "UniqueKey"
    ],
    "iotanalytics.pipeline.addattributes.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.addattributes.name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.addattributes.name",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.addattributes.next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.addattributes.next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.addattributes.next",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.channel.cfnproperties": [
        "ChannelName",
        "Name",
        "Next",
        "UniqueKey"
    ],
    "iotanalytics.pipeline.channel.channelname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.channel.channelname",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.channel.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.channel.name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.channel.name",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.channel.next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.channel.next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.channel.next",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.datastore.cfnproperties": [
        "DatastoreName",
        "Name",
        "UniqueKey",
        "SampleValue"
    ],
    "iotanalytics.pipeline.datastore.datastorename": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.datastore.datastorename",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.datastore.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.datastore.name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.datastore.name",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.deviceregistryenrich.attribute": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceregistryenrich.attribute",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceregistryenrich.attribute",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.deviceregistryenrich.cfnproperties": [
        "Attribute",
        "RoleArn",
        "ThingName",
        "Name",
        "Next",
        "UniqueKey"
    ],
    "iotanalytics.pipeline.deviceregistryenrich.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceregistryenrich.name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceregistryenrich.name",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.deviceregistryenrich.next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceregistryenrich.next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceregistryenrich.next",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.deviceregistryenrich.rolearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^.{20,2048}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceregistryenrich.rolearn",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceregistryenrich.rolearn",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.deviceregistryenrich.thingname": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceregistryenrich.thingname",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceregistryenrich.thingname",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.deviceshadowenrich.attribute": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceshadowenrich.attribute",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceshadowenrich.attribute",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.deviceshadowenrich.cfnproperties": [
        "Attribute",
        "RoleArn",
        "ThingName",
        "Name",
        "Next",
        "UniqueKey"
    ],
    "iotanalytics.pipeline.deviceshadowenrich.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceshadowenrich.name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceshadowenrich.name",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.deviceshadowenrich.next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceshadowenrich.next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceshadowenrich.next",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.deviceshadowenrich.rolearn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "^.{20,2048}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceshadowenrich.rolearn",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceshadowenrich.rolearn",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.deviceshadowenrich.thingname": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.deviceshadowenrich.thingname",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.deviceshadowenrich.thingname",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.filter.cfnproperties": [
        "Filter",
        "Name",
        "Next",
        "UniqueKey"
    ],
    "iotanalytics.pipeline.filter.filter": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.filter.filter",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.filter.filter",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.filter.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.filter.name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.filter.name",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.filter.next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.filter.next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.filter.next",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.lambda.batchsize": {
        "Maximum": "1000",
        "Minimum": "1",
        "Pattern": "^[1,1000]}$",
        "Required": "No",
        "SampleValue": "1...1000",
        "Type": "Integer",
        "UniqueKey": "iotanalytics.pipeline.lambda.batchsize",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.lambda.cfnproperties": [
        "BatchSize",
        "Next",
        "LambdaName",
        "Name",
        "UniqueKey"
    ],
    "iotanalytics.pipeline.lambda.lambdaname": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z0-9_-]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.lambda.lambdaname",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.lambda.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.lambda.name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.lambda.name",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.lambda.next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.lambda.next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.lambda.next",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.math.attribute": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.math.attribute",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.math.attribute",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.math.cfnproperties": [
        "Attribute",
        "Name",
        "Math",
        "Next",
        "UniqueKey"
    ],
    "iotanalytics.pipeline.math.math": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.math.math",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.math.math",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.math.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.math.name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.math.name",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.math.next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.math.next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.math.next",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.removeattributes.attributes": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "iotanalytics.pipeline.removeattributes.attributes",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.removeattributes.cfnproperties": [
        "Attributes",
        "Name",
        "Next",
        "UniqueKey"
    ],
    "iotanalytics.pipeline.removeattributes.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.removeattributes.name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.removeattributes.name",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.removeattributes.next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.removeattributes.next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.removeattributes.next",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.selectattributes.attributes": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "iotanalytics.pipeline.selectattributes.attributes",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.selectattributes.cfnproperties": [
        "Attributes",
        "Name",
        "Next",
        "UniqueKey"
    ],
    "iotanalytics.pipeline.selectattributes.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.selectattributes.name",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.selectattributes.name",
        "UpdateRequires": "No interruption"
    },
    "iotanalytics.pipeline.selectattributes.next": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotanalytics.pipeline.selectattributes.next",
        "Type": "String",
        "UniqueKey": "iotanalytics.pipeline.selectattributes.next",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.action.cfnproperties": [
        "SetTimer",
        "ResetTimer",
        "Sqs",
        "SetVariable",
        "ClearTimer",
        "IotTopicPublish",
        "Sns",
        "IotEvents",
        "Firehose",
        "Lambda",
        "UniqueKey"
    ],
    "iotevents.detectormodel.action.cleartimer": {
        "Required": "No",
        "Type": "ClearTimer",
        "UniqueKey": "iotevents.detectormodel.action.cleartimer",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.action.firehose": {
        "Required": "No",
        "Type": "Firehose",
        "UniqueKey": "iotevents.detectormodel.action.firehose",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.action.iotevents": {
        "Required": "No",
        "Type": "IotEvents",
        "UniqueKey": "iotevents.detectormodel.action.iotevents",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.action.iottopicpublish": {
        "Required": "No",
        "Type": "IotTopicPublish",
        "UniqueKey": "iotevents.detectormodel.action.iottopicpublish",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.action.lambda": {
        "Required": "No",
        "Type": "Lambda",
        "UniqueKey": "iotevents.detectormodel.action.lambda",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.action.resettimer": {
        "Required": "No",
        "Type": "ResetTimer",
        "UniqueKey": "iotevents.detectormodel.action.resettimer",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.action.settimer": {
        "Required": "No",
        "Type": "SetTimer",
        "UniqueKey": "iotevents.detectormodel.action.settimer",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.action.setvariable": {
        "Required": "No",
        "Type": "SetVariable",
        "UniqueKey": "iotevents.detectormodel.action.setvariable",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.action.sns": {
        "Required": "No",
        "Type": "Sns",
        "UniqueKey": "iotevents.detectormodel.action.sns",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.action.sqs": {
        "Required": "No",
        "Type": "Sqs",
        "UniqueKey": "iotevents.detectormodel.action.sqs",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.cleartimer.cfnproperties": [
        "TimerName",
        "UniqueKey"
    ],
    "iotevents.detectormodel.cleartimer.timername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.cleartimer.timername",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.detectormodeldefinition.cfnproperties": [
        "States",
        "InitialStateName",
        "UniqueKey",
        "SampleValue"
    ],
    "iotevents.detectormodel.detectormodeldefinition.initialstatename": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.detectormodeldefinition.initialstatename",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.detectormodeldefinition.initialstatename",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.detectormodeldefinition.states": {
        "Required": "No",
        "Type": "List of [State",
        "UniqueKey": "iotevents.detectormodel.detectormodeldefinition.states",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.event.actions": {
        "Required": "No",
        "Type": "List of [Action",
        "UniqueKey": "iotevents.detectormodel.event.actions",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.event.cfnproperties": [
        "EventName",
        "Condition",
        "Actions",
        "UniqueKey"
    ],
    "iotevents.detectormodel.event.condition": {
        "Maximum": "512",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.event.condition",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.event.eventname": {
        "Maximum": "128",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.event.eventname",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.firehose.cfnproperties": [
        "DeliveryStreamName",
        "Separator",
        "UniqueKey",
        "SampleValue"
    ],
    "iotevents.detectormodel.firehose.deliverystreamname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.firehose.deliverystreamname",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.firehose.separator": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.firehose.separator",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.iotevents.cfnproperties": [
        "InputName",
        "UniqueKey"
    ],
    "iotevents.detectormodel.iotevents.inputname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.iotevents.inputname",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.iottopicpublish.cfnproperties": [
        "MqttTopic",
        "UniqueKey"
    ],
    "iotevents.detectormodel.iottopicpublish.mqtttopic": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.iottopicpublish.mqtttopic",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.lambda.cfnproperties": [
        "FunctionArn",
        "UniqueKey"
    ],
    "iotevents.detectormodel.lambda.functionarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.lambda.functionarn",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.onenter.cfnproperties": [
        "Events",
        "UniqueKey"
    ],
    "iotevents.detectormodel.onenter.events": {
        "Required": "No",
        "Type": "List of [Event",
        "UniqueKey": "iotevents.detectormodel.onenter.events",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.onexit.cfnproperties": [
        "Events",
        "UniqueKey"
    ],
    "iotevents.detectormodel.onexit.events": {
        "Required": "No",
        "Type": "List of [Event",
        "UniqueKey": "iotevents.detectormodel.onexit.events",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.oninput.cfnproperties": [
        "TransitionEvents",
        "Events",
        "UniqueKey",
        "SampleValue"
    ],
    "iotevents.detectormodel.oninput.events": {
        "Required": "No",
        "Type": "List of [Event",
        "UniqueKey": "iotevents.detectormodel.oninput.events",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.oninput.transitionevents": {
        "Required": "No",
        "Type": "List of [TransitionEvent",
        "UniqueKey": "iotevents.detectormodel.oninput.transitionevents",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.resettimer.cfnproperties": [
        "TimerName",
        "UniqueKey"
    ],
    "iotevents.detectormodel.resettimer.timername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.resettimer.timername",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.settimer.cfnproperties": [
        "Seconds",
        "TimerName",
        "UniqueKey",
        "SampleValue"
    ],
    "iotevents.detectormodel.settimer.seconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "iotevents.detectormodel.settimer.seconds",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.settimer.timername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.settimer.timername",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.setvariable.cfnproperties": [
        "VariableName",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "iotevents.detectormodel.setvariable.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.setvariable.value",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.setvariable.variablename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.setvariable.variablename",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.sns.cfnproperties": [
        "TargetArn",
        "UniqueKey"
    ],
    "iotevents.detectormodel.sns.targetarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.sns.targetarn",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.sqs.cfnproperties": [
        "QueueUrl",
        "UseBase64",
        "UniqueKey",
        "SampleValue"
    ],
    "iotevents.detectormodel.sqs.queueurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.sqs.queueurl",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.sqs.usebase64": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "iotevents.detectormodel.sqs.usebase64",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.state.cfnproperties": [
        "OnInput",
        "StateName",
        "OnEnter",
        "OnExit",
        "UniqueKey"
    ],
    "iotevents.detectormodel.state.onenter": {
        "Required": "No",
        "Type": "OnEnter",
        "UniqueKey": "iotevents.detectormodel.state.onenter",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.state.onexit": {
        "Required": "No",
        "Type": "OnExit",
        "UniqueKey": "iotevents.detectormodel.state.onexit",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.state.oninput": {
        "Required": "No",
        "Type": "OnInput",
        "UniqueKey": "iotevents.detectormodel.state.oninput",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.state.statename": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.state.statename",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.state.statename",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.transitionevent.actions": {
        "Required": "No",
        "Type": "List of [Action",
        "UniqueKey": "iotevents.detectormodel.transitionevent.actions",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.transitionevent.cfnproperties": [
        "EventName",
        "Condition",
        "Actions",
        "NextState",
        "UniqueKey"
    ],
    "iotevents.detectormodel.transitionevent.condition": {
        "Maximum": "512",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.transitionevent.condition",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.transitionevent.eventname": {
        "Maximum": "128",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.transitionevent.eventname",
        "UpdateRequires": "No interruption"
    },
    "iotevents.detectormodel.transitionevent.nextstate": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-iotevents.detectormodel.transitionevent.nextstate",
        "Type": "String",
        "UniqueKey": "iotevents.detectormodel.transitionevent.nextstate",
        "UpdateRequires": "No interruption"
    },
    "iotevents.input.attribute.cfnproperties": [
        "JsonPath",
        "UniqueKey"
    ],
    "iotevents.input.attribute.jsonpath": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^((`[\\w\\- ]+`)|([\\w\\-]+))(\\.((`[\\w- ]+`)|([\\w\\-]+)))*$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "iotevents.input.attribute.jsonpath",
        "UpdateRequires": "No interruption"
    },
    "iotevents.input.inputdefinition.attributes": {
        "Maximum": "200",
        "Required": "No",
        "Type": "List of [Attribute",
        "UniqueKey": "iotevents.input.inputdefinition.attributes",
        "UpdateRequires": "No interruption"
    },
    "iotevents.input.inputdefinition.cfnproperties": [
        "Attributes",
        "UniqueKey"
    ],
    "iotthingsgraph.flowtemplate.definitiondocument.cfnproperties": [
        "Text",
        "Language",
        "UniqueKey",
        "SampleValue"
    ],
    "iotthingsgraph.flowtemplate.definitiondocument.language": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotthingsgraph.flowtemplate.definitiondocument.language",
        "UpdateRequires": "No interruption"
    },
    "iotthingsgraph.flowtemplate.definitiondocument.text": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "iotthingsgraph.flowtemplate.definitiondocument.text",
        "UpdateRequires": "No interruption"
    },
    "kinesis.stream.streamencryption.cfnproperties": [
        "KeyId",
        "EncryptionType",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesis.stream.streamencryption.encryptiontype": {
        "Allowed Values": "KMS | NONE",
        "AllowedValues": [
            "KMS",
            "NONE"
        ],
        "Pattern": "^[KMS|NONE]",
        "Required": "Yes",
        "SampleValue": "KMS|NONE",
        "Type": "String",
        "UniqueKey": "kinesis.stream.streamencryption.encryptiontype",
        "UpdateRequires": "No interruption"
    },
    "kinesis.stream.streamencryption.keyid": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesis.stream.streamencryption.keyid",
        "Type": "String",
        "UniqueKey": "kinesis.stream.streamencryption.keyid",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.csvmappingparameters.cfnproperties": [
        "RecordColumnDelimiter",
        "RecordRowDelimiter",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalytics.application.csvmappingparameters.recordcolumndelimiter": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.csvmappingparameters.recordcolumndelimiter",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.csvmappingparameters.recordrowdelimiter": {
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "kinesisanalytics.application.csvmappingparameters.recordrowdelimiter",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.input.cfnproperties": [
        "KinesisFirehoseInput",
        "KinesisStreamsInput",
        "InputProcessingConfiguration",
        "NamePrefix",
        "InputParallelism",
        "InputSchema",
        "UniqueKey"
    ],
    "kinesisanalytics.application.input.inputparallelism": {
        "Required": "No",
        "Type": "InputParallelism",
        "UniqueKey": "kinesisanalytics.application.input.inputparallelism",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.input.inputprocessingconfiguration": {
        "Required": "No",
        "Type": "InputProcessingConfiguration",
        "UniqueKey": "kinesisanalytics.application.input.inputprocessingconfiguration",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.input.inputschema": {
        "Required": "Yes",
        "Type": "InputSchema",
        "UniqueKey": "kinesisanalytics.application.input.inputschema",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.input.kinesisfirehoseinput": {
        "Required": "Conditional",
        "Type": "KinesisFirehoseInput",
        "UniqueKey": "kinesisanalytics.application.input.kinesisfirehoseinput",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.input.kinesisstreamsinput": {
        "Required": "Conditional",
        "Type": "KinesisStreamsInput",
        "UniqueKey": "kinesisanalytics.application.input.kinesisstreamsinput",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.input.nameprefix": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "^.{1,32}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesisanalytics.application.input.nameprefix",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.input.nameprefix",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.inputlambdaprocessor.cfnproperties": [
        "ResourceARN",
        "RoleARN",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalytics.application.inputlambdaprocessor.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.inputlambdaprocessor.resourcearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.inputlambdaprocessor.rolearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.inputlambdaprocessor.rolearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.inputparallelism.cfnproperties": [
        "Count",
        "UniqueKey"
    ],
    "kinesisanalytics.application.inputparallelism.count": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^[1,64]}$",
        "Required": "No",
        "SampleValue": "1...64",
        "Type": "Integer",
        "UniqueKey": "kinesisanalytics.application.inputparallelism.count",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.inputprocessingconfiguration.cfnproperties": [
        "InputLambdaProcessor",
        "UniqueKey"
    ],
    "kinesisanalytics.application.inputprocessingconfiguration.inputlambdaprocessor": {
        "Required": "No",
        "Type": "InputLambdaProcessor",
        "UniqueKey": "kinesisanalytics.application.inputprocessingconfiguration.inputlambdaprocessor",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.inputschema.cfnproperties": [
        "RecordColumns",
        "RecordFormat",
        "RecordEncoding",
        "UniqueKey"
    ],
    "kinesisanalytics.application.inputschema.recordcolumns": {
        "Maximum": "1000",
        "Required": "Yes",
        "Type": "List of [RecordColumn",
        "UniqueKey": "kinesisanalytics.application.inputschema.recordcolumns",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.inputschema.recordencoding": {
        "Pattern": "UTF-8",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.inputschema.recordencoding",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.inputschema.recordformat": {
        "Required": "Yes",
        "Type": "RecordFormat",
        "UniqueKey": "kinesisanalytics.application.inputschema.recordformat",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.jsonmappingparameters.cfnproperties": [
        "RecordRowPath",
        "UniqueKey"
    ],
    "kinesisanalytics.application.jsonmappingparameters.recordrowpath": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.jsonmappingparameters.recordrowpath",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.kinesisfirehoseinput.cfnproperties": [
        "ResourceARN",
        "RoleARN",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalytics.application.kinesisfirehoseinput.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.kinesisfirehoseinput.resourcearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.kinesisfirehoseinput.rolearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.kinesisfirehoseinput.rolearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.kinesisstreamsinput.cfnproperties": [
        "ResourceARN",
        "RoleARN",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalytics.application.kinesisstreamsinput.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.kinesisstreamsinput.resourcearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.kinesisstreamsinput.rolearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.kinesisstreamsinput.rolearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.mappingparameters.cfnproperties": [
        "JSONMappingParameters",
        "CSVMappingParameters",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalytics.application.mappingparameters.csvmappingparameters": {
        "Required": "No",
        "Type": "CSVMappingParameters",
        "UniqueKey": "kinesisanalytics.application.mappingparameters.csvmappingparameters",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.mappingparameters.jsonmappingparameters": {
        "Required": "No",
        "Type": "JSONMappingParameters",
        "UniqueKey": "kinesisanalytics.application.mappingparameters.jsonmappingparameters",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.recordcolumn.cfnproperties": [
        "SqlType",
        "Mapping",
        "Name",
        "UniqueKey"
    ],
    "kinesisanalytics.application.recordcolumn.mapping": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.recordcolumn.mapping",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.recordcolumn.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.recordcolumn.name",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.recordcolumn.sqltype": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.recordcolumn.sqltype",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.recordformat.cfnproperties": [
        "MappingParameters",
        "RecordFormatType",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalytics.application.recordformat.mappingparameters": {
        "Required": "No",
        "Type": "MappingParameters",
        "UniqueKey": "kinesisanalytics.application.recordformat.mappingparameters",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.application.recordformat.recordformattype": {
        "Allowed Values": "CSV | JSON",
        "AllowedValues": [
            "CSV",
            "JSON"
        ],
        "Pattern": "^[CSV|JSON]",
        "Required": "Yes",
        "SampleValue": "CSV|JSON",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.application.recordformat.recordformattype",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationoutput.destinationschema.cfnproperties": [
        "RecordFormatType",
        "UniqueKey"
    ],
    "kinesisanalytics.applicationoutput.destinationschema.recordformattype": {
        "Allowed Values": "CSV | JSON",
        "AllowedValues": [
            "CSV",
            "JSON"
        ],
        "Pattern": "^[CSV|JSON]",
        "Required": "No",
        "SampleValue": "CSV|JSON",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.destinationschema.recordformattype",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationoutput.kinesisfirehoseoutput.cfnproperties": [
        "ResourceARN",
        "RoleARN",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalytics.applicationoutput.kinesisfirehoseoutput.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.kinesisfirehoseoutput.resourcearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationoutput.kinesisfirehoseoutput.rolearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.kinesisfirehoseoutput.rolearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationoutput.kinesisstreamsoutput.cfnproperties": [
        "ResourceARN",
        "RoleARN",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalytics.applicationoutput.kinesisstreamsoutput.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.kinesisstreamsoutput.resourcearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationoutput.kinesisstreamsoutput.rolearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.kinesisstreamsoutput.rolearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationoutput.lambdaoutput.cfnproperties": [
        "ResourceARN",
        "RoleARN",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalytics.applicationoutput.lambdaoutput.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.lambdaoutput.resourcearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationoutput.lambdaoutput.rolearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.lambdaoutput.rolearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationoutput.output.cfnproperties": [
        "DestinationSchema",
        "KinesisStreamsOutput",
        "KinesisFirehoseOutput",
        "Name",
        "LambdaOutput",
        "UniqueKey"
    ],
    "kinesisanalytics.applicationoutput.output.destinationschema": {
        "Required": "Yes",
        "Type": "DestinationSchema",
        "UniqueKey": "kinesisanalytics.applicationoutput.output.destinationschema",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationoutput.output.kinesisfirehoseoutput": {
        "Required": "No",
        "Type": "KinesisFirehoseOutput",
        "UniqueKey": "kinesisanalytics.applicationoutput.output.kinesisfirehoseoutput",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationoutput.output.kinesisstreamsoutput": {
        "Required": "No",
        "Type": "KinesisStreamsOutput",
        "UniqueKey": "kinesisanalytics.applicationoutput.output.kinesisstreamsoutput",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationoutput.output.lambdaoutput": {
        "Required": "No",
        "Type": "LambdaOutput",
        "UniqueKey": "kinesisanalytics.applicationoutput.output.lambdaoutput",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationoutput.output.name": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "^.{1,32}$",
        "Required": "No",
        "SampleValue": "TODO-kinesisanalytics.applicationoutput.output.name",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationoutput.output.name",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalytics.applicationreferencedatasource.csvmappingparameters.cfnproperties": [
        "RecordColumnDelimiter",
        "RecordRowDelimiter",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalytics.applicationreferencedatasource.csvmappingparameters.recordcolumndelimiter": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.csvmappingparameters.recordcolumndelimiter",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationreferencedatasource.csvmappingparameters.recordrowdelimiter": {
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.csvmappingparameters.recordrowdelimiter",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationreferencedatasource.jsonmappingparameters.cfnproperties": [
        "RecordRowPath",
        "UniqueKey"
    ],
    "kinesisanalytics.applicationreferencedatasource.jsonmappingparameters.recordrowpath": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.jsonmappingparameters.recordrowpath",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationreferencedatasource.mappingparameters.cfnproperties": [
        "JSONMappingParameters",
        "CSVMappingParameters",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalytics.applicationreferencedatasource.mappingparameters.csvmappingparameters": {
        "Required": "No",
        "Type": "CSVMappingParameters",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.mappingparameters.csvmappingparameters",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationreferencedatasource.mappingparameters.jsonmappingparameters": {
        "Required": "No",
        "Type": "JSONMappingParameters",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.mappingparameters.jsonmappingparameters",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationreferencedatasource.recordcolumn.cfnproperties": [
        "SqlType",
        "Mapping",
        "Name",
        "UniqueKey"
    ],
    "kinesisanalytics.applicationreferencedatasource.recordcolumn.mapping": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.recordcolumn.mapping",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationreferencedatasource.recordcolumn.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.recordcolumn.name",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationreferencedatasource.recordcolumn.sqltype": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.recordcolumn.sqltype",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationreferencedatasource.recordformat.cfnproperties": [
        "MappingParameters",
        "RecordFormatType",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalytics.applicationreferencedatasource.recordformat.mappingparameters": {
        "Required": "No",
        "Type": "MappingParameters",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.recordformat.mappingparameters",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationreferencedatasource.recordformat.recordformattype": {
        "Allowed Values": "CSV | JSON",
        "AllowedValues": [
            "CSV",
            "JSON"
        ],
        "Pattern": "^[CSV|JSON]",
        "Required": "Yes",
        "SampleValue": "CSV|JSON",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.recordformat.recordformattype",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationreferencedatasource.referencedatasource.cfnproperties": [
        "TableName",
        "ReferenceSchema",
        "S3ReferenceDataSource",
        "UniqueKey"
    ],
    "kinesisanalytics.applicationreferencedatasource.referencedatasource.referenceschema": {
        "Required": "Yes",
        "Type": "ReferenceSchema",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.referencedatasource.referenceschema",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationreferencedatasource.referencedatasource.s3referencedatasource": {
        "Required": "No",
        "Type": "S3ReferenceDataSource",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.referencedatasource.s3referencedatasource",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationreferencedatasource.referencedatasource.tablename": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "^.{1,32}$",
        "Required": "No",
        "SampleValue": "TODO-kinesisanalytics.applicationreferencedatasource.referencedatasource.tablename",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.referencedatasource.tablename",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationreferencedatasource.referenceschema.cfnproperties": [
        "RecordColumns",
        "RecordFormat",
        "RecordEncoding",
        "UniqueKey"
    ],
    "kinesisanalytics.applicationreferencedatasource.referenceschema.recordcolumns": {
        "Required": "Yes",
        "Type": "List of [RecordColumn",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.referenceschema.recordcolumns",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationreferencedatasource.referenceschema.recordencoding": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.referenceschema.recordencoding",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationreferencedatasource.referenceschema.recordformat": {
        "Required": "Yes",
        "Type": "RecordFormat",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.referenceschema.recordformat",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.bucketarn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.bucketarn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.cfnproperties": [
        "FileKey",
        "ReferenceRoleARN",
        "BucketARN",
        "UniqueKey"
    ],
    "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.filekey": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesisanalytics.applicationreferencedatasource.s3referencedatasource.filekey",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.filekey",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.referencerolearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalytics.applicationreferencedatasource.s3referencedatasource.referencerolearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.applicationcodeconfiguration.cfnproperties": [
        "CodeContentType",
        "CodeContent",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalyticsv2.application.applicationcodeconfiguration.codecontent": {
        "Required": "Yes",
        "Type": "CodeContent",
        "UniqueKey": "kinesisanalyticsv2.application.applicationcodeconfiguration.codecontent",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.applicationcodeconfiguration.codecontenttype": {
        "Allowed Values": "PLAINTEXT | ZIPFILE",
        "AllowedValues": [
            "PLAINTEXT",
            "ZIPFILE"
        ],
        "Pattern": "^[PLAINTEXT|ZIPFILE]",
        "Required": "Yes",
        "SampleValue": "PLAINTEXT|ZIPFILE",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.applicationcodeconfiguration.codecontenttype",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.applicationconfiguration.applicationcodeconfiguration": {
        "Required": "Conditional",
        "Type": "ApplicationCodeConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.applicationconfiguration.applicationcodeconfiguration",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.applicationconfiguration.applicationsnapshotconfiguration": {
        "Required": "No",
        "Type": "ApplicationSnapshotConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.applicationconfiguration.applicationsnapshotconfiguration",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.applicationconfiguration.cfnproperties": [
        "ApplicationSnapshotConfiguration",
        "FlinkApplicationConfiguration",
        "ApplicationCodeConfiguration",
        "SqlApplicationConfiguration",
        "EnvironmentProperties",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.application.applicationconfiguration.environmentproperties": {
        "Required": "No",
        "Type": "EnvironmentProperties",
        "UniqueKey": "kinesisanalyticsv2.application.applicationconfiguration.environmentproperties",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.applicationconfiguration.flinkapplicationconfiguration": {
        "Required": "No",
        "Type": "FlinkApplicationConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.applicationconfiguration.flinkapplicationconfiguration",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.applicationconfiguration.sqlapplicationconfiguration": {
        "Required": "No",
        "Type": "SqlApplicationConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.applicationconfiguration.sqlapplicationconfiguration",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.applicationsnapshotconfiguration.cfnproperties": [
        "SnapshotsEnabled",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.application.applicationsnapshotconfiguration.snapshotsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisanalyticsv2.application.applicationsnapshotconfiguration.snapshotsenabled",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.checkpointconfiguration.cfnproperties": [
        "MinPauseBetweenCheckpoints",
        "CheckpointingEnabled",
        "CheckpointInterval",
        "ConfigurationType",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.application.checkpointconfiguration.checkpointingenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisanalyticsv2.application.checkpointconfiguration.checkpointingenabled",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.checkpointconfiguration.checkpointinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisanalyticsv2.application.checkpointconfiguration.checkpointinterval",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.checkpointconfiguration.configurationtype": {
        "AllowedValues": [
            "CUSTOM",
            "DEFAULT"
        ],
        "Pattern": "^[CUSTOM|DEFAULT]",
        "Required": "Yes",
        "SampleValue": "CUSTOM|DEFAULT",
        "UniqueKey": "kinesisanalyticsv2.application.checkpointconfiguration.configurationtype",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.checkpointconfiguration.minpausebetweencheckpoints": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisanalyticsv2.application.checkpointconfiguration.minpausebetweencheckpoints",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.codecontent.cfnproperties": [
        "S3ContentLocation",
        "TextContent",
        "ZipFileContent",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.application.codecontent.s3contentlocation": {
        "Required": "No",
        "Type": "S3ContentLocation",
        "UniqueKey": "kinesisanalyticsv2.application.codecontent.s3contentlocation",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.codecontent.textcontent": {
        "Maximum": "102400",
        "Minimum": "0",
        "Pattern": "^.{0,102400}$",
        "Required": "No",
        "SampleValue": "TODO-kinesisanalyticsv2.application.codecontent.textcontent",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.codecontent.textcontent",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.codecontent.zipfilecontent": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.codecontent.zipfilecontent",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.csvmappingparameters.cfnproperties": [
        "RecordColumnDelimiter",
        "RecordRowDelimiter",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalyticsv2.application.csvmappingparameters.recordcolumndelimiter": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.csvmappingparameters.recordcolumndelimiter",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.csvmappingparameters.recordrowdelimiter": {
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "kinesisanalyticsv2.application.csvmappingparameters.recordrowdelimiter",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.environmentproperties": [
        "PropertyGroups",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.application.environmentproperties.cfnproperties": [
        "PropertyGroups",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.application.environmentproperties.propertygroups": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of [PropertyGroup",
        "UniqueKey": "kinesisanalyticsv2.application.environmentproperties.propertygroups",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.flinkapplicationconfiguration.cfnproperties": [
        "ParallelismConfiguration",
        "CheckpointConfiguration",
        "MonitoringConfiguration",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.application.flinkapplicationconfiguration.checkpointconfiguration": {
        "Required": "No",
        "Type": "CheckpointConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.flinkapplicationconfiguration.checkpointconfiguration",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.flinkapplicationconfiguration.monitoringconfiguration": {
        "Required": "No",
        "Type": "MonitoringConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.flinkapplicationconfiguration.monitoringconfiguration",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.flinkapplicationconfiguration.parallelismconfiguration": {
        "Required": "No",
        "Type": "ParallelismConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.flinkapplicationconfiguration.parallelismconfiguration",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.input.cfnproperties": [
        "KinesisFirehoseInput",
        "KinesisStreamsInput",
        "InputProcessingConfiguration",
        "NamePrefix",
        "InputParallelism",
        "InputSchema",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.application.input.inputparallelism": {
        "Required": "No",
        "Type": "InputParallelism",
        "UniqueKey": "kinesisanalyticsv2.application.input.inputparallelism",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.input.inputprocessingconfiguration": {
        "Required": "No",
        "Type": "InputProcessingConfiguration",
        "UniqueKey": "kinesisanalyticsv2.application.input.inputprocessingconfiguration",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.input.inputschema": {
        "Required": "Yes",
        "Type": "InputSchema",
        "UniqueKey": "kinesisanalyticsv2.application.input.inputschema",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.input.kinesisfirehoseinput": {
        "Required": "No",
        "Type": "KinesisFirehoseInput",
        "UniqueKey": "kinesisanalyticsv2.application.input.kinesisfirehoseinput",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.input.kinesisstreamsinput": {
        "Required": "No",
        "Type": "KinesisStreamsInput",
        "UniqueKey": "kinesisanalyticsv2.application.input.kinesisstreamsinput",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.input.nameprefix": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "^.{1,32}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesisanalyticsv2.application.input.nameprefix",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.input.nameprefix",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.inputlambdaprocessor.cfnproperties": [
        "ResourceARN",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.application.inputlambdaprocessor.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.inputlambdaprocessor.resourcearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.inputparallelism.cfnproperties": [
        "Count",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.application.inputparallelism.count": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^[1,64]}$",
        "Required": "No",
        "SampleValue": "1...64",
        "Type": "Integer",
        "UniqueKey": "kinesisanalyticsv2.application.inputparallelism.count",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.inputprocessingconfiguration.cfnproperties": [
        "InputLambdaProcessor",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.application.inputprocessingconfiguration.inputlambdaprocessor": {
        "Required": "No",
        "Type": "InputLambdaProcessor",
        "UniqueKey": "kinesisanalyticsv2.application.inputprocessingconfiguration.inputlambdaprocessor",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.inputschema.cfnproperties": [
        "RecordColumns",
        "RecordFormat",
        "RecordEncoding",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.application.inputschema.recordcolumns": {
        "Maximum": "1000",
        "Required": "Yes",
        "Type": "List of [RecordColumn",
        "UniqueKey": "kinesisanalyticsv2.application.inputschema.recordcolumns",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.inputschema.recordencoding": {
        "Pattern": "UTF-8",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.inputschema.recordencoding",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.inputschema.recordformat": {
        "Required": "Yes",
        "Type": "RecordFormat",
        "UniqueKey": "kinesisanalyticsv2.application.inputschema.recordformat",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.jsonmappingparameters.cfnproperties": [
        "RecordRowPath",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.application.jsonmappingparameters.recordrowpath": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.jsonmappingparameters.recordrowpath",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.kinesisfirehoseinput.cfnproperties": [
        "ResourceARN",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.application.kinesisfirehoseinput.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.kinesisfirehoseinput.resourcearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.kinesisstreamsinput.cfnproperties": [
        "ResourceARN",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.application.kinesisstreamsinput.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.kinesisstreamsinput.resourcearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.mappingparameters.cfnproperties": [
        "JSONMappingParameters",
        "CSVMappingParameters",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalyticsv2.application.mappingparameters.csvmappingparameters": {
        "Required": "No",
        "Type": "CSVMappingParameters",
        "UniqueKey": "kinesisanalyticsv2.application.mappingparameters.csvmappingparameters",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.mappingparameters.jsonmappingparameters": {
        "Required": "No",
        "Type": "JSONMappingParameters",
        "UniqueKey": "kinesisanalyticsv2.application.mappingparameters.jsonmappingparameters",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.monitoringconfiguration.cfnproperties": [
        "LogLevel",
        "MetricsLevel",
        "ConfigurationType",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.application.monitoringconfiguration.configurationtype": {
        "Allowed Values": "CUSTOM | DEFAULT",
        "AllowedValues": [
            "CUSTOM",
            "DEFAULT"
        ],
        "Pattern": "^[CUSTOM|DEFAULT]",
        "Required": "Yes",
        "SampleValue": "CUSTOM|DEFAULT",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.monitoringconfiguration.configurationtype",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.monitoringconfiguration.loglevel": {
        "Allowed Values": "DEBUG | ERROR | INFO | WARN",
        "AllowedValues": [
            "DEBUG",
            "ERROR",
            "INFO",
            "WARN"
        ],
        "Pattern": "^[DEBUG|ERROR|INFO|WARN]",
        "Required": "No",
        "SampleValue": "DEBUG|ERROR|INFO|WARN",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.monitoringconfiguration.loglevel",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.monitoringconfiguration.metricslevel": {
        "Allowed Values": "APPLICATION | OPERATOR | PARALLELISM | TASK",
        "AllowedValues": [
            "APPLICATION",
            "OPERATOR",
            "PARALLELISM",
            "TASK"
        ],
        "Pattern": "^[APPLICATION|OPERATOR|PARALLELISM|TASK]",
        "Required": "No",
        "SampleValue": "APPLICATION|OPERATOR|PARALLELISM|TASK",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.monitoringconfiguration.metricslevel",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.parallelismconfiguration.autoscalingenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisanalyticsv2.application.parallelismconfiguration.autoscalingenabled",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.parallelismconfiguration.cfnproperties": [
        "AutoScalingEnabled",
        "Parallelism",
        "ParallelismPerKPU",
        "ConfigurationType",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.application.parallelismconfiguration.configurationtype": {
        "Allowed Values": "CUSTOM | DEFAULT",
        "AllowedValues": [
            "CUSTOM",
            "DEFAULT"
        ],
        "Pattern": "^[CUSTOM|DEFAULT]",
        "Required": "Yes",
        "SampleValue": "CUSTOM|DEFAULT",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.parallelismconfiguration.configurationtype",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.parallelismconfiguration.parallelism": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisanalyticsv2.application.parallelismconfiguration.parallelism",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.parallelismconfiguration.parallelismperkpu": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisanalyticsv2.application.parallelismconfiguration.parallelismperkpu",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.propertygroup.cfnproperties": [
        "PropertyGroupId",
        "PropertyMap",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalyticsv2.application.propertygroup.propertygroupid": {
        "Maximum": "50",
        "Minimum": "1",
        "Pattern": "[a-zA-Z0-9_.-]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.propertygroup.propertygroupid",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.propertygroup.propertymap": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "kinesisanalyticsv2.application.propertygroup.propertymap",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.recordcolumn.cfnproperties": [
        "SqlType",
        "Mapping",
        "Name",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.application.recordcolumn.mapping": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.recordcolumn.mapping",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.recordcolumn.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.recordcolumn.name",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.recordcolumn.sqltype": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.recordcolumn.sqltype",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.recordformat.cfnproperties": [
        "MappingParameters",
        "RecordFormatType",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalyticsv2.application.recordformat.mappingparameters": {
        "Required": "No",
        "Type": "MappingParameters",
        "UniqueKey": "kinesisanalyticsv2.application.recordformat.mappingparameters",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.recordformat.recordformattype": {
        "Allowed Values": "CSV | JSON",
        "AllowedValues": [
            "CSV",
            "JSON"
        ],
        "Pattern": "^[CSV|JSON]",
        "Required": "Yes",
        "SampleValue": "CSV|JSON",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.recordformat.recordformattype",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.s3contentlocation.bucketarn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.s3contentlocation.bucketarn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.s3contentlocation.cfnproperties": [
        "FileKey",
        "BucketARN",
        "ObjectVersion",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.application.s3contentlocation.filekey": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-kinesisanalyticsv2.application.s3contentlocation.filekey",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.s3contentlocation.filekey",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.s3contentlocation.objectversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.application.s3contentlocation.objectversion",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.application.sqlapplicationconfiguration.cfnproperties": [
        "Inputs",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.application.sqlapplicationconfiguration.inputs": {
        "Required": "No",
        "Type": "List of [Input",
        "UniqueKey": "kinesisanalyticsv2.application.sqlapplicationconfiguration.inputs",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationcloudwatchloggingoption.cloudwatchloggingoption.cfnproperties": [
        "LogStreamARN",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.applicationcloudwatchloggingoption.cloudwatchloggingoption.logstreamarn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationcloudwatchloggingoption.cloudwatchloggingoption.logstreamarn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationoutput.destinationschema.cfnproperties": [
        "RecordFormatType",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.applicationoutput.destinationschema.recordformattype": {
        "Allowed Values": "CSV | JSON",
        "AllowedValues": [
            "CSV",
            "JSON"
        ],
        "Pattern": "^[CSV|JSON]",
        "Required": "No",
        "SampleValue": "CSV|JSON",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.destinationschema.recordformattype",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationoutput.kinesisfirehoseoutput.cfnproperties": [
        "ResourceARN",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.applicationoutput.kinesisfirehoseoutput.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.kinesisfirehoseoutput.resourcearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationoutput.kinesisstreamsoutput.cfnproperties": [
        "ResourceARN",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.applicationoutput.kinesisstreamsoutput.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.kinesisstreamsoutput.resourcearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationoutput.lambdaoutput.cfnproperties": [
        "ResourceARN",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.applicationoutput.lambdaoutput.resourcearn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.lambdaoutput.resourcearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationoutput.output.cfnproperties": [
        "DestinationSchema",
        "KinesisStreamsOutput",
        "KinesisFirehoseOutput",
        "Name",
        "LambdaOutput",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.applicationoutput.output.destinationschema": {
        "Required": "Yes",
        "Type": "DestinationSchema",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.output.destinationschema",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationoutput.output.kinesisfirehoseoutput": {
        "Required": "No",
        "Type": "KinesisFirehoseOutput",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.output.kinesisfirehoseoutput",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationoutput.output.kinesisstreamsoutput": {
        "Required": "No",
        "Type": "KinesisStreamsOutput",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.output.kinesisstreamsoutput",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationoutput.output.lambdaoutput": {
        "Required": "No",
        "Type": "LambdaOutput",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.output.lambdaoutput",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationoutput.output.name": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "^.{1,32}$",
        "Required": "No",
        "SampleValue": "TODO-kinesisanalyticsv2.applicationoutput.output.name",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationoutput.output.name",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.csvmappingparameters.cfnproperties": [
        "RecordColumnDelimiter",
        "RecordRowDelimiter",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalyticsv2.applicationreferencedatasource.csvmappingparameters.recordcolumndelimiter": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.csvmappingparameters.recordcolumndelimiter",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.csvmappingparameters.recordrowdelimiter": {
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.csvmappingparameters.recordrowdelimiter",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.jsonmappingparameters.cfnproperties": [
        "RecordRowPath",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.applicationreferencedatasource.jsonmappingparameters.recordrowpath": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.jsonmappingparameters.recordrowpath",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.mappingparameters.cfnproperties": [
        "JSONMappingParameters",
        "CSVMappingParameters",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalyticsv2.applicationreferencedatasource.mappingparameters.csvmappingparameters": {
        "Required": "No",
        "Type": "CSVMappingParameters",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.mappingparameters.csvmappingparameters",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.mappingparameters.jsonmappingparameters": {
        "Required": "No",
        "Type": "JSONMappingParameters",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.mappingparameters.jsonmappingparameters",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.cfnproperties": [
        "SqlType",
        "Mapping",
        "Name",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.mapping": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.mapping",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.name": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.name",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.sqltype": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.recordcolumn.sqltype",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.recordformat.cfnproperties": [
        "MappingParameters",
        "RecordFormatType",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalyticsv2.applicationreferencedatasource.recordformat.mappingparameters": {
        "Required": "No",
        "Type": "MappingParameters",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.recordformat.mappingparameters",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.recordformat.recordformattype": {
        "Allowed Values": "CSV | JSON",
        "AllowedValues": [
            "CSV",
            "JSON"
        ],
        "Pattern": "^[CSV|JSON]",
        "Required": "Yes",
        "SampleValue": "CSV|JSON",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.recordformat.recordformattype",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.cfnproperties": [
        "TableName",
        "ReferenceSchema",
        "S3ReferenceDataSource",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.referenceschema": {
        "Required": "Yes",
        "Type": "ReferenceSchema",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.referenceschema",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.s3referencedatasource": {
        "Required": "No",
        "Type": "S3ReferenceDataSource",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.s3referencedatasource",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.tablename": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "^.{1,32}$",
        "Required": "No",
        "SampleValue": "TODO-kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.tablename",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.referencedatasource.tablename",
        "UpdateRequires": "Replacement"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.cfnproperties": [
        "RecordColumns",
        "RecordFormat",
        "RecordEncoding",
        "UniqueKey"
    ],
    "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.recordcolumns": {
        "Maximum": "1000",
        "Required": "Yes",
        "Type": "List of [RecordColumn",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.recordcolumns",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.recordencoding": {
        "Pattern": "UTF-8",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.recordencoding",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.recordformat": {
        "Required": "Yes",
        "Type": "RecordFormat",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.referenceschema.recordformat",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.s3referencedatasource.bucketarn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.s3referencedatasource.bucketarn",
        "UpdateRequires": "No interruption"
    },
    "kinesisanalyticsv2.applicationreferencedatasource.s3referencedatasource.cfnproperties": [
        "FileKey",
        "BucketARN",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisanalyticsv2.applicationreferencedatasource.s3referencedatasource.filekey": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesisanalyticsv2.applicationreferencedatasource.s3referencedatasource.filekey",
        "Type": "String",
        "UniqueKey": "kinesisanalyticsv2.applicationreferencedatasource.s3referencedatasource.filekey",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.bufferinghints.cfnproperties": [
        "IntervalInSeconds",
        "SizeInMBs",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisfirehose.deliverystream.bufferinghints.intervalinseconds": {
        "Maximum": "900",
        "Minimum": "60",
        "Required": "Yes",
        "UniqueKey": "kinesisfirehose.deliverystream.bufferinghints.intervalinseconds",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.bufferinghints.sizeinmbs": {
        "Maximum": "128",
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "kinesisfirehose.deliverystream.bufferinghints.sizeinmbs",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.cloudwatchloggingoptions.cfnproperties": [
        "Enabled",
        "LogStreamName",
        "LogGroupName",
        "UniqueKey"
    ],
    "kinesisfirehose.deliverystream.cloudwatchloggingoptions.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.cloudwatchloggingoptions.enabled",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.cloudwatchloggingoptions.loggroupname": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.cloudwatchloggingoptions.loggroupname",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.cloudwatchloggingoptions.logstreamname": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.cloudwatchloggingoptions.logstreamname",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.copycommand.cfnproperties": [
        "DataTableName",
        "CopyOptions",
        "DataTableColumns",
        "UniqueKey"
    ],
    "kinesisfirehose.deliverystream.copycommand.copyoptions": {
        "Required": "No",
        "SampleValue": "TODO-copyoptions",
        "UniqueKey": "kinesisfirehose.deliverystream.copycommand.copyoptions",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.copycommand.datatablecolumns": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.copycommand.datatablecolumns",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.copycommand.datatablename": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.copycommand.datatablename",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.dataformatconversionconfiguration.cfnproperties": [
        "OutputFormatConfiguration",
        "SchemaConfiguration",
        "Enabled",
        "InputFormatConfiguration",
        "UniqueKey"
    ],
    "kinesisfirehose.deliverystream.dataformatconversionconfiguration.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.dataformatconversionconfiguration.enabled",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.dataformatconversionconfiguration.inputformatconfiguration": {
        "Required": "Yes",
        "Type": "InputFormatConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.dataformatconversionconfiguration.inputformatconfiguration",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.dataformatconversionconfiguration.outputformatconfiguration": {
        "Required": "Yes",
        "Type": "OutputFormatConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.dataformatconversionconfiguration.outputformatconfiguration",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.dataformatconversionconfiguration.schemaconfiguration": {
        "Required": "Yes",
        "Type": "SchemaConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.dataformatconversionconfiguration.schemaconfiguration",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.deserializer.cfnproperties": [
        "HiveJsonSerDe",
        "OpenXJsonSerDe",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisfirehose.deliverystream.deserializer.hivejsonserde": {
        "Required": "No",
        "Type": "HiveJsonSerDe",
        "UniqueKey": "kinesisfirehose.deliverystream.deserializer.hivejsonserde",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.deserializer.openxjsonserde": {
        "Required": "No",
        "Type": "OpenXJsonSerDe",
        "UniqueKey": "kinesisfirehose.deliverystream.deserializer.openxjsonserde",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.elasticsearchbufferinghints.cfnproperties": [
        "IntervalInSeconds",
        "SizeInMBs",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisfirehose.deliverystream.elasticsearchbufferinghints.intervalinseconds": {
        "Maximum": "900",
        "Minimum": "60",
        "Required": "Yes",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchbufferinghints.intervalinseconds",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.elasticsearchbufferinghints.sizeinmbs": {
        "Maximum": "100",
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchbufferinghints.sizeinmbs",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.bufferinghints": {
        "Required": "Yes",
        "Type": "ElasticsearchBufferingHints",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.bufferinghints",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.cfnproperties": [
        "S3Configuration",
        "IndexName",
        "RetryOptions",
        "RoleARN",
        "BufferingHints",
        "TypeName",
        "S3BackupMode",
        "CloudWatchLoggingOptions",
        "DomainARN",
        "IndexRotationPeriod",
        "ProcessingConfiguration",
        "UniqueKey"
    ],
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.cloudwatchloggingoptions": {
        "Required": "No",
        "Type": "CloudWatchLoggingOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.cloudwatchloggingoptions",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.domainarn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.domainarn",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.indexname": {
        "Maximum": "80",
        "Minimum": "1",
        "Pattern": "^.{1,80}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.indexname",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.indexname",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.indexrotationperiod": {
        "AllowedValues": [
            "NoRotation",
            "OneDay",
            "OneHour",
            "OneMonth",
            "OneWeek"
        ],
        "Pattern": "^[NoRotation|OneDay|OneHour|OneMonth|OneWeek]",
        "Required": "Yes",
        "SampleValue": "NoRotation|OneDay|OneHour|OneMonth|OneWeek",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.indexrotationperiod",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.processingconfiguration": {
        "Required": "No",
        "Type": "ProcessingConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.processingconfiguration",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.retryoptions": {
        "Required": "Yes",
        "Type": "ElasticsearchRetryOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.retryoptions",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.rolearn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.rolearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.s3backupmode": {
        "AllowedValues": [
            "AllDocuments",
            "FailedDocumentsOnly"
        ],
        "Pattern": "^[AllDocuments|FailedDocumentsOnly]",
        "Required": "Yes",
        "SampleValue": "AllDocuments|FailedDocumentsOnly",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.s3backupmode",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.s3configuration": {
        "Required": "Yes",
        "Type": "S3DestinationConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.s3configuration",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.typename": {
        "Maximum": "100",
        "Minimum": "0",
        "Pattern": "^.{0,100}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.typename",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchdestinationconfiguration.typename",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.elasticsearchretryoptions.cfnproperties": [
        "DurationInSeconds",
        "UniqueKey"
    ],
    "kinesisfirehose.deliverystream.elasticsearchretryoptions.durationinseconds": {
        "Maximum": "7200",
        "Minimum": "0",
        "Required": "Yes",
        "UniqueKey": "kinesisfirehose.deliverystream.elasticsearchretryoptions.durationinseconds",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.encryptionconfiguration.cfnproperties": [
        "KMSEncryptionConfig",
        "NoEncryptionConfig",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisfirehose.deliverystream.encryptionconfiguration.kmsencryptionconfig": {
        "Required": "No",
        "Type": "KMSEncryptionConfig",
        "UniqueKey": "kinesisfirehose.deliverystream.encryptionconfiguration.kmsencryptionconfig",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.encryptionconfiguration.noencryptionconfig": {
        "AllowedValues": [
            "NoEncryption"
        ],
        "Pattern": "^[NoEncryption]",
        "Required": "No",
        "SampleValue": "NoEncryption",
        "UniqueKey": "kinesisfirehose.deliverystream.encryptionconfiguration.noencryptionconfig",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.bucketarn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.bucketarn",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.bufferinghints": {
        "Required": "Yes",
        "Type": "BufferingHints",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.bufferinghints",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.cfnproperties": [
        "EncryptionConfiguration",
        "ErrorOutputPrefix",
        "BucketARN",
        "Prefix",
        "BufferingHints",
        "DataFormatConversionConfiguration",
        "CompressionFormat",
        "S3BackupMode",
        "CloudWatchLoggingOptions",
        "S3BackupConfiguration",
        "RoleARN",
        "ProcessingConfiguration",
        "UniqueKey"
    ],
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.cloudwatchloggingoptions": {
        "Required": "No",
        "Type": "CloudWatchLoggingOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.cloudwatchloggingoptions",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.compressionformat": {
        "Allowed Values": "GZIP | Snappy | UNCOMPRESSED | ZIP",
        "AllowedValues": [
            "GZIP",
            "Snappy",
            "UNCOMPRESSED",
            "ZIP"
        ],
        "Pattern": "^[GZIP|Snappy|UNCOMPRESSED|ZIP]",
        "Required": "Yes",
        "SampleValue": "GZIP|Snappy|UNCOMPRESSED|ZIP",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.compressionformat",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.dataformatconversionconfiguration": {
        "Required": "No",
        "Type": "DataFormatConversionConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.dataformatconversionconfiguration",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.encryptionconfiguration": {
        "Required": "No",
        "Type": "EncryptionConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.encryptionconfiguration",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.erroroutputprefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.erroroutputprefix",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.prefix": {
        "Required": "No",
        "SampleValue": "TODO-prefix",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.prefix",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.processingconfiguration": {
        "Required": "No",
        "Type": "ProcessingConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.processingconfiguration",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.rolearn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.rolearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.s3backupconfiguration": {
        "Required": "No",
        "Type": "S3DestinationConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.s3backupconfiguration",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.s3backupmode": {
        "Allowed Values": "Disabled | Enabled",
        "AllowedValues": [
            "Disabled",
            "Enabled"
        ],
        "Pattern": "^[Disabled|Enabled]",
        "Required": "No",
        "SampleValue": "Disabled|Enabled",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.extendeds3destinationconfiguration.s3backupmode",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.hivejsonserde.cfnproperties": [
        "TimestampFormats",
        "UniqueKey"
    ],
    "kinesisfirehose.deliverystream.hivejsonserde.timestampformats": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "kinesisfirehose.deliverystream.hivejsonserde.timestampformats",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.inputformatconfiguration.cfnproperties": [
        "Deserializer",
        "UniqueKey"
    ],
    "kinesisfirehose.deliverystream.inputformatconfiguration.deserializer": {
        "Required": "Yes",
        "Type": "Deserializer",
        "UniqueKey": "kinesisfirehose.deliverystream.inputformatconfiguration.deserializer",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.kinesisstreamsourceconfiguration.cfnproperties": [
        "RoleARN",
        "KinesisStreamARN",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisfirehose.deliverystream.kinesisstreamsourceconfiguration.kinesisstreamarn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.kinesisstreamsourceconfiguration.kinesisstreamarn",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.kinesisstreamsourceconfiguration.rolearn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.kinesisstreamsourceconfiguration.rolearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.kmsencryptionconfig.awskmskeyarn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.kmsencryptionconfig.awskmskeyarn",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.kmsencryptionconfig.cfnproperties": [
        "AWSKMSKeyARN",
        "UniqueKey"
    ],
    "kinesisfirehose.deliverystream.openxjsonserde.caseinsensitive": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.openxjsonserde.caseinsensitive",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.openxjsonserde.cfnproperties": [
        "ConvertDotsInJsonKeysToUnderscores",
        "CaseInsensitive",
        "ColumnToJsonKeyMappings",
        "UniqueKey"
    ],
    "kinesisfirehose.deliverystream.openxjsonserde.columntojsonkeymappings": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "kinesisfirehose.deliverystream.openxjsonserde.columntojsonkeymappings",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.openxjsonserde.convertdotsinjsonkeystounderscores": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.openxjsonserde.convertdotsinjsonkeystounderscores",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.orcserde.blocksizebytes": {
        "Minimum": "67108864",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.blocksizebytes",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.orcserde.bloomfiltercolumns": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.bloomfiltercolumns",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.orcserde.bloomfilterfalsepositiveprobability": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.bloomfilterfalsepositiveprobability",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.orcserde.cfnproperties": [
        "Compression",
        "BloomFilterColumns",
        "BlockSizeBytes",
        "PaddingTolerance",
        "StripeSizeBytes",
        "BloomFilterFalsePositiveProbability",
        "FormatVersion",
        "RowIndexStride",
        "EnablePadding",
        "DictionaryKeyThreshold",
        "UniqueKey"
    ],
    "kinesisfirehose.deliverystream.orcserde.compression": {
        "Allowed Values": "NONE | SNAPPY | ZLIB",
        "AllowedValues": [
            "NONE",
            "SNAPPY",
            "ZLIB"
        ],
        "Pattern": "^[NONE|SNAPPY|ZLIB]",
        "Required": "No",
        "SampleValue": "NONE|SNAPPY|ZLIB",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.compression",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.orcserde.dictionarykeythreshold": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.dictionarykeythreshold",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.orcserde.enablepadding": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.enablepadding",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.orcserde.formatversion": {
        "Allowed Values": "V0_11 | V0_12",
        "AllowedValues": [
            "V0_11",
            "V0_12"
        ],
        "Pattern": "^[V0_11|V0_12]",
        "Required": "No",
        "SampleValue": "V0_11|V0_12",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.formatversion",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.orcserde.paddingtolerance": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.paddingtolerance",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.orcserde.rowindexstride": {
        "Minimum": "1000",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.rowindexstride",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.orcserde.stripesizebytes": {
        "Minimum": "8388608",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.orcserde.stripesizebytes",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.outputformatconfiguration.cfnproperties": [
        "Serializer",
        "UniqueKey"
    ],
    "kinesisfirehose.deliverystream.outputformatconfiguration.serializer": {
        "Required": "Yes",
        "Type": "Serializer",
        "UniqueKey": "kinesisfirehose.deliverystream.outputformatconfiguration.serializer",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.parquetserde.blocksizebytes": {
        "Minimum": "67108864",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.parquetserde.blocksizebytes",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.parquetserde.cfnproperties": [
        "Compression",
        "EnableDictionaryCompression",
        "BlockSizeBytes",
        "WriterVersion",
        "MaxPaddingBytes",
        "PageSizeBytes",
        "UniqueKey"
    ],
    "kinesisfirehose.deliverystream.parquetserde.compression": {
        "Allowed Values": "GZIP | SNAPPY | UNCOMPRESSED",
        "AllowedValues": [
            "GZIP",
            "SNAPPY",
            "UNCOMPRESSED"
        ],
        "Pattern": "^[GZIP|SNAPPY|UNCOMPRESSED]",
        "Required": "No",
        "SampleValue": "GZIP|SNAPPY|UNCOMPRESSED",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.parquetserde.compression",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.parquetserde.enabledictionarycompression": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.parquetserde.enabledictionarycompression",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.parquetserde.maxpaddingbytes": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.parquetserde.maxpaddingbytes",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.parquetserde.pagesizebytes": {
        "Minimum": "65536",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.parquetserde.pagesizebytes",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.parquetserde.writerversion": {
        "Allowed Values": "V1 | V2",
        "AllowedValues": [
            "V1",
            "V2"
        ],
        "Pattern": "^[V1|V2]",
        "Required": "No",
        "SampleValue": "V1|V2",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.parquetserde.writerversion",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.processingconfiguration.cfnproperties": [
        "Enabled",
        "Processors",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisfirehose.deliverystream.processingconfiguration.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "kinesisfirehose.deliverystream.processingconfiguration.enabled",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.processingconfiguration.processors": {
        "Required": "No",
        "Type": "List of [Processor",
        "UniqueKey": "kinesisfirehose.deliverystream.processingconfiguration.processors",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.processor.cfnproperties": [
        "Type",
        "Parameters",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisfirehose.deliverystream.processor.parameters": {
        "Required": "Yes",
        "Type": "List of [ProcessorParameter",
        "UniqueKey": "kinesisfirehose.deliverystream.processor.parameters",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.processor.type": {
        "Allowed Values": "Lambda",
        "AllowedValues": [
            "Lambda"
        ],
        "Pattern": "^[Lambda]",
        "Required": "Yes",
        "SampleValue": "Lambda",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.processor.type",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.processorparameter.cfnproperties": [
        "ParameterName",
        "ParameterValue",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisfirehose.deliverystream.processorparameter.parametername": {
        "Allowed Values": "BufferIntervalInSeconds | BufferSizeInMBs | LambdaArn | NumberOfRetries | RoleArn",
        "AllowedValues": [
            "BufferIntervalInSeconds",
            "BufferSizeInMBs",
            "LambdaArn",
            "NumberOfRetries",
            "RoleArn"
        ],
        "Pattern": "^[BufferIntervalInSeconds|BufferSizeInMBs|LambdaArn|NumberOfRetries|RoleArn]",
        "Required": "Yes",
        "SampleValue": "BufferIntervalInSeconds|BufferSizeInMBs|LambdaArn|NumberOfRetries|RoleArn",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.processorparameter.parametername",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.processorparameter.parametervalue": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "^.{1,512}$",
        "Required": "Yes",
        "SampleValue": "TODO-kinesisfirehose.deliverystream.processorparameter.parametervalue",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.processorparameter.parametervalue",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.cfnproperties": [
        "Username",
        "S3Configuration",
        "RoleARN",
        "ClusterJDBCURL",
        "CopyCommand",
        "CloudWatchLoggingOptions",
        "Password",
        "ProcessingConfiguration",
        "UniqueKey"
    ],
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.cloudwatchloggingoptions": {
        "Required": "No",
        "Type": "CloudWatchLoggingOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.cloudwatchloggingoptions",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.clusterjdbcurl": {
        "Minimum": "1",
        "Pattern": "jdbc:(redshift|postgresql)://((?!-)[A-Za-z0-9-]{1,63}(?<!-)\\.)+redshift\\.([a-zA-Z0-9\\.]+):\\d{1,5}/[a-zA-Z0-9_$]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.clusterjdbcurl",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.copycommand": {
        "Required": "Yes",
        "Type": "CopyCommand",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.copycommand",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.password": {
        "Minimum": "6",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.password",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.processingconfiguration": {
        "Required": "No",
        "Type": "ProcessingConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.processingconfiguration",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.rolearn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.rolearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.s3configuration": {
        "Required": "Yes",
        "Type": "S3DestinationConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.s3configuration",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.username": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.redshiftdestinationconfiguration.username",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.bucketarn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.bucketarn",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.bufferinghints": {
        "Required": "Yes",
        "Type": "BufferingHints",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.bufferinghints",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.cfnproperties": [
        "ErrorOutputPrefix",
        "BucketARN",
        "Prefix",
        "BufferingHints",
        "EncryptionConfiguration",
        "CompressionFormat",
        "CloudWatchLoggingOptions",
        "RoleARN",
        "UniqueKey"
    ],
    "kinesisfirehose.deliverystream.s3destinationconfiguration.cloudwatchloggingoptions": {
        "Required": "No",
        "Type": "CloudWatchLoggingOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.cloudwatchloggingoptions",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.compressionformat": {
        "AllowedValues": [
            "GZIP",
            "Snappy",
            "UNCOMPRESSED",
            "ZIP"
        ],
        "Pattern": "^[GZIP|Snappy|UNCOMPRESSED|ZIP]",
        "Required": "Yes",
        "SampleValue": "GZIP|Snappy|UNCOMPRESSED|ZIP",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.compressionformat",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.encryptionconfiguration": {
        "Required": "No",
        "Type": "EncryptionConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.encryptionconfiguration",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.erroroutputprefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.erroroutputprefix",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.prefix",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.s3destinationconfiguration.rolearn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "Yes",
        "UniqueKey": "kinesisfirehose.deliverystream.s3destinationconfiguration.rolearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.schemaconfiguration.catalogid": {
        "Pattern": "^\\S+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.schemaconfiguration.catalogid",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.schemaconfiguration.cfnproperties": [
        "Region",
        "TableName",
        "CatalogId",
        "VersionId",
        "DatabaseName",
        "RoleARN",
        "UniqueKey"
    ],
    "kinesisfirehose.deliverystream.schemaconfiguration.databasename": {
        "Pattern": "^\\S+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.schemaconfiguration.databasename",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.schemaconfiguration.region": {
        "Pattern": "^\\S+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.schemaconfiguration.region",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.schemaconfiguration.rolearn": {
        "Pattern": "^\\S+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.schemaconfiguration.rolearn",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.schemaconfiguration.tablename": {
        "Pattern": "^\\S+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.schemaconfiguration.tablename",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.schemaconfiguration.versionid": {
        "Pattern": "^\\S+$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.schemaconfiguration.versionid",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.serializer.cfnproperties": [
        "OrcSerDe",
        "ParquetSerDe",
        "UniqueKey",
        "SampleValue"
    ],
    "kinesisfirehose.deliverystream.serializer.orcserde": {
        "Required": "No",
        "Type": "OrcSerDe",
        "UniqueKey": "kinesisfirehose.deliverystream.serializer.orcserde",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.serializer.parquetserde": {
        "Required": "No",
        "Type": "ParquetSerDe",
        "UniqueKey": "kinesisfirehose.deliverystream.serializer.parquetserde",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.cfnproperties": [
        "S3Configuration",
        "HECEndpointType",
        "HECToken",
        "HECAcknowledgmentTimeoutInSeconds",
        "RetryOptions",
        "HECEndpoint",
        "S3BackupMode",
        "CloudWatchLoggingOptions",
        "ProcessingConfiguration",
        "UniqueKey"
    ],
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.cloudwatchloggingoptions": {
        "Required": "No",
        "Type": "CloudWatchLoggingOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.cloudwatchloggingoptions",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.hecacknowledgmenttimeoutinseconds": {
        "Maximum": "600",
        "Minimum": "180",
        "Pattern": "^[180,600]}$",
        "Required": "No",
        "SampleValue": "180...600",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.hecacknowledgmenttimeoutinseconds",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.hecendpoint": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.hecendpoint",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.hecendpointtype": {
        "Allowed Values": "Event | Raw",
        "AllowedValues": [
            "Event",
            "Raw"
        ],
        "Pattern": "^[Event|Raw]",
        "Required": "Yes",
        "SampleValue": "Event|Raw",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.hecendpointtype",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.hectoken": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.hectoken",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.processingconfiguration": {
        "Required": "No",
        "Type": "ProcessingConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.processingconfiguration",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.retryoptions": {
        "Required": "No",
        "Type": "SplunkRetryOptions",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.retryoptions",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.s3backupmode": {
        "Allowed Values": "AllEvents | FailedEventsOnly",
        "AllowedValues": [
            "AllEvents",
            "FailedEventsOnly"
        ],
        "Pattern": "^[AllEvents|FailedEventsOnly]",
        "Required": "No",
        "SampleValue": "AllEvents|FailedEventsOnly",
        "Type": "String",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.s3backupmode",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.splunkdestinationconfiguration.s3configuration": {
        "Required": "Yes",
        "Type": "S3DestinationConfiguration",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkdestinationconfiguration.s3configuration",
        "UpdateRequires": "No interruption"
    },
    "kinesisfirehose.deliverystream.splunkretryoptions.cfnproperties": [
        "DurationInSeconds",
        "UniqueKey"
    ],
    "kinesisfirehose.deliverystream.splunkretryoptions.durationinseconds": {
        "Maximum": "7200",
        "Minimum": "0",
        "Pattern": "^[0,7200]}$",
        "Required": "Yes",
        "SampleValue": "0...7200",
        "Type": "Integer",
        "UniqueKey": "kinesisfirehose.deliverystream.splunkretryoptions.durationinseconds",
        "UpdateRequires": "No interruption"
    },
    "lakeformation.datalakesettings.datalakeprincipal.cfnproperties": [
        "DataLakePrincipalIdentifier",
        "UniqueKey"
    ],
    "lakeformation.datalakesettings.datalakeprincipal.datalakeprincipalidentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.datalakesettings.datalakeprincipal.datalakeprincipalidentifier",
        "UpdateRequires": "No interruption"
    },
    "lakeformation.permissions.columnwildcard.cfnproperties": [
        "ExcludedColumnNames",
        "UniqueKey"
    ],
    "lakeformation.permissions.columnwildcard.excludedcolumnnames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "lakeformation.permissions.columnwildcard.excludedcolumnnames",
        "UpdateRequires": "No interruption"
    },
    "lakeformation.permissions.databaseresource.cfnproperties": [
        "Name",
        "UniqueKey"
    ],
    "lakeformation.permissions.databaseresource.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.databaseresource.name",
        "UpdateRequires": "No interruption"
    },
    "lakeformation.permissions.datalakeprincipal.cfnproperties": [
        "DataLakePrincipalIdentifier",
        "UniqueKey"
    ],
    "lakeformation.permissions.datalakeprincipal.datalakeprincipalidentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.datalakeprincipal.datalakeprincipalidentifier",
        "UpdateRequires": "No interruption"
    },
    "lakeformation.permissions.datalocationresource.cfnproperties": [
        "S3Resource",
        "UniqueKey"
    ],
    "lakeformation.permissions.datalocationresource.s3resource": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.datalocationresource.s3resource",
        "UpdateRequires": "No interruption"
    },
    "lakeformation.permissions.resource.cfnproperties": [
        "TableResource",
        "TableWithColumnsResource",
        "DataLocationResource",
        "DatabaseResource",
        "UniqueKey"
    ],
    "lakeformation.permissions.resource.databaseresource": {
        "Required": "No",
        "Type": "DatabaseResource",
        "UniqueKey": "lakeformation.permissions.resource.databaseresource",
        "UpdateRequires": "No interruption"
    },
    "lakeformation.permissions.resource.datalocationresource": {
        "Required": "No",
        "Type": "DataLocationResource",
        "UniqueKey": "lakeformation.permissions.resource.datalocationresource",
        "UpdateRequires": "No interruption"
    },
    "lakeformation.permissions.resource.tableresource": {
        "Required": "No",
        "Type": "TableResource",
        "UniqueKey": "lakeformation.permissions.resource.tableresource",
        "UpdateRequires": "No interruption"
    },
    "lakeformation.permissions.resource.tablewithcolumnsresource": {
        "Required": "No",
        "Type": "TableWithColumnsResource",
        "UniqueKey": "lakeformation.permissions.resource.tablewithcolumnsresource",
        "UpdateRequires": "No interruption"
    },
    "lakeformation.permissions.tableresource.cfnproperties": [
        "Name",
        "DatabaseName",
        "UniqueKey",
        "SampleValue"
    ],
    "lakeformation.permissions.tableresource.databasename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.tableresource.databasename",
        "UpdateRequires": "No interruption"
    },
    "lakeformation.permissions.tableresource.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.tableresource.name",
        "UpdateRequires": "No interruption"
    },
    "lakeformation.permissions.tablewithcolumnsresource.cfnproperties": [
        "ColumnNames",
        "DatabaseName",
        "ColumnWildcard",
        "Name",
        "UniqueKey"
    ],
    "lakeformation.permissions.tablewithcolumnsresource.columnnames": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "lakeformation.permissions.tablewithcolumnsresource.columnnames",
        "UpdateRequires": "No interruption"
    },
    "lakeformation.permissions.tablewithcolumnsresource.columnwildcard": {
        "Required": "No",
        "Type": "ColumnWildcard",
        "UniqueKey": "lakeformation.permissions.tablewithcolumnsresource.columnwildcard",
        "UpdateRequires": "No interruption"
    },
    "lakeformation.permissions.tablewithcolumnsresource.databasename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.tablewithcolumnsresource.databasename",
        "UpdateRequires": "No interruption"
    },
    "lakeformation.permissions.tablewithcolumnsresource.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lakeformation.permissions.tablewithcolumnsresource.name",
        "UpdateRequires": "No interruption"
    },
    "lambda.alias.aliasroutingconfiguration.additionalversionweights": {
        "Required": "Yes",
        "Type": "List of [VersionWeight",
        "UniqueKey": "lambda.alias.aliasroutingconfiguration.additionalversionweights",
        "UpdateRequires": "No interruption"
    },
    "lambda.alias.aliasroutingconfiguration.cfnproperties": [
        "AdditionalVersionWeights",
        "UniqueKey"
    ],
    "lambda.alias.provisionedconcurrencyconfiguration.cfnproperties": [
        "ProvisionedConcurrentExecutions",
        "UniqueKey"
    ],
    "lambda.alias.provisionedconcurrencyconfiguration.provisionedconcurrentexecutions": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "lambda.alias.provisionedconcurrencyconfiguration.provisionedconcurrentexecutions",
        "UpdateRequires": "No interruption"
    },
    "lambda.alias.versionweight.cfnproperties": [
        "FunctionVersion",
        "FunctionWeight",
        "UniqueKey",
        "SampleValue"
    ],
    "lambda.alias.versionweight.functionversion": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "lambda.alias.versionweight.functionversion",
        "UpdateRequires": "No interruption"
    },
    "lambda.alias.versionweight.functionweight": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "lambda.alias.versionweight.functionweight",
        "UpdateRequires": "No interruption"
    },
    "lambda.eventinvokeconfig.destinationconfig.cfnproperties": [
        "OnSuccess",
        "OnFailure",
        "UniqueKey",
        "SampleValue"
    ],
    "lambda.eventinvokeconfig.destinationconfig.onfailure": {
        "Required": "No",
        "Type": "OnFailure",
        "UniqueKey": "lambda.eventinvokeconfig.destinationconfig.onfailure",
        "UpdateRequires": "No interruption"
    },
    "lambda.eventinvokeconfig.destinationconfig.onfailure.cfnproperties": [
        "Destination",
        "UniqueKey"
    ],
    "lambda.eventinvokeconfig.destinationconfig.onfailure.destination": {
        "Maximum": "350",
        "Minimum": "0",
        "Pattern": "^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "lambda.eventinvokeconfig.destinationconfig.onfailure.destination",
        "UpdateRequires": "No interruption"
    },
    "lambda.eventinvokeconfig.destinationconfig.onsuccess": {
        "Required": "No",
        "Type": "OnSuccess",
        "UniqueKey": "lambda.eventinvokeconfig.destinationconfig.onsuccess",
        "UpdateRequires": "No interruption"
    },
    "lambda.eventinvokeconfig.destinationconfig.onsuccess.cfnproperties": [
        "Destination",
        "UniqueKey"
    ],
    "lambda.eventinvokeconfig.destinationconfig.onsuccess.destination": {
        "Maximum": "350",
        "Minimum": "0",
        "Pattern": "^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "lambda.eventinvokeconfig.destinationconfig.onsuccess.destination",
        "UpdateRequires": "No interruption"
    },
    "lambda.eventsourcemapping.destinationconfig.cfnproperties": [
        "OnFailure",
        "UniqueKey"
    ],
    "lambda.eventsourcemapping.destinationconfig.onfailure": {
        "Required": "Yes",
        "Type": "OnFailure",
        "UniqueKey": "lambda.eventsourcemapping.destinationconfig.onfailure",
        "UpdateRequires": "No interruption"
    },
    "lambda.eventsourcemapping.onfailure.cfnproperties": [
        "Destination",
        "UniqueKey"
    ],
    "lambda.eventsourcemapping.onfailure.destination": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "lambda.eventsourcemapping.onfailure.destination",
        "UpdateRequires": "No interruption"
    },
    "lambda.function.code.cfnproperties": [
        "S3Bucket",
        "S3Key",
        "ZipFile",
        "S3ObjectVersion",
        "UniqueKey"
    ],
    "lambda.function.code.s3bucket": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "lambda.function.code.s3bucket",
        "UpdateRequires": "No interruption"
    },
    "lambda.function.code.s3key": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Conditional",
        "SampleValue": "TODO-lambda.function.code.s3key",
        "Type": "String",
        "UniqueKey": "lambda.function.code.s3key",
        "UpdateRequires": "No interruption"
    },
    "lambda.function.code.s3objectversion": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Conditional",
        "SampleValue": "TODO-lambda.function.code.s3objectversion",
        "Type": "String",
        "UniqueKey": "lambda.function.code.s3objectversion",
        "UpdateRequires": "No interruption"
    },
    "lambda.function.code.zipfile": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "lambda.function.code.zipfile",
        "UpdateRequires": "No interruption"
    },
    "lambda.function.deadletterconfig.cfnproperties": [
        "TargetArn",
        "UniqueKey"
    ],
    "lambda.function.deadletterconfig.targetarn": {
        "Pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "lambda.function.deadletterconfig.targetarn",
        "UpdateRequires": "No interruption"
    },
    "lambda.function.environment.cfnproperties": [
        "Variables",
        "UniqueKey"
    ],
    "lambda.function.environment.variables": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "lambda.function.environment.variables",
        "UpdateRequires": "No interruption"
    },
    "lambda.function.tracingconfig.cfnproperties": [
        "Mode",
        "UniqueKey"
    ],
    "lambda.function.tracingconfig.mode": {
        "Allowed Values": "Active | PassThrough",
        "AllowedValues": [
            "Active",
            "PassThrough"
        ],
        "Pattern": "^[Active|PassThrough]",
        "Required": "No",
        "SampleValue": "Active|PassThrough",
        "Type": "String",
        "UniqueKey": "lambda.function.tracingconfig.mode",
        "UpdateRequires": "No interruption"
    },
    "lambda.function.vpcconfig.cfnproperties": [
        "SubnetIds",
        "SecurityGroupIds",
        "UniqueKey",
        "SampleValue"
    ],
    "lambda.function.vpcconfig.securitygroupids": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "lambda.function.vpcconfig.securitygroupids",
        "UpdateRequires": "No interruption"
    },
    "lambda.function.vpcconfig.subnetids": {
        "Maximum": "16",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "lambda.function.vpcconfig.subnetids",
        "UpdateRequires": "No interruption"
    },
    "lambda.layerversion.content.cfnproperties": [
        "S3Bucket",
        "S3Key",
        "S3ObjectVersion",
        "UniqueKey"
    ],
    "lambda.layerversion.content.s3bucket": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "lambda.layerversion.content.s3bucket",
        "UpdateRequires": "Replacement"
    },
    "lambda.layerversion.content.s3key": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-lambda.layerversion.content.s3key",
        "Type": "String",
        "UniqueKey": "lambda.layerversion.content.s3key",
        "UpdateRequires": "Replacement"
    },
    "lambda.layerversion.content.s3objectversion": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-lambda.layerversion.content.s3objectversion",
        "Type": "String",
        "UniqueKey": "lambda.layerversion.content.s3objectversion",
        "UpdateRequires": "Replacement"
    },
    "lambda.version.provisionedconcurrencyconfiguration.cfnproperties": [
        "ProvisionedConcurrentExecutions",
        "UniqueKey"
    ],
    "lambda.version.provisionedconcurrencyconfiguration.provisionedconcurrentexecutions": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "lambda.version.provisionedconcurrencyconfiguration.provisionedconcurrentexecutions",
        "UpdateRequires": "No interruption"
    },
    "logs.metricfilter.metrictransformation.cfnproperties": [
        "DefaultValue",
        "MetricValue",
        "MetricNamespace",
        "MetricName",
        "UniqueKey"
    ],
    "logs.metricfilter.metrictransformation.defaultvalue": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "logs.metricfilter.metrictransformation.defaultvalue",
        "UpdateRequires": "No interruption"
    },
    "logs.metricfilter.metrictransformation.metricname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "logs.metricfilter.metrictransformation.metricname",
        "UpdateRequires": "No interruption"
    },
    "logs.metricfilter.metrictransformation.metricnamespace": {
        "Maximum": "255",
        "Pattern": "[^:*$]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "logs.metricfilter.metrictransformation.metricnamespace",
        "UpdateRequires": "No interruption"
    },
    "logs.metricfilter.metrictransformation.metricvalue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "logs.metricfilter.metrictransformation.metricvalue",
        "UpdateRequires": "No interruption"
    },
    "managedblockchain.member.approvalthresholdpolicy.cfnproperties": [
        "ThresholdComparator",
        "ProposalDurationInHours",
        "ThresholdPercentage",
        "UniqueKey"
    ],
    "managedblockchain.member.approvalthresholdpolicy.proposaldurationinhours": {
        "Maximum": "168",
        "Minimum": "1",
        "Pattern": "^[1,168]}$",
        "Required": "No",
        "SampleValue": "1...168",
        "Type": "Integer",
        "UniqueKey": "managedblockchain.member.approvalthresholdpolicy.proposaldurationinhours",
        "UpdateRequires": "No interruption"
    },
    "managedblockchain.member.approvalthresholdpolicy.thresholdcomparator": {
        "Allowed Values": "GREATER_THAN | GREATER_THAN_OR_EQUAL_TO",
        "AllowedValues": [
            "GREATER_THAN",
            "GREATER_THAN_OR_EQUAL_TO"
        ],
        "Pattern": "^[GREATER_THAN|GREATER_THAN_OR_EQUAL_TO]",
        "Required": "No",
        "SampleValue": "GREATER_THAN|GREATER_THAN_OR_EQUAL_TO",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.approvalthresholdpolicy.thresholdcomparator",
        "UpdateRequires": "No interruption"
    },
    "managedblockchain.member.approvalthresholdpolicy.thresholdpercentage": {
        "Maximum": "100",
        "Minimum": "0",
        "Pattern": "^[0,100]}$",
        "Required": "No",
        "SampleValue": "0...100",
        "Type": "Integer",
        "UniqueKey": "managedblockchain.member.approvalthresholdpolicy.thresholdpercentage",
        "UpdateRequires": "No interruption"
    },
    "managedblockchain.member.memberconfiguration.cfnproperties": [
        "MemberFrameworkConfiguration",
        "Description",
        "Name",
        "UniqueKey"
    ],
    "managedblockchain.member.memberconfiguration.description": {
        "Maximum": "128",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.memberconfiguration.description",
        "UpdateRequires": "No interruption"
    },
    "managedblockchain.member.memberconfiguration.memberframeworkconfiguration": {
        "Required": "No",
        "Type": "MemberFrameworkConfiguration",
        "UniqueKey": "managedblockchain.member.memberconfiguration.memberframeworkconfiguration",
        "UpdateRequires": "No interruption"
    },
    "managedblockchain.member.memberconfiguration.name": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^(?!-)^[^0-9](?!.*--)[A-Za-z0-9-]+[^- ]$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.memberconfiguration.name",
        "UpdateRequires": "No interruption"
    },
    "managedblockchain.member.memberfabricconfiguration.adminpassword": {
        "Maximum": "32",
        "Minimum": "8",
        "Pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?!.*[@'\\\\\"/])[a-zA-Z0-9\\S]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.memberfabricconfiguration.adminpassword",
        "UpdateRequires": "No interruption"
    },
    "managedblockchain.member.memberfabricconfiguration.adminusername": {
        "Maximum": "16",
        "Minimum": "1",
        "Pattern": "^[a-zA-Z][a-zA-Z0-9]*$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.memberfabricconfiguration.adminusername",
        "UpdateRequires": "No interruption"
    },
    "managedblockchain.member.memberfabricconfiguration.cfnproperties": [
        "AdminUsername",
        "AdminPassword",
        "UniqueKey",
        "SampleValue"
    ],
    "managedblockchain.member.memberframeworkconfiguration.cfnproperties": [
        "MemberFabricConfiguration",
        "UniqueKey"
    ],
    "managedblockchain.member.memberframeworkconfiguration.memberfabricconfiguration": {
        "Required": "No",
        "Type": "MemberFabricConfiguration",
        "UniqueKey": "managedblockchain.member.memberframeworkconfiguration.memberfabricconfiguration",
        "UpdateRequires": "No interruption"
    },
    "managedblockchain.member.networkconfiguration.cfnproperties": [
        "Description",
        "NetworkFrameworkConfiguration",
        "Framework",
        "Name",
        "FrameworkVersion",
        "VotingPolicy",
        "UniqueKey"
    ],
    "managedblockchain.member.networkconfiguration.description": {
        "Maximum": "128",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.networkconfiguration.description",
        "UpdateRequires": "No interruption"
    },
    "managedblockchain.member.networkconfiguration.framework": {
        "Allowed Values": "HYPERLEDGER_FABRIC",
        "AllowedValues": [
            "HYPERLEDGER_FABRIC"
        ],
        "Pattern": "^[HYPERLEDGER_FABRIC]",
        "Required": "Yes",
        "SampleValue": "HYPERLEDGER_FABRIC",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.networkconfiguration.framework",
        "UpdateRequires": "No interruption"
    },
    "managedblockchain.member.networkconfiguration.frameworkversion": {
        "Maximum": "8",
        "Minimum": "1",
        "Pattern": "^.{1,8}$",
        "Required": "Yes",
        "SampleValue": "TODO-managedblockchain.member.networkconfiguration.frameworkversion",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.networkconfiguration.frameworkversion",
        "UpdateRequires": "No interruption"
    },
    "managedblockchain.member.networkconfiguration.name": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.networkconfiguration.name",
        "UpdateRequires": "No interruption"
    },
    "managedblockchain.member.networkconfiguration.networkframeworkconfiguration": {
        "Required": "No",
        "Type": "NetworkFrameworkConfiguration",
        "UniqueKey": "managedblockchain.member.networkconfiguration.networkframeworkconfiguration",
        "UpdateRequires": "No interruption"
    },
    "managedblockchain.member.networkconfiguration.votingpolicy": {
        "Required": "Yes",
        "Type": "VotingPolicy",
        "UniqueKey": "managedblockchain.member.networkconfiguration.votingpolicy",
        "UpdateRequires": "No interruption"
    },
    "managedblockchain.member.networkfabricconfiguration.cfnproperties": [
        "Edition",
        "UniqueKey"
    ],
    "managedblockchain.member.networkfabricconfiguration.edition": {
        "Allowed Values": "STANDARD | STARTER",
        "AllowedValues": [
            "STANDARD",
            "STARTER"
        ],
        "Pattern": "^[STANDARD|STARTER]",
        "Required": "Yes",
        "SampleValue": "STANDARD|STARTER",
        "Type": "String",
        "UniqueKey": "managedblockchain.member.networkfabricconfiguration.edition",
        "UpdateRequires": "No interruption"
    },
    "managedblockchain.member.networkframeworkconfiguration.cfnproperties": [
        "NetworkFabricConfiguration",
        "UniqueKey"
    ],
    "managedblockchain.member.networkframeworkconfiguration.networkfabricconfiguration": {
        "Required": "No",
        "Type": "NetworkFabricConfiguration",
        "UniqueKey": "managedblockchain.member.networkframeworkconfiguration.networkfabricconfiguration",
        "UpdateRequires": "No interruption"
    },
    "managedblockchain.member.votingpolicy.approvalthresholdpolicy": {
        "Required": "No",
        "Type": "ApprovalThresholdPolicy",
        "UniqueKey": "managedblockchain.member.votingpolicy.approvalthresholdpolicy",
        "UpdateRequires": "No interruption"
    },
    "managedblockchain.member.votingpolicy.cfnproperties": [
        "ApprovalThresholdPolicy",
        "UniqueKey"
    ],
    "managedblockchain.node.nodeconfiguration.availabilityzone": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.node.nodeconfiguration.availabilityzone",
        "UpdateRequires": "No interruption"
    },
    "managedblockchain.node.nodeconfiguration.cfnproperties": [
        "AvailabilityZone",
        "InstanceType",
        "UniqueKey",
        "SampleValue"
    ],
    "managedblockchain.node.nodeconfiguration.instancetype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "managedblockchain.node.nodeconfiguration.instancetype",
        "UpdateRequires": "No interruption"
    },
    "mediaconvert.jobtemplate.accelerationsettings.cfnproperties": [
        "Mode",
        "UniqueKey"
    ],
    "mediaconvert.jobtemplate.accelerationsettings.mode": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "mediaconvert.jobtemplate.accelerationsettings.mode",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.audiolanguageselection.cfnproperties": [
        "LanguageCode",
        "LanguageSelectionPolicy",
        "UniqueKey",
        "SampleValue"
    ],
    "medialive.channel.audiolanguageselection.languagecode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audiolanguageselection.languagecode",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.audiolanguageselection.languageselectionpolicy": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audiolanguageselection.languageselectionpolicy",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.audiopidselection.cfnproperties": [
        "Pid",
        "UniqueKey"
    ],
    "medialive.channel.audiopidselection.pid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.audiopidselection.pid",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.audioselector.cfnproperties": [
        "SelectorSettings",
        "Name",
        "UniqueKey",
        "SampleValue"
    ],
    "medialive.channel.audioselector.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.audioselector.name",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.audioselector.selectorsettings": {
        "Required": "No",
        "Type": "AudioSelectorSettings",
        "UniqueKey": "medialive.channel.audioselector.selectorsettings",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.audioselectorsettings.audiolanguageselection": {
        "Required": "No",
        "Type": "AudioLanguageSelection",
        "UniqueKey": "medialive.channel.audioselectorsettings.audiolanguageselection",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.audioselectorsettings.audiopidselection": {
        "Required": "No",
        "Type": "AudioPidSelection",
        "UniqueKey": "medialive.channel.audioselectorsettings.audiopidselection",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.audioselectorsettings.cfnproperties": [
        "AudioPidSelection",
        "AudioLanguageSelection",
        "UniqueKey",
        "SampleValue"
    ],
    "medialive.channel.captionselector.cfnproperties": [
        "SelectorSettings",
        "LanguageCode",
        "Name",
        "UniqueKey"
    ],
    "medialive.channel.captionselector.languagecode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.captionselector.languagecode",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.captionselector.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.captionselector.name",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.captionselector.selectorsettings": {
        "Required": "No",
        "Type": "CaptionSelectorSettings",
        "UniqueKey": "medialive.channel.captionselector.selectorsettings",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.captionselectorsettings.aribsourcesettings": {
        "Required": "No",
        "Type": "AribSourceSettings",
        "UniqueKey": "medialive.channel.captionselectorsettings.aribsourcesettings",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.captionselectorsettings.cfnproperties": [
        "AribSourceSettings",
        "Scte20SourceSettings",
        "DvbSubSourceSettings",
        "EmbeddedSourceSettings",
        "Scte27SourceSettings",
        "TeletextSourceSettings",
        "UniqueKey"
    ],
    "medialive.channel.captionselectorsettings.dvbsubsourcesettings": {
        "Required": "No",
        "Type": "DvbSubSourceSettings",
        "UniqueKey": "medialive.channel.captionselectorsettings.dvbsubsourcesettings",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.captionselectorsettings.embeddedsourcesettings": {
        "Required": "No",
        "Type": "EmbeddedSourceSettings",
        "UniqueKey": "medialive.channel.captionselectorsettings.embeddedsourcesettings",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.captionselectorsettings.scte20sourcesettings": {
        "Required": "No",
        "Type": "Scte20SourceSettings",
        "UniqueKey": "medialive.channel.captionselectorsettings.scte20sourcesettings",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.captionselectorsettings.scte27sourcesettings": {
        "Required": "No",
        "Type": "Scte27SourceSettings",
        "UniqueKey": "medialive.channel.captionselectorsettings.scte27sourcesettings",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.captionselectorsettings.teletextsourcesettings": {
        "Required": "No",
        "Type": "TeletextSourceSettings",
        "UniqueKey": "medialive.channel.captionselectorsettings.teletextsourcesettings",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.dvbsubsourcesettings.cfnproperties": [
        "Pid",
        "UniqueKey"
    ],
    "medialive.channel.dvbsubsourcesettings.pid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.dvbsubsourcesettings.pid",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.embeddedsourcesettings.cfnproperties": [
        "Scte20Detection",
        "Source608ChannelNumber",
        "Convert608To708",
        "Source608TrackNumber",
        "UniqueKey"
    ],
    "medialive.channel.embeddedsourcesettings.convert608to708": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.embeddedsourcesettings.convert608to708",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.embeddedsourcesettings.scte20detection": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.embeddedsourcesettings.scte20detection",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.embeddedsourcesettings.source608channelnumber": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.embeddedsourcesettings.source608channelnumber",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.embeddedsourcesettings.source608tracknumber": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.embeddedsourcesettings.source608tracknumber",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.hlsinputsettings.bandwidth": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsinputsettings.bandwidth",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.hlsinputsettings.buffersegments": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsinputsettings.buffersegments",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.hlsinputsettings.cfnproperties": [
        "RetryInterval",
        "Retries",
        "Bandwidth",
        "BufferSegments",
        "UniqueKey"
    ],
    "medialive.channel.hlsinputsettings.retries": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsinputsettings.retries",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.hlsinputsettings.retryinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.hlsinputsettings.retryinterval",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.inputattachment.cfnproperties": [
        "InputId",
        "InputAttachmentName",
        "InputSettings",
        "UniqueKey"
    ],
    "medialive.channel.inputattachment.inputattachmentname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputattachment.inputattachmentname",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.inputattachment.inputid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputattachment.inputid",
        "UpdateRequires": "Replacement"
    },
    "medialive.channel.inputattachment.inputsettings": {
        "Required": "No",
        "Type": "InputSettings",
        "UniqueKey": "medialive.channel.inputattachment.inputsettings",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.inputsettings.audioselectors": {
        "Required": "No",
        "Type": "List of [AudioSelector",
        "UniqueKey": "medialive.channel.inputsettings.audioselectors",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.inputsettings.captionselectors": {
        "Required": "No",
        "Type": "List of [CaptionSelector",
        "UniqueKey": "medialive.channel.inputsettings.captionselectors",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.inputsettings.cfnproperties": [
        "AudioSelectors",
        "CaptionSelectors",
        "SourceEndBehavior",
        "InputFilter",
        "FilterStrength",
        "NetworkInputSettings",
        "DenoiseFilter",
        "VideoSelector",
        "DeblockFilter",
        "UniqueKey"
    ],
    "medialive.channel.inputsettings.deblockfilter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputsettings.deblockfilter",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.inputsettings.denoisefilter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputsettings.denoisefilter",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.inputsettings.filterstrength": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.inputsettings.filterstrength",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.inputsettings.inputfilter": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputsettings.inputfilter",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.inputsettings.networkinputsettings": {
        "Required": "No",
        "Type": "NetworkInputSettings",
        "UniqueKey": "medialive.channel.inputsettings.networkinputsettings",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.inputsettings.sourceendbehavior": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputsettings.sourceendbehavior",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.inputsettings.videoselector": {
        "Required": "No",
        "Type": "VideoSelector",
        "UniqueKey": "medialive.channel.inputsettings.videoselector",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.inputspecification.cfnproperties": [
        "Codec",
        "Resolution",
        "MaximumBitrate",
        "UniqueKey"
    ],
    "medialive.channel.inputspecification.codec": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputspecification.codec",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.inputspecification.maximumbitrate": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputspecification.maximumbitrate",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.inputspecification.resolution": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.inputspecification.resolution",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.mediapackageoutputdestinationsettings.cfnproperties": [
        "ChannelId",
        "UniqueKey"
    ],
    "medialive.channel.mediapackageoutputdestinationsettings.channelid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.mediapackageoutputdestinationsettings.channelid",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.networkinputsettings.cfnproperties": [
        "HlsInputSettings",
        "ServerValidation",
        "UniqueKey",
        "SampleValue"
    ],
    "medialive.channel.networkinputsettings.hlsinputsettings": {
        "Required": "No",
        "Type": "HlsInputSettings",
        "UniqueKey": "medialive.channel.networkinputsettings.hlsinputsettings",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.networkinputsettings.servervalidation": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.networkinputsettings.servervalidation",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.outputdestination.cfnproperties": [
        "Settings",
        "Id",
        "MediaPackageSettings",
        "UniqueKey"
    ],
    "medialive.channel.outputdestination.id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.outputdestination.id",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.outputdestination.mediapackagesettings": {
        "Required": "No",
        "Type": "List of [MediaPackageOutputDestinationSettings",
        "UniqueKey": "medialive.channel.outputdestination.mediapackagesettings",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.outputdestination.settings": {
        "Required": "No",
        "Type": "List of [OutputDestinationSettings",
        "UniqueKey": "medialive.channel.outputdestination.settings",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.outputdestinationsettings.cfnproperties": [
        "Url",
        "Username",
        "StreamName",
        "PasswordParam",
        "UniqueKey"
    ],
    "medialive.channel.outputdestinationsettings.passwordparam": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.outputdestinationsettings.passwordparam",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.outputdestinationsettings.streamname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.outputdestinationsettings.streamname",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.outputdestinationsettings.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.outputdestinationsettings.url",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.outputdestinationsettings.username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.outputdestinationsettings.username",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.scte20sourcesettings.cfnproperties": [
        "Source608ChannelNumber",
        "Convert608To708",
        "UniqueKey",
        "SampleValue"
    ],
    "medialive.channel.scte20sourcesettings.convert608to708": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.scte20sourcesettings.convert608to708",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.scte20sourcesettings.source608channelnumber": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.scte20sourcesettings.source608channelnumber",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.scte27sourcesettings.cfnproperties": [
        "Pid",
        "UniqueKey"
    ],
    "medialive.channel.scte27sourcesettings.pid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.scte27sourcesettings.pid",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.teletextsourcesettings.cfnproperties": [
        "PageNumber",
        "UniqueKey"
    ],
    "medialive.channel.teletextsourcesettings.pagenumber": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.teletextsourcesettings.pagenumber",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.videoselector.cfnproperties": [
        "SelectorSettings",
        "ColorSpaceUsage",
        "ColorSpace",
        "UniqueKey"
    ],
    "medialive.channel.videoselector.colorspace": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.videoselector.colorspace",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.videoselector.colorspaceusage": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.channel.videoselector.colorspaceusage",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.videoselector.selectorsettings": {
        "Required": "No",
        "Type": "VideoSelectorSettings",
        "UniqueKey": "medialive.channel.videoselector.selectorsettings",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.videoselectorpid.cfnproperties": [
        "Pid",
        "UniqueKey"
    ],
    "medialive.channel.videoselectorpid.pid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.videoselectorpid.pid",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.videoselectorprogramid.cfnproperties": [
        "ProgramId",
        "UniqueKey"
    ],
    "medialive.channel.videoselectorprogramid.programid": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "medialive.channel.videoselectorprogramid.programid",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.videoselectorsettings.cfnproperties": [
        "VideoSelectorPid",
        "VideoSelectorProgramId",
        "UniqueKey",
        "SampleValue"
    ],
    "medialive.channel.videoselectorsettings.videoselectorpid": {
        "Required": "No",
        "Type": "VideoSelectorPid",
        "UniqueKey": "medialive.channel.videoselectorsettings.videoselectorpid",
        "UpdateRequires": "No interruption"
    },
    "medialive.channel.videoselectorsettings.videoselectorprogramid": {
        "Required": "No",
        "Type": "VideoSelectorProgramId",
        "UniqueKey": "medialive.channel.videoselectorsettings.videoselectorprogramid",
        "UpdateRequires": "No interruption"
    },
    "medialive.input.inputdestinationrequest.cfnproperties": [
        "StreamName",
        "UniqueKey"
    ],
    "medialive.input.inputdestinationrequest.streamname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.input.inputdestinationrequest.streamname",
        "UpdateRequires": "No interruption"
    },
    "medialive.input.inputsourcerequest.cfnproperties": [
        "Url",
        "Username",
        "PasswordParam",
        "UniqueKey"
    ],
    "medialive.input.inputsourcerequest.passwordparam": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.input.inputsourcerequest.passwordparam",
        "UpdateRequires": "No interruption"
    },
    "medialive.input.inputsourcerequest.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.input.inputsourcerequest.url",
        "UpdateRequires": "No interruption"
    },
    "medialive.input.inputsourcerequest.username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.input.inputsourcerequest.username",
        "UpdateRequires": "No interruption"
    },
    "medialive.input.inputvpcrequest.cfnproperties": [
        "SubnetIds",
        "SecurityGroupIds",
        "UniqueKey",
        "SampleValue"
    ],
    "medialive.input.inputvpcrequest.securitygroupids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "medialive.input.inputvpcrequest.securitygroupids",
        "UpdateRequires": "No interruption"
    },
    "medialive.input.inputvpcrequest.subnetids": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "medialive.input.inputvpcrequest.subnetids",
        "UpdateRequires": "No interruption"
    },
    "medialive.input.mediaconnectflowrequest.cfnproperties": [
        "FlowArn",
        "UniqueKey"
    ],
    "medialive.input.mediaconnectflowrequest.flowarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.input.mediaconnectflowrequest.flowarn",
        "UpdateRequires": "No interruption"
    },
    "medialive.inputsecuritygroup.inputwhitelistrulecidr.cfnproperties": [
        "Cidr",
        "UniqueKey"
    ],
    "medialive.inputsecuritygroup.inputwhitelistrulecidr.cidr": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "medialive.inputsecuritygroup.inputwhitelistrulecidr.cidr",
        "UpdateRequires": "No interruption"
    },
    "mediastore.container.corsrule.allowedheaders": {
        "Maximum": "100",
        "Required": "No",
        "UniqueKey": "mediastore.container.corsrule.allowedheaders",
        "UpdateRequires": "No interruption"
    },
    "mediastore.container.corsrule.allowedmethods": {
        "Maximum": "4",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "mediastore.container.corsrule.allowedmethods",
        "UpdateRequires": "Replacement"
    },
    "mediastore.container.corsrule.allowedorigins": {
        "Maximum": "100",
        "Required": "No",
        "UniqueKey": "mediastore.container.corsrule.allowedorigins",
        "UpdateRequires": "No interruption"
    },
    "mediastore.container.corsrule.cfnproperties": [
        "AllowedHeaders",
        "ExposeHeaders",
        "AllowedMethods",
        "MaxAgeSeconds",
        "AllowedOrigins",
        "UniqueKey"
    ],
    "mediastore.container.corsrule.exposeheaders": {
        "Maximum": "100",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "mediastore.container.corsrule.exposeheaders",
        "UpdateRequires": "No interruption"
    },
    "mediastore.container.corsrule.maxageseconds": {
        "Maximum": "2147483647",
        "Minimum": "0",
        "Pattern": "^[0,2147483647]}$",
        "Required": "No",
        "SampleValue": "0...2147483647",
        "Type": "Integer",
        "UniqueKey": "mediastore.container.corsrule.maxageseconds",
        "UpdateRequires": "No interruption"
    },
    "msk.cluster.brokernodegroupinfo.brokerazdistribution": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "msk.cluster.brokernodegroupinfo.brokerazdistribution",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.brokernodegroupinfo.cfnproperties": [
        "BrokerAZDistribution",
        "ClientSubnets",
        "StorageInfo",
        "SecurityGroups",
        "InstanceType",
        "UniqueKey"
    ],
    "msk.cluster.brokernodegroupinfo.clientsubnets": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "msk.cluster.brokernodegroupinfo.clientsubnets",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.brokernodegroupinfo.instancetype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "msk.cluster.brokernodegroupinfo.instancetype",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.brokernodegroupinfo.securitygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "msk.cluster.brokernodegroupinfo.securitygroups",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.brokernodegroupinfo.storageinfo": {
        "Required": "No",
        "Type": "StorageInfo",
        "UniqueKey": "msk.cluster.brokernodegroupinfo.storageinfo",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.clientauthentication.cfnproperties": [
        "Tls",
        "UniqueKey"
    ],
    "msk.cluster.clientauthentication.tls": {
        "Required": "No",
        "Type": "Tls",
        "UniqueKey": "msk.cluster.clientauthentication.tls",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.configurationinfo.arn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "msk.cluster.configurationinfo.arn",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.configurationinfo.cfnproperties": [
        "Arn",
        "Revision",
        "UniqueKey",
        "SampleValue"
    ],
    "msk.cluster.configurationinfo.revision": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "msk.cluster.configurationinfo.revision",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.ebsstorageinfo.cfnproperties": [
        "VolumeSize",
        "UniqueKey"
    ],
    "msk.cluster.ebsstorageinfo.volumesize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "msk.cluster.ebsstorageinfo.volumesize",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.encryptionatrest.cfnproperties": [
        "DataVolumeKMSKeyId",
        "UniqueKey"
    ],
    "msk.cluster.encryptionatrest.datavolumekmskeyid": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "msk.cluster.encryptionatrest.datavolumekmskeyid",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.encryptioninfo.cfnproperties": [
        "EncryptionInTransit",
        "EncryptionAtRest",
        "UniqueKey",
        "SampleValue"
    ],
    "msk.cluster.encryptioninfo.encryptionatrest": {
        "Required": "No",
        "Type": "EncryptionAtRest",
        "UniqueKey": "msk.cluster.encryptioninfo.encryptionatrest",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.encryptioninfo.encryptionintransit": {
        "Required": "No",
        "Type": "EncryptionInTransit",
        "UniqueKey": "msk.cluster.encryptioninfo.encryptionintransit",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.encryptionintransit.cfnproperties": [
        "ClientBroker",
        "InCluster",
        "UniqueKey",
        "SampleValue"
    ],
    "msk.cluster.encryptionintransit.clientbroker": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "msk.cluster.encryptionintransit.clientbroker",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.encryptionintransit.incluster": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "msk.cluster.encryptionintransit.incluster",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.jmxexporter.cfnproperties": [
        "EnabledInBroker",
        "UniqueKey"
    ],
    "msk.cluster.jmxexporter.enabledinbroker": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "msk.cluster.jmxexporter.enabledinbroker",
        "UpdateRequires": "No interruption"
    },
    "msk.cluster.nodeexporter.cfnproperties": [
        "EnabledInBroker",
        "UniqueKey"
    ],
    "msk.cluster.nodeexporter.enabledinbroker": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "msk.cluster.nodeexporter.enabledinbroker",
        "UpdateRequires": "No interruption"
    },
    "msk.cluster.openmonitoring.cfnproperties": [
        "Prometheus",
        "UniqueKey"
    ],
    "msk.cluster.openmonitoring.prometheus": {
        "Required": "Yes",
        "Type": "Prometheus",
        "UniqueKey": "msk.cluster.openmonitoring.prometheus",
        "UpdateRequires": "No interruption"
    },
    "msk.cluster.prometheus.cfnproperties": [
        "NodeExporter",
        "JmxExporter",
        "UniqueKey",
        "SampleValue"
    ],
    "msk.cluster.prometheus.jmxexporter": {
        "Required": "No",
        "Type": "JmxExporter",
        "UniqueKey": "msk.cluster.prometheus.jmxexporter",
        "UpdateRequires": "No interruption"
    },
    "msk.cluster.prometheus.nodeexporter": {
        "Required": "No",
        "Type": "NodeExporter",
        "UniqueKey": "msk.cluster.prometheus.nodeexporter",
        "UpdateRequires": "No interruption"
    },
    "msk.cluster.storageinfo.cfnproperties": [
        "EBSStorageInfo",
        "UniqueKey"
    ],
    "msk.cluster.storageinfo.ebsstorageinfo": {
        "Required": "No",
        "Type": "EBSStorageInfo",
        "UniqueKey": "msk.cluster.storageinfo.ebsstorageinfo",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.tls.certificateauthorityarnlist": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "msk.cluster.tls.certificateauthorityarnlist",
        "UpdateRequires": "Replacement"
    },
    "msk.cluster.tls.cfnproperties": [
        "CertificateAuthorityArnList",
        "UniqueKey"
    ],
    "opsworks.app.datasource.arn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.app.datasource.arn",
        "UpdateRequires": "No interruption"
    },
    "opsworks.app.datasource.cfnproperties": [
        "Type",
        "DatabaseName",
        "Arn",
        "UniqueKey"
    ],
    "opsworks.app.datasource.databasename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.app.datasource.databasename",
        "UpdateRequires": "No interruption"
    },
    "opsworks.app.datasource.type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.app.datasource.type",
        "UpdateRequires": "No interruption"
    },
    "opsworks.app.environment.cfnproperties": [
        "Value",
        "Secure",
        "Key",
        "UniqueKey"
    ],
    "opsworks.app.environment.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "opsworks.app.environment.key",
        "UpdateRequires": "No interruption"
    },
    "opsworks.app.environment.secure": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "opsworks.app.environment.secure",
        "UpdateRequires": "No interruption"
    },
    "opsworks.app.environment.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "opsworks.app.environment.value",
        "UpdateRequires": "No interruption"
    },
    "opsworks.app.sslconfiguration.certificate": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.app.sslconfiguration.certificate",
        "UpdateRequires": "No interruption"
    },
    "opsworks.app.sslconfiguration.cfnproperties": [
        "PrivateKey",
        "Chain",
        "Certificate",
        "UniqueKey"
    ],
    "opsworks.app.sslconfiguration.chain": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.app.sslconfiguration.chain",
        "UpdateRequires": "No interruption"
    },
    "opsworks.app.sslconfiguration.privatekey": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.app.sslconfiguration.privatekey",
        "UpdateRequires": "No interruption"
    },
    "opsworks.instance.blockdevicemapping.cfnproperties": [
        "VirtualName",
        "DeviceName",
        "NoDevice",
        "Ebs",
        "UniqueKey"
    ],
    "opsworks.instance.blockdevicemapping.devicename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.instance.blockdevicemapping.devicename",
        "UpdateRequires": "No interruption"
    },
    "opsworks.instance.blockdevicemapping.ebs": {
        "Required": "Conditional",
        "Type": "EbsBlockDevice",
        "UniqueKey": "opsworks.instance.blockdevicemapping.ebs",
        "UpdateRequires": "No interruption"
    },
    "opsworks.instance.blockdevicemapping.nodevice": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.instance.blockdevicemapping.nodevice",
        "UpdateRequires": "No interruption"
    },
    "opsworks.instance.blockdevicemapping.virtualname": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "opsworks.instance.blockdevicemapping.virtualname",
        "UpdateRequires": "No interruption"
    },
    "opsworks.instance.ebsblockdevice.cfnproperties": [
        "Iops",
        "DeleteOnTermination",
        "VolumeType",
        "VolumeSize",
        "SnapshotId",
        "UniqueKey"
    ],
    "opsworks.instance.ebsblockdevice.deleteontermination": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "opsworks.instance.ebsblockdevice.deleteontermination",
        "UpdateRequires": "No interruption"
    },
    "opsworks.instance.ebsblockdevice.iops": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.instance.ebsblockdevice.iops",
        "UpdateRequires": "No interruption"
    },
    "opsworks.instance.ebsblockdevice.snapshotid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.instance.ebsblockdevice.snapshotid",
        "UpdateRequires": "No interruption"
    },
    "opsworks.instance.ebsblockdevice.volumesize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.instance.ebsblockdevice.volumesize",
        "UpdateRequires": "No interruption"
    },
    "opsworks.instance.ebsblockdevice.volumetype": {
        "Allowed Values": "gp2 | io1 | standard",
        "AllowedValues": [
            "gp2",
            "io1",
            "standard"
        ],
        "Pattern": "^[gp2|io1|standard]",
        "Required": "No",
        "SampleValue": "gp2|io1|standard",
        "Type": "String",
        "UniqueKey": "opsworks.instance.ebsblockdevice.volumetype",
        "UpdateRequires": "No interruption"
    },
    "opsworks.instance.timebasedautoscaling.cfnproperties": [
        "Monday",
        "Tuesday",
        "Friday",
        "Wednesday",
        "Thursday",
        "Sunday",
        "Saturday",
        "UniqueKey"
    ],
    "opsworks.instance.timebasedautoscaling.friday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.friday",
        "UpdateRequires": "No interruption"
    },
    "opsworks.instance.timebasedautoscaling.monday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.monday",
        "UpdateRequires": "No interruption"
    },
    "opsworks.instance.timebasedautoscaling.saturday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.saturday",
        "UpdateRequires": "No interruption"
    },
    "opsworks.instance.timebasedautoscaling.sunday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.sunday",
        "UpdateRequires": "No interruption"
    },
    "opsworks.instance.timebasedautoscaling.thursday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.thursday",
        "UpdateRequires": "No interruption"
    },
    "opsworks.instance.timebasedautoscaling.tuesday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.tuesday",
        "UpdateRequires": "No interruption"
    },
    "opsworks.instance.timebasedautoscaling.wednesday": {
        "Required": "No",
        "Type": "Map of String",
        "UniqueKey": "opsworks.instance.timebasedautoscaling.wednesday",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.lifecycleeventconfiguration.cfnproperties": [
        "ShutdownEventConfiguration",
        "UniqueKey"
    ],
    "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration": {
        "Required": "No",
        "Type": "ShutdownEventConfiguration",
        "UniqueKey": "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration.cfnproperties": [
        "DelayUntilElbConnectionsDrained",
        "ExecutionTimeout",
        "UniqueKey",
        "SampleValue"
    ],
    "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration.delayuntilelbconnectionsdrained": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration.delayuntilelbconnectionsdrained",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration.executiontimeout": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.lifecycleeventconfiguration.shutdowneventconfiguration.executiontimeout",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.cfnproperties": [
        "CpuThreshold",
        "LoadThreshold",
        "ThresholdsWaitTime",
        "IgnoreMetricsTime",
        "InstanceCount",
        "MemoryThreshold",
        "UniqueKey"
    ],
    "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.cputhreshold": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.cputhreshold",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.ignoremetricstime": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[1,100]}$",
        "Required": "No",
        "SampleValue": "1...100",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.ignoremetricstime",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.instancecount": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.instancecount",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.loadthreshold": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.loadthreshold",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.memorythreshold": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.memorythreshold",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.thresholdswaittime": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[1,100]}$",
        "Required": "No",
        "SampleValue": "1...100",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.autoscalingthresholds.thresholdswaittime",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.loadbasedautoscaling.cfnproperties": [
        "DownScaling",
        "Enable",
        "UpScaling",
        "UniqueKey"
    ],
    "opsworks.layer.loadbasedautoscaling.downscaling": {
        "Required": "No",
        "Type": "AutoScalingThresholds",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.downscaling",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.loadbasedautoscaling.enable": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.enable",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.loadbasedautoscaling.upscaling": {
        "Required": "No",
        "Type": "AutoScalingThresholds",
        "UniqueKey": "opsworks.layer.loadbasedautoscaling.upscaling",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.recipes.cfnproperties": [
        "Undeploy",
        "Setup",
        "Configure",
        "Shutdown",
        "Deploy",
        "UniqueKey"
    ],
    "opsworks.layer.recipes.configure": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "opsworks.layer.recipes.configure",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.recipes.deploy": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "opsworks.layer.recipes.deploy",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.recipes.setup": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "opsworks.layer.recipes.setup",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.recipes.shutdown": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "opsworks.layer.recipes.shutdown",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.recipes.undeploy": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "opsworks.layer.recipes.undeploy",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.volumeconfiguration.cfnproperties": [
        "NumberOfDisks",
        "Encrypted",
        "RaidLevel",
        "VolumeType",
        "Iops",
        "MountPoint",
        "Size",
        "UniqueKey"
    ],
    "opsworks.layer.volumeconfiguration.encrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "opsworks.layer.volumeconfiguration.encrypted",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.volumeconfiguration.iops": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.volumeconfiguration.iops",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.volumeconfiguration.mountpoint": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.layer.volumeconfiguration.mountpoint",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.volumeconfiguration.numberofdisks": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.volumeconfiguration.numberofdisks",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.volumeconfiguration.raidlevel": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.volumeconfiguration.raidlevel",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.volumeconfiguration.size": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "opsworks.layer.volumeconfiguration.size",
        "UpdateRequires": "No interruption"
    },
    "opsworks.layer.volumeconfiguration.volumetype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.layer.volumeconfiguration.volumetype",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.chefconfiguration.berkshelfversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.chefconfiguration.berkshelfversion",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.chefconfiguration.cfnproperties": [
        "ManageBerkshelf",
        "BerkshelfVersion",
        "UniqueKey",
        "SampleValue"
    ],
    "opsworks.stack.chefconfiguration.manageberkshelf": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "opsworks.stack.chefconfiguration.manageberkshelf",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.elasticip.cfnproperties": [
        "Ip",
        "Name",
        "UniqueKey",
        "SampleValue"
    ],
    "opsworks.stack.elasticip.ip": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "opsworks.stack.elasticip.ip",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.elasticip.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.elasticip.name",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.rdsdbinstance.cfnproperties": [
        "DbUser",
        "RdsDbInstanceArn",
        "DbPassword",
        "UniqueKey"
    ],
    "opsworks.stack.rdsdbinstance.dbpassword": {
        "Required": "Yes",
        "SampleValue": "TODO-dbpassword",
        "UniqueKey": "opsworks.stack.rdsdbinstance.dbpassword",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.rdsdbinstance.dbuser": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "opsworks.stack.rdsdbinstance.dbuser",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.rdsdbinstance.rdsdbinstancearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "opsworks.stack.rdsdbinstance.rdsdbinstancearn",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.source.1.cfnproperties": [
        "Username",
        "SshKey",
        "Url",
        "Password",
        "Type",
        "Revision",
        "UniqueKey"
    ],
    "opsworks.stack.source.1.password": {
        "Required": "No",
        "SampleValue": "TODO-password",
        "UniqueKey": "opsworks.stack.source.1.password",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.source.1.revision": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.1.revision",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.source.1.sshkey": {
        "Required": "No",
        "SampleValue": "TODO-sshkey",
        "UniqueKey": "opsworks.stack.source.1.sshkey",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.source.1.type": {
        "Allowed Values": "archive | git | s3 | svn",
        "AllowedValues": [
            "archive",
            "git",
            "s3",
            "svn"
        ],
        "Pattern": "^[archive|git|s3|svn]",
        "Required": "No",
        "SampleValue": "archive|git|s3|svn",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.1.type",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.source.1.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.1.url",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.source.1.username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.1.username",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.source.cfnproperties": [
        "Username",
        "SshKey",
        "Url",
        "Password",
        "Type",
        "Revision",
        "UniqueKey"
    ],
    "opsworks.stack.source.password": {
        "Required": "No",
        "SampleValue": "TODO-password",
        "UniqueKey": "opsworks.stack.source.password",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.source.revision": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.revision",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.source.sshkey": {
        "Required": "No",
        "SampleValue": "TODO-sshkey",
        "UniqueKey": "opsworks.stack.source.sshkey",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.source.type": {
        "Allowed Values": "archive | git | s3 | svn",
        "AllowedValues": [
            "archive",
            "git",
            "s3",
            "svn"
        ],
        "Pattern": "^[archive|git|s3|svn]",
        "Required": "No",
        "SampleValue": "archive|git|s3|svn",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.type",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.source.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.url",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.source.username": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.source.username",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.stackconfigmanager.cfnproperties": [
        "Version",
        "Name",
        "UniqueKey",
        "SampleValue"
    ],
    "opsworks.stack.stackconfigmanager.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.stackconfigmanager.name",
        "UpdateRequires": "No interruption"
    },
    "opsworks.stack.stackconfigmanager.version": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "opsworks.stack.stackconfigmanager.version",
        "UpdateRequires": "No interruption"
    },
    "opsworkscm.server.engineattribute.cfnproperties": [
        "Name",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "opsworkscm.server.engineattribute.name": {
        "Maximum": "10000",
        "Pattern": "(?s).*",
        "Required": "No",
        "UniqueKey": "opsworkscm.server.engineattribute.name",
        "UpdateRequires": "No interruption"
    },
    "opsworkscm.server.engineattribute.value": {
        "Maximum": "10000",
        "Pattern": "(?s).*",
        "Required": "No",
        "UniqueKey": "opsworkscm.server.engineattribute.value",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.applicationsettings.campaignhook.cfnproperties": [
        "LambdaFunctionName",
        "WebUrl",
        "Mode",
        "UniqueKey"
    ],
    "pinpoint.applicationsettings.campaignhook.lambdafunctionname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.applicationsettings.campaignhook.lambdafunctionname",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.applicationsettings.campaignhook.mode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.applicationsettings.campaignhook.mode",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.applicationsettings.campaignhook.weburl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.applicationsettings.campaignhook.weburl",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.applicationsettings.limits.cfnproperties": [
        "MessagesPerSecond",
        "MaximumDuration",
        "Total",
        "Daily",
        "UniqueKey"
    ],
    "pinpoint.applicationsettings.limits.daily": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.applicationsettings.limits.daily",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.applicationsettings.limits.maximumduration": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.applicationsettings.limits.maximumduration",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.applicationsettings.limits.messagespersecond": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.applicationsettings.limits.messagespersecond",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.applicationsettings.limits.total": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.applicationsettings.limits.total",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.applicationsettings.quiettime.cfnproperties": [
        "Start",
        "End",
        "UniqueKey",
        "SampleValue"
    ],
    "pinpoint.applicationsettings.quiettime.end": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.applicationsettings.quiettime.end",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.applicationsettings.quiettime.start": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.applicationsettings.quiettime.start",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.attributedimension.attributetype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.attributedimension.attributetype",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.attributedimension.cfnproperties": [
        "Values",
        "AttributeType",
        "UniqueKey",
        "SampleValue"
    ],
    "pinpoint.campaign.attributedimension.values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "pinpoint.campaign.attributedimension.values",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.campaignemailmessage.body": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignemailmessage.body",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.campaignemailmessage.cfnproperties": [
        "Body",
        "FromAddress",
        "Title",
        "HtmlBody",
        "UniqueKey"
    ],
    "pinpoint.campaign.campaignemailmessage.fromaddress": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignemailmessage.fromaddress",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.campaignemailmessage.htmlbody": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignemailmessage.htmlbody",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.campaignemailmessage.title": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignemailmessage.title",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.campaigneventfilter.cfnproperties": [
        "FilterType",
        "Dimensions",
        "UniqueKey",
        "SampleValue"
    ],
    "pinpoint.campaign.campaigneventfilter.dimensions": {
        "Required": "No",
        "Type": "EventDimensions",
        "UniqueKey": "pinpoint.campaign.campaigneventfilter.dimensions",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.campaigneventfilter.filtertype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaigneventfilter.filtertype",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.campaignhook.cfnproperties": [
        "LambdaFunctionName",
        "WebUrl",
        "Mode",
        "UniqueKey"
    ],
    "pinpoint.campaign.campaignhook.lambdafunctionname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignhook.lambdafunctionname",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.campaignhook.mode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignhook.mode",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.campaignhook.weburl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignhook.weburl",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.campaignsmsmessage.body": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignsmsmessage.body",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.campaignsmsmessage.cfnproperties": [
        "Body",
        "SenderId",
        "MessageType",
        "UniqueKey"
    ],
    "pinpoint.campaign.campaignsmsmessage.messagetype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignsmsmessage.messagetype",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.campaignsmsmessage.senderid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.campaignsmsmessage.senderid",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.eventdimensions.attributes": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "pinpoint.campaign.eventdimensions.attributes",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.eventdimensions.cfnproperties": [
        "Metrics",
        "Attributes",
        "EventType",
        "UniqueKey"
    ],
    "pinpoint.campaign.eventdimensions.eventtype": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.campaign.eventdimensions.eventtype",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.eventdimensions.metrics": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "pinpoint.campaign.eventdimensions.metrics",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.limits.cfnproperties": [
        "MessagesPerSecond",
        "MaximumDuration",
        "Total",
        "Daily",
        "UniqueKey"
    ],
    "pinpoint.campaign.limits.daily": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.campaign.limits.daily",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.limits.maximumduration": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.campaign.limits.maximumduration",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.limits.messagespersecond": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.campaign.limits.messagespersecond",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.limits.total": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.campaign.limits.total",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.message.action": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.action",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.message.body": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.body",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.message.cfnproperties": [
        "Body",
        "MediaUrl",
        "Url",
        "ImageUrl",
        "ImageSmallIconUrl",
        "Title",
        "TimeToLive",
        "RawContent",
        "Action",
        "SilentPush",
        "JsonBody",
        "ImageIconUrl",
        "UniqueKey"
    ],
    "pinpoint.campaign.message.imageiconurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.imageiconurl",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.message.imagesmalliconurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.imagesmalliconurl",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.message.imageurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.imageurl",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.message.jsonbody": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.jsonbody",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.message.mediaurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.mediaurl",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.message.rawcontent": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.rawcontent",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.message.silentpush": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "pinpoint.campaign.message.silentpush",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.message.timetolive": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.campaign.message.timetolive",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.message.title": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.title",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.message.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.message.url",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.messageconfiguration.admmessage": {
        "Required": "No",
        "Type": "Message",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.admmessage",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.messageconfiguration.apnsmessage": {
        "Required": "No",
        "Type": "Message",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.apnsmessage",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.messageconfiguration.baidumessage": {
        "Required": "No",
        "Type": "Message",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.baidumessage",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.messageconfiguration.cfnproperties": [
        "BaiduMessage",
        "APNSMessage",
        "SMSMessage",
        "EmailMessage",
        "DefaultMessage",
        "GCMMessage",
        "ADMMessage",
        "UniqueKey"
    ],
    "pinpoint.campaign.messageconfiguration.defaultmessage": {
        "Required": "No",
        "Type": "Message",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.defaultmessage",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.messageconfiguration.emailmessage": {
        "Required": "No",
        "Type": "CampaignEmailMessage",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.emailmessage",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.messageconfiguration.gcmmessage": {
        "Required": "No",
        "Type": "Message",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.gcmmessage",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.messageconfiguration.smsmessage": {
        "Required": "No",
        "Type": "CampaignSmsMessage",
        "UniqueKey": "pinpoint.campaign.messageconfiguration.smsmessage",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.metricdimension.cfnproperties": [
        "ComparisonOperator",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "pinpoint.campaign.metricdimension.comparisonoperator": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.metricdimension.comparisonoperator",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.metricdimension.value": {
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "pinpoint.campaign.metricdimension.value",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.schedule.cfnproperties": [
        "EventFilter",
        "QuietTime",
        "Frequency",
        "IsLocalTime",
        "StartTime",
        "TimeZone",
        "EndTime",
        "UniqueKey"
    ],
    "pinpoint.campaign.schedule.endtime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.schedule.endtime",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.schedule.eventfilter": {
        "Required": "No",
        "Type": "CampaignEventFilter",
        "UniqueKey": "pinpoint.campaign.schedule.eventfilter",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.schedule.frequency": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.schedule.frequency",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.schedule.islocaltime": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "pinpoint.campaign.schedule.islocaltime",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.schedule.quiettime": {
        "Required": "No",
        "Type": "QuietTime",
        "UniqueKey": "pinpoint.campaign.schedule.quiettime",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.schedule.quiettime.cfnproperties": [
        "Start",
        "End",
        "UniqueKey",
        "SampleValue"
    ],
    "pinpoint.campaign.schedule.quiettime.end": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.schedule.quiettime.end",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.schedule.quiettime.start": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.schedule.quiettime.start",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.schedule.starttime": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.schedule.starttime",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.schedule.timezone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.schedule.timezone",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.setdimension.cfnproperties": [
        "DimensionType",
        "Values",
        "UniqueKey",
        "SampleValue"
    ],
    "pinpoint.campaign.setdimension.dimensiontype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.setdimension.dimensiontype",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.setdimension.values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "pinpoint.campaign.setdimension.values",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.writetreatmentresource.cfnproperties": [
        "SizePercent",
        "MessageConfiguration",
        "TreatmentName",
        "TreatmentDescription",
        "Schedule",
        "UniqueKey"
    ],
    "pinpoint.campaign.writetreatmentresource.messageconfiguration": {
        "Required": "No",
        "Type": "MessageConfiguration",
        "UniqueKey": "pinpoint.campaign.writetreatmentresource.messageconfiguration",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.writetreatmentresource.schedule": {
        "Required": "No",
        "Type": "Schedule",
        "UniqueKey": "pinpoint.campaign.writetreatmentresource.schedule",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.writetreatmentresource.sizepercent": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.campaign.writetreatmentresource.sizepercent",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.writetreatmentresource.treatmentdescription": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.writetreatmentresource.treatmentdescription",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.campaign.writetreatmentresource.treatmentname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.campaign.writetreatmentresource.treatmentname",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.action": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.action",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.body": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.body",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.cfnproperties": [
        "Body",
        "Sound",
        "Title",
        "Url",
        "ImageUrl",
        "SmallImageIconUrl",
        "Action",
        "ImageIconUrl",
        "UniqueKey"
    ],
    "pinpoint.pushtemplate.androidpushnotificationtemplate.imageiconurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.imageiconurl",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.imageurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.imageurl",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.smallimageiconurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.smallimageiconurl",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.sound": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.sound",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.title": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.title",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.pushtemplate.androidpushnotificationtemplate.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.androidpushnotificationtemplate.url",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.pushtemplate.apnspushnotificationtemplate.action": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.apnspushnotificationtemplate.action",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.pushtemplate.apnspushnotificationtemplate.body": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.apnspushnotificationtemplate.body",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.pushtemplate.apnspushnotificationtemplate.cfnproperties": [
        "Body",
        "Sound",
        "Title",
        "Url",
        "MediaUrl",
        "Action",
        "UniqueKey"
    ],
    "pinpoint.pushtemplate.apnspushnotificationtemplate.mediaurl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.apnspushnotificationtemplate.mediaurl",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.pushtemplate.apnspushnotificationtemplate.sound": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.apnspushnotificationtemplate.sound",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.pushtemplate.apnspushnotificationtemplate.title": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.apnspushnotificationtemplate.title",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.pushtemplate.apnspushnotificationtemplate.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.apnspushnotificationtemplate.url",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.pushtemplate.defaultpushnotificationtemplate.action": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.defaultpushnotificationtemplate.action",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.pushtemplate.defaultpushnotificationtemplate.body": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.defaultpushnotificationtemplate.body",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.pushtemplate.defaultpushnotificationtemplate.cfnproperties": [
        "Action",
        "Body",
        "Url",
        "Sound",
        "Title",
        "UniqueKey"
    ],
    "pinpoint.pushtemplate.defaultpushnotificationtemplate.sound": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.defaultpushnotificationtemplate.sound",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.pushtemplate.defaultpushnotificationtemplate.title": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.defaultpushnotificationtemplate.title",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.pushtemplate.defaultpushnotificationtemplate.url": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.pushtemplate.defaultpushnotificationtemplate.url",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.attributedimension.attributetype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.attributedimension.attributetype",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.attributedimension.cfnproperties": [
        "Values",
        "AttributeType",
        "UniqueKey",
        "SampleValue"
    ],
    "pinpoint.segment.attributedimension.values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "pinpoint.segment.attributedimension.values",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.attributes": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "pinpoint.segment.segmentdimensions.attributes",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.behavior": {
        "Required": "No",
        "Type": "Behavior",
        "UniqueKey": "pinpoint.segment.segmentdimensions.behavior",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.behavior.cfnproperties": [
        "Recency",
        "UniqueKey"
    ],
    "pinpoint.segment.segmentdimensions.behavior.recency": {
        "Required": "No",
        "Type": "Recency",
        "UniqueKey": "pinpoint.segment.segmentdimensions.behavior.recency",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.behavior.recency.cfnproperties": [
        "Duration",
        "RecencyType",
        "UniqueKey",
        "SampleValue"
    ],
    "pinpoint.segment.segmentdimensions.behavior.recency.duration": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.segmentdimensions.behavior.recency.duration",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.behavior.recency.recencytype": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.segmentdimensions.behavior.recency.recencytype",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.cfnproperties": [
        "Demographic",
        "Metrics",
        "UserAttributes",
        "Location",
        "Behavior",
        "Attributes",
        "UniqueKey"
    ],
    "pinpoint.segment.segmentdimensions.demographic": {
        "Required": "No",
        "Type": "Demographic",
        "UniqueKey": "pinpoint.segment.segmentdimensions.demographic",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.demographic.appversion": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.demographic.appversion",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.demographic.cfnproperties": [
        "Make",
        "AppVersion",
        "Platform",
        "DeviceType",
        "Model",
        "Channel",
        "UniqueKey"
    ],
    "pinpoint.segment.segmentdimensions.demographic.channel": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.demographic.channel",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.demographic.devicetype": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.demographic.devicetype",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.demographic.make": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.demographic.make",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.demographic.model": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.demographic.model",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.demographic.platform": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.demographic.platform",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.location": {
        "Required": "No",
        "Type": "Location",
        "UniqueKey": "pinpoint.segment.segmentdimensions.location",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.location.cfnproperties": [
        "Country",
        "GPSPoint",
        "UniqueKey",
        "SampleValue"
    ],
    "pinpoint.segment.segmentdimensions.location.country": {
        "Required": "No",
        "Type": "SetDimension",
        "UniqueKey": "pinpoint.segment.segmentdimensions.location.country",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.location.gpspoint": {
        "Required": "No",
        "Type": "GPSPoint",
        "UniqueKey": "pinpoint.segment.segmentdimensions.location.gpspoint",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.location.gpspoint.cfnproperties": [
        "RangeInKilometers",
        "Coordinates",
        "UniqueKey",
        "SampleValue"
    ],
    "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates": {
        "Required": "Yes",
        "Type": "Coordinates",
        "UniqueKey": "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates.cfnproperties": [
        "Latitude",
        "Longitude",
        "UniqueKey",
        "SampleValue"
    ],
    "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates.latitude": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates.latitude",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates.longitude": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "pinpoint.segment.segmentdimensions.location.gpspoint.coordinates.longitude",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.location.gpspoint.rangeinkilometers": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "pinpoint.segment.segmentdimensions.location.gpspoint.rangeinkilometers",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.metrics": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "pinpoint.segment.segmentdimensions.metrics",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentdimensions.userattributes": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "pinpoint.segment.segmentdimensions.userattributes",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentgroups.cfnproperties": [
        "Include",
        "Groups",
        "UniqueKey",
        "SampleValue"
    ],
    "pinpoint.segment.segmentgroups.groups": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "pinpoint.segment.segmentgroups.groups",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentgroups.groups.cfnproperties": [
        "SourceSegments",
        "Type",
        "Dimensions",
        "SourceType",
        "UniqueKey"
    ],
    "pinpoint.segment.segmentgroups.groups.dimensions": {
        "Required": "No",
        "Type": "List of [SegmentDimensions",
        "UniqueKey": "pinpoint.segment.segmentgroups.groups.dimensions",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentgroups.groups.sourcesegments": {
        "Required": "No",
        "SampleValue": "TODO-sourcesegments",
        "UniqueKey": "pinpoint.segment.segmentgroups.groups.sourcesegments",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentgroups.groups.sourcesegments.cfnproperties": [
        "Version",
        "Id",
        "UniqueKey",
        "SampleValue"
    ],
    "pinpoint.segment.segmentgroups.groups.sourcesegments.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.segmentgroups.groups.sourcesegments.id",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentgroups.groups.sourcesegments.version": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "pinpoint.segment.segmentgroups.groups.sourcesegments.version",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentgroups.groups.sourcetype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.segmentgroups.groups.sourcetype",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentgroups.groups.type": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.segmentgroups.groups.type",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.segmentgroups.include": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.segmentgroups.include",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.setdimension.cfnproperties": [
        "DimensionType",
        "Values",
        "UniqueKey",
        "SampleValue"
    ],
    "pinpoint.segment.setdimension.dimensiontype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpoint.segment.setdimension.dimensiontype",
        "UpdateRequires": "No interruption"
    },
    "pinpoint.segment.setdimension.values": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "pinpoint.segment.setdimension.values",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.configurationset.deliveryoptions.cfnproperties": [
        "SendingPoolName",
        "UniqueKey"
    ],
    "pinpointemail.configurationset.deliveryoptions.sendingpoolname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationset.deliveryoptions.sendingpoolname",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.configurationset.reputationoptions.cfnproperties": [
        "ReputationMetricsEnabled",
        "UniqueKey"
    ],
    "pinpointemail.configurationset.reputationoptions.reputationmetricsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "pinpointemail.configurationset.reputationoptions.reputationmetricsenabled",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.configurationset.sendingoptions.cfnproperties": [
        "SendingEnabled",
        "UniqueKey"
    ],
    "pinpointemail.configurationset.sendingoptions.sendingenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "pinpointemail.configurationset.sendingoptions.sendingenabled",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.configurationset.tags.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "pinpointemail.configurationset.tags.key": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationset.tags.key",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.configurationset.tags.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationset.tags.value",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.configurationset.trackingoptions.cfnproperties": [
        "CustomRedirectDomain",
        "UniqueKey"
    ],
    "pinpointemail.configurationset.trackingoptions.customredirectdomain": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationset.trackingoptions.customredirectdomain",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.configurationseteventdestination.cloudwatchdestination.cfnproperties": [
        "DimensionConfigurations",
        "UniqueKey"
    ],
    "pinpointemail.configurationseteventdestination.cloudwatchdestination.dimensionconfigurations": {
        "Required": "No",
        "Type": "List of [DimensionConfiguration",
        "UniqueKey": "pinpointemail.configurationseteventdestination.cloudwatchdestination.dimensionconfigurations",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.configurationseteventdestination.dimensionconfiguration.cfnproperties": [
        "DimensionName",
        "DimensionValueSource",
        "DefaultDimensionValue",
        "UniqueKey"
    ],
    "pinpointemail.configurationseteventdestination.dimensionconfiguration.defaultdimensionvalue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.dimensionconfiguration.defaultdimensionvalue",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.configurationseteventdestination.dimensionconfiguration.dimensionname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.dimensionconfiguration.dimensionname",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.configurationseteventdestination.dimensionconfiguration.dimensionvaluesource": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.dimensionconfiguration.dimensionvaluesource",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.configurationseteventdestination.eventdestination.cfnproperties": [
        "CloudWatchDestination",
        "MatchingEventTypes",
        "Enabled",
        "SnsDestination",
        "KinesisFirehoseDestination",
        "PinpointDestination",
        "UniqueKey"
    ],
    "pinpointemail.configurationseteventdestination.eventdestination.cloudwatchdestination": {
        "Required": "No",
        "Type": "CloudWatchDestination",
        "UniqueKey": "pinpointemail.configurationseteventdestination.eventdestination.cloudwatchdestination",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.configurationseteventdestination.eventdestination.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "pinpointemail.configurationseteventdestination.eventdestination.enabled",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.configurationseteventdestination.eventdestination.kinesisfirehosedestination": {
        "Required": "No",
        "Type": "KinesisFirehoseDestination",
        "UniqueKey": "pinpointemail.configurationseteventdestination.eventdestination.kinesisfirehosedestination",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.configurationseteventdestination.eventdestination.matchingeventtypes": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.eventdestination.matchingeventtypes",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.configurationseteventdestination.eventdestination.pinpointdestination": {
        "Required": "No",
        "Type": "PinpointDestination",
        "UniqueKey": "pinpointemail.configurationseteventdestination.eventdestination.pinpointdestination",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.configurationseteventdestination.eventdestination.snsdestination": {
        "Required": "No",
        "Type": "SnsDestination",
        "UniqueKey": "pinpointemail.configurationseteventdestination.eventdestination.snsdestination",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.configurationseteventdestination.kinesisfirehosedestination.cfnproperties": [
        "DeliveryStreamArn",
        "IamRoleArn",
        "UniqueKey",
        "SampleValue"
    ],
    "pinpointemail.configurationseteventdestination.kinesisfirehosedestination.deliverystreamarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.kinesisfirehosedestination.deliverystreamarn",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.configurationseteventdestination.kinesisfirehosedestination.iamrolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.kinesisfirehosedestination.iamrolearn",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.configurationseteventdestination.pinpointdestination.applicationarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.pinpointdestination.applicationarn",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.configurationseteventdestination.pinpointdestination.cfnproperties": [
        "ApplicationArn",
        "UniqueKey"
    ],
    "pinpointemail.configurationseteventdestination.snsdestination.cfnproperties": [
        "TopicArn",
        "UniqueKey"
    ],
    "pinpointemail.configurationseteventdestination.snsdestination.topicarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "pinpointemail.configurationseteventdestination.snsdestination.topicarn",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.dedicatedippool.tags.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "pinpointemail.dedicatedippool.tags.key": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "pinpointemail.dedicatedippool.tags.key",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.dedicatedippool.tags.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.dedicatedippool.tags.value",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.identity.mailfromattributes.behavioronmxfailure": {
        "AllowedValues": [
            "REJECT_MESSAGE",
            "USE_DEFAULT_VALUE"
        ],
        "Pattern": "^[REJECT_MESSAGE|USE_DEFAULT_VALUE]",
        "Required": "No",
        "SampleValue": "REJECT_MESSAGE|USE_DEFAULT_VALUE",
        "UniqueKey": "pinpointemail.identity.mailfromattributes.behavioronmxfailure",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.identity.mailfromattributes.cfnproperties": [
        "MailFromDomain",
        "BehaviorOnMxFailure",
        "UniqueKey",
        "SampleValue"
    ],
    "pinpointemail.identity.mailfromattributes.mailfromdomain": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.identity.mailfromattributes.mailfromdomain",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.identity.tags.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "pinpointemail.identity.tags.key": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "pinpointemail.identity.tags.key",
        "UpdateRequires": "No interruption"
    },
    "pinpointemail.identity.tags.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "pinpointemail.identity.tags.value",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.allocatedstorage": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.allocatedstorage",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.allowmajorversionupgrade": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "rds.database.instance.allowmajorversionupgrade",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.associatedroles": {
        "Required": "No",
        "Type": "List of [DBInstanceRole",
        "UniqueKey": "rds.database.instance.associatedroles",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.autominorversionupgrade": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "rds.database.instance.autominorversionupgrade",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.availabilityzone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.availabilityzone",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.backupretentionperiod": {
        "Required": "No",
        "SampleValue": "TODO-backupretentionperiod",
        "UniqueKey": "rds.database.instance.backupretentionperiod",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.cacertificateidentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.cacertificateidentifier",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.cfnproperties": [
        "DBParameterGroupName",
        "EnablePerformanceInsights",
        "AllowMajorVersionUpgrade",
        "DomainIAMRoleName",
        "MasterUsername",
        "MonitoringInterval",
        "LicenseModel",
        "EnableIAMDatabaseAuthentication",
        "VPCSecurityGroups",
        "CopyTagsToSnapshot",
        "Engine",
        "MultiAZ",
        "SourceDBInstanceIdentifier",
        "DBSecurityGroups",
        "PubliclyAccessible",
        "UseDefaultProcessorFeatures",
        "Tags",
        "PerformanceInsightsRetentionPeriod",
        "AutoMinorVersionUpgrade",
        "PreferredBackupWindow",
        "PromotionTier",
        "DBSnapshotIdentifier",
        "AllocatedStorage",
        "DBInstanceClass",
        "BackupRetentionPeriod",
        "DBName",
        "PreferredMaintenanceWindow",
        "SourceRegion",
        "PerformanceInsightsKMSKeyId",
        "Domain",
        "EngineVersion",
        "ProcessorFeatures",
        "MaxAllocatedStorage",
        "DBSubnetGroupName",
        "OptionGroupName",
        "DeletionProtection",
        "CharacterSetName",
        "AvailabilityZone",
        "DeleteAutomatedBackups",
        "MonitoringRoleArn",
        "DBClusterIdentifier",
        "StorageType",
        "CACertificateIdentifier",
        "MasterUserPassword",
        "Iops",
        "StorageEncrypted",
        "AssociatedRoles",
        "KmsKeyId",
        "Timezone",
        "EnableCloudwatchLogsExports",
        "Port",
        "DBInstanceIdentifier",
        "UniqueKey"
    ],
    "rds.database.instance.charactersetname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.charactersetname",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.copytagstosnapshot": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "rds.database.instance.copytagstosnapshot",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.dbclusteridentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.dbclusteridentifier",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.dbinstanceclass": {
        "Required": "Yes",
        "SampleValue": "TODO-dbinstanceclass",
        "UniqueKey": "rds.database.instance.dbinstanceclass",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.dbinstanceidentifier": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.dbinstanceidentifier",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.dbname": {
        "Required": "No",
        "SampleValue": "TODO-dbname",
        "UniqueKey": "rds.database.instance.dbname",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.dbparametergroupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.dbparametergroupname",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.dbsecuritygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "rds.database.instance.dbsecuritygroups",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.dbsnapshotidentifier": {
        "Required": "No",
        "SampleValue": "TODO-dbsnapshotidentifier",
        "UniqueKey": "rds.database.instance.dbsnapshotidentifier",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.dbsubnetgroupname": {
        "Required": "No",
        "SampleValue": "TODO-dbsubnetgroupname",
        "UniqueKey": "rds.database.instance.dbsubnetgroupname",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.deleteautomatedbackups": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "rds.database.instance.deleteautomatedbackups",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.deletionprotection": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "rds.database.instance.deletionprotection",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.domain": {
        "Required": "No",
        "SampleValue": "TODO-domain",
        "UniqueKey": "rds.database.instance.domain",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.domainiamrolename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.domainiamrolename",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.enablecloudwatchlogsexports": {
        "Required": "No",
        "SampleValue": "TODO-enablecloudwatchlogsexports",
        "UniqueKey": "rds.database.instance.enablecloudwatchlogsexports",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.enableiamdatabaseauthentication": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "rds.database.instance.enableiamdatabaseauthentication",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.enableperformanceinsights": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "rds.database.instance.enableperformanceinsights",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.engine": {
        "Required": "No",
        "SampleValue": "TODO-engine",
        "UniqueKey": "rds.database.instance.engine",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.engineversion": {
        "Required": "No",
        "SampleValue": "TODO-engineversion",
        "UniqueKey": "rds.database.instance.engineversion",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.iops": {
        "Required": "No",
        "SampleValue": "TODO-iops",
        "UniqueKey": "rds.database.instance.iops",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.kmskeyid": {
        "Required": "No",
        "SampleValue": "TODO-kmskeyid",
        "UniqueKey": "rds.database.instance.kmskeyid",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.licensemodel": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.licensemodel",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.masterusername": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.masterusername",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.masteruserpassword": {
        "Required": "No",
        "SampleValue": "TODO-masteruserpassword",
        "UniqueKey": "rds.database.instance.masteruserpassword",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.maxallocatedstorage": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.database.instance.maxallocatedstorage",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.monitoringinterval": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.database.instance.monitoringinterval",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.monitoringrolearn": {
        "Required": "No",
        "SampleValue": "TODO-monitoringrolearn",
        "UniqueKey": "rds.database.instance.monitoringrolearn",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.multiaz": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "rds.database.instance.multiaz",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.optiongroupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.optiongroupname",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.performanceinsightskmskeyid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.performanceinsightskmskeyid",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.performanceinsightsretentionperiod": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.database.instance.performanceinsightsretentionperiod",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.port": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.port",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.preferredbackupwindow": {
        "Required": "No",
        "SampleValue": "TODO-preferredbackupwindow",
        "UniqueKey": "rds.database.instance.preferredbackupwindow",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.preferredmaintenancewindow": {
        "Required": "No",
        "SampleValue": "TODO-preferredmaintenancewindow",
        "UniqueKey": "rds.database.instance.preferredmaintenancewindow",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.processorfeatures": {
        "Required": "No",
        "Type": "List of [ProcessorFeature",
        "UniqueKey": "rds.database.instance.processorfeatures",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.promotiontier": {
        "Required": "No",
        "SampleValue": "TODO-promotiontier",
        "UniqueKey": "rds.database.instance.promotiontier",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.publiclyaccessible": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "rds.database.instance.publiclyaccessible",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.sourcedbinstanceidentifier": {
        "Required": "No",
        "SampleValue": "TODO-sourcedbinstanceidentifier",
        "UniqueKey": "rds.database.instance.sourcedbinstanceidentifier",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.sourceregion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.sourceregion",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.storageencrypted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "rds.database.instance.storageencrypted",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.storagetype": {
        "Required": "No",
        "SampleValue": "TODO-storagetype",
        "UniqueKey": "rds.database.instance.storagetype",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "rds.database.instance.tags",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.timezone": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.database.instance.timezone",
        "UpdateRequires": "Replacement"
    },
    "rds.database.instance.usedefaultprocessorfeatures": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "rds.database.instance.usedefaultprocessorfeatures",
        "UpdateRequires": "No interruption"
    },
    "rds.database.instance.vpcsecuritygroups": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "rds.database.instance.vpcsecuritygroups",
        "UpdateRequires": "No interruption"
    },
    "rds.dbcluster.dbclusterrole.cfnproperties": [
        "RoleArn",
        "FeatureName",
        "UniqueKey",
        "SampleValue"
    ],
    "rds.dbcluster.dbclusterrole.featurename": {
        "Required": "No",
        "SampleValue": "TODO-featurename",
        "UniqueKey": "rds.dbcluster.dbclusterrole.featurename",
        "UpdateRequires": "No interruption"
    },
    "rds.dbcluster.dbclusterrole.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "rds.dbcluster.dbclusterrole.rolearn",
        "UpdateRequires": "No interruption"
    },
    "rds.dbcluster.scalingconfiguration.autopause": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "rds.dbcluster.scalingconfiguration.autopause",
        "UpdateRequires": "No interruption"
    },
    "rds.dbcluster.scalingconfiguration.cfnproperties": [
        "MinCapacity",
        "AutoPause",
        "MaxCapacity",
        "SecondsUntilAutoPause",
        "UniqueKey"
    ],
    "rds.dbcluster.scalingconfiguration.maxcapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.dbcluster.scalingconfiguration.maxcapacity",
        "UpdateRequires": "No interruption"
    },
    "rds.dbcluster.scalingconfiguration.mincapacity": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.dbcluster.scalingconfiguration.mincapacity",
        "UpdateRequires": "No interruption"
    },
    "rds.dbcluster.scalingconfiguration.secondsuntilautopause": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.dbcluster.scalingconfiguration.secondsuntilautopause",
        "UpdateRequires": "No interruption"
    },
    "rds.dbinstance.dbinstancerole.cfnproperties": [
        "RoleArn",
        "FeatureName",
        "UniqueKey",
        "SampleValue"
    ],
    "rds.dbinstance.dbinstancerole.featurename": {
        "Required": "Yes",
        "SampleValue": "TODO-featurename",
        "UniqueKey": "rds.dbinstance.dbinstancerole.featurename",
        "UpdateRequires": "No interruption"
    },
    "rds.dbinstance.dbinstancerole.rolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "rds.dbinstance.dbinstancerole.rolearn",
        "UpdateRequires": "No interruption"
    },
    "rds.dbinstance.processorfeature.cfnproperties": [
        "Name",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "rds.dbinstance.processorfeature.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.dbinstance.processorfeature.name",
        "UpdateRequires": "No interruption"
    },
    "rds.dbinstance.processorfeature.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.dbinstance.processorfeature.value",
        "UpdateRequires": "No interruption"
    },
    "rds.dbparametergroup.aws rds describe-db-engine-versions --query \"dbengineversions[].dbparametergroupfamily\"": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "rds.dbparametergroup.aws rds describe-db-engine-versions --query \"dbengineversions[].dbparametergroupfamily\"",
        "UpdateRequires": "No interruption"
    },
    "rds.dbparametergroup.cfnproperties": [
        "Parameters",
        "aws rds describe-db-engine-versions --query \"DBEngineVersions[].DBParameterGroupFamily\"",
        "Description",
        "Family",
        "Tags",
        "UniqueKey"
    ],
    "rds.dbparametergroup.description": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "rds.dbparametergroup.description",
        "UpdateRequires": "No interruption"
    },
    "rds.dbparametergroup.family": {
        "UniqueKey": "rds.dbparametergroup.family"
    },
    "rds.dbparametergroup.parameters": {
        "Required": "No",
        "SampleValue": "TODO-parameters",
        "UniqueKey": "rds.dbparametergroup.parameters",
        "UpdateRequires": "No interruption"
    },
    "rds.dbparametergroup.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "rds.dbparametergroup.tags",
        "UpdateRequires": "No interruption"
    },
    "rds.optiongroup.optionconfigurations.cfnproperties": [
        "DBSecurityGroupMemberships",
        "OptionName",
        "VpcSecurityGroupMemberships",
        "OptionSettings",
        "OptionVersion",
        "Port",
        "UniqueKey"
    ],
    "rds.optiongroup.optionconfigurations.dbsecuritygroupmemberships": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "rds.optiongroup.optionconfigurations.dbsecuritygroupmemberships",
        "UpdateRequires": "No interruption"
    },
    "rds.optiongroup.optionconfigurations.optionname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "rds.optiongroup.optionconfigurations.optionname",
        "UpdateRequires": "No interruption"
    },
    "rds.optiongroup.optionconfigurations.optionsettings": {
        "Required": "No",
        "Type": "List of [OptionSetting",
        "UniqueKey": "rds.optiongroup.optionconfigurations.optionsettings",
        "UpdateRequires": "No interruption"
    },
    "rds.optiongroup.optionconfigurations.optionsettings.cfnproperties": [
        "Name",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "rds.optiongroup.optionconfigurations.optionsettings.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.optiongroup.optionconfigurations.optionsettings.name",
        "UpdateRequires": "No interruption"
    },
    "rds.optiongroup.optionconfigurations.optionsettings.value": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.optiongroup.optionconfigurations.optionsettings.value",
        "UpdateRequires": "No interruption"
    },
    "rds.optiongroup.optionconfigurations.optionversion": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.optiongroup.optionconfigurations.optionversion",
        "UpdateRequires": "No interruption"
    },
    "rds.optiongroup.optionconfigurations.port": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "rds.optiongroup.optionconfigurations.port",
        "UpdateRequires": "No interruption"
    },
    "rds.optiongroup.optionconfigurations.vpcsecuritygroupmemberships": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "rds.optiongroup.optionconfigurations.vpcsecuritygroupmemberships",
        "UpdateRequires": "No interruption"
    },
    "rds.security.group.cfnproperties": [
        "DBSecurityGroupIngress",
        "EC2VpcId",
        "GroupDescription",
        "Tags",
        "UniqueKey"
    ],
    "rds.security.group.dbsecuritygroupingress": {
        "Required": "Yes",
        "Type": "List of [Ingress",
        "UniqueKey": "rds.security.group.dbsecuritygroupingress",
        "UpdateRequires": "No interruption"
    },
    "rds.security.group.ec2vpcid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.security.group.ec2vpcid",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.groupdescription": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "rds.security.group.groupdescription",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.rule.cfnproperties": [
        "EC2SecurityGroupName",
        "EC2SecurityGroupOwnerId",
        "EC2SecurityGroupId",
        "CIDRIP",
        "UniqueKey"
    ],
    "rds.security.group.rule.cidrip": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.security.group.rule.cidrip",
        "UpdateRequires": "No interruption"
    },
    "rds.security.group.rule.ec2securitygroupid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.security.group.rule.ec2securitygroupid",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.rule.ec2securitygroupname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.security.group.rule.ec2securitygroupname",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.rule.ec2securitygroupownerid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "rds.security.group.rule.ec2securitygroupownerid",
        "UpdateRequires": "Replacement"
    },
    "rds.security.group.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "rds.security.group.tags",
        "UpdateRequires": "No interruption"
    },
    "redshift.cluster.loggingproperties": [
        "S3KeyPrefix",
        "BucketName",
        "UniqueKey",
        "SampleValue"
    ],
    "redshift.cluster.loggingproperties.bucketname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "redshift.cluster.loggingproperties.bucketname",
        "UpdateRequires": "No interruption"
    },
    "redshift.cluster.loggingproperties.cfnproperties": [
        "S3KeyPrefix",
        "BucketName",
        "UniqueKey",
        "SampleValue"
    ],
    "redshift.cluster.loggingproperties.s3keyprefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "redshift.cluster.loggingproperties.s3keyprefix",
        "UpdateRequires": "No interruption"
    },
    "robomaker.robotapplication.robotsoftwaresuite.cfnproperties": [
        "Version",
        "Name",
        "UniqueKey",
        "SampleValue"
    ],
    "robomaker.robotapplication.robotsoftwaresuite.name": {
        "Allowed Values": "ROS | ROS2",
        "AllowedValues": [
            "ROS",
            "ROS2"
        ],
        "Pattern": "^[ROS|ROS2]",
        "Required": "Yes",
        "SampleValue": "ROS|ROS2",
        "Type": "String",
        "UniqueKey": "robomaker.robotapplication.robotsoftwaresuite.name",
        "UpdateRequires": "No interruption"
    },
    "robomaker.robotapplication.robotsoftwaresuite.version": {
        "Allowed Values": "Dashing | Kinetic | Melodic",
        "AllowedValues": [
            "Dashing",
            "Kinetic",
            "Melodic"
        ],
        "Pattern": "^[Dashing|Kinetic|Melodic]",
        "Required": "Yes",
        "SampleValue": "Dashing|Kinetic|Melodic",
        "Type": "String",
        "UniqueKey": "robomaker.robotapplication.robotsoftwaresuite.version",
        "UpdateRequires": "No interruption"
    },
    "robomaker.robotapplication.sourceconfig.architecture": {
        "Allowed Values": "ARM64 | ARMHF | X86_64",
        "AllowedValues": [
            "ARM64",
            "ARMHF",
            "X86_64"
        ],
        "Pattern": "^[ARM64|ARMHF|X86_64]",
        "Required": "Yes",
        "SampleValue": "ARM64|ARMHF|X86_64",
        "Type": "String",
        "UniqueKey": "robomaker.robotapplication.sourceconfig.architecture",
        "UpdateRequires": "No interruption"
    },
    "robomaker.robotapplication.sourceconfig.cfnproperties": [
        "S3Bucket",
        "S3Key",
        "Architecture",
        "UniqueKey"
    ],
    "robomaker.robotapplication.sourceconfig.s3bucket": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "[a-z0-9][a-z0-9.\\-]*[a-z0-9]",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.robotapplication.sourceconfig.s3bucket",
        "UpdateRequires": "No interruption"
    },
    "robomaker.robotapplication.sourceconfig.s3key": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.robotapplication.sourceconfig.s3key",
        "UpdateRequires": "No interruption"
    },
    "robomaker.simulationapplication.renderingengine.cfnproperties": [
        "Version",
        "Name",
        "UniqueKey",
        "SampleValue"
    ],
    "robomaker.simulationapplication.renderingengine.name": {
        "Allowed Values": "OGRE",
        "AllowedValues": [
            "OGRE"
        ],
        "Pattern": "^[OGRE]",
        "Required": "Yes",
        "SampleValue": "OGRE",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.renderingengine.name",
        "UpdateRequires": "No interruption"
    },
    "robomaker.simulationapplication.renderingengine.version": {
        "Pattern": "1.x",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.renderingengine.version",
        "UpdateRequires": "No interruption"
    },
    "robomaker.simulationapplication.robotsoftwaresuite.cfnproperties": [
        "Version",
        "Name",
        "UniqueKey",
        "SampleValue"
    ],
    "robomaker.simulationapplication.robotsoftwaresuite.name": {
        "Allowed Values": "ROS | ROS2",
        "AllowedValues": [
            "ROS",
            "ROS2"
        ],
        "Pattern": "^[ROS|ROS2]",
        "Required": "Yes",
        "SampleValue": "ROS|ROS2",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.robotsoftwaresuite.name",
        "UpdateRequires": "No interruption"
    },
    "robomaker.simulationapplication.robotsoftwaresuite.version": {
        "Allowed Values": "Dashing | Kinetic | Melodic",
        "AllowedValues": [
            "Dashing",
            "Kinetic",
            "Melodic"
        ],
        "Pattern": "^[Dashing|Kinetic|Melodic]",
        "Required": "Yes",
        "SampleValue": "Dashing|Kinetic|Melodic",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.robotsoftwaresuite.version",
        "UpdateRequires": "No interruption"
    },
    "robomaker.simulationapplication.simulationsoftwaresuite.cfnproperties": [
        "Version",
        "Name",
        "UniqueKey",
        "SampleValue"
    ],
    "robomaker.simulationapplication.simulationsoftwaresuite.name": {
        "Allowed Values": "Gazebo | RosbagPlay",
        "AllowedValues": [
            "Gazebo",
            "RosbagPlay"
        ],
        "Pattern": "^[Gazebo|RosbagPlay]",
        "Required": "Yes",
        "SampleValue": "Gazebo|RosbagPlay",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.simulationsoftwaresuite.name",
        "UpdateRequires": "No interruption"
    },
    "robomaker.simulationapplication.simulationsoftwaresuite.version": {
        "Pattern": "7|9|Kinetic|Melodic|Dashing",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.simulationsoftwaresuite.version",
        "UpdateRequires": "No interruption"
    },
    "robomaker.simulationapplication.sourceconfig.architecture": {
        "Allowed Values": "ARM64 | ARMHF | X86_64",
        "AllowedValues": [
            "ARM64",
            "ARMHF",
            "X86_64"
        ],
        "Pattern": "^[ARM64|ARMHF|X86_64]",
        "Required": "Yes",
        "SampleValue": "ARM64|ARMHF|X86_64",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.sourceconfig.architecture",
        "UpdateRequires": "No interruption"
    },
    "robomaker.simulationapplication.sourceconfig.cfnproperties": [
        "S3Bucket",
        "S3Key",
        "Architecture",
        "UniqueKey"
    ],
    "robomaker.simulationapplication.sourceconfig.s3bucket": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "[a-z0-9][a-z0-9.\\-]*[a-z0-9]",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.sourceconfig.s3bucket",
        "UpdateRequires": "No interruption"
    },
    "robomaker.simulationapplication.sourceconfig.s3key": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": ".*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "robomaker.simulationapplication.sourceconfig.s3key",
        "UpdateRequires": "No interruption"
    },
    "route53.aliastarget.1.cfnproperties": [
        "EvaluateTargetHealth",
        "HostedZoneId",
        "DNSName",
        "UniqueKey"
    ],
    "route53.aliastarget.1.dnsname": {
        "Alias records only:* The value that you specify depends on where you want to route queries:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the applicable domain name for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalDomainName`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionDomainName`\\. This is the name of the associated CloudFront distribution, such as `da1b2c3d4e5.cloudfront.net`\\.\nThe name of the record that you're creating must match a custom domain name for your API, such as `api.example.com`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nEnter the API endpoint for the interface endpoint, such as `vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com`\\. For edge\\-optimized APIs, this is the domain name for the corresponding CloudFront distribution\\. You can get the value of `DnsName` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify the domain name that CloudFront assigned when you created your distribution\\.  \nYour CloudFront distribution must include an alternate domain name that matches the name of the record\\. For example, if the name of the record is *acme\\.example\\.com*, your CloudFront distribution must include *acme\\.example\\.com* as one of the alternate domain names\\. For more information, see [Using Alternate Domain Names \\(CNAMEs\\)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html) in the *Amazon CloudFront Developer Guide*\\.  \nYou can't create a record in a private hosted zone to route traffic to a CloudFront distribution\\.  \nFor failover alias records, you can't specify a CloudFront distribution for both the primary and secondary records\\. A distribution must include an alternate domain name that matches the name of the record\\. However, the primary and secondary records have the same name, and you can't include the same alternate domain name in more than one distribution\\.   \nElastic Beanstalk environment  \nIf the domain name for your Elastic Beanstalk environment includes the region that you deployed the environment in, you can create an alias record that routes traffic to the environment\\. For example, the domain name `my-environment.us-west-2.elasticbeanstalk.com` is a regionalized domain name\\.   \nFor environments that were created before early 2016, the domain name doesn't include the region\\. To route traffic to these environments, you must create a CNAME record instead of an alias record\\. Note that you can't create a CNAME record for the root domain name\\. For example, if your domain name is example\\.com, you can create a record that routes traffic for acme\\.example\\.com to your Elastic Beanstalk environment, but you can't create a record that routes traffic for example\\.com to your Elastic Beanstalk environment\\.\nFor Elastic Beanstalk environments that have regionalized subdomains, specify the `CNAME` attribute for the environment\\. You can use the following methods to get the value of the CNAME attribute:  \n+ *AWS Management Console": "For information about how to get the value by using the console, see [Using Custom Domains with AWS Elastic Beanstalk](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customdomains.html) in the *AWS Elastic Beanstalk Developer Guide*\\.\n+ *Elastic Beanstalk API",
        "Maximum": "1024",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.aliastarget.1.dnsname",
        "UpdateRequires": "No interruption"
    },
    "route53.aliastarget.1.evaluatetargethealth": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "EvaluateTargetHealth`  <a name=\"cfn-route53-aliastarget-evaluatetargethealth\"></a>\n *Applies only to alias, failover alias, geolocation alias, latency alias, and weighted alias resource record sets:* When `EvaluateTargetHealth` is `true`, an alias resource record set inherits the health of the referenced AWS resource, such as an ELB load balancer or another resource record set in the hosted zone\\.  \nNote the following:    \nCloudFront distributions  \nYou can't set `EvaluateTargetHealth` to `true` when the alias target is a CloudFront distribution\\.  \nElastic Beanstalk environments that have regionalized subdomains  \nIf you specify an Elastic Beanstalk environment in `DNSName` and the environment contains an ELB load balancer, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. \\(An environment automatically contains an ELB load balancer if it includes more than one Amazon EC2 instance\\.\\) If you set `EvaluateTargetHealth` to `true` and either no Amazon EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other available resources that are healthy, if any\\.   \nIf the environment contains a single Amazon EC2 instance, there are no special requirements\\.  \nELB load balancers  \nHealth checking behavior depends on the type of load balancer:  \n+  **Classic Load Balancers*": "If you specify an ELB Classic Load Balancer in `DNSName`, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. If you set `EvaluateTargetHealth` to `true` and either no EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other resources\\.\n+  **Application and Network Load Balancers*",
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "route53.aliastarget.1.evaluatetargethealth",
        "UpdateRequires": "No interruption"
    },
    "route53.aliastarget.1.hostedzoneid": {
        "Alias resource records sets only": "The value used depends on where you want to route traffic:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the hosted zone ID for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalHostedZoneId`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionHostedZoneId`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nSpecify the hosted zone ID for your interface endpoint\\. You can get the value of `HostedZoneId` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify `Z2FDTNDATAQYW2`\\. This is always the hosted zone ID when you create an alias record that routes traffic to a CloudFront distribution\\.  \nAlias records for CloudFront can't be created in a private zone\\.  \nElastic Beanstalk environment  \nSpecify the hosted zone ID for the region that you created the environment in\\. The environment must have a regionalized subdomain\\. For a list of regions and the corresponding hosted zone IDs, see [AWS Elastic Beanstalk](https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region) in the \"AWS Regions and Endpoints\" chapter of the *Amazon Web Services General Reference*\\.  \nELB load balancer  \nSpecify the value of the hosted zone ID for the load balancer\\. Use the following methods to get the hosted zone ID:  \n+ [Elastic Load Balancing](https://docs.aws.amazon.com/general/latest/gr/rande.html#elb_region) table in the \"AWS Regions and Endpoints\" chapter of the *Amazon Web Services General Reference",
        "Maximum": "32",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.aliastarget.1.hostedzoneid",
        "UpdateRequires": "No interruption"
    },
    "route53.aliastarget.cfnproperties": [
        "EvaluateTargetHealth",
        "HostedZoneId",
        "DNSName",
        "UniqueKey"
    ],
    "route53.aliastarget.dnsname": {
        "Alias records only:* The value that you specify depends on where you want to route queries:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the applicable domain name for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalDomainName`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionDomainName`\\. This is the name of the associated CloudFront distribution, such as `da1b2c3d4e5.cloudfront.net`\\.\nThe name of the record that you're creating must match a custom domain name for your API, such as `api.example.com`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nEnter the API endpoint for the interface endpoint, such as `vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com`\\. For edge\\-optimized APIs, this is the domain name for the corresponding CloudFront distribution\\. You can get the value of `DnsName` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify the domain name that CloudFront assigned when you created your distribution\\.  \nYour CloudFront distribution must include an alternate domain name that matches the name of the record\\. For example, if the name of the record is *acme\\.example\\.com*, your CloudFront distribution must include *acme\\.example\\.com* as one of the alternate domain names\\. For more information, see [Using Alternate Domain Names \\(CNAMEs\\)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html) in the *Amazon CloudFront Developer Guide*\\.  \nYou can't create a record in a private hosted zone to route traffic to a CloudFront distribution\\.  \nFor failover alias records, you can't specify a CloudFront distribution for both the primary and secondary records\\. A distribution must include an alternate domain name that matches the name of the record\\. However, the primary and secondary records have the same name, and you can't include the same alternate domain name in more than one distribution\\.   \nElastic Beanstalk environment  \nIf the domain name for your Elastic Beanstalk environment includes the region that you deployed the environment in, you can create an alias record that routes traffic to the environment\\. For example, the domain name `my-environment.us-west-2.elasticbeanstalk.com` is a regionalized domain name\\.   \nFor environments that were created before early 2016, the domain name doesn't include the region\\. To route traffic to these environments, you must create a CNAME record instead of an alias record\\. Note that you can't create a CNAME record for the root domain name\\. For example, if your domain name is example\\.com, you can create a record that routes traffic for acme\\.example\\.com to your Elastic Beanstalk environment, but you can't create a record that routes traffic for example\\.com to your Elastic Beanstalk environment\\.\nFor Elastic Beanstalk environments that have regionalized subdomains, specify the `CNAME` attribute for the environment\\. You can use the following methods to get the value of the CNAME attribute:  \n+ *AWS Management Console": "For information about how to get the value by using the console, see [Using Custom Domains with AWS Elastic Beanstalk](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customdomains.html) in the *AWS Elastic Beanstalk Developer Guide*\\.\n+ *Elastic Beanstalk API",
        "Maximum": "1024",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.aliastarget.dnsname",
        "UpdateRequires": "No interruption"
    },
    "route53.aliastarget.evaluatetargethealth": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Applies only to alias records with any routing policy:* When `EvaluateTargetHealth` is `true`, an alias record inherits the health of the referenced AWS resource, such as an ELB load balancer or another record in the hosted zone\\.  \nNote the following:    \nCloudFront distributions  \nYou can't set `EvaluateTargetHealth` to `true` when the alias target is a CloudFront distribution\\.  \nElastic Beanstalk environments that have regionalized subdomains  \nIf you specify an Elastic Beanstalk environment in `DNSName` and the environment contains an ELB load balancer, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. \\(An environment automatically contains an ELB load balancer if it includes more than one Amazon EC2 instance\\.\\) If you set `EvaluateTargetHealth` to `true` and either no Amazon EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other available resources that are healthy, if any\\.   \nIf the environment contains a single Amazon EC2 instance, there are no special requirements\\.  \nELB load balancers  \nHealth checking behavior depends on the type of load balancer:  \n+ **Classic Load Balancers*": "If you specify an ELB Classic Load Balancer in `DNSName`, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer\\. If you set `EvaluateTargetHealth` to `true` and either no EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other resources\\.\n+ **Application and Network Load Balancers*",
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "route53.aliastarget.evaluatetargethealth",
        "UpdateRequires": "No interruption"
    },
    "route53.aliastarget.hostedzoneid": {
        "Alias resource records sets only": "The value used depends on where you want to route traffic:    \nAmazon API Gateway custom regional APIs and edge\\-optimized APIs  \nSpecify the hosted zone ID for your API\\. You can get the applicable value using the AWS CLI command [get\\-domain\\-names](https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):  \n+ For regional APIs, specify the value of `regionalHostedZoneId`\\.\n+ For edge\\-optimized APIs, specify the value of `distributionHostedZoneId`\\.  \nAmazon Virtual Private Cloud interface VPC endpoint  \nSpecify the hosted zone ID for your interface endpoint\\. You can get the value of `HostedZoneId` using the AWS CLI command [describe\\-vpc\\-endpoints](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html)\\.  \nCloudFront distribution  \nSpecify `Z2FDTNDATAQYW2`\\. This is always the hosted zone ID when you create an alias record that routes traffic to a CloudFront distribution\\.  \nAlias records for CloudFront can't be created in a private zone\\.  \nElastic Beanstalk environment  \nSpecify the hosted zone ID for the region that you created the environment in\\. The environment must have a regionalized subdomain\\. For a list of regions and the corresponding hosted zone IDs, see [AWS Elastic Beanstalk](https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region) in the \"AWS Regions and Endpoints\" chapter of the *Amazon Web Services General Reference*\\.  \nELB load balancer  \nSpecify the value of the hosted zone ID for the load balancer\\. Use the following methods to get the hosted zone ID:  \n+ [Elastic Load Balancing](https://docs.aws.amazon.com/general/latest/gr/rande.html#elb_region) table in the \"AWS Regions and Endpoints\" chapter of the *Amazon Web Services General Reference",
        "Maximum": "32",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.aliastarget.hostedzoneid",
        "UpdateRequires": "No interruption"
    },
    "route53.healthcheck.alarmidentifier.cfnproperties": [
        "Region",
        "Name",
        "UniqueKey",
        "SampleValue"
    ],
    "route53.healthcheck.alarmidentifier.name": {
        "Maximum": "256",
        "Minimum": "1",
        "Required": "Yes",
        "UniqueKey": "route53.healthcheck.alarmidentifier.name",
        "UpdateRequires": "No interruption"
    },
    "route53.healthcheck.alarmidentifier.region": {
        "AllowedValues": [
            "ap-east-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-south-1",
            "ap-southeast-1",
            "ap-southeast-2",
            "ca-central-1",
            "cn-north-1",
            "cn-northwest-1",
            "eu-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "me-south-1",
            "sa-east-1",
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2"
        ],
        "Pattern": "^[ap-east-1|ap-northeast-1|ap-northeast-2|ap-northeast-3|ap-south-1|ap-southeast-1|ap-southeast-2|ca-central-1|cn-north-1|cn-northwest-1|eu-central-1|eu-north-1|eu-west-1|eu-west-2|eu-west-3|me-south-1|sa-east-1|us-east-1|us-east-2|us-west-1|us-west-2]",
        "Required": "Yes",
        "SampleValue": "ap-east-1|ap-northeast-1|ap-northeast-2|ap-northeast-3|ap-south-1|ap-southeast-1|ap-southeast-2|ca-central-1|cn-north-1|cn-northwest-1|eu-central-1|eu-north-1|eu-west-1|eu-west-2|eu-west-3|me-south-1|sa-east-1|us-east-1|us-east-2|us-west-1|us-west-2",
        "UniqueKey": "route53.healthcheck.alarmidentifier.region",
        "UpdateRequires": "No interruption"
    },
    "route53.healthcheck.healthcheckconfig.alarmidentifier": {
        "Required": "No",
        "Type": "AlarmIdentifier",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.alarmidentifier",
        "UpdateRequires": "No interruption"
    },
    "route53.healthcheck.healthcheckconfig.cfnproperties": [
        "RequestInterval",
        "SearchString",
        "Type",
        "AlarmIdentifier",
        "ChildHealthChecks",
        "InsufficientDataHealthStatus",
        "Regions",
        "ResourcePath",
        "HealthThreshold",
        "EnableSNI",
        "Inverted",
        "MeasureLatency",
        "FullyQualifiedDomainName",
        "IPAddress",
        "Port",
        "FailureThreshold",
        "UniqueKey"
    ],
    "route53.healthcheck.healthcheckconfig.childhealthchecks": {
        "Maximum": "256",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.childhealthchecks",
        "UpdateRequires": "No interruption"
    },
    "route53.healthcheck.healthcheckconfig.enablesni": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.enablesni",
        "UpdateRequires": "No interruption"
    },
    "route53.healthcheck.healthcheckconfig.failurethreshold": {
        "Maximum": "10",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.failurethreshold",
        "UpdateRequires": "No interruption"
    },
    "route53.healthcheck.healthcheckconfig.fullyqualifieddomainname": {
        "FullyQualifiedDomainName`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-fullyqualifieddomainname\"></a>\nAmazon Route 53 behavior depends on whether you specify a value for `IPAddress`\\.  \n **If you specify a value for** `IPAddress`:  \nAmazon Route 53 sends health check requests to the specified IPv4 or IPv6 address and passes the value of `FullyQualifiedDomainName` in the `Host` header for all health checks except TCP health checks\\. This is typically the fully qualified DNS name of the endpoint on which you want Route 53 to perform health checks\\.  \nWhen Route 53 checks the health of an endpoint, here is how it constructs the `Host` header:  \n+ If you specify a value of `80` for `Port` and `HTTP` or `HTTP_STR_MATCH` for `Type`, Route 53 passes the value of `FullyQualifiedDomainName` to the endpoint in the Host header\\. \n+ If you specify a value of `443` for `Port` and `HTTPS` or `HTTPS_STR_MATCH` for `Type`, Route 53 passes the value of `FullyQualifiedDomainName` to the endpoint in the `Host` header\\.\n+ If you specify another value for `Port` and any value except `TCP` for `Type`, Route 53 passes `FullyQualifiedDomainName:Port` to the endpoint in the `Host` header\\.\nIf you don't specify a value for `FullyQualifiedDomainName`, Route 53 substitutes the value of `IPAddress` in the `Host` header in each of the preceding cases\\.  \n **If you don't specify a value for `IPAddress` *": "Route 53 sends a DNS request to the domain that you specify for `FullyQualifiedDomainName` at the interval that you specify for `RequestInterval`\\. Using an IPv4 address that DNS returns, Route 53 then checks the health of the endpoint\\.  \nIf you don't specify a value for `IPAddress`, Route 53 uses only IPv4 to send health checks to the endpoint\\. If there's no record with a type of A for the name that you specify for `FullyQualifiedDomainName`, the health check fails with a \"DNS resolution failed\" error\\.\nIf you want to check the health of multiple records that have the same name and type, such as multiple weighted records, and if you choose to specify the endpoint only by `FullyQualifiedDomainName`, we recommend that you create a separate health check for each endpoint\\. For example, create a health check for each HTTP server that is serving content for www\\.example\\.com\\. For the value of `FullyQualifiedDomainName`, specify the domain name of the server \\(such as us\\-east\\-2\\-www\\.example\\.com\\), not the name of the records \\(www\\.example\\.com\\)\\.  \nIn this configuration, if you create a health check for which the value of `FullyQualifiedDomainName` matches the name of the records and you then associate the health check with those records, health check results will be unpredictable\\.\nIn addition, if the value that you specify for `Type` is `HTTP`, `HTTPS`, `HTTP_STR_MATCH`, or `HTTPS_STR_MATCH`, Route 53 passes the value of `FullyQualifiedDomainName` in the `Host` header, as it does when you specify a value for `IPAddress`\\. If the value of `Type` is `TCP`, Route 53 doesn't pass a `Host` header\\.",
        "Maximum": "255",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.fullyqualifieddomainname",
        "UpdateRequires": "No interruption"
    },
    "route53.healthcheck.healthcheckconfig.healththreshold": {
        "Maximum": "256",
        "Minimum": "0",
        "Pattern": "^[0,256]}$",
        "Required": "No",
        "SampleValue": "0...256",
        "Type": "Integer",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.healththreshold",
        "UpdateRequires": "No interruption"
    },
    "route53.healthcheck.healthcheckconfig.insufficientdatahealthstatus": {
        "Allowed Values": "Healthy | LastKnownStatus | Unhealthy",
        "AllowedValues": [
            "Healthy",
            "LastKnownStatus",
            "Unhealthy"
        ],
        "Pattern": "^[Healthy|LastKnownStatus|Unhealthy]",
        "Required": "No",
        "SampleValue": "Healthy|LastKnownStatus|Unhealthy",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.insufficientdatahealthstatus",
        "UpdateRequires": "No interruption"
    },
    "route53.healthcheck.healthcheckconfig.inverted": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.inverted",
        "UpdateRequires": "No interruption"
    },
    "route53.healthcheck.healthcheckconfig.ipaddress": {
        "IPAddress`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-ipaddress\"></a>\nThe IPv4 or IPv6 IP address of the endpoint that you want Amazon Route 53 to perform health checks on\\. If you don't specify a value for `IPAddress`, Route 53 sends a DNS request to resolve the domain name that you specify in `FullyQualifiedDomainName` at the interval that you specify in `RequestInterval`\\. Using an IP address returned by DNS, Route 53 then checks the health of the endpoint\\.  \nUse one of the following formats for the value of `IPAddress`:   \n+  **IPv4 address*": "four values between 0 and 255, separated by periods \\(\\.\\), for example, `192.0.2.44`\\.\n+  **IPv6 address*",
        "Maximum": "45",
        "Pattern": "(^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$|^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.ipaddress",
        "UpdateRequires": "No interruption"
    },
    "route53.healthcheck.healthcheckconfig.measurelatency": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.measurelatency",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.port": {
        "Maximum": "65535",
        "Minimum": "1",
        "Pattern": "^[1,65535]}$",
        "Required": "No",
        "SampleValue": "1...65535",
        "Type": "Integer",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.port",
        "UpdateRequires": "No interruption"
    },
    "route53.healthcheck.healthcheckconfig.regions": {
        "Maximum": "64",
        "Required": "No",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.regions",
        "UpdateRequires": "No interruption"
    },
    "route53.healthcheck.healthcheckconfig.requestinterval": {
        "Maximum": "30",
        "Minimum": "10",
        "Pattern": "^[10,30]}$",
        "Required": "No",
        "SampleValue": "10...30",
        "Type": "Integer",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.requestinterval",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthcheckconfig.resourcepath": {
        "Maximum": "255",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.resourcepath",
        "UpdateRequires": "No interruption"
    },
    "route53.healthcheck.healthcheckconfig.searchstring": {
        "Maximum": "255",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.searchstring",
        "UpdateRequires": "No interruption"
    },
    "route53.healthcheck.healthcheckconfig.type": {
        "*Important**  \nIf you specify `HTTPS` for the value of `Type`, the endpoint must support TLS v1\\.0 or later\\.\n+  **HTTP\\_STR\\_MATCH*": "Route 53 tries to establish a TCP connection\\. If successful, Route 53 submits an HTTP request and searches the first 5,120 bytes of the response body for the string that you specify in `SearchString`\\.\n+  **HTTPS\\_STR\\_MATCH*",
        "Allowed Values": "CALCULATED | CLOUDWATCH_METRIC | HTTP | HTTP_STR_MATCH | HTTPS | HTTPS_STR_MATCH | TCP",
        "AllowedValues": [
            "CALCULATED",
            "CLOUDWATCH_METRIC",
            "HTTP",
            "HTTP_STR_MATCH",
            "HTTPS",
            "HTTPS_STR_MATCH",
            "TCP"
        ],
        "Pattern": "^[CALCULATED|CLOUDWATCH_METRIC|HTTP|HTTP_STR_MATCH|HTTPS|HTTPS_STR_MATCH|TCP]",
        "Required": "Yes",
        "SampleValue": "CALCULATED|CLOUDWATCH_METRIC|HTTP|HTTP_STR_MATCH|HTTPS|HTTPS_STR_MATCH|TCP",
        "Type": "String",
        "Type`  <a name=\"cfn-route53-healthcheck-healthcheckconfig-type\"></a>\nThe type of health check that you want to create, which indicates how Amazon Route 53 determines whether an endpoint is healthy\\.  \nYou can't change the value of `Type` after you create a health check\\.\nYou can create the following types of health checks:  \n+  **HTTP*": "Route 53 tries to establish a TCP connection\\. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400\\.\n+  **HTTPS*",
        "UniqueKey": "route53.healthcheck.healthcheckconfig.type",
        "UpdateRequires": "Replacement"
    },
    "route53.healthcheck.healthchecktag.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "route53.healthcheck.healthchecktag.key": {
        "Key`  <a name=\"cfn-route53-healthchecktags-key\"></a>\nThe value of `Key` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Key` is the name that you want to give the new tag\\.\n+  **Edit a tag*",
        "Maximum": "128",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthchecktag.key",
        "UpdateRequires": "No interruption"
    },
    "route53.healthcheck.healthchecktag.value": {
        "Maximum": "256",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.healthcheck.healthchecktag.value",
        "UpdateRequires": "No interruption",
        "Value`  <a name=\"cfn-route53-healthchecktags-value\"></a>\nThe value of `Value` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Value` is the value that you want to give the new tag\\.\n+  **Edit a tag*"
    },
    "route53.hostedzone.hostedzoneconfig.cfnproperties": [
        "Comment",
        "UniqueKey"
    ],
    "route53.hostedzone.hostedzoneconfig.comment": {
        "Maximum": "256",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.hostedzone.hostedzoneconfig.comment",
        "UpdateRequires": "No interruption"
    },
    "route53.hostedzone.hostedzonetags.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "route53.hostedzone.hostedzonetags.key": {
        "Key`  <a name=\"cfn-route53-hostedzonetags-key\"></a>\nThe value of `Key` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Key` is the name that you want to give the new tag\\.\n+  **Edit a tag*",
        "Maximum": "128",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.hostedzone.hostedzonetags.key",
        "UpdateRequires": "No interruption"
    },
    "route53.hostedzone.hostedzonetags.value": {
        "Maximum": "256",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.hostedzone.hostedzonetags.value",
        "UpdateRequires": "No interruption",
        "Value`  <a name=\"cfn-route53-hostedzonetags-value\"></a>\nThe value of `Value` depends on the operation that you want to perform:  \n+  **Add a tag to a health check or hosted zone*": "Value` is the value that you want to give the new tag\\.\n+  **Edit a tag*"
    },
    "route53.hostedzone.queryloggingconfig.cfnproperties": [
        "CloudWatchLogsLogGroupArn",
        "UniqueKey"
    ],
    "route53.hostedzone.queryloggingconfig.cloudwatchlogsloggrouparn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "route53.hostedzone.queryloggingconfig.cloudwatchlogsloggrouparn",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.1.aliastarget": {
        "Required": "No",
        "SampleValue": "TODO-aliastarget",
        "UniqueKey": "route53.recordset.1.aliastarget",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.1.cfnproperties": [
        "Comment",
        "GeoLocation",
        "Type",
        "HealthCheckId",
        "Name",
        "Weight",
        "HostedZoneName",
        "SetIdentifier",
        "Failover",
        "ResourceRecords",
        "MultiValueAnswer",
        "TTL",
        "HostedZoneId",
        "AliasTarget",
        "Region",
        "UniqueKey"
    ],
    "route53.recordset.1.comment": {
        "Maximum": "256",
        "Required": "No",
        "UniqueKey": "route53.recordset.1.comment",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.1.failover": {
        "Allowed Values": "PRIMARY | SECONDARY",
        "AllowedValues": [
            "PRIMARY",
            "SECONDARY"
        ],
        "Failover`  <a name=\"cfn-route53-recordset-failover\"></a>\n *Failover resource record sets only:* To configure failover, you add the `Failover` element to two resource record sets\\. For one resource record set, you specify `PRIMARY` as the value for `Failover`; for the other resource record set, you specify `SECONDARY`\\. In addition, you include the `HealthCheckId` element and specify the health check that you want Amazon Route 53 to perform for each resource record set\\.  \nExcept where noted, the following failover behaviors assume that you have included the `HealthCheckId` element in both resource record sets:  \n+ When the primary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the secondary resource record set\\.\n+ When the primary resource record set is unhealthy and the secondary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the secondary resource record set\\.\n+ When the secondary resource record set is unhealthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the primary resource record set\\.\n+ If you omit the `HealthCheckId` element for the secondary resource record set, and if the primary resource record set is unhealthy, Route 53 always responds to DNS queries with the applicable value from the secondary resource record set\\. This is true regardless of the health of the associated endpoint\\.\nYou can't create non\\-failover resource record sets that have the same values for the `Name` and `Type` elements as failover resource record sets\\.  \nFor failover alias resource record sets, you must also include the `EvaluateTargetHealth` element and set the value to true\\.  \nFor more information about configuring failover for Route 53, see the following topics in the *Amazon Route 53 Developer Guide": "+  [Route 53 Health Checks and DNS Failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html)",
        "Pattern": "^[PRIMARY|SECONDARY]",
        "Required": "No",
        "SampleValue": "PRIMARY|SECONDARY",
        "Type": "String",
        "UniqueKey": "route53.recordset.1.failover",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.1.geolocation": {
        "Required": "No",
        "SampleValue": "TODO-geolocation",
        "UniqueKey": "route53.recordset.1.geolocation",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.1.healthcheckid": {
        "HealthCheckId`  <a name=\"cfn-route53-recordset-healthcheckid\"></a>\nIf you want Amazon Route 53 to return this resource record set in response to a DNS query only when the status of a health check is healthy, include the `HealthCheckId` element and specify the ID of the applicable health check\\.  \nRoute 53 determines whether a resource record set is healthy based on one of the following:  \n+ By periodically sending a request to the endpoint that is specified in the health check\n+ By aggregating the status of a specified group of health checks \\(calculated health checks\\)\n+ By determining the current state of a CloudWatch alarm \\(CloudWatch metric health checks\\)\nRoute 53 doesn't check the health of the endpoint that is specified in the resource record set, for example, the endpoint specified by the IP address in the `Value` element\\. When you add a `HealthCheckId` element to a resource record set, Route 53 checks the health of the endpoint that you specified in the health check\\. \nFor more information, see the following topics in the *Amazon Route 53 Developer Guide": "+  [How Amazon Route 53 Determines Whether an Endpoint Is Healthy](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html) \n+  [Route 53 Health Checks and DNS Failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html) \n **When to Specify HealthCheckId**   \nSpecifying a value for `HealthCheckId` is useful only when Route 53 is choosing between two or more resource record sets to respond to a DNS query, and you want Route 53 to base the choice in part on the status of a health check\\. Configuring health checks makes sense only in the following configurations:  \n+  **Non\\-alias resource record sets*",
        "Maximum": "64",
        "Required": "No",
        "UniqueKey": "route53.recordset.1.healthcheckid",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.1.hostedzoneid": {
        "Maximum": "32",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.1.hostedzoneid",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.1.hostedzonename": {
        "Maximum": "1024",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.1.hostedzonename",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.1.multivalueanswer": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "MultiValueAnswer`  <a name=\"cfn-route53-recordset-multivalueanswer\"></a>\n *Multivalue answer resource record sets only": "To route traffic approximately randomly to multiple resources, such as web servers, create one multivalue answer record for each resource and specify `true` for `MultiValueAnswer`\\. Note the following:  \n+ If you associate a health check with a multivalue answer resource record set, Amazon Route 53 responds to DNS queries with the corresponding IP address only when the health check is healthy\\.\n+ If you don't associate a health check with a multivalue answer record, Route 53 always considers the record to be healthy\\.\n+ Route 53 responds to DNS queries with up to eight healthy records; if you have eight or fewer healthy records, Route 53 responds to all DNS queries with all the healthy records\\.\n+ If you have more than eight healthy records, Route 53 responds to different DNS resolvers with different combinations of healthy records\\.\n+ When all records are unhealthy, Route 53 responds to DNS queries with up to eight unhealthy records\\.\n+ If a resource becomes unavailable after a resolver caches a response, client software typically tries another of the IP addresses in the response\\.\nYou can't create multivalue answer alias records\\.",
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "route53.recordset.1.multivalueanswer",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.1.name": {
        "Maximum": "1024",
        "Required": "Yes",
        "UniqueKey": "route53.recordset.1.name",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.1.region": {
        "AllowedValues": [
            "ap-east-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-south-1",
            "ap-southeast-1",
            "ap-southeast-2",
            "ca-central-1",
            "cn-north-1",
            "cn-northwest-1",
            "eu-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "me-south-1",
            "sa-east-1",
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2"
        ],
        "Pattern": "^[ap-east-1|ap-northeast-1|ap-northeast-2|ap-northeast-3|ap-south-1|ap-southeast-1|ap-southeast-2|ca-central-1|cn-north-1|cn-northwest-1|eu-central-1|eu-north-1|eu-west-1|eu-west-2|eu-west-3|me-south-1|sa-east-1|us-east-1|us-east-2|us-west-1|us-west-2]",
        "Required": "No",
        "SampleValue": "ap-east-1|ap-northeast-1|ap-northeast-2|ap-northeast-3|ap-south-1|ap-southeast-1|ap-southeast-2|ca-central-1|cn-north-1|cn-northwest-1|eu-central-1|eu-north-1|eu-west-1|eu-west-2|eu-west-3|me-south-1|sa-east-1|us-east-1|us-east-2|us-west-1|us-west-2",
        "UniqueKey": "route53.recordset.1.region",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.1.resourcerecords": {
        "Required": "No",
        "SampleValue": "TODO-resourcerecords",
        "UniqueKey": "route53.recordset.1.resourcerecords",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.1.setidentifier": {
        "Maximum": "128",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "route53.recordset.1.setidentifier",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.1.ttl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.1.ttl",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.1.type": {
        "AllowedValues": [
            "A",
            "AAAA",
            "CAA",
            "CNAME",
            "MX",
            "NAPTR",
            "NS",
            "PTR",
            "SOA",
            "SPF",
            "SRV",
            "TXT"
        ],
        "Pattern": "^[A|AAAA|CAA|CNAME|MX|NAPTR|NS|PTR|SOA|SPF|SRV|TXT]",
        "Required": "Yes",
        "SampleValue": "A|AAAA|CAA|CNAME|MX|NAPTR|NS|PTR|SOA|SPF|SRV|TXT",
        "Type`  <a name=\"cfn-route53-recordset-type\"></a>\nThe DNS record type\\. For information about different record types and how data is encoded for them, see [Supported DNS Resource Record Types](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html) in the *Amazon Route 53 Developer Guide*\\.  \nValid values for basic resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `NS` \\| `PTR` \\| `SOA` \\| `SPF` \\| `SRV` \\| `TXT`   \nValues for weighted, latency, geolocation, and failover resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`\\. When creating a group of weighted, latency, geolocation, or failover resource record sets, specify the same value for all of the resource record sets in the group\\.  \nValid values for multivalue answer resource record sets: `A` \\| `AAAA` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`   \nSPF records were formerly used to verify the identity of the sender of email messages\\. However, we no longer recommend that you create resource record sets for which the value of `Type` is `SPF`\\. RFC 7208, *Sender Policy Framework \\(SPF\\) for Authorizing Use of Domains in Email, Version 1*, has been updated to say, \"\\.\\.\\.\\[I\\]ts existence and mechanism defined in \\[RFC4408\\] have led to some interoperability issues\\. Accordingly, its use is no longer appropriate for SPF version 1; implementations are not to use it\\.\" In RFC 7208, see section 14\\.1, [The SPF DNS Record Type](http://tools.ietf.org/html/rfc7208#section-14.1)\\.\nValues for alias resource record sets:  \n+  **Amazon API Gateway custom regional APIs and edge\\-optimized APIs:** `A` \n+  **CloudFront distributions:** `A` \n\n  If IPv6 is enabled for the distribution, create two resource record sets to route traffic to your distribution, one with a value of `A` and one with a value of `AAAA`\\. \n+  **Amazon API Gateway environment that has a regionalized subdomain*": "A` \n+  **ELB load balancers:** `A` \\| `AAAA` \n+  **Amazon S3 buckets:** `A` \n+  **Amazon Virtual Private Cloud interface VPC endpoints** `A` \n+  **Another resource record set in this hosted zone:** Specify the type of the resource record set that you're creating the alias for\\. All values are supported except `NS` and `SOA`\\.",
        "UniqueKey": "route53.recordset.1.type",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.1.weight": {
        "Required": "No",
        "SampleValue": "TODO-weight",
        "UniqueKey": "route53.recordset.1.weight",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.aliastarget": {
        "Required": "No",
        "SampleValue": "TODO-aliastarget",
        "UniqueKey": "route53.recordset.aliastarget",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.cfnproperties": [
        "Comment",
        "GeoLocation",
        "Type",
        "HealthCheckId",
        "Name",
        "Weight",
        "HostedZoneName",
        "SetIdentifier",
        "Failover",
        "ResourceRecords",
        "MultiValueAnswer",
        "TTL",
        "HostedZoneId",
        "AliasTarget",
        "Region",
        "UniqueKey"
    ],
    "route53.recordset.comment": {
        "Maximum": "256",
        "Required": "No",
        "UniqueKey": "route53.recordset.comment",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.failover": {
        "Allowed Values": "PRIMARY | SECONDARY",
        "AllowedValues": [
            "PRIMARY",
            "SECONDARY"
        ],
        "Failover`  <a name=\"cfn-route53-recordset-failover\"></a>\n *Failover resource record sets only:* To configure failover, you add the `Failover` element to two resource record sets\\. For one resource record set, you specify `PRIMARY` as the value for `Failover`; for the other resource record set, you specify `SECONDARY`\\. In addition, you include the `HealthCheckId` element and specify the health check that you want Amazon Route 53 to perform for each resource record set\\.  \nExcept where noted, the following failover behaviors assume that you have included the `HealthCheckId` element in both resource record sets:  \n+ When the primary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the secondary resource record set\\.\n+ When the primary resource record set is unhealthy and the secondary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the secondary resource record set\\.\n+ When the secondary resource record set is unhealthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the primary resource record set\\.\n+ If you omit the `HealthCheckId` element for the secondary resource record set, and if the primary resource record set is unhealthy, Route 53 always responds to DNS queries with the applicable value from the secondary resource record set\\. This is true regardless of the health of the associated endpoint\\.\nYou can't create non\\-failover resource record sets that have the same values for the `Name` and `Type` elements as failover resource record sets\\.  \nFor failover alias resource record sets, you must also include the `EvaluateTargetHealth` element and set the value to true\\.  \nFor more information about configuring failover for Route 53, see the following topics in the *Amazon Route 53 Developer Guide": "+  [Route 53 Health Checks and DNS Failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html)",
        "Pattern": "^[PRIMARY|SECONDARY]",
        "Required": "No",
        "SampleValue": "PRIMARY|SECONDARY",
        "Type": "String",
        "UniqueKey": "route53.recordset.failover",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.geolocation": {
        "Required": "No",
        "SampleValue": "TODO-geolocation",
        "UniqueKey": "route53.recordset.geolocation",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.geolocation.1.cfnproperties": [
        "SubdivisionCode",
        "CountryCode",
        "ContinentCode",
        "UniqueKey"
    ],
    "route53.recordset.geolocation.1.continentcode": {
        "ContinentCode`  <a name=\"cfn-route53-recordsetgroup-geolocation-continentcode\"></a>\nFor geolocation resource record sets, a two\\-letter abbreviation that identifies a continent\\. Route 53 supports the following continent codes:  \n+ **AF*": "Africa\n+ **AN*",
        "Maximum": "2",
        "Minimum": "2",
        "Pattern": "^.{2,2}$",
        "Required": "No",
        "SampleValue": "TODO-route53.recordset.geolocation.1.continentcode",
        "Type": "String",
        "UniqueKey": "route53.recordset.geolocation.1.continentcode",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.geolocation.1.countrycode": {
        "Maximum": "2",
        "Minimum": "1",
        "Pattern": "^.{1,2}$",
        "Required": "No",
        "SampleValue": "TODO-route53.recordset.geolocation.1.countrycode",
        "Type": "String",
        "UniqueKey": "route53.recordset.geolocation.1.countrycode",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.geolocation.1.subdivisioncode": {
        "Maximum": "3",
        "Minimum": "1",
        "Pattern": "^.{1,3}$",
        "Required": "No",
        "SampleValue": "TODO-route53.recordset.geolocation.1.subdivisioncode",
        "Type": "String",
        "UniqueKey": "route53.recordset.geolocation.1.subdivisioncode",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.geolocation.cfnproperties": [
        "SubdivisionCode",
        "CountryCode",
        "ContinentCode",
        "UniqueKey"
    ],
    "route53.recordset.geolocation.continentcode": {
        "ContinentCode`  <a name=\"cfn-route53-recordset-geolocation-continentcode\"></a>\nFor geolocation resource record sets, a two\\-letter abbreviation that identifies a continent\\. Route 53 supports the following continent codes:  \n+ **AF*": "Africa\n+ **AN*",
        "Maximum": "2",
        "Minimum": "2",
        "Pattern": "^.{2,2}$",
        "Required": "No",
        "SampleValue": "TODO-route53.recordset.geolocation.continentcode",
        "Type": "String",
        "UniqueKey": "route53.recordset.geolocation.continentcode",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.geolocation.countrycode": {
        "Maximum": "2",
        "Minimum": "1",
        "Pattern": "^.{1,2}$",
        "Required": "No",
        "SampleValue": "TODO-route53.recordset.geolocation.countrycode",
        "Type": "String",
        "UniqueKey": "route53.recordset.geolocation.countrycode",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.geolocation.subdivisioncode": {
        "Maximum": "3",
        "Minimum": "1",
        "Pattern": "^.{1,3}$",
        "Required": "No",
        "SampleValue": "TODO-route53.recordset.geolocation.subdivisioncode",
        "Type": "String",
        "UniqueKey": "route53.recordset.geolocation.subdivisioncode",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.healthcheckid": {
        "HealthCheckId`  <a name=\"cfn-route53-recordset-healthcheckid\"></a>\nIf you want Amazon Route 53 to return this resource record set in response to a DNS query only when the status of a health check is healthy, include the `HealthCheckId` element and specify the ID of the applicable health check\\.  \nRoute 53 determines whether a resource record set is healthy based on one of the following:  \n+ By periodically sending a request to the endpoint that is specified in the health check\n+ By aggregating the status of a specified group of health checks \\(calculated health checks\\)\n+ By determining the current state of a CloudWatch alarm \\(CloudWatch metric health checks\\)\nRoute 53 doesn't check the health of the endpoint that is specified in the resource record set, for example, the endpoint specified by the IP address in the `Value` element\\. When you add a `HealthCheckId` element to a resource record set, Route 53 checks the health of the endpoint that you specified in the health check\\. \nFor more information, see the following topics in the *Amazon Route 53 Developer Guide": "+  [How Amazon Route 53 Determines Whether an Endpoint Is Healthy](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html) \n+  [Route 53 Health Checks and DNS Failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) \n+  [Configuring Failover in a Private Hosted Zone](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html) \n **When to Specify HealthCheckId**   \nSpecifying a value for `HealthCheckId` is useful only when Route 53 is choosing between two or more resource record sets to respond to a DNS query, and you want Route 53 to base the choice in part on the status of a health check\\. Configuring health checks makes sense only in the following configurations:  \n+  **Non\\-alias resource record sets*",
        "Maximum": "64",
        "Required": "No",
        "UniqueKey": "route53.recordset.healthcheckid",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.hostedzoneid": {
        "Maximum": "32",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.hostedzoneid",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.hostedzonename": {
        "Maximum": "32",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.hostedzonename",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.multivalueanswer": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "MultiValueAnswer`  <a name=\"cfn-route53-recordset-multivalueanswer\"></a>\n *Multivalue answer resource record sets only": "To route traffic approximately randomly to multiple resources, such as web servers, create one multivalue answer record for each resource and specify `true` for `MultiValueAnswer`\\. Note the following:  \n+ If you associate a health check with a multivalue answer resource record set, Amazon Route 53 responds to DNS queries with the corresponding IP address only when the health check is healthy\\.\n+ If you don't associate a health check with a multivalue answer record, Route 53 always considers the record to be healthy\\.\n+ Route 53 responds to DNS queries with up to eight healthy records; if you have eight or fewer healthy records, Route 53 responds to all DNS queries with all the healthy records\\.\n+ If you have more than eight healthy records, Route 53 responds to different DNS resolvers with different combinations of healthy records\\.\n+ When all records are unhealthy, Route 53 responds to DNS queries with up to eight unhealthy records\\.\n+ If a resource becomes unavailable after a resolver caches a response, client software typically tries another of the IP addresses in the response\\.\nYou can't create multivalue answer alias records\\.",
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "route53.recordset.multivalueanswer",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.name": {
        "Maximum": "1024",
        "Required": "Yes",
        "UniqueKey": "route53.recordset.name",
        "UpdateRequires": "Replacement"
    },
    "route53.recordset.region": {
        "AllowedValues": [
            "ap-east-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-south-1",
            "ap-southeast-1",
            "ap-southeast-2",
            "ca-central-1",
            "cn-north-1",
            "cn-northwest-1",
            "eu-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "me-south-1",
            "sa-east-1",
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2"
        ],
        "Pattern": "^[ap-east-1|ap-northeast-1|ap-northeast-2|ap-northeast-3|ap-south-1|ap-southeast-1|ap-southeast-2|ca-central-1|cn-north-1|cn-northwest-1|eu-central-1|eu-north-1|eu-west-1|eu-west-2|eu-west-3|me-south-1|sa-east-1|us-east-1|us-east-2|us-west-1|us-west-2]",
        "Required": "No",
        "SampleValue": "ap-east-1|ap-northeast-1|ap-northeast-2|ap-northeast-3|ap-south-1|ap-southeast-1|ap-southeast-2|ca-central-1|cn-north-1|cn-northwest-1|eu-central-1|eu-north-1|eu-west-1|eu-west-2|eu-west-3|me-south-1|sa-east-1|us-east-1|us-east-2|us-west-1|us-west-2",
        "UniqueKey": "route53.recordset.region",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.resourcerecords": {
        "Required": "No",
        "SampleValue": "TODO-resourcerecords",
        "UniqueKey": "route53.recordset.resourcerecords",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.setidentifier": {
        "Maximum": "128",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "route53.recordset.setidentifier",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.ttl": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "route53.recordset.ttl",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.type": {
        "AllowedValues": [
            "A",
            "AAAA",
            "CAA",
            "CNAME",
            "MX",
            "NAPTR",
            "NS",
            "PTR",
            "SOA",
            "SPF",
            "SRV",
            "TXT"
        ],
        "Pattern": "^[A|AAAA|CAA|CNAME|MX|NAPTR|NS|PTR|SOA|SPF|SRV|TXT]",
        "Required": "Yes",
        "SampleValue": "A|AAAA|CAA|CNAME|MX|NAPTR|NS|PTR|SOA|SPF|SRV|TXT",
        "Type`  <a name=\"cfn-route53-recordset-type\"></a>\nThe DNS record type\\. For information about different record types and how data is encoded for them, see [Supported DNS Resource Record Types](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html) in the *Amazon Route 53 Developer Guide*\\.  \nValid values for basic resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `NS` \\| `PTR` \\| `SOA` \\| `SPF` \\| `SRV` \\| `TXT`   \nValues for weighted, latency, geolocation, and failover resource record sets: `A` \\| `AAAA` \\| `CAA` \\| `CNAME` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`\\. When creating a group of weighted, latency, geolocation, or failover resource record sets, specify the same value for all of the resource record sets in the group\\.  \nValid values for multivalue answer resource record sets: `A` \\| `AAAA` \\| `MX` \\| `NAPTR` \\| `PTR` \\| `SPF` \\| `SRV` \\| `TXT`   \nSPF records were formerly used to verify the identity of the sender of email messages\\. However, we no longer recommend that you create resource record sets for which the value of `Type` is `SPF`\\. RFC 7208, *Sender Policy Framework \\(SPF\\) for Authorizing Use of Domains in Email, Version 1*, has been updated to say, \"\\.\\.\\.\\[I\\]ts existence and mechanism defined in \\[RFC4408\\] have led to some interoperability issues\\. Accordingly, its use is no longer appropriate for SPF version 1; implementations are not to use it\\.\" In RFC 7208, see section 14\\.1, [The SPF DNS Record Type](http://tools.ietf.org/html/rfc7208#section-14.1)\\.\nValues for alias resource record sets:  \n+  **Amazon API Gateway custom regional APIs and edge\\-optimized APIs:** `A` \n+  **CloudFront distributions:** `A` \n\n  If IPv6 is enabled for the distribution, create two resource record sets to route traffic to your distribution, one with a value of `A` and one with a value of `AAAA`\\. \n+  **Amazon API Gateway environment that has a regionalized subdomain*": "A` \n+  **ELB load balancers:** `A` \\| `AAAA` \n+  **Amazon S3 buckets:** `A` \n+  **Amazon Virtual Private Cloud interface VPC endpoints** `A` \n+  **Another resource record set in this hosted zone:** Specify the type of the resource record set that you're creating the alias for\\. All values are supported except `NS` and `SOA`\\.",
        "UniqueKey": "route53.recordset.type",
        "UpdateRequires": "No interruption"
    },
    "route53.recordset.weight": {
        "Required": "No",
        "SampleValue": "TODO-weight",
        "UniqueKey": "route53.recordset.weight",
        "UpdateRequires": "No interruption"
    },
    "route53resolver.resolverendpoint.ipaddressrequest.cfnproperties": [
        "SubnetId",
        "Ip",
        "UniqueKey",
        "SampleValue"
    ],
    "route53resolver.resolverendpoint.ipaddressrequest.ip": {
        "Maximum": "36",
        "Minimum": "7",
        "Pattern": "^.{7,36}$",
        "Required": "No",
        "SampleValue": "TODO-route53resolver.resolverendpoint.ipaddressrequest.ip",
        "Type": "String",
        "UniqueKey": "route53resolver.resolverendpoint.ipaddressrequest.ip",
        "UpdateRequires": "No interruption"
    },
    "route53resolver.resolverendpoint.ipaddressrequest.subnetid": {
        "Maximum": "32",
        "Minimum": "1",
        "Pattern": "^.{1,32}$",
        "Required": "Yes",
        "SampleValue": "TODO-route53resolver.resolverendpoint.ipaddressrequest.subnetid",
        "Type": "String",
        "UniqueKey": "route53resolver.resolverendpoint.ipaddressrequest.subnetid",
        "UpdateRequires": "No interruption"
    },
    "route53resolver.resolverrule.targetaddress.cfnproperties": [
        "Ip",
        "Port",
        "UniqueKey",
        "SampleValue"
    ],
    "route53resolver.resolverrule.targetaddress.ip": {
        "Maximum": "36",
        "Minimum": "7",
        "Pattern": "^.{7,36}$",
        "Required": "Yes",
        "SampleValue": "TODO-route53resolver.resolverrule.targetaddress.ip",
        "Type": "String",
        "UniqueKey": "route53resolver.resolverrule.targetaddress.ip",
        "UpdateRequires": "No interruption"
    },
    "route53resolver.resolverrule.targetaddress.port": {
        "Maximum": "65535",
        "Minimum": "0",
        "Pattern": "^.{0,65535}$",
        "Required": "No",
        "SampleValue": "TODO-route53resolver.resolverrule.targetaddress.port",
        "Type": "String",
        "UniqueKey": "route53resolver.resolverrule.targetaddress.port",
        "UpdateRequires": "No interruption"
    },
    "s3.accesspoint.publicaccessblockconfiguration.blockpublicacls": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.accesspoint.publicaccessblockconfiguration.blockpublicacls",
        "UpdateRequires": "Replacement"
    },
    "s3.accesspoint.publicaccessblockconfiguration.blockpublicpolicy": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.accesspoint.publicaccessblockconfiguration.blockpublicpolicy",
        "UpdateRequires": "Replacement"
    },
    "s3.accesspoint.publicaccessblockconfiguration.cfnproperties": [
        "IgnorePublicAcls",
        "BlockPublicPolicy",
        "BlockPublicAcls",
        "RestrictPublicBuckets",
        "UniqueKey"
    ],
    "s3.accesspoint.publicaccessblockconfiguration.ignorepublicacls": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.accesspoint.publicaccessblockconfiguration.ignorepublicacls",
        "UpdateRequires": "Replacement"
    },
    "s3.accesspoint.publicaccessblockconfiguration.restrictpublicbuckets": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.accesspoint.publicaccessblockconfiguration.restrictpublicbuckets",
        "UpdateRequires": "Replacement"
    },
    "s3.accesspoint.vpcconfiguration.cfnproperties": [
        "VpcId",
        "UniqueKey"
    ],
    "s3.accesspoint.vpcconfiguration.vpcid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.accesspoint.vpcconfiguration.vpcid",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.abortincompletemultipartupload.cfnproperties": [
        "DaysAfterInitiation",
        "UniqueKey"
    ],
    "s3.bucket.abortincompletemultipartupload.daysafterinitiation": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.abortincompletemultipartupload.daysafterinitiation",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.accelerateconfiguration": {
        "Required": "No",
        "SampleValue": "TODO-accelerateconfiguration",
        "UniqueKey": "s3.bucket.accelerateconfiguration",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.accelerateconfiguration.accelerationstatus": {
        "Allowed Values": "Enabled | Suspended",
        "AllowedValues": [
            "Enabled",
            "Suspended"
        ],
        "Pattern": "^[Enabled|Suspended]",
        "Required": "Yes",
        "SampleValue": "Enabled|Suspended",
        "Type": "String",
        "UniqueKey": "s3.bucket.accelerateconfiguration.accelerationstatus",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.accelerateconfiguration.cfnproperties": [
        "AccelerationStatus",
        "UniqueKey"
    ],
    "s3.bucket.accesscontrol": {
        "Required": "No",
        "SampleValue": "TODO-accesscontrol",
        "UniqueKey": "s3.bucket.accesscontrol",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.accesscontroltranslation.cfnproperties": [
        "Owner",
        "UniqueKey"
    ],
    "s3.bucket.accesscontroltranslation.owner": {
        "AllowedValues": [
            "Destination"
        ],
        "Pattern": "^[Destination]",
        "Required": "Yes",
        "SampleValue": "Destination",
        "UniqueKey": "s3.bucket.accesscontroltranslation.owner",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.analyticsconfiguration.cfnproperties": [
        "Prefix",
        "StorageClassAnalysis",
        "Id",
        "TagFilters",
        "UniqueKey"
    ],
    "s3.bucket.analyticsconfiguration.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.analyticsconfiguration.id",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.analyticsconfiguration.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.analyticsconfiguration.prefix",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.analyticsconfiguration.storageclassanalysis": {
        "Required": "Yes",
        "Type": "StorageClassAnalysis",
        "UniqueKey": "s3.bucket.analyticsconfiguration.storageclassanalysis",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.analyticsconfiguration.tagfilters": {
        "Required": "No",
        "Type": "List of [TagFilter",
        "UniqueKey": "s3.bucket.analyticsconfiguration.tagfilters",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.analyticsconfigurations": {
        "Required": "No",
        "Type": "List of [AnalyticsConfiguration",
        "UniqueKey": "s3.bucket.analyticsconfigurations",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.bucketencryption": {
        "Required": "No",
        "SampleValue": "TODO-bucketencryption",
        "UniqueKey": "s3.bucket.bucketencryption",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.bucketencryption.cfnproperties": [
        "ServerSideEncryptionConfiguration",
        "UniqueKey"
    ],
    "s3.bucket.bucketencryption.serversideencryptionconfiguration": {
        "Required": "Yes",
        "Type": "List of [ServerSideEncryptionRule",
        "UniqueKey": "s3.bucket.bucketencryption.serversideencryptionconfiguration",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.bucketname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.bucketname",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.cfnproperties": [
        "AccessControl",
        "ReplicationConfiguration",
        "CorsConfiguration",
        "ObjectLockConfiguration",
        "VersioningConfiguration",
        "NotificationConfiguration",
        "InventoryConfigurations",
        "Tags",
        "BucketEncryption",
        "LoggingConfiguration",
        "LifecycleConfiguration",
        "BucketName",
        "WebsiteConfiguration",
        "PublicAccessBlockConfiguration",
        "AccelerateConfiguration",
        "ObjectLockEnabled",
        "AnalyticsConfigurations",
        "MetricsConfigurations",
        "UniqueKey"
    ],
    "s3.bucket.cors.cfnproperties": [
        "CorsRules",
        "UniqueKey"
    ],
    "s3.bucket.cors.corsrule.allowedheaders": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "s3.bucket.cors.corsrule.allowedheaders",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.cors.corsrule.allowedmethods": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "s3.bucket.cors.corsrule.allowedmethods",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.cors.corsrule.allowedorigins": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "s3.bucket.cors.corsrule.allowedorigins",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.cors.corsrule.cfnproperties": [
        "AllowedHeaders",
        "MaxAge",
        "ExposedHeaders",
        "AllowedMethods",
        "Id",
        "AllowedOrigins",
        "UniqueKey"
    ],
    "s3.bucket.cors.corsrule.exposedheaders": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "s3.bucket.cors.corsrule.exposedheaders",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.cors.corsrule.id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.cors.corsrule.id",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.cors.corsrule.maxage": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.cors.corsrule.maxage",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.cors.corsrules": {
        "Required": "Yes",
        "Type": "List of [CorsRule",
        "UniqueKey": "s3.bucket.cors.corsrules",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.corsconfiguration": {
        "Required": "No",
        "SampleValue": "TODO-corsconfiguration",
        "UniqueKey": "s3.bucket.corsconfiguration",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.dataexport.cfnproperties": [
        "Destination",
        "OutputSchemaVersion",
        "UniqueKey",
        "SampleValue"
    ],
    "s3.bucket.dataexport.destination": {
        "Required": "Yes",
        "Type": "Destination",
        "UniqueKey": "s3.bucket.dataexport.destination",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.dataexport.outputschemaversion": {
        "Allowed Values": "V_1",
        "AllowedValues": [
            "V_1"
        ],
        "Pattern": "^[V_1]",
        "Required": "Yes",
        "SampleValue": "V_1",
        "Type": "String",
        "UniqueKey": "s3.bucket.dataexport.outputschemaversion",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.defaultretention.cfnproperties": [
        "Years",
        "Days",
        "Mode",
        "UniqueKey"
    ],
    "s3.bucket.defaultretention.days": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.defaultretention.days",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.defaultretention.mode": {
        "Allowed Values": "COMPLIANCE | GOVERNANCE",
        "AllowedValues": [
            "COMPLIANCE",
            "GOVERNANCE"
        ],
        "Pattern": "^[COMPLIANCE|GOVERNANCE]",
        "Required": "No",
        "SampleValue": "COMPLIANCE|GOVERNANCE",
        "Type": "String",
        "UniqueKey": "s3.bucket.defaultretention.mode",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.defaultretention.years": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.defaultretention.years",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.destination.bucketaccountid": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.destination.bucketaccountid",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.destination.bucketarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.destination.bucketarn",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.destination.cfnproperties": [
        "BucketArn",
        "BucketAccountId",
        "Prefix",
        "Format",
        "UniqueKey"
    ],
    "s3.bucket.destination.format": {
        "Allowed Values": "CSV",
        "AllowedValues": [
            "CSV"
        ],
        "Pattern": "^[CSV]",
        "Required": "Yes",
        "SampleValue": "CSV",
        "Type": "String",
        "UniqueKey": "s3.bucket.destination.format",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.destination.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.destination.prefix",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.encryptionconfiguration.cfnproperties": [
        "ReplicaKmsKeyID",
        "UniqueKey"
    ],
    "s3.bucket.encryptionconfiguration.replicakmskeyid": {
        "Required": "Yes",
        "SampleValue": "TODO-replicakmskeyid",
        "UniqueKey": "s3.bucket.encryptionconfiguration.replicakmskeyid",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.inventoryconfiguration.cfnproperties": [
        "ScheduleFrequency",
        "Destination",
        "Enabled",
        "OptionalFields",
        "Prefix",
        "IncludedObjectVersions",
        "Id",
        "UniqueKey"
    ],
    "s3.bucket.inventoryconfiguration.destination": {
        "Required": "Yes",
        "Type": "Destination",
        "UniqueKey": "s3.bucket.inventoryconfiguration.destination",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.inventoryconfiguration.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.bucket.inventoryconfiguration.enabled",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.inventoryconfiguration.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.inventoryconfiguration.id",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.inventoryconfiguration.includedobjectversions": {
        "Allowed Values": "All | Current",
        "AllowedValues": [
            "All",
            "Current"
        ],
        "Pattern": "^[All|Current]",
        "Required": "Yes",
        "SampleValue": "All|Current",
        "Type": "String",
        "UniqueKey": "s3.bucket.inventoryconfiguration.includedobjectversions",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.inventoryconfiguration.optionalfields": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "s3.bucket.inventoryconfiguration.optionalfields",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.inventoryconfiguration.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.inventoryconfiguration.prefix",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.inventoryconfiguration.schedulefrequency": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.inventoryconfiguration.schedulefrequency",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.inventoryconfigurations": {
        "Required": "No",
        "SampleValue": "TODO-inventoryconfigurations",
        "UniqueKey": "s3.bucket.inventoryconfigurations",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.lifecycleconfig.cfnproperties": [
        "Rules",
        "UniqueKey"
    ],
    "s3.bucket.lifecycleconfig.rule.abortincompletemultipartupload": {
        "Required": "Conditional",
        "Type": "AbortIncompleteMultipartUpload",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.abortincompletemultipartupload",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.lifecycleconfig.rule.cfnproperties": [
        "Status",
        "TagFilters",
        "NoncurrentVersionExpirationInDays",
        "Transition",
        "AbortIncompleteMultipartUpload",
        "NoncurrentVersionTransitions",
        "Prefix",
        "ExpirationDate",
        "ExpirationInDays",
        "NoncurrentVersionTransition",
        "Transitions",
        "Id",
        "UniqueKey"
    ],
    "s3.bucket.lifecycleconfig.rule.expirationdate": {
        "Required": "Conditional",
        "Type": "Timestamp",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.expirationdate",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.lifecycleconfig.rule.expirationindays": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.expirationindays",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.lifecycleconfig.rule.id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.id",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.lifecycleconfig.rule.noncurrentversionexpirationindays": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.noncurrentversionexpirationindays",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition": {
        "Required": "Conditional",
        "Type": "NoncurrentVersionTransition",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition.cfnproperties": [
        "TransitionInDays",
        "StorageClass",
        "UniqueKey",
        "SampleValue"
    ],
    "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition.storageclass": {
        "Allowed Values": "DEEP_ARCHIVE | GLACIER | INTELLIGENT_TIERING | ONEZONE_IA | STANDARD_IA",
        "AllowedValues": [
            "DEEP_ARCHIVE",
            "GLACIER",
            "INTELLIGENT_TIERING",
            "ONEZONE_IA",
            "STANDARD_IA"
        ],
        "Pattern": "^[DEEP_ARCHIVE|GLACIER|INTELLIGENT_TIERING|ONEZONE_IA|STANDARD_IA]",
        "Required": "Yes",
        "SampleValue": "DEEP_ARCHIVE|GLACIER|INTELLIGENT_TIERING|ONEZONE_IA|STANDARD_IA",
        "Type": "String",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition.storageclass",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition.transitionindays": {
        "Required": "Yes",
        "SampleValue": "TODO-transitionindays",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.noncurrentversiontransition.transitionindays",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.lifecycleconfig.rule.noncurrentversiontransitions": {
        "Required": "Conditional",
        "Type": "List of [NoncurrentVersionTransition",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.noncurrentversiontransitions",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.lifecycleconfig.rule.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.prefix",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.lifecycleconfig.rule.status": {
        "Allowed Values": "Disabled | Enabled",
        "AllowedValues": [
            "Disabled",
            "Enabled"
        ],
        "Pattern": "^[Disabled|Enabled]",
        "Required": "Yes",
        "SampleValue": "Disabled|Enabled",
        "Type": "String",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.status",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.lifecycleconfig.rule.tagfilters": {
        "Required": "No",
        "Type": "List of [TagFilter",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.tagfilters",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.lifecycleconfig.rule.transition": {
        "Required": "Conditional",
        "Type": "Transition",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.transition",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.lifecycleconfig.rule.transition.cfnproperties": [
        "TransitionInDays",
        "TransitionDate",
        "StorageClass",
        "UniqueKey"
    ],
    "s3.bucket.lifecycleconfig.rule.transition.storageclass": {
        "Allowed Values": "DEEP_ARCHIVE | GLACIER | INTELLIGENT_TIERING | ONEZONE_IA | STANDARD_IA",
        "AllowedValues": [
            "DEEP_ARCHIVE",
            "GLACIER",
            "INTELLIGENT_TIERING",
            "ONEZONE_IA",
            "STANDARD_IA"
        ],
        "Pattern": "^[DEEP_ARCHIVE|GLACIER|INTELLIGENT_TIERING|ONEZONE_IA|STANDARD_IA]",
        "Required": "Yes",
        "SampleValue": "DEEP_ARCHIVE|GLACIER|INTELLIGENT_TIERING|ONEZONE_IA|STANDARD_IA",
        "Type": "String",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.transition.storageclass",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.lifecycleconfig.rule.transition.transitiondate": {
        "Required": "Conditional",
        "Type": "Timestamp",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.transition.transitiondate",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.lifecycleconfig.rule.transition.transitionindays": {
        "Required": "Conditional",
        "Type": "Integer",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.transition.transitionindays",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.lifecycleconfig.rule.transitions": {
        "Required": "Conditional",
        "Type": "List of [Transition",
        "UniqueKey": "s3.bucket.lifecycleconfig.rule.transitions",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.lifecycleconfig.rules": {
        "Required": "Yes",
        "Type": "List of [Rule",
        "UniqueKey": "s3.bucket.lifecycleconfig.rules",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.lifecycleconfiguration": {
        "Required": "No",
        "SampleValue": "TODO-lifecycleconfiguration",
        "UniqueKey": "s3.bucket.lifecycleconfiguration",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.loggingconfig.cfnproperties": [
        "DestinationBucketName",
        "LogFilePrefix",
        "UniqueKey",
        "SampleValue"
    ],
    "s3.bucket.loggingconfig.destinationbucketname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.loggingconfig.destinationbucketname",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.loggingconfig.logfileprefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.loggingconfig.logfileprefix",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.loggingconfiguration": {
        "Required": "No",
        "Type": "LoggingConfiguration",
        "UniqueKey": "s3.bucket.loggingconfiguration",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.metricsconfiguration.cfnproperties": [
        "Prefix",
        "TagFilters",
        "Id",
        "UniqueKey"
    ],
    "s3.bucket.metricsconfiguration.id": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.metricsconfiguration.id",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.metricsconfiguration.prefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.metricsconfiguration.prefix",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.metricsconfiguration.tagfilters": {
        "Required": "No",
        "Type": "List of [TagFilter",
        "UniqueKey": "s3.bucket.metricsconfiguration.tagfilters",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.metricsconfigurations": {
        "Required": "No",
        "SampleValue": "TODO-metricsconfigurations",
        "UniqueKey": "s3.bucket.metricsconfigurations",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.notificationconfig.cfnproperties": [
        "TopicConfigurations",
        "LambdaConfigurations",
        "QueueConfigurations",
        "UniqueKey"
    ],
    "s3.bucket.notificationconfig.lambdaconfig.cfnproperties": [
        "Filter",
        "Function",
        "Event",
        "UniqueKey"
    ],
    "s3.bucket.notificationconfig.lambdaconfig.event": {
        "Required": "Yes",
        "SampleValue": "TODO-event",
        "UniqueKey": "s3.bucket.notificationconfig.lambdaconfig.event",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.notificationconfig.lambdaconfig.filter": {
        "Required": "No",
        "Type": "NotificationFilter",
        "UniqueKey": "s3.bucket.notificationconfig.lambdaconfig.filter",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.notificationconfig.lambdaconfig.function": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.notificationconfig.lambdaconfig.function",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.notificationconfig.lambdaconfigurations": {
        "Required": "No",
        "Type": "List of [LambdaConfiguration",
        "UniqueKey": "s3.bucket.notificationconfig.lambdaconfigurations",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.notificationconfig.queueconfig.cfnproperties": [
        "Filter",
        "Queue",
        "Event",
        "UniqueKey"
    ],
    "s3.bucket.notificationconfig.queueconfig.event": {
        "Required": "Yes",
        "SampleValue": "TODO-event",
        "UniqueKey": "s3.bucket.notificationconfig.queueconfig.event",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.notificationconfig.queueconfig.filter": {
        "Required": "No",
        "Type": "NotificationFilter",
        "UniqueKey": "s3.bucket.notificationconfig.queueconfig.filter",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.notificationconfig.queueconfig.queue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.notificationconfig.queueconfig.queue",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.notificationconfig.queueconfigurations": {
        "Required": "No",
        "Type": "List of [QueueConfiguration",
        "UniqueKey": "s3.bucket.notificationconfig.queueconfigurations",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.notificationconfig.topicconfig.cfnproperties": [
        "Filter",
        "Topic",
        "Event",
        "UniqueKey"
    ],
    "s3.bucket.notificationconfig.topicconfig.event": {
        "Required": "Yes",
        "SampleValue": "TODO-event",
        "UniqueKey": "s3.bucket.notificationconfig.topicconfig.event",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.notificationconfig.topicconfig.filter": {
        "Required": "No",
        "Type": "NotificationFilter",
        "UniqueKey": "s3.bucket.notificationconfig.topicconfig.filter",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.notificationconfig.topicconfig.topic": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.notificationconfig.topicconfig.topic",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.notificationconfig.topicconfigurations": {
        "Required": "No",
        "Type": "List of [TopicConfiguration",
        "UniqueKey": "s3.bucket.notificationconfig.topicconfigurations",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.notificationconfiguration": {
        "Required": "No",
        "Type": "NotificationConfiguration",
        "UniqueKey": "s3.bucket.notificationconfiguration",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.notificationconfiguration.config.filter.cfnproperties": [
        "S3Key",
        "UniqueKey"
    ],
    "s3.bucket.notificationconfiguration.config.filter.s3key": {
        "Required": "Yes",
        "Type": "S3KeyFilter",
        "UniqueKey": "s3.bucket.notificationconfiguration.config.filter.s3key",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.notificationconfiguration.config.filter.s3key.cfnproperties": [
        "Rules",
        "UniqueKey"
    ],
    "s3.bucket.notificationconfiguration.config.filter.s3key.rules": {
        "Required": "Yes",
        "Type": "List of [FilterRule",
        "UniqueKey": "s3.bucket.notificationconfiguration.config.filter.s3key.rules",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.notificationconfiguration.config.filter.s3key.rules.cfnproperties": [
        "Name",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "s3.bucket.notificationconfiguration.config.filter.s3key.rules.name": {
        "AllowedValues": [
            "prefix",
            "suffix"
        ],
        "Pattern": "^[prefix|suffix]",
        "Required": "Yes",
        "SampleValue": "prefix|suffix",
        "UniqueKey": "s3.bucket.notificationconfiguration.config.filter.s3key.rules.name",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.notificationconfiguration.config.filter.s3key.rules.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.notificationconfiguration.config.filter.s3key.rules.value",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.objectlockconfiguration": {
        "Required": "No",
        "SampleValue": "TODO-objectlockconfiguration",
        "UniqueKey": "s3.bucket.objectlockconfiguration",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.objectlockconfiguration.cfnproperties": [
        "ObjectLockEnabled",
        "Rule",
        "UniqueKey",
        "SampleValue"
    ],
    "s3.bucket.objectlockconfiguration.objectlockenabled": {
        "Allowed Values": "Enabled",
        "AllowedValues": [
            "Enabled"
        ],
        "Pattern": "^[Enabled]",
        "Required": "No",
        "SampleValue": "Enabled",
        "Type": "String",
        "UniqueKey": "s3.bucket.objectlockconfiguration.objectlockenabled",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.objectlockconfiguration.rule": {
        "Required": "No",
        "Type": "ObjectLockRule",
        "UniqueKey": "s3.bucket.objectlockconfiguration.rule",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.objectlockenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.bucket.objectlockenabled",
        "UpdateRequires": "Replacement"
    },
    "s3.bucket.objectlockrule.cfnproperties": [
        "DefaultRetention",
        "UniqueKey"
    ],
    "s3.bucket.objectlockrule.defaultretention": {
        "Required": "No",
        "Type": "DefaultRetention",
        "UniqueKey": "s3.bucket.objectlockrule.defaultretention",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.publicaccessblockconfiguration": {
        "Required": "No",
        "Type": "PublicAccessBlockConfiguration",
        "UniqueKey": "s3.bucket.publicaccessblockconfiguration",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.publicaccessblockconfiguration.blockpublicacls": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.bucket.publicaccessblockconfiguration.blockpublicacls",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.publicaccessblockconfiguration.blockpublicpolicy": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.bucket.publicaccessblockconfiguration.blockpublicpolicy",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.publicaccessblockconfiguration.cfnproperties": [
        "IgnorePublicAcls",
        "BlockPublicPolicy",
        "BlockPublicAcls",
        "RestrictPublicBuckets",
        "UniqueKey"
    ],
    "s3.bucket.publicaccessblockconfiguration.ignorepublicacls": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.bucket.publicaccessblockconfiguration.ignorepublicacls",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.publicaccessblockconfiguration.restrictpublicbuckets": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "s3.bucket.publicaccessblockconfiguration.restrictpublicbuckets",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.replicationconfiguration": {
        "Required": "No",
        "Type": "ReplicationConfiguration",
        "UniqueKey": "s3.bucket.replicationconfiguration",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.replicationconfiguration.cfnproperties": [
        "Rules",
        "Role",
        "UniqueKey",
        "SampleValue"
    ],
    "s3.bucket.replicationconfiguration.role": {
        "Required": "Yes",
        "SampleValue": "TODO-role",
        "UniqueKey": "s3.bucket.replicationconfiguration.role",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.replicationconfiguration.rules": {
        "Required": "Yes",
        "Type": "List of [ReplicationRule",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.replicationconfiguration.rules.cfnproperties": [
        "Status",
        "Prefix",
        "Destination",
        "Id",
        "SourceSelectionCriteria",
        "UniqueKey"
    ],
    "s3.bucket.replicationconfiguration.rules.destination": {
        "Required": "Yes",
        "Type": "ReplicationDestination",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.replicationconfiguration.rules.destination.accesscontroltranslation": {
        "Required": "No",
        "Type": "AccessControlTranslation",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination.accesscontroltranslation",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.replicationconfiguration.rules.destination.account": {
        "Required": "Conditional",
        "SampleValue": "TODO-account",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination.account",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.replicationconfiguration.rules.destination.bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination.bucket",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.replicationconfiguration.rules.destination.cfnproperties": [
        "EncryptionConfiguration",
        "AccessControlTranslation",
        "Bucket",
        "Account",
        "StorageClass",
        "UniqueKey"
    ],
    "s3.bucket.replicationconfiguration.rules.destination.encryptionconfiguration": {
        "Required": "No",
        "Type": "EncryptionConfiguration",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination.encryptionconfiguration",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.replicationconfiguration.rules.destination.storageclass": {
        "AllowedValues": [
            "DEEP_ARCHIVE",
            "GLACIER",
            "INTELLIGENT_TIERING",
            "ONEZONE_IA",
            "REDUCED_REDUNDANCY",
            "STANDARD",
            "STANDARD_IA"
        ],
        "Pattern": "^[DEEP_ARCHIVE|GLACIER|INTELLIGENT_TIERING|ONEZONE_IA|REDUCED_REDUNDANCY|STANDARD|STANDARD_IA]",
        "Required": "No",
        "SampleValue": "DEEP_ARCHIVE|GLACIER|INTELLIGENT_TIERING|ONEZONE_IA|REDUCED_REDUNDANCY|STANDARD|STANDARD_IA",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.destination.storageclass",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.replicationconfiguration.rules.id": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.id",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.replicationconfiguration.rules.prefix": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.prefix",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.replicationconfiguration.rules.sourceselectioncriteria": {
        "Required": "No",
        "Type": "SourceSelectionCriteria",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.sourceselectioncriteria",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.replicationconfiguration.rules.status": {
        "Allowed Values": "Disabled | Enabled",
        "AllowedValues": [
            "Disabled",
            "Enabled"
        ],
        "Pattern": "^[Disabled|Enabled]",
        "Required": "Yes",
        "SampleValue": "Disabled|Enabled",
        "Type": "String",
        "UniqueKey": "s3.bucket.replicationconfiguration.rules.status",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.serversideencryptionbydefault.cfnproperties": [
        "KMSMasterKeyID",
        "SSEAlgorithm",
        "UniqueKey",
        "SampleValue"
    ],
    "s3.bucket.serversideencryptionbydefault.kmsmasterkeyid": {
        "Required": "No",
        "SampleValue": "TODO-kmsmasterkeyid",
        "UniqueKey": "s3.bucket.serversideencryptionbydefault.kmsmasterkeyid",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.serversideencryptionbydefault.ssealgorithm": {
        "Allowed Values": "AES256 | aws:kms",
        "AllowedValues": [
            "AES256",
            "aws:kms"
        ],
        "Pattern": "^[AES256|aws:kms]",
        "Required": "Yes",
        "SampleValue": "AES256|aws:kms",
        "Type": "String",
        "UniqueKey": "s3.bucket.serversideencryptionbydefault.ssealgorithm",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.serversideencryptionrule.cfnproperties": [
        "ServerSideEncryptionByDefault",
        "UniqueKey"
    ],
    "s3.bucket.serversideencryptionrule.serversideencryptionbydefault": {
        "Required": "No",
        "Type": "ServerSideEncryptionByDefault",
        "UniqueKey": "s3.bucket.serversideencryptionrule.serversideencryptionbydefault",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.sourceselectioncriteria.cfnproperties": [
        "SseKmsEncryptedObjects",
        "UniqueKey"
    ],
    "s3.bucket.sourceselectioncriteria.ssekmsencryptedobjects": {
        "Required": "Yes",
        "Type": "SseKmsEncryptedObjects",
        "UniqueKey": "s3.bucket.sourceselectioncriteria.ssekmsencryptedobjects",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.ssekmsencryptedobjects.cfnproperties": [
        "Status",
        "UniqueKey"
    ],
    "s3.bucket.ssekmsencryptedobjects.status": {
        "Allowed Values": "Disabled | Enabled",
        "AllowedValues": [
            "Disabled",
            "Enabled"
        ],
        "Pattern": "^[Disabled|Enabled]",
        "Required": "Yes",
        "SampleValue": "Disabled|Enabled",
        "Type": "String",
        "UniqueKey": "s3.bucket.ssekmsencryptedobjects.status",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.storageclassanalysis.cfnproperties": [
        "DataExport",
        "UniqueKey"
    ],
    "s3.bucket.storageclassanalysis.dataexport": {
        "Required": "No",
        "Type": "DataExport",
        "UniqueKey": "s3.bucket.storageclassanalysis.dataexport",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.tagfilter.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "s3.bucket.tagfilter.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.tagfilter.key",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.tagfilter.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.bucket.tagfilter.value",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "s3.bucket.tags",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.versioningconfig.cfnproperties": [
        "Status",
        "UniqueKey"
    ],
    "s3.bucket.versioningconfig.status": {
        "Allowed Values": "Enabled | Suspended",
        "AllowedValues": [
            "Enabled",
            "Suspended"
        ],
        "Pattern": "^[Enabled|Suspended]",
        "Required": "Yes",
        "SampleValue": "Enabled|Suspended",
        "Type": "String",
        "UniqueKey": "s3.bucket.versioningconfig.status",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.versioningconfiguration": {
        "Required": "No",
        "Type": "VersioningConfiguration",
        "UniqueKey": "s3.bucket.versioningconfiguration",
        "UpdateRequires": "No interruption"
    },
    "s3.bucket.websiteconfiguration": {
        "Required": "No",
        "Type": "WebsiteConfiguration",
        "UniqueKey": "s3.bucket.websiteconfiguration",
        "UpdateRequires": "No interruption"
    },
    "s3.policy.bucket": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.policy.bucket",
        "UpdateRequires": "Replacement"
    },
    "s3.policy.cfnproperties": [
        "PolicyDocument",
        "Bucket",
        "UniqueKey",
        "SampleValue"
    ],
    "s3.policy.policydocument": {
        "Required": "Yes",
        "SampleValue": "TODO-policydocument",
        "UniqueKey": "s3.policy.policydocument",
        "UpdateRequires": "No interruption"
    },
    "s3.websiteconfiguration.cfnproperties": [
        "RedirectAllRequestsTo",
        "IndexDocument",
        "ErrorDocument",
        "RoutingRules",
        "UniqueKey"
    ],
    "s3.websiteconfiguration.errordocument": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.errordocument",
        "UpdateRequires": "No interruption"
    },
    "s3.websiteconfiguration.indexdocument": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.indexdocument",
        "UpdateRequires": "No interruption"
    },
    "s3.websiteconfiguration.redirectallrequeststo": {
        "Required": "No",
        "Type": "RedirectAllRequestsTo",
        "UniqueKey": "s3.websiteconfiguration.redirectallrequeststo",
        "UpdateRequires": "No interruption"
    },
    "s3.websiteconfiguration.redirectallrequeststo.cfnproperties": [
        "HostName",
        "Protocol",
        "UniqueKey",
        "SampleValue"
    ],
    "s3.websiteconfiguration.redirectallrequeststo.hostname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.redirectallrequeststo.hostname",
        "UpdateRequires": "No interruption"
    },
    "s3.websiteconfiguration.redirectallrequeststo.protocol": {
        "Allowed Values": "http | https",
        "AllowedValues": [
            "http",
            "https"
        ],
        "Pattern": "^[http|https]",
        "Required": "No",
        "SampleValue": "http|https",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.redirectallrequeststo.protocol",
        "UpdateRequires": "No interruption"
    },
    "s3.websiteconfiguration.routingrules": {
        "Required": "No",
        "Type": "List of [RoutingRule",
        "UniqueKey": "s3.websiteconfiguration.routingrules",
        "UpdateRequires": "No interruption"
    },
    "s3.websiteconfiguration.routingrules.cfnproperties": [
        "RoutingRuleCondition",
        "RedirectRule",
        "UniqueKey",
        "SampleValue"
    ],
    "s3.websiteconfiguration.routingrules.redirectrule": {
        "Required": "Yes",
        "Type": "RedirectRule",
        "UniqueKey": "s3.websiteconfiguration.routingrules.redirectrule",
        "UpdateRequires": "No interruption"
    },
    "s3.websiteconfiguration.routingrules.redirectrule.cfnproperties": [
        "ReplaceKeyWith",
        "HostName",
        "Protocol",
        "ReplaceKeyPrefixWith",
        "HttpRedirectCode",
        "UniqueKey"
    ],
    "s3.websiteconfiguration.routingrules.redirectrule.hostname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.redirectrule.hostname",
        "UpdateRequires": "No interruption"
    },
    "s3.websiteconfiguration.routingrules.redirectrule.httpredirectcode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.redirectrule.httpredirectcode",
        "UpdateRequires": "No interruption"
    },
    "s3.websiteconfiguration.routingrules.redirectrule.protocol": {
        "Allowed Values": "http | https",
        "AllowedValues": [
            "http",
            "https"
        ],
        "Pattern": "^[http|https]",
        "Required": "No",
        "SampleValue": "http|https",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.redirectrule.protocol",
        "UpdateRequires": "No interruption"
    },
    "s3.websiteconfiguration.routingrules.redirectrule.replacekeyprefixwith": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.redirectrule.replacekeyprefixwith",
        "UpdateRequires": "No interruption"
    },
    "s3.websiteconfiguration.routingrules.redirectrule.replacekeywith": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.redirectrule.replacekeywith",
        "UpdateRequires": "No interruption"
    },
    "s3.websiteconfiguration.routingrules.routingrulecondition": {
        "Required": "No",
        "Type": "RoutingRuleCondition",
        "UniqueKey": "s3.websiteconfiguration.routingrules.routingrulecondition",
        "UpdateRequires": "No interruption"
    },
    "s3.websiteconfiguration.routingrules.routingrulecondition.cfnproperties": [
        "HttpErrorCodeReturnedEquals",
        "KeyPrefixEquals",
        "UniqueKey",
        "SampleValue"
    ],
    "s3.websiteconfiguration.routingrules.routingrulecondition.httperrorcodereturnedequals": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.routingrulecondition.httperrorcodereturnedequals",
        "UpdateRequires": "No interruption"
    },
    "s3.websiteconfiguration.routingrules.routingrulecondition.keyprefixequals": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "s3.websiteconfiguration.routingrules.routingrulecondition.keyprefixequals",
        "UpdateRequires": "No interruption"
    },
    "sagemaker.coderepository.gitconfig.branch": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "[^ ~^:?*\\[]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.coderepository.gitconfig.branch",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.coderepository.gitconfig.cfnproperties": [
        "SecretArn",
        "RepositoryUrl",
        "Branch",
        "UniqueKey"
    ],
    "sagemaker.coderepository.gitconfig.repositoryurl": {
        "Pattern": "^https://([^/]+)/?(.*)$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.coderepository.gitconfig.repositoryurl",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.coderepository.gitconfig.secretarn": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "arn:aws[a-z\\-]*:secretsmanager:[a-z0-9\\-]*:[0-9]{12}:secret:.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.coderepository.gitconfig.secretarn",
        "UpdateRequires": "No interruption"
    },
    "sagemaker.endpoint.variantproperty.cfnproperties": [
        "VariantPropertyType",
        "UniqueKey"
    ],
    "sagemaker.endpoint.variantproperty.variantpropertytype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.endpoint.variantproperty.variantpropertytype",
        "UpdateRequires": "No interruption"
    },
    "sagemaker.endpointconfig.productionvariant.acceleratortype": {
        "Allowed Values": "ml.eia1.large | ml.eia1.medium | ml.eia1.xlarge | ml.eia2.large | ml.eia2.medium | ml.eia2.xlarge",
        "AllowedValues": [
            "ml.eia1.large",
            "ml.eia1.medium",
            "ml.eia1.xlarge",
            "ml.eia2.large",
            "ml.eia2.medium",
            "ml.eia2.xlarge"
        ],
        "Pattern": "^[ml.eia1.large|ml.eia1.medium|ml.eia1.xlarge|ml.eia2.large|ml.eia2.medium|ml.eia2.xlarge]",
        "Required": "No",
        "SampleValue": "ml.eia1.large|ml.eia1.medium|ml.eia1.xlarge|ml.eia2.large|ml.eia2.medium|ml.eia2.xlarge",
        "Type": "String",
        "UniqueKey": "sagemaker.endpointconfig.productionvariant.acceleratortype",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.productionvariant.cfnproperties": [
        "ModelName",
        "InitialVariantWeight",
        "VariantName",
        "InitialInstanceCount",
        "AcceleratorType",
        "InstanceType",
        "UniqueKey"
    ],
    "sagemaker.endpointconfig.productionvariant.initialinstancecount": {
        "Minimum": "1",
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "sagemaker.endpointconfig.productionvariant.initialinstancecount",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.productionvariant.initialvariantweight": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "sagemaker.endpointconfig.productionvariant.initialvariantweight",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.productionvariant.instancetype": {
        "Allowed Values": "ml.c4.2xlarge | ml.c4.4xlarge | ml.c4.8xlarge | ml.c4.large | ml.c4.xlarge | ml.c5.18xlarge | ml.c5.2xlarge | ml.c5.4xlarge | ml.c5.9xlarge | ml.c5.large | ml.c5.xlarge | ml.c5d.18xlarge | ml.c5d.2xlarge | ml.c5d.4xlarge | ml.c5d.9xlarge | ml.c5d.large | ml.c5d.xlarge | ml.g4dn.12xlarge | ml.g4dn.16xlarge | ml.g4dn.2xlarge | ml.g4dn.4xlarge | ml.g4dn.8xlarge | ml.g4dn.xlarge | ml.inf1.24xlarge | ml.inf1.2xlarge | ml.inf1.6xlarge | ml.inf1.xlarge | ml.m4.10xlarge | ml.m4.16xlarge | ml.m4.2xlarge | ml.m4.4xlarge | ml.m4.xlarge | ml.m5.12xlarge | ml.m5.24xlarge | ml.m5.2xlarge | ml.m5.4xlarge | ml.m5.large | ml.m5.xlarge | ml.m5d.12xlarge | ml.m5d.24xlarge | ml.m5d.2xlarge | ml.m5d.4xlarge | ml.m5d.large | ml.m5d.xlarge | ml.p2.16xlarge | ml.p2.8xlarge | ml.p2.xlarge | ml.p3.16xlarge | ml.p3.2xlarge | ml.p3.8xlarge | ml.r5.12xlarge | ml.r5.24xlarge | ml.r5.2xlarge | ml.r5.4xlarge | ml.r5.large | ml.r5.xlarge | ml.r5d.12xlarge | ml.r5d.24xlarge | ml.r5d.2xlarge | ml.r5d.4xlarge | ml.r5d.large | ml.r5d.xlarge | ml.t2.2xlarge | ml.t2.large | ml.t2.medium | ml.t2.xlarge",
        "AllowedValues": [
            "ml.c4.2xlarge",
            "ml.c4.4xlarge",
            "ml.c4.8xlarge",
            "ml.c4.large",
            "ml.c4.xlarge",
            "ml.c5.18xlarge",
            "ml.c5.2xlarge",
            "ml.c5.4xlarge",
            "ml.c5.9xlarge",
            "ml.c5.large",
            "ml.c5.xlarge",
            "ml.c5d.18xlarge",
            "ml.c5d.2xlarge",
            "ml.c5d.4xlarge",
            "ml.c5d.9xlarge",
            "ml.c5d.large",
            "ml.c5d.xlarge",
            "ml.g4dn.12xlarge",
            "ml.g4dn.16xlarge",
            "ml.g4dn.2xlarge",
            "ml.g4dn.4xlarge",
            "ml.g4dn.8xlarge",
            "ml.g4dn.xlarge",
            "ml.inf1.24xlarge",
            "ml.inf1.2xlarge",
            "ml.inf1.6xlarge",
            "ml.inf1.xlarge",
            "ml.m4.10xlarge",
            "ml.m4.16xlarge",
            "ml.m4.2xlarge",
            "ml.m4.4xlarge",
            "ml.m4.xlarge",
            "ml.m5.12xlarge",
            "ml.m5.24xlarge",
            "ml.m5.2xlarge",
            "ml.m5.4xlarge",
            "ml.m5.large",
            "ml.m5.xlarge",
            "ml.m5d.12xlarge",
            "ml.m5d.24xlarge",
            "ml.m5d.2xlarge",
            "ml.m5d.4xlarge",
            "ml.m5d.large",
            "ml.m5d.xlarge",
            "ml.p2.16xlarge",
            "ml.p2.8xlarge",
            "ml.p2.xlarge",
            "ml.p3.16xlarge",
            "ml.p3.2xlarge",
            "ml.p3.8xlarge",
            "ml.r5.12xlarge",
            "ml.r5.24xlarge",
            "ml.r5.2xlarge",
            "ml.r5.4xlarge",
            "ml.r5.large",
            "ml.r5.xlarge",
            "ml.r5d.12xlarge",
            "ml.r5d.24xlarge",
            "ml.r5d.2xlarge",
            "ml.r5d.4xlarge",
            "ml.r5d.large",
            "ml.r5d.xlarge",
            "ml.t2.2xlarge",
            "ml.t2.large",
            "ml.t2.medium",
            "ml.t2.xlarge"
        ],
        "Pattern": "^[ml.c4.2xlarge|ml.c4.4xlarge|ml.c4.8xlarge|ml.c4.large|ml.c4.xlarge|ml.c5.18xlarge|ml.c5.2xlarge|ml.c5.4xlarge|ml.c5.9xlarge|ml.c5.large|ml.c5.xlarge|ml.c5d.18xlarge|ml.c5d.2xlarge|ml.c5d.4xlarge|ml.c5d.9xlarge|ml.c5d.large|ml.c5d.xlarge|ml.g4dn.12xlarge|ml.g4dn.16xlarge|ml.g4dn.2xlarge|ml.g4dn.4xlarge|ml.g4dn.8xlarge|ml.g4dn.xlarge|ml.inf1.24xlarge|ml.inf1.2xlarge|ml.inf1.6xlarge|ml.inf1.xlarge|ml.m4.10xlarge|ml.m4.16xlarge|ml.m4.2xlarge|ml.m4.4xlarge|ml.m4.xlarge|ml.m5.12xlarge|ml.m5.24xlarge|ml.m5.2xlarge|ml.m5.4xlarge|ml.m5.large|ml.m5.xlarge|ml.m5d.12xlarge|ml.m5d.24xlarge|ml.m5d.2xlarge|ml.m5d.4xlarge|ml.m5d.large|ml.m5d.xlarge|ml.p2.16xlarge|ml.p2.8xlarge|ml.p2.xlarge|ml.p3.16xlarge|ml.p3.2xlarge|ml.p3.8xlarge|ml.r5.12xlarge|ml.r5.24xlarge|ml.r5.2xlarge|ml.r5.4xlarge|ml.r5.large|ml.r5.xlarge|ml.r5d.12xlarge|ml.r5d.24xlarge|ml.r5d.2xlarge|ml.r5d.4xlarge|ml.r5d.large|ml.r5d.xlarge|ml.t2.2xlarge|ml.t2.large|ml.t2.medium|ml.t2.xlarge]",
        "Required": "Yes",
        "SampleValue": "ml.c4.2xlarge|ml.c4.4xlarge|ml.c4.8xlarge|ml.c4.large|ml.c4.xlarge|ml.c5.18xlarge|ml.c5.2xlarge|ml.c5.4xlarge|ml.c5.9xlarge|ml.c5.large|ml.c5.xlarge|ml.c5d.18xlarge|ml.c5d.2xlarge|ml.c5d.4xlarge|ml.c5d.9xlarge|ml.c5d.large|ml.c5d.xlarge|ml.g4dn.12xlarge|ml.g4dn.16xlarge|ml.g4dn.2xlarge|ml.g4dn.4xlarge|ml.g4dn.8xlarge|ml.g4dn.xlarge|ml.inf1.24xlarge|ml.inf1.2xlarge|ml.inf1.6xlarge|ml.inf1.xlarge|ml.m4.10xlarge|ml.m4.16xlarge|ml.m4.2xlarge|ml.m4.4xlarge|ml.m4.xlarge|ml.m5.12xlarge|ml.m5.24xlarge|ml.m5.2xlarge|ml.m5.4xlarge|ml.m5.large|ml.m5.xlarge|ml.m5d.12xlarge|ml.m5d.24xlarge|ml.m5d.2xlarge|ml.m5d.4xlarge|ml.m5d.large|ml.m5d.xlarge|ml.p2.16xlarge|ml.p2.8xlarge|ml.p2.xlarge|ml.p3.16xlarge|ml.p3.2xlarge|ml.p3.8xlarge|ml.r5.12xlarge|ml.r5.24xlarge|ml.r5.2xlarge|ml.r5.4xlarge|ml.r5.large|ml.r5.xlarge|ml.r5d.12xlarge|ml.r5d.24xlarge|ml.r5d.2xlarge|ml.r5d.4xlarge|ml.r5d.large|ml.r5d.xlarge|ml.t2.2xlarge|ml.t2.large|ml.t2.medium|ml.t2.xlarge",
        "Type": "String",
        "UniqueKey": "sagemaker.endpointconfig.productionvariant.instancetype",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.productionvariant.modelname": {
        "Maximum": "63",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.endpointconfig.productionvariant.modelname",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.endpointconfig.productionvariant.variantname": {
        "Maximum": "63",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.endpointconfig.productionvariant.variantname",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.containerdefinition.cfnproperties": [
        "Environment",
        "Image",
        "ModelDataUrl",
        "ContainerHostname",
        "UniqueKey"
    ],
    "sagemaker.model.containerdefinition.containerhostname": {
        "Maximum": "63",
        "Pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.model.containerdefinition.containerhostname",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.containerdefinition.environment": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "sagemaker.model.containerdefinition.environment",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.containerdefinition.image": {
        "Maximum": "255",
        "Pattern": "[\\S]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.model.containerdefinition.image",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.containerdefinition.modeldataurl": {
        "Maximum": "1024",
        "Pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "Required": "No",
        "UniqueKey": "sagemaker.model.containerdefinition.modeldataurl",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.vpcconfig.cfnproperties": [
        "Subnets",
        "SecurityGroupIds",
        "UniqueKey",
        "SampleValue"
    ],
    "sagemaker.model.vpcconfig.securitygroupids": {
        "Maximum": "5",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sagemaker.model.vpcconfig.securitygroupids",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.model.vpcconfig.subnets": {
        "Maximum": "16",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sagemaker.model.vpcconfig.subnets",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.notebookinstancelifecycleconfig.notebookinstancelifecyclehook.cfnproperties": [
        "Content",
        "UniqueKey"
    ],
    "sagemaker.notebookinstancelifecycleconfig.notebookinstancelifecyclehook.content": {
        "Maximum": "16384",
        "Minimum": "1",
        "Pattern": "[\\S\\s]+",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sagemaker.notebookinstancelifecycleconfig.notebookinstancelifecyclehook.content",
        "UpdateRequires": "No interruption"
    },
    "sagemaker.workteam.cognitomemberdefinition.cfnproperties": [
        "CognitoUserGroup",
        "CognitoClientId",
        "CognitoUserPool",
        "UniqueKey"
    ],
    "sagemaker.workteam.cognitomemberdefinition.cognitoclientid": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\w+]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.workteam.cognitomemberdefinition.cognitoclientid",
        "UpdateRequires": "No interruption"
    },
    "sagemaker.workteam.cognitomemberdefinition.cognitousergroup": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.workteam.cognitomemberdefinition.cognitousergroup",
        "UpdateRequires": "No interruption"
    },
    "sagemaker.workteam.cognitomemberdefinition.cognitouserpool": {
        "Maximum": "55",
        "Minimum": "1",
        "Pattern": "[\\w-]+_[0-9a-zA-Z]+",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.workteam.cognitomemberdefinition.cognitouserpool",
        "UpdateRequires": "Replacement"
    },
    "sagemaker.workteam.memberdefinition.cfnproperties": [
        "CognitoMemberDefinition",
        "UniqueKey"
    ],
    "sagemaker.workteam.memberdefinition.cognitomemberdefinition": {
        "Required": "Yes",
        "Type": "CognitoMemberDefinition",
        "UniqueKey": "sagemaker.workteam.memberdefinition.cognitomemberdefinition",
        "UpdateRequires": "No interruption"
    },
    "sagemaker.workteam.notificationconfiguration.cfnproperties": [
        "NotificationTopicArn",
        "UniqueKey"
    ],
    "sagemaker.workteam.notificationconfiguration.notificationtopicarn": {
        "Pattern": "arn:aws[a-z\\-]*:sns:[a-z0-9\\-]*:[0-9]{12}:[a-zA-Z0-9_.-]*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "sagemaker.workteam.notificationconfiguration.notificationtopicarn",
        "UpdateRequires": "No interruption"
    },
    "secretsmanager.rotationschedule.rotationrules.automaticallyafterdays": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "secretsmanager.rotationschedule.rotationrules.automaticallyafterdays",
        "UpdateRequires": "No interruption"
    },
    "secretsmanager.rotationschedule.rotationrules.cfnproperties": [
        "AutomaticallyAfterDays",
        "UniqueKey"
    ],
    "secretsmanager.secret.generatesecretstring.cfnproperties": [
        "ExcludePunctuation",
        "ExcludeLowercase",
        "ExcludeNumbers",
        "ExcludeCharacters",
        "UniqueKey"
    ],
    "secretsmanager.secret.generatesecretstring.excludecharacters": {
        "Maximum": "4096",
        "Minimum": "0",
        "Pattern": "^.{0,4096}$",
        "Required": "No",
        "SampleValue": "TODO-secretsmanager.secret.generatesecretstring.excludecharacters",
        "Type": "String",
        "UniqueKey": "secretsmanager.secret.generatesecretstring.excludecharacters",
        "UpdateRequires": "No interruption"
    },
    "secretsmanager.secret.generatesecretstring.excludelowercase": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "secretsmanager.secret.generatesecretstring.excludelowercase",
        "UpdateRequires": "No interruption"
    },
    "secretsmanager.secret.generatesecretstring.excludenumbers": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "secretsmanager.secret.generatesecretstring.excludenumbers",
        "UpdateRequires": "No interruption"
    },
    "secretsmanager.secret.generatesecretstring.excludepunctuation": {
        "UniqueKey": "secretsmanager.secret.generatesecretstring.excludepunctuation"
    },
    "servicecatalog.cloudformationproduct.provisioningartifactproperties": [
        "Info",
        "Description",
        "DisableTemplateValidation",
        "Name",
        "UniqueKey"
    ],
    "servicecatalog.cloudformationproduct.provisioningartifactproperties.cfnproperties": [
        "Info",
        "Description",
        "DisableTemplateValidation",
        "Name",
        "UniqueKey"
    ],
    "servicecatalog.cloudformationproduct.provisioningartifactproperties.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "servicecatalog.cloudformationproduct.provisioningartifactproperties.description",
        "UpdateRequires": "No interruption"
    },
    "servicecatalog.cloudformationproduct.provisioningartifactproperties.disabletemplatevalidation": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "servicecatalog.cloudformationproduct.provisioningartifactproperties.disabletemplatevalidation",
        "UpdateRequires": "No interruption"
    },
    "servicecatalog.cloudformationproduct.provisioningartifactproperties.info": {
        "Required": "Yes",
        "Type": "Json",
        "UniqueKey": "servicecatalog.cloudformationproduct.provisioningartifactproperties.info",
        "UpdateRequires": "No interruption"
    },
    "servicecatalog.cloudformationproduct.provisioningartifactproperties.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "servicecatalog.cloudformationproduct.provisioningartifactproperties.name",
        "UpdateRequires": "No interruption"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningparameter.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "servicecatalog.cloudformationprovisionedproduct.provisioningparameter.key": {
        "Maximum": "1000",
        "Minimum": "1",
        "Pattern": "^.{1,1000}$",
        "Required": "No",
        "SampleValue": "TODO-servicecatalog.cloudformationprovisionedproduct.provisioningparameter.key",
        "Type": "String",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningparameter.key",
        "UpdateRequires": "No interruption"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningparameter.value": {
        "Maximum": "4096",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningparameter.value",
        "UpdateRequires": "No interruption"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.cfnproperties": [
        "StackSetFailureTolerancePercentage",
        "StackSetMaxConcurrencyCount",
        "StackSetRegions",
        "StackSetFailureToleranceCount",
        "StackSetMaxConcurrencyPercentage",
        "StackSetAccounts",
        "StackSetOperationType",
        "UniqueKey"
    ],
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetaccounts": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetaccounts",
        "UpdateRequires": "No interruption"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetfailuretolerancecount": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetfailuretolerancecount",
        "UpdateRequires": "No interruption"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetfailuretolerancepercentage": {
        "Maximum": "100",
        "Minimum": "0",
        "Pattern": "^[0,100]}$",
        "Required": "No",
        "SampleValue": "0...100",
        "Type": "Integer",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetfailuretolerancepercentage",
        "UpdateRequires": "No interruption"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetmaxconcurrencycount": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetmaxconcurrencycount",
        "UpdateRequires": "No interruption"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetmaxconcurrencypercentage": {
        "Maximum": "100",
        "Minimum": "1",
        "Pattern": "^[1,100]}$",
        "Required": "No",
        "SampleValue": "1...100",
        "Type": "Integer",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetmaxconcurrencypercentage",
        "UpdateRequires": "No interruption"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetoperationtype": {
        "Allowed Values": "CREATE | DELETE | UPDATE",
        "AllowedValues": [
            "CREATE",
            "DELETE",
            "UPDATE"
        ],
        "Pattern": "^[CREATE|DELETE|UPDATE]",
        "Required": "No",
        "SampleValue": "CREATE|DELETE|UPDATE",
        "Type": "String",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetoperationtype",
        "UpdateRequires": "No interruption"
    },
    "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetregions": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "servicecatalog.cloudformationprovisionedproduct.provisioningpreferences.stacksetregions",
        "UpdateRequires": "No interruption"
    },
    "servicediscovery.service.dnsconfig.cfnproperties": [
        "RoutingPolicy",
        "NamespaceId",
        "DnsRecords",
        "UniqueKey"
    ],
    "servicediscovery.service.dnsconfig.dnsrecords": {
        "Required": "Yes",
        "Type": "List of [DnsRecord",
        "UniqueKey": "servicediscovery.service.dnsconfig.dnsrecords",
        "UpdateRequires": "No interruption"
    },
    "servicediscovery.service.dnsconfig.namespaceid": {
        "Maximum": "64",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "servicediscovery.service.dnsconfig.namespaceid",
        "UpdateRequires": "Replacement"
    },
    "servicediscovery.service.dnsconfig.routingpolicy": {
        "AllowedValues": [
            "MULTIVALUE",
            "WEIGHTED"
        ],
        "Pattern": "^[MULTIVALUE|WEIGHTED]",
        "Required": "No",
        "SampleValue": "MULTIVALUE|WEIGHTED",
        "UniqueKey": "servicediscovery.service.dnsconfig.routingpolicy",
        "UpdateRequires": "No interruption"
    },
    "servicediscovery.service.dnsrecord.cfnproperties": [
        "priority weight port service-hostname",
        "Type",
        "TTL",
        "UniqueKey"
    ],
    "servicediscovery.service.dnsrecord.priority weight port service-hostname": {
        "Allowed Values": "A | AAAA | CNAME | SRV",
        "AllowedValues": [
            "A",
            "AAAA",
            "CNAME",
            "SRV"
        ],
        "Pattern": "^[A|AAAA|CNAME|SRV]",
        "Required": "Yes",
        "SampleValue": "A|AAAA|CNAME|SRV",
        "Type": "String",
        "UniqueKey": "servicediscovery.service.dnsrecord.priority weight port service-hostname",
        "UpdateRequires": "No interruption"
    },
    "servicediscovery.service.dnsrecord.ttl": {
        "Required": "Yes",
        "Type": "Double",
        "UniqueKey": "servicediscovery.service.dnsrecord.ttl",
        "UpdateRequires": "No interruption"
    },
    "servicediscovery.service.dnsrecord.type": {
        "UniqueKey": "servicediscovery.service.dnsrecord.type"
    },
    "servicediscovery.service.healthcheckconfig.cfnproperties": [
        "Type",
        "ResourcePath",
        "FailureThreshold",
        "UniqueKey"
    ],
    "servicediscovery.service.healthcheckconfig.failurethreshold": {
        "Maximum": "10",
        "Minimum": "1",
        "Required": "No",
        "UniqueKey": "servicediscovery.service.healthcheckconfig.failurethreshold",
        "UpdateRequires": "No interruption"
    },
    "servicediscovery.service.healthcheckconfig.resourcepath": {
        "Maximum": "255",
        "Required": "No",
        "UniqueKey": "servicediscovery.service.healthcheckconfig.resourcepath",
        "UpdateRequires": "No interruption"
    },
    "servicediscovery.service.healthcheckconfig.type": {
        "*Important**  \nIf you specify HTTPS for the value of `Type`, the endpoint must support TLS v1\\.0 or later\\.\n+  **TCP*": "Route 53 tries to establish a TCP connection\\.\n\n  If you specify `TCP` for `Type`, don't specify a value for `ResourcePath`\\.\nFor more information, see [How Route 53 Determines Whether an Endpoint Is Healthy](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html) in the *Route 53 Developer Guide*\\.",
        "Allowed Values": "HTTP | HTTPS | TCP",
        "AllowedValues": [
            "HTTP",
            "HTTPS",
            "TCP"
        ],
        "Pattern": "^[HTTP|HTTPS|TCP]",
        "Required": "Yes",
        "SampleValue": "HTTP|HTTPS|TCP",
        "Type": "String",
        "Type`  <a name=\"cfn-servicediscovery-service-healthcheckconfig-type\"></a>\nThe type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy\\.  \nYou can't change the value of `Type` after you create a health check\\.\nYou can create the following types of health checks:  \n+  **HTTP*": "Route 53 tries to establish a TCP connection\\. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400\\.\n+  **HTTPS*",
        "UniqueKey": "servicediscovery.service.healthcheckconfig.type",
        "UpdateRequires": "No interruption"
    },
    "servicediscovery.service.healthcheckcustomconfig.cfnproperties": [
        "FailureThreshold",
        "UniqueKey"
    ],
    "servicediscovery.service.healthcheckcustomconfig.failurethreshold": {
        "Maximum": "10",
        "Minimum": "1",
        "Required": "No",
        "Type": "Double",
        "UniqueKey": "servicediscovery.service.healthcheckcustomconfig.failurethreshold",
        "UpdateRequires": "No interruption"
    },
    "ses.configurationseteventdestination.cloudwatchdestination.cfnproperties": [
        "DimensionConfigurations",
        "UniqueKey"
    ],
    "ses.configurationseteventdestination.cloudwatchdestination.dimensionconfigurations": {
        "Required": "No",
        "Type": "List of [DimensionConfiguration",
        "UniqueKey": "ses.configurationseteventdestination.cloudwatchdestination.dimensionconfigurations",
        "UpdateRequires": "No interruption"
    },
    "ses.configurationseteventdestination.dimensionconfiguration.cfnproperties": [
        "DimensionName",
        "DimensionValueSource",
        "DefaultDimensionValue",
        "UniqueKey"
    ],
    "ses.configurationseteventdestination.dimensionconfiguration.defaultdimensionvalue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.configurationseteventdestination.dimensionconfiguration.defaultdimensionvalue",
        "UpdateRequires": "No interruption"
    },
    "ses.configurationseteventdestination.dimensionconfiguration.dimensionname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.configurationseteventdestination.dimensionconfiguration.dimensionname",
        "UpdateRequires": "No interruption"
    },
    "ses.configurationseteventdestination.dimensionconfiguration.dimensionvaluesource": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.configurationseteventdestination.dimensionconfiguration.dimensionvaluesource",
        "UpdateRequires": "No interruption"
    },
    "ses.configurationseteventdestination.eventdestination.cfnproperties": [
        "CloudWatchDestination",
        "MatchingEventTypes",
        "Enabled",
        "KinesisFirehoseDestination",
        "Name",
        "UniqueKey"
    ],
    "ses.configurationseteventdestination.eventdestination.cloudwatchdestination": {
        "Required": "No",
        "Type": "CloudWatchDestination",
        "UniqueKey": "ses.configurationseteventdestination.eventdestination.cloudwatchdestination",
        "UpdateRequires": "No interruption"
    },
    "ses.configurationseteventdestination.eventdestination.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ses.configurationseteventdestination.eventdestination.enabled",
        "UpdateRequires": "No interruption"
    },
    "ses.configurationseteventdestination.eventdestination.kinesisfirehosedestination": {
        "Required": "No",
        "Type": "KinesisFirehoseDestination",
        "UniqueKey": "ses.configurationseteventdestination.eventdestination.kinesisfirehosedestination",
        "UpdateRequires": "No interruption"
    },
    "ses.configurationseteventdestination.eventdestination.matchingeventtypes": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "ses.configurationseteventdestination.eventdestination.matchingeventtypes",
        "UpdateRequires": "No interruption"
    },
    "ses.configurationseteventdestination.eventdestination.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.configurationseteventdestination.eventdestination.name",
        "UpdateRequires": "No interruption"
    },
    "ses.configurationseteventdestination.kinesisfirehosedestination.cfnproperties": [
        "DeliveryStreamARN",
        "IAMRoleARN",
        "UniqueKey",
        "SampleValue"
    ],
    "ses.configurationseteventdestination.kinesisfirehosedestination.deliverystreamarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.configurationseteventdestination.kinesisfirehosedestination.deliverystreamarn",
        "UpdateRequires": "No interruption"
    },
    "ses.configurationseteventdestination.kinesisfirehosedestination.iamrolearn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.configurationseteventdestination.kinesisfirehosedestination.iamrolearn",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptfilter.filter.cfnproperties": [
        "IpFilter",
        "Name",
        "UniqueKey",
        "SampleValue"
    ],
    "ses.receiptfilter.filter.ipfilter": {
        "Required": "Yes",
        "Type": "IpFilter",
        "UniqueKey": "ses.receiptfilter.filter.ipfilter",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptfilter.filter.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptfilter.filter.name",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptfilter.ipfilter.cfnproperties": [
        "Policy",
        "Cidr",
        "UniqueKey",
        "SampleValue"
    ],
    "ses.receiptfilter.ipfilter.cidr": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptfilter.ipfilter.cidr",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptfilter.ipfilter.policy": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptfilter.ipfilter.policy",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.action.addheaderaction": {
        "Required": "No",
        "Type": "AddHeaderAction",
        "UniqueKey": "ses.receiptrule.action.addheaderaction",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.action.bounceaction": {
        "Required": "No",
        "Type": "BounceAction",
        "UniqueKey": "ses.receiptrule.action.bounceaction",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.action.cfnproperties": [
        "LambdaAction",
        "S3Action",
        "SNSAction",
        "BounceAction",
        "AddHeaderAction",
        "StopAction",
        "WorkmailAction",
        "UniqueKey"
    ],
    "ses.receiptrule.action.lambdaaction": {
        "Required": "No",
        "Type": "LambdaAction",
        "UniqueKey": "ses.receiptrule.action.lambdaaction",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.action.s3action": {
        "Required": "No",
        "Type": "S3Action",
        "UniqueKey": "ses.receiptrule.action.s3action",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.action.snsaction": {
        "Required": "No",
        "Type": "SNSAction",
        "UniqueKey": "ses.receiptrule.action.snsaction",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.action.stopaction": {
        "Required": "No",
        "Type": "StopAction",
        "UniqueKey": "ses.receiptrule.action.stopaction",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.action.workmailaction": {
        "Required": "No",
        "Type": "WorkmailAction",
        "UniqueKey": "ses.receiptrule.action.workmailaction",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.addheaderaction.cfnproperties": [
        "HeaderName",
        "HeaderValue",
        "UniqueKey",
        "SampleValue"
    ],
    "ses.receiptrule.addheaderaction.headername": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.addheaderaction.headername",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.addheaderaction.headervalue": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.addheaderaction.headervalue",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.bounceaction.cfnproperties": [
        "Message",
        "TopicArn",
        "Sender",
        "SmtpReplyCode",
        "StatusCode",
        "UniqueKey"
    ],
    "ses.receiptrule.bounceaction.message": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.bounceaction.message",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.bounceaction.sender": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.bounceaction.sender",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.bounceaction.smtpreplycode": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.bounceaction.smtpreplycode",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.bounceaction.statuscode": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.bounceaction.statuscode",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.bounceaction.topicarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.bounceaction.topicarn",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.lambdaaction.cfnproperties": [
        "InvocationType",
        "TopicArn",
        "FunctionArn",
        "UniqueKey"
    ],
    "ses.receiptrule.lambdaaction.functionarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.lambdaaction.functionarn",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.lambdaaction.invocationtype": {
        "Allowed Values": "Event | RequestResponse",
        "AllowedValues": [
            "Event",
            "RequestResponse"
        ],
        "Pattern": "^[Event|RequestResponse]",
        "Required": "No",
        "SampleValue": "Event|RequestResponse",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.lambdaaction.invocationtype",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.lambdaaction.topicarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.lambdaaction.topicarn",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.rule.actions": {
        "Required": "No",
        "Type": "List of [Action",
        "UniqueKey": "ses.receiptrule.rule.actions",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.rule.cfnproperties": [
        "Name",
        "Recipients",
        "Enabled",
        "ScanEnabled",
        "Actions",
        "TlsPolicy",
        "UniqueKey"
    ],
    "ses.receiptrule.rule.enabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ses.receiptrule.rule.enabled",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.rule.name": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.rule.name",
        "UpdateRequires": "Replacement"
    },
    "ses.receiptrule.rule.recipients": {
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ses.receiptrule.rule.recipients",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.rule.scanenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ses.receiptrule.rule.scanenabled",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.rule.tlspolicy": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.rule.tlspolicy",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.s3action.bucketname": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.s3action.bucketname",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.s3action.cfnproperties": [
        "KmsKeyArn",
        "ObjectKeyPrefix",
        "BucketName",
        "TopicArn",
        "UniqueKey"
    ],
    "ses.receiptrule.s3action.kmskeyarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.s3action.kmskeyarn",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.s3action.objectkeyprefix": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.s3action.objectkeyprefix",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.s3action.topicarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.s3action.topicarn",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.snsaction.cfnproperties": [
        "TopicArn",
        "Encoding",
        "UniqueKey",
        "SampleValue"
    ],
    "ses.receiptrule.snsaction.encoding": {
        "Allowed Values": "Base64 | UTF-8",
        "AllowedValues": [
            "Base64",
            "UTF-8"
        ],
        "Pattern": "^[Base64|UTF-8]",
        "Required": "No",
        "SampleValue": "Base64|UTF-8",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.snsaction.encoding",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.snsaction.topicarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.snsaction.topicarn",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.stopaction.cfnproperties": [
        "Scope",
        "TopicArn",
        "UniqueKey",
        "SampleValue"
    ],
    "ses.receiptrule.stopaction.scope": {
        "Allowed Values": "RuleSet",
        "AllowedValues": [
            "RuleSet"
        ],
        "Pattern": "^[RuleSet]",
        "Required": "Yes",
        "SampleValue": "RuleSet",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.stopaction.scope",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.stopaction.topicarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.stopaction.topicarn",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.workmailaction.cfnproperties": [
        "OrganizationArn",
        "TopicArn",
        "UniqueKey",
        "SampleValue"
    ],
    "ses.receiptrule.workmailaction.organizationarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.workmailaction.organizationarn",
        "UpdateRequires": "No interruption"
    },
    "ses.receiptrule.workmailaction.topicarn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.receiptrule.workmailaction.topicarn",
        "UpdateRequires": "No interruption"
    },
    "ses.template.template.cfnproperties": [
        "SubjectPart",
        "HtmlPart",
        "TextPart",
        "TemplateName",
        "UniqueKey"
    ],
    "ses.template.template.htmlpart": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.template.template.htmlpart",
        "UpdateRequires": "No interruption"
    },
    "ses.template.template.subjectpart": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.template.template.subjectpart",
        "UpdateRequires": "No interruption"
    },
    "ses.template.template.templatename": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.template.template.templatename",
        "UpdateRequires": "Replacement"
    },
    "ses.template.template.textpart": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ses.template.template.textpart",
        "UpdateRequires": "No interruption"
    },
    "simpledb.cfnproperties": [
        "Description",
        "UniqueKey"
    ],
    "simpledb.description": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "simpledb.description",
        "UpdateRequires": "No interruption"
    },
    "sns.policy.cfnproperties": [
        "Topics",
        "PolicyDocument",
        "UniqueKey",
        "SampleValue"
    ],
    "sns.policy.policydocument": {
        "Required": "Yes",
        "Type": "Json",
        "UniqueKey": "sns.policy.policydocument",
        "UpdateRequires": "No interruption"
    },
    "sns.policy.topics": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sns.policy.topics",
        "UpdateRequires": "No interruption"
    },
    "sns.subscription.cfnproperties": [
        "Endpoint",
        "Protocol",
        "UniqueKey",
        "SampleValue"
    ],
    "sns.subscription.endpoint": {
        "Required": "Yes",
        "SampleValue": "TODO-endpoint",
        "UniqueKey": "sns.subscription.endpoint",
        "UpdateRequires": "Replacement"
    },
    "sns.subscription.protocol": {
        "Required": "Yes",
        "SampleValue": "TODO-protocol",
        "UniqueKey": "sns.subscription.protocol",
        "UpdateRequires": "Replacement"
    },
    "sns.topic.cfnproperties": [
        "Tags",
        "KmsMasterKeyId",
        "DisplayName",
        "TopicName",
        "Subscription",
        "UniqueKey"
    ],
    "sns.topic.displayname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sns.topic.displayname",
        "UpdateRequires": "No interruption"
    },
    "sns.topic.kmsmasterkeyid": {
        "Required": "No",
        "SampleValue": "TODO-kmsmasterkeyid",
        "UniqueKey": "sns.topic.kmsmasterkeyid",
        "UpdateRequires": "No interruption"
    },
    "sns.topic.subscription": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "sns.topic.subscription",
        "UpdateRequires": "No interruption"
    },
    "sns.topic.tags": {
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "sns.topic.tags",
        "UpdateRequires": "No interruption"
    },
    "sns.topic.topicname": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "sns.topic.topicname",
        "UpdateRequires": "Replacement"
    },
    "sqs.policy.cfnproperties": [
        "Queues",
        "PolicyDocument",
        "UniqueKey",
        "SampleValue"
    ],
    "sqs.policy.policydocument": {
        "Required": "Yes",
        "SampleValue": "TODO-policydocument",
        "UniqueKey": "sqs.policy.policydocument",
        "UpdateRequires": "No interruption"
    },
    "sqs.policy.queues": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "sqs.policy.queues",
        "UpdateRequires": "No interruption"
    },
    "sqs.queues.cfnproperties": [
        "KmsDataKeyReusePeriodSeconds",
        "KmsMasterKeyId",
        "ReceiveMessageWaitTimeSeconds",
        "Tags",
        "VisibilityTimeout",
        "RedrivePolicy",
        "MaximumMessageSize",
        "ContentBasedDeduplication",
        "DelaySeconds",
        "FifoQueue",
        "MessageRetentionPeriod",
        "QueueName",
        "UniqueKey"
    ],
    "sqs.queues.contentbaseddeduplication": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "sqs.queues.contentbaseddeduplication",
        "UpdateRequires": "No interruption"
    },
    "sqs.queues.delayseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "sqs.queues.delayseconds",
        "UpdateRequires": "No interruption"
    },
    "sqs.queues.fifoqueue": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "UniqueKey": "sqs.queues.fifoqueue",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.kmsdatakeyreuseperiodseconds": {
        "Required": "No",
        "SampleValue": "TODO-kmsdatakeyreuseperiodseconds",
        "UniqueKey": "sqs.queues.kmsdatakeyreuseperiodseconds",
        "UpdateRequires": "No interruption"
    },
    "sqs.queues.kmsmasterkeyid": {
        "Required": "No",
        "SampleValue": "TODO-kmsmasterkeyid",
        "UniqueKey": "sqs.queues.kmsmasterkeyid",
        "UpdateRequires": "No interruption"
    },
    "sqs.queues.maximummessagesize": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "sqs.queues.maximummessagesize",
        "UpdateRequires": "No interruption"
    },
    "sqs.queues.messageretentionperiod": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "sqs.queues.messageretentionperiod",
        "UpdateRequires": "No interruption"
    },
    "sqs.queues.queuename": {
        "Required": "No",
        "SampleValue": "TODO-queuename",
        "UniqueKey": "sqs.queues.queuename",
        "UpdateRequires": "Replacement"
    },
    "sqs.queues.receivemessagewaittimeseconds": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "sqs.queues.receivemessagewaittimeseconds",
        "UpdateRequires": "No interruption"
    },
    "sqs.queues.redrivepolicy": {
        "Required": "No",
        "SampleValue": "TODO-redrivepolicy",
        "UniqueKey": "sqs.queues.redrivepolicy",
        "UpdateRequires": "No interruption"
    },
    "sqs.queues.tags": {
        "Required": "No",
        "SampleValue": "TODO-tags",
        "UniqueKey": "sqs.queues.tags",
        "UpdateRequires": "No interruption"
    },
    "sqs.queues.visibilitytimeout": {
        "Required": "No",
        "SampleValue": "TODO-visibilitytimeout",
        "UniqueKey": "sqs.queues.visibilitytimeout",
        "UpdateRequires": "No interruption"
    },
    "ssm.association.instanceassociationoutputlocation.cfnproperties": [
        "S3Location",
        "UniqueKey"
    ],
    "ssm.association.instanceassociationoutputlocation.s3location": {
        "Required": "No",
        "Type": "S3OutputLocation",
        "UniqueKey": "ssm.association.instanceassociationoutputlocation.s3location",
        "UpdateRequires": "No interruption"
    },
    "ssm.association.parametervalues.cfnproperties": [
        "ParameterValues",
        "UniqueKey"
    ],
    "ssm.association.parametervalues.parametervalues": {
        "Required": "Yes",
        "Type": "List",
        "UniqueKey": "ssm.association.parametervalues.parametervalues",
        "UpdateRequires": "No interruption"
    },
    "ssm.association.s3outputlocation.cfnproperties": [
        "OutputS3KeyPrefix",
        "OutputS3BucketName",
        "UniqueKey",
        "SampleValue"
    ],
    "ssm.association.s3outputlocation.outputs3bucketname": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "^.{3,63}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.association.s3outputlocation.outputs3bucketname",
        "Type": "String",
        "UniqueKey": "ssm.association.s3outputlocation.outputs3bucketname",
        "UpdateRequires": "No interruption"
    },
    "ssm.association.s3outputlocation.outputs3keyprefix": {
        "Maximum": "500",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.association.s3outputlocation.outputs3keyprefix",
        "UpdateRequires": "No interruption"
    },
    "ssm.association.target.cfnproperties": [
        "Values",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "ssm.association.target.key": {
        "Maximum": "163",
        "Minimum": "1",
        "Pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$|resource-groups:ResourceTypeFilters|resource-groups:Name",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ssm.association.target.key",
        "UpdateRequires": "Replacement"
    },
    "ssm.association.target.values": {
        "Maximum": "50",
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "ssm.association.target.values",
        "UpdateRequires": "Replacement"
    },
    "ssm.maintenancewindowtarget.targets.cfnproperties": [
        "Values",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "ssm.maintenancewindowtarget.targets.key": {
        "Maximum": "163",
        "Minimum": "1",
        "Pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$|resource-groups:ResourceTypeFilters|resource-groups:Name",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtarget.targets.key",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtarget.targets.values": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ssm.maintenancewindowtarget.targets.values",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.logginginfo.cfnproperties": [
        "S3Bucket",
        "Region",
        "S3Prefix",
        "UniqueKey"
    ],
    "ssm.maintenancewindowtask.logginginfo.region": {
        "Maximum": "20",
        "Minimum": "3",
        "Pattern": "^.{3,20}$",
        "Required": "Yes",
        "SampleValue": "TODO-ssm.maintenancewindowtask.logginginfo.region",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.logginginfo.region",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.logginginfo.s3bucket": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "^.{3,63}$",
        "Required": "Yes",
        "SampleValue": "TODO-ssm.maintenancewindowtask.logginginfo.s3bucket",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.logginginfo.s3bucket",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.logginginfo.s3prefix": {
        "Maximum": "500",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.logginginfo.s3prefix",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.maintenancewindowautomationparameters.cfnproperties": [
        "Parameters",
        "DocumentVersion",
        "UniqueKey",
        "SampleValue"
    ],
    "ssm.maintenancewindowtask.maintenancewindowautomationparameters.documentversion": {
        "Pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowautomationparameters.documentversion",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.maintenancewindowautomationparameters.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowautomationparameters.parameters",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.cfnproperties": [
        "Payload",
        "Qualifier",
        "ClientContext",
        "UniqueKey"
    ],
    "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.clientcontext": {
        "Maximum": "8000",
        "Minimum": "1",
        "Pattern": "^.{1,8000}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.maintenancewindowtask.maintenancewindowlambdaparameters.clientcontext",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.clientcontext",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.payload": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.payload",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.qualifier": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.maintenancewindowtask.maintenancewindowlambdaparameters.qualifier",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowlambdaparameters.qualifier",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.cfnproperties": [
        "Comment",
        "ServiceRoleArn",
        "TimeoutSeconds",
        "Parameters",
        "DocumentHash",
        "OutputS3BucketName",
        "NotificationConfig",
        "DocumentHashType",
        "OutputS3KeyPrefix",
        "UniqueKey"
    ],
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.comment": {
        "Maximum": "100",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.comment",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.documenthash": {
        "Maximum": "256",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.documenthash",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.documenthashtype": {
        "Allowed Values": "Sha1 | Sha256",
        "AllowedValues": [
            "Sha1",
            "Sha256"
        ],
        "Pattern": "^[Sha1|Sha256]",
        "Required": "No",
        "SampleValue": "Sha1|Sha256",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.documenthashtype",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.notificationconfig": {
        "Required": "No",
        "Type": "NotificationConfig",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.notificationconfig",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.outputs3bucketname": {
        "Maximum": "63",
        "Minimum": "3",
        "Pattern": "^.{3,63}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.maintenancewindowtask.maintenancewindowruncommandparameters.outputs3bucketname",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.outputs3bucketname",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.outputs3keyprefix": {
        "Maximum": "500",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.outputs3keyprefix",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.parameters": {
        "Required": "No",
        "Type": "Json",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.parameters",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.servicerolearn": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.servicerolearn",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.timeoutseconds": {
        "Maximum": "2592000",
        "Minimum": "30",
        "Pattern": "^[30,2592000]}$",
        "Required": "No",
        "SampleValue": "30...2592000",
        "Type": "Integer",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowruncommandparameters.timeoutseconds",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.maintenancewindowstepfunctionsparameters.cfnproperties": [
        "Input",
        "Name",
        "UniqueKey",
        "SampleValue"
    ],
    "ssm.maintenancewindowtask.maintenancewindowstepfunctionsparameters.input": {
        "Maximum": "4096",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowstepfunctionsparameters.input",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.maintenancewindowstepfunctionsparameters.name": {
        "Maximum": "80",
        "Minimum": "1",
        "Pattern": "^.{1,80}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.maintenancewindowtask.maintenancewindowstepfunctionsparameters.name",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.maintenancewindowstepfunctionsparameters.name",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.notificationconfig.cfnproperties": [
        "NotificationArn",
        "NotificationEvents",
        "NotificationType",
        "UniqueKey"
    ],
    "ssm.maintenancewindowtask.notificationconfig.notificationarn": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.notificationconfig.notificationarn",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.notificationconfig.notificationevents": {
        "Required": "No",
        "SampleValue": "TODO-notificationevents",
        "UniqueKey": "ssm.maintenancewindowtask.notificationconfig.notificationevents",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.notificationconfig.notificationtype": {
        "Allowed Values": "Command | Invocation",
        "AllowedValues": [
            "Command",
            "Invocation"
        ],
        "Pattern": "^[Command|Invocation]",
        "Required": "No",
        "SampleValue": "Command|Invocation",
        "Type": "String",
        "UniqueKey": "ssm.maintenancewindowtask.notificationconfig.notificationtype",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.target.cfnproperties": [
        "Values",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "ssm.maintenancewindowtask.target.key": {
        "Maximum": "163",
        "Minimum": "1",
        "Pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$|resource-groups:ResourceTypeFilters|resource-groups:Name",
        "Required": "Yes",
        "UniqueKey": "ssm.maintenancewindowtask.target.key",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.target.values": {
        "Maximum": "50",
        "Required": "No",
        "UniqueKey": "ssm.maintenancewindowtask.target.values",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.taskinvocationparameters.cfnproperties": [
        "MaintenanceWindowAutomationParameters",
        "MaintenanceWindowRunCommandParameters",
        "MaintenanceWindowStepFunctionsParameters",
        "MaintenanceWindowLambdaParameters",
        "UniqueKey"
    ],
    "ssm.maintenancewindowtask.taskinvocationparameters.maintenancewindowautomationparameters": {
        "Required": "No",
        "Type": "MaintenanceWindowAutomationParameters",
        "UniqueKey": "ssm.maintenancewindowtask.taskinvocationparameters.maintenancewindowautomationparameters",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.taskinvocationparameters.maintenancewindowlambdaparameters": {
        "Required": "No",
        "Type": "MaintenanceWindowLambdaParameters",
        "UniqueKey": "ssm.maintenancewindowtask.taskinvocationparameters.maintenancewindowlambdaparameters",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.taskinvocationparameters.maintenancewindowruncommandparameters": {
        "Required": "No",
        "Type": "MaintenanceWindowRunCommandParameters",
        "UniqueKey": "ssm.maintenancewindowtask.taskinvocationparameters.maintenancewindowruncommandparameters",
        "UpdateRequires": "No interruption"
    },
    "ssm.maintenancewindowtask.taskinvocationparameters.maintenancewindowstepfunctionsparameters": {
        "Required": "No",
        "Type": "MaintenanceWindowStepFunctionsParameters",
        "UniqueKey": "ssm.maintenancewindowtask.taskinvocationparameters.maintenancewindowstepfunctionsparameters",
        "UpdateRequires": "No interruption"
    },
    "ssm.patchbaseline.patchfilter.cfnproperties": [
        "Values",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "ssm.patchbaseline.patchfilter.key": {
        "AllowedValues": [
            "CLASSIFICATION",
            "MSRC_SEVERITY",
            "PATCH_ID",
            "PATCH_SET",
            "PRIORITY",
            "PRODUCT",
            "PRODUCT_FAMILY",
            "SECTION",
            "SEVERITY"
        ],
        "Pattern": "^[CLASSIFICATION|MSRC_SEVERITY|PATCH_ID|PATCH_SET|PRIORITY|PRODUCT|PRODUCT_FAMILY|SECTION|SEVERITY]",
        "Required": "No",
        "SampleValue": "CLASSIFICATION|MSRC_SEVERITY|PATCH_ID|PATCH_SET|PRIORITY|PRODUCT|PRODUCT_FAMILY|SECTION|SEVERITY",
        "UniqueKey": "ssm.patchbaseline.patchfilter.key",
        "UpdateRequires": "No interruption"
    },
    "ssm.patchbaseline.patchfilter.values": {
        "Maximum": "20",
        "Required": "No",
        "UniqueKey": "ssm.patchbaseline.patchfilter.values",
        "UpdateRequires": "No interruption"
    },
    "ssm.patchbaseline.patchfiltergroup.cfnproperties": [
        "PatchFilters",
        "UniqueKey"
    ],
    "ssm.patchbaseline.patchfiltergroup.patchfilters": {
        "Maximum": "4",
        "Required": "No",
        "Type": "List of [PatchFilter",
        "UniqueKey": "ssm.patchbaseline.patchfiltergroup.patchfilters",
        "UpdateRequires": "No interruption"
    },
    "ssm.patchbaseline.patchsource.cfnproperties": [
        "Configuration",
        "Products",
        "Name",
        "UniqueKey"
    ],
    "ssm.patchbaseline.patchsource.configuration": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.patchbaseline.patchsource.configuration",
        "Type": "String",
        "UniqueKey": "ssm.patchbaseline.patchsource.configuration",
        "UpdateRequires": "No interruption"
    },
    "ssm.patchbaseline.patchsource.name": {
        "Pattern": "^[a-zA-Z0-9_\\-.]{3,50}$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.patchbaseline.patchsource.name",
        "UpdateRequires": "No interruption"
    },
    "ssm.patchbaseline.patchsource.products": {
        "Maximum": "20",
        "Required": "No",
        "UniqueKey": "ssm.patchbaseline.patchsource.products",
        "UpdateRequires": "No interruption"
    },
    "ssm.patchbaseline.rule.approveafterdays": {
        "Maximum": "100",
        "Minimum": "0",
        "Pattern": "^[0,100]}$",
        "Required": "Conditional",
        "SampleValue": "0...100",
        "Type": "Integer",
        "UniqueKey": "ssm.patchbaseline.rule.approveafterdays",
        "UpdateRequires": "No interruption"
    },
    "ssm.patchbaseline.rule.cfnproperties": [
        "EnableNonSecurity",
        "ComplianceLevel",
        "ApproveAfterDays",
        "PatchFilterGroup",
        "UniqueKey"
    ],
    "ssm.patchbaseline.rule.compliancelevel": {
        "Allowed Values": "CRITICAL | HIGH | INFORMATIONAL | LOW | MEDIUM | UNSPECIFIED",
        "AllowedValues": [
            "CRITICAL",
            "HIGH",
            "INFORMATIONAL",
            "LOW",
            "MEDIUM",
            "UNSPECIFIED"
        ],
        "Pattern": "^[CRITICAL|HIGH|INFORMATIONAL|LOW|MEDIUM|UNSPECIFIED]",
        "Required": "No",
        "SampleValue": "CRITICAL|HIGH|INFORMATIONAL|LOW|MEDIUM|UNSPECIFIED",
        "Type": "String",
        "UniqueKey": "ssm.patchbaseline.rule.compliancelevel",
        "UpdateRequires": "No interruption"
    },
    "ssm.patchbaseline.rule.enablenonsecurity": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ssm.patchbaseline.rule.enablenonsecurity",
        "UpdateRequires": "No interruption"
    },
    "ssm.patchbaseline.rule.patchfiltergroup": {
        "Required": "No",
        "Type": "PatchFilterGroup",
        "UniqueKey": "ssm.patchbaseline.rule.patchfiltergroup",
        "UpdateRequires": "No interruption"
    },
    "ssm.patchbaseline.rulegroup.cfnproperties": [
        "PatchRules",
        "UniqueKey"
    ],
    "ssm.patchbaseline.rulegroup.patchrules": {
        "Maximum": "10",
        "Required": "No",
        "Type": "List of [Rule",
        "UniqueKey": "ssm.patchbaseline.rulegroup.patchrules",
        "UpdateRequires": "No interruption"
    },
    "ssm.resourcedatasync.awsorganizationssource.cfnproperties": [
        "OrganizationSourceType",
        "OrganizationalUnits",
        "UniqueKey",
        "SampleValue"
    ],
    "ssm.resourcedatasync.awsorganizationssource.organizationalunits": {
        "Maximum": "1000",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "ssm.resourcedatasync.awsorganizationssource.organizationalunits",
        "UpdateRequires": "No interruption"
    },
    "ssm.resourcedatasync.awsorganizationssource.organizationsourcetype": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^.{1,64}$",
        "Required": "Yes",
        "SampleValue": "TODO-ssm.resourcedatasync.awsorganizationssource.organizationsourcetype",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.awsorganizationssource.organizationsourcetype",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.s3destination.bucketname": {
        "Maximum": "2048",
        "Minimum": "1",
        "Pattern": "^.{1,2048}$",
        "Required": "Yes",
        "SampleValue": "TODO-ssm.resourcedatasync.s3destination.bucketname",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.s3destination.bucketname",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.s3destination.bucketprefix": {
        "Maximum": "256",
        "Minimum": "1",
        "Pattern": "^.{1,256}$",
        "Required": "No",
        "SampleValue": "TODO-ssm.resourcedatasync.s3destination.bucketprefix",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.s3destination.bucketprefix",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.s3destination.bucketregion": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^.{1,64}$",
        "Required": "Yes",
        "SampleValue": "TODO-ssm.resourcedatasync.s3destination.bucketregion",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.s3destination.bucketregion",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.s3destination.cfnproperties": [
        "BucketRegion",
        "KMSKeyArn",
        "BucketPrefix",
        "BucketName",
        "SyncFormat",
        "UniqueKey"
    ],
    "ssm.resourcedatasync.s3destination.kmskeyarn": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": "arn:.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.s3destination.kmskeyarn",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.s3destination.syncformat": {
        "Allowed Values": "JsonSerDe",
        "AllowedValues": [
            "JsonSerDe"
        ],
        "Pattern": "^[JsonSerDe]",
        "Required": "Yes",
        "SampleValue": "JsonSerDe",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.s3destination.syncformat",
        "UpdateRequires": "Replacement"
    },
    "ssm.resourcedatasync.syncsource.awsorganizationssource": {
        "Required": "No",
        "Type": "AwsOrganizationsSource",
        "UniqueKey": "ssm.resourcedatasync.syncsource.awsorganizationssource",
        "UpdateRequires": "No interruption"
    },
    "ssm.resourcedatasync.syncsource.cfnproperties": [
        "IncludeFutureRegions",
        "SourceRegions",
        "AwsOrganizationsSource",
        "SourceType",
        "UniqueKey"
    ],
    "ssm.resourcedatasync.syncsource.includefutureregions": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "ssm.resourcedatasync.syncsource.includefutureregions",
        "UpdateRequires": "No interruption"
    },
    "ssm.resourcedatasync.syncsource.sourceregions": {
        "Required": "Yes",
        "Type": "List of String",
        "UniqueKey": "ssm.resourcedatasync.syncsource.sourceregions",
        "UpdateRequires": "No interruption"
    },
    "ssm.resourcedatasync.syncsource.sourcetype": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": "^.{1,64}$",
        "Required": "Yes",
        "SampleValue": "TODO-ssm.resourcedatasync.syncsource.sourcetype",
        "Type": "String",
        "UniqueKey": "ssm.resourcedatasync.syncsource.sourcetype",
        "UpdateRequires": "Replacement"
    },
    "stack.cfnproperties": [
        "NotificationARNs",
        "TemplateURL",
        "TimeoutInMinutes",
        "Parameters",
        "Tags",
        "UniqueKey"
    ],
    "stack.notificationarns": {
        "Maximum": "5",
        "Required": "No",
        "Type": "List of String",
        "UniqueKey": "stack.notificationarns",
        "UpdateRequires": "No interruption"
    },
    "stack.parameters": {
        "Required": "Conditional",
        "Type": "Map of String",
        "UniqueKey": "stack.parameters",
        "UpdateRequires": "No interruption"
    },
    "stack.tags": {
        "Maximum": "50",
        "Required": "No",
        "Type": "List of [Tag",
        "UniqueKey": "stack.tags",
        "UpdateRequires": "No interruption"
    },
    "stack.templateurl": {
        "Maximum": "1024",
        "Minimum": "1",
        "Pattern": "^.{1,1024}$",
        "Required": "Yes",
        "SampleValue": "TODO-stack.templateurl",
        "Type": "String",
        "UniqueKey": "stack.templateurl",
        "UpdateRequires": "No interruption"
    },
    "stack.timeoutinminutes": {
        "Minimum": "1",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "stack.timeoutinminutes",
        "UpdateRequires": "No interruption"
    },
    "stepfunctions.activity.tagsentry.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "stepfunctions.activity.tagsentry.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "stepfunctions.activity.tagsentry.key",
        "UpdateRequires": "No interruption"
    },
    "stepfunctions.activity.tagsentry.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "stepfunctions.activity.tagsentry.value",
        "UpdateRequires": "No interruption"
    },
    "stepfunctions.statemachine.logdestination.cfnproperties": [
        "CloudWatchLogsLogGroup",
        "UniqueKey"
    ],
    "stepfunctions.statemachine.logdestination.cloudwatchlogsloggroup": {
        "Required": "No",
        "Type": "CloudWatchLogsLogGroup",
        "UniqueKey": "stepfunctions.statemachine.logdestination.cloudwatchlogsloggroup",
        "UpdateRequires": "No interruption"
    },
    "stepfunctions.statemachine.logdestination.cloudwatchlogsloggroup.cfnproperties": [
        "LogGroupArn",
        "UniqueKey"
    ],
    "stepfunctions.statemachine.logdestination.cloudwatchlogsloggroup.loggrouparn": {
        "Required": "Yes",
        "SampleValue": "TODO-loggrouparn",
        "UniqueKey": "stepfunctions.statemachine.logdestination.cloudwatchlogsloggroup.loggrouparn",
        "UpdateRequires": "No interruption"
    },
    "stepfunctions.statemachine.loggingconfiguration.cfnproperties": [
        "IncludeExecutionData",
        "Level",
        "Destinations",
        "UniqueKey"
    ],
    "stepfunctions.statemachine.loggingconfiguration.destinations": {
        "Required": "No",
        "Type": "List of [LogDestination",
        "UniqueKey": "stepfunctions.statemachine.loggingconfiguration.destinations",
        "UpdateRequires": "No interruption"
    },
    "stepfunctions.statemachine.loggingconfiguration.includeexecutiondata": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "stepfunctions.statemachine.loggingconfiguration.includeexecutiondata",
        "UpdateRequires": "No interruption"
    },
    "stepfunctions.statemachine.loggingconfiguration.level": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "stepfunctions.statemachine.loggingconfiguration.level",
        "UpdateRequires": "No interruption"
    },
    "stepfunctions.statemachine.tagsentry.cfnproperties": [
        "Value",
        "Key",
        "UniqueKey",
        "SampleValue"
    ],
    "stepfunctions.statemachine.tagsentry.key": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "stepfunctions.statemachine.tagsentry.key",
        "UpdateRequires": "No interruption"
    },
    "stepfunctions.statemachine.tagsentry.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "stepfunctions.statemachine.tagsentry.value",
        "UpdateRequires": "No interruption"
    },
    "transfer.server.endpointdetails.cfnproperties": [
        "VpcEndpointId",
        "UniqueKey"
    ],
    "transfer.server.endpointdetails.vpcendpointid": {
        "Maximum": "22",
        "Minimum": "22",
        "Pattern": "^vpce-[0-9a-f]{17}$",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "transfer.server.endpointdetails.vpcendpointid",
        "UpdateRequires": "No interruption"
    },
    "transfer.server.identityproviderdetails.cfnproperties": [
        "Url",
        "InvocationRole",
        "UniqueKey",
        "SampleValue"
    ],
    "transfer.server.identityproviderdetails.invocationrole": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": "arn:.*role/.*",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "transfer.server.identityproviderdetails.invocationrole",
        "UpdateRequires": "No interruption"
    },
    "transfer.server.identityproviderdetails.url": {
        "Maximum": "255",
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "transfer.server.identityproviderdetails.url",
        "UpdateRequires": "No interruption"
    },
    "w5508ab1c20c15c15c25c19b7": {
        "UniqueKey": "w5508ab1c20c15c15c25c19b7",
        "default": {
            "Required": "No",
            "Type": "String"
        }
    },
    "w5508ab1c20c15c15c25c19b7.default": {
        "Required": "No",
        "SampleValue": "TODO-default",
        "Type": "String",
        "UniqueKey": "w5508ab1c20c15c15c25c19b7.default"
    },
    "w5508ab1c20c15c15c25c23b7": {
        "Label": {
            "Required": "No",
            "Type": "AWS CloudFormation Interface Label"
        },
        "Parameters": {
            "Required": "No",
            "Type": "List of String values"
        },
        "SampleValue": "TODO-w5508ab1c20c15c15c25c23b7",
        "UniqueKey": "w5508ab1c20c15c15c25c23b7"
    },
    "w5508ab1c20c15c15c25c23b7.label": {
        "Required": "No",
        "SampleValue": "TODO-label",
        "Type": "AWS CloudFormation Interface Label",
        "UniqueKey": "w5508ab1c20c15c15c25c23b7.label"
    },
    "w5508ab1c20c15c15c25c23b7.parameters": {
        "Required": "No",
        "SampleValue": "TODO-parameters",
        "Type": "List of String values",
        "UniqueKey": "w5508ab1c20c15c15c25c23b7.parameters"
    },
    "w5508ab1c20c15c15c25c27b7": {
        "ParameterLogicalID": {
            "Required": "No"
        },
        "UniqueKey": "w5508ab1c20c15c15c25c27b7"
    },
    "w5508ab1c20c15c15c25c27b7.parameterlogicalid": {
        "Required": "No",
        "UniqueKey": "w5508ab1c20c15c15c25c27b7.parameterlogicalid"
    },
    "w5508ab1c26c10d222c13c17": {
        "Key": {
            "Required": "Yes",
            "Type": "String"
        },
        "SampleValue": "TODO-w5508ab1c26c10d222c13c17",
        "UniqueKey": "w5508ab1c26c10d222c13c17",
        "Value": {
            "Required": "Yes",
            "Type": "String\n\n#"
        }
    },
    "w5508ab1c26c10d222c13c17.key": {
        "Required": "Yes",
        "SampleValue": "TODO-key",
        "Type": "String",
        "UniqueKey": "w5508ab1c26c10d222c13c17.key"
    },
    "w5508ab1c26c10d222c13c17.value": {
        "Required": "Yes",
        "SampleValue": "TODO-value",
        "Type": "String\n\n#",
        "UniqueKey": "w5508ab1c26c10d222c13c17.value"
    },
    "waf.bytematchset.bytematchtuples.cfnproperties": [
        "TargetString",
        "TargetStringBase64",
        "PositionalConstraint",
        "TextTransformation",
        "FieldToMatch",
        "UniqueKey"
    ],
    "waf.bytematchset.bytematchtuples.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "waf.bytematchset.bytematchtuples.fieldtomatch",
        "UpdateRequires": "No interruption"
    },
    "waf.bytematchset.bytematchtuples.fieldtomatch.1.cfnproperties": [
        "Type",
        "Data",
        "UniqueKey",
        "SampleValue"
    ],
    "waf.bytematchset.bytematchtuples.fieldtomatch.1.data": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "waf.bytematchset.bytematchtuples.fieldtomatch.1.data",
        "UpdateRequires": "No interruption"
    },
    "waf.bytematchset.bytematchtuples.fieldtomatch.1.type": {
        "AllowedValues": [
            "ALL_QUERY_ARGS",
            "BODY",
            "HEADER",
            "METHOD",
            "QUERY_STRING",
            "SINGLE_QUERY_ARG",
            "URI"
        ],
        "Pattern": "^[ALL_QUERY_ARGS|BODY|HEADER|METHOD|QUERY_STRING|SINGLE_QUERY_ARG|URI]",
        "Required": "Yes",
        "SampleValue": "ALL_QUERY_ARGS|BODY|HEADER|METHOD|QUERY_STRING|SINGLE_QUERY_ARG|URI",
        "UniqueKey": "waf.bytematchset.bytematchtuples.fieldtomatch.1.type",
        "UpdateRequires": "No interruption"
    },
    "waf.bytematchset.bytematchtuples.fieldtomatch.cfnproperties": [
        "Type",
        "Data",
        "UniqueKey",
        "SampleValue"
    ],
    "waf.bytematchset.bytematchtuples.fieldtomatch.data": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "waf.bytematchset.bytematchtuples.fieldtomatch.data",
        "UpdateRequires": "No interruption"
    },
    "waf.bytematchset.bytematchtuples.fieldtomatch.type": {
        "AllowedValues": [
            "ALL_QUERY_ARGS",
            "BODY",
            "HEADER",
            "METHOD",
            "QUERY_STRING",
            "SINGLE_QUERY_ARG",
            "URI"
        ],
        "Pattern": "^[ALL_QUERY_ARGS|BODY|HEADER|METHOD|QUERY_STRING|SINGLE_QUERY_ARG|URI]",
        "Required": "Yes",
        "SampleValue": "ALL_QUERY_ARGS|BODY|HEADER|METHOD|QUERY_STRING|SINGLE_QUERY_ARG|URI",
        "UniqueKey": "waf.bytematchset.bytematchtuples.fieldtomatch.type",
        "UpdateRequires": "No interruption"
    },
    "waf.bytematchset.bytematchtuples.positionalconstraint": {
        "AllowedValues": [
            "CONTAINS",
            "CONTAINS_WORD",
            "ENDS_WITH",
            "EXACTLY",
            "STARTS_WITH"
        ],
        "Pattern": "^[CONTAINS|CONTAINS_WORD|ENDS_WITH|EXACTLY|STARTS_WITH]",
        "Required": "Yes",
        "SampleValue": "CONTAINS|CONTAINS_WORD|ENDS_WITH|EXACTLY|STARTS_WITH",
        "UniqueKey": "waf.bytematchset.bytematchtuples.positionalconstraint",
        "UpdateRequires": "No interruption"
    },
    "waf.bytematchset.bytematchtuples.targetstring": {
        "Required": "Conditional",
        "SampleValue": "TODO-targetstring",
        "UniqueKey": "waf.bytematchset.bytematchtuples.targetstring",
        "UpdateRequires": "No interruption"
    },
    "waf.bytematchset.bytematchtuples.targetstringbase64": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "waf.bytematchset.bytematchtuples.targetstringbase64",
        "UpdateRequires": "No interruption"
    },
    "waf.bytematchset.bytematchtuples.texttransformation": {
        "AllowedValues": [
            "CMD_LINE",
            "COMPRESS_WHITE_SPACE",
            "HTML_ENTITY_DECODE",
            "LOWERCASE",
            "NONE",
            "URL_DECODE"
        ],
        "Pattern": "^[CMD_LINE|COMPRESS_WHITE_SPACE|HTML_ENTITY_DECODE|LOWERCASE|NONE|URL_DECODE]",
        "Required": "Yes",
        "SampleValue": "CMD_LINE|COMPRESS_WHITE_SPACE|HTML_ENTITY_DECODE|LOWERCASE|NONE|URL_DECODE",
        "UniqueKey": "waf.bytematchset.bytematchtuples.texttransformation",
        "UpdateRequires": "No interruption"
    },
    "waf.ipset.ipsetdescriptors.cfnproperties": [
        "Type",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "waf.ipset.ipsetdescriptors.type": {
        "Allowed Values": "IPV4 | IPV6",
        "AllowedValues": [
            "IPV4",
            "IPV6"
        ],
        "Pattern": "^[IPV4|IPV6]",
        "Required": "Yes",
        "SampleValue": "IPV4|IPV6",
        "Type": "String",
        "UniqueKey": "waf.ipset.ipsetdescriptors.type",
        "UpdateRequires": "No interruption"
    },
    "waf.ipset.ipsetdescriptors.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "waf.ipset.ipsetdescriptors.value",
        "UpdateRequires": "No interruption"
    },
    "waf.rule.predicates.cfnproperties": [
        "DataId",
        "Type",
        "Negated",
        "UniqueKey"
    ],
    "waf.rule.predicates.dataid": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "Yes",
        "SampleValue": "TODO-waf.rule.predicates.dataid",
        "Type": "String",
        "UniqueKey": "waf.rule.predicates.dataid",
        "UpdateRequires": "No interruption"
    },
    "waf.rule.predicates.negated": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "UniqueKey": "waf.rule.predicates.negated",
        "UpdateRequires": "No interruption"
    },
    "waf.rule.predicates.type": {
        "Allowed Values": "ByteMatch | GeoMatch | IPMatch | RegexMatch | SizeConstraint | SqlInjectionMatch | XssMatch",
        "AllowedValues": [
            "ByteMatch",
            "GeoMatch",
            "IPMatch",
            "RegexMatch",
            "SizeConstraint",
            "SqlInjectionMatch",
            "XssMatch"
        ],
        "Pattern": "^[ByteMatch|GeoMatch|IPMatch|RegexMatch|SizeConstraint|SqlInjectionMatch|XssMatch]",
        "Required": "Yes",
        "SampleValue": "ByteMatch|GeoMatch|IPMatch|RegexMatch|SizeConstraint|SqlInjectionMatch|XssMatch",
        "Type": "String",
        "UniqueKey": "waf.rule.predicates.type",
        "UpdateRequires": "No interruption"
    },
    "waf.sizeconstraintset.sizeconstraint.cfnproperties": [
        "ComparisonOperator",
        "TextTransformation",
        "FieldToMatch",
        "Size",
        "UniqueKey"
    ],
    "waf.sizeconstraintset.sizeconstraint.comparisonoperator": {
        "Allowed Values": "EQ | GE | GT | LE | LT | NE",
        "AllowedValues": [
            "EQ",
            "GE",
            "GT",
            "LE",
            "LT",
            "NE"
        ],
        "ComparisonOperator`  <a name=\"cfn-waf-sizeconstraintset-sizeconstraint-comparisonoperator\"></a>\nThe type of comparison you want AWS WAF to perform\\. AWS WAF uses this in combination with the provided `Size` and `FieldToMatch` to build an expression in the form of \"`Size` `ComparisonOperator` size in bytes of `FieldToMatch`\"\\. If that expression is true, the `SizeConstraint` is considered to match\\.  \n **EQ*": "Used to test if the `Size` is equal to the size of the `FieldToMatch`   \n **NE*",
        "Pattern": "^[EQ|GE|GT|LE|LT|NE]",
        "Required": "Yes",
        "SampleValue": "EQ|GE|GT|LE|LT|NE",
        "Type": "String",
        "UniqueKey": "waf.sizeconstraintset.sizeconstraint.comparisonoperator",
        "UpdateRequires": "No interruption"
    },
    "waf.sizeconstraintset.sizeconstraint.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "waf.sizeconstraintset.sizeconstraint.fieldtomatch",
        "UpdateRequires": "No interruption"
    },
    "waf.sizeconstraintset.sizeconstraint.fieldtomatch.cfnproperties": [
        "Type",
        "Data",
        "UniqueKey",
        "SampleValue"
    ],
    "waf.sizeconstraintset.sizeconstraint.fieldtomatch.data": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "waf.sizeconstraintset.sizeconstraint.fieldtomatch.data",
        "UpdateRequires": "No interruption"
    },
    "waf.sizeconstraintset.sizeconstraint.fieldtomatch.type": {
        "AllowedValues": [
            "ALL_QUERY_ARGS",
            "BODY",
            "HEADER",
            "METHOD",
            "QUERY_STRING",
            "SINGLE_QUERY_ARG",
            "URI"
        ],
        "Pattern": "^[ALL_QUERY_ARGS|BODY|HEADER|METHOD|QUERY_STRING|SINGLE_QUERY_ARG|URI]",
        "Required": "Yes",
        "SampleValue": "ALL_QUERY_ARGS|BODY|HEADER|METHOD|QUERY_STRING|SINGLE_QUERY_ARG|URI",
        "UniqueKey": "waf.sizeconstraintset.sizeconstraint.fieldtomatch.type",
        "UpdateRequires": "No interruption"
    },
    "waf.sizeconstraintset.sizeconstraint.size": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "waf.sizeconstraintset.sizeconstraint.size",
        "UpdateRequires": "No interruption"
    },
    "waf.sizeconstraintset.sizeconstraint.texttransformation": {
        "AllowedValues": [
            "CMD_LINE",
            "COMPRESS_WHITE_SPACE",
            "HTML_ENTITY_DECODE",
            "LOWERCASE",
            "NONE",
            "URL_DECODE"
        ],
        "Pattern": "^[CMD_LINE|COMPRESS_WHITE_SPACE|HTML_ENTITY_DECODE|LOWERCASE|NONE|URL_DECODE]",
        "Required": "Yes",
        "SampleValue": "CMD_LINE|COMPRESS_WHITE_SPACE|HTML_ENTITY_DECODE|LOWERCASE|NONE|URL_DECODE",
        "UniqueKey": "waf.sizeconstraintset.sizeconstraint.texttransformation",
        "UpdateRequires": "No interruption"
    },
    "waf.sqlinjectionmatchset.sqlinjectionmatchtuples.cfnproperties": [
        "TextTransformation",
        "FieldToMatch",
        "UniqueKey",
        "SampleValue"
    ],
    "waf.sqlinjectionmatchset.sqlinjectionmatchtuples.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "waf.sqlinjectionmatchset.sqlinjectionmatchtuples.fieldtomatch",
        "UpdateRequires": "No interruption"
    },
    "waf.sqlinjectionmatchset.sqlinjectionmatchtuples.texttransformation": {
        "AllowedValues": [
            "CMD_LINE",
            "COMPRESS_WHITE_SPACE",
            "HTML_ENTITY_DECODE",
            "LOWERCASE",
            "NONE",
            "URL_DECODE"
        ],
        "Pattern": "^[CMD_LINE|COMPRESS_WHITE_SPACE|HTML_ENTITY_DECODE|LOWERCASE|NONE|URL_DECODE]",
        "Required": "Yes",
        "SampleValue": "CMD_LINE|COMPRESS_WHITE_SPACE|HTML_ENTITY_DECODE|LOWERCASE|NONE|URL_DECODE",
        "UniqueKey": "waf.sqlinjectionmatchset.sqlinjectionmatchtuples.texttransformation",
        "UpdateRequires": "No interruption"
    },
    "waf.webacl.action.cfnproperties": [
        "Type",
        "UniqueKey"
    ],
    "waf.webacl.action.type": {
        "Allowed Values": "ALLOW | BLOCK | COUNT",
        "AllowedValues": [
            "ALLOW",
            "BLOCK",
            "COUNT"
        ],
        "Pattern": "^[ALLOW|BLOCK|COUNT]",
        "Required": "Yes",
        "SampleValue": "ALLOW|BLOCK|COUNT",
        "Type": "String",
        "UniqueKey": "waf.webacl.action.type",
        "UpdateRequires": "No interruption"
    },
    "waf.webacl.rules.action": {
        "Required": "No",
        "Type": "WafAction",
        "UniqueKey": "waf.webacl.rules.action",
        "UpdateRequires": "No interruption"
    },
    "waf.webacl.rules.cfnproperties": [
        "Action",
        "Priority",
        "RuleId",
        "UniqueKey"
    ],
    "waf.webacl.rules.priority": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "waf.webacl.rules.priority",
        "UpdateRequires": "No interruption"
    },
    "waf.webacl.rules.ruleid": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "Yes",
        "SampleValue": "TODO-waf.webacl.rules.ruleid",
        "Type": "String",
        "UniqueKey": "waf.webacl.rules.ruleid",
        "UpdateRequires": "No interruption"
    },
    "waf.xssmatchset.xssmatchtuple.cfnproperties": [
        "TextTransformation",
        "FieldToMatch",
        "UniqueKey",
        "SampleValue"
    ],
    "waf.xssmatchset.xssmatchtuple.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "waf.xssmatchset.xssmatchtuple.fieldtomatch",
        "UpdateRequires": "No interruption"
    },
    "waf.xssmatchset.xssmatchtuple.fieldtomatch.cfnproperties": [
        "Type",
        "Data",
        "UniqueKey",
        "SampleValue"
    ],
    "waf.xssmatchset.xssmatchtuple.fieldtomatch.data": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "waf.xssmatchset.xssmatchtuple.fieldtomatch.data",
        "UpdateRequires": "No interruption"
    },
    "waf.xssmatchset.xssmatchtuple.fieldtomatch.type": {
        "AllowedValues": [
            "ALL_QUERY_ARGS",
            "BODY",
            "HEADER",
            "METHOD",
            "QUERY_STRING",
            "SINGLE_QUERY_ARG",
            "URI"
        ],
        "Pattern": "^[ALL_QUERY_ARGS|BODY|HEADER|METHOD|QUERY_STRING|SINGLE_QUERY_ARG|URI]",
        "Required": "Yes",
        "SampleValue": "ALL_QUERY_ARGS|BODY|HEADER|METHOD|QUERY_STRING|SINGLE_QUERY_ARG|URI",
        "UniqueKey": "waf.xssmatchset.xssmatchtuple.fieldtomatch.type",
        "UpdateRequires": "No interruption"
    },
    "waf.xssmatchset.xssmatchtuple.texttransformation": {
        "AllowedValues": [
            "CMD_LINE",
            "COMPRESS_WHITE_SPACE",
            "HTML_ENTITY_DECODE",
            "LOWERCASE",
            "NONE",
            "URL_DECODE"
        ],
        "Pattern": "^[CMD_LINE|COMPRESS_WHITE_SPACE|HTML_ENTITY_DECODE|LOWERCASE|NONE|URL_DECODE]",
        "Required": "Yes",
        "SampleValue": "CMD_LINE|COMPRESS_WHITE_SPACE|HTML_ENTITY_DECODE|LOWERCASE|NONE|URL_DECODE",
        "UniqueKey": "waf.xssmatchset.xssmatchtuple.texttransformation",
        "UpdateRequires": "No interruption"
    },
    "wafregional.bytematchset.bytematchtuple.cfnproperties": [
        "TargetString",
        "TargetStringBase64",
        "PositionalConstraint",
        "TextTransformation",
        "FieldToMatch",
        "UniqueKey"
    ],
    "wafregional.bytematchset.bytematchtuple.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafregional.bytematchset.bytematchtuple.fieldtomatch",
        "UpdateRequires": "No interruption"
    },
    "wafregional.bytematchset.bytematchtuple.positionalconstraint": {
        "AllowedValues": [
            "CONTAINS",
            "CONTAINS_WORD",
            "ENDS_WITH",
            "EXACTLY",
            "STARTS_WITH"
        ],
        "Pattern": "^[CONTAINS|CONTAINS_WORD|ENDS_WITH|EXACTLY|STARTS_WITH]",
        "Required": "Yes",
        "SampleValue": "CONTAINS|CONTAINS_WORD|ENDS_WITH|EXACTLY|STARTS_WITH",
        "UniqueKey": "wafregional.bytematchset.bytematchtuple.positionalconstraint",
        "UpdateRequires": "No interruption"
    },
    "wafregional.bytematchset.bytematchtuple.targetstring": {
        "Required": "Conditional",
        "SampleValue": "TODO-targetstring",
        "UniqueKey": "wafregional.bytematchset.bytematchtuple.targetstring",
        "UpdateRequires": "No interruption"
    },
    "wafregional.bytematchset.bytematchtuple.targetstringbase64": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "wafregional.bytematchset.bytematchtuple.targetstringbase64",
        "UpdateRequires": "No interruption"
    },
    "wafregional.bytematchset.bytematchtuple.texttransformation": {
        "AllowedValues": [
            "CMD_LINE",
            "COMPRESS_WHITE_SPACE",
            "HTML_ENTITY_DECODE",
            "LOWERCASE",
            "NONE",
            "URL_DECODE"
        ],
        "Pattern": "^[CMD_LINE|COMPRESS_WHITE_SPACE|HTML_ENTITY_DECODE|LOWERCASE|NONE|URL_DECODE]",
        "Required": "Yes",
        "SampleValue": "CMD_LINE|COMPRESS_WHITE_SPACE|HTML_ENTITY_DECODE|LOWERCASE|NONE|URL_DECODE",
        "UniqueKey": "wafregional.bytematchset.bytematchtuple.texttransformation",
        "UpdateRequires": "No interruption"
    },
    "wafregional.bytematchset.fieldtomatch.cfnproperties": [
        "Type",
        "Data",
        "UniqueKey",
        "SampleValue"
    ],
    "wafregional.bytematchset.fieldtomatch.data": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafregional.bytematchset.fieldtomatch.data",
        "UpdateRequires": "No interruption"
    },
    "wafregional.bytematchset.fieldtomatch.type": {
        "AllowedValues": [
            "ALL_QUERY_ARGS",
            "BODY",
            "HEADER",
            "METHOD",
            "QUERY_STRING",
            "SINGLE_QUERY_ARG",
            "URI"
        ],
        "Pattern": "^[ALL_QUERY_ARGS|BODY|HEADER|METHOD|QUERY_STRING|SINGLE_QUERY_ARG|URI]",
        "Required": "Yes",
        "SampleValue": "ALL_QUERY_ARGS|BODY|HEADER|METHOD|QUERY_STRING|SINGLE_QUERY_ARG|URI",
        "UniqueKey": "wafregional.bytematchset.fieldtomatch.type",
        "UpdateRequires": "No interruption"
    },
    "wafregional.geomatchset.geomatchconstraint.cfnproperties": [
        "Type",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "wafregional.geomatchset.geomatchconstraint.type": {
        "Allowed Values": "Country",
        "AllowedValues": [
            "Country"
        ],
        "Pattern": "^[Country]",
        "Required": "Yes",
        "SampleValue": "Country",
        "Type": "String",
        "UniqueKey": "wafregional.geomatchset.geomatchconstraint.type",
        "UpdateRequires": "No interruption"
    },
    "wafregional.geomatchset.geomatchconstraint.value": {
        "Allowed Values": "AD | AE | AF | AG | AI | AL | AM | AO | AQ | AR | AS | AT | AU | AW | AX | AZ | BA | BB | BD | BE | BF | BG | BH | BI | BJ | BL | BM | BN | BO | BQ | BR | BS | BT | BV | BW | BY | BZ | CA | CC | CD | CF | CG | CH | CI | CK | CL | CM | CN | CO | CR | CU | CV | CW | CX | CY | CZ | DE | DJ | DK | DM | DO | DZ | EC | EE | EG | EH | ER | ES | ET | FI | FJ | FK | FM | FO | FR | GA | GB | GD | GE | GF | GG | GH | GI | GL | GM | GN | GP | GQ | GR | GS | GT | GU | GW | GY | HK | HM | HN | HR | HT | HU | ID | IE | IL | IM | IN | IO | IQ | IR | IS | IT | JE | JM | JO | JP | KE | KG | KH | KI | KM | KN | KP | KR | KW | KY | KZ | LA | LB | LC | LI | LK | LR | LS | LT | LU | LV | LY | MA | MC | MD | ME | MF | MG | MH | MK | ML | MM | MN | MO | MP | MQ | MR | MS | MT | MU | MV | MW | MX | MY | MZ | NA | NC | NE | NF | NG | NI | NL | NO | NP | NR | NU | NZ | OM | PA | PE | PF | PG | PH | PK | PL | PM | PN | PR | PS | PT | PW | PY | QA | RE | RO | RS | RU | RW | SA | SB | SC | SD | SE | SG | SH | SI | SJ | SK | SL | SM | SN | SO | SR | SS | ST | SV | SX | SY | SZ | TC | TD | TF | TG | TH | TJ | TK | TL | TM | TN | TO | TR | TT | TV | TW | TZ | UA | UG | UM | US | UY | UZ | VA | VC | VE | VG | VI | VN | VU | WF | WS | YE | YT | ZA | ZM | ZW",
        "AllowedValues": [
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
        ],
        "Pattern": "^[AD|AE|AF|AG|AI|AL|AM|AO|AQ|AR|AS|AT|AU|AW|AX|AZ|BA|BB|BD|BE|BF|BG|BH|BI|BJ|BL|BM|BN|BO|BQ|BR|BS|BT|BV|BW|BY|BZ|CA|CC|CD|CF|CG|CH|CI|CK|CL|CM|CN|CO|CR|CU|CV|CW|CX|CY|CZ|DE|DJ|DK|DM|DO|DZ|EC|EE|EG|EH|ER|ES|ET|FI|FJ|FK|FM|FO|FR|GA|GB|GD|GE|GF|GG|GH|GI|GL|GM|GN|GP|GQ|GR|GS|GT|GU|GW|GY|HK|HM|HN|HR|HT|HU|ID|IE|IL|IM|IN|IO|IQ|IR|IS|IT|JE|JM|JO|JP|KE|KG|KH|KI|KM|KN|KP|KR|KW|KY|KZ|LA|LB|LC|LI|LK|LR|LS|LT|LU|LV|LY|MA|MC|MD|ME|MF|MG|MH|MK|ML|MM|MN|MO|MP|MQ|MR|MS|MT|MU|MV|MW|MX|MY|MZ|NA|NC|NE|NF|NG|NI|NL|NO|NP|NR|NU|NZ|OM|PA|PE|PF|PG|PH|PK|PL|PM|PN|PR|PS|PT|PW|PY|QA|RE|RO|RS|RU|RW|SA|SB|SC|SD|SE|SG|SH|SI|SJ|SK|SL|SM|SN|SO|SR|SS|ST|SV|SX|SY|SZ|TC|TD|TF|TG|TH|TJ|TK|TL|TM|TN|TO|TR|TT|TV|TW|TZ|UA|UG|UM|US|UY|UZ|VA|VC|VE|VG|VI|VN|VU|WF|WS|YE|YT|ZA|ZM|ZW]",
        "Required": "Yes",
        "SampleValue": "AD|AE|AF|AG|AI|AL|AM|AO|AQ|AR|AS|AT|AU|AW|AX|AZ|BA|BB|BD|BE|BF|BG|BH|BI|BJ|BL|BM|BN|BO|BQ|BR|BS|BT|BV|BW|BY|BZ|CA|CC|CD|CF|CG|CH|CI|CK|CL|CM|CN|CO|CR|CU|CV|CW|CX|CY|CZ|DE|DJ|DK|DM|DO|DZ|EC|EE|EG|EH|ER|ES|ET|FI|FJ|FK|FM|FO|FR|GA|GB|GD|GE|GF|GG|GH|GI|GL|GM|GN|GP|GQ|GR|GS|GT|GU|GW|GY|HK|HM|HN|HR|HT|HU|ID|IE|IL|IM|IN|IO|IQ|IR|IS|IT|JE|JM|JO|JP|KE|KG|KH|KI|KM|KN|KP|KR|KW|KY|KZ|LA|LB|LC|LI|LK|LR|LS|LT|LU|LV|LY|MA|MC|MD|ME|MF|MG|MH|MK|ML|MM|MN|MO|MP|MQ|MR|MS|MT|MU|MV|MW|MX|MY|MZ|NA|NC|NE|NF|NG|NI|NL|NO|NP|NR|NU|NZ|OM|PA|PE|PF|PG|PH|PK|PL|PM|PN|PR|PS|PT|PW|PY|QA|RE|RO|RS|RU|RW|SA|SB|SC|SD|SE|SG|SH|SI|SJ|SK|SL|SM|SN|SO|SR|SS|ST|SV|SX|SY|SZ|TC|TD|TF|TG|TH|TJ|TK|TL|TM|TN|TO|TR|TT|TV|TW|TZ|UA|UG|UM|US|UY|UZ|VA|VC|VE|VG|VI|VN|VU|WF|WS|YE|YT|ZA|ZM|ZW",
        "Type": "String",
        "UniqueKey": "wafregional.geomatchset.geomatchconstraint.value",
        "UpdateRequires": "No interruption"
    },
    "wafregional.ipset.ipsetdescriptor.cfnproperties": [
        "Type",
        "Value",
        "UniqueKey",
        "SampleValue"
    ],
    "wafregional.ipset.ipsetdescriptor.type": {
        "Allowed Values": "IPV4 | IPV6",
        "AllowedValues": [
            "IPV4",
            "IPV6"
        ],
        "Pattern": "^[IPV4|IPV6]",
        "Required": "Yes",
        "SampleValue": "IPV4|IPV6",
        "Type": "String",
        "UniqueKey": "wafregional.ipset.ipsetdescriptor.type",
        "UpdateRequires": "No interruption"
    },
    "wafregional.ipset.ipsetdescriptor.value": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.ipset.ipsetdescriptor.value",
        "UpdateRequires": "No interruption"
    },
    "wafregional.ratebasedrule.predicate.cfnproperties": [
        "DataId",
        "Type",
        "Negated",
        "UniqueKey"
    ],
    "wafregional.ratebasedrule.predicate.dataid": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "Yes",
        "SampleValue": "TODO-wafregional.ratebasedrule.predicate.dataid",
        "Type": "String",
        "UniqueKey": "wafregional.ratebasedrule.predicate.dataid",
        "UpdateRequires": "No interruption"
    },
    "wafregional.ratebasedrule.predicate.negated": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "UniqueKey": "wafregional.ratebasedrule.predicate.negated",
        "UpdateRequires": "No interruption"
    },
    "wafregional.ratebasedrule.predicate.type": {
        "Allowed Values": "ByteMatch | GeoMatch | IPMatch | RegexMatch | SizeConstraint | SqlInjectionMatch | XssMatch",
        "AllowedValues": [
            "ByteMatch",
            "GeoMatch",
            "IPMatch",
            "RegexMatch",
            "SizeConstraint",
            "SqlInjectionMatch",
            "XssMatch"
        ],
        "Pattern": "^[ByteMatch|GeoMatch|IPMatch|RegexMatch|SizeConstraint|SqlInjectionMatch|XssMatch]",
        "Required": "Yes",
        "SampleValue": "ByteMatch|GeoMatch|IPMatch|RegexMatch|SizeConstraint|SqlInjectionMatch|XssMatch",
        "Type": "String",
        "UniqueKey": "wafregional.ratebasedrule.predicate.type",
        "UpdateRequires": "No interruption"
    },
    "wafregional.rule.predicate.cfnproperties": [
        "DataId",
        "Type",
        "Negated",
        "UniqueKey"
    ],
    "wafregional.rule.predicate.dataid": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "Yes",
        "SampleValue": "TODO-wafregional.rule.predicate.dataid",
        "Type": "String",
        "UniqueKey": "wafregional.rule.predicate.dataid",
        "UpdateRequires": "No interruption"
    },
    "wafregional.rule.predicate.negated": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "Yes",
        "SampleValue": "True|False",
        "UniqueKey": "wafregional.rule.predicate.negated",
        "UpdateRequires": "No interruption"
    },
    "wafregional.rule.predicate.type": {
        "Allowed Values": "ByteMatch | GeoMatch | IPMatch | RegexMatch | SizeConstraint | SqlInjectionMatch | XssMatch",
        "AllowedValues": [
            "ByteMatch",
            "GeoMatch",
            "IPMatch",
            "RegexMatch",
            "SizeConstraint",
            "SqlInjectionMatch",
            "XssMatch"
        ],
        "Pattern": "^[ByteMatch|GeoMatch|IPMatch|RegexMatch|SizeConstraint|SqlInjectionMatch|XssMatch]",
        "Required": "Yes",
        "SampleValue": "ByteMatch|GeoMatch|IPMatch|RegexMatch|SizeConstraint|SqlInjectionMatch|XssMatch",
        "Type": "String",
        "UniqueKey": "wafregional.rule.predicate.type",
        "UpdateRequires": "No interruption"
    },
    "wafregional.sizeconstraintset.fieldtomatch.cfnproperties": [
        "Type",
        "Data",
        "UniqueKey",
        "SampleValue"
    ],
    "wafregional.sizeconstraintset.fieldtomatch.data": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "wafregional.sizeconstraintset.fieldtomatch.data",
        "UpdateRequires": "No interruption"
    },
    "wafregional.sizeconstraintset.fieldtomatch.type": {
        "AllowedValues": [
            "ALL_QUERY_ARGS",
            "BODY",
            "HEADER",
            "METHOD",
            "QUERY_STRING",
            "SINGLE_QUERY_ARG",
            "URI"
        ],
        "Pattern": "^[ALL_QUERY_ARGS|BODY|HEADER|METHOD|QUERY_STRING|SINGLE_QUERY_ARG|URI]",
        "Required": "Yes",
        "SampleValue": "ALL_QUERY_ARGS|BODY|HEADER|METHOD|QUERY_STRING|SINGLE_QUERY_ARG|URI",
        "UniqueKey": "wafregional.sizeconstraintset.fieldtomatch.type",
        "UpdateRequires": "No interruption"
    },
    "wafregional.sizeconstraintset.sizeconstraint.cfnproperties": [
        "ComparisonOperator",
        "TextTransformation",
        "FieldToMatch",
        "Size",
        "UniqueKey"
    ],
    "wafregional.sizeconstraintset.sizeconstraint.comparisonoperator": {
        "Allowed Values": "EQ | GE | GT | LE | LT | NE",
        "AllowedValues": [
            "EQ",
            "GE",
            "GT",
            "LE",
            "LT",
            "NE"
        ],
        "ComparisonOperator`  <a name=\"cfn-wafregional-sizeconstraintset-sizeconstraint-comparisonoperator\"></a>\nThe type of comparison you want AWS WAF to perform\\. AWS WAF uses this in combination with the provided `Size` and `FieldToMatch` to build an expression in the form of \"`Size` `ComparisonOperator` size in bytes of `FieldToMatch`\"\\. If that expression is true, the `SizeConstraint` is considered to match\\.  \n **EQ*": "Used to test if the `Size` is equal to the size of the `FieldToMatch`   \n **NE*",
        "Pattern": "^[EQ|GE|GT|LE|LT|NE]",
        "Required": "Yes",
        "SampleValue": "EQ|GE|GT|LE|LT|NE",
        "Type": "String",
        "UniqueKey": "wafregional.sizeconstraintset.sizeconstraint.comparisonoperator",
        "UpdateRequires": "No interruption"
    },
    "wafregional.sizeconstraintset.sizeconstraint.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafregional.sizeconstraintset.sizeconstraint.fieldtomatch",
        "UpdateRequires": "No interruption"
    },
    "wafregional.sizeconstraintset.sizeconstraint.size": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafregional.sizeconstraintset.sizeconstraint.size",
        "UpdateRequires": "No interruption"
    },
    "wafregional.sizeconstraintset.sizeconstraint.texttransformation": {
        "AllowedValues": [
            "CMD_LINE",
            "COMPRESS_WHITE_SPACE",
            "HTML_ENTITY_DECODE",
            "LOWERCASE",
            "NONE",
            "URL_DECODE"
        ],
        "Pattern": "^[CMD_LINE|COMPRESS_WHITE_SPACE|HTML_ENTITY_DECODE|LOWERCASE|NONE|URL_DECODE]",
        "Required": "Yes",
        "SampleValue": "CMD_LINE|COMPRESS_WHITE_SPACE|HTML_ENTITY_DECODE|LOWERCASE|NONE|URL_DECODE",
        "UniqueKey": "wafregional.sizeconstraintset.sizeconstraint.texttransformation",
        "UpdateRequires": "No interruption"
    },
    "wafregional.sqlinjectionmatchset.fieldtomatch.cfnproperties": [
        "Type",
        "Data",
        "UniqueKey",
        "SampleValue"
    ],
    "wafregional.sqlinjectionmatchset.fieldtomatch.data": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "wafregional.sqlinjectionmatchset.fieldtomatch.data",
        "UpdateRequires": "No interruption"
    },
    "wafregional.sqlinjectionmatchset.fieldtomatch.type": {
        "AllowedValues": [
            "ALL_QUERY_ARGS",
            "BODY",
            "HEADER",
            "METHOD",
            "QUERY_STRING",
            "SINGLE_QUERY_ARG",
            "URI"
        ],
        "Pattern": "^[ALL_QUERY_ARGS|BODY|HEADER|METHOD|QUERY_STRING|SINGLE_QUERY_ARG|URI]",
        "Required": "Yes",
        "SampleValue": "ALL_QUERY_ARGS|BODY|HEADER|METHOD|QUERY_STRING|SINGLE_QUERY_ARG|URI",
        "UniqueKey": "wafregional.sqlinjectionmatchset.fieldtomatch.type",
        "UpdateRequires": "No interruption"
    },
    "wafregional.sqlinjectionmatchset.sqlinjectionmatchtuple.cfnproperties": [
        "TextTransformation",
        "FieldToMatch",
        "UniqueKey",
        "SampleValue"
    ],
    "wafregional.sqlinjectionmatchset.sqlinjectionmatchtuple.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafregional.sqlinjectionmatchset.sqlinjectionmatchtuple.fieldtomatch",
        "UpdateRequires": "No interruption"
    },
    "wafregional.sqlinjectionmatchset.sqlinjectionmatchtuple.texttransformation": {
        "AllowedValues": [
            "CMD_LINE",
            "COMPRESS_WHITE_SPACE",
            "HTML_ENTITY_DECODE",
            "LOWERCASE",
            "NONE",
            "URL_DECODE"
        ],
        "Pattern": "^[CMD_LINE|COMPRESS_WHITE_SPACE|HTML_ENTITY_DECODE|LOWERCASE|NONE|URL_DECODE]",
        "Required": "Yes",
        "SampleValue": "CMD_LINE|COMPRESS_WHITE_SPACE|HTML_ENTITY_DECODE|LOWERCASE|NONE|URL_DECODE",
        "UniqueKey": "wafregional.sqlinjectionmatchset.sqlinjectionmatchtuple.texttransformation",
        "UpdateRequires": "No interruption"
    },
    "wafregional.webacl.action.cfnproperties": [
        "Type",
        "UniqueKey"
    ],
    "wafregional.webacl.action.type": {
        "Required": "Yes",
        "Type": "String",
        "UniqueKey": "wafregional.webacl.action.type",
        "UpdateRequires": "No interruption"
    },
    "wafregional.webacl.rule.action": {
        "Required": "Yes",
        "Type": "Action",
        "UniqueKey": "wafregional.webacl.rule.action",
        "UpdateRequires": "No interruption"
    },
    "wafregional.webacl.rule.cfnproperties": [
        "Action",
        "Priority",
        "RuleId",
        "UniqueKey"
    ],
    "wafregional.webacl.rule.priority": {
        "Required": "Yes",
        "Type": "Integer",
        "UniqueKey": "wafregional.webacl.rule.priority",
        "UpdateRequires": "No interruption"
    },
    "wafregional.webacl.rule.ruleid": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^.{1,128}$",
        "Required": "Yes",
        "SampleValue": "TODO-wafregional.webacl.rule.ruleid",
        "Type": "String",
        "UniqueKey": "wafregional.webacl.rule.ruleid",
        "UpdateRequires": "No interruption"
    },
    "wafregional.xssmatchset.fieldtomatch.cfnproperties": [
        "Type",
        "Data",
        "UniqueKey",
        "SampleValue"
    ],
    "wafregional.xssmatchset.fieldtomatch.data": {
        "Required": "Conditional",
        "Type": "String",
        "UniqueKey": "wafregional.xssmatchset.fieldtomatch.data",
        "UpdateRequires": "No interruption"
    },
    "wafregional.xssmatchset.fieldtomatch.type": {
        "AllowedValues": [
            "ALL_QUERY_ARGS",
            "BODY",
            "HEADER",
            "METHOD",
            "QUERY_STRING",
            "SINGLE_QUERY_ARG",
            "URI"
        ],
        "Pattern": "^[ALL_QUERY_ARGS|BODY|HEADER|METHOD|QUERY_STRING|SINGLE_QUERY_ARG|URI]",
        "Required": "Yes",
        "SampleValue": "ALL_QUERY_ARGS|BODY|HEADER|METHOD|QUERY_STRING|SINGLE_QUERY_ARG|URI",
        "UniqueKey": "wafregional.xssmatchset.fieldtomatch.type",
        "UpdateRequires": "No interruption"
    },
    "wafregional.xssmatchset.xssmatchtuple.cfnproperties": [
        "TextTransformation",
        "FieldToMatch",
        "UniqueKey",
        "SampleValue"
    ],
    "wafregional.xssmatchset.xssmatchtuple.fieldtomatch": {
        "Required": "Yes",
        "Type": "FieldToMatch",
        "UniqueKey": "wafregional.xssmatchset.xssmatchtuple.fieldtomatch",
        "UpdateRequires": "No interruption"
    },
    "wafregional.xssmatchset.xssmatchtuple.texttransformation": {
        "AllowedValues": [
            "CMD_LINE",
            "COMPRESS_WHITE_SPACE",
            "HTML_ENTITY_DECODE",
            "LOWERCASE",
            "NONE",
            "URL_DECODE"
        ],
        "Pattern": "^[CMD_LINE|COMPRESS_WHITE_SPACE|HTML_ENTITY_DECODE|LOWERCASE|NONE|URL_DECODE]",
        "Required": "Yes",
        "SampleValue": "CMD_LINE|COMPRESS_WHITE_SPACE|HTML_ENTITY_DECODE|LOWERCASE|NONE|URL_DECODE",
        "UniqueKey": "wafregional.xssmatchset.xssmatchtuple.texttransformation",
        "UpdateRequires": "No interruption"
    },
    "wafv2.ipset.ipaddresses.cfnproperties": [
        "IPAddresses",
        "UniqueKey"
    ],
    "wafv2.ipset.ipaddresses.ipaddresses": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.ipset.ipaddresses.ipaddresses",
        "UpdateRequires": "No interruption"
    },
    "wafv2.ipset.taglist.cfnproperties": [
        "TagList",
        "UniqueKey"
    ],
    "wafv2.ipset.taglist.taglist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.ipset.taglist.taglist",
        "UpdateRequires": "No interruption"
    },
    "wafv2.regexpatternset.regex.cfnproperties": [
        "RegexString",
        "UniqueKey"
    ],
    "wafv2.regexpatternset.regex.regexstring": {
        "Maximum": "512",
        "Minimum": "1",
        "Pattern": ".*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.regexpatternset.regex.regexstring",
        "UpdateRequires": "No interruption"
    },
    "wafv2.regexpatternset.regularexpressionlist.cfnproperties": [
        "RegularExpressionList",
        "UniqueKey"
    ],
    "wafv2.regexpatternset.regularexpressionlist.regularexpressionlist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.regexpatternset.regularexpressionlist.regularexpressionlist",
        "UpdateRequires": "No interruption"
    },
    "wafv2.regexpatternset.taglist.cfnproperties": [
        "TagList",
        "UniqueKey"
    ],
    "wafv2.regexpatternset.taglist.taglist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.regexpatternset.taglist.taglist",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.andstatementone.cfnproperties": [
        "Statements",
        "UniqueKey"
    ],
    "wafv2.rulegroup.andstatementone.statements": {
        "Required": "No",
        "Type": "StatementTwos",
        "UniqueKey": "wafv2.rulegroup.andstatementone.statements",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.andstatementtwo.cfnproperties": [
        "Statements",
        "UniqueKey"
    ],
    "wafv2.rulegroup.andstatementtwo.statements": {
        "Required": "No",
        "Type": "StatementThrees",
        "UniqueKey": "wafv2.rulegroup.andstatementtwo.statements",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.bytematchstatement.cfnproperties": [
        "SearchStringBase64",
        "TextTransformations",
        "PositionalConstraint",
        "SearchString",
        "FieldToMatch",
        "UniqueKey"
    ],
    "wafv2.rulegroup.bytematchstatement.fieldtomatch": {
        "Required": "No",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.rulegroup.bytematchstatement.fieldtomatch",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.bytematchstatement.positionalconstraint": {
        "AllowedValues": [
            "CONTAINS",
            "CONTAINS_WORD",
            "ENDS_WITH",
            "EXACTLY",
            "STARTS_WITH"
        ],
        "Pattern": "^[CONTAINS|CONTAINS_WORD|ENDS_WITH|EXACTLY|STARTS_WITH]",
        "Required": "No",
        "SampleValue": "CONTAINS|CONTAINS_WORD|ENDS_WITH|EXACTLY|STARTS_WITH",
        "UniqueKey": "wafv2.rulegroup.bytematchstatement.positionalconstraint",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.bytematchstatement.searchstring": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.bytematchstatement.searchstring",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.bytematchstatement.searchstringbase64": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.bytematchstatement.searchstringbase64",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.bytematchstatement.texttransformations": {
        "Required": "No",
        "Type": "TextTransformations",
        "UniqueKey": "wafv2.rulegroup.bytematchstatement.texttransformations",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.countrycodes.cfnproperties": [
        "CountryCodes",
        "UniqueKey"
    ],
    "wafv2.rulegroup.countrycodes.countrycodes": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.rulegroup.countrycodes.countrycodes",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.fieldtomatch.allqueryarguments": {
        "Required": "No",
        "Type": "AllQueryArguments",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.allqueryarguments",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.fieldtomatch.body": {
        "Required": "No",
        "Type": "Body",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.body",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.fieldtomatch.cfnproperties": [
        "AllQueryArguments",
        "Body",
        "UriPath",
        "QueryString",
        "SingleQueryArgument",
        "Method",
        "SingleHeader",
        "UniqueKey"
    ],
    "wafv2.rulegroup.fieldtomatch.method": {
        "Required": "No",
        "Type": "Method",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.method",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.fieldtomatch.querystring": {
        "Required": "No",
        "Type": "QueryString",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.querystring",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.fieldtomatch.singleheader": {
        "Required": "No",
        "Type": "SingleHeader",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.singleheader",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.fieldtomatch.singlequeryargument": {
        "Required": "No",
        "SampleValue": "TODO-singlequeryargument",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.singlequeryargument",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.fieldtomatch.uripath": {
        "Required": "No",
        "Type": "UriPath",
        "UniqueKey": "wafv2.rulegroup.fieldtomatch.uripath",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.geomatchstatement.cfnproperties": [
        "CountryCodes",
        "UniqueKey"
    ],
    "wafv2.rulegroup.geomatchstatement.countrycodes": {
        "Required": "No",
        "Type": "CountryCodes",
        "UniqueKey": "wafv2.rulegroup.geomatchstatement.countrycodes",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.ipsetreferencestatement.arn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.ipsetreferencestatement.arn",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.ipsetreferencestatement.cfnproperties": [
        "Arn",
        "UniqueKey"
    ],
    "wafv2.rulegroup.notstatementone.cfnproperties": [
        "Statement",
        "UniqueKey"
    ],
    "wafv2.rulegroup.notstatementone.statement": {
        "Required": "No",
        "Type": "StatementTwo",
        "UniqueKey": "wafv2.rulegroup.notstatementone.statement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.notstatementtwo.cfnproperties": [
        "Statement",
        "UniqueKey"
    ],
    "wafv2.rulegroup.notstatementtwo.statement": {
        "Required": "No",
        "Type": "StatementThree",
        "UniqueKey": "wafv2.rulegroup.notstatementtwo.statement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.orstatementone.cfnproperties": [
        "Statements",
        "UniqueKey"
    ],
    "wafv2.rulegroup.orstatementone.statements": {
        "Required": "No",
        "Type": "StatementTwos",
        "UniqueKey": "wafv2.rulegroup.orstatementone.statements",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.orstatementtwo.cfnproperties": [
        "Statements",
        "UniqueKey"
    ],
    "wafv2.rulegroup.orstatementtwo.statements": {
        "Required": "No",
        "Type": "StatementThrees",
        "UniqueKey": "wafv2.rulegroup.orstatementtwo.statements",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.ratebasedstatementone.aggregatekeytype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementone.aggregatekeytype",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.ratebasedstatementone.cfnproperties": [
        "Limit",
        "ScopeDownStatement",
        "AggregateKeyType",
        "UniqueKey"
    ],
    "wafv2.rulegroup.ratebasedstatementone.limit": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementone.limit",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.ratebasedstatementone.scopedownstatement": {
        "Required": "No",
        "Type": "StatementTwo",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementone.scopedownstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.ratebasedstatementtwo.aggregatekeytype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementtwo.aggregatekeytype",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.ratebasedstatementtwo.cfnproperties": [
        "Limit",
        "ScopeDownStatement",
        "AggregateKeyType",
        "UniqueKey"
    ],
    "wafv2.rulegroup.ratebasedstatementtwo.limit": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementtwo.limit",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.ratebasedstatementtwo.scopedownstatement": {
        "Required": "No",
        "Type": "StatementThree",
        "UniqueKey": "wafv2.rulegroup.ratebasedstatementtwo.scopedownstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.regexpatternsetreferencestatement.arn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.regexpatternsetreferencestatement.arn",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.regexpatternsetreferencestatement.cfnproperties": [
        "TextTransformations",
        "FieldToMatch",
        "Arn",
        "UniqueKey"
    ],
    "wafv2.rulegroup.regexpatternsetreferencestatement.fieldtomatch": {
        "Required": "No",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.rulegroup.regexpatternsetreferencestatement.fieldtomatch",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.regexpatternsetreferencestatement.texttransformations": {
        "Required": "No",
        "Type": "TextTransformations",
        "UniqueKey": "wafv2.rulegroup.regexpatternsetreferencestatement.texttransformations",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.rule.action": {
        "Required": "No",
        "Type": "RuleAction",
        "UniqueKey": "wafv2.rulegroup.rule.action",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.rule.cfnproperties": [
        "Action",
        "Priority",
        "VisibilityConfig",
        "Name",
        "Statement",
        "UniqueKey"
    ],
    "wafv2.rulegroup.rule.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[\\w\\-]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.rule.name",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.rule.priority": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "wafv2.rulegroup.rule.priority",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.rule.statement": {
        "Required": "No",
        "Type": "StatementOne",
        "UniqueKey": "wafv2.rulegroup.rule.statement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.rule.visibilityconfig": {
        "Required": "No",
        "Type": "VisibilityConfig",
        "UniqueKey": "wafv2.rulegroup.rule.visibilityconfig",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.ruleaction.allow": {
        "Required": "No",
        "Type": "AllowAction",
        "UniqueKey": "wafv2.rulegroup.ruleaction.allow",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.ruleaction.block": {
        "Required": "No",
        "Type": "BlockAction",
        "UniqueKey": "wafv2.rulegroup.ruleaction.block",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.ruleaction.cfnproperties": [
        "Count",
        "Block",
        "Allow",
        "UniqueKey"
    ],
    "wafv2.rulegroup.ruleaction.count": {
        "Required": "No",
        "Type": "CountAction",
        "UniqueKey": "wafv2.rulegroup.ruleaction.count",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.rules.cfnproperties": [
        "Rules",
        "UniqueKey"
    ],
    "wafv2.rulegroup.rules.rules": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.rulegroup.rules.rules",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.singleheader.cfnproperties": [
        "Name",
        "UniqueKey"
    ],
    "wafv2.rulegroup.singleheader.name": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.singleheader.name",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.singlequeryargument.cfnproperties": [
        "Name",
        "UniqueKey"
    ],
    "wafv2.rulegroup.singlequeryargument.name": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.singlequeryargument.name",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.sizeconstraintstatement.cfnproperties": [
        "ComparisonOperator",
        "TextTransformations",
        "FieldToMatch",
        "Size",
        "UniqueKey"
    ],
    "wafv2.rulegroup.sizeconstraintstatement.comparisonoperator": {
        "Allowed Values": "EQ | GE | GT | LE | LT | NE",
        "AllowedValues": [
            "EQ",
            "GE",
            "GT",
            "LE",
            "LT",
            "NE"
        ],
        "Pattern": "^[EQ|GE|GT|LE|LT|NE]",
        "Required": "No",
        "SampleValue": "EQ|GE|GT|LE|LT|NE",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.sizeconstraintstatement.comparisonoperator",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.sizeconstraintstatement.fieldtomatch": {
        "Required": "No",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.rulegroup.sizeconstraintstatement.fieldtomatch",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.sizeconstraintstatement.size": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "wafv2.rulegroup.sizeconstraintstatement.size",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.sizeconstraintstatement.texttransformations": {
        "Required": "No",
        "Type": "TextTransformations",
        "UniqueKey": "wafv2.rulegroup.sizeconstraintstatement.texttransformations",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.sqlimatchstatement.cfnproperties": [
        "TextTransformations",
        "FieldToMatch",
        "UniqueKey",
        "SampleValue"
    ],
    "wafv2.rulegroup.sqlimatchstatement.fieldtomatch": {
        "Required": "No",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.rulegroup.sqlimatchstatement.fieldtomatch",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.sqlimatchstatement.texttransformations": {
        "Required": "No",
        "Type": "TextTransformations",
        "UniqueKey": "wafv2.rulegroup.sqlimatchstatement.texttransformations",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementone.andstatement": {
        "Required": "No",
        "Type": "AndStatementOne",
        "UniqueKey": "wafv2.rulegroup.statementone.andstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementone.bytematchstatement": {
        "Required": "No",
        "Type": "ByteMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.bytematchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementone.cfnproperties": [
        "RegexPatternSetReferenceStatement",
        "AndStatement",
        "RateBasedStatement",
        "IPSetReferenceStatement",
        "ByteMatchStatement",
        "XssMatchStatement",
        "OrStatement",
        "SqliMatchStatement",
        "NotStatement",
        "GeoMatchStatement",
        "SizeConstraintStatement",
        "UniqueKey"
    ],
    "wafv2.rulegroup.statementone.geomatchstatement": {
        "Required": "No",
        "Type": "GeoMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.geomatchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementone.ipsetreferencestatement": {
        "Required": "No",
        "Type": "IPSetReferenceStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.ipsetreferencestatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementone.notstatement": {
        "Required": "No",
        "Type": "NotStatementOne",
        "UniqueKey": "wafv2.rulegroup.statementone.notstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementone.orstatement": {
        "Required": "No",
        "Type": "OrStatementOne",
        "UniqueKey": "wafv2.rulegroup.statementone.orstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementone.ratebasedstatement": {
        "Required": "No",
        "Type": "RateBasedStatementOne",
        "UniqueKey": "wafv2.rulegroup.statementone.ratebasedstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementone.regexpatternsetreferencestatement": {
        "Required": "No",
        "Type": "RegexPatternSetReferenceStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.regexpatternsetreferencestatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementone.sizeconstraintstatement": {
        "Required": "No",
        "Type": "SizeConstraintStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.sizeconstraintstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementone.sqlimatchstatement": {
        "Required": "No",
        "Type": "SqliMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.sqlimatchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementone.xssmatchstatement": {
        "Required": "No",
        "Type": "XssMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementone.xssmatchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementthree.bytematchstatement": {
        "Required": "No",
        "Type": "ByteMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.bytematchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementthree.cfnproperties": [
        "RegexPatternSetReferenceStatement",
        "ByteMatchStatement",
        "IPSetReferenceStatement",
        "XssMatchStatement",
        "SqliMatchStatement",
        "SizeConstraintStatement",
        "GeoMatchStatement",
        "UniqueKey"
    ],
    "wafv2.rulegroup.statementthree.geomatchstatement": {
        "Required": "No",
        "Type": "GeoMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.geomatchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementthree.ipsetreferencestatement": {
        "Required": "No",
        "Type": "IPSetReferenceStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.ipsetreferencestatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementthree.regexpatternsetreferencestatement": {
        "Required": "No",
        "Type": "RegexPatternSetReferenceStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.regexpatternsetreferencestatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementthree.sizeconstraintstatement": {
        "Required": "No",
        "Type": "SizeConstraintStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.sizeconstraintstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementthree.sqlimatchstatement": {
        "Required": "No",
        "Type": "SqliMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.sqlimatchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementthree.xssmatchstatement": {
        "Required": "No",
        "Type": "XssMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementthree.xssmatchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementthrees.cfnproperties": [
        "StatementThrees",
        "UniqueKey"
    ],
    "wafv2.rulegroup.statementthrees.statementthrees": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.rulegroup.statementthrees.statementthrees",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementtwo.andstatement": {
        "Required": "No",
        "Type": "AndStatementTwo",
        "UniqueKey": "wafv2.rulegroup.statementtwo.andstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementtwo.bytematchstatement": {
        "Required": "No",
        "Type": "ByteMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.bytematchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementtwo.cfnproperties": [
        "RegexPatternSetReferenceStatement",
        "AndStatement",
        "RateBasedStatement",
        "IPSetReferenceStatement",
        "ByteMatchStatement",
        "XssMatchStatement",
        "OrStatement",
        "SqliMatchStatement",
        "NotStatement",
        "GeoMatchStatement",
        "SizeConstraintStatement",
        "UniqueKey"
    ],
    "wafv2.rulegroup.statementtwo.geomatchstatement": {
        "Required": "No",
        "Type": "GeoMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.geomatchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementtwo.ipsetreferencestatement": {
        "Required": "No",
        "Type": "IPSetReferenceStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.ipsetreferencestatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementtwo.notstatement": {
        "Required": "No",
        "Type": "NotStatementTwo",
        "UniqueKey": "wafv2.rulegroup.statementtwo.notstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementtwo.orstatement": {
        "Required": "No",
        "Type": "OrStatementTwo",
        "UniqueKey": "wafv2.rulegroup.statementtwo.orstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementtwo.ratebasedstatement": {
        "Required": "No",
        "Type": "RateBasedStatementTwo",
        "UniqueKey": "wafv2.rulegroup.statementtwo.ratebasedstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementtwo.regexpatternsetreferencestatement": {
        "Required": "No",
        "Type": "RegexPatternSetReferenceStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.regexpatternsetreferencestatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementtwo.sizeconstraintstatement": {
        "Required": "No",
        "Type": "SizeConstraintStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.sizeconstraintstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementtwo.sqlimatchstatement": {
        "Required": "No",
        "Type": "SqliMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.sqlimatchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementtwo.xssmatchstatement": {
        "Required": "No",
        "Type": "XssMatchStatement",
        "UniqueKey": "wafv2.rulegroup.statementtwo.xssmatchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.statementtwos.cfnproperties": [
        "StatementTwos",
        "UniqueKey"
    ],
    "wafv2.rulegroup.statementtwos.statementtwos": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.rulegroup.statementtwos.statementtwos",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.taglist.cfnproperties": [
        "TagList",
        "UniqueKey"
    ],
    "wafv2.rulegroup.taglist.taglist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.rulegroup.taglist.taglist",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.texttransformation.cfnproperties": [
        "Priority",
        "Type",
        "COMPRESS_WHITE_SPACE",
        "UniqueKey"
    ],
    "wafv2.rulegroup.texttransformation.compress_white_space": {
        "AllowedValues": [
            "CMD_LINE",
            "COMPRESS_WHITE_SPACE",
            "HTML_ENTITY_DECODE",
            "LOWERCASE",
            "NONE",
            "URL_DECODE"
        ],
        "Pattern": "^[CMD_LINE|COMPRESS_WHITE_SPACE|HTML_ENTITY_DECODE|LOWERCASE|NONE|URL_DECODE]",
        "Required": "No",
        "SampleValue": "CMD_LINE|COMPRESS_WHITE_SPACE|HTML_ENTITY_DECODE|LOWERCASE|NONE|URL_DECODE",
        "UniqueKey": "wafv2.rulegroup.texttransformation.compress_white_space",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.texttransformation.priority": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "wafv2.rulegroup.texttransformation.priority",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.texttransformation.type": {
        "UniqueKey": "wafv2.rulegroup.texttransformation.type"
    },
    "wafv2.rulegroup.texttransformations.cfnproperties": [
        "TextTransformations",
        "UniqueKey"
    ],
    "wafv2.rulegroup.texttransformations.texttransformations": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.rulegroup.texttransformations.texttransformations",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.visibilityconfig.cfnproperties": [
        "SampledRequestsEnabled",
        "CloudWatchMetricsEnabled",
        "MetricName",
        "UniqueKey"
    ],
    "wafv2.rulegroup.visibilityconfig.cloudwatchmetricsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "wafv2.rulegroup.visibilityconfig.cloudwatchmetricsenabled",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.visibilityconfig.metricname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^[\\w#:\\.\\-/]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.rulegroup.visibilityconfig.metricname",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.visibilityconfig.sampledrequestsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "wafv2.rulegroup.visibilityconfig.sampledrequestsenabled",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.xssmatchstatement.cfnproperties": [
        "TextTransformations",
        "FieldToMatch",
        "UniqueKey",
        "SampleValue"
    ],
    "wafv2.rulegroup.xssmatchstatement.fieldtomatch": {
        "Required": "No",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.rulegroup.xssmatchstatement.fieldtomatch",
        "UpdateRequires": "No interruption"
    },
    "wafv2.rulegroup.xssmatchstatement.texttransformations": {
        "Required": "No",
        "Type": "TextTransformations",
        "UniqueKey": "wafv2.rulegroup.xssmatchstatement.texttransformations",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.andstatementone.cfnproperties": [
        "Statements",
        "UniqueKey"
    ],
    "wafv2.webacl.andstatementone.statements": {
        "Required": "No",
        "Type": "StatementTwos",
        "UniqueKey": "wafv2.webacl.andstatementone.statements",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.andstatementtwo.cfnproperties": [
        "Statements",
        "UniqueKey"
    ],
    "wafv2.webacl.andstatementtwo.statements": {
        "Required": "No",
        "Type": "StatementThrees",
        "UniqueKey": "wafv2.webacl.andstatementtwo.statements",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.bytematchstatement.cfnproperties": [
        "SearchStringBase64",
        "TextTransformations",
        "PositionalConstraint",
        "SearchString",
        "FieldToMatch",
        "UniqueKey"
    ],
    "wafv2.webacl.bytematchstatement.fieldtomatch": {
        "Required": "No",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.webacl.bytematchstatement.fieldtomatch",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.bytematchstatement.positionalconstraint": {
        "AllowedValues": [
            "CONTAINS",
            "CONTAINS_WORD",
            "ENDS_WITH",
            "EXACTLY",
            "STARTS_WITH"
        ],
        "Pattern": "^[CONTAINS|CONTAINS_WORD|ENDS_WITH|EXACTLY|STARTS_WITH]",
        "Required": "No",
        "SampleValue": "CONTAINS|CONTAINS_WORD|ENDS_WITH|EXACTLY|STARTS_WITH",
        "UniqueKey": "wafv2.webacl.bytematchstatement.positionalconstraint",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.bytematchstatement.searchstring": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.bytematchstatement.searchstring",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.bytematchstatement.searchstringbase64": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.bytematchstatement.searchstringbase64",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.bytematchstatement.texttransformations": {
        "Required": "No",
        "Type": "TextTransformations",
        "UniqueKey": "wafv2.webacl.bytematchstatement.texttransformations",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.countrycodes.cfnproperties": [
        "CountryCodes",
        "UniqueKey"
    ],
    "wafv2.webacl.countrycodes.countrycodes": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.countrycodes.countrycodes",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.defaultaction.allow": {
        "Required": "No",
        "Type": "AllowAction",
        "UniqueKey": "wafv2.webacl.defaultaction.allow",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.defaultaction.block": {
        "Required": "No",
        "Type": "BlockAction",
        "UniqueKey": "wafv2.webacl.defaultaction.block",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.defaultaction.cfnproperties": [
        "Block",
        "Allow",
        "UniqueKey",
        "SampleValue"
    ],
    "wafv2.webacl.excludedrule.cfnproperties": [
        "Name",
        "UniqueKey"
    ],
    "wafv2.webacl.excludedrule.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[\\w\\-]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.excludedrule.name",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.excludedrules.cfnproperties": [
        "ExcludedRules",
        "UniqueKey"
    ],
    "wafv2.webacl.excludedrules.excludedrules": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.excludedrules.excludedrules",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.fieldtomatch.allqueryarguments": {
        "Required": "No",
        "Type": "AllQueryArguments",
        "UniqueKey": "wafv2.webacl.fieldtomatch.allqueryarguments",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.fieldtomatch.body": {
        "Required": "No",
        "Type": "Body",
        "UniqueKey": "wafv2.webacl.fieldtomatch.body",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.fieldtomatch.cfnproperties": [
        "AllQueryArguments",
        "Body",
        "UriPath",
        "QueryString",
        "SingleQueryArgument",
        "Method",
        "SingleHeader",
        "UniqueKey"
    ],
    "wafv2.webacl.fieldtomatch.method": {
        "Required": "No",
        "Type": "Method",
        "UniqueKey": "wafv2.webacl.fieldtomatch.method",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.fieldtomatch.querystring": {
        "Required": "No",
        "Type": "QueryString",
        "UniqueKey": "wafv2.webacl.fieldtomatch.querystring",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.fieldtomatch.singleheader": {
        "Required": "No",
        "Type": "SingleHeader",
        "UniqueKey": "wafv2.webacl.fieldtomatch.singleheader",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.fieldtomatch.singlequeryargument": {
        "Required": "No",
        "SampleValue": "TODO-singlequeryargument",
        "UniqueKey": "wafv2.webacl.fieldtomatch.singlequeryargument",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.fieldtomatch.uripath": {
        "Required": "No",
        "Type": "UriPath",
        "UniqueKey": "wafv2.webacl.fieldtomatch.uripath",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.geomatchstatement.cfnproperties": [
        "CountryCodes",
        "UniqueKey"
    ],
    "wafv2.webacl.geomatchstatement.countrycodes": {
        "Required": "No",
        "Type": "CountryCodes",
        "UniqueKey": "wafv2.webacl.geomatchstatement.countrycodes",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.ipsetreferencestatement.arn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.ipsetreferencestatement.arn",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.ipsetreferencestatement.cfnproperties": [
        "Arn",
        "UniqueKey"
    ],
    "wafv2.webacl.managedrulegroupstatement.cfnproperties": [
        "ExcludedRules",
        "Name",
        "VendorName",
        "UniqueKey"
    ],
    "wafv2.webacl.managedrulegroupstatement.excludedrules": {
        "Required": "No",
        "Type": "ExcludedRules",
        "UniqueKey": "wafv2.webacl.managedrulegroupstatement.excludedrules",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.managedrulegroupstatement.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[\\w\\-]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.managedrulegroupstatement.name",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.managedrulegroupstatement.vendorname": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.managedrulegroupstatement.vendorname",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.notstatementone.cfnproperties": [
        "Statement",
        "UniqueKey"
    ],
    "wafv2.webacl.notstatementone.statement": {
        "Required": "No",
        "Type": "StatementTwo",
        "UniqueKey": "wafv2.webacl.notstatementone.statement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.notstatementtwo.cfnproperties": [
        "Statement",
        "UniqueKey"
    ],
    "wafv2.webacl.notstatementtwo.statement": {
        "Required": "No",
        "Type": "StatementThree",
        "UniqueKey": "wafv2.webacl.notstatementtwo.statement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.orstatementone.cfnproperties": [
        "Statements",
        "UniqueKey"
    ],
    "wafv2.webacl.orstatementone.statements": {
        "Required": "No",
        "Type": "StatementTwos",
        "UniqueKey": "wafv2.webacl.orstatementone.statements",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.orstatementtwo.cfnproperties": [
        "Statements",
        "UniqueKey"
    ],
    "wafv2.webacl.orstatementtwo.statements": {
        "Required": "No",
        "Type": "StatementThrees",
        "UniqueKey": "wafv2.webacl.orstatementtwo.statements",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.overrideaction.cfnproperties": [
        "Count",
        "None",
        "UniqueKey",
        "SampleValue"
    ],
    "wafv2.webacl.overrideaction.count": {
        "Required": "No",
        "Type": "CountAction",
        "UniqueKey": "wafv2.webacl.overrideaction.count",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.overrideaction.none": {
        "Required": "No",
        "Type": "NoneAction",
        "UniqueKey": "wafv2.webacl.overrideaction.none",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.ratebasedstatementone.aggregatekeytype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.ratebasedstatementone.aggregatekeytype",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.ratebasedstatementone.cfnproperties": [
        "Limit",
        "ScopeDownStatement",
        "AggregateKeyType",
        "UniqueKey"
    ],
    "wafv2.webacl.ratebasedstatementone.limit": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "wafv2.webacl.ratebasedstatementone.limit",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.ratebasedstatementone.scopedownstatement": {
        "Required": "No",
        "Type": "StatementTwo",
        "UniqueKey": "wafv2.webacl.ratebasedstatementone.scopedownstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.ratebasedstatementtwo.aggregatekeytype": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.ratebasedstatementtwo.aggregatekeytype",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.ratebasedstatementtwo.cfnproperties": [
        "Limit",
        "ScopeDownStatement",
        "AggregateKeyType",
        "UniqueKey"
    ],
    "wafv2.webacl.ratebasedstatementtwo.limit": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "wafv2.webacl.ratebasedstatementtwo.limit",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.ratebasedstatementtwo.scopedownstatement": {
        "Required": "No",
        "Type": "StatementThree",
        "UniqueKey": "wafv2.webacl.ratebasedstatementtwo.scopedownstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.regexpatternsetreferencestatement.arn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.regexpatternsetreferencestatement.arn",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.regexpatternsetreferencestatement.cfnproperties": [
        "TextTransformations",
        "FieldToMatch",
        "Arn",
        "UniqueKey"
    ],
    "wafv2.webacl.regexpatternsetreferencestatement.fieldtomatch": {
        "Required": "No",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.webacl.regexpatternsetreferencestatement.fieldtomatch",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.regexpatternsetreferencestatement.texttransformations": {
        "Required": "No",
        "Type": "TextTransformations",
        "UniqueKey": "wafv2.webacl.regexpatternsetreferencestatement.texttransformations",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.rule.action": {
        "Required": "No",
        "Type": "RuleAction",
        "UniqueKey": "wafv2.webacl.rule.action",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.rule.cfnproperties": [
        "OverrideAction",
        "Name",
        "VisibilityConfig",
        "Priority",
        "Statement",
        "Action",
        "UniqueKey"
    ],
    "wafv2.webacl.rule.name": {
        "Maximum": "128",
        "Minimum": "1",
        "Pattern": "^[\\w\\-]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.rule.name",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.rule.overrideaction": {
        "Required": "No",
        "Type": "OverrideAction",
        "UniqueKey": "wafv2.webacl.rule.overrideaction",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.rule.priority": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "wafv2.webacl.rule.priority",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.rule.statement": {
        "Required": "No",
        "Type": "StatementOne",
        "UniqueKey": "wafv2.webacl.rule.statement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.rule.visibilityconfig": {
        "Required": "No",
        "Type": "VisibilityConfig",
        "UniqueKey": "wafv2.webacl.rule.visibilityconfig",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.ruleaction.allow": {
        "Required": "No",
        "Type": "AllowAction",
        "UniqueKey": "wafv2.webacl.ruleaction.allow",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.ruleaction.block": {
        "Required": "No",
        "Type": "BlockAction",
        "UniqueKey": "wafv2.webacl.ruleaction.block",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.ruleaction.cfnproperties": [
        "Count",
        "Block",
        "Allow",
        "UniqueKey"
    ],
    "wafv2.webacl.ruleaction.count": {
        "Required": "No",
        "Type": "CountAction",
        "UniqueKey": "wafv2.webacl.ruleaction.count",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.rulegroupreferencestatement.arn": {
        "Maximum": "2048",
        "Minimum": "20",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.rulegroupreferencestatement.arn",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.rulegroupreferencestatement.cfnproperties": [
        "ExcludedRules",
        "Arn",
        "UniqueKey",
        "SampleValue"
    ],
    "wafv2.webacl.rulegroupreferencestatement.excludedrules": {
        "Required": "No",
        "Type": "ExcludedRules",
        "UniqueKey": "wafv2.webacl.rulegroupreferencestatement.excludedrules",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.rules.cfnproperties": [
        "Rules",
        "UniqueKey"
    ],
    "wafv2.webacl.rules.rules": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.rules.rules",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.singleheader.cfnproperties": [
        "Name",
        "UniqueKey"
    ],
    "wafv2.webacl.singleheader.name": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.singleheader.name",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.singlequeryargument.cfnproperties": [
        "Name",
        "UniqueKey"
    ],
    "wafv2.webacl.singlequeryargument.name": {
        "Maximum": "64",
        "Minimum": "1",
        "Pattern": ".*\\S.*",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.singlequeryargument.name",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.sizeconstraintstatement.cfnproperties": [
        "ComparisonOperator",
        "TextTransformations",
        "FieldToMatch",
        "Size",
        "UniqueKey"
    ],
    "wafv2.webacl.sizeconstraintstatement.comparisonoperator": {
        "Allowed Values": "EQ | GE | GT | LE | LT | NE",
        "AllowedValues": [
            "EQ",
            "GE",
            "GT",
            "LE",
            "LT",
            "NE"
        ],
        "Pattern": "^[EQ|GE|GT|LE|LT|NE]",
        "Required": "No",
        "SampleValue": "EQ|GE|GT|LE|LT|NE",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.sizeconstraintstatement.comparisonoperator",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.sizeconstraintstatement.fieldtomatch": {
        "Required": "No",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.webacl.sizeconstraintstatement.fieldtomatch",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.sizeconstraintstatement.size": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "wafv2.webacl.sizeconstraintstatement.size",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.sizeconstraintstatement.texttransformations": {
        "Required": "No",
        "Type": "TextTransformations",
        "UniqueKey": "wafv2.webacl.sizeconstraintstatement.texttransformations",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.sqlimatchstatement.cfnproperties": [
        "TextTransformations",
        "FieldToMatch",
        "UniqueKey",
        "SampleValue"
    ],
    "wafv2.webacl.sqlimatchstatement.fieldtomatch": {
        "Required": "No",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.webacl.sqlimatchstatement.fieldtomatch",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.sqlimatchstatement.texttransformations": {
        "Required": "No",
        "Type": "TextTransformations",
        "UniqueKey": "wafv2.webacl.sqlimatchstatement.texttransformations",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementone.andstatement": {
        "Required": "No",
        "Type": "AndStatementOne",
        "UniqueKey": "wafv2.webacl.statementone.andstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementone.bytematchstatement": {
        "Required": "No",
        "Type": "ByteMatchStatement",
        "UniqueKey": "wafv2.webacl.statementone.bytematchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementone.cfnproperties": [
        "RegexPatternSetReferenceStatement",
        "AndStatement",
        "RateBasedStatement",
        "RuleGroupReferenceStatement",
        "ManagedRuleGroupStatement",
        "IPSetReferenceStatement",
        "ByteMatchStatement",
        "XssMatchStatement",
        "OrStatement",
        "SqliMatchStatement",
        "NotStatement",
        "GeoMatchStatement",
        "SizeConstraintStatement",
        "UniqueKey"
    ],
    "wafv2.webacl.statementone.geomatchstatement": {
        "Required": "No",
        "Type": "GeoMatchStatement",
        "UniqueKey": "wafv2.webacl.statementone.geomatchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementone.ipsetreferencestatement": {
        "Required": "No",
        "Type": "IPSetReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementone.ipsetreferencestatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementone.managedrulegroupstatement": {
        "Required": "No",
        "Type": "ManagedRuleGroupStatement",
        "UniqueKey": "wafv2.webacl.statementone.managedrulegroupstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementone.notstatement": {
        "Required": "No",
        "Type": "NotStatementOne",
        "UniqueKey": "wafv2.webacl.statementone.notstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementone.orstatement": {
        "Required": "No",
        "Type": "OrStatementOne",
        "UniqueKey": "wafv2.webacl.statementone.orstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementone.ratebasedstatement": {
        "Required": "No",
        "Type": "RateBasedStatementOne",
        "UniqueKey": "wafv2.webacl.statementone.ratebasedstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementone.regexpatternsetreferencestatement": {
        "Required": "No",
        "Type": "RegexPatternSetReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementone.regexpatternsetreferencestatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementone.rulegroupreferencestatement": {
        "Required": "No",
        "Type": "RuleGroupReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementone.rulegroupreferencestatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementone.sizeconstraintstatement": {
        "Required": "No",
        "Type": "SizeConstraintStatement",
        "UniqueKey": "wafv2.webacl.statementone.sizeconstraintstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementone.sqlimatchstatement": {
        "Required": "No",
        "Type": "SqliMatchStatement",
        "UniqueKey": "wafv2.webacl.statementone.sqlimatchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementone.xssmatchstatement": {
        "Required": "No",
        "Type": "XssMatchStatement",
        "UniqueKey": "wafv2.webacl.statementone.xssmatchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementthree.bytematchstatement": {
        "Required": "No",
        "Type": "ByteMatchStatement",
        "UniqueKey": "wafv2.webacl.statementthree.bytematchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementthree.cfnproperties": [
        "RegexPatternSetReferenceStatement",
        "ByteMatchStatement",
        "RuleGroupReferenceStatement",
        "ManagedRuleGroupStatement",
        "IPSetReferenceStatement",
        "XssMatchStatement",
        "SqliMatchStatement",
        "SizeConstraintStatement",
        "GeoMatchStatement",
        "UniqueKey"
    ],
    "wafv2.webacl.statementthree.geomatchstatement": {
        "Required": "No",
        "Type": "GeoMatchStatement",
        "UniqueKey": "wafv2.webacl.statementthree.geomatchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementthree.ipsetreferencestatement": {
        "Required": "No",
        "Type": "IPSetReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementthree.ipsetreferencestatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementthree.managedrulegroupstatement": {
        "Required": "No",
        "Type": "ManagedRuleGroupStatement",
        "UniqueKey": "wafv2.webacl.statementthree.managedrulegroupstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementthree.regexpatternsetreferencestatement": {
        "Required": "No",
        "Type": "RegexPatternSetReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementthree.regexpatternsetreferencestatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementthree.rulegroupreferencestatement": {
        "Required": "No",
        "Type": "RuleGroupReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementthree.rulegroupreferencestatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementthree.sizeconstraintstatement": {
        "Required": "No",
        "Type": "SizeConstraintStatement",
        "UniqueKey": "wafv2.webacl.statementthree.sizeconstraintstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementthree.sqlimatchstatement": {
        "Required": "No",
        "Type": "SqliMatchStatement",
        "UniqueKey": "wafv2.webacl.statementthree.sqlimatchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementthree.xssmatchstatement": {
        "Required": "No",
        "Type": "XssMatchStatement",
        "UniqueKey": "wafv2.webacl.statementthree.xssmatchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementthrees.cfnproperties": [
        "StatementThrees",
        "UniqueKey"
    ],
    "wafv2.webacl.statementthrees.statementthrees": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.statementthrees.statementthrees",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementtwo.andstatement": {
        "Required": "No",
        "Type": "AndStatementTwo",
        "UniqueKey": "wafv2.webacl.statementtwo.andstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementtwo.bytematchstatement": {
        "Required": "No",
        "Type": "ByteMatchStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.bytematchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementtwo.cfnproperties": [
        "RegexPatternSetReferenceStatement",
        "AndStatement",
        "RateBasedStatement",
        "RuleGroupReferenceStatement",
        "ManagedRuleGroupStatement",
        "IPSetReferenceStatement",
        "ByteMatchStatement",
        "XssMatchStatement",
        "OrStatement",
        "SqliMatchStatement",
        "NotStatement",
        "GeoMatchStatement",
        "SizeConstraintStatement",
        "UniqueKey"
    ],
    "wafv2.webacl.statementtwo.geomatchstatement": {
        "Required": "No",
        "Type": "GeoMatchStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.geomatchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementtwo.ipsetreferencestatement": {
        "Required": "No",
        "Type": "IPSetReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.ipsetreferencestatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementtwo.managedrulegroupstatement": {
        "Required": "No",
        "Type": "ManagedRuleGroupStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.managedrulegroupstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementtwo.notstatement": {
        "Required": "No",
        "Type": "NotStatementTwo",
        "UniqueKey": "wafv2.webacl.statementtwo.notstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementtwo.orstatement": {
        "Required": "No",
        "Type": "OrStatementTwo",
        "UniqueKey": "wafv2.webacl.statementtwo.orstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementtwo.ratebasedstatement": {
        "Required": "No",
        "Type": "RateBasedStatementTwo",
        "UniqueKey": "wafv2.webacl.statementtwo.ratebasedstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementtwo.regexpatternsetreferencestatement": {
        "Required": "No",
        "Type": "RegexPatternSetReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.regexpatternsetreferencestatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementtwo.rulegroupreferencestatement": {
        "Required": "No",
        "Type": "RuleGroupReferenceStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.rulegroupreferencestatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementtwo.sizeconstraintstatement": {
        "Required": "No",
        "Type": "SizeConstraintStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.sizeconstraintstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementtwo.sqlimatchstatement": {
        "Required": "No",
        "Type": "SqliMatchStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.sqlimatchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementtwo.xssmatchstatement": {
        "Required": "No",
        "Type": "XssMatchStatement",
        "UniqueKey": "wafv2.webacl.statementtwo.xssmatchstatement",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.statementtwos.cfnproperties": [
        "StatementTwos",
        "UniqueKey"
    ],
    "wafv2.webacl.statementtwos.statementtwos": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.statementtwos.statementtwos",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.taglist.cfnproperties": [
        "TagList",
        "UniqueKey"
    ],
    "wafv2.webacl.taglist.taglist": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.taglist.taglist",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.texttransformation.cfnproperties": [
        "Priority",
        "Type",
        "COMPRESS_WHITE_SPACE",
        "UniqueKey"
    ],
    "wafv2.webacl.texttransformation.compress_white_space": {
        "AllowedValues": [
            "CMD_LINE",
            "COMPRESS_WHITE_SPACE",
            "HTML_ENTITY_DECODE",
            "LOWERCASE",
            "NONE",
            "URL_DECODE"
        ],
        "Pattern": "^[CMD_LINE|COMPRESS_WHITE_SPACE|HTML_ENTITY_DECODE|LOWERCASE|NONE|URL_DECODE]",
        "Required": "No",
        "SampleValue": "CMD_LINE|COMPRESS_WHITE_SPACE|HTML_ENTITY_DECODE|LOWERCASE|NONE|URL_DECODE",
        "UniqueKey": "wafv2.webacl.texttransformation.compress_white_space",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.texttransformation.priority": {
        "Minimum": "0",
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "wafv2.webacl.texttransformation.priority",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.texttransformation.type": {
        "UniqueKey": "wafv2.webacl.texttransformation.type"
    },
    "wafv2.webacl.texttransformations.cfnproperties": [
        "TextTransformations",
        "UniqueKey"
    ],
    "wafv2.webacl.texttransformations.texttransformations": {
        "Required": "No",
        "Type": "List",
        "UniqueKey": "wafv2.webacl.texttransformations.texttransformations",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.visibilityconfig.cfnproperties": [
        "SampledRequestsEnabled",
        "CloudWatchMetricsEnabled",
        "MetricName",
        "UniqueKey"
    ],
    "wafv2.webacl.visibilityconfig.cloudwatchmetricsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "wafv2.webacl.visibilityconfig.cloudwatchmetricsenabled",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.visibilityconfig.metricname": {
        "Maximum": "255",
        "Minimum": "1",
        "Pattern": "^[\\w#:\\.\\-/]+$",
        "Required": "No",
        "Type": "String",
        "UniqueKey": "wafv2.webacl.visibilityconfig.metricname",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.visibilityconfig.sampledrequestsenabled": {
        "AllowedValues": [
            "True",
            "False"
        ],
        "Pattern": "^[True|False]",
        "Required": "No",
        "SampleValue": "True|False",
        "Type": "Boolean",
        "UniqueKey": "wafv2.webacl.visibilityconfig.sampledrequestsenabled",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.xssmatchstatement.cfnproperties": [
        "TextTransformations",
        "FieldToMatch",
        "UniqueKey",
        "SampleValue"
    ],
    "wafv2.webacl.xssmatchstatement.fieldtomatch": {
        "Required": "No",
        "Type": "FieldToMatch",
        "UniqueKey": "wafv2.webacl.xssmatchstatement.fieldtomatch",
        "UpdateRequires": "No interruption"
    },
    "wafv2.webacl.xssmatchstatement.texttransformations": {
        "Required": "No",
        "Type": "TextTransformations",
        "UniqueKey": "wafv2.webacl.xssmatchstatement.texttransformations",
        "UpdateRequires": "No interruption"
    },
    "waitcondition.cfnproperties": [
        "Count",
        "Handle",
        "Timeout",
        "UniqueKey"
    ],
    "waitcondition.count": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "waitcondition.count",
        "UpdateRequires": "No interruption"
    },
    "waitcondition.handle": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "waitcondition.handle",
        "UpdateRequires": "No interruption"
    },
    "waitcondition.timeout": {
        "Required": "No",
        "Type": "String",
        "UniqueKey": "waitcondition.timeout",
        "UpdateRequires": "No interruption"
    },
    "workspaces.workspace.workspaceproperties": [
        "UserVolumeSizeGib",
        "ComputeTypeName",
        "RunningMode",
        "RootVolumeSizeGib",
        "RunningModeAutoStopTimeoutInMinutes",
        "UniqueKey"
    ],
    "workspaces.workspace.workspaceproperties.cfnproperties": [
        "UserVolumeSizeGib",
        "ComputeTypeName",
        "RunningMode",
        "RootVolumeSizeGib",
        "RunningModeAutoStopTimeoutInMinutes",
        "UniqueKey"
    ],
    "workspaces.workspace.workspaceproperties.computetypename": {
        "Allowed Values": "GRAPHICS | GRAPHICSPRO | PERFORMANCE | POWER | POWERPRO | STANDARD | VALUE",
        "AllowedValues": [
            "GRAPHICS",
            "GRAPHICSPRO",
            "PERFORMANCE",
            "POWER",
            "POWERPRO",
            "STANDARD",
            "VALUE"
        ],
        "Pattern": "^[GRAPHICS|GRAPHICSPRO|PERFORMANCE|POWER|POWERPRO|STANDARD|VALUE]",
        "Required": "No",
        "SampleValue": "GRAPHICS|GRAPHICSPRO|PERFORMANCE|POWER|POWERPRO|STANDARD|VALUE",
        "Type": "String",
        "UniqueKey": "workspaces.workspace.workspaceproperties.computetypename",
        "UpdateRequires": "No interruption"
    },
    "workspaces.workspace.workspaceproperties.rootvolumesizegib": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "workspaces.workspace.workspaceproperties.rootvolumesizegib",
        "UpdateRequires": "No interruption"
    },
    "workspaces.workspace.workspaceproperties.runningmode": {
        "Allowed Values": "ALWAYS_ON | AUTO_STOP",
        "AllowedValues": [
            "ALWAYS_ON",
            "AUTO_STOP"
        ],
        "Pattern": "^[ALWAYS_ON|AUTO_STOP]",
        "Required": "No",
        "SampleValue": "ALWAYS_ON|AUTO_STOP",
        "Type": "String",
        "UniqueKey": "workspaces.workspace.workspaceproperties.runningmode",
        "UpdateRequires": "No interruption"
    },
    "workspaces.workspace.workspaceproperties.runningmodeautostoptimeoutinminutes": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "workspaces.workspace.workspaceproperties.runningmodeautostoptimeoutinminutes",
        "UpdateRequires": "No interruption"
    },
    "workspaces.workspace.workspaceproperties.uservolumesizegib": {
        "Required": "No",
        "Type": "Integer",
        "UniqueKey": "workspaces.workspace.workspaceproperties.uservolumesizegib",
        "UpdateRequires": "No interruption"
    }
}